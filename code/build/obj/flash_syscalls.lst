ARM GAS  /tmp/ccCWfaoM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"syscalls.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._read,"ax",%progbits
  19              		.align	2
  20              		.global	_read
  21              		.thumb
  22              		.thumb_func
  23              		.type	_read, %function
  24              	_read:
  25              	.LFB35:
  26              		.file 1 "board/syscalls.c"
   1:board/syscalls.c **** /* ----------------------------------------------------------------------------
   2:board/syscalls.c ****  *         ATMEL Microcontroller Software Support
   3:board/syscalls.c ****  * ----------------------------------------------------------------------------
   4:board/syscalls.c ****  * Copyright (c) 2009, Atmel Corporation
   5:board/syscalls.c ****  *
   6:board/syscalls.c ****  * All rights reserved.
   7:board/syscalls.c ****  *
   8:board/syscalls.c ****  * Redistribution and use in source and binary forms, with or without
   9:board/syscalls.c ****  * modification, are permitted provided that the following conditions are met:
  10:board/syscalls.c ****  *
  11:board/syscalls.c ****  * - Redistributions of source code must retain the above copyright notice,
  12:board/syscalls.c ****  * this list of conditions and the disclaimer below.
  13:board/syscalls.c ****  *
  14:board/syscalls.c ****  * Atmel's name may not be used to endorse or promote products derived from
  15:board/syscalls.c ****  * this software without specific prior written permission.
  16:board/syscalls.c ****  *
  17:board/syscalls.c ****  * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
  18:board/syscalls.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  19:board/syscalls.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  20:board/syscalls.c ****  * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:board/syscalls.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  22:board/syscalls.c ****  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  23:board/syscalls.c ****  * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  24:board/syscalls.c ****  * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  25:board/syscalls.c ****  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  26:board/syscalls.c ****  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:board/syscalls.c ****  * ----------------------------------------------------------------------------
  28:board/syscalls.c ****  */
  29:board/syscalls.c **** 
  30:board/syscalls.c **** /**
  31:board/syscalls.c ****   * \file syscalls.c
ARM GAS  /tmp/ccCWfaoM.s 			page 2


  32:board/syscalls.c ****   *
  33:board/syscalls.c ****   * Implementation of newlib syscall.
  34:board/syscalls.c ****   *
  35:board/syscalls.c ****   */
  36:board/syscalls.c **** 
  37:board/syscalls.c **** /*----------------------------------------------------------------------------
  38:board/syscalls.c ****  *        Headers
  39:board/syscalls.c ****  *----------------------------------------------------------------------------*/
  40:board/syscalls.c **** 
  41:board/syscalls.c **** 
  42:board/syscalls.c **** #include "board.h"
  43:board/syscalls.c **** 
  44:board/syscalls.c **** #include <stdio.h>
  45:board/syscalls.c **** #include <stdarg.h>
  46:board/syscalls.c **** #include <errno.h>
  47:board/syscalls.c **** #include <sys/types.h>
  48:board/syscalls.c **** #include <sys/stat.h>
  49:board/syscalls.c **** #include <sys/unistd.h>
  50:board/syscalls.c **** 
  51:board/syscalls.c **** /*----------------------------------------------------------------------------
  52:board/syscalls.c ****  *        Exported variables
  53:board/syscalls.c ****  *----------------------------------------------------------------------------*/
  54:board/syscalls.c **** 
  55:board/syscalls.c **** #undef errno
  56:board/syscalls.c **** extern int errno ;
  57:board/syscalls.c **** extern int  _end ;
  58:board/syscalls.c **** 
  59:board/syscalls.c **** /*----------------------------------------------------------------------------
  60:board/syscalls.c ****  *        Exported functions
  61:board/syscalls.c ****  *----------------------------------------------------------------------------*/
  62:board/syscalls.c **** extern int _read(int file, char *ptr, int len)
  63:board/syscalls.c **** {
  27              		.loc 1 63 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 F860     		str	r0, [r7, #12]
  43 0008 B960     		str	r1, [r7, #8]
  44 000a 7A60     		str	r2, [r7, #4]
  64:board/syscalls.c **** 	switch (file)
  45              		.loc 1 64 0
  46 000c FB68     		ldr	r3, [r7, #12]
  47 000e 002B     		cmp	r3, #0
  48 0010 02D0     		beq	.L3
  49 0012 022B     		cmp	r3, #2
  50 0014 08D0     		beq	.L4
ARM GAS  /tmp/ccCWfaoM.s 			page 3


  51 0016 0DE0     		b	.L7
  52              	.L3:
  65:board/syscalls.c **** 	{
  66:board/syscalls.c **** #ifdef read_stdin
  67:board/syscalls.c **** 		case STDIN_FILENO:
  68:board/syscalls.c **** 			len = read_stdin(ptr, len);
  53              		.loc 1 68 0
  54 0018 7B68     		ldr	r3, [r7, #4]
  55 001a 9BB2     		uxth	r3, r3
  56 001c B868     		ldr	r0, [r7, #8]
  57 001e 1946     		mov	r1, r3
  58 0020 FFF7FEFF 		bl	USBC_Gets
  59 0024 7860     		str	r0, [r7, #4]
  69:board/syscalls.c **** 		break;
  60              		.loc 1 69 0
  61 0026 0FE0     		b	.L5
  62              	.L4:
  70:board/syscalls.c **** #endif
  71:board/syscalls.c **** #ifdef read_stderr
  72:board/syscalls.c **** 		case STDERR_FILENO: // For convenience, use stderr both ways
  73:board/syscalls.c **** 			len = read_stderr(ptr, len);
  63              		.loc 1 73 0
  64 0028 B868     		ldr	r0, [r7, #8]
  65 002a 7968     		ldr	r1, [r7, #4]
  66 002c FFF7FEFF 		bl	UART_Gets
  67 0030 7860     		str	r0, [r7, #4]
  74:board/syscalls.c **** 		break;
  68              		.loc 1 74 0
  69 0032 09E0     		b	.L5
  70              	.L7:
  75:board/syscalls.c **** #endif
  76:board/syscalls.c **** 		default:
  77:board/syscalls.c **** 			errno = EBADF;
  71              		.loc 1 77 0
  72 0034 40F20003 		movw	r3, #:lower16:errno
  73 0038 C0F20003 		movt	r3, #:upper16:errno
  74 003c 4FF00902 		mov	r2, #9
  75 0040 1A60     		str	r2, [r3, #0]
  78:board/syscalls.c **** 			return -1;
  76              		.loc 1 78 0
  77 0042 4FF0FF33 		mov	r3, #-1
  78 0046 00E0     		b	.L6
  79              	.L5:
  79:board/syscalls.c **** 	}
  80:board/syscalls.c **** 	return len;
  80              		.loc 1 80 0
  81 0048 7B68     		ldr	r3, [r7, #4]
  82              	.L6:
  81:board/syscalls.c **** }
  83              		.loc 1 81 0
  84 004a 1846     		mov	r0, r3
  85 004c 07F11007 		add	r7, r7, #16
  86 0050 BD46     		mov	sp, r7
  87 0052 80BD     		pop	{r7, pc}
  88              		.cfi_endproc
  89              	.LFE35:
  90              		.size	_read, .-_read
ARM GAS  /tmp/ccCWfaoM.s 			page 4


  91              		.section	.text._write,"ax",%progbits
  92              		.align	2
  93              		.global	_write
  94              		.thumb
  95              		.thumb_func
  96              		.type	_write, %function
  97              	_write:
  98              	.LFB36:
  82:board/syscalls.c **** 
  83:board/syscalls.c **** extern int _write( int file, char *ptr, int len )
  84:board/syscalls.c **** {
  99              		.loc 1 84 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 16
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0000 80B5     		push	{r7, lr}
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 14, -4
 107              		.cfi_offset 7, -8
 108 0002 84B0     		sub	sp, sp, #16
 109              	.LCFI4:
 110              		.cfi_def_cfa_offset 24
 111 0004 00AF     		add	r7, sp, #0
 112              	.LCFI5:
 113              		.cfi_def_cfa_register 7
 114 0006 F860     		str	r0, [r7, #12]
 115 0008 B960     		str	r1, [r7, #8]
 116 000a 7A60     		str	r2, [r7, #4]
  85:board/syscalls.c **** 	switch (file)
 117              		.loc 1 85 0
 118 000c FB68     		ldr	r3, [r7, #12]
 119 000e 012B     		cmp	r3, #1
 120 0010 02D0     		beq	.L10
 121 0012 022B     		cmp	r3, #2
 122 0014 08D0     		beq	.L11
 123 0016 0DE0     		b	.L14
 124              	.L10:
  86:board/syscalls.c **** 	{
  87:board/syscalls.c **** #ifdef write_stdout
  88:board/syscalls.c **** 		case STDOUT_FILENO:
  89:board/syscalls.c **** 			len = write_stdout(ptr, len);
 125              		.loc 1 89 0
 126 0018 7B68     		ldr	r3, [r7, #4]
 127 001a 9BB2     		uxth	r3, r3
 128 001c B868     		ldr	r0, [r7, #8]
 129 001e 1946     		mov	r1, r3
 130 0020 FFF7FEFF 		bl	USBC_Puts
 131 0024 7860     		str	r0, [r7, #4]
  90:board/syscalls.c **** 		break;
 132              		.loc 1 90 0
 133 0026 0FE0     		b	.L12
 134              	.L11:
  91:board/syscalls.c **** #endif
  92:board/syscalls.c **** #ifdef write_stderr
  93:board/syscalls.c **** 		case STDERR_FILENO:
  94:board/syscalls.c **** 			len = write_stderr(ptr, len);
ARM GAS  /tmp/ccCWfaoM.s 			page 5


 135              		.loc 1 94 0
 136 0028 B868     		ldr	r0, [r7, #8]
 137 002a 7968     		ldr	r1, [r7, #4]
 138 002c FFF7FEFF 		bl	UART_Puts
 139 0030 7860     		str	r0, [r7, #4]
  95:board/syscalls.c **** 		break;
 140              		.loc 1 95 0
 141 0032 09E0     		b	.L12
 142              	.L14:
  96:board/syscalls.c **** #endif
  97:board/syscalls.c **** 		default:
  98:board/syscalls.c **** 			errno = EBADF;
 143              		.loc 1 98 0
 144 0034 40F20003 		movw	r3, #:lower16:errno
 145 0038 C0F20003 		movt	r3, #:upper16:errno
 146 003c 4FF00902 		mov	r2, #9
 147 0040 1A60     		str	r2, [r3, #0]
  99:board/syscalls.c **** 			return -1;
 148              		.loc 1 99 0
 149 0042 4FF0FF33 		mov	r3, #-1
 150 0046 00E0     		b	.L13
 151              	.L12:
 100:board/syscalls.c **** 	}
 101:board/syscalls.c **** 	return len;
 152              		.loc 1 101 0
 153 0048 7B68     		ldr	r3, [r7, #4]
 154              	.L13:
 102:board/syscalls.c **** }
 155              		.loc 1 102 0
 156 004a 1846     		mov	r0, r3
 157 004c 07F11007 		add	r7, r7, #16
 158 0050 BD46     		mov	sp, r7
 159 0052 80BD     		pop	{r7, pc}
 160              		.cfi_endproc
 161              	.LFE36:
 162              		.size	_write, .-_write
 163              		.section	.text._sbrk,"ax",%progbits
 164              		.align	2
 165              		.global	_sbrk
 166              		.thumb
 167              		.thumb_func
 168              		.type	_sbrk, %function
 169              	_sbrk:
 170              	.LFB37:
 103:board/syscalls.c **** 
 104:board/syscalls.c **** /*
 105:board/syscalls.c ****  sbrk
 106:board/syscalls.c ****  Increase program data space.
 107:board/syscalls.c ****  Malloc and related functions depend on this
 108:board/syscalls.c ****  */
 109:board/syscalls.c **** extern caddr_t _sbrk ( int incr )
 110:board/syscalls.c **** {
 171              		.loc 1 110 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 16
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175              		@ link register save eliminated.
ARM GAS  /tmp/ccCWfaoM.s 			page 6


 176 0000 80B4     		push	{r7}
 177              	.LCFI6:
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 7, -4
 180 0002 85B0     		sub	sp, sp, #20
 181              	.LCFI7:
 182              		.cfi_def_cfa_offset 24
 183 0004 00AF     		add	r7, sp, #0
 184              	.LCFI8:
 185              		.cfi_def_cfa_register 7
 186 0006 7860     		str	r0, [r7, #4]
 111:board/syscalls.c ****     static unsigned char *heap = NULL ;
 112:board/syscalls.c ****     unsigned char *prev_heap ;
 113:board/syscalls.c **** 
 114:board/syscalls.c ****     if ( heap == NULL )
 187              		.loc 1 114 0
 188 0008 40F20003 		movw	r3, #:lower16:heap.7559
 189 000c C0F20003 		movt	r3, #:upper16:heap.7559
 190 0010 1B68     		ldr	r3, [r3, #0]
 191 0012 002B     		cmp	r3, #0
 192 0014 08D1     		bne	.L16
 115:board/syscalls.c ****     {
 116:board/syscalls.c ****         heap = (unsigned char *)&_end ;
 193              		.loc 1 116 0
 194 0016 40F20003 		movw	r3, #:lower16:heap.7559
 195 001a C0F20003 		movt	r3, #:upper16:heap.7559
 196 001e 40F20002 		movw	r2, #:lower16:_end
 197 0022 C0F20002 		movt	r2, #:upper16:_end
 198 0026 1A60     		str	r2, [r3, #0]
 199              	.L16:
 117:board/syscalls.c ****     }
 118:board/syscalls.c ****     prev_heap = heap;
 200              		.loc 1 118 0
 201 0028 40F20003 		movw	r3, #:lower16:heap.7559
 202 002c C0F20003 		movt	r3, #:upper16:heap.7559
 203 0030 1B68     		ldr	r3, [r3, #0]
 204 0032 FB60     		str	r3, [r7, #12]
 119:board/syscalls.c **** 
 120:board/syscalls.c ****     heap += incr ;
 205              		.loc 1 120 0
 206 0034 40F20003 		movw	r3, #:lower16:heap.7559
 207 0038 C0F20003 		movt	r3, #:upper16:heap.7559
 208 003c 1A68     		ldr	r2, [r3, #0]
 209 003e 7B68     		ldr	r3, [r7, #4]
 210 0040 D218     		adds	r2, r2, r3
 211 0042 40F20003 		movw	r3, #:lower16:heap.7559
 212 0046 C0F20003 		movt	r3, #:upper16:heap.7559
 213 004a 1A60     		str	r2, [r3, #0]
 121:board/syscalls.c **** 
 122:board/syscalls.c ****     return (caddr_t) prev_heap ;
 214              		.loc 1 122 0
 215 004c FB68     		ldr	r3, [r7, #12]
 123:board/syscalls.c **** }
 216              		.loc 1 123 0
 217 004e 1846     		mov	r0, r3
 218 0050 07F11407 		add	r7, r7, #20
 219 0054 BD46     		mov	sp, r7
ARM GAS  /tmp/ccCWfaoM.s 			page 7


 220 0056 80BC     		pop	{r7}
 221 0058 7047     		bx	lr
 222              		.cfi_endproc
 223              	.LFE37:
 224              		.size	_sbrk, .-_sbrk
 225 005a 00BF     		.section	.text._isatty,"ax",%progbits
 226              		.align	2
 227              		.global	_isatty
 228              		.thumb
 229              		.thumb_func
 230              		.type	_isatty, %function
 231              	_isatty:
 232              	.LFB38:
 124:board/syscalls.c **** 
 125:board/syscalls.c **** 
 126:board/syscalls.c **** /*
 127:board/syscalls.c ****  isatty
 128:board/syscalls.c ****  Query whether output stream is a terminal. 
 129:board/syscalls.c ****  For consistency with the other minimal implementations:
 130:board/syscalls.c ****  */
 131:board/syscalls.c **** extern int _isatty( int file )
 132:board/syscalls.c **** {
 233              		.loc 1 132 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0000 80B4     		push	{r7}
 239              	.LCFI9:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 83B0     		sub	sp, sp, #12
 243              	.LCFI10:
 244              		.cfi_def_cfa_offset 16
 245 0004 00AF     		add	r7, sp, #0
 246              	.LCFI11:
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 133:board/syscalls.c **** 	switch (file) {
 134:board/syscalls.c **** #if defined(read_stdin)
 135:board/syscalls.c **** 		case STDIN_FILENO:
 136:board/syscalls.c **** #elif defined(read_stderr) | defined(write_stderr)
 137:board/syscalls.c **** 		case STDERR_FILENO:
 138:board/syscalls.c **** #elif defined(write_stdout)
 139:board/syscalls.c **** 		case STDOUT_FILENO:
 140:board/syscalls.c **** 			return 1;
 141:board/syscalls.c **** 		break;
 142:board/syscalls.c **** #endif
 143:board/syscalls.c **** 		default:
 144:board/syscalls.c **** 			errno = EBADF;
 249              		.loc 1 144 0
 250 0008 40F20003 		movw	r3, #:lower16:errno
 251 000c C0F20003 		movt	r3, #:upper16:errno
 252 0010 4FF00902 		mov	r2, #9
 253 0014 1A60     		str	r2, [r3, #0]
 145:board/syscalls.c **** 			return 0;
 254              		.loc 1 145 0
ARM GAS  /tmp/ccCWfaoM.s 			page 8


 255 0016 4FF00003 		mov	r3, #0
 146:board/syscalls.c **** 	}
 147:board/syscalls.c **** }
 256              		.loc 1 147 0
 257 001a 1846     		mov	r0, r3
 258 001c 07F10C07 		add	r7, r7, #12
 259 0020 BD46     		mov	sp, r7
 260 0022 80BC     		pop	{r7}
 261 0024 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE38:
 264              		.size	_isatty, .-_isatty
 265 0026 00BF     		.section	.rodata
 266              		.align	2
 267              	.LC0:
 268 0000 45786974 		.ascii	"Exiting with status %d.\012\000"
 268      696E6720 
 268      77697468 
 268      20737461 
 268      74757320 
 269 0019 000000   		.section	.text._exit,"ax",%progbits
 270              		.align	2
 271              		.global	_exit
 272              		.thumb
 273              		.thumb_func
 274              		.type	_exit, %function
 275              	_exit:
 276              	.LFB39:
 148:board/syscalls.c **** 
 149:board/syscalls.c **** /*
 150:board/syscalls.c ****  exit
 151:board/syscalls.c ****  Leave the program.
 152:board/syscalls.c ****  */
 153:board/syscalls.c **** extern void _exit( int status )
 154:board/syscalls.c **** {
 277              		.loc 1 154 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281 0000 80B5     		push	{r7, lr}
 282              	.LCFI12:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 14, -4
 285              		.cfi_offset 7, -8
 286 0002 82B0     		sub	sp, sp, #8
 287              	.LCFI13:
 288              		.cfi_def_cfa_offset 16
 289 0004 00AF     		add	r7, sp, #0
 290              	.LCFI14:
 291              		.cfi_def_cfa_register 7
 292 0006 7860     		str	r0, [r7, #4]
 155:board/syscalls.c ****     printf( "Exiting with status %d.\n", status ) ;
 293              		.loc 1 155 0
 294 0008 40F20000 		movw	r0, #:lower16:.LC0
 295 000c C0F20000 		movt	r0, #:upper16:.LC0
 296 0010 7968     		ldr	r1, [r7, #4]
 297 0012 FFF7FEFF 		bl	iprintf
ARM GAS  /tmp/ccCWfaoM.s 			page 9


 298              	.L19:
 156:board/syscalls.c **** 
 157:board/syscalls.c ****     for ( ; ; ) ;
 299              		.loc 1 157 0 discriminator 1
 300 0016 FEE7     		b	.L19
 301              		.cfi_endproc
 302              	.LFE39:
 303              		.size	_exit, .-_exit
 304              		.section	.text._lseek,"ax",%progbits
 305              		.align	2
 306              		.global	_lseek
 307              		.thumb
 308              		.thumb_func
 309              		.type	_lseek, %function
 310              	_lseek:
 311              	.LFB40:
 158:board/syscalls.c **** }
 159:board/syscalls.c **** 
 160:board/syscalls.c **** /*
 161:board/syscalls.c ****  lseek
 162:board/syscalls.c ****  Set position in a file. Minimal implementation:
 163:board/syscalls.c ****  */
 164:board/syscalls.c **** extern int _lseek( int file, int ptr, int dir )
 165:board/syscalls.c **** {
 312              		.loc 1 165 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 16
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              	.LCFI15:
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 85B0     		sub	sp, sp, #20
 322              	.LCFI16:
 323              		.cfi_def_cfa_offset 24
 324 0004 00AF     		add	r7, sp, #0
 325              	.LCFI17:
 326              		.cfi_def_cfa_register 7
 327 0006 F860     		str	r0, [r7, #12]
 328 0008 B960     		str	r1, [r7, #8]
 329 000a 7A60     		str	r2, [r7, #4]
 166:board/syscalls.c ****     return 0 ;
 330              		.loc 1 166 0
 331 000c 4FF00003 		mov	r3, #0
 167:board/syscalls.c **** }
 332              		.loc 1 167 0
 333 0010 1846     		mov	r0, r3
 334 0012 07F11407 		add	r7, r7, #20
 335 0016 BD46     		mov	sp, r7
 336 0018 80BC     		pop	{r7}
 337 001a 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE40:
 340              		.size	_lseek, .-_lseek
 341              		.section	.text._kill,"ax",%progbits
 342              		.align	2
ARM GAS  /tmp/ccCWfaoM.s 			page 10


 343              		.global	_kill
 344              		.thumb
 345              		.thumb_func
 346              		.type	_kill, %function
 347              	_kill:
 348              	.LFB41:
 168:board/syscalls.c **** 
 169:board/syscalls.c **** /*
 170:board/syscalls.c ****  kill
 171:board/syscalls.c ****  Send a signal. Minimal implementation:
 172:board/syscalls.c ****  */
 173:board/syscalls.c **** extern int _kill( int pid, int sig )
 174:board/syscalls.c **** {
 349              		.loc 1 174 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              	.LCFI18:
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 83B0     		sub	sp, sp, #12
 359              	.LCFI19:
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
 362              	.LCFI20:
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 365 0008 3960     		str	r1, [r7, #0]
 175:board/syscalls.c **** 	errno = EINVAL;
 366              		.loc 1 175 0
 367 000a 40F20003 		movw	r3, #:lower16:errno
 368 000e C0F20003 		movt	r3, #:upper16:errno
 369 0012 4FF01602 		mov	r2, #22
 370 0016 1A60     		str	r2, [r3, #0]
 176:board/syscalls.c ****     return -1; 
 371              		.loc 1 176 0
 372 0018 4FF0FF33 		mov	r3, #-1
 177:board/syscalls.c **** }
 373              		.loc 1 177 0
 374 001c 1846     		mov	r0, r3
 375 001e 07F10C07 		add	r7, r7, #12
 376 0022 BD46     		mov	sp, r7
 377 0024 80BC     		pop	{r7}
 378 0026 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE41:
 381              		.size	_kill, .-_kill
 382              		.section	.text._getpid,"ax",%progbits
 383              		.align	2
 384              		.global	_getpid
 385              		.thumb
 386              		.thumb_func
 387              		.type	_getpid, %function
 388              	_getpid:
 389              	.LFB42:
ARM GAS  /tmp/ccCWfaoM.s 			page 11


 178:board/syscalls.c **** 
 179:board/syscalls.c **** /*
 180:board/syscalls.c ****  getpid
 181:board/syscalls.c ****  Process-ID; this is sometimes used to generate strings unlikely to conflict with other processes. 
 182:board/syscalls.c ****  */
 183:board/syscalls.c **** extern int _getpid ( void )
 184:board/syscalls.c **** {
 390              		.loc 1 184 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395 0000 80B4     		push	{r7}
 396              	.LCFI21:
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              	.LCFI22:
 401              		.cfi_def_cfa_register 7
 185:board/syscalls.c ****     return -1 ;
 402              		.loc 1 185 0
 403 0004 4FF0FF33 		mov	r3, #-1
 186:board/syscalls.c **** }
 404              		.loc 1 186 0
 405 0008 1846     		mov	r0, r3
 406 000a BD46     		mov	sp, r7
 407 000c 80BC     		pop	{r7}
 408 000e 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE42:
 411              		.size	_getpid, .-_getpid
 412              		.section	.text._link,"ax",%progbits
 413              		.align	2
 414              		.global	_link
 415              		.thumb
 416              		.thumb_func
 417              		.type	_link, %function
 418              	_link:
 419              	.LFB43:
 187:board/syscalls.c **** 
 188:board/syscalls.c **** extern int _link( char *old, char *new )
 189:board/syscalls.c **** {
 420              		.loc 1 189 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 8
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425 0000 80B4     		push	{r7}
 426              	.LCFI23:
 427              		.cfi_def_cfa_offset 4
 428              		.cfi_offset 7, -4
 429 0002 83B0     		sub	sp, sp, #12
 430              	.LCFI24:
 431              		.cfi_def_cfa_offset 16
 432 0004 00AF     		add	r7, sp, #0
 433              	.LCFI25:
 434              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccCWfaoM.s 			page 12


 435 0006 7860     		str	r0, [r7, #4]
 436 0008 3960     		str	r1, [r7, #0]
 190:board/syscalls.c ****     return -1 ;
 437              		.loc 1 190 0
 438 000a 4FF0FF33 		mov	r3, #-1
 191:board/syscalls.c **** }
 439              		.loc 1 191 0
 440 000e 1846     		mov	r0, r3
 441 0010 07F10C07 		add	r7, r7, #12
 442 0014 BD46     		mov	sp, r7
 443 0016 80BC     		pop	{r7}
 444 0018 7047     		bx	lr
 445              		.cfi_endproc
 446              	.LFE43:
 447              		.size	_link, .-_link
 448 001a 00BF     		.section	.text._close,"ax",%progbits
 449              		.align	2
 450              		.global	_close
 451              		.thumb
 452              		.thumb_func
 453              		.type	_close, %function
 454              	_close:
 455              	.LFB44:
 192:board/syscalls.c **** 
 193:board/syscalls.c **** extern int _close( int file )
 194:board/syscalls.c **** {
 456              		.loc 1 194 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 8
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461 0000 80B4     		push	{r7}
 462              	.LCFI26:
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 7, -4
 465 0002 83B0     		sub	sp, sp, #12
 466              	.LCFI27:
 467              		.cfi_def_cfa_offset 16
 468 0004 00AF     		add	r7, sp, #0
 469              	.LCFI28:
 470              		.cfi_def_cfa_register 7
 471 0006 7860     		str	r0, [r7, #4]
 195:board/syscalls.c ****     return -1 ;
 472              		.loc 1 195 0
 473 0008 4FF0FF33 		mov	r3, #-1
 196:board/syscalls.c **** }
 474              		.loc 1 196 0
 475 000c 1846     		mov	r0, r3
 476 000e 07F10C07 		add	r7, r7, #12
 477 0012 BD46     		mov	sp, r7
 478 0014 80BC     		pop	{r7}
 479 0016 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE44:
 482              		.size	_close, .-_close
 483              		.section	.text._fstat,"ax",%progbits
 484              		.align	2
ARM GAS  /tmp/ccCWfaoM.s 			page 13


 485              		.global	_fstat
 486              		.thumb
 487              		.thumb_func
 488              		.type	_fstat, %function
 489              	_fstat:
 490              	.LFB45:
 197:board/syscalls.c **** 
 198:board/syscalls.c **** extern int _fstat( int file, struct stat *st )
 199:board/syscalls.c **** {
 491              		.loc 1 199 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 8
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 496 0000 80B4     		push	{r7}
 497              	.LCFI29:
 498              		.cfi_def_cfa_offset 4
 499              		.cfi_offset 7, -4
 500 0002 83B0     		sub	sp, sp, #12
 501              	.LCFI30:
 502              		.cfi_def_cfa_offset 16
 503 0004 00AF     		add	r7, sp, #0
 504              	.LCFI31:
 505              		.cfi_def_cfa_register 7
 506 0006 7860     		str	r0, [r7, #4]
 507 0008 3960     		str	r1, [r7, #0]
 200:board/syscalls.c ****     st->st_mode = S_IFCHR ;
 508              		.loc 1 200 0
 509 000a 3B68     		ldr	r3, [r7, #0]
 510 000c 4FF40052 		mov	r2, #8192
 511 0010 5A60     		str	r2, [r3, #4]
 201:board/syscalls.c **** 
 202:board/syscalls.c ****     return 0 ;
 512              		.loc 1 202 0
 513 0012 4FF00003 		mov	r3, #0
 203:board/syscalls.c **** }
 514              		.loc 1 203 0
 515 0016 1846     		mov	r0, r3
 516 0018 07F10C07 		add	r7, r7, #12
 517 001c BD46     		mov	sp, r7
 518 001e 80BC     		pop	{r7}
 519 0020 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE45:
 522              		.size	_fstat, .-_fstat
 523 0022 00BF     		.bss
 524              		.align	2
 525              	heap.7559:
 526 0000 00000000 		.space	4
 527              		.text
 528              	.Letext0:
 529              		.file 2 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 530              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 531              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 532              		.file 5 "libchip/cmsis/core_cm3.h"
 533              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 534              		.section	.debug_info,"",%progbits
ARM GAS  /tmp/ccCWfaoM.s 			page 14


 535              	.Ldebug_info0:
 536 0000 DD040000 		.4byte	0x4dd
 537 0004 0200     		.2byte	0x2
 538 0006 00000000 		.4byte	.Ldebug_abbrev0
 539 000a 04       		.byte	0x4
 540 000b 01       		.uleb128 0x1
 541 000c 6B010000 		.4byte	.LASF57
 542 0010 01       		.byte	0x1
 543 0011 70000000 		.4byte	.LASF58
 544 0015 0F020000 		.4byte	.LASF59
 545 0019 00000000 		.4byte	0
 546 001d 00000000 		.4byte	0
 547 0021 00000000 		.4byte	.Ldebug_ranges0+0
 548 0025 00000000 		.4byte	.Ldebug_line0
 549 0029 02       		.uleb128 0x2
 550 002a 01       		.byte	0x1
 551 002b 06       		.byte	0x6
 552 002c ED000000 		.4byte	.LASF0
 553 0030 02       		.uleb128 0x2
 554 0031 01       		.byte	0x1
 555 0032 08       		.byte	0x8
 556 0033 D1000000 		.4byte	.LASF1
 557 0037 02       		.uleb128 0x2
 558 0038 02       		.byte	0x2
 559 0039 05       		.byte	0x5
 560 003a 21000000 		.4byte	.LASF2
 561 003e 02       		.uleb128 0x2
 562 003f 02       		.byte	0x2
 563 0040 07       		.byte	0x7
 564 0041 2D010000 		.4byte	.LASF3
 565 0045 02       		.uleb128 0x2
 566 0046 04       		.byte	0x4
 567 0047 05       		.byte	0x5
 568 0048 B3000000 		.4byte	.LASF4
 569 004c 02       		.uleb128 0x2
 570 004d 04       		.byte	0x4
 571 004e 07       		.byte	0x7
 572 004f AC010000 		.4byte	.LASF5
 573 0053 02       		.uleb128 0x2
 574 0054 08       		.byte	0x8
 575 0055 05       		.byte	0x5
 576 0056 3A000000 		.4byte	.LASF6
 577 005a 02       		.uleb128 0x2
 578 005b 08       		.byte	0x8
 579 005c 07       		.byte	0x7
 580 005d F9000000 		.4byte	.LASF7
 581 0061 03       		.uleb128 0x3
 582 0062 04       		.byte	0x4
 583 0063 05       		.byte	0x5
 584 0064 696E7400 		.ascii	"int\000"
 585 0068 02       		.uleb128 0x2
 586 0069 04       		.byte	0x4
 587 006a 07       		.byte	0x7
 588 006b 10010000 		.4byte	.LASF8
 589 006f 04       		.uleb128 0x4
 590 0070 1A000000 		.4byte	.LASF9
 591 0074 02       		.byte	0x2
ARM GAS  /tmp/ccCWfaoM.s 			page 15


 592 0075 10       		.byte	0x10
 593 0076 45000000 		.4byte	0x45
 594 007a 04       		.uleb128 0x4
 595 007b E5010000 		.4byte	.LASF10
 596 007f 02       		.byte	0x2
 597 0080 18       		.byte	0x18
 598 0081 37000000 		.4byte	0x37
 599 0085 04       		.uleb128 0x4
 600 0086 ED010000 		.4byte	.LASF11
 601 008a 02       		.byte	0x2
 602 008b 1D       		.byte	0x1d
 603 008c 3E000000 		.4byte	0x3e
 604 0090 04       		.uleb128 0x4
 605 0091 44020000 		.4byte	.LASF12
 606 0095 02       		.byte	0x2
 607 0096 20       		.byte	0x20
 608 0097 3E000000 		.4byte	0x3e
 609 009b 05       		.uleb128 0x5
 610 009c 04       		.byte	0x4
 611 009d 30000000 		.4byte	0x30
 612 00a1 05       		.uleb128 0x5
 613 00a2 04       		.byte	0x4
 614 00a3 A7000000 		.4byte	0xa7
 615 00a7 02       		.uleb128 0x2
 616 00a8 01       		.byte	0x1
 617 00a9 08       		.byte	0x8
 618 00aa 60010000 		.4byte	.LASF13
 619 00ae 04       		.uleb128 0x4
 620 00af DF000000 		.4byte	.LASF14
 621 00b3 03       		.byte	0x3
 622 00b4 6D       		.byte	0x6d
 623 00b5 45000000 		.4byte	0x45
 624 00b9 04       		.uleb128 0x4
 625 00ba 77010000 		.4byte	.LASF15
 626 00be 03       		.byte	0x3
 627 00bf 7E       		.byte	0x7e
 628 00c0 A1000000 		.4byte	0xa1
 629 00c4 04       		.uleb128 0x4
 630 00c5 A8000000 		.4byte	.LASF16
 631 00c9 03       		.byte	0x3
 632 00ca 85       		.byte	0x85
 633 00cb 3E000000 		.4byte	0x3e
 634 00cf 04       		.uleb128 0x4
 635 00d0 DF010000 		.4byte	.LASF17
 636 00d4 03       		.byte	0x3
 637 00d5 A2       		.byte	0xa2
 638 00d6 6F000000 		.4byte	0x6f
 639 00da 04       		.uleb128 0x4
 640 00db CB000000 		.4byte	.LASF18
 641 00df 03       		.byte	0x3
 642 00e0 A3       		.byte	0xa3
 643 00e1 7A000000 		.4byte	0x7a
 644 00e5 04       		.uleb128 0x4
 645 00e6 0D000000 		.4byte	.LASF19
 646 00ea 03       		.byte	0x3
 647 00eb A4       		.byte	0xa4
 648 00ec 85000000 		.4byte	0x85
ARM GAS  /tmp/ccCWfaoM.s 			page 16


 649 00f0 04       		.uleb128 0x4
 650 00f1 C5000000 		.4byte	.LASF20
 651 00f5 03       		.byte	0x3
 652 00f6 A5       		.byte	0xa5
 653 00f7 90000000 		.4byte	0x90
 654 00fb 04       		.uleb128 0x4
 655 00fc 13000000 		.4byte	.LASF21
 656 0100 03       		.byte	0x3
 657 0101 BF       		.byte	0xbf
 658 0102 68000000 		.4byte	0x68
 659 0106 04       		.uleb128 0x4
 660 0107 68000000 		.4byte	.LASF22
 661 010b 03       		.byte	0x3
 662 010c C4       		.byte	0xc4
 663 010d 3E000000 		.4byte	0x3e
 664 0111 06       		.uleb128 0x6
 665 0112 F5010000 		.4byte	.LASF60
 666 0116 3C       		.byte	0x3c
 667 0117 04       		.byte	0x4
 668 0118 19       		.byte	0x19
 669 0119 0C020000 		.4byte	0x20c
 670 011d 07       		.uleb128 0x7
 671 011e 4F000000 		.4byte	.LASF23
 672 0122 04       		.byte	0x4
 673 0123 1B       		.byte	0x1b
 674 0124 DA000000 		.4byte	0xda
 675 0128 02       		.byte	0x2
 676 0129 23       		.byte	0x23
 677 012a 00       		.uleb128 0
 678 012b 07       		.uleb128 0x7
 679 012c E6000000 		.4byte	.LASF24
 680 0130 04       		.byte	0x4
 681 0131 1C       		.byte	0x1c
 682 0132 C4000000 		.4byte	0xc4
 683 0136 02       		.byte	0x2
 684 0137 23       		.byte	0x23
 685 0138 02       		.uleb128 0x2
 686 0139 07       		.uleb128 0x7
 687 013a FA010000 		.4byte	.LASF25
 688 013e 04       		.byte	0x4
 689 013f 1D       		.byte	0x1d
 690 0140 FB000000 		.4byte	0xfb
 691 0144 02       		.byte	0x2
 692 0145 23       		.byte	0x23
 693 0146 04       		.uleb128 0x4
 694 0147 07       		.uleb128 0x7
 695 0148 1D010000 		.4byte	.LASF26
 696 014c 04       		.byte	0x4
 697 014d 1E       		.byte	0x1e
 698 014e 06010000 		.4byte	0x106
 699 0152 02       		.byte	0x2
 700 0153 23       		.byte	0x23
 701 0154 08       		.uleb128 0x8
 702 0155 07       		.uleb128 0x7
 703 0156 89010000 		.4byte	.LASF27
 704 015a 04       		.byte	0x4
 705 015b 1F       		.byte	0x1f
ARM GAS  /tmp/ccCWfaoM.s 			page 17


 706 015c E5000000 		.4byte	0xe5
 707 0160 02       		.byte	0x2
 708 0161 23       		.byte	0x23
 709 0162 0A       		.uleb128 0xa
 710 0163 07       		.uleb128 0x7
 711 0164 A1000000 		.4byte	.LASF28
 712 0168 04       		.byte	0x4
 713 0169 20       		.byte	0x20
 714 016a F0000000 		.4byte	0xf0
 715 016e 02       		.byte	0x2
 716 016f 23       		.byte	0x23
 717 0170 0C       		.uleb128 0xc
 718 0171 07       		.uleb128 0x7
 719 0172 00000000 		.4byte	.LASF29
 720 0176 04       		.byte	0x4
 721 0177 21       		.byte	0x21
 722 0178 DA000000 		.4byte	0xda
 723 017c 02       		.byte	0x2
 724 017d 23       		.byte	0x23
 725 017e 0E       		.uleb128 0xe
 726 017f 07       		.uleb128 0x7
 727 0180 9A010000 		.4byte	.LASF30
 728 0184 04       		.byte	0x4
 729 0185 22       		.byte	0x22
 730 0186 CF000000 		.4byte	0xcf
 731 018a 02       		.byte	0x2
 732 018b 23       		.byte	0x23
 733 018c 10       		.uleb128 0x10
 734 018d 07       		.uleb128 0x7
 735 018e BC000000 		.4byte	.LASF31
 736 0192 04       		.byte	0x4
 737 0193 30       		.byte	0x30
 738 0194 AE000000 		.4byte	0xae
 739 0198 02       		.byte	0x2
 740 0199 23       		.byte	0x23
 741 019a 14       		.uleb128 0x14
 742 019b 07       		.uleb128 0x7
 743 019c A2010000 		.4byte	.LASF32
 744 01a0 04       		.byte	0x4
 745 01a1 31       		.byte	0x31
 746 01a2 45000000 		.4byte	0x45
 747 01a6 02       		.byte	0x2
 748 01a7 23       		.byte	0x23
 749 01a8 18       		.uleb128 0x18
 750 01a9 07       		.uleb128 0x7
 751 01aa 40010000 		.4byte	.LASF33
 752 01ae 04       		.byte	0x4
 753 01af 32       		.byte	0x32
 754 01b0 AE000000 		.4byte	0xae
 755 01b4 02       		.byte	0x2
 756 01b5 23       		.byte	0x23
 757 01b6 1C       		.uleb128 0x1c
 758 01b7 07       		.uleb128 0x7
 759 01b8 4F010000 		.4byte	.LASF34
 760 01bc 04       		.byte	0x4
 761 01bd 33       		.byte	0x33
 762 01be 45000000 		.4byte	0x45
ARM GAS  /tmp/ccCWfaoM.s 			page 18


 763 01c2 02       		.byte	0x2
 764 01c3 23       		.byte	0x23
 765 01c4 20       		.uleb128 0x20
 766 01c5 07       		.uleb128 0x7
 767 01c6 2B000000 		.4byte	.LASF35
 768 01ca 04       		.byte	0x4
 769 01cb 34       		.byte	0x34
 770 01cc AE000000 		.4byte	0xae
 771 01d0 02       		.byte	0x2
 772 01d1 23       		.byte	0x23
 773 01d2 24       		.uleb128 0x24
 774 01d3 07       		.uleb128 0x7
 775 01d4 BE010000 		.4byte	.LASF36
 776 01d8 04       		.byte	0x4
 777 01d9 35       		.byte	0x35
 778 01da 45000000 		.4byte	0x45
 779 01de 02       		.byte	0x2
 780 01df 23       		.byte	0x23
 781 01e0 28       		.uleb128 0x28
 782 01e1 07       		.uleb128 0x7
 783 01e2 8E000000 		.4byte	.LASF37
 784 01e6 04       		.byte	0x4
 785 01e7 36       		.byte	0x36
 786 01e8 45000000 		.4byte	0x45
 787 01ec 02       		.byte	0x2
 788 01ed 23       		.byte	0x23
 789 01ee 2C       		.uleb128 0x2c
 790 01ef 07       		.uleb128 0x7
 791 01f0 7F010000 		.4byte	.LASF38
 792 01f4 04       		.byte	0x4
 793 01f5 37       		.byte	0x37
 794 01f6 45000000 		.4byte	0x45
 795 01fa 02       		.byte	0x2
 796 01fb 23       		.byte	0x23
 797 01fc 30       		.uleb128 0x30
 798 01fd 07       		.uleb128 0x7
 799 01fe C8010000 		.4byte	.LASF39
 800 0202 04       		.byte	0x4
 801 0203 38       		.byte	0x38
 802 0204 0C020000 		.4byte	0x20c
 803 0208 02       		.byte	0x2
 804 0209 23       		.byte	0x23
 805 020a 34       		.uleb128 0x34
 806 020b 00       		.byte	0
 807 020c 08       		.uleb128 0x8
 808 020d 45000000 		.4byte	0x45
 809 0211 1C020000 		.4byte	0x21c
 810 0215 09       		.uleb128 0x9
 811 0216 68000000 		.4byte	0x68
 812 021a 01       		.byte	0x1
 813 021b 00       		.byte	0
 814 021c 0A       		.uleb128 0xa
 815 021d 01       		.byte	0x1
 816 021e D9010000 		.4byte	.LASF41
 817 0222 01       		.byte	0x1
 818 0223 3E       		.byte	0x3e
 819 0224 01       		.byte	0x1
ARM GAS  /tmp/ccCWfaoM.s 			page 19


 820 0225 61000000 		.4byte	0x61
 821 0229 00000000 		.4byte	.LFB35
 822 022d 54000000 		.4byte	.LFE35
 823 0231 00000000 		.4byte	.LLST0
 824 0235 64020000 		.4byte	0x264
 825 0239 0B       		.uleb128 0xb
 826 023a 5D000000 		.4byte	.LASF40
 827 023e 01       		.byte	0x1
 828 023f 3E       		.byte	0x3e
 829 0240 61000000 		.4byte	0x61
 830 0244 02       		.byte	0x2
 831 0245 91       		.byte	0x91
 832 0246 74       		.sleb128 -12
 833 0247 0C       		.uleb128 0xc
 834 0248 70747200 		.ascii	"ptr\000"
 835 024c 01       		.byte	0x1
 836 024d 3E       		.byte	0x3e
 837 024e A1000000 		.4byte	0xa1
 838 0252 02       		.byte	0x2
 839 0253 91       		.byte	0x91
 840 0254 70       		.sleb128 -16
 841 0255 0C       		.uleb128 0xc
 842 0256 6C656E00 		.ascii	"len\000"
 843 025a 01       		.byte	0x1
 844 025b 3E       		.byte	0x3e
 845 025c 61000000 		.4byte	0x61
 846 0260 02       		.byte	0x2
 847 0261 91       		.byte	0x91
 848 0262 6C       		.sleb128 -20
 849 0263 00       		.byte	0
 850 0264 0A       		.uleb128 0xa
 851 0265 01       		.byte	0x1
 852 0266 48000000 		.4byte	.LASF42
 853 026a 01       		.byte	0x1
 854 026b 53       		.byte	0x53
 855 026c 01       		.byte	0x1
 856 026d 61000000 		.4byte	0x61
 857 0271 00000000 		.4byte	.LFB36
 858 0275 54000000 		.4byte	.LFE36
 859 0279 38000000 		.4byte	.LLST1
 860 027d AC020000 		.4byte	0x2ac
 861 0281 0B       		.uleb128 0xb
 862 0282 5D000000 		.4byte	.LASF40
 863 0286 01       		.byte	0x1
 864 0287 53       		.byte	0x53
 865 0288 61000000 		.4byte	0x61
 866 028c 02       		.byte	0x2
 867 028d 91       		.byte	0x91
 868 028e 74       		.sleb128 -12
 869 028f 0C       		.uleb128 0xc
 870 0290 70747200 		.ascii	"ptr\000"
 871 0294 01       		.byte	0x1
 872 0295 53       		.byte	0x53
 873 0296 A1000000 		.4byte	0xa1
 874 029a 02       		.byte	0x2
 875 029b 91       		.byte	0x91
 876 029c 70       		.sleb128 -16
ARM GAS  /tmp/ccCWfaoM.s 			page 20


 877 029d 0C       		.uleb128 0xc
 878 029e 6C656E00 		.ascii	"len\000"
 879 02a2 01       		.byte	0x1
 880 02a3 53       		.byte	0x53
 881 02a4 61000000 		.4byte	0x61
 882 02a8 02       		.byte	0x2
 883 02a9 91       		.byte	0x91
 884 02aa 6C       		.sleb128 -20
 885 02ab 00       		.byte	0
 886 02ac 0A       		.uleb128 0xa
 887 02ad 01       		.byte	0x1
 888 02ae 65010000 		.4byte	.LASF43
 889 02b2 01       		.byte	0x1
 890 02b3 6D       		.byte	0x6d
 891 02b4 01       		.byte	0x1
 892 02b5 B9000000 		.4byte	0xb9
 893 02b9 00000000 		.4byte	.LFB37
 894 02bd 5A000000 		.4byte	.LFE37
 895 02c1 70000000 		.4byte	.LLST2
 896 02c5 F7020000 		.4byte	0x2f7
 897 02c9 0B       		.uleb128 0xb
 898 02ca 08000000 		.4byte	.LASF44
 899 02ce 01       		.byte	0x1
 900 02cf 6D       		.byte	0x6d
 901 02d0 61000000 		.4byte	0x61
 902 02d4 02       		.byte	0x2
 903 02d5 91       		.byte	0x91
 904 02d6 6C       		.sleb128 -20
 905 02d7 0D       		.uleb128 0xd
 906 02d8 81000000 		.4byte	.LASF45
 907 02dc 01       		.byte	0x1
 908 02dd 6F       		.byte	0x6f
 909 02de 9B000000 		.4byte	0x9b
 910 02e2 05       		.byte	0x5
 911 02e3 03       		.byte	0x3
 912 02e4 00000000 		.4byte	heap.7559
 913 02e8 0D       		.uleb128 0xd
 914 02e9 90010000 		.4byte	.LASF46
 915 02ed 01       		.byte	0x1
 916 02ee 70       		.byte	0x70
 917 02ef 9B000000 		.4byte	0x9b
 918 02f3 02       		.byte	0x2
 919 02f4 91       		.byte	0x91
 920 02f5 74       		.sleb128 -12
 921 02f6 00       		.byte	0
 922 02f7 0A       		.uleb128 0xa
 923 02f8 01       		.byte	0x1
 924 02f9 99000000 		.4byte	.LASF47
 925 02fd 01       		.byte	0x1
 926 02fe 83       		.byte	0x83
 927 02ff 01       		.byte	0x1
 928 0300 61000000 		.4byte	0x61
 929 0304 00000000 		.4byte	.LFB38
 930 0308 26000000 		.4byte	.LFE38
 931 030c A8000000 		.4byte	.LLST3
 932 0310 23030000 		.4byte	0x323
 933 0314 0B       		.uleb128 0xb
ARM GAS  /tmp/ccCWfaoM.s 			page 21


 934 0315 5D000000 		.4byte	.LASF40
 935 0319 01       		.byte	0x1
 936 031a 83       		.byte	0x83
 937 031b 61000000 		.4byte	0x61
 938 031f 02       		.byte	0x2
 939 0320 91       		.byte	0x91
 940 0321 74       		.sleb128 -12
 941 0322 00       		.byte	0
 942 0323 0E       		.uleb128 0xe
 943 0324 01       		.byte	0x1
 944 0325 34000000 		.4byte	.LASF61
 945 0329 06       		.byte	0x6
 946 032a 11       		.byte	0x11
 947 032b 01       		.byte	0x1
 948 032c 00000000 		.4byte	.LFB39
 949 0330 18000000 		.4byte	.LFE39
 950 0334 E0000000 		.4byte	.LLST4
 951 0338 4B030000 		.4byte	0x34b
 952 033c 0B       		.uleb128 0xb
 953 033d 26010000 		.4byte	.LASF48
 954 0341 01       		.byte	0x1
 955 0342 99       		.byte	0x99
 956 0343 61000000 		.4byte	0x61
 957 0347 02       		.byte	0x2
 958 0348 91       		.byte	0x91
 959 0349 74       		.sleb128 -12
 960 034a 00       		.byte	0
 961 034b 0A       		.uleb128 0xa
 962 034c 01       		.byte	0x1
 963 034d D2010000 		.4byte	.LASF49
 964 0351 01       		.byte	0x1
 965 0352 A4       		.byte	0xa4
 966 0353 01       		.byte	0x1
 967 0354 61000000 		.4byte	0x61
 968 0358 00000000 		.4byte	.LFB40
 969 035c 1C000000 		.4byte	.LFE40
 970 0360 18010000 		.4byte	.LLST5
 971 0364 93030000 		.4byte	0x393
 972 0368 0B       		.uleb128 0xb
 973 0369 5D000000 		.4byte	.LASF40
 974 036d 01       		.byte	0x1
 975 036e A4       		.byte	0xa4
 976 036f 61000000 		.4byte	0x61
 977 0373 02       		.byte	0x2
 978 0374 91       		.byte	0x91
 979 0375 74       		.sleb128 -12
 980 0376 0C       		.uleb128 0xc
 981 0377 70747200 		.ascii	"ptr\000"
 982 037b 01       		.byte	0x1
 983 037c A4       		.byte	0xa4
 984 037d 61000000 		.4byte	0x61
 985 0381 02       		.byte	0x2
 986 0382 91       		.byte	0x91
 987 0383 70       		.sleb128 -16
 988 0384 0C       		.uleb128 0xc
 989 0385 64697200 		.ascii	"dir\000"
 990 0389 01       		.byte	0x1
ARM GAS  /tmp/ccCWfaoM.s 			page 22


 991 038a A4       		.byte	0xa4
 992 038b 61000000 		.4byte	0x61
 993 038f 02       		.byte	0x2
 994 0390 91       		.byte	0x91
 995 0391 6C       		.sleb128 -20
 996 0392 00       		.byte	0
 997 0393 0A       		.uleb128 0xa
 998 0394 01       		.byte	0x1
 999 0395 62000000 		.4byte	.LASF50
 1000 0399 01       		.byte	0x1
 1001 039a AD       		.byte	0xad
 1002 039b 01       		.byte	0x1
 1003 039c 61000000 		.4byte	0x61
 1004 03a0 00000000 		.4byte	.LFB41
 1005 03a4 28000000 		.4byte	.LFE41
 1006 03a8 50010000 		.4byte	.LLST6
 1007 03ac CD030000 		.4byte	0x3cd
 1008 03b0 0C       		.uleb128 0xc
 1009 03b1 70696400 		.ascii	"pid\000"
 1010 03b5 01       		.byte	0x1
 1011 03b6 AD       		.byte	0xad
 1012 03b7 61000000 		.4byte	0x61
 1013 03bb 02       		.byte	0x2
 1014 03bc 91       		.byte	0x91
 1015 03bd 74       		.sleb128 -12
 1016 03be 0C       		.uleb128 0xc
 1017 03bf 73696700 		.ascii	"sig\000"
 1018 03c3 01       		.byte	0x1
 1019 03c4 AD       		.byte	0xad
 1020 03c5 61000000 		.4byte	0x61
 1021 03c9 02       		.byte	0x2
 1022 03ca 91       		.byte	0x91
 1023 03cb 70       		.sleb128 -16
 1024 03cc 00       		.byte	0
 1025 03cd 0F       		.uleb128 0xf
 1026 03ce 01       		.byte	0x1
 1027 03cf 86000000 		.4byte	.LASF62
 1028 03d3 01       		.byte	0x1
 1029 03d4 B7       		.byte	0xb7
 1030 03d5 01       		.byte	0x1
 1031 03d6 61000000 		.4byte	0x61
 1032 03da 00000000 		.4byte	.LFB42
 1033 03de 10000000 		.4byte	.LFE42
 1034 03e2 88010000 		.4byte	.LLST7
 1035 03e6 0A       		.uleb128 0xa
 1036 03e7 01       		.byte	0x1
 1037 03e8 3E020000 		.4byte	.LASF51
 1038 03ec 01       		.byte	0x1
 1039 03ed BC       		.byte	0xbc
 1040 03ee 01       		.byte	0x1
 1041 03ef 61000000 		.4byte	0x61
 1042 03f3 00000000 		.4byte	.LFB43
 1043 03f7 1A000000 		.4byte	.LFE43
 1044 03fb B4010000 		.4byte	.LLST8
 1045 03ff 20040000 		.4byte	0x420
 1046 0403 0C       		.uleb128 0xc
 1047 0404 6F6C6400 		.ascii	"old\000"
ARM GAS  /tmp/ccCWfaoM.s 			page 23


 1048 0408 01       		.byte	0x1
 1049 0409 BC       		.byte	0xbc
 1050 040a A1000000 		.4byte	0xa1
 1051 040e 02       		.byte	0x2
 1052 040f 91       		.byte	0x91
 1053 0410 74       		.sleb128 -12
 1054 0411 0C       		.uleb128 0xc
 1055 0412 6E657700 		.ascii	"new\000"
 1056 0416 01       		.byte	0x1
 1057 0417 BC       		.byte	0xbc
 1058 0418 A1000000 		.4byte	0xa1
 1059 041c 02       		.byte	0x2
 1060 041d 91       		.byte	0x91
 1061 041e 70       		.sleb128 -16
 1062 041f 00       		.byte	0
 1063 0420 0A       		.uleb128 0xa
 1064 0421 01       		.byte	0x1
 1065 0422 59010000 		.4byte	.LASF52
 1066 0426 01       		.byte	0x1
 1067 0427 C1       		.byte	0xc1
 1068 0428 01       		.byte	0x1
 1069 0429 61000000 		.4byte	0x61
 1070 042d 00000000 		.4byte	.LFB44
 1071 0431 18000000 		.4byte	.LFE44
 1072 0435 EC010000 		.4byte	.LLST9
 1073 0439 4C040000 		.4byte	0x44c
 1074 043d 0B       		.uleb128 0xb
 1075 043e 5D000000 		.4byte	.LASF40
 1076 0442 01       		.byte	0x1
 1077 0443 C1       		.byte	0xc1
 1078 0444 61000000 		.4byte	0x61
 1079 0448 02       		.byte	0x2
 1080 0449 91       		.byte	0x91
 1081 044a 74       		.sleb128 -12
 1082 044b 00       		.byte	0
 1083 044c 0A       		.uleb128 0xa
 1084 044d 01       		.byte	0x1
 1085 044e 56000000 		.4byte	.LASF53
 1086 0452 01       		.byte	0x1
 1087 0453 C6       		.byte	0xc6
 1088 0454 01       		.byte	0x1
 1089 0455 61000000 		.4byte	0x61
 1090 0459 00000000 		.4byte	.LFB45
 1091 045d 22000000 		.4byte	.LFE45
 1092 0461 24020000 		.4byte	.LLST10
 1093 0465 85040000 		.4byte	0x485
 1094 0469 0B       		.uleb128 0xb
 1095 046a 5D000000 		.4byte	.LASF40
 1096 046e 01       		.byte	0x1
 1097 046f C6       		.byte	0xc6
 1098 0470 61000000 		.4byte	0x61
 1099 0474 02       		.byte	0x2
 1100 0475 91       		.byte	0x91
 1101 0476 74       		.sleb128 -12
 1102 0477 0C       		.uleb128 0xc
 1103 0478 737400   		.ascii	"st\000"
 1104 047b 01       		.byte	0x1
ARM GAS  /tmp/ccCWfaoM.s 			page 24


 1105 047c C6       		.byte	0xc6
 1106 047d 85040000 		.4byte	0x485
 1107 0481 02       		.byte	0x2
 1108 0482 91       		.byte	0x91
 1109 0483 70       		.sleb128 -16
 1110 0484 00       		.byte	0
 1111 0485 05       		.uleb128 0x5
 1112 0486 04       		.byte	0x4
 1113 0487 11010000 		.4byte	0x111
 1114 048b 10       		.uleb128 0x10
 1115 048c 02020000 		.4byte	.LASF54
 1116 0490 05       		.byte	0x5
 1117 0491 CE06     		.2byte	0x6ce
 1118 0493 99040000 		.4byte	0x499
 1119 0497 01       		.byte	0x1
 1120 0498 01       		.byte	0x1
 1121 0499 11       		.uleb128 0x11
 1122 049a 61000000 		.4byte	0x61
 1123 049e 12       		.uleb128 0x12
 1124 049f 49010000 		.4byte	.LASF55
 1125 04a3 01       		.byte	0x1
 1126 04a4 38       		.byte	0x38
 1127 04a5 61000000 		.4byte	0x61
 1128 04a9 01       		.byte	0x1
 1129 04aa 01       		.byte	0x1
 1130 04ab 12       		.uleb128 0x12
 1131 04ac AE000000 		.4byte	.LASF56
 1132 04b0 01       		.byte	0x1
 1133 04b1 39       		.byte	0x39
 1134 04b2 61000000 		.4byte	0x61
 1135 04b6 01       		.byte	0x1
 1136 04b7 01       		.byte	0x1
 1137 04b8 10       		.uleb128 0x10
 1138 04b9 02020000 		.4byte	.LASF54
 1139 04bd 05       		.byte	0x5
 1140 04be CE06     		.2byte	0x6ce
 1141 04c0 99040000 		.4byte	0x499
 1142 04c4 01       		.byte	0x1
 1143 04c5 01       		.byte	0x1
 1144 04c6 12       		.uleb128 0x12
 1145 04c7 49010000 		.4byte	.LASF55
 1146 04cb 01       		.byte	0x1
 1147 04cc 38       		.byte	0x38
 1148 04cd 61000000 		.4byte	0x61
 1149 04d1 01       		.byte	0x1
 1150 04d2 01       		.byte	0x1
 1151 04d3 12       		.uleb128 0x12
 1152 04d4 AE000000 		.4byte	.LASF56
 1153 04d8 01       		.byte	0x1
 1154 04d9 39       		.byte	0x39
 1155 04da 61000000 		.4byte	0x61
 1156 04de 01       		.byte	0x1
 1157 04df 01       		.byte	0x1
 1158 04e0 00       		.byte	0
 1159              		.section	.debug_abbrev,"",%progbits
 1160              	.Ldebug_abbrev0:
 1161 0000 01       		.uleb128 0x1
ARM GAS  /tmp/ccCWfaoM.s 			page 25


 1162 0001 11       		.uleb128 0x11
 1163 0002 01       		.byte	0x1
 1164 0003 25       		.uleb128 0x25
 1165 0004 0E       		.uleb128 0xe
 1166 0005 13       		.uleb128 0x13
 1167 0006 0B       		.uleb128 0xb
 1168 0007 03       		.uleb128 0x3
 1169 0008 0E       		.uleb128 0xe
 1170 0009 1B       		.uleb128 0x1b
 1171 000a 0E       		.uleb128 0xe
 1172 000b 11       		.uleb128 0x11
 1173 000c 01       		.uleb128 0x1
 1174 000d 52       		.uleb128 0x52
 1175 000e 01       		.uleb128 0x1
 1176 000f 55       		.uleb128 0x55
 1177 0010 06       		.uleb128 0x6
 1178 0011 10       		.uleb128 0x10
 1179 0012 06       		.uleb128 0x6
 1180 0013 00       		.byte	0
 1181 0014 00       		.byte	0
 1182 0015 02       		.uleb128 0x2
 1183 0016 24       		.uleb128 0x24
 1184 0017 00       		.byte	0
 1185 0018 0B       		.uleb128 0xb
 1186 0019 0B       		.uleb128 0xb
 1187 001a 3E       		.uleb128 0x3e
 1188 001b 0B       		.uleb128 0xb
 1189 001c 03       		.uleb128 0x3
 1190 001d 0E       		.uleb128 0xe
 1191 001e 00       		.byte	0
 1192 001f 00       		.byte	0
 1193 0020 03       		.uleb128 0x3
 1194 0021 24       		.uleb128 0x24
 1195 0022 00       		.byte	0
 1196 0023 0B       		.uleb128 0xb
 1197 0024 0B       		.uleb128 0xb
 1198 0025 3E       		.uleb128 0x3e
 1199 0026 0B       		.uleb128 0xb
 1200 0027 03       		.uleb128 0x3
 1201 0028 08       		.uleb128 0x8
 1202 0029 00       		.byte	0
 1203 002a 00       		.byte	0
 1204 002b 04       		.uleb128 0x4
 1205 002c 16       		.uleb128 0x16
 1206 002d 00       		.byte	0
 1207 002e 03       		.uleb128 0x3
 1208 002f 0E       		.uleb128 0xe
 1209 0030 3A       		.uleb128 0x3a
 1210 0031 0B       		.uleb128 0xb
 1211 0032 3B       		.uleb128 0x3b
 1212 0033 0B       		.uleb128 0xb
 1213 0034 49       		.uleb128 0x49
 1214 0035 13       		.uleb128 0x13
 1215 0036 00       		.byte	0
 1216 0037 00       		.byte	0
 1217 0038 05       		.uleb128 0x5
 1218 0039 0F       		.uleb128 0xf
ARM GAS  /tmp/ccCWfaoM.s 			page 26


 1219 003a 00       		.byte	0
 1220 003b 0B       		.uleb128 0xb
 1221 003c 0B       		.uleb128 0xb
 1222 003d 49       		.uleb128 0x49
 1223 003e 13       		.uleb128 0x13
 1224 003f 00       		.byte	0
 1225 0040 00       		.byte	0
 1226 0041 06       		.uleb128 0x6
 1227 0042 13       		.uleb128 0x13
 1228 0043 01       		.byte	0x1
 1229 0044 03       		.uleb128 0x3
 1230 0045 0E       		.uleb128 0xe
 1231 0046 0B       		.uleb128 0xb
 1232 0047 0B       		.uleb128 0xb
 1233 0048 3A       		.uleb128 0x3a
 1234 0049 0B       		.uleb128 0xb
 1235 004a 3B       		.uleb128 0x3b
 1236 004b 0B       		.uleb128 0xb
 1237 004c 01       		.uleb128 0x1
 1238 004d 13       		.uleb128 0x13
 1239 004e 00       		.byte	0
 1240 004f 00       		.byte	0
 1241 0050 07       		.uleb128 0x7
 1242 0051 0D       		.uleb128 0xd
 1243 0052 00       		.byte	0
 1244 0053 03       		.uleb128 0x3
 1245 0054 0E       		.uleb128 0xe
 1246 0055 3A       		.uleb128 0x3a
 1247 0056 0B       		.uleb128 0xb
 1248 0057 3B       		.uleb128 0x3b
 1249 0058 0B       		.uleb128 0xb
 1250 0059 49       		.uleb128 0x49
 1251 005a 13       		.uleb128 0x13
 1252 005b 38       		.uleb128 0x38
 1253 005c 0A       		.uleb128 0xa
 1254 005d 00       		.byte	0
 1255 005e 00       		.byte	0
 1256 005f 08       		.uleb128 0x8
 1257 0060 01       		.uleb128 0x1
 1258 0061 01       		.byte	0x1
 1259 0062 49       		.uleb128 0x49
 1260 0063 13       		.uleb128 0x13
 1261 0064 01       		.uleb128 0x1
 1262 0065 13       		.uleb128 0x13
 1263 0066 00       		.byte	0
 1264 0067 00       		.byte	0
 1265 0068 09       		.uleb128 0x9
 1266 0069 21       		.uleb128 0x21
 1267 006a 00       		.byte	0
 1268 006b 49       		.uleb128 0x49
 1269 006c 13       		.uleb128 0x13
 1270 006d 2F       		.uleb128 0x2f
 1271 006e 0B       		.uleb128 0xb
 1272 006f 00       		.byte	0
 1273 0070 00       		.byte	0
 1274 0071 0A       		.uleb128 0xa
 1275 0072 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccCWfaoM.s 			page 27


 1276 0073 01       		.byte	0x1
 1277 0074 3F       		.uleb128 0x3f
 1278 0075 0C       		.uleb128 0xc
 1279 0076 03       		.uleb128 0x3
 1280 0077 0E       		.uleb128 0xe
 1281 0078 3A       		.uleb128 0x3a
 1282 0079 0B       		.uleb128 0xb
 1283 007a 3B       		.uleb128 0x3b
 1284 007b 0B       		.uleb128 0xb
 1285 007c 27       		.uleb128 0x27
 1286 007d 0C       		.uleb128 0xc
 1287 007e 49       		.uleb128 0x49
 1288 007f 13       		.uleb128 0x13
 1289 0080 11       		.uleb128 0x11
 1290 0081 01       		.uleb128 0x1
 1291 0082 12       		.uleb128 0x12
 1292 0083 01       		.uleb128 0x1
 1293 0084 40       		.uleb128 0x40
 1294 0085 06       		.uleb128 0x6
 1295 0086 01       		.uleb128 0x1
 1296 0087 13       		.uleb128 0x13
 1297 0088 00       		.byte	0
 1298 0089 00       		.byte	0
 1299 008a 0B       		.uleb128 0xb
 1300 008b 05       		.uleb128 0x5
 1301 008c 00       		.byte	0
 1302 008d 03       		.uleb128 0x3
 1303 008e 0E       		.uleb128 0xe
 1304 008f 3A       		.uleb128 0x3a
 1305 0090 0B       		.uleb128 0xb
 1306 0091 3B       		.uleb128 0x3b
 1307 0092 0B       		.uleb128 0xb
 1308 0093 49       		.uleb128 0x49
 1309 0094 13       		.uleb128 0x13
 1310 0095 02       		.uleb128 0x2
 1311 0096 0A       		.uleb128 0xa
 1312 0097 00       		.byte	0
 1313 0098 00       		.byte	0
 1314 0099 0C       		.uleb128 0xc
 1315 009a 05       		.uleb128 0x5
 1316 009b 00       		.byte	0
 1317 009c 03       		.uleb128 0x3
 1318 009d 08       		.uleb128 0x8
 1319 009e 3A       		.uleb128 0x3a
 1320 009f 0B       		.uleb128 0xb
 1321 00a0 3B       		.uleb128 0x3b
 1322 00a1 0B       		.uleb128 0xb
 1323 00a2 49       		.uleb128 0x49
 1324 00a3 13       		.uleb128 0x13
 1325 00a4 02       		.uleb128 0x2
 1326 00a5 0A       		.uleb128 0xa
 1327 00a6 00       		.byte	0
 1328 00a7 00       		.byte	0
 1329 00a8 0D       		.uleb128 0xd
 1330 00a9 34       		.uleb128 0x34
 1331 00aa 00       		.byte	0
 1332 00ab 03       		.uleb128 0x3
ARM GAS  /tmp/ccCWfaoM.s 			page 28


 1333 00ac 0E       		.uleb128 0xe
 1334 00ad 3A       		.uleb128 0x3a
 1335 00ae 0B       		.uleb128 0xb
 1336 00af 3B       		.uleb128 0x3b
 1337 00b0 0B       		.uleb128 0xb
 1338 00b1 49       		.uleb128 0x49
 1339 00b2 13       		.uleb128 0x13
 1340 00b3 02       		.uleb128 0x2
 1341 00b4 0A       		.uleb128 0xa
 1342 00b5 00       		.byte	0
 1343 00b6 00       		.byte	0
 1344 00b7 0E       		.uleb128 0xe
 1345 00b8 2E       		.uleb128 0x2e
 1346 00b9 01       		.byte	0x1
 1347 00ba 3F       		.uleb128 0x3f
 1348 00bb 0C       		.uleb128 0xc
 1349 00bc 03       		.uleb128 0x3
 1350 00bd 0E       		.uleb128 0xe
 1351 00be 3A       		.uleb128 0x3a
 1352 00bf 0B       		.uleb128 0xb
 1353 00c0 3B       		.uleb128 0x3b
 1354 00c1 0B       		.uleb128 0xb
 1355 00c2 27       		.uleb128 0x27
 1356 00c3 0C       		.uleb128 0xc
 1357 00c4 11       		.uleb128 0x11
 1358 00c5 01       		.uleb128 0x1
 1359 00c6 12       		.uleb128 0x12
 1360 00c7 01       		.uleb128 0x1
 1361 00c8 40       		.uleb128 0x40
 1362 00c9 06       		.uleb128 0x6
 1363 00ca 01       		.uleb128 0x1
 1364 00cb 13       		.uleb128 0x13
 1365 00cc 00       		.byte	0
 1366 00cd 00       		.byte	0
 1367 00ce 0F       		.uleb128 0xf
 1368 00cf 2E       		.uleb128 0x2e
 1369 00d0 00       		.byte	0
 1370 00d1 3F       		.uleb128 0x3f
 1371 00d2 0C       		.uleb128 0xc
 1372 00d3 03       		.uleb128 0x3
 1373 00d4 0E       		.uleb128 0xe
 1374 00d5 3A       		.uleb128 0x3a
 1375 00d6 0B       		.uleb128 0xb
 1376 00d7 3B       		.uleb128 0x3b
 1377 00d8 0B       		.uleb128 0xb
 1378 00d9 27       		.uleb128 0x27
 1379 00da 0C       		.uleb128 0xc
 1380 00db 49       		.uleb128 0x49
 1381 00dc 13       		.uleb128 0x13
 1382 00dd 11       		.uleb128 0x11
 1383 00de 01       		.uleb128 0x1
 1384 00df 12       		.uleb128 0x12
 1385 00e0 01       		.uleb128 0x1
 1386 00e1 40       		.uleb128 0x40
 1387 00e2 06       		.uleb128 0x6
 1388 00e3 00       		.byte	0
 1389 00e4 00       		.byte	0
ARM GAS  /tmp/ccCWfaoM.s 			page 29


 1390 00e5 10       		.uleb128 0x10
 1391 00e6 34       		.uleb128 0x34
 1392 00e7 00       		.byte	0
 1393 00e8 03       		.uleb128 0x3
 1394 00e9 0E       		.uleb128 0xe
 1395 00ea 3A       		.uleb128 0x3a
 1396 00eb 0B       		.uleb128 0xb
 1397 00ec 3B       		.uleb128 0x3b
 1398 00ed 05       		.uleb128 0x5
 1399 00ee 49       		.uleb128 0x49
 1400 00ef 13       		.uleb128 0x13
 1401 00f0 3F       		.uleb128 0x3f
 1402 00f1 0C       		.uleb128 0xc
 1403 00f2 3C       		.uleb128 0x3c
 1404 00f3 0C       		.uleb128 0xc
 1405 00f4 00       		.byte	0
 1406 00f5 00       		.byte	0
 1407 00f6 11       		.uleb128 0x11
 1408 00f7 35       		.uleb128 0x35
 1409 00f8 00       		.byte	0
 1410 00f9 49       		.uleb128 0x49
 1411 00fa 13       		.uleb128 0x13
 1412 00fb 00       		.byte	0
 1413 00fc 00       		.byte	0
 1414 00fd 12       		.uleb128 0x12
 1415 00fe 34       		.uleb128 0x34
 1416 00ff 00       		.byte	0
 1417 0100 03       		.uleb128 0x3
 1418 0101 0E       		.uleb128 0xe
 1419 0102 3A       		.uleb128 0x3a
 1420 0103 0B       		.uleb128 0xb
 1421 0104 3B       		.uleb128 0x3b
 1422 0105 0B       		.uleb128 0xb
 1423 0106 49       		.uleb128 0x49
 1424 0107 13       		.uleb128 0x13
 1425 0108 3F       		.uleb128 0x3f
 1426 0109 0C       		.uleb128 0xc
 1427 010a 3C       		.uleb128 0x3c
 1428 010b 0C       		.uleb128 0xc
 1429 010c 00       		.byte	0
 1430 010d 00       		.byte	0
 1431 010e 00       		.byte	0
 1432              		.section	.debug_loc,"",%progbits
 1433              	.Ldebug_loc0:
 1434              	.LLST0:
 1435 0000 00000000 		.4byte	.LFB35
 1436 0004 02000000 		.4byte	.LCFI0
 1437 0008 0200     		.2byte	0x2
 1438 000a 7D       		.byte	0x7d
 1439 000b 00       		.sleb128 0
 1440 000c 02000000 		.4byte	.LCFI0
 1441 0010 04000000 		.4byte	.LCFI1
 1442 0014 0200     		.2byte	0x2
 1443 0016 7D       		.byte	0x7d
 1444 0017 08       		.sleb128 8
 1445 0018 04000000 		.4byte	.LCFI1
 1446 001c 06000000 		.4byte	.LCFI2
ARM GAS  /tmp/ccCWfaoM.s 			page 30


 1447 0020 0200     		.2byte	0x2
 1448 0022 7D       		.byte	0x7d
 1449 0023 18       		.sleb128 24
 1450 0024 06000000 		.4byte	.LCFI2
 1451 0028 54000000 		.4byte	.LFE35
 1452 002c 0200     		.2byte	0x2
 1453 002e 77       		.byte	0x77
 1454 002f 18       		.sleb128 24
 1455 0030 00000000 		.4byte	0
 1456 0034 00000000 		.4byte	0
 1457              	.LLST1:
 1458 0038 00000000 		.4byte	.LFB36
 1459 003c 02000000 		.4byte	.LCFI3
 1460 0040 0200     		.2byte	0x2
 1461 0042 7D       		.byte	0x7d
 1462 0043 00       		.sleb128 0
 1463 0044 02000000 		.4byte	.LCFI3
 1464 0048 04000000 		.4byte	.LCFI4
 1465 004c 0200     		.2byte	0x2
 1466 004e 7D       		.byte	0x7d
 1467 004f 08       		.sleb128 8
 1468 0050 04000000 		.4byte	.LCFI4
 1469 0054 06000000 		.4byte	.LCFI5
 1470 0058 0200     		.2byte	0x2
 1471 005a 7D       		.byte	0x7d
 1472 005b 18       		.sleb128 24
 1473 005c 06000000 		.4byte	.LCFI5
 1474 0060 54000000 		.4byte	.LFE36
 1475 0064 0200     		.2byte	0x2
 1476 0066 77       		.byte	0x77
 1477 0067 18       		.sleb128 24
 1478 0068 00000000 		.4byte	0
 1479 006c 00000000 		.4byte	0
 1480              	.LLST2:
 1481 0070 00000000 		.4byte	.LFB37
 1482 0074 02000000 		.4byte	.LCFI6
 1483 0078 0200     		.2byte	0x2
 1484 007a 7D       		.byte	0x7d
 1485 007b 00       		.sleb128 0
 1486 007c 02000000 		.4byte	.LCFI6
 1487 0080 04000000 		.4byte	.LCFI7
 1488 0084 0200     		.2byte	0x2
 1489 0086 7D       		.byte	0x7d
 1490 0087 04       		.sleb128 4
 1491 0088 04000000 		.4byte	.LCFI7
 1492 008c 06000000 		.4byte	.LCFI8
 1493 0090 0200     		.2byte	0x2
 1494 0092 7D       		.byte	0x7d
 1495 0093 18       		.sleb128 24
 1496 0094 06000000 		.4byte	.LCFI8
 1497 0098 5A000000 		.4byte	.LFE37
 1498 009c 0200     		.2byte	0x2
 1499 009e 77       		.byte	0x77
 1500 009f 18       		.sleb128 24
 1501 00a0 00000000 		.4byte	0
 1502 00a4 00000000 		.4byte	0
 1503              	.LLST3:
ARM GAS  /tmp/ccCWfaoM.s 			page 31


 1504 00a8 00000000 		.4byte	.LFB38
 1505 00ac 02000000 		.4byte	.LCFI9
 1506 00b0 0200     		.2byte	0x2
 1507 00b2 7D       		.byte	0x7d
 1508 00b3 00       		.sleb128 0
 1509 00b4 02000000 		.4byte	.LCFI9
 1510 00b8 04000000 		.4byte	.LCFI10
 1511 00bc 0200     		.2byte	0x2
 1512 00be 7D       		.byte	0x7d
 1513 00bf 04       		.sleb128 4
 1514 00c0 04000000 		.4byte	.LCFI10
 1515 00c4 06000000 		.4byte	.LCFI11
 1516 00c8 0200     		.2byte	0x2
 1517 00ca 7D       		.byte	0x7d
 1518 00cb 10       		.sleb128 16
 1519 00cc 06000000 		.4byte	.LCFI11
 1520 00d0 26000000 		.4byte	.LFE38
 1521 00d4 0200     		.2byte	0x2
 1522 00d6 77       		.byte	0x77
 1523 00d7 10       		.sleb128 16
 1524 00d8 00000000 		.4byte	0
 1525 00dc 00000000 		.4byte	0
 1526              	.LLST4:
 1527 00e0 00000000 		.4byte	.LFB39
 1528 00e4 02000000 		.4byte	.LCFI12
 1529 00e8 0200     		.2byte	0x2
 1530 00ea 7D       		.byte	0x7d
 1531 00eb 00       		.sleb128 0
 1532 00ec 02000000 		.4byte	.LCFI12
 1533 00f0 04000000 		.4byte	.LCFI13
 1534 00f4 0200     		.2byte	0x2
 1535 00f6 7D       		.byte	0x7d
 1536 00f7 08       		.sleb128 8
 1537 00f8 04000000 		.4byte	.LCFI13
 1538 00fc 06000000 		.4byte	.LCFI14
 1539 0100 0200     		.2byte	0x2
 1540 0102 7D       		.byte	0x7d
 1541 0103 10       		.sleb128 16
 1542 0104 06000000 		.4byte	.LCFI14
 1543 0108 18000000 		.4byte	.LFE39
 1544 010c 0200     		.2byte	0x2
 1545 010e 77       		.byte	0x77
 1546 010f 10       		.sleb128 16
 1547 0110 00000000 		.4byte	0
 1548 0114 00000000 		.4byte	0
 1549              	.LLST5:
 1550 0118 00000000 		.4byte	.LFB40
 1551 011c 02000000 		.4byte	.LCFI15
 1552 0120 0200     		.2byte	0x2
 1553 0122 7D       		.byte	0x7d
 1554 0123 00       		.sleb128 0
 1555 0124 02000000 		.4byte	.LCFI15
 1556 0128 04000000 		.4byte	.LCFI16
 1557 012c 0200     		.2byte	0x2
 1558 012e 7D       		.byte	0x7d
 1559 012f 04       		.sleb128 4
 1560 0130 04000000 		.4byte	.LCFI16
ARM GAS  /tmp/ccCWfaoM.s 			page 32


 1561 0134 06000000 		.4byte	.LCFI17
 1562 0138 0200     		.2byte	0x2
 1563 013a 7D       		.byte	0x7d
 1564 013b 18       		.sleb128 24
 1565 013c 06000000 		.4byte	.LCFI17
 1566 0140 1C000000 		.4byte	.LFE40
 1567 0144 0200     		.2byte	0x2
 1568 0146 77       		.byte	0x77
 1569 0147 18       		.sleb128 24
 1570 0148 00000000 		.4byte	0
 1571 014c 00000000 		.4byte	0
 1572              	.LLST6:
 1573 0150 00000000 		.4byte	.LFB41
 1574 0154 02000000 		.4byte	.LCFI18
 1575 0158 0200     		.2byte	0x2
 1576 015a 7D       		.byte	0x7d
 1577 015b 00       		.sleb128 0
 1578 015c 02000000 		.4byte	.LCFI18
 1579 0160 04000000 		.4byte	.LCFI19
 1580 0164 0200     		.2byte	0x2
 1581 0166 7D       		.byte	0x7d
 1582 0167 04       		.sleb128 4
 1583 0168 04000000 		.4byte	.LCFI19
 1584 016c 06000000 		.4byte	.LCFI20
 1585 0170 0200     		.2byte	0x2
 1586 0172 7D       		.byte	0x7d
 1587 0173 10       		.sleb128 16
 1588 0174 06000000 		.4byte	.LCFI20
 1589 0178 28000000 		.4byte	.LFE41
 1590 017c 0200     		.2byte	0x2
 1591 017e 77       		.byte	0x77
 1592 017f 10       		.sleb128 16
 1593 0180 00000000 		.4byte	0
 1594 0184 00000000 		.4byte	0
 1595              	.LLST7:
 1596 0188 00000000 		.4byte	.LFB42
 1597 018c 02000000 		.4byte	.LCFI21
 1598 0190 0200     		.2byte	0x2
 1599 0192 7D       		.byte	0x7d
 1600 0193 00       		.sleb128 0
 1601 0194 02000000 		.4byte	.LCFI21
 1602 0198 04000000 		.4byte	.LCFI22
 1603 019c 0200     		.2byte	0x2
 1604 019e 7D       		.byte	0x7d
 1605 019f 04       		.sleb128 4
 1606 01a0 04000000 		.4byte	.LCFI22
 1607 01a4 10000000 		.4byte	.LFE42
 1608 01a8 0200     		.2byte	0x2
 1609 01aa 77       		.byte	0x77
 1610 01ab 04       		.sleb128 4
 1611 01ac 00000000 		.4byte	0
 1612 01b0 00000000 		.4byte	0
 1613              	.LLST8:
 1614 01b4 00000000 		.4byte	.LFB43
 1615 01b8 02000000 		.4byte	.LCFI23
 1616 01bc 0200     		.2byte	0x2
 1617 01be 7D       		.byte	0x7d
ARM GAS  /tmp/ccCWfaoM.s 			page 33


 1618 01bf 00       		.sleb128 0
 1619 01c0 02000000 		.4byte	.LCFI23
 1620 01c4 04000000 		.4byte	.LCFI24
 1621 01c8 0200     		.2byte	0x2
 1622 01ca 7D       		.byte	0x7d
 1623 01cb 04       		.sleb128 4
 1624 01cc 04000000 		.4byte	.LCFI24
 1625 01d0 06000000 		.4byte	.LCFI25
 1626 01d4 0200     		.2byte	0x2
 1627 01d6 7D       		.byte	0x7d
 1628 01d7 10       		.sleb128 16
 1629 01d8 06000000 		.4byte	.LCFI25
 1630 01dc 1A000000 		.4byte	.LFE43
 1631 01e0 0200     		.2byte	0x2
 1632 01e2 77       		.byte	0x77
 1633 01e3 10       		.sleb128 16
 1634 01e4 00000000 		.4byte	0
 1635 01e8 00000000 		.4byte	0
 1636              	.LLST9:
 1637 01ec 00000000 		.4byte	.LFB44
 1638 01f0 02000000 		.4byte	.LCFI26
 1639 01f4 0200     		.2byte	0x2
 1640 01f6 7D       		.byte	0x7d
 1641 01f7 00       		.sleb128 0
 1642 01f8 02000000 		.4byte	.LCFI26
 1643 01fc 04000000 		.4byte	.LCFI27
 1644 0200 0200     		.2byte	0x2
 1645 0202 7D       		.byte	0x7d
 1646 0203 04       		.sleb128 4
 1647 0204 04000000 		.4byte	.LCFI27
 1648 0208 06000000 		.4byte	.LCFI28
 1649 020c 0200     		.2byte	0x2
 1650 020e 7D       		.byte	0x7d
 1651 020f 10       		.sleb128 16
 1652 0210 06000000 		.4byte	.LCFI28
 1653 0214 18000000 		.4byte	.LFE44
 1654 0218 0200     		.2byte	0x2
 1655 021a 77       		.byte	0x77
 1656 021b 10       		.sleb128 16
 1657 021c 00000000 		.4byte	0
 1658 0220 00000000 		.4byte	0
 1659              	.LLST10:
 1660 0224 00000000 		.4byte	.LFB45
 1661 0228 02000000 		.4byte	.LCFI29
 1662 022c 0200     		.2byte	0x2
 1663 022e 7D       		.byte	0x7d
 1664 022f 00       		.sleb128 0
 1665 0230 02000000 		.4byte	.LCFI29
 1666 0234 04000000 		.4byte	.LCFI30
 1667 0238 0200     		.2byte	0x2
 1668 023a 7D       		.byte	0x7d
 1669 023b 04       		.sleb128 4
 1670 023c 04000000 		.4byte	.LCFI30
 1671 0240 06000000 		.4byte	.LCFI31
 1672 0244 0200     		.2byte	0x2
 1673 0246 7D       		.byte	0x7d
 1674 0247 10       		.sleb128 16
ARM GAS  /tmp/ccCWfaoM.s 			page 34


 1675 0248 06000000 		.4byte	.LCFI31
 1676 024c 22000000 		.4byte	.LFE45
 1677 0250 0200     		.2byte	0x2
 1678 0252 77       		.byte	0x77
 1679 0253 10       		.sleb128 16
 1680 0254 00000000 		.4byte	0
 1681 0258 00000000 		.4byte	0
 1682              		.section	.debug_aranges,"",%progbits
 1683 0000 6C000000 		.4byte	0x6c
 1684 0004 0200     		.2byte	0x2
 1685 0006 00000000 		.4byte	.Ldebug_info0
 1686 000a 04       		.byte	0x4
 1687 000b 00       		.byte	0
 1688 000c 0000     		.2byte	0
 1689 000e 0000     		.2byte	0
 1690 0010 00000000 		.4byte	.LFB35
 1691 0014 54000000 		.4byte	.LFE35-.LFB35
 1692 0018 00000000 		.4byte	.LFB36
 1693 001c 54000000 		.4byte	.LFE36-.LFB36
 1694 0020 00000000 		.4byte	.LFB37
 1695 0024 5A000000 		.4byte	.LFE37-.LFB37
 1696 0028 00000000 		.4byte	.LFB38
 1697 002c 26000000 		.4byte	.LFE38-.LFB38
 1698 0030 00000000 		.4byte	.LFB39
 1699 0034 18000000 		.4byte	.LFE39-.LFB39
 1700 0038 00000000 		.4byte	.LFB40
 1701 003c 1C000000 		.4byte	.LFE40-.LFB40
 1702 0040 00000000 		.4byte	.LFB41
 1703 0044 28000000 		.4byte	.LFE41-.LFB41
 1704 0048 00000000 		.4byte	.LFB42
 1705 004c 10000000 		.4byte	.LFE42-.LFB42
 1706 0050 00000000 		.4byte	.LFB43
 1707 0054 1A000000 		.4byte	.LFE43-.LFB43
 1708 0058 00000000 		.4byte	.LFB44
 1709 005c 18000000 		.4byte	.LFE44-.LFB44
 1710 0060 00000000 		.4byte	.LFB45
 1711 0064 22000000 		.4byte	.LFE45-.LFB45
 1712 0068 00000000 		.4byte	0
 1713 006c 00000000 		.4byte	0
 1714              		.section	.debug_ranges,"",%progbits
 1715              	.Ldebug_ranges0:
 1716 0000 00000000 		.4byte	.LFB35
 1717 0004 54000000 		.4byte	.LFE35
 1718 0008 00000000 		.4byte	.LFB36
 1719 000c 54000000 		.4byte	.LFE36
 1720 0010 00000000 		.4byte	.LFB37
 1721 0014 5A000000 		.4byte	.LFE37
 1722 0018 00000000 		.4byte	.LFB38
 1723 001c 26000000 		.4byte	.LFE38
 1724 0020 00000000 		.4byte	.LFB39
 1725 0024 18000000 		.4byte	.LFE39
 1726 0028 00000000 		.4byte	.LFB40
 1727 002c 1C000000 		.4byte	.LFE40
 1728 0030 00000000 		.4byte	.LFB41
 1729 0034 28000000 		.4byte	.LFE41
 1730 0038 00000000 		.4byte	.LFB42
 1731 003c 10000000 		.4byte	.LFE42
ARM GAS  /tmp/ccCWfaoM.s 			page 35


 1732 0040 00000000 		.4byte	.LFB43
 1733 0044 1A000000 		.4byte	.LFE43
 1734 0048 00000000 		.4byte	.LFB44
 1735 004c 18000000 		.4byte	.LFE44
 1736 0050 00000000 		.4byte	.LFB45
 1737 0054 22000000 		.4byte	.LFE45
 1738 0058 00000000 		.4byte	0
 1739 005c 00000000 		.4byte	0
 1740              		.section	.debug_line,"",%progbits
 1741              	.Ldebug_line0:
 1742 0000 B3010000 		.section	.debug_str,"MS",%progbits,1
 1742      0200CD00 
 1742      00000201 
 1742      FB0E0D00 
 1742      01010101 
 1743              	.LASF29:
 1744 0000 73745F72 		.ascii	"st_rdev\000"
 1744      64657600 
 1745              	.LASF44:
 1746 0008 696E6372 		.ascii	"incr\000"
 1746      00
 1747              	.LASF19:
 1748 000d 7569645F 		.ascii	"uid_t\000"
 1748      7400
 1749              	.LASF21:
 1750 0013 6D6F6465 		.ascii	"mode_t\000"
 1750      5F7400
 1751              	.LASF9:
 1752 001a 5F6F6666 		.ascii	"_off_t\000"
 1752      5F7400
 1753              	.LASF2:
 1754 0021 73686F72 		.ascii	"short int\000"
 1754      7420696E 
 1754      7400
 1755              	.LASF35:
 1756 002b 73745F63 		.ascii	"st_ctime\000"
 1756      74696D65 
 1756      00
 1757              	.LASF61:
 1758 0034 5F657869 		.ascii	"_exit\000"
 1758      7400
 1759              	.LASF6:
 1760 003a 6C6F6E67 		.ascii	"long long int\000"
 1760      206C6F6E 
 1760      6720696E 
 1760      7400
 1761              	.LASF42:
 1762 0048 5F777269 		.ascii	"_write\000"
 1762      746500
 1763              	.LASF23:
 1764 004f 73745F64 		.ascii	"st_dev\000"
 1764      657600
 1765              	.LASF53:
 1766 0056 5F667374 		.ascii	"_fstat\000"
 1766      617400
 1767              	.LASF40:
 1768 005d 66696C65 		.ascii	"file\000"
ARM GAS  /tmp/ccCWfaoM.s 			page 36


 1768      00
 1769              	.LASF50:
 1770 0062 5F6B696C 		.ascii	"_kill\000"
 1770      6C00
 1771              	.LASF22:
 1772 0068 6E6C696E 		.ascii	"nlink_t\000"
 1772      6B5F7400 
 1773              	.LASF58:
 1774 0070 626F6172 		.ascii	"board/syscalls.c\000"
 1774      642F7379 
 1774      7363616C 
 1774      6C732E63 
 1774      00
 1775              	.LASF45:
 1776 0081 68656170 		.ascii	"heap\000"
 1776      00
 1777              	.LASF62:
 1778 0086 5F676574 		.ascii	"_getpid\000"
 1778      70696400 
 1779              	.LASF37:
 1780 008e 73745F62 		.ascii	"st_blksize\000"
 1780      6C6B7369 
 1780      7A6500
 1781              	.LASF47:
 1782 0099 5F697361 		.ascii	"_isatty\000"
 1782      74747900 
 1783              	.LASF28:
 1784 00a1 73745F67 		.ascii	"st_gid\000"
 1784      696400
 1785              	.LASF16:
 1786 00a8 696E6F5F 		.ascii	"ino_t\000"
 1786      7400
 1787              	.LASF56:
 1788 00ae 5F656E64 		.ascii	"_end\000"
 1788      00
 1789              	.LASF4:
 1790 00b3 6C6F6E67 		.ascii	"long int\000"
 1790      20696E74 
 1790      00
 1791              	.LASF31:
 1792 00bc 73745F61 		.ascii	"st_atime\000"
 1792      74696D65 
 1792      00
 1793              	.LASF20:
 1794 00c5 6769645F 		.ascii	"gid_t\000"
 1794      7400
 1795              	.LASF18:
 1796 00cb 6465765F 		.ascii	"dev_t\000"
 1796      7400
 1797              	.LASF1:
 1798 00d1 756E7369 		.ascii	"unsigned char\000"
 1798      676E6564 
 1798      20636861 
 1798      7200
 1799              	.LASF14:
 1800 00df 74696D65 		.ascii	"time_t\000"
 1800      5F7400
ARM GAS  /tmp/ccCWfaoM.s 			page 37


 1801              	.LASF24:
 1802 00e6 73745F69 		.ascii	"st_ino\000"
 1802      6E6F00
 1803              	.LASF0:
 1804 00ed 7369676E 		.ascii	"signed char\000"
 1804      65642063 
 1804      68617200 
 1805              	.LASF7:
 1806 00f9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1806      206C6F6E 
 1806      6720756E 
 1806      7369676E 
 1806      65642069 
 1807              	.LASF8:
 1808 0110 756E7369 		.ascii	"unsigned int\000"
 1808      676E6564 
 1808      20696E74 
 1808      00
 1809              	.LASF26:
 1810 011d 73745F6E 		.ascii	"st_nlink\000"
 1810      6C696E6B 
 1810      00
 1811              	.LASF48:
 1812 0126 73746174 		.ascii	"status\000"
 1812      757300
 1813              	.LASF3:
 1814 012d 73686F72 		.ascii	"short unsigned int\000"
 1814      7420756E 
 1814      7369676E 
 1814      65642069 
 1814      6E7400
 1815              	.LASF33:
 1816 0140 73745F6D 		.ascii	"st_mtime\000"
 1816      74696D65 
 1816      00
 1817              	.LASF55:
 1818 0149 6572726E 		.ascii	"errno\000"
 1818      6F00
 1819              	.LASF34:
 1820 014f 73745F73 		.ascii	"st_spare2\000"
 1820      70617265 
 1820      3200
 1821              	.LASF52:
 1822 0159 5F636C6F 		.ascii	"_close\000"
 1822      736500
 1823              	.LASF13:
 1824 0160 63686172 		.ascii	"char\000"
 1824      00
 1825              	.LASF43:
 1826 0165 5F736272 		.ascii	"_sbrk\000"
 1826      6B00
 1827              	.LASF57:
 1828 016b 474E5520 		.ascii	"GNU C 4.6.1\000"
 1828      4320342E 
 1828      362E3100 
 1829              	.LASF15:
 1830 0177 63616464 		.ascii	"caddr_t\000"
ARM GAS  /tmp/ccCWfaoM.s 			page 38


 1830      725F7400 
 1831              	.LASF38:
 1832 017f 73745F62 		.ascii	"st_blocks\000"
 1832      6C6F636B 
 1832      7300
 1833              	.LASF27:
 1834 0189 73745F75 		.ascii	"st_uid\000"
 1834      696400
 1835              	.LASF46:
 1836 0190 70726576 		.ascii	"prev_heap\000"
 1836      5F686561 
 1836      7000
 1837              	.LASF30:
 1838 019a 73745F73 		.ascii	"st_size\000"
 1838      697A6500 
 1839              	.LASF32:
 1840 01a2 73745F73 		.ascii	"st_spare1\000"
 1840      70617265 
 1840      3100
 1841              	.LASF5:
 1842 01ac 6C6F6E67 		.ascii	"long unsigned int\000"
 1842      20756E73 
 1842      69676E65 
 1842      6420696E 
 1842      7400
 1843              	.LASF36:
 1844 01be 73745F73 		.ascii	"st_spare3\000"
 1844      70617265 
 1844      3300
 1845              	.LASF39:
 1846 01c8 73745F73 		.ascii	"st_spare4\000"
 1846      70617265 
 1846      3400
 1847              	.LASF49:
 1848 01d2 5F6C7365 		.ascii	"_lseek\000"
 1848      656B00
 1849              	.LASF41:
 1850 01d9 5F726561 		.ascii	"_read\000"
 1850      6400
 1851              	.LASF17:
 1852 01df 6F66665F 		.ascii	"off_t\000"
 1852      7400
 1853              	.LASF10:
 1854 01e5 5F5F6465 		.ascii	"__dev_t\000"
 1854      765F7400 
 1855              	.LASF11:
 1856 01ed 5F5F7569 		.ascii	"__uid_t\000"
 1856      645F7400 
 1857              	.LASF60:
 1858 01f5 73746174 		.ascii	"stat\000"
 1858      00
 1859              	.LASF25:
 1860 01fa 73745F6D 		.ascii	"st_mode\000"
 1860      6F646500 
 1861              	.LASF54:
 1862 0202 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1862      52784275 
ARM GAS  /tmp/ccCWfaoM.s 			page 39


 1862      66666572 
 1862      00
 1863              	.LASF59:
 1864 020f 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 1864      652F6D6F 
 1864      2F646F63 
 1864      2F737475 
 1864      6469756D 
 1865              	.LASF51:
 1866 023e 5F6C696E 		.ascii	"_link\000"
 1866      6B00
 1867              	.LASF12:
 1868 0244 5F5F6769 		.ascii	"__gid_t\000"
 1868      645F7400 
 1869              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/ccCWfaoM.s 			page 40


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
     /tmp/ccCWfaoM.s:19     .text._read:00000000 $t
     /tmp/ccCWfaoM.s:24     .text._read:00000000 _read
     /tmp/ccCWfaoM.s:92     .text._write:00000000 $t
     /tmp/ccCWfaoM.s:97     .text._write:00000000 _write
     /tmp/ccCWfaoM.s:164    .text._sbrk:00000000 $t
     /tmp/ccCWfaoM.s:169    .text._sbrk:00000000 _sbrk
     /tmp/ccCWfaoM.s:525    .bss:00000000 heap.7559
     /tmp/ccCWfaoM.s:226    .text._isatty:00000000 $t
     /tmp/ccCWfaoM.s:231    .text._isatty:00000000 _isatty
     /tmp/ccCWfaoM.s:266    .rodata:00000000 $d
     /tmp/ccCWfaoM.s:267    .rodata:00000000 .LC0
     /tmp/ccCWfaoM.s:270    .text._exit:00000000 $t
     /tmp/ccCWfaoM.s:275    .text._exit:00000000 _exit
     /tmp/ccCWfaoM.s:305    .text._lseek:00000000 $t
     /tmp/ccCWfaoM.s:310    .text._lseek:00000000 _lseek
     /tmp/ccCWfaoM.s:342    .text._kill:00000000 $t
     /tmp/ccCWfaoM.s:347    .text._kill:00000000 _kill
     /tmp/ccCWfaoM.s:383    .text._getpid:00000000 $t
     /tmp/ccCWfaoM.s:388    .text._getpid:00000000 _getpid
     /tmp/ccCWfaoM.s:413    .text._link:00000000 $t
     /tmp/ccCWfaoM.s:418    .text._link:00000000 _link
     /tmp/ccCWfaoM.s:449    .text._close:00000000 $t
     /tmp/ccCWfaoM.s:454    .text._close:00000000 _close
     /tmp/ccCWfaoM.s:484    .text._fstat:00000000 $t
     /tmp/ccCWfaoM.s:489    .text._fstat:00000000 _fstat
     /tmp/ccCWfaoM.s:524    .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USBC_Gets
UART_Gets
errno
USBC_Puts
UART_Puts
_end
iprintf
