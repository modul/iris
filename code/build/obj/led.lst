ARM GAS  /tmp/cctnQ2aC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"led.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/cctnQ2aC.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctnQ2aC.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/cctnQ2aC.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctnQ2aC.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctnQ2aC.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/cctnQ2aC.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/cctnQ2aC.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/cctnQ2aC.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/cctnQ2aC.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/cctnQ2aC.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctnQ2aC.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/cctnQ2aC.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/cctnQ2aC.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/cctnQ2aC.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctnQ2aC.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctnQ2aC.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/cctnQ2aC.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/cctnQ2aC.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/cctnQ2aC.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctnQ2aC.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/cctnQ2aC.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctnQ2aC.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctnQ2aC.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/cctnQ2aC.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctnQ2aC.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctnQ2aC.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/cctnQ2aC.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.bss
  62              	configured:
  63 0000 00       		.space	1
  64              		.section	.rodata
  65              		.align	2
  66              		.type	leds, %object
  67              		.size	leds, 24
  68              	leds:
  69 0000 00010000 		.word	256
  70 0004 000E0E40 		.word	1074662912
  71 0008 0B       		.byte	11
  72 0009 06       		.byte	6
  73 000a 00       		.byte	0
  74 000b 00       		.space	1
  75 000c 00000080 		.word	-2147483648
  76 0010 000E0E40 		.word	1074662912
  77 0014 0B       		.byte	11
  78 0015 06       		.byte	6
  79 0016 00       		.byte	0
  80 0017 00       		.space	1
  81              		.bss
  82 0001 000000   		.align	2
  83              	blinks:
  84 0004 00000000 		.space	8
  84      00000000 
  85              		.section	.text.TC0_IrqHandler,"ax",%progbits
  86              		.align	2
  87              		.global	TC0_IrqHandler
  88              		.thumb
  89              		.thumb_func
  90              		.type	TC0_IrqHandler, %function
ARM GAS  /tmp/cctnQ2aC.s 			page 29


  91              	TC0_IrqHandler:
  92              	.LFB35:
  93              		.file 2 "board/led.c"
   1:board/led.c   **** /*
   2:board/led.c   ****  * Blink LED routines.
   3:board/led.c   ****  *
   4:board/led.c   ****  */
   5:board/led.c   **** 
   6:board/led.c   **** #include <string.h>
   7:board/led.c   **** #include "board.h"
   8:board/led.c   **** 
   9:board/led.c   **** #define stoptimer()  TC_Stop(TC0, BLINK_TC)
  10:board/led.c   **** #define starttimer() TC_Start(TC0, BLINK_TC)
  11:board/led.c   **** 
  12:board/led.c   **** static uint8_t configured = 0;
  13:board/led.c   **** 
  14:board/led.c   **** static const Pin leds[] = {PINS_LEDS};
  15:board/led.c   **** static volatile uint32_t blinks[LEDS_NUM];
  16:board/led.c   **** 
  17:board/led.c   **** void TC0_IrqHandler()
  18:board/led.c   **** {
  94              		.loc 2 18 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 8
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 14, -4
 102              		.cfi_offset 7, -8
 103 0002 82B0     		sub	sp, sp, #8
 104              	.LCFI4:
 105              		.cfi_def_cfa_offset 16
 106 0004 00AF     		add	r7, sp, #0
 107              	.LCFI5:
 108              		.cfi_def_cfa_register 7
  19:board/led.c   ****     volatile uint32_t i;
  20:board/led.c   **** 	uint8_t j = 0;
 109              		.loc 2 20 0
 110 0006 4FF00003 		mov	r3, #0
 111 000a FB71     		strb	r3, [r7, #7]
  21:board/led.c   **** 
  22:board/led.c   ****     // clear status bit to ack interrupt 
  23:board/led.c   ****    	i = TC0->TC_CHANNEL[BLINK_TC].TC_SR;
 112              		.loc 2 23 0
 113 000c 4FF00003 		mov	r3, #0
 114 0010 C4F20103 		movt	r3, 16385
 115 0014 1B6A     		ldr	r3, [r3, #32]
 116 0016 3B60     		str	r3, [r7, #0]
  24:board/led.c   **** 
  25:board/led.c   **** 	// toggle LEDs
  26:board/led.c   **** 	for (i=0; i<LEDS_NUM; i++) {
 117              		.loc 2 26 0
 118 0018 4FF00003 		mov	r3, #0
 119 001c 3B60     		str	r3, [r7, #0]
 120 001e 25E0     		b	.L3
 121              	.L6:
ARM GAS  /tmp/cctnQ2aC.s 			page 30


  27:board/led.c   **** 		if (blinks[i] > 0) {
 122              		.loc 2 27 0
 123 0020 3A68     		ldr	r2, [r7, #0]
 124 0022 40F20003 		movw	r3, #:lower16:blinks
 125 0026 C0F20003 		movt	r3, #:upper16:blinks
 126 002a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 127 002e 002B     		cmp	r3, #0
 128 0030 14D0     		beq	.L4
  28:board/led.c   **** 			blinks[i]--; 
 129              		.loc 2 28 0
 130 0032 3A68     		ldr	r2, [r7, #0]
 131 0034 40F20003 		movw	r3, #:lower16:blinks
 132 0038 C0F20003 		movt	r3, #:upper16:blinks
 133 003c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 134 0040 03F1FF31 		add	r1, r3, #-1
 135 0044 40F20003 		movw	r3, #:lower16:blinks
 136 0048 C0F20003 		movt	r3, #:upper16:blinks
 137 004c 43F82210 		str	r1, [r3, r2, lsl #2]
  29:board/led.c   **** 			LED_tgl(i);
 138              		.loc 2 29 0
 139 0050 3B68     		ldr	r3, [r7, #0]
 140 0052 DBB2     		uxtb	r3, r3
 141 0054 1846     		mov	r0, r3
 142 0056 FFF7FEFF 		bl	LED_tgl
 143 005a 03E0     		b	.L5
 144              	.L4:
  30:board/led.c   **** 		}
  31:board/led.c   **** 		else
  32:board/led.c   **** 			j++;
 145              		.loc 2 32 0
 146 005c FB79     		ldrb	r3, [r7, #7]
 147 005e 03F10103 		add	r3, r3, #1
 148 0062 FB71     		strb	r3, [r7, #7]
 149              	.L5:
  26:board/led.c   **** 	for (i=0; i<LEDS_NUM; i++) {
 150              		.loc 2 26 0
 151 0064 3B68     		ldr	r3, [r7, #0]
 152 0066 03F10103 		add	r3, r3, #1
 153 006a 3B60     		str	r3, [r7, #0]
 154              	.L3:
  26:board/led.c   **** 	for (i=0; i<LEDS_NUM; i++) {
 155              		.loc 2 26 0 is_stmt 0 discriminator 1
 156 006c 3B68     		ldr	r3, [r7, #0]
 157 006e 012B     		cmp	r3, #1
 158 0070 D6D9     		bls	.L6
  33:board/led.c   **** 	}
  34:board/led.c   **** 	// all counts to zero, stop timer
  35:board/led.c   **** 	if (j == LEDS_NUM)
 159              		.loc 2 35 0 is_stmt 1
 160 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 161 0074 022B     		cmp	r3, #2
 162 0076 07D1     		bne	.L2
  36:board/led.c   **** 		stoptimer();
 163              		.loc 2 36 0
 164 0078 4FF00000 		mov	r0, #0
 165 007c C4F20100 		movt	r0, 16385
 166 0080 4FF00001 		mov	r1, #0
ARM GAS  /tmp/cctnQ2aC.s 			page 31


 167 0084 FFF7FEFF 		bl	TC_Stop
 168              	.L2:
  37:board/led.c   **** }
 169              		.loc 2 37 0
 170 0088 07F10807 		add	r7, r7, #8
 171 008c BD46     		mov	sp, r7
 172 008e 80BD     		pop	{r7, pc}
 173              		.cfi_endproc
 174              	.LFE35:
 175              		.size	TC0_IrqHandler, .-TC0_IrqHandler
 176              		.section	.text.configure,"ax",%progbits
 177              		.align	2
 178              		.thumb
 179              		.thumb_func
 180              		.type	configure, %function
 181              	configure:
 182              	.LFB36:
  38:board/led.c   **** 
  39:board/led.c   **** static void configure()
  40:board/led.c   **** {
 183              		.loc 2 40 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 90B5     		push	{r4, r7, lr}
 188              	.LCFI6:
 189              		.cfi_def_cfa_offset 12
 190              		.cfi_offset 14, -4
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 4, -12
 193 0002 85B0     		sub	sp, sp, #20
 194              	.LCFI7:
 195              		.cfi_def_cfa_offset 32
 196 0004 02AF     		add	r7, sp, #8
 197              	.LCFI8:
 198              		.cfi_def_cfa 7, 24
  41:board/led.c   ****     uint32_t div;
  42:board/led.c   ****     uint32_t tcclks;
  43:board/led.c   **** 
  44:board/led.c   ****     /* Enable peripheral clock. */
  45:board/led.c   ****     PMC->PMC_PCER0 = 1 << ID_TC0;
 199              		.loc 2 45 0
 200 0006 4FF48063 		mov	r3, #1024
 201 000a C4F20E03 		movt	r3, 16398
 202 000e 4FF40002 		mov	r2, #8388608
 203 0012 1A61     		str	r2, [r3, #16]
  46:board/led.c   **** 
  47:board/led.c   ****     /* Configure TC */
  48:board/led.c   ****     TC_FindMckDivisor(BLINK_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 204              		.loc 2 48 0
 205 0014 07F10402 		add	r2, r7, #4
 206 0018 3C46     		mov	r4, r7
 207 001a 4FF4D843 		mov	r3, #27648
 208 001e C0F2DC23 		movt	r3, 732
 209 0022 0093     		str	r3, [sp, #0]
 210 0024 4FF00600 		mov	r0, #6
 211 0028 4FF4D841 		mov	r1, #27648
ARM GAS  /tmp/cctnQ2aC.s 			page 32


 212 002c C0F2DC21 		movt	r1, 732
 213 0030 2346     		mov	r3, r4
 214 0032 FFF7FEFF 		bl	TC_FindMckDivisor
  49:board/led.c   ****     TC_Configure(TC0, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 215              		.loc 2 49 0
 216 0036 3B68     		ldr	r3, [r7, #0]
 217 0038 43F48043 		orr	r3, r3, #16384
 218 003c 4FF00000 		mov	r0, #0
 219 0040 C4F20100 		movt	r0, 16385
 220 0044 4FF00001 		mov	r1, #0
 221 0048 1A46     		mov	r2, r3
 222 004a FFF7FEFF 		bl	TC_Configure
  50:board/led.c   ****     TC0->TC_CHANNEL[BLINK_TC].TC_RC = (BOARD_MCK/div) / BLINK_FREQ;
 223              		.loc 2 50 0
 224 004e 4FF00003 		mov	r3, #0
 225 0052 C4F20103 		movt	r3, 16385
 226 0056 7968     		ldr	r1, [r7, #4]
 227 0058 4FF49052 		mov	r2, #4608
 228 005c C0F27A02 		movt	r2, 122
 229 0060 B2FBF1F2 		udiv	r2, r2, r1
 230 0064 DA61     		str	r2, [r3, #28]
  51:board/led.c   **** 
  52:board/led.c   ****     /* Configure and enable interrupt on RC compare */
  53:board/led.c   ****     NVIC_EnableIRQ((IRQn_Type) ID_TC0);
 231              		.loc 2 53 0
 232 0066 4FF01700 		mov	r0, #23
 233 006a FFF7FEFF 		bl	NVIC_EnableIRQ
  54:board/led.c   ****     TC0->TC_CHANNEL[BLINK_TC].TC_IER = TC_IER_CPCS;
 234              		.loc 2 54 0
 235 006e 4FF00003 		mov	r3, #0
 236 0072 C4F20103 		movt	r3, 16385
 237 0076 4FF01002 		mov	r2, #16
 238 007a 5A62     		str	r2, [r3, #36]
  55:board/led.c   **** 
  56:board/led.c   **** 	/* Init flash counts */
  57:board/led.c   **** 	memset((void *)blinks, 0, LEDS_NUM);
 239              		.loc 2 57 0
 240 007c 40F20003 		movw	r3, #:lower16:blinks
 241 0080 C0F20003 		movt	r3, #:upper16:blinks
 242 0084 4FF00002 		mov	r2, #0
 243 0088 1A80     		strh	r2, [r3, #0]	@ movhi
  58:board/led.c   **** 
  59:board/led.c   **** 	configured = 1;
 244              		.loc 2 59 0
 245 008a 40F20003 		movw	r3, #:lower16:configured
 246 008e C0F20003 		movt	r3, #:upper16:configured
 247 0092 4FF00102 		mov	r2, #1
 248 0096 1A70     		strb	r2, [r3, #0]
  60:board/led.c   **** }
 249              		.loc 2 60 0
 250 0098 07F10C07 		add	r7, r7, #12
 251 009c BD46     		mov	sp, r7
 252 009e 90BD     		pop	{r4, r7, pc}
 253              		.cfi_endproc
 254              	.LFE36:
 255              		.size	configure, .-configure
 256              		.section	.text.LEDs_configure,"ax",%progbits
ARM GAS  /tmp/cctnQ2aC.s 			page 33


 257              		.align	2
 258              		.global	LEDs_configure
 259              		.thumb
 260              		.thumb_func
 261              		.type	LEDs_configure, %function
 262              	LEDs_configure:
 263              	.LFB37:
  61:board/led.c   **** 
  62:board/led.c   **** /*-----------------------------------------------------------------------------
  63:board/led.c   ****  *         Exported Functions
  64:board/led.c   ****  *----------------------------------------------------------------------------*/
  65:board/led.c   **** 
  66:board/led.c   **** void LEDs_configure()
  67:board/led.c   **** {
 264              		.loc 2 67 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI9:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 14, -4
 272              		.cfi_offset 7, -8
 273 0002 00AF     		add	r7, sp, #0
 274              	.LCFI10:
 275              		.cfi_def_cfa_register 7
  68:board/led.c   **** 	PIO_Configure(leds, PIO_LISTSIZE(leds));
 276              		.loc 2 68 0
 277 0004 40F20000 		movw	r0, #:lower16:leds
 278 0008 C0F20000 		movt	r0, #:upper16:leds
 279 000c 4FF00201 		mov	r1, #2
 280 0010 FFF7FEFF 		bl	PIO_Configure
  69:board/led.c   **** }
 281              		.loc 2 69 0
 282 0014 80BD     		pop	{r7, pc}
 283              		.cfi_endproc
 284              	.LFE37:
 285              		.size	LEDs_configure, .-LEDs_configure
 286 0016 00BF     		.section	.rodata
 287              		.align	2
 288              	.LC0:
 289 0018 626F6172 		.ascii	"board/led.c\000"
 289      642F6C65 
 289      642E6300 
 290              		.align	2
 291              	.LC1:
 292 0024 6C656420 		.ascii	"led < LEDS_NUM\000"
 292      3C204C45 
 292      44535F4E 
 292      554D00
 293              		.section	.text.LED_tgl,"ax",%progbits
 294              		.align	2
 295              		.global	LED_tgl
 296              		.thumb
 297              		.thumb_func
 298              		.type	LED_tgl, %function
 299              	LED_tgl:
ARM GAS  /tmp/cctnQ2aC.s 			page 34


 300              	.LFB38:
  70:board/led.c   **** 
  71:board/led.c   **** void LED_tgl(uint8_t led)
  72:board/led.c   **** {
 301              		.loc 2 72 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 16
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305 0000 80B5     		push	{r7, lr}
 306              	.LCFI11:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 14, -4
 309              		.cfi_offset 7, -8
 310 0002 84B0     		sub	sp, sp, #16
 311              	.LCFI12:
 312              		.cfi_def_cfa_offset 24
 313 0004 00AF     		add	r7, sp, #0
 314              	.LCFI13:
 315              		.cfi_def_cfa_register 7
 316 0006 0346     		mov	r3, r0
 317 0008 FB71     		strb	r3, [r7, #7]
  73:board/led.c   **** 	uint32_t mask;
  74:board/led.c   **** 	Pio *pio;
  75:board/led.c   **** 
  76:board/led.c   **** 	assert(led < LEDS_NUM);
 318              		.loc 2 76 0
 319 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 000c 012B     		cmp	r3, #1
 321 000e 0FD9     		bls	.L11
 322              		.loc 2 76 0 is_stmt 0 discriminator 1
 323 0010 40F20000 		movw	r0, #:lower16:.LC0
 324 0014 C0F20000 		movt	r0, #:upper16:.LC0
 325 0018 4FF04C01 		mov	r1, #76
 326 001c 40F20002 		movw	r2, #:lower16:__FUNCTION__.7528
 327 0020 C0F20002 		movt	r2, #:upper16:__FUNCTION__.7528
 328 0024 40F20003 		movw	r3, #:lower16:.LC1
 329 0028 C0F20003 		movt	r3, #:upper16:.LC1
 330 002c FFF7FEFF 		bl	__assert_func
 331              	.L11:
  77:board/led.c   **** 
  78:board/led.c   **** 	pio  = leds[led].pio;
 332              		.loc 2 78 0 is_stmt 1
 333 0030 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 334 0032 40F20002 		movw	r2, #:lower16:leds
 335 0036 C0F20002 		movt	r2, #:upper16:leds
 336 003a 0B46     		mov	r3, r1
 337 003c 4FEA4303 		lsl	r3, r3, #1
 338 0040 5B18     		adds	r3, r3, r1
 339 0042 4FEA8303 		lsl	r3, r3, #2
 340 0046 D318     		adds	r3, r2, r3
 341 0048 03F10403 		add	r3, r3, #4
 342 004c 1B68     		ldr	r3, [r3, #0]
 343 004e FB60     		str	r3, [r7, #12]
  79:board/led.c   **** 	mask = leds[led].mask;
 344              		.loc 2 79 0
 345 0050 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 346 0052 40F20002 		movw	r2, #:lower16:leds
ARM GAS  /tmp/cctnQ2aC.s 			page 35


 347 0056 C0F20002 		movt	r2, #:upper16:leds
 348 005a 0B46     		mov	r3, r1
 349 005c 4FEA4303 		lsl	r3, r3, #1
 350 0060 5B18     		adds	r3, r3, r1
 351 0062 4FEA8303 		lsl	r3, r3, #2
 352 0066 D318     		adds	r3, r2, r3
 353 0068 1B68     		ldr	r3, [r3, #0]
 354 006a BB60     		str	r3, [r7, #8]
  80:board/led.c   **** 
  81:board/led.c   **** 	if (pio->PIO_ODSR & mask)
 355              		.loc 2 81 0
 356 006c FB68     		ldr	r3, [r7, #12]
 357 006e 9A6B     		ldr	r2, [r3, #56]
 358 0070 BB68     		ldr	r3, [r7, #8]
 359 0072 1340     		ands	r3, r3, r2
 360 0074 002B     		cmp	r3, #0
 361 0076 03D0     		beq	.L12
  82:board/led.c   **** 		pio->PIO_CODR = mask;
 362              		.loc 2 82 0
 363 0078 FB68     		ldr	r3, [r7, #12]
 364 007a BA68     		ldr	r2, [r7, #8]
 365 007c 5A63     		str	r2, [r3, #52]
 366 007e 02E0     		b	.L10
 367              	.L12:
  83:board/led.c   **** 	else 
  84:board/led.c   **** 		pio->PIO_SODR = mask;
 368              		.loc 2 84 0
 369 0080 FB68     		ldr	r3, [r7, #12]
 370 0082 BA68     		ldr	r2, [r7, #8]
 371 0084 1A63     		str	r2, [r3, #48]
 372              	.L10:
  85:board/led.c   **** }
 373              		.loc 2 85 0
 374 0086 07F11007 		add	r7, r7, #16
 375 008a BD46     		mov	sp, r7
 376 008c 80BD     		pop	{r7, pc}
 377              		.cfi_endproc
 378              	.LFE38:
 379              		.size	LED_tgl, .-LED_tgl
 380 008e 00BF     		.section	.text.LED_set,"ax",%progbits
 381              		.align	2
 382              		.global	LED_set
 383              		.thumb
 384              		.thumb_func
 385              		.type	LED_set, %function
 386              	LED_set:
 387              	.LFB39:
  86:board/led.c   **** 
  87:board/led.c   **** void LED_set(uint8_t led)
  88:board/led.c   **** {
 388              		.loc 2 88 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 16
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392 0000 80B5     		push	{r7, lr}
 393              	.LCFI14:
 394              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cctnQ2aC.s 			page 36


 395              		.cfi_offset 14, -4
 396              		.cfi_offset 7, -8
 397 0002 84B0     		sub	sp, sp, #16
 398              	.LCFI15:
 399              		.cfi_def_cfa_offset 24
 400 0004 00AF     		add	r7, sp, #0
 401              	.LCFI16:
 402              		.cfi_def_cfa_register 7
 403 0006 0346     		mov	r3, r0
 404 0008 FB71     		strb	r3, [r7, #7]
  89:board/led.c   **** 	Pio *pio;
  90:board/led.c   **** 	uint32_t mask;
  91:board/led.c   **** 
  92:board/led.c   **** 	assert(led < LEDS_NUM);
 405              		.loc 2 92 0
 406 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 407 000c 012B     		cmp	r3, #1
 408 000e 0FD9     		bls	.L15
 409              		.loc 2 92 0 is_stmt 0 discriminator 1
 410 0010 40F20000 		movw	r0, #:lower16:.LC0
 411 0014 C0F20000 		movt	r0, #:upper16:.LC0
 412 0018 4FF05C01 		mov	r1, #92
 413 001c 40F20002 		movw	r2, #:lower16:__FUNCTION__.7534
 414 0020 C0F20002 		movt	r2, #:upper16:__FUNCTION__.7534
 415 0024 40F20003 		movw	r3, #:lower16:.LC1
 416 0028 C0F20003 		movt	r3, #:upper16:.LC1
 417 002c FFF7FEFF 		bl	__assert_func
 418              	.L15:
  93:board/led.c   **** 
  94:board/led.c   **** 	pio  = leds[led].pio;
 419              		.loc 2 94 0 is_stmt 1
 420 0030 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 421 0032 40F20002 		movw	r2, #:lower16:leds
 422 0036 C0F20002 		movt	r2, #:upper16:leds
 423 003a 0B46     		mov	r3, r1
 424 003c 4FEA4303 		lsl	r3, r3, #1
 425 0040 5B18     		adds	r3, r3, r1
 426 0042 4FEA8303 		lsl	r3, r3, #2
 427 0046 D318     		adds	r3, r2, r3
 428 0048 03F10403 		add	r3, r3, #4
 429 004c 1B68     		ldr	r3, [r3, #0]
 430 004e FB60     		str	r3, [r7, #12]
  95:board/led.c   **** 	mask = leds[led].mask;
 431              		.loc 2 95 0
 432 0050 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 433 0052 40F20002 		movw	r2, #:lower16:leds
 434 0056 C0F20002 		movt	r2, #:upper16:leds
 435 005a 0B46     		mov	r3, r1
 436 005c 4FEA4303 		lsl	r3, r3, #1
 437 0060 5B18     		adds	r3, r3, r1
 438 0062 4FEA8303 		lsl	r3, r3, #2
 439 0066 D318     		adds	r3, r2, r3
 440 0068 1B68     		ldr	r3, [r3, #0]
 441 006a BB60     		str	r3, [r7, #8]
  96:board/led.c   **** 	pio->PIO_SODR = mask;
 442              		.loc 2 96 0
 443 006c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cctnQ2aC.s 			page 37


 444 006e BA68     		ldr	r2, [r7, #8]
 445 0070 1A63     		str	r2, [r3, #48]
  97:board/led.c   **** }
 446              		.loc 2 97 0
 447 0072 07F11007 		add	r7, r7, #16
 448 0076 BD46     		mov	sp, r7
 449 0078 80BD     		pop	{r7, pc}
 450              		.cfi_endproc
 451              	.LFE39:
 452              		.size	LED_set, .-LED_set
 453 007a 00BF     		.section	.text.LED_clr,"ax",%progbits
 454              		.align	2
 455              		.global	LED_clr
 456              		.thumb
 457              		.thumb_func
 458              		.type	LED_clr, %function
 459              	LED_clr:
 460              	.LFB40:
  98:board/led.c   **** 
  99:board/led.c   **** void LED_clr(uint8_t led)
 100:board/led.c   **** {
 461              		.loc 2 100 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 16
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465 0000 80B5     		push	{r7, lr}
 466              	.LCFI17:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 14, -4
 469              		.cfi_offset 7, -8
 470 0002 84B0     		sub	sp, sp, #16
 471              	.LCFI18:
 472              		.cfi_def_cfa_offset 24
 473 0004 00AF     		add	r7, sp, #0
 474              	.LCFI19:
 475              		.cfi_def_cfa_register 7
 476 0006 0346     		mov	r3, r0
 477 0008 FB71     		strb	r3, [r7, #7]
 101:board/led.c   **** 	Pio *pio;
 102:board/led.c   **** 	uint32_t mask;
 103:board/led.c   **** 
 104:board/led.c   **** 	assert(led < LEDS_NUM);
 478              		.loc 2 104 0
 479 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 480 000c 012B     		cmp	r3, #1
 481 000e 0FD9     		bls	.L17
 482              		.loc 2 104 0 is_stmt 0 discriminator 1
 483 0010 40F20000 		movw	r0, #:lower16:.LC0
 484 0014 C0F20000 		movt	r0, #:upper16:.LC0
 485 0018 4FF06801 		mov	r1, #104
 486 001c 40F20002 		movw	r2, #:lower16:__FUNCTION__.7540
 487 0020 C0F20002 		movt	r2, #:upper16:__FUNCTION__.7540
 488 0024 40F20003 		movw	r3, #:lower16:.LC1
 489 0028 C0F20003 		movt	r3, #:upper16:.LC1
 490 002c FFF7FEFF 		bl	__assert_func
 491              	.L17:
 105:board/led.c   **** 
ARM GAS  /tmp/cctnQ2aC.s 			page 38


 106:board/led.c   **** 	pio  = leds[led].pio;
 492              		.loc 2 106 0 is_stmt 1
 493 0030 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 494 0032 40F20002 		movw	r2, #:lower16:leds
 495 0036 C0F20002 		movt	r2, #:upper16:leds
 496 003a 0B46     		mov	r3, r1
 497 003c 4FEA4303 		lsl	r3, r3, #1
 498 0040 5B18     		adds	r3, r3, r1
 499 0042 4FEA8303 		lsl	r3, r3, #2
 500 0046 D318     		adds	r3, r2, r3
 501 0048 03F10403 		add	r3, r3, #4
 502 004c 1B68     		ldr	r3, [r3, #0]
 503 004e FB60     		str	r3, [r7, #12]
 107:board/led.c   **** 	mask = leds[led].mask;
 504              		.loc 2 107 0
 505 0050 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 506 0052 40F20002 		movw	r2, #:lower16:leds
 507 0056 C0F20002 		movt	r2, #:upper16:leds
 508 005a 0B46     		mov	r3, r1
 509 005c 4FEA4303 		lsl	r3, r3, #1
 510 0060 5B18     		adds	r3, r3, r1
 511 0062 4FEA8303 		lsl	r3, r3, #2
 512 0066 D318     		adds	r3, r2, r3
 513 0068 1B68     		ldr	r3, [r3, #0]
 514 006a BB60     		str	r3, [r7, #8]
 108:board/led.c   **** 	pio->PIO_CODR = mask;
 515              		.loc 2 108 0
 516 006c FB68     		ldr	r3, [r7, #12]
 517 006e BA68     		ldr	r2, [r7, #8]
 518 0070 5A63     		str	r2, [r3, #52]
 109:board/led.c   **** }
 519              		.loc 2 109 0
 520 0072 07F11007 		add	r7, r7, #16
 521 0076 BD46     		mov	sp, r7
 522 0078 80BD     		pop	{r7, pc}
 523              		.cfi_endproc
 524              	.LFE40:
 525              		.size	LED_clr, .-LED_clr
 526 007a 00BF     		.section	.text.LED_get,"ax",%progbits
 527              		.align	2
 528              		.global	LED_get
 529              		.thumb
 530              		.thumb_func
 531              		.type	LED_get, %function
 532              	LED_get:
 533              	.LFB41:
 110:board/led.c   **** 
 111:board/led.c   **** uint8_t LED_get(uint8_t led)
 112:board/led.c   **** {
 534              		.loc 2 112 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 16
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538 0000 80B5     		push	{r7, lr}
 539              	.LCFI20:
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 14, -4
ARM GAS  /tmp/cctnQ2aC.s 			page 39


 542              		.cfi_offset 7, -8
 543 0002 84B0     		sub	sp, sp, #16
 544              	.LCFI21:
 545              		.cfi_def_cfa_offset 24
 546 0004 00AF     		add	r7, sp, #0
 547              	.LCFI22:
 548              		.cfi_def_cfa_register 7
 549 0006 0346     		mov	r3, r0
 550 0008 FB71     		strb	r3, [r7, #7]
 113:board/led.c   **** 	Pio *pio;
 114:board/led.c   **** 	uint32_t mask;
 115:board/led.c   **** 
 116:board/led.c   **** 	assert(led < LEDS_NUM);
 551              		.loc 2 116 0
 552 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 553 000c 012B     		cmp	r3, #1
 554 000e 0FD9     		bls	.L19
 555              		.loc 2 116 0 is_stmt 0 discriminator 1
 556 0010 40F20000 		movw	r0, #:lower16:.LC0
 557 0014 C0F20000 		movt	r0, #:upper16:.LC0
 558 0018 4FF07401 		mov	r1, #116
 559 001c 40F20002 		movw	r2, #:lower16:__FUNCTION__.7546
 560 0020 C0F20002 		movt	r2, #:upper16:__FUNCTION__.7546
 561 0024 40F20003 		movw	r3, #:lower16:.LC1
 562 0028 C0F20003 		movt	r3, #:upper16:.LC1
 563 002c FFF7FEFF 		bl	__assert_func
 564              	.L19:
 117:board/led.c   **** 
 118:board/led.c   **** 	pio  = leds[led].pio;
 565              		.loc 2 118 0 is_stmt 1
 566 0030 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 567 0032 40F20002 		movw	r2, #:lower16:leds
 568 0036 C0F20002 		movt	r2, #:upper16:leds
 569 003a 0B46     		mov	r3, r1
 570 003c 4FEA4303 		lsl	r3, r3, #1
 571 0040 5B18     		adds	r3, r3, r1
 572 0042 4FEA8303 		lsl	r3, r3, #2
 573 0046 D318     		adds	r3, r2, r3
 574 0048 03F10403 		add	r3, r3, #4
 575 004c 1B68     		ldr	r3, [r3, #0]
 576 004e FB60     		str	r3, [r7, #12]
 119:board/led.c   **** 	mask = leds[led].mask;
 577              		.loc 2 119 0
 578 0050 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 579 0052 40F20002 		movw	r2, #:lower16:leds
 580 0056 C0F20002 		movt	r2, #:upper16:leds
 581 005a 0B46     		mov	r3, r1
 582 005c 4FEA4303 		lsl	r3, r3, #1
 583 0060 5B18     		adds	r3, r3, r1
 584 0062 4FEA8303 		lsl	r3, r3, #2
 585 0066 D318     		adds	r3, r2, r3
 586 0068 1B68     		ldr	r3, [r3, #0]
 587 006a BB60     		str	r3, [r7, #8]
 120:board/led.c   **** 	return (uint8_t) (pio->PIO_ODSR & mask);
 588              		.loc 2 120 0
 589 006c FB68     		ldr	r3, [r7, #12]
 590 006e 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /tmp/cctnQ2aC.s 			page 40


 591 0070 DAB2     		uxtb	r2, r3
 592 0072 BB68     		ldr	r3, [r7, #8]
 593 0074 DBB2     		uxtb	r3, r3
 594 0076 1340     		ands	r3, r3, r2
 595 0078 DBB2     		uxtb	r3, r3
 121:board/led.c   **** }
 596              		.loc 2 121 0
 597 007a 1846     		mov	r0, r3
 598 007c 07F11007 		add	r7, r7, #16
 599 0080 BD46     		mov	sp, r7
 600 0082 80BD     		pop	{r7, pc}
 601              		.cfi_endproc
 602              	.LFE41:
 603              		.size	LED_get, .-LED_get
 604              		.section	.text.LED_blink,"ax",%progbits
 605              		.align	2
 606              		.global	LED_blink
 607              		.thumb
 608              		.thumb_func
 609              		.type	LED_blink, %function
 610              	LED_blink:
 611              	.LFB42:
 122:board/led.c   **** 
 123:board/led.c   **** /*
 124:board/led.c   ****  * Flash LED 'num' times (non-blocking).
 125:board/led.c   ****  */
 126:board/led.c   **** void LED_blink(uint8_t led, uint32_t num)
 127:board/led.c   **** {
 612              		.loc 2 127 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 8
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              	.LCFI23:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 14, -4
 620              		.cfi_offset 7, -8
 621 0002 82B0     		sub	sp, sp, #8
 622              	.LCFI24:
 623              		.cfi_def_cfa_offset 16
 624 0004 00AF     		add	r7, sp, #0
 625              	.LCFI25:
 626              		.cfi_def_cfa_register 7
 627 0006 0346     		mov	r3, r0
 628 0008 3960     		str	r1, [r7, #0]
 629 000a FB71     		strb	r3, [r7, #7]
 128:board/led.c   **** 	if (configured == 0) 
 630              		.loc 2 128 0
 631 000c 40F20003 		movw	r3, #:lower16:configured
 632 0010 C0F20003 		movt	r3, #:upper16:configured
 633 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 634 0016 002B     		cmp	r3, #0
 635 0018 01D1     		bne	.L21
 129:board/led.c   **** 		configure();
 636              		.loc 2 129 0
 637 001a FFF7FEFF 		bl	configure
 638              	.L21:
ARM GAS  /tmp/cctnQ2aC.s 			page 41


 130:board/led.c   **** 
 131:board/led.c   **** 	stoptimer();
 639              		.loc 2 131 0
 640 001e 4FF00000 		mov	r0, #0
 641 0022 C4F20100 		movt	r0, 16385
 642 0026 4FF00001 		mov	r1, #0
 643 002a FFF7FEFF 		bl	TC_Stop
 132:board/led.c   **** 	blinks[led] += 2*num;
 644              		.loc 2 132 0
 645 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 646 0030 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 647 0032 40F20003 		movw	r3, #:lower16:blinks
 648 0036 C0F20003 		movt	r3, #:upper16:blinks
 649 003a 53F82110 		ldr	r1, [r3, r1, lsl #2]
 650 003e 3B68     		ldr	r3, [r7, #0]
 651 0040 4FEA4303 		lsl	r3, r3, #1
 652 0044 C918     		adds	r1, r1, r3
 653 0046 40F20003 		movw	r3, #:lower16:blinks
 654 004a C0F20003 		movt	r3, #:upper16:blinks
 655 004e 43F82210 		str	r1, [r3, r2, lsl #2]
 133:board/led.c   **** 	starttimer();
 656              		.loc 2 133 0
 657 0052 4FF00000 		mov	r0, #0
 658 0056 C4F20100 		movt	r0, 16385
 659 005a 4FF00001 		mov	r1, #0
 660 005e FFF7FEFF 		bl	TC_Start
 134:board/led.c   **** }
 661              		.loc 2 134 0
 662 0062 07F10807 		add	r7, r7, #8
 663 0066 BD46     		mov	sp, r7
 664 0068 80BD     		pop	{r7, pc}
 665              		.cfi_endproc
 666              	.LFE42:
 667              		.size	LED_blink, .-LED_blink
 668 006a 00BF     		.section	.text.LED_blinkwait,"ax",%progbits
 669              		.align	2
 670              		.global	LED_blinkwait
 671              		.thumb
 672              		.thumb_func
 673              		.type	LED_blinkwait, %function
 674              	LED_blinkwait:
 675              	.LFB43:
 135:board/led.c   **** 
 136:board/led.c   **** /*
 137:board/led.c   ****  * Flash LED 'num' times (blocking).
 138:board/led.c   ****  */
 139:board/led.c   **** void LED_blinkwait(uint8_t led, uint32_t num)
 140:board/led.c   **** {
 676              		.loc 2 140 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 8
 679              		@ frame_needed = 1, uses_anonymous_args = 0
 680 0000 80B5     		push	{r7, lr}
 681              	.LCFI26:
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 14, -4
 684              		.cfi_offset 7, -8
ARM GAS  /tmp/cctnQ2aC.s 			page 42


 685 0002 82B0     		sub	sp, sp, #8
 686              	.LCFI27:
 687              		.cfi_def_cfa_offset 16
 688 0004 00AF     		add	r7, sp, #0
 689              	.LCFI28:
 690              		.cfi_def_cfa_register 7
 691 0006 0346     		mov	r3, r0
 692 0008 3960     		str	r1, [r7, #0]
 693 000a FB71     		strb	r3, [r7, #7]
 141:board/led.c   **** 	LED_blink(led, num);
 694              		.loc 2 141 0
 695 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 696 000e 1846     		mov	r0, r3
 697 0010 3968     		ldr	r1, [r7, #0]
 698 0012 FFF7FEFF 		bl	LED_blink
 142:board/led.c   **** 	while(LED_blinking(led));
 699              		.loc 2 142 0
 700 0016 00BF     		nop
 701              	.L23:
 702              		.loc 2 142 0 is_stmt 0 discriminator 1
 703 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 704 001a 1846     		mov	r0, r3
 705 001c FFF7FEFF 		bl	LED_blinking
 706 0020 0346     		mov	r3, r0
 707 0022 002B     		cmp	r3, #0
 708 0024 F8D1     		bne	.L23
 143:board/led.c   **** }
 709              		.loc 2 143 0 is_stmt 1
 710 0026 07F10807 		add	r7, r7, #8
 711 002a BD46     		mov	sp, r7
 712 002c 80BD     		pop	{r7, pc}
 713              		.cfi_endproc
 714              	.LFE43:
 715              		.size	LED_blinkwait, .-LED_blinkwait
 716 002e 00BF     		.section	.text.LED_blinkstop,"ax",%progbits
 717              		.align	2
 718              		.global	LED_blinkstop
 719              		.thumb
 720              		.thumb_func
 721              		.type	LED_blinkstop, %function
 722              	LED_blinkstop:
 723              	.LFB44:
 144:board/led.c   **** 
 145:board/led.c   **** /*
 146:board/led.c   ****  * Stop flashing.
 147:board/led.c   ****  */
 148:board/led.c   **** void LED_blinkstop(uint8_t led)
 149:board/led.c   **** {
 724              		.loc 2 149 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 8
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 80B5     		push	{r7, lr}
 729              	.LCFI29:
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 14, -4
 732              		.cfi_offset 7, -8
ARM GAS  /tmp/cctnQ2aC.s 			page 43


 733 0002 82B0     		sub	sp, sp, #8
 734              	.LCFI30:
 735              		.cfi_def_cfa_offset 16
 736 0004 00AF     		add	r7, sp, #0
 737              	.LCFI31:
 738              		.cfi_def_cfa_register 7
 739 0006 0346     		mov	r3, r0
 740 0008 FB71     		strb	r3, [r7, #7]
 150:board/led.c   **** 	stoptimer();
 741              		.loc 2 150 0
 742 000a 4FF00000 		mov	r0, #0
 743 000e C4F20100 		movt	r0, 16385
 744 0012 4FF00001 		mov	r1, #0
 745 0016 FFF7FEFF 		bl	TC_Stop
 151:board/led.c   **** 	blinks[led] = 0;
 746              		.loc 2 151 0
 747 001a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 748 001c 40F20003 		movw	r3, #:lower16:blinks
 749 0020 C0F20003 		movt	r3, #:upper16:blinks
 750 0024 4FF00001 		mov	r1, #0
 751 0028 43F82210 		str	r1, [r3, r2, lsl #2]
 152:board/led.c   **** 	starttimer(); // stops itself when ALL are zero
 752              		.loc 2 152 0
 753 002c 4FF00000 		mov	r0, #0
 754 0030 C4F20100 		movt	r0, 16385
 755 0034 4FF00001 		mov	r1, #0
 756 0038 FFF7FEFF 		bl	TC_Start
 153:board/led.c   **** }
 757              		.loc 2 153 0
 758 003c 07F10807 		add	r7, r7, #8
 759 0040 BD46     		mov	sp, r7
 760 0042 80BD     		pop	{r7, pc}
 761              		.cfi_endproc
 762              	.LFE44:
 763              		.size	LED_blinkstop, .-LED_blinkstop
 764              		.section	.text.LED_blinking,"ax",%progbits
 765              		.align	2
 766              		.global	LED_blinking
 767              		.thumb
 768              		.thumb_func
 769              		.type	LED_blinking, %function
 770              	LED_blinking:
 771              	.LFB45:
 154:board/led.c   **** 
 155:board/led.c   **** /*
 156:board/led.c   ****  * Check if LED is flashing
 157:board/led.c   ****  */
 158:board/led.c   **** uint8_t LED_blinking(uint8_t led)
 159:board/led.c   **** {
 772              		.loc 2 159 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 8
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777 0000 80B4     		push	{r7}
 778              	.LCFI32:
 779              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cctnQ2aC.s 			page 44


 780              		.cfi_offset 7, -4
 781 0002 83B0     		sub	sp, sp, #12
 782              	.LCFI33:
 783              		.cfi_def_cfa_offset 16
 784 0004 00AF     		add	r7, sp, #0
 785              	.LCFI34:
 786              		.cfi_def_cfa_register 7
 787 0006 0346     		mov	r3, r0
 788 0008 FB71     		strb	r3, [r7, #7]
 160:board/led.c   **** 	return (uint8_t) blinks[led];
 789              		.loc 2 160 0
 790 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 791 000c 40F20003 		movw	r3, #:lower16:blinks
 792 0010 C0F20003 		movt	r3, #:upper16:blinks
 793 0014 53F82230 		ldr	r3, [r3, r2, lsl #2]
 794 0018 DBB2     		uxtb	r3, r3
 161:board/led.c   **** }
 795              		.loc 2 161 0
 796 001a 1846     		mov	r0, r3
 797 001c 07F10C07 		add	r7, r7, #12
 798 0020 BD46     		mov	sp, r7
 799 0022 80BC     		pop	{r7}
 800 0024 7047     		bx	lr
 801              		.cfi_endproc
 802              	.LFE45:
 803              		.size	LED_blinking, .-LED_blinking
 804 0026 00BF     		.section	.rodata
 805 0033 00       		.align	2
 806              		.type	__FUNCTION__.7546, %object
 807              		.size	__FUNCTION__.7546, 8
 808              	__FUNCTION__.7546:
 809 0034 4C45445F 		.ascii	"LED_get\000"
 809      67657400 
 810              		.align	2
 811              		.type	__FUNCTION__.7540, %object
 812              		.size	__FUNCTION__.7540, 8
 813              	__FUNCTION__.7540:
 814 003c 4C45445F 		.ascii	"LED_clr\000"
 814      636C7200 
 815              		.align	2
 816              		.type	__FUNCTION__.7534, %object
 817              		.size	__FUNCTION__.7534, 8
 818              	__FUNCTION__.7534:
 819 0044 4C45445F 		.ascii	"LED_set\000"
 819      73657400 
 820              		.align	2
 821              		.type	__FUNCTION__.7528, %object
 822              		.size	__FUNCTION__.7528, 8
 823              	__FUNCTION__.7528:
 824 004c 4C45445F 		.ascii	"LED_tgl\000"
 824      74676C00 
 825              		.text
 826              	.Letext0:
 827              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 828              		.file 4 "libchip/include/SAM3S.h"
 829              		.file 5 "libchip/include/pio.h"
 830              		.section	.debug_info,"",%progbits
ARM GAS  /tmp/cctnQ2aC.s 			page 45


 831              	.Ldebug_info0:
 832 0000 05100000 		.4byte	0x1005
 833 0004 0200     		.2byte	0x2
 834 0006 00000000 		.4byte	.Ldebug_abbrev0
 835 000a 04       		.byte	0x4
 836 000b 01       		.uleb128 0x1
 837 000c 66060000 		.4byte	.LASF208
 838 0010 01       		.byte	0x1
 839 0011 68050000 		.4byte	.LASF209
 840 0015 F8030000 		.4byte	.LASF210
 841 0019 00000000 		.4byte	0
 842 001d 00000000 		.4byte	0
 843 0021 00000000 		.4byte	.Ldebug_ranges0+0
 844 0025 00000000 		.4byte	.Ldebug_line0
 845 0029 02       		.uleb128 0x2
 846 002a 01       		.byte	0x1
 847 002b 06       		.byte	0x6
 848 002c E8000000 		.4byte	.LASF0
 849 0030 02       		.uleb128 0x2
 850 0031 01       		.byte	0x1
 851 0032 08       		.byte	0x8
 852 0033 3A050000 		.4byte	.LASF1
 853 0037 02       		.uleb128 0x2
 854 0038 02       		.byte	0x2
 855 0039 05       		.byte	0x5
 856 003a C0010000 		.4byte	.LASF2
 857 003e 02       		.uleb128 0x2
 858 003f 02       		.byte	0x2
 859 0040 07       		.byte	0x7
 860 0041 21030000 		.4byte	.LASF3
 861 0045 03       		.uleb128 0x3
 862 0046 04       		.byte	0x4
 863 0047 05       		.byte	0x5
 864 0048 696E7400 		.ascii	"int\000"
 865 004c 02       		.uleb128 0x2
 866 004d 04       		.byte	0x4
 867 004e 07       		.byte	0x7
 868 004f 7A020000 		.4byte	.LASF4
 869 0053 02       		.uleb128 0x2
 870 0054 08       		.byte	0x8
 871 0055 05       		.byte	0x5
 872 0056 DA000000 		.4byte	.LASF5
 873 005a 02       		.uleb128 0x2
 874 005b 08       		.byte	0x8
 875 005c 07       		.byte	0x7
 876 005d 92000000 		.4byte	.LASF6
 877 0061 02       		.uleb128 0x2
 878 0062 04       		.byte	0x4
 879 0063 05       		.byte	0x5
 880 0064 8C010000 		.4byte	.LASF7
 881 0068 02       		.uleb128 0x2
 882 0069 04       		.byte	0x4
 883 006a 07       		.byte	0x7
 884 006b C9020000 		.4byte	.LASF8
 885 006f 02       		.uleb128 0x2
 886 0070 01       		.byte	0x1
 887 0071 08       		.byte	0x8
ARM GAS  /tmp/cctnQ2aC.s 			page 46


 888 0072 8B060000 		.4byte	.LASF9
 889 0076 04       		.uleb128 0x4
 890 0077 6F000000 		.4byte	0x6f
 891 007b 86000000 		.4byte	0x86
 892 007f 05       		.uleb128 0x5
 893 0080 4C000000 		.4byte	0x4c
 894 0084 07       		.byte	0x7
 895 0085 00       		.byte	0
 896 0086 06       		.uleb128 0x6
 897 0087 82070000 		.4byte	.LASF10
 898 008b 03       		.byte	0x3
 899 008c 2A       		.byte	0x2a
 900 008d 30000000 		.4byte	0x30
 901 0091 06       		.uleb128 0x6
 902 0092 2B060000 		.4byte	.LASF11
 903 0096 03       		.byte	0x3
 904 0097 50       		.byte	0x50
 905 0098 68000000 		.4byte	0x68
 906 009c 07       		.uleb128 0x7
 907 009d 91000000 		.4byte	0x91
 908 00a1 08       		.uleb128 0x8
 909 00a2 F3030000 		.4byte	.LASF195
 910 00a6 01       		.byte	0x1
 911 00a7 04       		.byte	0x4
 912 00a8 49       		.byte	0x49
 913 00a9 9E010000 		.4byte	0x19e
 914 00ad 09       		.uleb128 0x9
 915 00ae CC060000 		.4byte	.LASF12
 916 00b2 72       		.sleb128 -14
 917 00b3 09       		.uleb128 0x9
 918 00b4 B6040000 		.4byte	.LASF13
 919 00b8 74       		.sleb128 -12
 920 00b9 09       		.uleb128 0x9
 921 00ba 20020000 		.4byte	.LASF14
 922 00be 75       		.sleb128 -11
 923 00bf 09       		.uleb128 0x9
 924 00c0 4B060000 		.4byte	.LASF15
 925 00c4 76       		.sleb128 -10
 926 00c5 09       		.uleb128 0x9
 927 00c6 15030000 		.4byte	.LASF16
 928 00ca 7B       		.sleb128 -5
 929 00cb 09       		.uleb128 0x9
 930 00cc 15070000 		.4byte	.LASF17
 931 00d0 7C       		.sleb128 -4
 932 00d1 09       		.uleb128 0x9
 933 00d2 3F060000 		.4byte	.LASF18
 934 00d6 7E       		.sleb128 -2
 935 00d7 09       		.uleb128 0x9
 936 00d8 C2030000 		.4byte	.LASF19
 937 00dc 7F       		.sleb128 -1
 938 00dd 09       		.uleb128 0x9
 939 00de E0050000 		.4byte	.LASF20
 940 00e2 00       		.sleb128 0
 941 00e3 09       		.uleb128 0x9
 942 00e4 AD020000 		.4byte	.LASF21
 943 00e8 01       		.sleb128 1
 944 00e9 09       		.uleb128 0x9
ARM GAS  /tmp/cctnQ2aC.s 			page 47


 945 00ea 6A030000 		.4byte	.LASF22
 946 00ee 02       		.sleb128 2
 947 00ef 09       		.uleb128 0x9
 948 00f0 30070000 		.4byte	.LASF23
 949 00f4 03       		.sleb128 3
 950 00f5 09       		.uleb128 0x9
 951 00f6 E0060000 		.4byte	.LASF24
 952 00fa 04       		.sleb128 4
 953 00fb 09       		.uleb128 0x9
 954 00fc 0F080000 		.4byte	.LASF25
 955 0100 05       		.sleb128 5
 956 0101 09       		.uleb128 0x9
 957 0102 CA010000 		.4byte	.LASF26
 958 0106 06       		.sleb128 6
 959 0107 09       		.uleb128 0x9
 960 0108 CF030000 		.4byte	.LASF27
 961 010c 08       		.sleb128 8
 962 010d 09       		.uleb128 0x9
 963 010e AB040000 		.4byte	.LASF28
 964 0112 09       		.sleb128 9
 965 0113 09       		.uleb128 0x9
 966 0114 55000000 		.4byte	.LASF29
 967 0118 0A       		.sleb128 10
 968 0119 09       		.uleb128 0x9
 969 011a B7020000 		.4byte	.LASF30
 970 011e 0B       		.sleb128 11
 971 011f 09       		.uleb128 0x9
 972 0120 90060000 		.4byte	.LASF31
 973 0124 0C       		.sleb128 12
 974 0125 09       		.uleb128 0x9
 975 0126 67070000 		.4byte	.LASF32
 976 012a 0D       		.sleb128 13
 977 012b 09       		.uleb128 0x9
 978 012c 80010000 		.4byte	.LASF33
 979 0130 0E       		.sleb128 14
 980 0131 09       		.uleb128 0x9
 981 0132 4D070000 		.4byte	.LASF34
 982 0136 0F       		.sleb128 15
 983 0137 09       		.uleb128 0x9
 984 0138 26000000 		.4byte	.LASF35
 985 013c 12       		.sleb128 18
 986 013d 09       		.uleb128 0x9
 987 013e 48050000 		.4byte	.LASF36
 988 0142 13       		.sleb128 19
 989 0143 09       		.uleb128 0x9
 990 0144 81060000 		.4byte	.LASF37
 991 0148 14       		.sleb128 20
 992 0149 09       		.uleb128 0x9
 993 014a CB070000 		.4byte	.LASF38
 994 014e 15       		.sleb128 21
 995 014f 09       		.uleb128 0x9
 996 0150 A7050000 		.4byte	.LASF39
 997 0154 16       		.sleb128 22
 998 0155 09       		.uleb128 0x9
 999 0156 95050000 		.4byte	.LASF40
 1000 015a 17       		.sleb128 23
 1001 015b 09       		.uleb128 0x9
ARM GAS  /tmp/cctnQ2aC.s 			page 48


 1002 015c A0030000 		.4byte	.LASF41
 1003 0160 18       		.sleb128 24
 1004 0161 09       		.uleb128 0x9
 1005 0162 F9050000 		.4byte	.LASF42
 1006 0166 19       		.sleb128 25
 1007 0167 09       		.uleb128 0x9
 1008 0168 61030000 		.4byte	.LASF43
 1009 016c 1A       		.sleb128 26
 1010 016d 09       		.uleb128 0x9
 1011 016e 0A020000 		.4byte	.LASF44
 1012 0172 1B       		.sleb128 27
 1013 0173 09       		.uleb128 0x9
 1014 0174 34030000 		.4byte	.LASF45
 1015 0178 1C       		.sleb128 28
 1016 0179 09       		.uleb128 0x9
 1017 017a 06080000 		.4byte	.LASF46
 1018 017e 1D       		.sleb128 29
 1019 017f 09       		.uleb128 0x9
 1020 0180 18060000 		.4byte	.LASF47
 1021 0184 1E       		.sleb128 30
 1022 0185 09       		.uleb128 0x9
 1023 0186 5C040000 		.4byte	.LASF48
 1024 018a 1F       		.sleb128 31
 1025 018b 09       		.uleb128 0x9
 1026 018c F4010000 		.4byte	.LASF49
 1027 0190 20       		.sleb128 32
 1028 0191 09       		.uleb128 0x9
 1029 0192 A9030000 		.4byte	.LASF50
 1030 0196 21       		.sleb128 33
 1031 0197 09       		.uleb128 0x9
 1032 0198 50030000 		.4byte	.LASF51
 1033 019c 22       		.sleb128 34
 1034 019d 00       		.byte	0
 1035 019e 06       		.uleb128 0x6
 1036 019f 02060000 		.4byte	.LASF52
 1037 01a3 04       		.byte	0x4
 1038 01a4 76       		.byte	0x76
 1039 01a5 A1000000 		.4byte	0xa1
 1040 01a9 0A       		.uleb128 0xa
 1041 01aa 040E     		.2byte	0xe04
 1042 01ac 01       		.byte	0x1
 1043 01ad 84       		.byte	0x84
 1044 01ae 73020000 		.4byte	0x273
 1045 01b2 0B       		.uleb128 0xb
 1046 01b3 BB010000 		.4byte	.LASF53
 1047 01b7 01       		.byte	0x1
 1048 01b8 86       		.byte	0x86
 1049 01b9 83020000 		.4byte	0x283
 1050 01bd 02       		.byte	0x2
 1051 01be 23       		.byte	0x23
 1052 01bf 00       		.uleb128 0
 1053 01c0 0B       		.uleb128 0xb
 1054 01c1 EA040000 		.4byte	.LASF54
 1055 01c5 01       		.byte	0x1
 1056 01c6 87       		.byte	0x87
 1057 01c7 88020000 		.4byte	0x288
 1058 01cb 02       		.byte	0x2
ARM GAS  /tmp/cctnQ2aC.s 			page 49


 1059 01cc 23       		.byte	0x23
 1060 01cd 20       		.uleb128 0x20
 1061 01ce 0B       		.uleb128 0xb
 1062 01cf 75040000 		.4byte	.LASF55
 1063 01d3 01       		.byte	0x1
 1064 01d4 88       		.byte	0x88
 1065 01d5 98020000 		.4byte	0x298
 1066 01d9 03       		.byte	0x3
 1067 01da 23       		.byte	0x23
 1068 01db 8001     		.uleb128 0x80
 1069 01dd 0B       		.uleb128 0xb
 1070 01de 92070000 		.4byte	.LASF56
 1071 01e2 01       		.byte	0x1
 1072 01e3 89       		.byte	0x89
 1073 01e4 88020000 		.4byte	0x288
 1074 01e8 03       		.byte	0x3
 1075 01e9 23       		.byte	0x23
 1076 01ea A001     		.uleb128 0xa0
 1077 01ec 0B       		.uleb128 0xb
 1078 01ed C3000000 		.4byte	.LASF57
 1079 01f1 01       		.byte	0x1
 1080 01f2 8A       		.byte	0x8a
 1081 01f3 9D020000 		.4byte	0x29d
 1082 01f7 03       		.byte	0x3
 1083 01f8 23       		.byte	0x23
 1084 01f9 8002     		.uleb128 0x100
 1085 01fb 0B       		.uleb128 0xb
 1086 01fc F4040000 		.4byte	.LASF58
 1087 0200 01       		.byte	0x1
 1088 0201 8B       		.byte	0x8b
 1089 0202 88020000 		.4byte	0x288
 1090 0206 03       		.byte	0x3
 1091 0207 23       		.byte	0x23
 1092 0208 A002     		.uleb128 0x120
 1093 020a 0B       		.uleb128 0xb
 1094 020b 00000000 		.4byte	.LASF59
 1095 020f 01       		.byte	0x1
 1096 0210 8C       		.byte	0x8c
 1097 0211 A2020000 		.4byte	0x2a2
 1098 0215 03       		.byte	0x3
 1099 0216 23       		.byte	0x23
 1100 0217 8003     		.uleb128 0x180
 1101 0219 0B       		.uleb128 0xb
 1102 021a FE040000 		.4byte	.LASF60
 1103 021e 01       		.byte	0x1
 1104 021f 8D       		.byte	0x8d
 1105 0220 88020000 		.4byte	0x288
 1106 0224 03       		.byte	0x3
 1107 0225 23       		.byte	0x23
 1108 0226 A003     		.uleb128 0x1a0
 1109 0228 0B       		.uleb128 0xb
 1110 0229 4E040000 		.4byte	.LASF61
 1111 022d 01       		.byte	0x1
 1112 022e 8E       		.byte	0x8e
 1113 022f A7020000 		.4byte	0x2a7
 1114 0233 03       		.byte	0x3
 1115 0234 23       		.byte	0x23
ARM GAS  /tmp/cctnQ2aC.s 			page 50


 1116 0235 8004     		.uleb128 0x200
 1117 0237 0B       		.uleb128 0xb
 1118 0238 08050000 		.4byte	.LASF62
 1119 023c 01       		.byte	0x1
 1120 023d 8F       		.byte	0x8f
 1121 023e AC020000 		.4byte	0x2ac
 1122 0242 03       		.byte	0x3
 1123 0243 23       		.byte	0x23
 1124 0244 A004     		.uleb128 0x220
 1125 0246 0C       		.uleb128 0xc
 1126 0247 495000   		.ascii	"IP\000"
 1127 024a 01       		.byte	0x1
 1128 024b 90       		.byte	0x90
 1129 024c CC020000 		.4byte	0x2cc
 1130 0250 03       		.byte	0x3
 1131 0251 23       		.byte	0x23
 1132 0252 8006     		.uleb128 0x300
 1133 0254 0B       		.uleb128 0xb
 1134 0255 12050000 		.4byte	.LASF63
 1135 0259 01       		.byte	0x1
 1136 025a 91       		.byte	0x91
 1137 025b D1020000 		.4byte	0x2d1
 1138 025f 03       		.byte	0x3
 1139 0260 23       		.byte	0x23
 1140 0261 F007     		.uleb128 0x3f0
 1141 0263 0B       		.uleb128 0xb
 1142 0264 9B070000 		.4byte	.LASF64
 1143 0268 01       		.byte	0x1
 1144 0269 92       		.byte	0x92
 1145 026a 9C000000 		.4byte	0x9c
 1146 026e 03       		.byte	0x3
 1147 026f 23       		.byte	0x23
 1148 0270 801C     		.uleb128 0xe00
 1149 0272 00       		.byte	0
 1150 0273 04       		.uleb128 0x4
 1151 0274 91000000 		.4byte	0x91
 1152 0278 83020000 		.4byte	0x283
 1153 027c 05       		.uleb128 0x5
 1154 027d 4C000000 		.4byte	0x4c
 1155 0281 07       		.byte	0x7
 1156 0282 00       		.byte	0
 1157 0283 07       		.uleb128 0x7
 1158 0284 73020000 		.4byte	0x273
 1159 0288 04       		.uleb128 0x4
 1160 0289 91000000 		.4byte	0x91
 1161 028d 98020000 		.4byte	0x298
 1162 0291 05       		.uleb128 0x5
 1163 0292 4C000000 		.4byte	0x4c
 1164 0296 17       		.byte	0x17
 1165 0297 00       		.byte	0
 1166 0298 07       		.uleb128 0x7
 1167 0299 73020000 		.4byte	0x273
 1168 029d 07       		.uleb128 0x7
 1169 029e 73020000 		.4byte	0x273
 1170 02a2 07       		.uleb128 0x7
 1171 02a3 73020000 		.4byte	0x273
 1172 02a7 07       		.uleb128 0x7
ARM GAS  /tmp/cctnQ2aC.s 			page 51


 1173 02a8 73020000 		.4byte	0x273
 1174 02ac 04       		.uleb128 0x4
 1175 02ad 91000000 		.4byte	0x91
 1176 02b1 BC020000 		.4byte	0x2bc
 1177 02b5 05       		.uleb128 0x5
 1178 02b6 4C000000 		.4byte	0x4c
 1179 02ba 37       		.byte	0x37
 1180 02bb 00       		.byte	0
 1181 02bc 04       		.uleb128 0x4
 1182 02bd 86000000 		.4byte	0x86
 1183 02c1 CC020000 		.4byte	0x2cc
 1184 02c5 05       		.uleb128 0x5
 1185 02c6 4C000000 		.4byte	0x4c
 1186 02ca EF       		.byte	0xef
 1187 02cb 00       		.byte	0
 1188 02cc 07       		.uleb128 0x7
 1189 02cd BC020000 		.4byte	0x2bc
 1190 02d1 04       		.uleb128 0x4
 1191 02d2 91000000 		.4byte	0x91
 1192 02d6 E2020000 		.4byte	0x2e2
 1193 02da 0D       		.uleb128 0xd
 1194 02db 4C000000 		.4byte	0x4c
 1195 02df 8302     		.2byte	0x283
 1196 02e1 00       		.byte	0
 1197 02e2 06       		.uleb128 0x6
 1198 02e3 85050000 		.4byte	.LASF65
 1199 02e7 01       		.byte	0x1
 1200 02e8 93       		.byte	0x93
 1201 02e9 A9010000 		.4byte	0x1a9
 1202 02ed 04       		.uleb128 0x4
 1203 02ee 91000000 		.4byte	0x91
 1204 02f2 FD020000 		.4byte	0x2fd
 1205 02f6 05       		.uleb128 0x5
 1206 02f7 4C000000 		.4byte	0x4c
 1207 02fb 01       		.byte	0x1
 1208 02fc 00       		.byte	0
 1209 02fd 07       		.uleb128 0x7
 1210 02fe 68000000 		.4byte	0x68
 1211 0302 0E       		.uleb128 0xe
 1212 0303 FD020000 		.4byte	0x2fd
 1213 0307 04       		.uleb128 0x4
 1214 0308 68000000 		.4byte	0x68
 1215 030c 17030000 		.4byte	0x317
 1216 0310 05       		.uleb128 0x5
 1217 0311 4C000000 		.4byte	0x4c
 1218 0315 12       		.byte	0x12
 1219 0316 00       		.byte	0
 1220 0317 04       		.uleb128 0x4
 1221 0318 68000000 		.4byte	0x68
 1222 031c 27030000 		.4byte	0x327
 1223 0320 05       		.uleb128 0x5
 1224 0321 4C000000 		.4byte	0x4c
 1225 0325 00       		.byte	0
 1226 0326 00       		.byte	0
 1227 0327 04       		.uleb128 0x4
 1228 0328 68000000 		.4byte	0x68
 1229 032c 37030000 		.4byte	0x337
ARM GAS  /tmp/cctnQ2aC.s 			page 52


 1230 0330 05       		.uleb128 0x5
 1231 0331 4C000000 		.4byte	0x4c
 1232 0335 01       		.byte	0x1
 1233 0336 00       		.byte	0
 1234 0337 04       		.uleb128 0x4
 1235 0338 68000000 		.4byte	0x68
 1236 033c 47030000 		.4byte	0x347
 1237 0340 05       		.uleb128 0x5
 1238 0341 4C000000 		.4byte	0x4c
 1239 0345 04       		.byte	0x4
 1240 0346 00       		.byte	0
 1241 0347 04       		.uleb128 0x4
 1242 0348 68000000 		.4byte	0x68
 1243 034c 57030000 		.4byte	0x357
 1244 0350 05       		.uleb128 0x5
 1245 0351 4C000000 		.4byte	0x4c
 1246 0355 03       		.byte	0x3
 1247 0356 00       		.byte	0
 1248 0357 0F       		.uleb128 0xf
 1249 0358 9001     		.2byte	0x190
 1250 035a 04       		.byte	0x4
 1251 035b E006     		.2byte	0x6e0
 1252 035d 04080000 		.4byte	0x804
 1253 0361 10       		.uleb128 0x10
 1254 0362 6B020000 		.4byte	.LASF66
 1255 0366 04       		.byte	0x4
 1256 0367 E106     		.2byte	0x6e1
 1257 0369 FD020000 		.4byte	0x2fd
 1258 036d 02       		.byte	0x2
 1259 036e 23       		.byte	0x23
 1260 036f 00       		.uleb128 0
 1261 0370 10       		.uleb128 0x10
 1262 0371 78010000 		.4byte	.LASF67
 1263 0375 04       		.byte	0x4
 1264 0376 E206     		.2byte	0x6e2
 1265 0378 FD020000 		.4byte	0x2fd
 1266 037c 02       		.byte	0x2
 1267 037d 23       		.byte	0x23
 1268 037e 04       		.uleb128 0x4
 1269 037f 10       		.uleb128 0x10
 1270 0380 16010000 		.4byte	.LASF68
 1271 0384 04       		.byte	0x4
 1272 0385 E306     		.2byte	0x6e3
 1273 0387 02030000 		.4byte	0x302
 1274 038b 02       		.byte	0x2
 1275 038c 23       		.byte	0x23
 1276 038d 08       		.uleb128 0x8
 1277 038e 10       		.uleb128 0x10
 1278 038f 1E010000 		.4byte	.LASF69
 1279 0393 04       		.byte	0x4
 1280 0394 E406     		.2byte	0x6e4
 1281 0396 04080000 		.4byte	0x804
 1282 039a 02       		.byte	0x2
 1283 039b 23       		.byte	0x23
 1284 039c 0C       		.uleb128 0xc
 1285 039d 10       		.uleb128 0x10
 1286 039e 32040000 		.4byte	.LASF70
ARM GAS  /tmp/cctnQ2aC.s 			page 53


 1287 03a2 04       		.byte	0x4
 1288 03a3 E506     		.2byte	0x6e5
 1289 03a5 FD020000 		.4byte	0x2fd
 1290 03a9 02       		.byte	0x2
 1291 03aa 23       		.byte	0x23
 1292 03ab 10       		.uleb128 0x10
 1293 03ac 10       		.uleb128 0x10
 1294 03ad FB020000 		.4byte	.LASF71
 1295 03b1 04       		.byte	0x4
 1296 03b2 E606     		.2byte	0x6e6
 1297 03b4 FD020000 		.4byte	0x2fd
 1298 03b8 02       		.byte	0x2
 1299 03b9 23       		.byte	0x23
 1300 03ba 14       		.uleb128 0x14
 1301 03bb 10       		.uleb128 0x10
 1302 03bc C1020000 		.4byte	.LASF72
 1303 03c0 04       		.byte	0x4
 1304 03c1 E706     		.2byte	0x6e7
 1305 03c3 02030000 		.4byte	0x302
 1306 03c7 02       		.byte	0x2
 1307 03c8 23       		.byte	0x23
 1308 03c9 18       		.uleb128 0x18
 1309 03ca 10       		.uleb128 0x10
 1310 03cb 28010000 		.4byte	.LASF73
 1311 03cf 04       		.byte	0x4
 1312 03d0 E806     		.2byte	0x6e8
 1313 03d2 09080000 		.4byte	0x809
 1314 03d6 02       		.byte	0x2
 1315 03d7 23       		.byte	0x23
 1316 03d8 1C       		.uleb128 0x1c
 1317 03d9 10       		.uleb128 0x10
 1318 03da F4060000 		.4byte	.LASF74
 1319 03de 04       		.byte	0x4
 1320 03df E906     		.2byte	0x6e9
 1321 03e1 FD020000 		.4byte	0x2fd
 1322 03e5 02       		.byte	0x2
 1323 03e6 23       		.byte	0x23
 1324 03e7 20       		.uleb128 0x20
 1325 03e8 10       		.uleb128 0x10
 1326 03e9 9E050000 		.4byte	.LASF75
 1327 03ed 04       		.byte	0x4
 1328 03ee EA06     		.2byte	0x6ea
 1329 03f0 FD020000 		.4byte	0x2fd
 1330 03f4 02       		.byte	0x2
 1331 03f5 23       		.byte	0x23
 1332 03f6 24       		.uleb128 0x24
 1333 03f7 10       		.uleb128 0x10
 1334 03f8 52050000 		.4byte	.LASF76
 1335 03fc 04       		.byte	0x4
 1336 03fd EB06     		.2byte	0x6eb
 1337 03ff 02030000 		.4byte	0x302
 1338 0403 02       		.byte	0x2
 1339 0404 23       		.byte	0x23
 1340 0405 28       		.uleb128 0x28
 1341 0406 10       		.uleb128 0x10
 1342 0407 32010000 		.4byte	.LASF77
 1343 040b 04       		.byte	0x4
ARM GAS  /tmp/cctnQ2aC.s 			page 54


 1344 040c EC06     		.2byte	0x6ec
 1345 040e 0E080000 		.4byte	0x80e
 1346 0412 02       		.byte	0x2
 1347 0413 23       		.byte	0x23
 1348 0414 2C       		.uleb128 0x2c
 1349 0415 10       		.uleb128 0x10
 1350 0416 F5070000 		.4byte	.LASF78
 1351 041a 04       		.byte	0x4
 1352 041b ED06     		.2byte	0x6ed
 1353 041d FD020000 		.4byte	0x2fd
 1354 0421 02       		.byte	0x2
 1355 0422 23       		.byte	0x23
 1356 0423 30       		.uleb128 0x30
 1357 0424 10       		.uleb128 0x10
 1358 0425 74050000 		.4byte	.LASF79
 1359 0429 04       		.byte	0x4
 1360 042a EE06     		.2byte	0x6ee
 1361 042c FD020000 		.4byte	0x2fd
 1362 0430 02       		.byte	0x2
 1363 0431 23       		.byte	0x23
 1364 0432 34       		.uleb128 0x34
 1365 0433 10       		.uleb128 0x10
 1366 0434 7A040000 		.4byte	.LASF80
 1367 0438 04       		.byte	0x4
 1368 0439 EF06     		.2byte	0x6ef
 1369 043b FD020000 		.4byte	0x2fd
 1370 043f 02       		.byte	0x2
 1371 0440 23       		.byte	0x23
 1372 0441 38       		.uleb128 0x38
 1373 0442 10       		.uleb128 0x10
 1374 0443 DD010000 		.4byte	.LASF81
 1375 0447 04       		.byte	0x4
 1376 0448 F006     		.2byte	0x6f0
 1377 044a 02030000 		.4byte	0x302
 1378 044e 02       		.byte	0x2
 1379 044f 23       		.byte	0x23
 1380 0450 3C       		.uleb128 0x3c
 1381 0451 10       		.uleb128 0x10
 1382 0452 A3040000 		.4byte	.LASF82
 1383 0456 04       		.byte	0x4
 1384 0457 F106     		.2byte	0x6f1
 1385 0459 FD020000 		.4byte	0x2fd
 1386 045d 02       		.byte	0x2
 1387 045e 23       		.byte	0x23
 1388 045f 40       		.uleb128 0x40
 1389 0460 10       		.uleb128 0x10
 1390 0461 B2030000 		.4byte	.LASF83
 1391 0465 04       		.byte	0x4
 1392 0466 F206     		.2byte	0x6f2
 1393 0468 FD020000 		.4byte	0x2fd
 1394 046c 02       		.byte	0x2
 1395 046d 23       		.byte	0x23
 1396 046e 44       		.uleb128 0x44
 1397 046f 10       		.uleb128 0x10
 1398 0470 7D050000 		.4byte	.LASF84
 1399 0474 04       		.byte	0x4
 1400 0475 F306     		.2byte	0x6f3
ARM GAS  /tmp/cctnQ2aC.s 			page 55


 1401 0477 02030000 		.4byte	0x302
 1402 047b 02       		.byte	0x2
 1403 047c 23       		.byte	0x23
 1404 047d 48       		.uleb128 0x48
 1405 047e 10       		.uleb128 0x10
 1406 047f 90030000 		.4byte	.LASF85
 1407 0483 04       		.byte	0x4
 1408 0484 F406     		.2byte	0x6f4
 1409 0486 02030000 		.4byte	0x302
 1410 048a 02       		.byte	0x2
 1411 048b 23       		.byte	0x23
 1412 048c 4C       		.uleb128 0x4c
 1413 048d 10       		.uleb128 0x10
 1414 048e 22060000 		.4byte	.LASF86
 1415 0492 04       		.byte	0x4
 1416 0493 F506     		.2byte	0x6f5
 1417 0495 FD020000 		.4byte	0x2fd
 1418 0499 02       		.byte	0x2
 1419 049a 23       		.byte	0x23
 1420 049b 50       		.uleb128 0x50
 1421 049c 10       		.uleb128 0x10
 1422 049d CC040000 		.4byte	.LASF87
 1423 04a1 04       		.byte	0x4
 1424 04a2 F606     		.2byte	0x6f6
 1425 04a4 FD020000 		.4byte	0x2fd
 1426 04a8 02       		.byte	0x2
 1427 04a9 23       		.byte	0x23
 1428 04aa 54       		.uleb128 0x54
 1429 04ab 10       		.uleb128 0x10
 1430 04ac 83040000 		.4byte	.LASF88
 1431 04b0 04       		.byte	0x4
 1432 04b1 F706     		.2byte	0x6f7
 1433 04b3 02030000 		.4byte	0x302
 1434 04b7 02       		.byte	0x2
 1435 04b8 23       		.byte	0x23
 1436 04b9 58       		.uleb128 0x58
 1437 04ba 10       		.uleb128 0x10
 1438 04bb 3C010000 		.4byte	.LASF89
 1439 04bf 04       		.byte	0x4
 1440 04c0 F806     		.2byte	0x6f8
 1441 04c2 13080000 		.4byte	0x813
 1442 04c6 02       		.byte	0x2
 1443 04c7 23       		.byte	0x23
 1444 04c8 5C       		.uleb128 0x5c
 1445 04c9 10       		.uleb128 0x10
 1446 04ca 95010000 		.4byte	.LASF90
 1447 04ce 04       		.byte	0x4
 1448 04cf F906     		.2byte	0x6f9
 1449 04d1 FD020000 		.4byte	0x2fd
 1450 04d5 02       		.byte	0x2
 1451 04d6 23       		.byte	0x23
 1452 04d7 60       		.uleb128 0x60
 1453 04d8 10       		.uleb128 0x10
 1454 04d9 91020000 		.4byte	.LASF91
 1455 04dd 04       		.byte	0x4
 1456 04de FA06     		.2byte	0x6fa
 1457 04e0 FD020000 		.4byte	0x2fd
ARM GAS  /tmp/cctnQ2aC.s 			page 56


 1458 04e4 02       		.byte	0x2
 1459 04e5 23       		.byte	0x23
 1460 04e6 64       		.uleb128 0x64
 1461 04e7 10       		.uleb128 0x10
 1462 04e8 D1000000 		.4byte	.LASF92
 1463 04ec 04       		.byte	0x4
 1464 04ed FB06     		.2byte	0x6fb
 1465 04ef 02030000 		.4byte	0x302
 1466 04f3 02       		.byte	0x2
 1467 04f4 23       		.byte	0x23
 1468 04f5 68       		.uleb128 0x68
 1469 04f6 10       		.uleb128 0x10
 1470 04f7 0B030000 		.4byte	.LASF93
 1471 04fb 04       		.byte	0x4
 1472 04fc FC06     		.2byte	0x6fc
 1473 04fe 18080000 		.4byte	0x818
 1474 0502 02       		.byte	0x2
 1475 0503 23       		.byte	0x23
 1476 0504 6C       		.uleb128 0x6c
 1477 0505 10       		.uleb128 0x10
 1478 0506 FF010000 		.4byte	.LASF94
 1479 050a 04       		.byte	0x4
 1480 050b FD06     		.2byte	0x6fd
 1481 050d 1D080000 		.4byte	0x81d
 1482 0511 02       		.byte	0x2
 1483 0512 23       		.byte	0x23
 1484 0513 70       		.uleb128 0x70
 1485 0514 10       		.uleb128 0x10
 1486 0515 50010000 		.4byte	.LASF95
 1487 0519 04       		.byte	0x4
 1488 051a FE06     		.2byte	0x6fe
 1489 051c 22080000 		.4byte	0x822
 1490 0520 02       		.byte	0x2
 1491 0521 23       		.byte	0x23
 1492 0522 78       		.uleb128 0x78
 1493 0523 10       		.uleb128 0x10
 1494 0524 E9060000 		.4byte	.LASF96
 1495 0528 04       		.byte	0x4
 1496 0529 FF06     		.2byte	0x6ff
 1497 052b FD020000 		.4byte	0x2fd
 1498 052f 03       		.byte	0x3
 1499 0530 23       		.byte	0x23
 1500 0531 8001     		.uleb128 0x80
 1501 0533 10       		.uleb128 0x10
 1502 0534 3A040000 		.4byte	.LASF97
 1503 0538 04       		.byte	0x4
 1504 0539 0007     		.2byte	0x700
 1505 053b FD020000 		.4byte	0x2fd
 1506 053f 03       		.byte	0x3
 1507 0540 23       		.byte	0x23
 1508 0541 8401     		.uleb128 0x84
 1509 0543 10       		.uleb128 0x10
 1510 0544 B8060000 		.4byte	.LASF98
 1511 0548 04       		.byte	0x4
 1512 0549 0107     		.2byte	0x701
 1513 054b 02030000 		.4byte	0x302
 1514 054f 03       		.byte	0x3
ARM GAS  /tmp/cctnQ2aC.s 			page 57


 1515 0550 23       		.byte	0x23
 1516 0551 8801     		.uleb128 0x88
 1517 0553 10       		.uleb128 0x10
 1518 0554 C8000000 		.4byte	.LASF99
 1519 0558 04       		.byte	0x4
 1520 0559 0207     		.2byte	0x702
 1521 055b FD020000 		.4byte	0x2fd
 1522 055f 03       		.byte	0x3
 1523 0560 23       		.byte	0x23
 1524 0561 8C01     		.uleb128 0x8c
 1525 0563 10       		.uleb128 0x10
 1526 0564 8C040000 		.4byte	.LASF100
 1527 0568 04       		.byte	0x4
 1528 0569 0307     		.2byte	0x703
 1529 056b FD020000 		.4byte	0x2fd
 1530 056f 03       		.byte	0x3
 1531 0570 23       		.byte	0x23
 1532 0571 9001     		.uleb128 0x90
 1533 0573 10       		.uleb128 0x10
 1534 0574 EF050000 		.4byte	.LASF101
 1535 0578 04       		.byte	0x4
 1536 0579 0407     		.2byte	0x704
 1537 057b FD020000 		.4byte	0x2fd
 1538 057f 03       		.byte	0x3
 1539 0580 23       		.byte	0x23
 1540 0581 9401     		.uleb128 0x94
 1541 0583 10       		.uleb128 0x10
 1542 0584 6B040000 		.4byte	.LASF102
 1543 0588 04       		.byte	0x4
 1544 0589 0507     		.2byte	0x705
 1545 058b 02030000 		.4byte	0x302
 1546 058f 03       		.byte	0x3
 1547 0590 23       		.byte	0x23
 1548 0591 9801     		.uleb128 0x98
 1549 0593 10       		.uleb128 0x10
 1550 0594 5A010000 		.4byte	.LASF103
 1551 0598 04       		.byte	0x4
 1552 0599 0607     		.2byte	0x706
 1553 059b 27080000 		.4byte	0x827
 1554 059f 03       		.byte	0x3
 1555 05a0 23       		.byte	0x23
 1556 05a1 9C01     		.uleb128 0x9c
 1557 05a3 10       		.uleb128 0x10
 1558 05a4 74000000 		.4byte	.LASF104
 1559 05a8 04       		.byte	0x4
 1560 05a9 0707     		.2byte	0x707
 1561 05ab FD020000 		.4byte	0x2fd
 1562 05af 03       		.byte	0x3
 1563 05b0 23       		.byte	0x23
 1564 05b1 A001     		.uleb128 0xa0
 1565 05b3 10       		.uleb128 0x10
 1566 05b4 EC070000 		.4byte	.LASF105
 1567 05b8 04       		.byte	0x4
 1568 05b9 0807     		.2byte	0x708
 1569 05bb FD020000 		.4byte	0x2fd
 1570 05bf 03       		.byte	0x3
 1571 05c0 23       		.byte	0x23
ARM GAS  /tmp/cctnQ2aC.s 			page 58


 1572 05c1 A401     		.uleb128 0xa4
 1573 05c3 10       		.uleb128 0x10
 1574 05c4 A0070000 		.4byte	.LASF106
 1575 05c8 04       		.byte	0x4
 1576 05c9 0907     		.2byte	0x709
 1577 05cb 02030000 		.4byte	0x302
 1578 05cf 03       		.byte	0x3
 1579 05d0 23       		.byte	0x23
 1580 05d1 A801     		.uleb128 0xa8
 1581 05d3 10       		.uleb128 0x10
 1582 05d4 64010000 		.4byte	.LASF107
 1583 05d8 04       		.byte	0x4
 1584 05d9 0A07     		.2byte	0x70a
 1585 05db 2C080000 		.4byte	0x82c
 1586 05df 03       		.byte	0x3
 1587 05e0 23       		.byte	0x23
 1588 05e1 AC01     		.uleb128 0xac
 1589 05e3 10       		.uleb128 0x10
 1590 05e4 86030000 		.4byte	.LASF108
 1591 05e8 04       		.byte	0x4
 1592 05e9 0B07     		.2byte	0x70b
 1593 05eb FD020000 		.4byte	0x2fd
 1594 05ef 03       		.byte	0x3
 1595 05f0 23       		.byte	0x23
 1596 05f1 B001     		.uleb128 0xb0
 1597 05f3 10       		.uleb128 0x10
 1598 05f4 9A060000 		.4byte	.LASF109
 1599 05f8 04       		.byte	0x4
 1600 05f9 0C07     		.2byte	0x70c
 1601 05fb FD020000 		.4byte	0x2fd
 1602 05ff 03       		.byte	0x3
 1603 0600 23       		.byte	0x23
 1604 0601 B401     		.uleb128 0xb4
 1605 0603 10       		.uleb128 0x10
 1606 0604 E9030000 		.4byte	.LASF110
 1607 0608 04       		.byte	0x4
 1608 0609 0D07     		.2byte	0x70d
 1609 060b 02030000 		.4byte	0x302
 1610 060f 03       		.byte	0x3
 1611 0610 23       		.byte	0x23
 1612 0611 B801     		.uleb128 0xb8
 1613 0613 10       		.uleb128 0x10
 1614 0614 6E010000 		.4byte	.LASF111
 1615 0618 04       		.byte	0x4
 1616 0619 0E07     		.2byte	0x70e
 1617 061b 31080000 		.4byte	0x831
 1618 061f 03       		.byte	0x3
 1619 0620 23       		.byte	0x23
 1620 0621 BC01     		.uleb128 0xbc
 1621 0623 10       		.uleb128 0x10
 1622 0624 FE000000 		.4byte	.LASF112
 1623 0628 04       		.byte	0x4
 1624 0629 0F07     		.2byte	0x70f
 1625 062b FD020000 		.4byte	0x2fd
 1626 062f 03       		.byte	0x3
 1627 0630 23       		.byte	0x23
 1628 0631 C001     		.uleb128 0xc0
ARM GAS  /tmp/cctnQ2aC.s 			page 59


 1629 0633 10       		.uleb128 0x10
 1630 0634 71070000 		.4byte	.LASF113
 1631 0638 04       		.byte	0x4
 1632 0639 1007     		.2byte	0x710
 1633 063b FD020000 		.4byte	0x2fd
 1634 063f 03       		.byte	0x3
 1635 0640 23       		.byte	0x23
 1636 0641 C401     		.uleb128 0xc4
 1637 0643 10       		.uleb128 0x10
 1638 0644 05000000 		.4byte	.LASF114
 1639 0648 04       		.byte	0x4
 1640 0649 1107     		.2byte	0x711
 1641 064b 02030000 		.4byte	0x302
 1642 064f 03       		.byte	0x3
 1643 0650 23       		.byte	0x23
 1644 0651 C801     		.uleb128 0xc8
 1645 0653 10       		.uleb128 0x10
 1646 0654 36020000 		.4byte	.LASF115
 1647 0658 04       		.byte	0x4
 1648 0659 1207     		.2byte	0x712
 1649 065b 36080000 		.4byte	0x836
 1650 065f 03       		.byte	0x3
 1651 0660 23       		.byte	0x23
 1652 0661 CC01     		.uleb128 0xcc
 1653 0663 10       		.uleb128 0x10
 1654 0664 1C050000 		.4byte	.LASF116
 1655 0668 04       		.byte	0x4
 1656 0669 1307     		.2byte	0x713
 1657 066b FD020000 		.4byte	0x2fd
 1658 066f 03       		.byte	0x3
 1659 0670 23       		.byte	0x23
 1660 0671 D001     		.uleb128 0xd0
 1661 0673 10       		.uleb128 0x10
 1662 0674 34060000 		.4byte	.LASF117
 1663 0678 04       		.byte	0x4
 1664 0679 1407     		.2byte	0x714
 1665 067b FD020000 		.4byte	0x2fd
 1666 067f 03       		.byte	0x3
 1667 0680 23       		.byte	0x23
 1668 0681 D401     		.uleb128 0xd4
 1669 0683 10       		.uleb128 0x10
 1670 0684 9A020000 		.4byte	.LASF118
 1671 0688 04       		.byte	0x4
 1672 0689 1507     		.2byte	0x715
 1673 068b 02030000 		.4byte	0x302
 1674 068f 03       		.byte	0x3
 1675 0690 23       		.byte	0x23
 1676 0691 D801     		.uleb128 0xd8
 1677 0693 10       		.uleb128 0x10
 1678 0694 41020000 		.4byte	.LASF119
 1679 0698 04       		.byte	0x4
 1680 0699 1607     		.2byte	0x716
 1681 069b 3B080000 		.4byte	0x83b
 1682 069f 03       		.byte	0x3
 1683 06a0 23       		.byte	0x23
 1684 06a1 DC01     		.uleb128 0xdc
 1685 06a3 10       		.uleb128 0x10
ARM GAS  /tmp/cctnQ2aC.s 			page 60


 1686 06a4 73030000 		.4byte	.LASF120
 1687 06a8 04       		.byte	0x4
 1688 06a9 1707     		.2byte	0x717
 1689 06ab 02030000 		.4byte	0x302
 1690 06af 03       		.byte	0x3
 1691 06b0 23       		.byte	0x23
 1692 06b1 E001     		.uleb128 0xe0
 1693 06b3 10       		.uleb128 0x10
 1694 06b4 45040000 		.4byte	.LASF121
 1695 06b8 04       		.byte	0x4
 1696 06b9 1807     		.2byte	0x718
 1697 06bb FD020000 		.4byte	0x2fd
 1698 06bf 03       		.byte	0x3
 1699 06c0 23       		.byte	0x23
 1700 06c1 E401     		.uleb128 0xe4
 1701 06c3 10       		.uleb128 0x10
 1702 06c4 62020000 		.4byte	.LASF122
 1703 06c8 04       		.byte	0x4
 1704 06c9 1907     		.2byte	0x719
 1705 06cb 02030000 		.4byte	0x302
 1706 06cf 03       		.byte	0x3
 1707 06d0 23       		.byte	0x23
 1708 06d1 E801     		.uleb128 0xe8
 1709 06d3 10       		.uleb128 0x10
 1710 06d4 4C020000 		.4byte	.LASF123
 1711 06d8 04       		.byte	0x4
 1712 06d9 1A07     		.2byte	0x71a
 1713 06db 40080000 		.4byte	0x840
 1714 06df 03       		.byte	0x3
 1715 06e0 23       		.byte	0x23
 1716 06e1 EC01     		.uleb128 0xec
 1717 06e3 10       		.uleb128 0x10
 1718 06e4 0C060000 		.4byte	.LASF124
 1719 06e8 04       		.byte	0x4
 1720 06e9 1B07     		.2byte	0x71b
 1721 06eb FD020000 		.4byte	0x2fd
 1722 06ef 03       		.byte	0x3
 1723 06f0 23       		.byte	0x23
 1724 06f1 8002     		.uleb128 0x100
 1725 06f3 10       		.uleb128 0x10
 1726 06f4 57020000 		.4byte	.LASF125
 1727 06f8 04       		.byte	0x4
 1728 06f9 1C07     		.2byte	0x71c
 1729 06fb 45080000 		.4byte	0x845
 1730 06ff 03       		.byte	0x3
 1731 0700 23       		.byte	0x23
 1732 0701 8402     		.uleb128 0x104
 1733 0703 10       		.uleb128 0x10
 1734 0704 27050000 		.4byte	.LASF126
 1735 0708 04       		.byte	0x4
 1736 0709 1D07     		.2byte	0x71d
 1737 070b FD020000 		.4byte	0x2fd
 1738 070f 03       		.byte	0x3
 1739 0710 23       		.byte	0x23
 1740 0711 D002     		.uleb128 0x150
 1741 0713 10       		.uleb128 0x10
 1742 0714 D3010000 		.4byte	.LASF127
ARM GAS  /tmp/cctnQ2aC.s 			page 61


 1743 0718 04       		.byte	0x4
 1744 0719 1E07     		.2byte	0x71e
 1745 071b FD020000 		.4byte	0x2fd
 1746 071f 03       		.byte	0x3
 1747 0720 23       		.byte	0x23
 1748 0721 D402     		.uleb128 0x154
 1749 0723 10       		.uleb128 0x10
 1750 0724 B0000000 		.4byte	.LASF128
 1751 0728 04       		.byte	0x4
 1752 0729 1F07     		.2byte	0x71f
 1753 072b FD020000 		.4byte	0x2fd
 1754 072f 03       		.byte	0x3
 1755 0730 23       		.byte	0x23
 1756 0731 D802     		.uleb128 0x158
 1757 0733 10       		.uleb128 0x10
 1758 0734 F4000000 		.4byte	.LASF129
 1759 0738 04       		.byte	0x4
 1760 0739 2007     		.2byte	0x720
 1761 073b 02030000 		.4byte	0x302
 1762 073f 03       		.byte	0x3
 1763 0740 23       		.byte	0x23
 1764 0741 DC02     		.uleb128 0x15c
 1765 0743 10       		.uleb128 0x10
 1766 0744 7D000000 		.4byte	.LASF130
 1767 0748 04       		.byte	0x4
 1768 0749 2107     		.2byte	0x721
 1769 074b 02030000 		.4byte	0x302
 1770 074f 03       		.byte	0x3
 1771 0750 23       		.byte	0x23
 1772 0751 E002     		.uleb128 0x160
 1773 0753 10       		.uleb128 0x10
 1774 0754 39070000 		.4byte	.LASF131
 1775 0758 04       		.byte	0x4
 1776 0759 2207     		.2byte	0x722
 1777 075b 02030000 		.4byte	0x302
 1778 075f 03       		.byte	0x3
 1779 0760 23       		.byte	0x23
 1780 0761 E402     		.uleb128 0x164
 1781 0763 10       		.uleb128 0x10
 1782 0764 59030000 		.4byte	.LASF132
 1783 0768 04       		.byte	0x4
 1784 0769 2307     		.2byte	0x723
 1785 076b FD020000 		.4byte	0x2fd
 1786 076f 03       		.byte	0x3
 1787 0770 23       		.byte	0x23
 1788 0771 E802     		.uleb128 0x168
 1789 0773 10       		.uleb128 0x10
 1790 0774 C9050000 		.4byte	.LASF133
 1791 0778 04       		.byte	0x4
 1792 0779 2407     		.2byte	0x724
 1793 077b FD020000 		.4byte	0x2fd
 1794 077f 03       		.byte	0x3
 1795 0780 23       		.byte	0x23
 1796 0781 EC02     		.uleb128 0x16c
 1797 0783 10       		.uleb128 0x10
 1798 0784 39000000 		.4byte	.LASF134
 1799 0788 04       		.byte	0x4
ARM GAS  /tmp/cctnQ2aC.s 			page 62


 1800 0789 2507     		.2byte	0x725
 1801 078b FD020000 		.4byte	0x2fd
 1802 078f 03       		.byte	0x3
 1803 0790 23       		.byte	0x23
 1804 0791 F002     		.uleb128 0x170
 1805 0793 10       		.uleb128 0x10
 1806 0794 A5020000 		.4byte	.LASF135
 1807 0798 04       		.byte	0x4
 1808 0799 2607     		.2byte	0x726
 1809 079b FD020000 		.4byte	0x2fd
 1810 079f 03       		.byte	0x3
 1811 07a0 23       		.byte	0x23
 1812 07a1 F402     		.uleb128 0x174
 1813 07a3 10       		.uleb128 0x10
 1814 07a4 04070000 		.4byte	.LASF136
 1815 07a8 04       		.byte	0x4
 1816 07a9 2707     		.2byte	0x727
 1817 07ab FD020000 		.4byte	0x2fd
 1818 07af 03       		.byte	0x3
 1819 07b0 23       		.byte	0x23
 1820 07b1 F802     		.uleb128 0x178
 1821 07b3 10       		.uleb128 0x10
 1822 07b4 BA000000 		.4byte	.LASF137
 1823 07b8 04       		.byte	0x4
 1824 07b9 2807     		.2byte	0x728
 1825 07bb FD020000 		.4byte	0x2fd
 1826 07bf 03       		.byte	0x3
 1827 07c0 23       		.byte	0x23
 1828 07c1 FC02     		.uleb128 0x17c
 1829 07c3 10       		.uleb128 0x10
 1830 07c4 D5040000 		.4byte	.LASF138
 1831 07c8 04       		.byte	0x4
 1832 07c9 2907     		.2byte	0x729
 1833 07cb FD020000 		.4byte	0x2fd
 1834 07cf 03       		.byte	0x3
 1835 07d0 23       		.byte	0x23
 1836 07d1 8003     		.uleb128 0x180
 1837 07d3 10       		.uleb128 0x10
 1838 07d4 79070000 		.4byte	.LASF139
 1839 07d8 04       		.byte	0x4
 1840 07d9 2A07     		.2byte	0x72a
 1841 07db FD020000 		.4byte	0x2fd
 1842 07df 03       		.byte	0x3
 1843 07e0 23       		.byte	0x23
 1844 07e1 8403     		.uleb128 0x184
 1845 07e3 10       		.uleb128 0x10
 1846 07e4 E6010000 		.4byte	.LASF140
 1847 07e8 04       		.byte	0x4
 1848 07e9 2B07     		.2byte	0x72b
 1849 07eb FD020000 		.4byte	0x2fd
 1850 07ef 03       		.byte	0x3
 1851 07f0 23       		.byte	0x23
 1852 07f1 8803     		.uleb128 0x188
 1853 07f3 10       		.uleb128 0x10
 1854 07f4 DB020000 		.4byte	.LASF141
 1855 07f8 04       		.byte	0x4
 1856 07f9 2C07     		.2byte	0x72c
ARM GAS  /tmp/cctnQ2aC.s 			page 63


 1857 07fb 02030000 		.4byte	0x302
 1858 07ff 03       		.byte	0x3
 1859 0800 23       		.byte	0x23
 1860 0801 8C03     		.uleb128 0x18c
 1861 0803 00       		.byte	0
 1862 0804 07       		.uleb128 0x7
 1863 0805 17030000 		.4byte	0x317
 1864 0809 07       		.uleb128 0x7
 1865 080a 17030000 		.4byte	0x317
 1866 080e 07       		.uleb128 0x7
 1867 080f 17030000 		.4byte	0x317
 1868 0813 07       		.uleb128 0x7
 1869 0814 17030000 		.4byte	0x317
 1870 0818 07       		.uleb128 0x7
 1871 0819 17030000 		.4byte	0x317
 1872 081d 07       		.uleb128 0x7
 1873 081e 27030000 		.4byte	0x327
 1874 0822 07       		.uleb128 0x7
 1875 0823 27030000 		.4byte	0x327
 1876 0827 07       		.uleb128 0x7
 1877 0828 17030000 		.4byte	0x317
 1878 082c 07       		.uleb128 0x7
 1879 082d 17030000 		.4byte	0x317
 1880 0831 07       		.uleb128 0x7
 1881 0832 17030000 		.4byte	0x317
 1882 0836 07       		.uleb128 0x7
 1883 0837 17030000 		.4byte	0x317
 1884 083b 07       		.uleb128 0x7
 1885 083c 17030000 		.4byte	0x317
 1886 0840 07       		.uleb128 0x7
 1887 0841 37030000 		.4byte	0x337
 1888 0845 07       		.uleb128 0x7
 1889 0846 07030000 		.4byte	0x307
 1890 084a 11       		.uleb128 0x11
 1891 084b 50696F00 		.ascii	"Pio\000"
 1892 084f 04       		.byte	0x4
 1893 0850 2D07     		.2byte	0x72d
 1894 0852 57030000 		.4byte	0x357
 1895 0856 0F       		.uleb128 0xf
 1896 0857 1401     		.2byte	0x114
 1897 0859 04       		.byte	0x4
 1898 085a 450D     		.2byte	0xd45
 1899 085c 670A0000 		.4byte	0xa67
 1900 0860 10       		.uleb128 0x10
 1901 0861 27070000 		.4byte	.LASF142
 1902 0865 04       		.byte	0x4
 1903 0866 460D     		.2byte	0xd46
 1904 0868 FD020000 		.4byte	0x2fd
 1905 086c 02       		.byte	0x2
 1906 086d 23       		.byte	0x23
 1907 086e 00       		.uleb128 0
 1908 086f 10       		.uleb128 0x10
 1909 0870 0D010000 		.4byte	.LASF143
 1910 0874 04       		.byte	0x4
 1911 0875 470D     		.2byte	0xd47
 1912 0877 FD020000 		.4byte	0x2fd
 1913 087b 02       		.byte	0x2
ARM GAS  /tmp/cctnQ2aC.s 			page 64


 1914 087c 23       		.byte	0x23
 1915 087d 04       		.uleb128 0x4
 1916 087e 10       		.uleb128 0x10
 1917 087f C3060000 		.4byte	.LASF144
 1918 0883 04       		.byte	0x4
 1919 0884 480D     		.2byte	0xd48
 1920 0886 02030000 		.4byte	0x302
 1921 088a 02       		.byte	0x2
 1922 088b 23       		.byte	0x23
 1923 088c 08       		.uleb128 0x8
 1924 088d 10       		.uleb128 0x10
 1925 088e 1E010000 		.4byte	.LASF69
 1926 0892 04       		.byte	0x4
 1927 0893 490D     		.2byte	0xd49
 1928 0895 670A0000 		.4byte	0xa67
 1929 0899 02       		.byte	0x2
 1930 089a 23       		.byte	0x23
 1931 089b 0C       		.uleb128 0xc
 1932 089c 10       		.uleb128 0x10
 1933 089d A7010000 		.4byte	.LASF145
 1934 08a1 04       		.byte	0x4
 1935 08a2 4A0D     		.2byte	0xd4a
 1936 08a4 FD020000 		.4byte	0x2fd
 1937 08a8 02       		.byte	0x2
 1938 08a9 23       		.byte	0x23
 1939 08aa 10       		.uleb128 0x10
 1940 08ab 10       		.uleb128 0x10
 1941 08ac 46030000 		.4byte	.LASF146
 1942 08b0 04       		.byte	0x4
 1943 08b1 4B0D     		.2byte	0xd4b
 1944 08b3 FD020000 		.4byte	0x2fd
 1945 08b7 02       		.byte	0x2
 1946 08b8 23       		.byte	0x23
 1947 08b9 14       		.uleb128 0x14
 1948 08ba 10       		.uleb128 0x10
 1949 08bb 46010000 		.4byte	.LASF147
 1950 08bf 04       		.byte	0x4
 1951 08c0 4C0D     		.2byte	0xd4c
 1952 08c2 02030000 		.4byte	0x302
 1953 08c6 02       		.byte	0x2
 1954 08c7 23       		.byte	0x23
 1955 08c8 18       		.uleb128 0x18
 1956 08c9 10       		.uleb128 0x10
 1957 08ca 28010000 		.4byte	.LASF73
 1958 08ce 04       		.byte	0x4
 1959 08cf 4D0D     		.2byte	0xd4d
 1960 08d1 6C0A0000 		.4byte	0xa6c
 1961 08d5 02       		.byte	0x2
 1962 08d6 23       		.byte	0x23
 1963 08d7 1C       		.uleb128 0x1c
 1964 08d8 10       		.uleb128 0x10
 1965 08d9 41000000 		.4byte	.LASF148
 1966 08dd 04       		.byte	0x4
 1967 08de 4E0D     		.2byte	0xd4e
 1968 08e0 FD020000 		.4byte	0x2fd
 1969 08e4 02       		.byte	0x2
 1970 08e5 23       		.byte	0x23
ARM GAS  /tmp/cctnQ2aC.s 			page 65


 1971 08e6 20       		.uleb128 0x20
 1972 08e7 10       		.uleb128 0x10
 1973 08e8 87020000 		.4byte	.LASF149
 1974 08ec 04       		.byte	0x4
 1975 08ed 4F0D     		.2byte	0xd4f
 1976 08ef 02030000 		.4byte	0x302
 1977 08f3 02       		.byte	0x2
 1978 08f4 23       		.byte	0x23
 1979 08f5 24       		.uleb128 0x24
 1980 08f6 10       		.uleb128 0x10
 1981 08f7 4A000000 		.4byte	.LASF150
 1982 08fb 04       		.byte	0x4
 1983 08fc 500D     		.2byte	0xd50
 1984 08fe FD020000 		.4byte	0x2fd
 1985 0902 02       		.byte	0x2
 1986 0903 23       		.byte	0x23
 1987 0904 28       		.uleb128 0x28
 1988 0905 10       		.uleb128 0x10
 1989 0906 5B060000 		.4byte	.LASF151
 1990 090a 04       		.byte	0x4
 1991 090b 510D     		.2byte	0xd51
 1992 090d FD020000 		.4byte	0x2fd
 1993 0911 02       		.byte	0x2
 1994 0912 23       		.byte	0x23
 1995 0913 2C       		.uleb128 0x2c
 1996 0914 10       		.uleb128 0x10
 1997 0915 3D030000 		.4byte	.LASF152
 1998 0919 04       		.byte	0x4
 1999 091a 520D     		.2byte	0xd52
 2000 091c FD020000 		.4byte	0x2fd
 2001 0920 02       		.byte	0x2
 2002 0921 23       		.byte	0x23
 2003 0922 30       		.uleb128 0x30
 2004 0923 10       		.uleb128 0x10
 2005 0924 32010000 		.4byte	.LASF77
 2006 0928 04       		.byte	0x4
 2007 0929 530D     		.2byte	0xd53
 2008 092b 710A0000 		.4byte	0xa71
 2009 092f 02       		.byte	0x2
 2010 0930 23       		.byte	0x23
 2011 0931 34       		.uleb128 0x34
 2012 0932 10       		.uleb128 0x10
 2013 0933 DA030000 		.4byte	.LASF153
 2014 0937 04       		.byte	0x4
 2015 0938 540D     		.2byte	0xd54
 2016 093a FD020000 		.4byte	0x2fd
 2017 093e 02       		.byte	0x2
 2018 093f 23       		.byte	0x23
 2019 0940 38       		.uleb128 0x38
 2020 0941 10       		.uleb128 0x10
 2021 0942 3C010000 		.4byte	.LASF89
 2022 0946 04       		.byte	0x4
 2023 0947 550D     		.2byte	0xd55
 2024 0949 760A0000 		.4byte	0xa76
 2025 094d 02       		.byte	0x2
 2026 094e 23       		.byte	0x23
 2027 094f 3C       		.uleb128 0x3c
ARM GAS  /tmp/cctnQ2aC.s 			page 66


 2028 0950 10       		.uleb128 0x10
 2029 0951 2E020000 		.4byte	.LASF154
 2030 0955 04       		.byte	0x4
 2031 0956 560D     		.2byte	0xd56
 2032 0958 8B0A0000 		.4byte	0xa8b
 2033 095c 02       		.byte	0x2
 2034 095d 23       		.byte	0x23
 2035 095e 40       		.uleb128 0x40
 2036 095f 10       		.uleb128 0x10
 2037 0960 0B030000 		.4byte	.LASF93
 2038 0964 04       		.byte	0x4
 2039 0965 570D     		.2byte	0xd57
 2040 0967 900A0000 		.4byte	0xa90
 2041 096b 02       		.byte	0x2
 2042 096c 23       		.byte	0x23
 2043 096d 4C       		.uleb128 0x4c
 2044 096e 10       		.uleb128 0x10
 2045 096f 0D070000 		.4byte	.LASF155
 2046 0973 04       		.byte	0x4
 2047 0974 580D     		.2byte	0xd58
 2048 0976 FD020000 		.4byte	0x2fd
 2049 097a 02       		.byte	0x2
 2050 097b 23       		.byte	0x23
 2051 097c 60       		.uleb128 0x60
 2052 097d 10       		.uleb128 0x10
 2053 097e D1050000 		.4byte	.LASF156
 2054 0982 04       		.byte	0x4
 2055 0983 590D     		.2byte	0xd59
 2056 0985 FD020000 		.4byte	0x2fd
 2057 0989 02       		.byte	0x2
 2058 098a 23       		.byte	0x23
 2059 098b 64       		.uleb128 0x64
 2060 098c 10       		.uleb128 0x10
 2061 098d 73020000 		.4byte	.LASF157
 2062 0991 04       		.byte	0x4
 2063 0992 5A0D     		.2byte	0xd5a
 2064 0994 02030000 		.4byte	0x302
 2065 0998 02       		.byte	0x2
 2066 0999 23       		.byte	0x23
 2067 099a 68       		.uleb128 0x68
 2068 099b 10       		.uleb128 0x10
 2069 099c 1E000000 		.4byte	.LASF158
 2070 09a0 04       		.byte	0x4
 2071 09a1 5B0D     		.2byte	0xd5b
 2072 09a3 02030000 		.4byte	0x302
 2073 09a7 02       		.byte	0x2
 2074 09a8 23       		.byte	0x23
 2075 09a9 6C       		.uleb128 0x6c
 2076 09aa 10       		.uleb128 0x10
 2077 09ab 53040000 		.4byte	.LASF159
 2078 09af 04       		.byte	0x4
 2079 09b0 5C0D     		.2byte	0xd5c
 2080 09b2 FD020000 		.4byte	0x2fd
 2081 09b6 02       		.byte	0x2
 2082 09b7 23       		.byte	0x23
 2083 09b8 70       		.uleb128 0x70
 2084 09b9 10       		.uleb128 0x10
ARM GAS  /tmp/cctnQ2aC.s 			page 67


 2085 09ba A9070000 		.4byte	.LASF160
 2086 09be 04       		.byte	0x4
 2087 09bf 5D0D     		.2byte	0xd5d
 2088 09c1 FD020000 		.4byte	0x2fd
 2089 09c5 02       		.byte	0x2
 2090 09c6 23       		.byte	0x23
 2091 09c7 74       		.uleb128 0x74
 2092 09c8 10       		.uleb128 0x10
 2093 09c9 D4070000 		.4byte	.LASF161
 2094 09cd 04       		.byte	0x4
 2095 09ce 5E0D     		.2byte	0xd5e
 2096 09d0 FD020000 		.4byte	0x2fd
 2097 09d4 02       		.byte	0x2
 2098 09d5 23       		.byte	0x23
 2099 09d6 78       		.uleb128 0x78
 2100 09d7 10       		.uleb128 0x10
 2101 09d8 50010000 		.4byte	.LASF95
 2102 09dc 04       		.byte	0x4
 2103 09dd 5F0D     		.2byte	0xd5f
 2104 09df A50A0000 		.4byte	0xaa5
 2105 09e3 02       		.byte	0x2
 2106 09e4 23       		.byte	0x23
 2107 09e5 7C       		.uleb128 0x7c
 2108 09e6 10       		.uleb128 0x10
 2109 09e7 9E010000 		.4byte	.LASF162
 2110 09eb 04       		.byte	0x4
 2111 09ec 600D     		.2byte	0xd60
 2112 09ee FD020000 		.4byte	0x2fd
 2113 09f2 03       		.byte	0x3
 2114 09f3 23       		.byte	0x23
 2115 09f4 E401     		.uleb128 0xe4
 2116 09f6 10       		.uleb128 0x10
 2117 09f7 2D080000 		.4byte	.LASF163
 2118 09fb 04       		.byte	0x4
 2119 09fc 610D     		.2byte	0xd61
 2120 09fe 02030000 		.4byte	0x302
 2121 0a02 03       		.byte	0x3
 2122 0a03 23       		.byte	0x23
 2123 0a04 E801     		.uleb128 0xe8
 2124 0a06 10       		.uleb128 0x10
 2125 0a07 5A010000 		.4byte	.LASF103
 2126 0a0b 04       		.byte	0x4
 2127 0a0c 620D     		.2byte	0xd62
 2128 0a0e AA0A0000 		.4byte	0xaaa
 2129 0a12 03       		.byte	0x3
 2130 0a13 23       		.byte	0x23
 2131 0a14 EC01     		.uleb128 0xec
 2132 0a16 10       		.uleb128 0x10
 2133 0a17 B1010000 		.4byte	.LASF164
 2134 0a1b 04       		.byte	0x4
 2135 0a1c 630D     		.2byte	0xd63
 2136 0a1e FD020000 		.4byte	0x2fd
 2137 0a22 03       		.byte	0x3
 2138 0a23 23       		.byte	0x23
 2139 0a24 8002     		.uleb128 0x100
 2140 0a26 10       		.uleb128 0x10
 2141 0a27 6A000000 		.4byte	.LASF165
ARM GAS  /tmp/cctnQ2aC.s 			page 68


 2142 0a2b 04       		.byte	0x4
 2143 0a2c 640D     		.2byte	0xd64
 2144 0a2e FD020000 		.4byte	0x2fd
 2145 0a32 03       		.byte	0x3
 2146 0a33 23       		.byte	0x23
 2147 0a34 8402     		.uleb128 0x104
 2148 0a36 10       		.uleb128 0x10
 2149 0a37 BF050000 		.4byte	.LASF166
 2150 0a3b 04       		.byte	0x4
 2151 0a3c 650D     		.2byte	0xd65
 2152 0a3e 02030000 		.4byte	0x302
 2153 0a42 03       		.byte	0x3
 2154 0a43 23       		.byte	0x23
 2155 0a44 8802     		.uleb128 0x108
 2156 0a46 10       		.uleb128 0x10
 2157 0a47 64010000 		.4byte	.LASF107
 2158 0a4b 04       		.byte	0x4
 2159 0a4c 660D     		.2byte	0xd66
 2160 0a4e AF0A0000 		.4byte	0xaaf
 2161 0a52 03       		.byte	0x3
 2162 0a53 23       		.byte	0x23
 2163 0a54 8C02     		.uleb128 0x10c
 2164 0a56 10       		.uleb128 0x10
 2165 0a57 7E030000 		.4byte	.LASF167
 2166 0a5b 04       		.byte	0x4
 2167 0a5c 670D     		.2byte	0xd67
 2168 0a5e FD020000 		.4byte	0x2fd
 2169 0a62 03       		.byte	0x3
 2170 0a63 23       		.byte	0x23
 2171 0a64 9002     		.uleb128 0x110
 2172 0a66 00       		.byte	0
 2173 0a67 07       		.uleb128 0x7
 2174 0a68 17030000 		.4byte	0x317
 2175 0a6c 07       		.uleb128 0x7
 2176 0a6d 17030000 		.4byte	0x317
 2177 0a71 07       		.uleb128 0x7
 2178 0a72 17030000 		.4byte	0x317
 2179 0a76 07       		.uleb128 0x7
 2180 0a77 17030000 		.4byte	0x317
 2181 0a7b 04       		.uleb128 0x4
 2182 0a7c 68000000 		.4byte	0x68
 2183 0a80 8B0A0000 		.4byte	0xa8b
 2184 0a84 05       		.uleb128 0x5
 2185 0a85 4C000000 		.4byte	0x4c
 2186 0a89 02       		.byte	0x2
 2187 0a8a 00       		.byte	0
 2188 0a8b 07       		.uleb128 0x7
 2189 0a8c 7B0A0000 		.4byte	0xa7b
 2190 0a90 07       		.uleb128 0x7
 2191 0a91 37030000 		.4byte	0x337
 2192 0a95 04       		.uleb128 0x4
 2193 0a96 68000000 		.4byte	0x68
 2194 0a9a A50A0000 		.4byte	0xaa5
 2195 0a9e 05       		.uleb128 0x5
 2196 0a9f 4C000000 		.4byte	0x4c
 2197 0aa3 19       		.byte	0x19
 2198 0aa4 00       		.byte	0
ARM GAS  /tmp/cctnQ2aC.s 			page 69


 2199 0aa5 07       		.uleb128 0x7
 2200 0aa6 950A0000 		.4byte	0xa95
 2201 0aaa 07       		.uleb128 0x7
 2202 0aab 37030000 		.4byte	0x337
 2203 0aaf 07       		.uleb128 0x7
 2204 0ab0 17030000 		.4byte	0x317
 2205 0ab4 11       		.uleb128 0x11
 2206 0ab5 506D6300 		.ascii	"Pmc\000"
 2207 0ab9 04       		.byte	0x4
 2208 0aba 680D     		.2byte	0xd68
 2209 0abc 56080000 		.4byte	0x856
 2210 0ac0 12       		.uleb128 0x12
 2211 0ac1 40       		.byte	0x40
 2212 0ac2 04       		.byte	0x4
 2213 0ac3 4B15     		.2byte	0x154b
 2214 0ac5 8D0B0000 		.4byte	0xb8d
 2215 0ac9 10       		.uleb128 0x10
 2216 0aca D9050000 		.4byte	.LASF168
 2217 0ace 04       		.byte	0x4
 2218 0acf 4C15     		.2byte	0x154c
 2219 0ad1 FD020000 		.4byte	0x2fd
 2220 0ad5 02       		.byte	0x2
 2221 0ad6 23       		.byte	0x23
 2222 0ad7 00       		.uleb128 0
 2223 0ad8 10       		.uleb128 0x10
 2224 0ad9 5E000000 		.4byte	.LASF169
 2225 0add 04       		.byte	0x4
 2226 0ade 4D15     		.2byte	0x154d
 2227 0ae0 FD020000 		.4byte	0x2fd
 2228 0ae4 02       		.byte	0x2
 2229 0ae5 23       		.byte	0x23
 2230 0ae6 04       		.uleb128 0x4
 2231 0ae7 10       		.uleb128 0x10
 2232 0ae8 16000000 		.4byte	.LASF170
 2233 0aec 04       		.byte	0x4
 2234 0aed 4E15     		.2byte	0x154e
 2235 0aef FD020000 		.4byte	0x2fd
 2236 0af3 02       		.byte	0x2
 2237 0af4 23       		.byte	0x23
 2238 0af5 08       		.uleb128 0x8
 2239 0af6 10       		.uleb128 0x10
 2240 0af7 1E010000 		.4byte	.LASF69
 2241 0afb 04       		.byte	0x4
 2242 0afc 4F15     		.2byte	0x154f
 2243 0afe 8D0B0000 		.4byte	0xb8d
 2244 0b02 02       		.byte	0x2
 2245 0b03 23       		.byte	0x23
 2246 0b04 0C       		.uleb128 0xc
 2247 0b05 10       		.uleb128 0x10
 2248 0b06 8F050000 		.4byte	.LASF171
 2249 0b0a 04       		.byte	0x4
 2250 0b0b 5015     		.2byte	0x1550
 2251 0b0d FD020000 		.4byte	0x2fd
 2252 0b11 02       		.byte	0x2
 2253 0b12 23       		.byte	0x23
 2254 0b13 10       		.uleb128 0x10
 2255 0b14 10       		.uleb128 0x10
ARM GAS  /tmp/cctnQ2aC.s 			page 70


 2256 0b15 DE040000 		.4byte	.LASF172
 2257 0b19 04       		.byte	0x4
 2258 0b1a 5115     		.2byte	0x1551
 2259 0b1c FD020000 		.4byte	0x2fd
 2260 0b20 02       		.byte	0x2
 2261 0b21 23       		.byte	0x23
 2262 0b22 14       		.uleb128 0x14
 2263 0b23 10       		.uleb128 0x10
 2264 0b24 E4040000 		.4byte	.LASF173
 2265 0b28 04       		.byte	0x4
 2266 0b29 5215     		.2byte	0x1552
 2267 0b2b FD020000 		.4byte	0x2fd
 2268 0b2f 02       		.byte	0x2
 2269 0b30 23       		.byte	0x23
 2270 0b31 18       		.uleb128 0x18
 2271 0b32 10       		.uleb128 0x10
 2272 0b33 65040000 		.4byte	.LASF174
 2273 0b37 04       		.byte	0x4
 2274 0b38 5315     		.2byte	0x1553
 2275 0b3a FD020000 		.4byte	0x2fd
 2276 0b3e 02       		.byte	0x2
 2277 0b3f 23       		.byte	0x23
 2278 0b40 1C       		.uleb128 0x1c
 2279 0b41 10       		.uleb128 0x10
 2280 0b42 A4060000 		.4byte	.LASF175
 2281 0b46 04       		.byte	0x4
 2282 0b47 5415     		.2byte	0x1554
 2283 0b49 FD020000 		.4byte	0x2fd
 2284 0b4d 02       		.byte	0x2
 2285 0b4e 23       		.byte	0x23
 2286 0b4f 20       		.uleb128 0x20
 2287 0b50 10       		.uleb128 0x10
 2288 0b51 59070000 		.4byte	.LASF176
 2289 0b55 04       		.byte	0x4
 2290 0b56 5515     		.2byte	0x1555
 2291 0b58 FD020000 		.4byte	0x2fd
 2292 0b5c 02       		.byte	0x2
 2293 0b5d 23       		.byte	0x23
 2294 0b5e 24       		.uleb128 0x24
 2295 0b5f 10       		.uleb128 0x10
 2296 0b60 72060000 		.4byte	.LASF177
 2297 0b64 04       		.byte	0x4
 2298 0b65 5615     		.2byte	0x1556
 2299 0b67 FD020000 		.4byte	0x2fd
 2300 0b6b 02       		.byte	0x2
 2301 0b6c 23       		.byte	0x23
 2302 0b6d 28       		.uleb128 0x28
 2303 0b6e 10       		.uleb128 0x10
 2304 0b6f A9000000 		.4byte	.LASF178
 2305 0b73 04       		.byte	0x4
 2306 0b74 5715     		.2byte	0x1557
 2307 0b76 FD020000 		.4byte	0x2fd
 2308 0b7a 02       		.byte	0x2
 2309 0b7b 23       		.byte	0x23
 2310 0b7c 2C       		.uleb128 0x2c
 2311 0b7d 10       		.uleb128 0x10
 2312 0b7e 28010000 		.4byte	.LASF73
ARM GAS  /tmp/cctnQ2aC.s 			page 71


 2313 0b82 04       		.byte	0x4
 2314 0b83 5815     		.2byte	0x1558
 2315 0b85 920B0000 		.4byte	0xb92
 2316 0b89 02       		.byte	0x2
 2317 0b8a 23       		.byte	0x23
 2318 0b8b 30       		.uleb128 0x30
 2319 0b8c 00       		.byte	0
 2320 0b8d 07       		.uleb128 0x7
 2321 0b8e 17030000 		.4byte	0x317
 2322 0b92 07       		.uleb128 0x7
 2323 0b93 47030000 		.4byte	0x347
 2324 0b97 13       		.uleb128 0x13
 2325 0b98 C1070000 		.4byte	.LASF179
 2326 0b9c 04       		.byte	0x4
 2327 0b9d 5915     		.2byte	0x1559
 2328 0b9f C00A0000 		.4byte	0xac0
 2329 0ba3 12       		.uleb128 0x12
 2330 0ba4 E8       		.byte	0xe8
 2331 0ba5 04       		.byte	0x4
 2332 0ba6 5B15     		.2byte	0x155b
 2333 0ba8 4C0C0000 		.4byte	0xc4c
 2334 0bac 10       		.uleb128 0x10
 2335 0bad 87000000 		.4byte	.LASF180
 2336 0bb1 04       		.byte	0x4
 2337 0bb2 5C15     		.2byte	0x155c
 2338 0bb4 4C0C0000 		.4byte	0xc4c
 2339 0bb8 02       		.byte	0x2
 2340 0bb9 23       		.byte	0x23
 2341 0bba 00       		.uleb128 0
 2342 0bbb 10       		.uleb128 0x10
 2343 0bbc 60070000 		.4byte	.LASF181
 2344 0bc0 04       		.byte	0x4
 2345 0bc1 5D15     		.2byte	0x155d
 2346 0bc3 FD020000 		.4byte	0x2fd
 2347 0bc7 03       		.byte	0x3
 2348 0bc8 23       		.byte	0x23
 2349 0bc9 C001     		.uleb128 0xc0
 2350 0bcb 10       		.uleb128 0x10
 2351 0bcc 18080000 		.4byte	.LASF182
 2352 0bd0 04       		.byte	0x4
 2353 0bd1 5E15     		.2byte	0x155e
 2354 0bd3 FD020000 		.4byte	0x2fd
 2355 0bd7 03       		.byte	0x3
 2356 0bd8 23       		.byte	0x23
 2357 0bd9 C401     		.uleb128 0xc4
 2358 0bdb 10       		.uleb128 0x10
 2359 0bdc 8A070000 		.4byte	.LASF183
 2360 0be0 04       		.byte	0x4
 2361 0be1 5F15     		.2byte	0x155f
 2362 0be3 FD020000 		.4byte	0x2fd
 2363 0be7 03       		.byte	0x3
 2364 0be8 23       		.byte	0x23
 2365 0be9 C801     		.uleb128 0xc8
 2366 0beb 10       		.uleb128 0x10
 2367 0bec 98030000 		.4byte	.LASF184
 2368 0bf0 04       		.byte	0x4
 2369 0bf1 6015     		.2byte	0x1560
ARM GAS  /tmp/cctnQ2aC.s 			page 72


 2370 0bf3 FD020000 		.4byte	0x2fd
 2371 0bf7 03       		.byte	0x3
 2372 0bf8 23       		.byte	0x23
 2373 0bf9 CC01     		.uleb128 0xcc
 2374 0bfb 10       		.uleb128 0x10
 2375 0bfc FE070000 		.4byte	.LASF185
 2376 0c00 04       		.byte	0x4
 2377 0c01 6115     		.2byte	0x1561
 2378 0c03 02030000 		.4byte	0x302
 2379 0c07 03       		.byte	0x3
 2380 0c08 23       		.byte	0x23
 2381 0c09 D001     		.uleb128 0xd0
 2382 0c0b 10       		.uleb128 0x10
 2383 0c0c 79060000 		.4byte	.LASF186
 2384 0c10 04       		.byte	0x4
 2385 0c11 6215     		.2byte	0x1562
 2386 0c13 02030000 		.4byte	0x302
 2387 0c17 03       		.byte	0x3
 2388 0c18 23       		.byte	0x23
 2389 0c19 D401     		.uleb128 0xd4
 2390 0c1b 10       		.uleb128 0x10
 2391 0c1c E2030000 		.4byte	.LASF187
 2392 0c20 04       		.byte	0x4
 2393 0c21 6315     		.2byte	0x1563
 2394 0c23 FD020000 		.4byte	0x2fd
 2395 0c27 03       		.byte	0x3
 2396 0c28 23       		.byte	0x23
 2397 0c29 D801     		.uleb128 0xd8
 2398 0c2b 10       		.uleb128 0x10
 2399 0c2c 1E010000 		.4byte	.LASF69
 2400 0c30 04       		.byte	0x4
 2401 0c31 6415     		.2byte	0x1564
 2402 0c33 5C0C0000 		.4byte	0xc5c
 2403 0c37 03       		.byte	0x3
 2404 0c38 23       		.byte	0x23
 2405 0c39 DC01     		.uleb128 0xdc
 2406 0c3b 10       		.uleb128 0x10
 2407 0c3c 31000000 		.4byte	.LASF188
 2408 0c40 04       		.byte	0x4
 2409 0c41 6515     		.2byte	0x1565
 2410 0c43 FD020000 		.4byte	0x2fd
 2411 0c47 03       		.byte	0x3
 2412 0c48 23       		.byte	0x23
 2413 0c49 E401     		.uleb128 0xe4
 2414 0c4b 00       		.byte	0
 2415 0c4c 04       		.uleb128 0x4
 2416 0c4d 970B0000 		.4byte	0xb97
 2417 0c51 5C0C0000 		.4byte	0xc5c
 2418 0c55 05       		.uleb128 0x5
 2419 0c56 4C000000 		.4byte	0x4c
 2420 0c5a 02       		.byte	0x2
 2421 0c5b 00       		.byte	0
 2422 0c5c 07       		.uleb128 0x7
 2423 0c5d 27030000 		.4byte	0x327
 2424 0c61 11       		.uleb128 0x11
 2425 0c62 546300   		.ascii	"Tc\000"
 2426 0c65 04       		.byte	0x4
ARM GAS  /tmp/cctnQ2aC.s 			page 73


 2427 0c66 6615     		.2byte	0x1566
 2428 0c68 A30B0000 		.4byte	0xba3
 2429 0c6c 14       		.uleb128 0x14
 2430 0c6d EF010000 		.4byte	.LASF211
 2431 0c71 0C       		.byte	0xc
 2432 0c72 05       		.byte	0x5
 2433 0c73 A7       		.byte	0xa7
 2434 0c74 BE0C0000 		.4byte	0xcbe
 2435 0c78 0B       		.uleb128 0xb
 2436 0c79 1B020000 		.4byte	.LASF189
 2437 0c7d 05       		.byte	0x5
 2438 0c7e AA       		.byte	0xaa
 2439 0c7f 91000000 		.4byte	0x91
 2440 0c83 02       		.byte	0x2
 2441 0c84 23       		.byte	0x23
 2442 0c85 00       		.uleb128 0
 2443 0c86 0C       		.uleb128 0xc
 2444 0c87 70696F00 		.ascii	"pio\000"
 2445 0c8b 05       		.byte	0x5
 2446 0c8c AC       		.byte	0xac
 2447 0c8d BE0C0000 		.4byte	0xcbe
 2448 0c91 02       		.byte	0x2
 2449 0c92 23       		.byte	0x23
 2450 0c93 04       		.uleb128 0x4
 2451 0c94 0C       		.uleb128 0xc
 2452 0c95 696400   		.ascii	"id\000"
 2453 0c98 05       		.byte	0x5
 2454 0c99 AE       		.byte	0xae
 2455 0c9a 86000000 		.4byte	0x86
 2456 0c9e 02       		.byte	0x2
 2457 0c9f 23       		.byte	0x23
 2458 0ca0 08       		.uleb128 0x8
 2459 0ca1 0B       		.uleb128 0xb
 2460 0ca2 65000000 		.4byte	.LASF190
 2461 0ca6 05       		.byte	0x5
 2462 0ca7 B0       		.byte	0xb0
 2463 0ca8 86000000 		.4byte	0x86
 2464 0cac 02       		.byte	0x2
 2465 0cad 23       		.byte	0x23
 2466 0cae 09       		.uleb128 0x9
 2467 0caf 0B       		.uleb128 0xb
 2468 0cb0 30050000 		.4byte	.LASF191
 2469 0cb4 05       		.byte	0x5
 2470 0cb5 B2       		.byte	0xb2
 2471 0cb6 86000000 		.4byte	0x86
 2472 0cba 02       		.byte	0x2
 2473 0cbb 23       		.byte	0x23
 2474 0cbc 0A       		.uleb128 0xa
 2475 0cbd 00       		.byte	0
 2476 0cbe 15       		.uleb128 0x15
 2477 0cbf 04       		.byte	0x4
 2478 0cc0 4A080000 		.4byte	0x84a
 2479 0cc4 16       		.uleb128 0x16
 2480 0cc5 50696E00 		.ascii	"Pin\000"
 2481 0cc9 05       		.byte	0x5
 2482 0cca B3       		.byte	0xb3
 2483 0ccb 6C0C0000 		.4byte	0xc6c
ARM GAS  /tmp/cctnQ2aC.s 			page 74


 2484 0ccf 17       		.uleb128 0x17
 2485 0cd0 B0050000 		.4byte	.LASF212
 2486 0cd4 01       		.byte	0x1
 2487 0cd5 DE05     		.2byte	0x5de
 2488 0cd7 01       		.byte	0x1
 2489 0cd8 00000000 		.4byte	.LFB14
 2490 0cdc 36000000 		.4byte	.LFE14
 2491 0ce0 00000000 		.4byte	.LLST0
 2492 0ce4 F80C0000 		.4byte	0xcf8
 2493 0ce8 18       		.uleb128 0x18
 2494 0ce9 F3030000 		.4byte	.LASF195
 2495 0ced 01       		.byte	0x1
 2496 0cee DE05     		.2byte	0x5de
 2497 0cf0 9E010000 		.4byte	0x19e
 2498 0cf4 02       		.byte	0x2
 2499 0cf5 91       		.byte	0x91
 2500 0cf6 77       		.sleb128 -9
 2501 0cf7 00       		.byte	0
 2502 0cf8 19       		.uleb128 0x19
 2503 0cf9 01       		.byte	0x1
 2504 0cfa B2070000 		.4byte	.LASF193
 2505 0cfe 02       		.byte	0x2
 2506 0cff 11       		.byte	0x11
 2507 0d00 01       		.byte	0x1
 2508 0d01 00000000 		.4byte	.LFB35
 2509 0d05 90000000 		.4byte	.LFE35
 2510 0d09 38000000 		.4byte	.LLST1
 2511 0d0d 2A0D0000 		.4byte	0xd2a
 2512 0d11 1A       		.uleb128 0x1a
 2513 0d12 6900     		.ascii	"i\000"
 2514 0d14 02       		.byte	0x2
 2515 0d15 13       		.byte	0x13
 2516 0d16 9C000000 		.4byte	0x9c
 2517 0d1a 02       		.byte	0x2
 2518 0d1b 91       		.byte	0x91
 2519 0d1c 70       		.sleb128 -16
 2520 0d1d 1A       		.uleb128 0x1a
 2521 0d1e 6A00     		.ascii	"j\000"
 2522 0d20 02       		.byte	0x2
 2523 0d21 14       		.byte	0x14
 2524 0d22 86000000 		.4byte	0x86
 2525 0d26 02       		.byte	0x2
 2526 0d27 91       		.byte	0x91
 2527 0d28 77       		.sleb128 -9
 2528 0d29 00       		.byte	0
 2529 0d2a 1B       		.uleb128 0x1b
 2530 0d2b 43070000 		.4byte	.LASF213
 2531 0d2f 02       		.byte	0x2
 2532 0d30 27       		.byte	0x27
 2533 0d31 00000000 		.4byte	.LFB36
 2534 0d35 A0000000 		.4byte	.LFE36
 2535 0d39 70000000 		.4byte	.LLST2
 2536 0d3d 5E0D0000 		.4byte	0xd5e
 2537 0d41 1A       		.uleb128 0x1a
 2538 0d42 64697600 		.ascii	"div\000"
 2539 0d46 02       		.byte	0x2
 2540 0d47 29       		.byte	0x29
ARM GAS  /tmp/cctnQ2aC.s 			page 75


 2541 0d48 91000000 		.4byte	0x91
 2542 0d4c 02       		.byte	0x2
 2543 0d4d 91       		.byte	0x91
 2544 0d4e 6C       		.sleb128 -20
 2545 0d4f 1C       		.uleb128 0x1c
 2546 0d50 FD060000 		.4byte	.LASF192
 2547 0d54 02       		.byte	0x2
 2548 0d55 2A       		.byte	0x2a
 2549 0d56 91000000 		.4byte	0x91
 2550 0d5a 02       		.byte	0x2
 2551 0d5b 91       		.byte	0x91
 2552 0d5c 68       		.sleb128 -24
 2553 0d5d 00       		.byte	0
 2554 0d5e 1D       		.uleb128 0x1d
 2555 0d5f 01       		.byte	0x1
 2556 0d60 DD070000 		.4byte	.LASF214
 2557 0d64 02       		.byte	0x2
 2558 0d65 42       		.byte	0x42
 2559 0d66 00000000 		.4byte	.LFB37
 2560 0d6a 16000000 		.4byte	.LFE37
 2561 0d6e A8000000 		.4byte	.LLST3
 2562 0d72 19       		.uleb128 0x19
 2563 0d73 01       		.byte	0x1
 2564 0d74 13020000 		.4byte	.LASF194
 2565 0d78 02       		.byte	0x2
 2566 0d79 47       		.byte	0x47
 2567 0d7a 01       		.byte	0x1
 2568 0d7b 00000000 		.4byte	.LFB38
 2569 0d7f 8E000000 		.4byte	.LFE38
 2570 0d83 D4000000 		.4byte	.LLST4
 2571 0d87 C60D0000 		.4byte	0xdc6
 2572 0d8b 1E       		.uleb128 0x1e
 2573 0d8c 6C656400 		.ascii	"led\000"
 2574 0d90 02       		.byte	0x2
 2575 0d91 47       		.byte	0x47
 2576 0d92 86000000 		.4byte	0x86
 2577 0d96 02       		.byte	0x2
 2578 0d97 91       		.byte	0x91
 2579 0d98 6F       		.sleb128 -17
 2580 0d99 1C       		.uleb128 0x1c
 2581 0d9a 1B020000 		.4byte	.LASF189
 2582 0d9e 02       		.byte	0x2
 2583 0d9f 49       		.byte	0x49
 2584 0da0 91000000 		.4byte	0x91
 2585 0da4 02       		.byte	0x2
 2586 0da5 91       		.byte	0x91
 2587 0da6 70       		.sleb128 -16
 2588 0da7 1A       		.uleb128 0x1a
 2589 0da8 70696F00 		.ascii	"pio\000"
 2590 0dac 02       		.byte	0x2
 2591 0dad 4A       		.byte	0x4a
 2592 0dae BE0C0000 		.4byte	0xcbe
 2593 0db2 02       		.byte	0x2
 2594 0db3 91       		.byte	0x91
 2595 0db4 74       		.sleb128 -12
 2596 0db5 1F       		.uleb128 0x1f
 2597 0db6 EE020000 		.4byte	.LASF197
ARM GAS  /tmp/cctnQ2aC.s 			page 76


 2598 0dba C60D0000 		.4byte	0xdc6
 2599 0dbe 01       		.byte	0x1
 2600 0dbf 05       		.byte	0x5
 2601 0dc0 03       		.byte	0x3
 2602 0dc1 4C000000 		.4byte	__FUNCTION__.7528
 2603 0dc5 00       		.byte	0
 2604 0dc6 0E       		.uleb128 0xe
 2605 0dc7 76000000 		.4byte	0x76
 2606 0dcb 19       		.uleb128 0x19
 2607 0dcc 01       		.byte	0x1
 2608 0dcd BA030000 		.4byte	.LASF196
 2609 0dd1 02       		.byte	0x2
 2610 0dd2 57       		.byte	0x57
 2611 0dd3 01       		.byte	0x1
 2612 0dd4 00000000 		.4byte	.LFB39
 2613 0dd8 7A000000 		.4byte	.LFE39
 2614 0ddc 0C010000 		.4byte	.LLST5
 2615 0de0 1F0E0000 		.4byte	0xe1f
 2616 0de4 1E       		.uleb128 0x1e
 2617 0de5 6C656400 		.ascii	"led\000"
 2618 0de9 02       		.byte	0x2
 2619 0dea 57       		.byte	0x57
 2620 0deb 86000000 		.4byte	0x86
 2621 0def 02       		.byte	0x2
 2622 0df0 91       		.byte	0x91
 2623 0df1 6F       		.sleb128 -17
 2624 0df2 1A       		.uleb128 0x1a
 2625 0df3 70696F00 		.ascii	"pio\000"
 2626 0df7 02       		.byte	0x2
 2627 0df8 59       		.byte	0x59
 2628 0df9 BE0C0000 		.4byte	0xcbe
 2629 0dfd 02       		.byte	0x2
 2630 0dfe 91       		.byte	0x91
 2631 0dff 74       		.sleb128 -12
 2632 0e00 1C       		.uleb128 0x1c
 2633 0e01 1B020000 		.4byte	.LASF189
 2634 0e05 02       		.byte	0x2
 2635 0e06 5A       		.byte	0x5a
 2636 0e07 91000000 		.4byte	0x91
 2637 0e0b 02       		.byte	0x2
 2638 0e0c 91       		.byte	0x91
 2639 0e0d 70       		.sleb128 -16
 2640 0e0e 1F       		.uleb128 0x1f
 2641 0e0f EE020000 		.4byte	.LASF197
 2642 0e13 1F0E0000 		.4byte	0xe1f
 2643 0e17 01       		.byte	0x1
 2644 0e18 05       		.byte	0x5
 2645 0e19 03       		.byte	0x3
 2646 0e1a 44000000 		.4byte	__FUNCTION__.7534
 2647 0e1e 00       		.byte	0
 2648 0e1f 0E       		.uleb128 0xe
 2649 0e20 76000000 		.4byte	0x76
 2650 0e24 19       		.uleb128 0x19
 2651 0e25 01       		.byte	0x1
 2652 0e26 0E000000 		.4byte	.LASF198
 2653 0e2a 02       		.byte	0x2
 2654 0e2b 63       		.byte	0x63
ARM GAS  /tmp/cctnQ2aC.s 			page 77


 2655 0e2c 01       		.byte	0x1
 2656 0e2d 00000000 		.4byte	.LFB40
 2657 0e31 7A000000 		.4byte	.LFE40
 2658 0e35 44010000 		.4byte	.LLST6
 2659 0e39 780E0000 		.4byte	0xe78
 2660 0e3d 1E       		.uleb128 0x1e
 2661 0e3e 6C656400 		.ascii	"led\000"
 2662 0e42 02       		.byte	0x2
 2663 0e43 63       		.byte	0x63
 2664 0e44 86000000 		.4byte	0x86
 2665 0e48 02       		.byte	0x2
 2666 0e49 91       		.byte	0x91
 2667 0e4a 6F       		.sleb128 -17
 2668 0e4b 1A       		.uleb128 0x1a
 2669 0e4c 70696F00 		.ascii	"pio\000"
 2670 0e50 02       		.byte	0x2
 2671 0e51 65       		.byte	0x65
 2672 0e52 BE0C0000 		.4byte	0xcbe
 2673 0e56 02       		.byte	0x2
 2674 0e57 91       		.byte	0x91
 2675 0e58 74       		.sleb128 -12
 2676 0e59 1C       		.uleb128 0x1c
 2677 0e5a 1B020000 		.4byte	.LASF189
 2678 0e5e 02       		.byte	0x2
 2679 0e5f 66       		.byte	0x66
 2680 0e60 91000000 		.4byte	0x91
 2681 0e64 02       		.byte	0x2
 2682 0e65 91       		.byte	0x91
 2683 0e66 70       		.sleb128 -16
 2684 0e67 1F       		.uleb128 0x1f
 2685 0e68 EE020000 		.4byte	.LASF197
 2686 0e6c 780E0000 		.4byte	0xe78
 2687 0e70 01       		.byte	0x1
 2688 0e71 05       		.byte	0x5
 2689 0e72 03       		.byte	0x3
 2690 0e73 3C000000 		.4byte	__FUNCTION__.7540
 2691 0e77 00       		.byte	0
 2692 0e78 0E       		.uleb128 0xe
 2693 0e79 76000000 		.4byte	0x76
 2694 0e7d 20       		.uleb128 0x20
 2695 0e7e 01       		.byte	0x1
 2696 0e7f 03030000 		.4byte	.LASF202
 2697 0e83 02       		.byte	0x2
 2698 0e84 6F       		.byte	0x6f
 2699 0e85 01       		.byte	0x1
 2700 0e86 86000000 		.4byte	0x86
 2701 0e8a 00000000 		.4byte	.LFB41
 2702 0e8e 84000000 		.4byte	.LFE41
 2703 0e92 7C010000 		.4byte	.LLST7
 2704 0e96 D50E0000 		.4byte	0xed5
 2705 0e9a 1E       		.uleb128 0x1e
 2706 0e9b 6C656400 		.ascii	"led\000"
 2707 0e9f 02       		.byte	0x2
 2708 0ea0 6F       		.byte	0x6f
 2709 0ea1 86000000 		.4byte	0x86
 2710 0ea5 02       		.byte	0x2
 2711 0ea6 91       		.byte	0x91
ARM GAS  /tmp/cctnQ2aC.s 			page 78


 2712 0ea7 6F       		.sleb128 -17
 2713 0ea8 1A       		.uleb128 0x1a
 2714 0ea9 70696F00 		.ascii	"pio\000"
 2715 0ead 02       		.byte	0x2
 2716 0eae 71       		.byte	0x71
 2717 0eaf BE0C0000 		.4byte	0xcbe
 2718 0eb3 02       		.byte	0x2
 2719 0eb4 91       		.byte	0x91
 2720 0eb5 74       		.sleb128 -12
 2721 0eb6 1C       		.uleb128 0x1c
 2722 0eb7 1B020000 		.4byte	.LASF189
 2723 0ebb 02       		.byte	0x2
 2724 0ebc 72       		.byte	0x72
 2725 0ebd 91000000 		.4byte	0x91
 2726 0ec1 02       		.byte	0x2
 2727 0ec2 91       		.byte	0x91
 2728 0ec3 70       		.sleb128 -16
 2729 0ec4 1F       		.uleb128 0x1f
 2730 0ec5 EE020000 		.4byte	.LASF197
 2731 0ec9 D50E0000 		.4byte	0xed5
 2732 0ecd 01       		.byte	0x1
 2733 0ece 05       		.byte	0x5
 2734 0ecf 03       		.byte	0x3
 2735 0ed0 34000000 		.4byte	__FUNCTION__.7546
 2736 0ed4 00       		.byte	0
 2737 0ed5 0E       		.uleb128 0xe
 2738 0ed6 76000000 		.4byte	0x76
 2739 0eda 19       		.uleb128 0x19
 2740 0edb 01       		.byte	0x1
 2741 0edc E4020000 		.4byte	.LASF199
 2742 0ee0 02       		.byte	0x2
 2743 0ee1 7E       		.byte	0x7e
 2744 0ee2 01       		.byte	0x1
 2745 0ee3 00000000 		.4byte	.LFB42
 2746 0ee7 6A000000 		.4byte	.LFE42
 2747 0eeb B4010000 		.4byte	.LLST8
 2748 0eef 100F0000 		.4byte	0xf10
 2749 0ef3 1E       		.uleb128 0x1e
 2750 0ef4 6C656400 		.ascii	"led\000"
 2751 0ef8 02       		.byte	0x2
 2752 0ef9 7E       		.byte	0x7e
 2753 0efa 86000000 		.4byte	0x86
 2754 0efe 02       		.byte	0x2
 2755 0eff 91       		.byte	0x91
 2756 0f00 77       		.sleb128 -9
 2757 0f01 1E       		.uleb128 0x1e
 2758 0f02 6E756D00 		.ascii	"num\000"
 2759 0f06 02       		.byte	0x2
 2760 0f07 7E       		.byte	0x7e
 2761 0f08 91000000 		.4byte	0x91
 2762 0f0c 02       		.byte	0x2
 2763 0f0d 91       		.byte	0x91
 2764 0f0e 70       		.sleb128 -16
 2765 0f0f 00       		.byte	0
 2766 0f10 19       		.uleb128 0x19
 2767 0f11 01       		.byte	0x1
 2768 0f12 1F080000 		.4byte	.LASF200
ARM GAS  /tmp/cctnQ2aC.s 			page 79


 2769 0f16 02       		.byte	0x2
 2770 0f17 8B       		.byte	0x8b
 2771 0f18 01       		.byte	0x1
 2772 0f19 00000000 		.4byte	.LFB43
 2773 0f1d 2E000000 		.4byte	.LFE43
 2774 0f21 EC010000 		.4byte	.LLST9
 2775 0f25 460F0000 		.4byte	0xf46
 2776 0f29 1E       		.uleb128 0x1e
 2777 0f2a 6C656400 		.ascii	"led\000"
 2778 0f2e 02       		.byte	0x2
 2779 0f2f 8B       		.byte	0x8b
 2780 0f30 86000000 		.4byte	0x86
 2781 0f34 02       		.byte	0x2
 2782 0f35 91       		.byte	0x91
 2783 0f36 77       		.sleb128 -9
 2784 0f37 1E       		.uleb128 0x1e
 2785 0f38 6E756D00 		.ascii	"num\000"
 2786 0f3c 02       		.byte	0x2
 2787 0f3d 8B       		.byte	0x8b
 2788 0f3e 91000000 		.4byte	0x91
 2789 0f42 02       		.byte	0x2
 2790 0f43 91       		.byte	0x91
 2791 0f44 70       		.sleb128 -16
 2792 0f45 00       		.byte	0
 2793 0f46 19       		.uleb128 0x19
 2794 0f47 01       		.byte	0x1
 2795 0f48 AA060000 		.4byte	.LASF201
 2796 0f4c 02       		.byte	0x2
 2797 0f4d 94       		.byte	0x94
 2798 0f4e 01       		.byte	0x1
 2799 0f4f 00000000 		.4byte	.LFB44
 2800 0f53 44000000 		.4byte	.LFE44
 2801 0f57 24020000 		.4byte	.LLST10
 2802 0f5b 6E0F0000 		.4byte	0xf6e
 2803 0f5f 1E       		.uleb128 0x1e
 2804 0f60 6C656400 		.ascii	"led\000"
 2805 0f64 02       		.byte	0x2
 2806 0f65 94       		.byte	0x94
 2807 0f66 86000000 		.4byte	0x86
 2808 0f6a 02       		.byte	0x2
 2809 0f6b 91       		.byte	0x91
 2810 0f6c 77       		.sleb128 -9
 2811 0f6d 00       		.byte	0
 2812 0f6e 20       		.uleb128 0x20
 2813 0f6f 01       		.byte	0x1
 2814 0f70 96040000 		.4byte	.LASF203
 2815 0f74 02       		.byte	0x2
 2816 0f75 9E       		.byte	0x9e
 2817 0f76 01       		.byte	0x1
 2818 0f77 86000000 		.4byte	0x86
 2819 0f7b 00000000 		.4byte	.LFB45
 2820 0f7f 26000000 		.4byte	.LFE45
 2821 0f83 5C020000 		.4byte	.LLST11
 2822 0f87 9A0F0000 		.4byte	0xf9a
 2823 0f8b 1E       		.uleb128 0x1e
 2824 0f8c 6C656400 		.ascii	"led\000"
 2825 0f90 02       		.byte	0x2
ARM GAS  /tmp/cctnQ2aC.s 			page 80


 2826 0f91 9E       		.byte	0x9e
 2827 0f92 86000000 		.4byte	0x86
 2828 0f96 02       		.byte	0x2
 2829 0f97 91       		.byte	0x91
 2830 0f98 77       		.sleb128 -9
 2831 0f99 00       		.byte	0
 2832 0f9a 21       		.uleb128 0x21
 2833 0f9b 5B050000 		.4byte	.LASF207
 2834 0f9f 01       		.byte	0x1
 2835 0fa0 CE06     		.2byte	0x6ce
 2836 0fa2 A80F0000 		.4byte	0xfa8
 2837 0fa6 01       		.byte	0x1
 2838 0fa7 01       		.byte	0x1
 2839 0fa8 07       		.uleb128 0x7
 2840 0fa9 45000000 		.4byte	0x45
 2841 0fad 1C       		.uleb128 0x1c
 2842 0fae 27040000 		.4byte	.LASF204
 2843 0fb2 02       		.byte	0x2
 2844 0fb3 0C       		.byte	0xc
 2845 0fb4 86000000 		.4byte	0x86
 2846 0fb8 05       		.byte	0x5
 2847 0fb9 03       		.byte	0x3
 2848 0fba 00000000 		.4byte	configured
 2849 0fbe 04       		.uleb128 0x4
 2850 0fbf C40C0000 		.4byte	0xcc4
 2851 0fc3 CE0F0000 		.4byte	0xfce
 2852 0fc7 05       		.uleb128 0x5
 2853 0fc8 4C000000 		.4byte	0x4c
 2854 0fcc 01       		.byte	0x1
 2855 0fcd 00       		.byte	0
 2856 0fce 1C       		.uleb128 0x1c
 2857 0fcf EA050000 		.4byte	.LASF205
 2858 0fd3 02       		.byte	0x2
 2859 0fd4 0E       		.byte	0xe
 2860 0fd5 DF0F0000 		.4byte	0xfdf
 2861 0fd9 05       		.byte	0x5
 2862 0fda 03       		.byte	0x3
 2863 0fdb 00000000 		.4byte	leds
 2864 0fdf 0E       		.uleb128 0xe
 2865 0fe0 BE0F0000 		.4byte	0xfbe
 2866 0fe4 1C       		.uleb128 0x1c
 2867 0fe5 06010000 		.4byte	.LASF206
 2868 0fe9 02       		.byte	0x2
 2869 0fea 0F       		.byte	0xf
 2870 0feb F50F0000 		.4byte	0xff5
 2871 0fef 05       		.byte	0x5
 2872 0ff0 03       		.byte	0x3
 2873 0ff1 04000000 		.4byte	blinks
 2874 0ff5 07       		.uleb128 0x7
 2875 0ff6 ED020000 		.4byte	0x2ed
 2876 0ffa 21       		.uleb128 0x21
 2877 0ffb 5B050000 		.4byte	.LASF207
 2878 0fff 01       		.byte	0x1
 2879 1000 CE06     		.2byte	0x6ce
 2880 1002 A80F0000 		.4byte	0xfa8
 2881 1006 01       		.byte	0x1
 2882 1007 01       		.byte	0x1
ARM GAS  /tmp/cctnQ2aC.s 			page 81


 2883 1008 00       		.byte	0
 2884              		.section	.debug_abbrev,"",%progbits
 2885              	.Ldebug_abbrev0:
 2886 0000 01       		.uleb128 0x1
 2887 0001 11       		.uleb128 0x11
 2888 0002 01       		.byte	0x1
 2889 0003 25       		.uleb128 0x25
 2890 0004 0E       		.uleb128 0xe
 2891 0005 13       		.uleb128 0x13
 2892 0006 0B       		.uleb128 0xb
 2893 0007 03       		.uleb128 0x3
 2894 0008 0E       		.uleb128 0xe
 2895 0009 1B       		.uleb128 0x1b
 2896 000a 0E       		.uleb128 0xe
 2897 000b 11       		.uleb128 0x11
 2898 000c 01       		.uleb128 0x1
 2899 000d 52       		.uleb128 0x52
 2900 000e 01       		.uleb128 0x1
 2901 000f 55       		.uleb128 0x55
 2902 0010 06       		.uleb128 0x6
 2903 0011 10       		.uleb128 0x10
 2904 0012 06       		.uleb128 0x6
 2905 0013 00       		.byte	0
 2906 0014 00       		.byte	0
 2907 0015 02       		.uleb128 0x2
 2908 0016 24       		.uleb128 0x24
 2909 0017 00       		.byte	0
 2910 0018 0B       		.uleb128 0xb
 2911 0019 0B       		.uleb128 0xb
 2912 001a 3E       		.uleb128 0x3e
 2913 001b 0B       		.uleb128 0xb
 2914 001c 03       		.uleb128 0x3
 2915 001d 0E       		.uleb128 0xe
 2916 001e 00       		.byte	0
 2917 001f 00       		.byte	0
 2918 0020 03       		.uleb128 0x3
 2919 0021 24       		.uleb128 0x24
 2920 0022 00       		.byte	0
 2921 0023 0B       		.uleb128 0xb
 2922 0024 0B       		.uleb128 0xb
 2923 0025 3E       		.uleb128 0x3e
 2924 0026 0B       		.uleb128 0xb
 2925 0027 03       		.uleb128 0x3
 2926 0028 08       		.uleb128 0x8
 2927 0029 00       		.byte	0
 2928 002a 00       		.byte	0
 2929 002b 04       		.uleb128 0x4
 2930 002c 01       		.uleb128 0x1
 2931 002d 01       		.byte	0x1
 2932 002e 49       		.uleb128 0x49
 2933 002f 13       		.uleb128 0x13
 2934 0030 01       		.uleb128 0x1
 2935 0031 13       		.uleb128 0x13
 2936 0032 00       		.byte	0
 2937 0033 00       		.byte	0
 2938 0034 05       		.uleb128 0x5
 2939 0035 21       		.uleb128 0x21
ARM GAS  /tmp/cctnQ2aC.s 			page 82


 2940 0036 00       		.byte	0
 2941 0037 49       		.uleb128 0x49
 2942 0038 13       		.uleb128 0x13
 2943 0039 2F       		.uleb128 0x2f
 2944 003a 0B       		.uleb128 0xb
 2945 003b 00       		.byte	0
 2946 003c 00       		.byte	0
 2947 003d 06       		.uleb128 0x6
 2948 003e 16       		.uleb128 0x16
 2949 003f 00       		.byte	0
 2950 0040 03       		.uleb128 0x3
 2951 0041 0E       		.uleb128 0xe
 2952 0042 3A       		.uleb128 0x3a
 2953 0043 0B       		.uleb128 0xb
 2954 0044 3B       		.uleb128 0x3b
 2955 0045 0B       		.uleb128 0xb
 2956 0046 49       		.uleb128 0x49
 2957 0047 13       		.uleb128 0x13
 2958 0048 00       		.byte	0
 2959 0049 00       		.byte	0
 2960 004a 07       		.uleb128 0x7
 2961 004b 35       		.uleb128 0x35
 2962 004c 00       		.byte	0
 2963 004d 49       		.uleb128 0x49
 2964 004e 13       		.uleb128 0x13
 2965 004f 00       		.byte	0
 2966 0050 00       		.byte	0
 2967 0051 08       		.uleb128 0x8
 2968 0052 04       		.uleb128 0x4
 2969 0053 01       		.byte	0x1
 2970 0054 03       		.uleb128 0x3
 2971 0055 0E       		.uleb128 0xe
 2972 0056 0B       		.uleb128 0xb
 2973 0057 0B       		.uleb128 0xb
 2974 0058 3A       		.uleb128 0x3a
 2975 0059 0B       		.uleb128 0xb
 2976 005a 3B       		.uleb128 0x3b
 2977 005b 0B       		.uleb128 0xb
 2978 005c 01       		.uleb128 0x1
 2979 005d 13       		.uleb128 0x13
 2980 005e 00       		.byte	0
 2981 005f 00       		.byte	0
 2982 0060 09       		.uleb128 0x9
 2983 0061 28       		.uleb128 0x28
 2984 0062 00       		.byte	0
 2985 0063 03       		.uleb128 0x3
 2986 0064 0E       		.uleb128 0xe
 2987 0065 1C       		.uleb128 0x1c
 2988 0066 0D       		.uleb128 0xd
 2989 0067 00       		.byte	0
 2990 0068 00       		.byte	0
 2991 0069 0A       		.uleb128 0xa
 2992 006a 13       		.uleb128 0x13
 2993 006b 01       		.byte	0x1
 2994 006c 0B       		.uleb128 0xb
 2995 006d 05       		.uleb128 0x5
 2996 006e 3A       		.uleb128 0x3a
ARM GAS  /tmp/cctnQ2aC.s 			page 83


 2997 006f 0B       		.uleb128 0xb
 2998 0070 3B       		.uleb128 0x3b
 2999 0071 0B       		.uleb128 0xb
 3000 0072 01       		.uleb128 0x1
 3001 0073 13       		.uleb128 0x13
 3002 0074 00       		.byte	0
 3003 0075 00       		.byte	0
 3004 0076 0B       		.uleb128 0xb
 3005 0077 0D       		.uleb128 0xd
 3006 0078 00       		.byte	0
 3007 0079 03       		.uleb128 0x3
 3008 007a 0E       		.uleb128 0xe
 3009 007b 3A       		.uleb128 0x3a
 3010 007c 0B       		.uleb128 0xb
 3011 007d 3B       		.uleb128 0x3b
 3012 007e 0B       		.uleb128 0xb
 3013 007f 49       		.uleb128 0x49
 3014 0080 13       		.uleb128 0x13
 3015 0081 38       		.uleb128 0x38
 3016 0082 0A       		.uleb128 0xa
 3017 0083 00       		.byte	0
 3018 0084 00       		.byte	0
 3019 0085 0C       		.uleb128 0xc
 3020 0086 0D       		.uleb128 0xd
 3021 0087 00       		.byte	0
 3022 0088 03       		.uleb128 0x3
 3023 0089 08       		.uleb128 0x8
 3024 008a 3A       		.uleb128 0x3a
 3025 008b 0B       		.uleb128 0xb
 3026 008c 3B       		.uleb128 0x3b
 3027 008d 0B       		.uleb128 0xb
 3028 008e 49       		.uleb128 0x49
 3029 008f 13       		.uleb128 0x13
 3030 0090 38       		.uleb128 0x38
 3031 0091 0A       		.uleb128 0xa
 3032 0092 00       		.byte	0
 3033 0093 00       		.byte	0
 3034 0094 0D       		.uleb128 0xd
 3035 0095 21       		.uleb128 0x21
 3036 0096 00       		.byte	0
 3037 0097 49       		.uleb128 0x49
 3038 0098 13       		.uleb128 0x13
 3039 0099 2F       		.uleb128 0x2f
 3040 009a 05       		.uleb128 0x5
 3041 009b 00       		.byte	0
 3042 009c 00       		.byte	0
 3043 009d 0E       		.uleb128 0xe
 3044 009e 26       		.uleb128 0x26
 3045 009f 00       		.byte	0
 3046 00a0 49       		.uleb128 0x49
 3047 00a1 13       		.uleb128 0x13
 3048 00a2 00       		.byte	0
 3049 00a3 00       		.byte	0
 3050 00a4 0F       		.uleb128 0xf
 3051 00a5 13       		.uleb128 0x13
 3052 00a6 01       		.byte	0x1
 3053 00a7 0B       		.uleb128 0xb
ARM GAS  /tmp/cctnQ2aC.s 			page 84


 3054 00a8 05       		.uleb128 0x5
 3055 00a9 3A       		.uleb128 0x3a
 3056 00aa 0B       		.uleb128 0xb
 3057 00ab 3B       		.uleb128 0x3b
 3058 00ac 05       		.uleb128 0x5
 3059 00ad 01       		.uleb128 0x1
 3060 00ae 13       		.uleb128 0x13
 3061 00af 00       		.byte	0
 3062 00b0 00       		.byte	0
 3063 00b1 10       		.uleb128 0x10
 3064 00b2 0D       		.uleb128 0xd
 3065 00b3 00       		.byte	0
 3066 00b4 03       		.uleb128 0x3
 3067 00b5 0E       		.uleb128 0xe
 3068 00b6 3A       		.uleb128 0x3a
 3069 00b7 0B       		.uleb128 0xb
 3070 00b8 3B       		.uleb128 0x3b
 3071 00b9 05       		.uleb128 0x5
 3072 00ba 49       		.uleb128 0x49
 3073 00bb 13       		.uleb128 0x13
 3074 00bc 38       		.uleb128 0x38
 3075 00bd 0A       		.uleb128 0xa
 3076 00be 00       		.byte	0
 3077 00bf 00       		.byte	0
 3078 00c0 11       		.uleb128 0x11
 3079 00c1 16       		.uleb128 0x16
 3080 00c2 00       		.byte	0
 3081 00c3 03       		.uleb128 0x3
 3082 00c4 08       		.uleb128 0x8
 3083 00c5 3A       		.uleb128 0x3a
 3084 00c6 0B       		.uleb128 0xb
 3085 00c7 3B       		.uleb128 0x3b
 3086 00c8 05       		.uleb128 0x5
 3087 00c9 49       		.uleb128 0x49
 3088 00ca 13       		.uleb128 0x13
 3089 00cb 00       		.byte	0
 3090 00cc 00       		.byte	0
 3091 00cd 12       		.uleb128 0x12
 3092 00ce 13       		.uleb128 0x13
 3093 00cf 01       		.byte	0x1
 3094 00d0 0B       		.uleb128 0xb
 3095 00d1 0B       		.uleb128 0xb
 3096 00d2 3A       		.uleb128 0x3a
 3097 00d3 0B       		.uleb128 0xb
 3098 00d4 3B       		.uleb128 0x3b
 3099 00d5 05       		.uleb128 0x5
 3100 00d6 01       		.uleb128 0x1
 3101 00d7 13       		.uleb128 0x13
 3102 00d8 00       		.byte	0
 3103 00d9 00       		.byte	0
 3104 00da 13       		.uleb128 0x13
 3105 00db 16       		.uleb128 0x16
 3106 00dc 00       		.byte	0
 3107 00dd 03       		.uleb128 0x3
 3108 00de 0E       		.uleb128 0xe
 3109 00df 3A       		.uleb128 0x3a
 3110 00e0 0B       		.uleb128 0xb
ARM GAS  /tmp/cctnQ2aC.s 			page 85


 3111 00e1 3B       		.uleb128 0x3b
 3112 00e2 05       		.uleb128 0x5
 3113 00e3 49       		.uleb128 0x49
 3114 00e4 13       		.uleb128 0x13
 3115 00e5 00       		.byte	0
 3116 00e6 00       		.byte	0
 3117 00e7 14       		.uleb128 0x14
 3118 00e8 13       		.uleb128 0x13
 3119 00e9 01       		.byte	0x1
 3120 00ea 03       		.uleb128 0x3
 3121 00eb 0E       		.uleb128 0xe
 3122 00ec 0B       		.uleb128 0xb
 3123 00ed 0B       		.uleb128 0xb
 3124 00ee 3A       		.uleb128 0x3a
 3125 00ef 0B       		.uleb128 0xb
 3126 00f0 3B       		.uleb128 0x3b
 3127 00f1 0B       		.uleb128 0xb
 3128 00f2 01       		.uleb128 0x1
 3129 00f3 13       		.uleb128 0x13
 3130 00f4 00       		.byte	0
 3131 00f5 00       		.byte	0
 3132 00f6 15       		.uleb128 0x15
 3133 00f7 0F       		.uleb128 0xf
 3134 00f8 00       		.byte	0
 3135 00f9 0B       		.uleb128 0xb
 3136 00fa 0B       		.uleb128 0xb
 3137 00fb 49       		.uleb128 0x49
 3138 00fc 13       		.uleb128 0x13
 3139 00fd 00       		.byte	0
 3140 00fe 00       		.byte	0
 3141 00ff 16       		.uleb128 0x16
 3142 0100 16       		.uleb128 0x16
 3143 0101 00       		.byte	0
 3144 0102 03       		.uleb128 0x3
 3145 0103 08       		.uleb128 0x8
 3146 0104 3A       		.uleb128 0x3a
 3147 0105 0B       		.uleb128 0xb
 3148 0106 3B       		.uleb128 0x3b
 3149 0107 0B       		.uleb128 0xb
 3150 0108 49       		.uleb128 0x49
 3151 0109 13       		.uleb128 0x13
 3152 010a 00       		.byte	0
 3153 010b 00       		.byte	0
 3154 010c 17       		.uleb128 0x17
 3155 010d 2E       		.uleb128 0x2e
 3156 010e 01       		.byte	0x1
 3157 010f 03       		.uleb128 0x3
 3158 0110 0E       		.uleb128 0xe
 3159 0111 3A       		.uleb128 0x3a
 3160 0112 0B       		.uleb128 0xb
 3161 0113 3B       		.uleb128 0x3b
 3162 0114 05       		.uleb128 0x5
 3163 0115 27       		.uleb128 0x27
 3164 0116 0C       		.uleb128 0xc
 3165 0117 11       		.uleb128 0x11
 3166 0118 01       		.uleb128 0x1
 3167 0119 12       		.uleb128 0x12
ARM GAS  /tmp/cctnQ2aC.s 			page 86


 3168 011a 01       		.uleb128 0x1
 3169 011b 40       		.uleb128 0x40
 3170 011c 06       		.uleb128 0x6
 3171 011d 01       		.uleb128 0x1
 3172 011e 13       		.uleb128 0x13
 3173 011f 00       		.byte	0
 3174 0120 00       		.byte	0
 3175 0121 18       		.uleb128 0x18
 3176 0122 05       		.uleb128 0x5
 3177 0123 00       		.byte	0
 3178 0124 03       		.uleb128 0x3
 3179 0125 0E       		.uleb128 0xe
 3180 0126 3A       		.uleb128 0x3a
 3181 0127 0B       		.uleb128 0xb
 3182 0128 3B       		.uleb128 0x3b
 3183 0129 05       		.uleb128 0x5
 3184 012a 49       		.uleb128 0x49
 3185 012b 13       		.uleb128 0x13
 3186 012c 02       		.uleb128 0x2
 3187 012d 0A       		.uleb128 0xa
 3188 012e 00       		.byte	0
 3189 012f 00       		.byte	0
 3190 0130 19       		.uleb128 0x19
 3191 0131 2E       		.uleb128 0x2e
 3192 0132 01       		.byte	0x1
 3193 0133 3F       		.uleb128 0x3f
 3194 0134 0C       		.uleb128 0xc
 3195 0135 03       		.uleb128 0x3
 3196 0136 0E       		.uleb128 0xe
 3197 0137 3A       		.uleb128 0x3a
 3198 0138 0B       		.uleb128 0xb
 3199 0139 3B       		.uleb128 0x3b
 3200 013a 0B       		.uleb128 0xb
 3201 013b 27       		.uleb128 0x27
 3202 013c 0C       		.uleb128 0xc
 3203 013d 11       		.uleb128 0x11
 3204 013e 01       		.uleb128 0x1
 3205 013f 12       		.uleb128 0x12
 3206 0140 01       		.uleb128 0x1
 3207 0141 40       		.uleb128 0x40
 3208 0142 06       		.uleb128 0x6
 3209 0143 01       		.uleb128 0x1
 3210 0144 13       		.uleb128 0x13
 3211 0145 00       		.byte	0
 3212 0146 00       		.byte	0
 3213 0147 1A       		.uleb128 0x1a
 3214 0148 34       		.uleb128 0x34
 3215 0149 00       		.byte	0
 3216 014a 03       		.uleb128 0x3
 3217 014b 08       		.uleb128 0x8
 3218 014c 3A       		.uleb128 0x3a
 3219 014d 0B       		.uleb128 0xb
 3220 014e 3B       		.uleb128 0x3b
 3221 014f 0B       		.uleb128 0xb
 3222 0150 49       		.uleb128 0x49
 3223 0151 13       		.uleb128 0x13
 3224 0152 02       		.uleb128 0x2
ARM GAS  /tmp/cctnQ2aC.s 			page 87


 3225 0153 0A       		.uleb128 0xa
 3226 0154 00       		.byte	0
 3227 0155 00       		.byte	0
 3228 0156 1B       		.uleb128 0x1b
 3229 0157 2E       		.uleb128 0x2e
 3230 0158 01       		.byte	0x1
 3231 0159 03       		.uleb128 0x3
 3232 015a 0E       		.uleb128 0xe
 3233 015b 3A       		.uleb128 0x3a
 3234 015c 0B       		.uleb128 0xb
 3235 015d 3B       		.uleb128 0x3b
 3236 015e 0B       		.uleb128 0xb
 3237 015f 11       		.uleb128 0x11
 3238 0160 01       		.uleb128 0x1
 3239 0161 12       		.uleb128 0x12
 3240 0162 01       		.uleb128 0x1
 3241 0163 40       		.uleb128 0x40
 3242 0164 06       		.uleb128 0x6
 3243 0165 01       		.uleb128 0x1
 3244 0166 13       		.uleb128 0x13
 3245 0167 00       		.byte	0
 3246 0168 00       		.byte	0
 3247 0169 1C       		.uleb128 0x1c
 3248 016a 34       		.uleb128 0x34
 3249 016b 00       		.byte	0
 3250 016c 03       		.uleb128 0x3
 3251 016d 0E       		.uleb128 0xe
 3252 016e 3A       		.uleb128 0x3a
 3253 016f 0B       		.uleb128 0xb
 3254 0170 3B       		.uleb128 0x3b
 3255 0171 0B       		.uleb128 0xb
 3256 0172 49       		.uleb128 0x49
 3257 0173 13       		.uleb128 0x13
 3258 0174 02       		.uleb128 0x2
 3259 0175 0A       		.uleb128 0xa
 3260 0176 00       		.byte	0
 3261 0177 00       		.byte	0
 3262 0178 1D       		.uleb128 0x1d
 3263 0179 2E       		.uleb128 0x2e
 3264 017a 00       		.byte	0
 3265 017b 3F       		.uleb128 0x3f
 3266 017c 0C       		.uleb128 0xc
 3267 017d 03       		.uleb128 0x3
 3268 017e 0E       		.uleb128 0xe
 3269 017f 3A       		.uleb128 0x3a
 3270 0180 0B       		.uleb128 0xb
 3271 0181 3B       		.uleb128 0x3b
 3272 0182 0B       		.uleb128 0xb
 3273 0183 11       		.uleb128 0x11
 3274 0184 01       		.uleb128 0x1
 3275 0185 12       		.uleb128 0x12
 3276 0186 01       		.uleb128 0x1
 3277 0187 40       		.uleb128 0x40
 3278 0188 06       		.uleb128 0x6
 3279 0189 00       		.byte	0
 3280 018a 00       		.byte	0
 3281 018b 1E       		.uleb128 0x1e
ARM GAS  /tmp/cctnQ2aC.s 			page 88


 3282 018c 05       		.uleb128 0x5
 3283 018d 00       		.byte	0
 3284 018e 03       		.uleb128 0x3
 3285 018f 08       		.uleb128 0x8
 3286 0190 3A       		.uleb128 0x3a
 3287 0191 0B       		.uleb128 0xb
 3288 0192 3B       		.uleb128 0x3b
 3289 0193 0B       		.uleb128 0xb
 3290 0194 49       		.uleb128 0x49
 3291 0195 13       		.uleb128 0x13
 3292 0196 02       		.uleb128 0x2
 3293 0197 0A       		.uleb128 0xa
 3294 0198 00       		.byte	0
 3295 0199 00       		.byte	0
 3296 019a 1F       		.uleb128 0x1f
 3297 019b 34       		.uleb128 0x34
 3298 019c 00       		.byte	0
 3299 019d 03       		.uleb128 0x3
 3300 019e 0E       		.uleb128 0xe
 3301 019f 49       		.uleb128 0x49
 3302 01a0 13       		.uleb128 0x13
 3303 01a1 34       		.uleb128 0x34
 3304 01a2 0C       		.uleb128 0xc
 3305 01a3 02       		.uleb128 0x2
 3306 01a4 0A       		.uleb128 0xa
 3307 01a5 00       		.byte	0
 3308 01a6 00       		.byte	0
 3309 01a7 20       		.uleb128 0x20
 3310 01a8 2E       		.uleb128 0x2e
 3311 01a9 01       		.byte	0x1
 3312 01aa 3F       		.uleb128 0x3f
 3313 01ab 0C       		.uleb128 0xc
 3314 01ac 03       		.uleb128 0x3
 3315 01ad 0E       		.uleb128 0xe
 3316 01ae 3A       		.uleb128 0x3a
 3317 01af 0B       		.uleb128 0xb
 3318 01b0 3B       		.uleb128 0x3b
 3319 01b1 0B       		.uleb128 0xb
 3320 01b2 27       		.uleb128 0x27
 3321 01b3 0C       		.uleb128 0xc
 3322 01b4 49       		.uleb128 0x49
 3323 01b5 13       		.uleb128 0x13
 3324 01b6 11       		.uleb128 0x11
 3325 01b7 01       		.uleb128 0x1
 3326 01b8 12       		.uleb128 0x12
 3327 01b9 01       		.uleb128 0x1
 3328 01ba 40       		.uleb128 0x40
 3329 01bb 06       		.uleb128 0x6
 3330 01bc 01       		.uleb128 0x1
 3331 01bd 13       		.uleb128 0x13
 3332 01be 00       		.byte	0
 3333 01bf 00       		.byte	0
 3334 01c0 21       		.uleb128 0x21
 3335 01c1 34       		.uleb128 0x34
 3336 01c2 00       		.byte	0
 3337 01c3 03       		.uleb128 0x3
 3338 01c4 0E       		.uleb128 0xe
ARM GAS  /tmp/cctnQ2aC.s 			page 89


 3339 01c5 3A       		.uleb128 0x3a
 3340 01c6 0B       		.uleb128 0xb
 3341 01c7 3B       		.uleb128 0x3b
 3342 01c8 05       		.uleb128 0x5
 3343 01c9 49       		.uleb128 0x49
 3344 01ca 13       		.uleb128 0x13
 3345 01cb 3F       		.uleb128 0x3f
 3346 01cc 0C       		.uleb128 0xc
 3347 01cd 3C       		.uleb128 0x3c
 3348 01ce 0C       		.uleb128 0xc
 3349 01cf 00       		.byte	0
 3350 01d0 00       		.byte	0
 3351 01d1 00       		.byte	0
 3352              		.section	.debug_loc,"",%progbits
 3353              	.Ldebug_loc0:
 3354              	.LLST0:
 3355 0000 00000000 		.4byte	.LFB14
 3356 0004 02000000 		.4byte	.LCFI0
 3357 0008 0200     		.2byte	0x2
 3358 000a 7D       		.byte	0x7d
 3359 000b 00       		.sleb128 0
 3360 000c 02000000 		.4byte	.LCFI0
 3361 0010 04000000 		.4byte	.LCFI1
 3362 0014 0200     		.2byte	0x2
 3363 0016 7D       		.byte	0x7d
 3364 0017 04       		.sleb128 4
 3365 0018 04000000 		.4byte	.LCFI1
 3366 001c 06000000 		.4byte	.LCFI2
 3367 0020 0200     		.2byte	0x2
 3368 0022 7D       		.byte	0x7d
 3369 0023 10       		.sleb128 16
 3370 0024 06000000 		.4byte	.LCFI2
 3371 0028 36000000 		.4byte	.LFE14
 3372 002c 0200     		.2byte	0x2
 3373 002e 77       		.byte	0x77
 3374 002f 10       		.sleb128 16
 3375 0030 00000000 		.4byte	0
 3376 0034 00000000 		.4byte	0
 3377              	.LLST1:
 3378 0038 00000000 		.4byte	.LFB35
 3379 003c 02000000 		.4byte	.LCFI3
 3380 0040 0200     		.2byte	0x2
 3381 0042 7D       		.byte	0x7d
 3382 0043 00       		.sleb128 0
 3383 0044 02000000 		.4byte	.LCFI3
 3384 0048 04000000 		.4byte	.LCFI4
 3385 004c 0200     		.2byte	0x2
 3386 004e 7D       		.byte	0x7d
 3387 004f 08       		.sleb128 8
 3388 0050 04000000 		.4byte	.LCFI4
 3389 0054 06000000 		.4byte	.LCFI5
 3390 0058 0200     		.2byte	0x2
 3391 005a 7D       		.byte	0x7d
 3392 005b 10       		.sleb128 16
 3393 005c 06000000 		.4byte	.LCFI5
 3394 0060 90000000 		.4byte	.LFE35
 3395 0064 0200     		.2byte	0x2
ARM GAS  /tmp/cctnQ2aC.s 			page 90


 3396 0066 77       		.byte	0x77
 3397 0067 10       		.sleb128 16
 3398 0068 00000000 		.4byte	0
 3399 006c 00000000 		.4byte	0
 3400              	.LLST2:
 3401 0070 00000000 		.4byte	.LFB36
 3402 0074 02000000 		.4byte	.LCFI6
 3403 0078 0200     		.2byte	0x2
 3404 007a 7D       		.byte	0x7d
 3405 007b 00       		.sleb128 0
 3406 007c 02000000 		.4byte	.LCFI6
 3407 0080 04000000 		.4byte	.LCFI7
 3408 0084 0200     		.2byte	0x2
 3409 0086 7D       		.byte	0x7d
 3410 0087 0C       		.sleb128 12
 3411 0088 04000000 		.4byte	.LCFI7
 3412 008c 06000000 		.4byte	.LCFI8
 3413 0090 0200     		.2byte	0x2
 3414 0092 7D       		.byte	0x7d
 3415 0093 20       		.sleb128 32
 3416 0094 06000000 		.4byte	.LCFI8
 3417 0098 A0000000 		.4byte	.LFE36
 3418 009c 0200     		.2byte	0x2
 3419 009e 77       		.byte	0x77
 3420 009f 18       		.sleb128 24
 3421 00a0 00000000 		.4byte	0
 3422 00a4 00000000 		.4byte	0
 3423              	.LLST3:
 3424 00a8 00000000 		.4byte	.LFB37
 3425 00ac 02000000 		.4byte	.LCFI9
 3426 00b0 0200     		.2byte	0x2
 3427 00b2 7D       		.byte	0x7d
 3428 00b3 00       		.sleb128 0
 3429 00b4 02000000 		.4byte	.LCFI9
 3430 00b8 04000000 		.4byte	.LCFI10
 3431 00bc 0200     		.2byte	0x2
 3432 00be 7D       		.byte	0x7d
 3433 00bf 08       		.sleb128 8
 3434 00c0 04000000 		.4byte	.LCFI10
 3435 00c4 16000000 		.4byte	.LFE37
 3436 00c8 0200     		.2byte	0x2
 3437 00ca 77       		.byte	0x77
 3438 00cb 08       		.sleb128 8
 3439 00cc 00000000 		.4byte	0
 3440 00d0 00000000 		.4byte	0
 3441              	.LLST4:
 3442 00d4 00000000 		.4byte	.LFB38
 3443 00d8 02000000 		.4byte	.LCFI11
 3444 00dc 0200     		.2byte	0x2
 3445 00de 7D       		.byte	0x7d
 3446 00df 00       		.sleb128 0
 3447 00e0 02000000 		.4byte	.LCFI11
 3448 00e4 04000000 		.4byte	.LCFI12
 3449 00e8 0200     		.2byte	0x2
 3450 00ea 7D       		.byte	0x7d
 3451 00eb 08       		.sleb128 8
 3452 00ec 04000000 		.4byte	.LCFI12
ARM GAS  /tmp/cctnQ2aC.s 			page 91


 3453 00f0 06000000 		.4byte	.LCFI13
 3454 00f4 0200     		.2byte	0x2
 3455 00f6 7D       		.byte	0x7d
 3456 00f7 18       		.sleb128 24
 3457 00f8 06000000 		.4byte	.LCFI13
 3458 00fc 8E000000 		.4byte	.LFE38
 3459 0100 0200     		.2byte	0x2
 3460 0102 77       		.byte	0x77
 3461 0103 18       		.sleb128 24
 3462 0104 00000000 		.4byte	0
 3463 0108 00000000 		.4byte	0
 3464              	.LLST5:
 3465 010c 00000000 		.4byte	.LFB39
 3466 0110 02000000 		.4byte	.LCFI14
 3467 0114 0200     		.2byte	0x2
 3468 0116 7D       		.byte	0x7d
 3469 0117 00       		.sleb128 0
 3470 0118 02000000 		.4byte	.LCFI14
 3471 011c 04000000 		.4byte	.LCFI15
 3472 0120 0200     		.2byte	0x2
 3473 0122 7D       		.byte	0x7d
 3474 0123 08       		.sleb128 8
 3475 0124 04000000 		.4byte	.LCFI15
 3476 0128 06000000 		.4byte	.LCFI16
 3477 012c 0200     		.2byte	0x2
 3478 012e 7D       		.byte	0x7d
 3479 012f 18       		.sleb128 24
 3480 0130 06000000 		.4byte	.LCFI16
 3481 0134 7A000000 		.4byte	.LFE39
 3482 0138 0200     		.2byte	0x2
 3483 013a 77       		.byte	0x77
 3484 013b 18       		.sleb128 24
 3485 013c 00000000 		.4byte	0
 3486 0140 00000000 		.4byte	0
 3487              	.LLST6:
 3488 0144 00000000 		.4byte	.LFB40
 3489 0148 02000000 		.4byte	.LCFI17
 3490 014c 0200     		.2byte	0x2
 3491 014e 7D       		.byte	0x7d
 3492 014f 00       		.sleb128 0
 3493 0150 02000000 		.4byte	.LCFI17
 3494 0154 04000000 		.4byte	.LCFI18
 3495 0158 0200     		.2byte	0x2
 3496 015a 7D       		.byte	0x7d
 3497 015b 08       		.sleb128 8
 3498 015c 04000000 		.4byte	.LCFI18
 3499 0160 06000000 		.4byte	.LCFI19
 3500 0164 0200     		.2byte	0x2
 3501 0166 7D       		.byte	0x7d
 3502 0167 18       		.sleb128 24
 3503 0168 06000000 		.4byte	.LCFI19
 3504 016c 7A000000 		.4byte	.LFE40
 3505 0170 0200     		.2byte	0x2
 3506 0172 77       		.byte	0x77
 3507 0173 18       		.sleb128 24
 3508 0174 00000000 		.4byte	0
 3509 0178 00000000 		.4byte	0
ARM GAS  /tmp/cctnQ2aC.s 			page 92


 3510              	.LLST7:
 3511 017c 00000000 		.4byte	.LFB41
 3512 0180 02000000 		.4byte	.LCFI20
 3513 0184 0200     		.2byte	0x2
 3514 0186 7D       		.byte	0x7d
 3515 0187 00       		.sleb128 0
 3516 0188 02000000 		.4byte	.LCFI20
 3517 018c 04000000 		.4byte	.LCFI21
 3518 0190 0200     		.2byte	0x2
 3519 0192 7D       		.byte	0x7d
 3520 0193 08       		.sleb128 8
 3521 0194 04000000 		.4byte	.LCFI21
 3522 0198 06000000 		.4byte	.LCFI22
 3523 019c 0200     		.2byte	0x2
 3524 019e 7D       		.byte	0x7d
 3525 019f 18       		.sleb128 24
 3526 01a0 06000000 		.4byte	.LCFI22
 3527 01a4 84000000 		.4byte	.LFE41
 3528 01a8 0200     		.2byte	0x2
 3529 01aa 77       		.byte	0x77
 3530 01ab 18       		.sleb128 24
 3531 01ac 00000000 		.4byte	0
 3532 01b0 00000000 		.4byte	0
 3533              	.LLST8:
 3534 01b4 00000000 		.4byte	.LFB42
 3535 01b8 02000000 		.4byte	.LCFI23
 3536 01bc 0200     		.2byte	0x2
 3537 01be 7D       		.byte	0x7d
 3538 01bf 00       		.sleb128 0
 3539 01c0 02000000 		.4byte	.LCFI23
 3540 01c4 04000000 		.4byte	.LCFI24
 3541 01c8 0200     		.2byte	0x2
 3542 01ca 7D       		.byte	0x7d
 3543 01cb 08       		.sleb128 8
 3544 01cc 04000000 		.4byte	.LCFI24
 3545 01d0 06000000 		.4byte	.LCFI25
 3546 01d4 0200     		.2byte	0x2
 3547 01d6 7D       		.byte	0x7d
 3548 01d7 10       		.sleb128 16
 3549 01d8 06000000 		.4byte	.LCFI25
 3550 01dc 6A000000 		.4byte	.LFE42
 3551 01e0 0200     		.2byte	0x2
 3552 01e2 77       		.byte	0x77
 3553 01e3 10       		.sleb128 16
 3554 01e4 00000000 		.4byte	0
 3555 01e8 00000000 		.4byte	0
 3556              	.LLST9:
 3557 01ec 00000000 		.4byte	.LFB43
 3558 01f0 02000000 		.4byte	.LCFI26
 3559 01f4 0200     		.2byte	0x2
 3560 01f6 7D       		.byte	0x7d
 3561 01f7 00       		.sleb128 0
 3562 01f8 02000000 		.4byte	.LCFI26
 3563 01fc 04000000 		.4byte	.LCFI27
 3564 0200 0200     		.2byte	0x2
 3565 0202 7D       		.byte	0x7d
 3566 0203 08       		.sleb128 8
ARM GAS  /tmp/cctnQ2aC.s 			page 93


 3567 0204 04000000 		.4byte	.LCFI27
 3568 0208 06000000 		.4byte	.LCFI28
 3569 020c 0200     		.2byte	0x2
 3570 020e 7D       		.byte	0x7d
 3571 020f 10       		.sleb128 16
 3572 0210 06000000 		.4byte	.LCFI28
 3573 0214 2E000000 		.4byte	.LFE43
 3574 0218 0200     		.2byte	0x2
 3575 021a 77       		.byte	0x77
 3576 021b 10       		.sleb128 16
 3577 021c 00000000 		.4byte	0
 3578 0220 00000000 		.4byte	0
 3579              	.LLST10:
 3580 0224 00000000 		.4byte	.LFB44
 3581 0228 02000000 		.4byte	.LCFI29
 3582 022c 0200     		.2byte	0x2
 3583 022e 7D       		.byte	0x7d
 3584 022f 00       		.sleb128 0
 3585 0230 02000000 		.4byte	.LCFI29
 3586 0234 04000000 		.4byte	.LCFI30
 3587 0238 0200     		.2byte	0x2
 3588 023a 7D       		.byte	0x7d
 3589 023b 08       		.sleb128 8
 3590 023c 04000000 		.4byte	.LCFI30
 3591 0240 06000000 		.4byte	.LCFI31
 3592 0244 0200     		.2byte	0x2
 3593 0246 7D       		.byte	0x7d
 3594 0247 10       		.sleb128 16
 3595 0248 06000000 		.4byte	.LCFI31
 3596 024c 44000000 		.4byte	.LFE44
 3597 0250 0200     		.2byte	0x2
 3598 0252 77       		.byte	0x77
 3599 0253 10       		.sleb128 16
 3600 0254 00000000 		.4byte	0
 3601 0258 00000000 		.4byte	0
 3602              	.LLST11:
 3603 025c 00000000 		.4byte	.LFB45
 3604 0260 02000000 		.4byte	.LCFI32
 3605 0264 0200     		.2byte	0x2
 3606 0266 7D       		.byte	0x7d
 3607 0267 00       		.sleb128 0
 3608 0268 02000000 		.4byte	.LCFI32
 3609 026c 04000000 		.4byte	.LCFI33
 3610 0270 0200     		.2byte	0x2
 3611 0272 7D       		.byte	0x7d
 3612 0273 04       		.sleb128 4
 3613 0274 04000000 		.4byte	.LCFI33
 3614 0278 06000000 		.4byte	.LCFI34
 3615 027c 0200     		.2byte	0x2
 3616 027e 7D       		.byte	0x7d
 3617 027f 10       		.sleb128 16
 3618 0280 06000000 		.4byte	.LCFI34
 3619 0284 26000000 		.4byte	.LFE45
 3620 0288 0200     		.2byte	0x2
 3621 028a 77       		.byte	0x77
 3622 028b 10       		.sleb128 16
 3623 028c 00000000 		.4byte	0
ARM GAS  /tmp/cctnQ2aC.s 			page 94


 3624 0290 00000000 		.4byte	0
 3625              		.section	.debug_aranges,"",%progbits
 3626 0000 74000000 		.4byte	0x74
 3627 0004 0200     		.2byte	0x2
 3628 0006 00000000 		.4byte	.Ldebug_info0
 3629 000a 04       		.byte	0x4
 3630 000b 00       		.byte	0
 3631 000c 0000     		.2byte	0
 3632 000e 0000     		.2byte	0
 3633 0010 00000000 		.4byte	.LFB14
 3634 0014 36000000 		.4byte	.LFE14-.LFB14
 3635 0018 00000000 		.4byte	.LFB35
 3636 001c 90000000 		.4byte	.LFE35-.LFB35
 3637 0020 00000000 		.4byte	.LFB36
 3638 0024 A0000000 		.4byte	.LFE36-.LFB36
 3639 0028 00000000 		.4byte	.LFB37
 3640 002c 16000000 		.4byte	.LFE37-.LFB37
 3641 0030 00000000 		.4byte	.LFB38
 3642 0034 8E000000 		.4byte	.LFE38-.LFB38
 3643 0038 00000000 		.4byte	.LFB39
 3644 003c 7A000000 		.4byte	.LFE39-.LFB39
 3645 0040 00000000 		.4byte	.LFB40
 3646 0044 7A000000 		.4byte	.LFE40-.LFB40
 3647 0048 00000000 		.4byte	.LFB41
 3648 004c 84000000 		.4byte	.LFE41-.LFB41
 3649 0050 00000000 		.4byte	.LFB42
 3650 0054 6A000000 		.4byte	.LFE42-.LFB42
 3651 0058 00000000 		.4byte	.LFB43
 3652 005c 2E000000 		.4byte	.LFE43-.LFB43
 3653 0060 00000000 		.4byte	.LFB44
 3654 0064 44000000 		.4byte	.LFE44-.LFB44
 3655 0068 00000000 		.4byte	.LFB45
 3656 006c 26000000 		.4byte	.LFE45-.LFB45
 3657 0070 00000000 		.4byte	0
 3658 0074 00000000 		.4byte	0
 3659              		.section	.debug_ranges,"",%progbits
 3660              	.Ldebug_ranges0:
 3661 0000 00000000 		.4byte	.LFB14
 3662 0004 36000000 		.4byte	.LFE14
 3663 0008 00000000 		.4byte	.LFB35
 3664 000c 90000000 		.4byte	.LFE35
 3665 0010 00000000 		.4byte	.LFB36
 3666 0014 A0000000 		.4byte	.LFE36
 3667 0018 00000000 		.4byte	.LFB37
 3668 001c 16000000 		.4byte	.LFE37
 3669 0020 00000000 		.4byte	.LFB38
 3670 0024 8E000000 		.4byte	.LFE38
 3671 0028 00000000 		.4byte	.LFB39
 3672 002c 7A000000 		.4byte	.LFE39
 3673 0030 00000000 		.4byte	.LFB40
 3674 0034 7A000000 		.4byte	.LFE40
 3675 0038 00000000 		.4byte	.LFB41
 3676 003c 84000000 		.4byte	.LFE41
 3677 0040 00000000 		.4byte	.LFB42
 3678 0044 6A000000 		.4byte	.LFE42
 3679 0048 00000000 		.4byte	.LFB43
 3680 004c 2E000000 		.4byte	.LFE43
ARM GAS  /tmp/cctnQ2aC.s 			page 95


 3681 0050 00000000 		.4byte	.LFB44
 3682 0054 44000000 		.4byte	.LFE44
 3683 0058 00000000 		.4byte	.LFB45
 3684 005c 26000000 		.4byte	.LFE45
 3685 0060 00000000 		.4byte	0
 3686 0064 00000000 		.4byte	0
 3687              		.section	.debug_line,"",%progbits
 3688              	.Ldebug_line0:
 3689 0000 0F020000 		.section	.debug_str,"MS",%progbits,1
 3689      0200C700 
 3689      00000201 
 3689      FB0E0D00 
 3689      01010101 
 3690              	.LASF59:
 3691 0000 49435052 		.ascii	"ICPR\000"
 3691      00
 3692              	.LASF114:
 3693 0005 50494F5F 		.ascii	"PIO_ELSR\000"
 3693      454C5352 
 3693      00
 3694              	.LASF198:
 3695 000e 4C45445F 		.ascii	"LED_clr\000"
 3695      636C7200 
 3696              	.LASF170:
 3697 0016 54435F53 		.ascii	"TC_SMMR\000"
 3697      4D4D5200 
 3698              	.LASF158:
 3699 001e 504D435F 		.ascii	"PMC_IMR\000"
 3699      494D5200 
 3700              	.LASF35:
 3701 0026 48534D43 		.ascii	"HSMCI_IRQn\000"
 3701      495F4952 
 3701      516E00
 3702              	.LASF188:
 3703 0031 54435F57 		.ascii	"TC_WPMR\000"
 3703      504D5200 
 3704              	.LASF134:
 3705 0039 50494F5F 		.ascii	"PIO_TPR\000"
 3705      54505200 
 3706              	.LASF148:
 3707 0041 434B4752 		.ascii	"CKGR_MOR\000"
 3707      5F4D4F52 
 3707      00
 3708              	.LASF150:
 3709 004a 434B4752 		.ascii	"CKGR_PLLAR\000"
 3709      5F504C4C 
 3709      415200
 3710              	.LASF29:
 3711 0055 534D435F 		.ascii	"SMC_IRQn\000"
 3711      4952516E 
 3711      00
 3712              	.LASF169:
 3713 005e 54435F43 		.ascii	"TC_CMR\000"
 3713      4D5200
 3714              	.LASF190:
 3715 0065 74797065 		.ascii	"type\000"
 3715      00
ARM GAS  /tmp/cctnQ2aC.s 			page 96


 3716              	.LASF165:
 3717 006a 504D435F 		.ascii	"PMC_PCDR1\000"
 3717      50434452 
 3717      3100
 3718              	.LASF104:
 3719 0074 50494F5F 		.ascii	"PIO_OWER\000"
 3719      4F574552 
 3719      00
 3720              	.LASF130:
 3721 007d 50494F5F 		.ascii	"PIO_PCISR\000"
 3721      50434953 
 3721      5200
 3722              	.LASF180:
 3723 0087 54435F43 		.ascii	"TC_CHANNEL\000"
 3723      48414E4E 
 3723      454C00
 3724              	.LASF6:
 3725 0092 6C6F6E67 		.ascii	"long long unsigned int\000"
 3725      206C6F6E 
 3725      6720756E 
 3725      7369676E 
 3725      65642069 
 3726              	.LASF178:
 3727 00a9 54435F49 		.ascii	"TC_IMR\000"
 3727      4D5200
 3728              	.LASF128:
 3729 00b0 50494F5F 		.ascii	"PIO_PCIDR\000"
 3729      50434944 
 3729      5200
 3730              	.LASF137:
 3731 00ba 50494F5F 		.ascii	"PIO_RNCR\000"
 3731      524E4352 
 3731      00
 3732              	.LASF57:
 3733 00c3 49535052 		.ascii	"ISPR\000"
 3733      00
 3734              	.LASF99:
 3735 00c8 50494F5F 		.ascii	"PIO_SCDR\000"
 3735      53434452 
 3735      00
 3736              	.LASF92:
 3737 00d1 50494F5F 		.ascii	"PIO_PUSR\000"
 3737      50555352 
 3737      00
 3738              	.LASF5:
 3739 00da 6C6F6E67 		.ascii	"long long int\000"
 3739      206C6F6E 
 3739      6720696E 
 3739      7400
 3740              	.LASF0:
 3741 00e8 7369676E 		.ascii	"signed char\000"
 3741      65642063 
 3741      68617200 
 3742              	.LASF129:
 3743 00f4 50494F5F 		.ascii	"PIO_PCIMR\000"
 3743      5043494D 
 3743      5200
ARM GAS  /tmp/cctnQ2aC.s 			page 97


 3744              	.LASF112:
 3745 00fe 50494F5F 		.ascii	"PIO_ESR\000"
 3745      45535200 
 3746              	.LASF206:
 3747 0106 626C696E 		.ascii	"blinks\000"
 3747      6B7300
 3748              	.LASF143:
 3749 010d 504D435F 		.ascii	"PMC_SCDR\000"
 3749      53434452 
 3749      00
 3750              	.LASF68:
 3751 0116 50494F5F 		.ascii	"PIO_PSR\000"
 3751      50535200 
 3752              	.LASF69:
 3753 011e 52657365 		.ascii	"Reserved1\000"
 3753      72766564 
 3753      3100
 3754              	.LASF73:
 3755 0128 52657365 		.ascii	"Reserved2\000"
 3755      72766564 
 3755      3200
 3756              	.LASF77:
 3757 0132 52657365 		.ascii	"Reserved3\000"
 3757      72766564 
 3757      3300
 3758              	.LASF89:
 3759 013c 52657365 		.ascii	"Reserved4\000"
 3759      72766564 
 3759      3400
 3760              	.LASF147:
 3761 0146 504D435F 		.ascii	"PMC_PCSR0\000"
 3761      50435352 
 3761      3000
 3762              	.LASF95:
 3763 0150 52657365 		.ascii	"Reserved6\000"
 3763      72766564 
 3763      3600
 3764              	.LASF103:
 3765 015a 52657365 		.ascii	"Reserved7\000"
 3765      72766564 
 3765      3700
 3766              	.LASF107:
 3767 0164 52657365 		.ascii	"Reserved8\000"
 3767      72766564 
 3767      3800
 3768              	.LASF111:
 3769 016e 52657365 		.ascii	"Reserved9\000"
 3769      72766564 
 3769      3900
 3770              	.LASF67:
 3771 0178 50494F5F 		.ascii	"PIO_PDR\000"
 3771      50445200 
 3772              	.LASF33:
 3773 0180 55534152 		.ascii	"USART0_IRQn\000"
 3773      54305F49 
 3773      52516E00 
 3774              	.LASF7:
ARM GAS  /tmp/cctnQ2aC.s 			page 98


 3775 018c 6C6F6E67 		.ascii	"long int\000"
 3775      20696E74 
 3775      00
 3776              	.LASF90:
 3777 0195 50494F5F 		.ascii	"PIO_PUDR\000"
 3777      50554452 
 3777      00
 3778              	.LASF162:
 3779 019e 504D435F 		.ascii	"PMC_WPMR\000"
 3779      57504D52 
 3779      00
 3780              	.LASF145:
 3781 01a7 504D435F 		.ascii	"PMC_PCER0\000"
 3781      50434552 
 3781      3000
 3782              	.LASF164:
 3783 01b1 504D435F 		.ascii	"PMC_PCER1\000"
 3783      50434552 
 3783      3100
 3784              	.LASF53:
 3785 01bb 49534552 		.ascii	"ISER\000"
 3785      00
 3786              	.LASF2:
 3787 01c0 73686F72 		.ascii	"short int\000"
 3787      7420696E 
 3787      7400
 3788              	.LASF26:
 3789 01ca 4546435F 		.ascii	"EFC_IRQn\000"
 3789      4952516E 
 3789      00
 3790              	.LASF127:
 3791 01d3 50494F5F 		.ascii	"PIO_PCIER\000"
 3791      50434945 
 3791      5200
 3792              	.LASF81:
 3793 01dd 50494F5F 		.ascii	"PIO_PDSR\000"
 3793      50445352 
 3793      00
 3794              	.LASF140:
 3795 01e6 50494F5F 		.ascii	"PIO_PTCR\000"
 3795      50544352 
 3795      00
 3796              	.LASF211:
 3797 01ef 5F50696E 		.ascii	"_Pin\000"
 3797      00
 3798              	.LASF49:
 3799 01f4 43524343 		.ascii	"CRCCU_IRQn\000"
 3799      555F4952 
 3799      516E00
 3800              	.LASF94:
 3801 01ff 50494F5F 		.ascii	"PIO_ABCDSR\000"
 3801      41424344 
 3801      535200
 3802              	.LASF44:
 3803 020a 5443345F 		.ascii	"TC4_IRQn\000"
 3803      4952516E 
 3803      00
ARM GAS  /tmp/cctnQ2aC.s 			page 99


 3804              	.LASF194:
 3805 0213 4C45445F 		.ascii	"LED_tgl\000"
 3805      74676C00 
 3806              	.LASF189:
 3807 021b 6D61736B 		.ascii	"mask\000"
 3807      00
 3808              	.LASF14:
 3809 0220 42757346 		.ascii	"BusFault_IRQn\000"
 3809      61756C74 
 3809      5F495251 
 3809      6E00
 3810              	.LASF154:
 3811 022e 504D435F 		.ascii	"PMC_PCK\000"
 3811      50434B00 
 3812              	.LASF115:
 3813 0236 52657365 		.ascii	"Reserved10\000"
 3813      72766564 
 3813      313000
 3814              	.LASF119:
 3815 0241 52657365 		.ascii	"Reserved11\000"
 3815      72766564 
 3815      313100
 3816              	.LASF123:
 3817 024c 52657365 		.ascii	"Reserved12\000"
 3817      72766564 
 3817      313200
 3818              	.LASF125:
 3819 0257 52657365 		.ascii	"Reserved13\000"
 3819      72766564 
 3819      313300
 3820              	.LASF122:
 3821 0262 50494F5F 		.ascii	"PIO_WPSR\000"
 3821      57505352 
 3821      00
 3822              	.LASF66:
 3823 026b 50494F5F 		.ascii	"PIO_PER\000"
 3823      50455200 
 3824              	.LASF157:
 3825 0273 504D435F 		.ascii	"PMC_SR\000"
 3825      535200
 3826              	.LASF4:
 3827 027a 756E7369 		.ascii	"unsigned int\000"
 3827      676E6564 
 3827      20696E74 
 3827      00
 3828              	.LASF149:
 3829 0287 434B4752 		.ascii	"CKGR_MCFR\000"
 3829      5F4D4346 
 3829      5200
 3830              	.LASF91:
 3831 0291 50494F5F 		.ascii	"PIO_PUER\000"
 3831      50554552 
 3831      00
 3832              	.LASF118:
 3833 029a 50494F5F 		.ascii	"PIO_FRLHSR\000"
 3833      46524C48 
 3833      535200
ARM GAS  /tmp/cctnQ2aC.s 			page 100


 3834              	.LASF135:
 3835 02a5 50494F5F 		.ascii	"PIO_TCR\000"
 3835      54435200 
 3836              	.LASF21:
 3837 02ad 52535443 		.ascii	"RSTC_IRQn\000"
 3837      5F495251 
 3837      6E00
 3838              	.LASF30:
 3839 02b7 50494F41 		.ascii	"PIOA_IRQn\000"
 3839      5F495251 
 3839      6E00
 3840              	.LASF72:
 3841 02c1 50494F5F 		.ascii	"PIO_OSR\000"
 3841      4F535200 
 3842              	.LASF8:
 3843 02c9 6C6F6E67 		.ascii	"long unsigned int\000"
 3843      20756E73 
 3843      69676E65 
 3843      6420696E 
 3843      7400
 3844              	.LASF141:
 3845 02db 50494F5F 		.ascii	"PIO_PTSR\000"
 3845      50545352 
 3845      00
 3846              	.LASF199:
 3847 02e4 4C45445F 		.ascii	"LED_blink\000"
 3847      626C696E 
 3847      6B00
 3848              	.LASF197:
 3849 02ee 5F5F4655 		.ascii	"__FUNCTION__\000"
 3849      4E435449 
 3849      4F4E5F5F 
 3849      00
 3850              	.LASF71:
 3851 02fb 50494F5F 		.ascii	"PIO_ODR\000"
 3851      4F445200 
 3852              	.LASF202:
 3853 0303 4C45445F 		.ascii	"LED_get\000"
 3853      67657400 
 3854              	.LASF93:
 3855 030b 52657365 		.ascii	"Reserved5\000"
 3855      72766564 
 3855      3500
 3856              	.LASF16:
 3857 0315 53564361 		.ascii	"SVCall_IRQn\000"
 3857      6C6C5F49 
 3857      52516E00 
 3858              	.LASF3:
 3859 0321 73686F72 		.ascii	"short unsigned int\000"
 3859      7420756E 
 3859      7369676E 
 3859      65642069 
 3859      6E7400
 3860              	.LASF45:
 3861 0334 5443355F 		.ascii	"TC5_IRQn\000"
 3861      4952516E 
 3861      00
ARM GAS  /tmp/cctnQ2aC.s 			page 101


 3862              	.LASF152:
 3863 033d 504D435F 		.ascii	"PMC_MCKR\000"
 3863      4D434B52 
 3863      00
 3864              	.LASF146:
 3865 0346 504D435F 		.ascii	"PMC_PCDR0\000"
 3865      50434452 
 3865      3000
 3866              	.LASF51:
 3867 0350 5544505F 		.ascii	"UDP_IRQn\000"
 3867      4952516E 
 3867      00
 3868              	.LASF132:
 3869 0359 50494F5F 		.ascii	"PIO_RPR\000"
 3869      52505200 
 3870              	.LASF43:
 3871 0361 5443335F 		.ascii	"TC3_IRQn\000"
 3871      4952516E 
 3871      00
 3872              	.LASF22:
 3873 036a 5254435F 		.ascii	"RTC_IRQn\000"
 3873      4952516E 
 3873      00
 3874              	.LASF120:
 3875 0373 50494F5F 		.ascii	"PIO_LOCKSR\000"
 3875      4C4F434B 
 3875      535200
 3876              	.LASF167:
 3877 037e 504D435F 		.ascii	"PMC_OCR\000"
 3877      4F435200 
 3878              	.LASF108:
 3879 0386 50494F5F 		.ascii	"PIO_AIMER\000"
 3879      41494D45 
 3879      5200
 3880              	.LASF85:
 3881 0390 50494F5F 		.ascii	"PIO_ISR\000"
 3881      49535200 
 3882              	.LASF184:
 3883 0398 54435F51 		.ascii	"TC_QIDR\000"
 3883      49445200 
 3884              	.LASF41:
 3885 03a0 5443315F 		.ascii	"TC1_IRQn\000"
 3885      4952516E 
 3885      00
 3886              	.LASF50:
 3887 03a9 4143435F 		.ascii	"ACC_IRQn\000"
 3887      4952516E 
 3887      00
 3888              	.LASF83:
 3889 03b2 50494F5F 		.ascii	"PIO_IDR\000"
 3889      49445200 
 3890              	.LASF196:
 3891 03ba 4C45445F 		.ascii	"LED_set\000"
 3891      73657400 
 3892              	.LASF19:
 3893 03c2 53797354 		.ascii	"SysTick_IRQn\000"
 3893      69636B5F 
ARM GAS  /tmp/cctnQ2aC.s 			page 102


 3893      4952516E 
 3893      00
 3894              	.LASF27:
 3895 03cf 55415254 		.ascii	"UART0_IRQn\000"
 3895      305F4952 
 3895      516E00
 3896              	.LASF153:
 3897 03da 504D435F 		.ascii	"PMC_USB\000"
 3897      55534200 
 3898              	.LASF187:
 3899 03e2 54435F46 		.ascii	"TC_FMR\000"
 3899      4D5200
 3900              	.LASF110:
 3901 03e9 50494F5F 		.ascii	"PIO_AIMMR\000"
 3901      41494D4D 
 3901      5200
 3902              	.LASF195:
 3903 03f3 4952516E 		.ascii	"IRQn\000"
 3903      00
 3904              	.LASF210:
 3905 03f8 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 3905      652F6D6F 
 3905      2F646F63 
 3905      2F737475 
 3905      6469756D 
 3906              	.LASF204:
 3907 0427 636F6E66 		.ascii	"configured\000"
 3907      69677572 
 3907      656400
 3908              	.LASF70:
 3909 0432 50494F5F 		.ascii	"PIO_OER\000"
 3909      4F455200 
 3910              	.LASF97:
 3911 043a 50494F5F 		.ascii	"PIO_IFSCER\000"
 3911      49465343 
 3911      455200
 3912              	.LASF121:
 3913 0445 50494F5F 		.ascii	"PIO_WPMR\000"
 3913      57504D52 
 3913      00
 3914              	.LASF61:
 3915 044e 49414252 		.ascii	"IABR\000"
 3915      00
 3916              	.LASF159:
 3917 0453 504D435F 		.ascii	"PMC_FSMR\000"
 3917      46534D52 
 3917      00
 3918              	.LASF48:
 3919 045c 50574D5F 		.ascii	"PWM_IRQn\000"
 3919      4952516E 
 3919      00
 3920              	.LASF174:
 3921 0465 54435F52 		.ascii	"TC_RC\000"
 3921      4300
 3922              	.LASF102:
 3923 046b 50494F5F 		.ascii	"PIO_PPDSR\000"
 3923      50504453 
ARM GAS  /tmp/cctnQ2aC.s 			page 103


 3923      5200
 3924              	.LASF55:
 3925 0475 49434552 		.ascii	"ICER\000"
 3925      00
 3926              	.LASF80:
 3927 047a 50494F5F 		.ascii	"PIO_ODSR\000"
 3927      4F445352 
 3927      00
 3928              	.LASF88:
 3929 0483 50494F5F 		.ascii	"PIO_MDSR\000"
 3929      4D445352 
 3929      00
 3930              	.LASF100:
 3931 048c 50494F5F 		.ascii	"PIO_PPDDR\000"
 3931      50504444 
 3931      5200
 3932              	.LASF203:
 3933 0496 4C45445F 		.ascii	"LED_blinking\000"
 3933      626C696E 
 3933      6B696E67 
 3933      00
 3934              	.LASF82:
 3935 04a3 50494F5F 		.ascii	"PIO_IER\000"
 3935      49455200 
 3936              	.LASF28:
 3937 04ab 55415254 		.ascii	"UART1_IRQn\000"
 3937      315F4952 
 3937      516E00
 3938              	.LASF13:
 3939 04b6 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 3939      72794D61 
 3939      6E616765 
 3939      6D656E74 
 3939      5F495251 
 3940              	.LASF87:
 3941 04cc 50494F5F 		.ascii	"PIO_MDDR\000"
 3941      4D444452 
 3941      00
 3942              	.LASF138:
 3943 04d5 50494F5F 		.ascii	"PIO_TNPR\000"
 3943      544E5052 
 3943      00
 3944              	.LASF172:
 3945 04de 54435F52 		.ascii	"TC_RA\000"
 3945      4100
 3946              	.LASF173:
 3947 04e4 54435F52 		.ascii	"TC_RB\000"
 3947      4200
 3948              	.LASF54:
 3949 04ea 52455345 		.ascii	"RESERVED0\000"
 3949      52564544 
 3949      3000
 3950              	.LASF58:
 3951 04f4 52455345 		.ascii	"RESERVED2\000"
 3951      52564544 
 3951      3200
 3952              	.LASF60:
ARM GAS  /tmp/cctnQ2aC.s 			page 104


 3953 04fe 52455345 		.ascii	"RESERVED3\000"
 3953      52564544 
 3953      3300
 3954              	.LASF62:
 3955 0508 52455345 		.ascii	"RESERVED4\000"
 3955      52564544 
 3955      3400
 3956              	.LASF63:
 3957 0512 52455345 		.ascii	"RESERVED5\000"
 3957      52564544 
 3957      3500
 3958              	.LASF116:
 3959 051c 50494F5F 		.ascii	"PIO_FELLSR\000"
 3959      46454C4C 
 3959      535200
 3960              	.LASF126:
 3961 0527 50494F5F 		.ascii	"PIO_PCMR\000"
 3961      50434D52 
 3961      00
 3962              	.LASF191:
 3963 0530 61747472 		.ascii	"attribute\000"
 3963      69627574 
 3963      6500
 3964              	.LASF1:
 3965 053a 756E7369 		.ascii	"unsigned char\000"
 3965      676E6564 
 3965      20636861 
 3965      7200
 3966              	.LASF36:
 3967 0548 54574930 		.ascii	"TWI0_IRQn\000"
 3967      5F495251 
 3967      6E00
 3968              	.LASF76:
 3969 0552 50494F5F 		.ascii	"PIO_IFSR\000"
 3969      49465352 
 3969      00
 3970              	.LASF207:
 3971 055b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3971      52784275 
 3971      66666572 
 3971      00
 3972              	.LASF209:
 3973 0568 626F6172 		.ascii	"board/led.c\000"
 3973      642F6C65 
 3973      642E6300 
 3974              	.LASF79:
 3975 0574 50494F5F 		.ascii	"PIO_CODR\000"
 3975      434F4452 
 3975      00
 3976              	.LASF84:
 3977 057d 50494F5F 		.ascii	"PIO_IMR\000"
 3977      494D5200 
 3978              	.LASF65:
 3979 0585 4E564943 		.ascii	"NVIC_Type\000"
 3979      5F547970 
 3979      6500
 3980              	.LASF171:
ARM GAS  /tmp/cctnQ2aC.s 			page 105


 3981 058f 54435F43 		.ascii	"TC_CV\000"
 3981      5600
 3982              	.LASF40:
 3983 0595 5443305F 		.ascii	"TC0_IRQn\000"
 3983      4952516E 
 3983      00
 3984              	.LASF75:
 3985 059e 50494F5F 		.ascii	"PIO_IFDR\000"
 3985      49464452 
 3985      00
 3986              	.LASF39:
 3987 05a7 5353435F 		.ascii	"SSC_IRQn\000"
 3987      4952516E 
 3987      00
 3988              	.LASF212:
 3989 05b0 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 3989      5F456E61 
 3989      626C6549 
 3989      525100
 3990              	.LASF166:
 3991 05bf 504D435F 		.ascii	"PMC_PCSR1\000"
 3991      50435352 
 3991      3100
 3992              	.LASF133:
 3993 05c9 50494F5F 		.ascii	"PIO_RCR\000"
 3993      52435200 
 3994              	.LASF156:
 3995 05d1 504D435F 		.ascii	"PMC_IDR\000"
 3995      49445200 
 3996              	.LASF168:
 3997 05d9 54435F43 		.ascii	"TC_CCR\000"
 3997      435200
 3998              	.LASF20:
 3999 05e0 53555043 		.ascii	"SUPC_IRQn\000"
 3999      5F495251 
 3999      6E00
 4000              	.LASF205:
 4001 05ea 6C656473 		.ascii	"leds\000"
 4001      00
 4002              	.LASF101:
 4003 05ef 50494F5F 		.ascii	"PIO_PPDER\000"
 4003      50504445 
 4003      5200
 4004              	.LASF42:
 4005 05f9 5443325F 		.ascii	"TC2_IRQn\000"
 4005      4952516E 
 4005      00
 4006              	.LASF52:
 4007 0602 4952516E 		.ascii	"IRQn_Type\000"
 4007      5F547970 
 4007      6500
 4008              	.LASF124:
 4009 060c 50494F5F 		.ascii	"PIO_SCHMITT\000"
 4009      5343484D 
 4009      49545400 
 4010              	.LASF47:
 4011 0618 44414343 		.ascii	"DACC_IRQn\000"
ARM GAS  /tmp/cctnQ2aC.s 			page 106


 4011      5F495251 
 4011      6E00
 4012              	.LASF86:
 4013 0622 50494F5F 		.ascii	"PIO_MDER\000"
 4013      4D444552 
 4013      00
 4014              	.LASF11:
 4015 062b 75696E74 		.ascii	"uint32_t\000"
 4015      33325F74 
 4015      00
 4016              	.LASF117:
 4017 0634 50494F5F 		.ascii	"PIO_REHLSR\000"
 4017      5245484C 
 4017      535200
 4018              	.LASF18:
 4019 063f 50656E64 		.ascii	"PendSV_IRQn\000"
 4019      53565F49 
 4019      52516E00 
 4020              	.LASF15:
 4021 064b 55736167 		.ascii	"UsageFault_IRQn\000"
 4021      65466175 
 4021      6C745F49 
 4021      52516E00 
 4022              	.LASF151:
 4023 065b 434B4752 		.ascii	"CKGR_PLLBR\000"
 4023      5F504C4C 
 4023      425200
 4024              	.LASF208:
 4025 0666 474E5520 		.ascii	"GNU C 4.6.1\000"
 4025      4320342E 
 4025      362E3100 
 4026              	.LASF177:
 4027 0672 54435F49 		.ascii	"TC_IDR\000"
 4027      445200
 4028              	.LASF186:
 4029 0679 54435F51 		.ascii	"TC_QISR\000"
 4029      49535200 
 4030              	.LASF37:
 4031 0681 54574931 		.ascii	"TWI1_IRQn\000"
 4031      5F495251 
 4031      6E00
 4032              	.LASF9:
 4033 068b 63686172 		.ascii	"char\000"
 4033      00
 4034              	.LASF31:
 4035 0690 50494F42 		.ascii	"PIOB_IRQn\000"
 4035      5F495251 
 4035      6E00
 4036              	.LASF109:
 4037 069a 50494F5F 		.ascii	"PIO_AIMDR\000"
 4037      41494D44 
 4037      5200
 4038              	.LASF175:
 4039 06a4 54435F53 		.ascii	"TC_SR\000"
 4039      5200
 4040              	.LASF201:
 4041 06aa 4C45445F 		.ascii	"LED_blinkstop\000"
ARM GAS  /tmp/cctnQ2aC.s 			page 107


 4041      626C696E 
 4041      6B73746F 
 4041      7000
 4042              	.LASF98:
 4043 06b8 50494F5F 		.ascii	"PIO_IFSCSR\000"
 4043      49465343 
 4043      535200
 4044              	.LASF144:
 4045 06c3 504D435F 		.ascii	"PMC_SCSR\000"
 4045      53435352 
 4045      00
 4046              	.LASF12:
 4047 06cc 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 4047      61736B61 
 4047      626C6549 
 4047      6E745F49 
 4047      52516E00 
 4048              	.LASF24:
 4049 06e0 5744545F 		.ascii	"WDT_IRQn\000"
 4049      4952516E 
 4049      00
 4050              	.LASF96:
 4051 06e9 50494F5F 		.ascii	"PIO_IFSCDR\000"
 4051      49465343 
 4051      445200
 4052              	.LASF74:
 4053 06f4 50494F5F 		.ascii	"PIO_IFER\000"
 4053      49464552 
 4053      00
 4054              	.LASF192:
 4055 06fd 7463636C 		.ascii	"tcclks\000"
 4055      6B7300
 4056              	.LASF136:
 4057 0704 50494F5F 		.ascii	"PIO_RNPR\000"
 4057      524E5052 
 4057      00
 4058              	.LASF155:
 4059 070d 504D435F 		.ascii	"PMC_IER\000"
 4059      49455200 
 4060              	.LASF17:
 4061 0715 44656275 		.ascii	"DebugMonitor_IRQn\000"
 4061      674D6F6E 
 4061      69746F72 
 4061      5F495251 
 4061      6E00
 4062              	.LASF142:
 4063 0727 504D435F 		.ascii	"PMC_SCER\000"
 4063      53434552 
 4063      00
 4064              	.LASF23:
 4065 0730 5254545F 		.ascii	"RTT_IRQn\000"
 4065      4952516E 
 4065      00
 4066              	.LASF131:
 4067 0739 50494F5F 		.ascii	"PIO_PCRHR\000"
 4067      50435248 
 4067      5200
ARM GAS  /tmp/cctnQ2aC.s 			page 108


 4068              	.LASF213:
 4069 0743 636F6E66 		.ascii	"configure\000"
 4069      69677572 
 4069      6500
 4070              	.LASF34:
 4071 074d 55534152 		.ascii	"USART1_IRQn\000"
 4071      54315F49 
 4071      52516E00 
 4072              	.LASF176:
 4073 0759 54435F49 		.ascii	"TC_IER\000"
 4073      455200
 4074              	.LASF181:
 4075 0760 54435F42 		.ascii	"TC_BCR\000"
 4075      435200
 4076              	.LASF32:
 4077 0767 50494F43 		.ascii	"PIOC_IRQn\000"
 4077      5F495251 
 4077      6E00
 4078              	.LASF113:
 4079 0771 50494F5F 		.ascii	"PIO_LSR\000"
 4079      4C535200 
 4080              	.LASF139:
 4081 0779 50494F5F 		.ascii	"PIO_TNCR\000"
 4081      544E4352 
 4081      00
 4082              	.LASF10:
 4083 0782 75696E74 		.ascii	"uint8_t\000"
 4083      385F7400 
 4084              	.LASF183:
 4085 078a 54435F51 		.ascii	"TC_QIER\000"
 4085      49455200 
 4086              	.LASF56:
 4087 0792 52534552 		.ascii	"RSERVED1\000"
 4087      56454431 
 4087      00
 4088              	.LASF64:
 4089 079b 53544952 		.ascii	"STIR\000"
 4089      00
 4090              	.LASF106:
 4091 07a0 50494F5F 		.ascii	"PIO_OWSR\000"
 4091      4F575352 
 4091      00
 4092              	.LASF160:
 4093 07a9 504D435F 		.ascii	"PMC_FSPR\000"
 4093      46535052 
 4093      00
 4094              	.LASF193:
 4095 07b2 5443305F 		.ascii	"TC0_IrqHandler\000"
 4095      49727148 
 4095      616E646C 
 4095      657200
 4096              	.LASF179:
 4097 07c1 54634368 		.ascii	"TcChannel\000"
 4097      616E6E65 
 4097      6C00
 4098              	.LASF38:
 4099 07cb 5350495F 		.ascii	"SPI_IRQn\000"
ARM GAS  /tmp/cctnQ2aC.s 			page 109


 4099      4952516E 
 4099      00
 4100              	.LASF161:
 4101 07d4 504D435F 		.ascii	"PMC_FOCR\000"
 4101      464F4352 
 4101      00
 4102              	.LASF214:
 4103 07dd 4C454473 		.ascii	"LEDs_configure\000"
 4103      5F636F6E 
 4103      66696775 
 4103      726500
 4104              	.LASF105:
 4105 07ec 50494F5F 		.ascii	"PIO_OWDR\000"
 4105      4F574452 
 4105      00
 4106              	.LASF78:
 4107 07f5 50494F5F 		.ascii	"PIO_SODR\000"
 4107      534F4452 
 4107      00
 4108              	.LASF185:
 4109 07fe 54435F51 		.ascii	"TC_QIMR\000"
 4109      494D5200 
 4110              	.LASF46:
 4111 0806 4144435F 		.ascii	"ADC_IRQn\000"
 4111      4952516E 
 4111      00
 4112              	.LASF25:
 4113 080f 504D435F 		.ascii	"PMC_IRQn\000"
 4113      4952516E 
 4113      00
 4114              	.LASF182:
 4115 0818 54435F42 		.ascii	"TC_BMR\000"
 4115      4D5200
 4116              	.LASF200:
 4117 081f 4C45445F 		.ascii	"LED_blinkwait\000"
 4117      626C696E 
 4117      6B776169 
 4117      7400
 4118              	.LASF163:
 4119 082d 504D435F 		.ascii	"PMC_WPSR\000"
 4119      57505352 
 4119      00
 4120              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/cctnQ2aC.s 			page 110


DEFINED SYMBOLS
                            *ABS*:00000000 led.c
     /tmp/cctnQ2aC.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/cctnQ2aC.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/cctnQ2aC.s:62     .bss:00000000 configured
     /tmp/cctnQ2aC.s:63     .bss:00000000 $d
     /tmp/cctnQ2aC.s:65     .rodata:00000000 $d
     /tmp/cctnQ2aC.s:68     .rodata:00000000 leds
     /tmp/cctnQ2aC.s:83     .bss:00000004 blinks
     /tmp/cctnQ2aC.s:86     .text.TC0_IrqHandler:00000000 $t
     /tmp/cctnQ2aC.s:91     .text.TC0_IrqHandler:00000000 TC0_IrqHandler
     /tmp/cctnQ2aC.s:299    .text.LED_tgl:00000000 LED_tgl
     /tmp/cctnQ2aC.s:177    .text.configure:00000000 $t
     /tmp/cctnQ2aC.s:181    .text.configure:00000000 configure
     /tmp/cctnQ2aC.s:257    .text.LEDs_configure:00000000 $t
     /tmp/cctnQ2aC.s:262    .text.LEDs_configure:00000000 LEDs_configure
     /tmp/cctnQ2aC.s:288    .rodata:00000018 .LC0
     /tmp/cctnQ2aC.s:291    .rodata:00000024 .LC1
     /tmp/cctnQ2aC.s:294    .text.LED_tgl:00000000 $t
     /tmp/cctnQ2aC.s:823    .rodata:0000004c __FUNCTION__.7528
     /tmp/cctnQ2aC.s:381    .text.LED_set:00000000 $t
     /tmp/cctnQ2aC.s:386    .text.LED_set:00000000 LED_set
     /tmp/cctnQ2aC.s:818    .rodata:00000044 __FUNCTION__.7534
     /tmp/cctnQ2aC.s:454    .text.LED_clr:00000000 $t
     /tmp/cctnQ2aC.s:459    .text.LED_clr:00000000 LED_clr
     /tmp/cctnQ2aC.s:813    .rodata:0000003c __FUNCTION__.7540
     /tmp/cctnQ2aC.s:527    .text.LED_get:00000000 $t
     /tmp/cctnQ2aC.s:532    .text.LED_get:00000000 LED_get
     /tmp/cctnQ2aC.s:808    .rodata:00000034 __FUNCTION__.7546
     /tmp/cctnQ2aC.s:605    .text.LED_blink:00000000 $t
     /tmp/cctnQ2aC.s:610    .text.LED_blink:00000000 LED_blink
     /tmp/cctnQ2aC.s:669    .text.LED_blinkwait:00000000 $t
     /tmp/cctnQ2aC.s:674    .text.LED_blinkwait:00000000 LED_blinkwait
     /tmp/cctnQ2aC.s:770    .text.LED_blinking:00000000 LED_blinking
     /tmp/cctnQ2aC.s:717    .text.LED_blinkstop:00000000 $t
     /tmp/cctnQ2aC.s:722    .text.LED_blinkstop:00000000 LED_blinkstop
     /tmp/cctnQ2aC.s:765    .text.LED_blinking:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TC_Stop
TC_FindMckDivisor
TC_Configure
PIO_Configure
__assert_func
TC_Start
