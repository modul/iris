ARM GAS  /tmp/ccZvkXpi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/ccZvkXpi.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccZvkXpi.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/ccZvkXpi.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccZvkXpi.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccZvkXpi.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/ccZvkXpi.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/ccZvkXpi.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/ccZvkXpi.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/ccZvkXpi.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/ccZvkXpi.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccZvkXpi.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/ccZvkXpi.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/ccZvkXpi.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/ccZvkXpi.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccZvkXpi.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccZvkXpi.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/ccZvkXpi.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccZvkXpi.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/ccZvkXpi.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccZvkXpi.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccZvkXpi.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccZvkXpi.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccZvkXpi.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccZvkXpi.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccZvkXpi.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccZvkXpi.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/ccZvkXpi.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.bss
  62              		.align	2
  63              	loops:
  64 0000 00000000 		.space	88
  64      00000000 
  64      00000000 
  64      00000000 
  64      00000000 
  65              		.data
  66              		.align	2
  67              		.type	conf, %object
  68              		.size	conf, 16
  69              	conf:
  70 0000 0000     		.short	0
  71 0002 FF0F     		.short	4095
  72 0004 0000     		.short	0
  73 0006 0000     		.short	0
  74 0008 00000000 		.space	8
  74      00000000 
  75              		.section	.rodata
  76              		.align	2
  77              	.LC0:
  78 0000 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
  78      52756E6E 
  78      696E6720 
  78      61742025 
  78      69204D48 
  79 0017 00       		.align	2
  80              	.LC1:
  81 0018 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
  81      77616974 
ARM GAS  /tmp/ccZvkXpi.s 			page 29


  81      696E6720 
  81      756E7469 
  81      6C205553 
  82 0043 00       		.align	2
  83              	.LC2:
  84 0044 257300   		.ascii	"%s\000"
  85 0047 00       		.align	2
  86              	.LC3:
  87 0048 3F206964 		.ascii	"? id\000"
  87      00
  88 004d 000000   		.align	2
  89              	.LC4:
  90 0050 3F206F70 		.ascii	"? opt\000"
  90      7400
  91 0056 0000     		.align	2
  92              	.LC5:
  93 0058 25692569 		.ascii	"%i%i%i\000"
  93      256900
  94 005f 00       		.align	2
  95              	.LC6:
  96 0060 6D6F6465 		.ascii	"mode\000"
  96      00
  97 0065 000000   		.align	2
  98              	.LC7:
  99 0068 3F206172 		.ascii	"? arg\000"
  99      6700
 100 006e 0000     		.align	2
 101              	.LC8:
 102 0070 25750A00 		.ascii	"%u\012\000"
 103              		.align	2
 104              	.LC9:
 105 0074 737000   		.ascii	"sp\000"
 106 0077 00       		.align	2
 107              	.LC10:
 108 0078 707600   		.ascii	"pv\000"
 109 007b 00       		.align	2
 110              	.LC11:
 111 007c 3F207265 		.ascii	"? read-only\000"
 111      61642D6F 
 111      6E6C7900 
 112              		.align	2
 113              	.LC12:
 114 0088 6572726F 		.ascii	"error\000"
 114      7200
 115 008e 0000     		.align	2
 116              	.LC13:
 117 0090 6B00     		.ascii	"k\000"
 118 0092 0000     		.align	2
 119              	.LC14:
 120 0094 25752025 		.ascii	"%u %u %u\012\000"
 120      75202575 
 120      0A00
 121 009e 0000     		.align	2
 122              	.LC15:
 123 00a0 6C696D69 		.ascii	"limit\000"
 123      7400
 124 00a6 0000     		.align	2
ARM GAS  /tmp/ccZvkXpi.s 			page 30


 125              	.LC16:
 126 00a8 25752025 		.ascii	"%u %u\012\000"
 126      750A00
 127 00af 00       		.align	2
 128              	.LC17:
 129 00b0 3F20636D 		.ascii	"? cmd\000"
 129      6400
 130 00b6 0000     		.section	.text.main,"ax",%progbits
 131              		.align	2
 132              		.global	main
 133              		.thumb
 134              		.thumb_func
 135              		.type	main, %function
 136              	main:
 137              	.LFB35:
 138              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "board.h"
   3:main.c        **** #include "controller.h"
   4:main.c        **** 
   5:main.c        **** #define match(a, b) (strcmp(a, b) == 0)
   6:main.c        **** 
   7:main.c        **** #define LOOPS 2 
   8:main.c        **** #define ADC_EOC_IRQS 3  // = (1 << 0)|(1<<1)|..|(1<<LOOPS-1)
   9:main.c        **** 
  10:main.c        **** static struct ctrl loops[LOOPS] = {{0}};
  11:main.c        **** 
  12:main.c        **** static struct {
  13:main.c        **** 	ctrlio_t min;
  14:main.c        **** 	ctrlio_t max;
  15:main.c        **** 	ctrlio_t yinit;
  16:main.c        **** 	ctrlio_t uinit;
  17:main.c        **** } conf[LOOPS] = {{0,MAX,0,0}};
  18:main.c        **** 
  19:main.c        **** static void init();
  20:main.c        **** 
  21:main.c        **** int main() 
  22:main.c        **** {
 139              		.loc 2 22 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 40
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 90B5     		push	{r4, r7, lr}
 144              	.LCFI3:
 145              		.cfi_def_cfa_offset 12
 146              		.cfi_offset 14, -4
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 4, -12
 149 0002 8DB0     		sub	sp, sp, #52
 150              	.LCFI4:
 151              		.cfi_def_cfa_offset 64
 152 0004 02AF     		add	r7, sp, #8
 153              	.LCFI5:
 154              		.cfi_def_cfa 7, 56
  23:main.c        **** 	char *line;
  24:main.c        **** 	char opt[8];
  25:main.c        **** 	char cmd;
ARM GAS  /tmp/ccZvkXpi.s 			page 31


  26:main.c        **** 
  27:main.c        **** 	int argc;
  28:main.c        **** 	int argv[3];
  29:main.c        **** 	unsigned id = 0;
 155              		.loc 2 29 0
 156 0006 4FF00003 		mov	r3, #0
 157 000a 3B62     		str	r3, [r7, #32]
  30:main.c        **** 
  31:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 158              		.loc 2 31 0
 159 000c 40F20003 		movw	r3, #:lower16:_impure_ptr
 160 0010 C0F20003 		movt	r3, #:upper16:_impure_ptr
 161 0014 1B68     		ldr	r3, [r3, #0]
 162 0016 DB68     		ldr	r3, [r3, #12]
 163 0018 1846     		mov	r0, r3
 164 001a 40F20001 		movw	r1, #:lower16:.LC0
 165 001e C0F20001 		movt	r1, #:upper16:.LC0
 166 0022 4FF03002 		mov	r2, #48
 167 0026 FFF7FEFF 		bl	fiprintf
  32:main.c        **** 
  33:main.c        **** 	/* WDT off */
  34:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 168              		.loc 2 34 0
 169 002a 41F25043 		movw	r3, #5200
 170 002e C4F20E03 		movt	r3, 16398
 171 0032 4FF40042 		mov	r2, #32768
 172 0036 5A60     		str	r2, [r3, #4]
  35:main.c        **** 
  36:main.c        **** 	/* configure hardware */
  37:main.c        **** 	init();
 173              		.loc 2 37 0
 174 0038 FFF7FEFF 		bl	init
  38:main.c        **** 
  39:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 175              		.loc 2 39 0
 176 003c 40F20003 		movw	r3, #:lower16:_impure_ptr
 177 0040 C0F20003 		movt	r3, #:upper16:_impure_ptr
 178 0044 1B68     		ldr	r3, [r3, #0]
 179 0046 DB68     		ldr	r3, [r3, #12]
 180 0048 1846     		mov	r0, r3
 181 004a 40F20001 		movw	r1, #:lower16:.LC1
 182 004e C0F20001 		movt	r1, #:upper16:.LC1
 183 0052 FFF7FEFF 		bl	fiprintf
  40:main.c        **** 	while (!USBC_isConfigured());
 184              		.loc 2 40 0
 185 0056 00BF     		nop
 186              	.L3:
 187              		.loc 2 40 0 is_stmt 0 discriminator 1
 188 0058 FFF7FEFF 		bl	USBC_isConfigured
 189 005c 0346     		mov	r3, r0
 190 005e 002B     		cmp	r3, #0
 191 0060 FAD0     		beq	.L3
  41:main.c        **** 
  42:main.c        **** 	LED_blink(statusled, 5);
 192              		.loc 2 42 0 is_stmt 1
 193 0062 4FF00000 		mov	r0, #0
 194 0066 4FF00501 		mov	r1, #5
ARM GAS  /tmp/ccZvkXpi.s 			page 32


 195 006a FFF7FEFF 		bl	LED_blink
  43:main.c        **** 
  44:main.c        **** 	setbuf(stdout, NULL);
 196              		.loc 2 44 0
 197 006e 40F20003 		movw	r3, #:lower16:_impure_ptr
 198 0072 C0F20003 		movt	r3, #:upper16:_impure_ptr
 199 0076 1B68     		ldr	r3, [r3, #0]
 200 0078 9B68     		ldr	r3, [r3, #8]
 201 007a 1846     		mov	r0, r3
 202 007c 4FF00001 		mov	r1, #0
 203 0080 FFF7FEFF 		bl	setbuf
 204              	.L34:
  45:main.c        **** 
  46:main.c        **** 	while (1) {
  47:main.c        **** 		if(!USBC_hasData())
 205              		.loc 2 47 0
 206 0084 FFF7FEFF 		bl	USBC_hasData
 207 0088 0346     		mov	r3, r0
 208 008a 002B     		cmp	r3, #0
 209 008c 00F02E82 		beq	.L36
 210              	.L4:
  48:main.c        **** 			continue;
  49:main.c        **** 
  50:main.c        **** 		gets(line);
 211              		.loc 2 50 0
 212 0090 786A     		ldr	r0, [r7, #36]
 213 0092 FFF7FEFF 		bl	gets
  51:main.c        **** #ifdef ECHO
  52:main.c        **** 		puts(line);
  53:main.c        **** #endif
  54:main.c        **** 		switch ((cmd=*line)) {
 214              		.loc 2 54 0
 215 0096 7B6A     		ldr	r3, [r7, #36]
 216 0098 1B78     		ldrb	r3, [r3, #0]
 217 009a FB77     		strb	r3, [r7, #31]
 218 009c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 219 009e A3F16703 		sub	r3, r3, #103
 220 00a2 0C2B     		cmp	r3, #12
 221 00a4 00F21B82 		bhi	.L6
 222 00a8 01A2     		adr	r2, .L9
 223 00aa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 224 00ae 00BF     		.align	2
 225              	.L9:
 226 00b0 E5000000 		.word	.L7+1
 227 00b4 DF040000 		.word	.L6+1
 228 00b8 DF040000 		.word	.L6+1
 229 00bc DF040000 		.word	.L6+1
 230 00c0 DF040000 		.word	.L6+1
 231 00c4 F1040000 		.word	.L37+1
 232 00c8 DF040000 		.word	.L6+1
 233 00cc DF040000 		.word	.L6+1
 234 00d0 DF040000 		.word	.L6+1
 235 00d4 DF040000 		.word	.L6+1
 236 00d8 F1040000 		.word	.L37+1
 237 00dc DF040000 		.word	.L6+1
 238 00e0 E5000000 		.word	.L7+1
 239              	.L7:
ARM GAS  /tmp/ccZvkXpi.s 			page 33


  55:main.c        **** 			case 's':
  56:main.c        **** 			case 'g':
  57:main.c        **** 				// get ID (0-9 for loop setting)
  58:main.c        **** 				if (line[1]-'0' < LOOPS)
 240              		.loc 2 58 0
 241 00e4 7B6A     		ldr	r3, [r7, #36]
 242 00e6 03F10103 		add	r3, r3, #1
 243 00ea 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 244 00ec A3F13003 		sub	r3, r3, #48
 245 00f0 012B     		cmp	r3, #1
 246 00f2 18DC     		bgt	.L10
  59:main.c        **** 					id = line[1]-'0';
 247              		.loc 2 59 0
 248 00f4 7B6A     		ldr	r3, [r7, #36]
 249 00f6 03F10103 		add	r3, r3, #1
 250 00fa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 251 00fc A3F13003 		sub	r3, r3, #48
 252 0100 3B62     		str	r3, [r7, #32]
  60:main.c        **** 				else {
  61:main.c        **** 					puts("? id");
  62:main.c        **** 					break;
  63:main.c        **** 				}
  64:main.c        **** 				
  65:main.c        **** 				line = line+2;
 253              		.loc 2 65 0
 254 0102 7B6A     		ldr	r3, [r7, #36]
 255 0104 03F10203 		add	r3, r3, #2
 256 0108 7B62     		str	r3, [r7, #36]
  66:main.c        **** 
  67:main.c        **** 				// get option (max 7 characters)
  68:main.c        **** 				if (sscanf(line, "%s", opt) != 1) {
 257              		.loc 2 68 0
 258 010a 07F11003 		add	r3, r7, #16
 259 010e 786A     		ldr	r0, [r7, #36]
 260 0110 40F20001 		movw	r1, #:lower16:.LC2
 261 0114 C0F20001 		movt	r1, #:upper16:.LC2
 262 0118 1A46     		mov	r2, r3
 263 011a FFF7FEFF 		bl	siscanf
 264 011e 0346     		mov	r3, r0
 265 0120 012B     		cmp	r3, #1
 266 0122 07D1     		bne	.L11
 267 0124 0DE0     		b	.L35
 268              	.L10:
  61:main.c        **** 					puts("? id");
 269              		.loc 2 61 0
 270 0126 40F20000 		movw	r0, #:lower16:.LC3
 271 012a C0F20000 		movt	r0, #:upper16:.LC3
 272 012e FFF7FEFF 		bl	puts
  62:main.c        **** 					break;
 273              		.loc 2 62 0
 274 0132 DEE1     		b	.L5
 275              	.L11:
  69:main.c        **** 					puts("? opt");
 276              		.loc 2 69 0
 277 0134 40F20000 		movw	r0, #:lower16:.LC4
 278 0138 C0F20000 		movt	r0, #:upper16:.LC4
 279 013c FFF7FEFF 		bl	puts
ARM GAS  /tmp/ccZvkXpi.s 			page 34


  70:main.c        **** 					break;
 280              		.loc 2 70 0
 281 0140 D7E1     		b	.L5
 282              	.L35:
  71:main.c        **** 				}
  72:main.c        **** 
  73:main.c        **** 				// get arguments (3)
  74:main.c        **** 				argc = sscanf(line, "%i%i%i", argv, argv+1, argv+2);
 283              		.loc 2 74 0
 284 0142 07F10402 		add	r2, r7, #4
 285 0146 07F10403 		add	r3, r7, #4
 286 014a 03F10403 		add	r3, r3, #4
 287 014e 07F10401 		add	r1, r7, #4
 288 0152 01F10801 		add	r1, r1, #8
 289 0156 0091     		str	r1, [sp, #0]
 290 0158 786A     		ldr	r0, [r7, #36]
 291 015a 40F20001 		movw	r1, #:lower16:.LC5
 292 015e C0F20001 		movt	r1, #:upper16:.LC5
 293 0162 FFF7FEFF 		bl	siscanf
 294 0166 B861     		str	r0, [r7, #24]
  75:main.c        **** 
  76:main.c        **** 				// check option
  77:main.c        **** 				if (match("mode", opt)) {
 295              		.loc 2 77 0
 296 0168 07F11003 		add	r3, r7, #16
 297 016c 40F20000 		movw	r0, #:lower16:.LC6
 298 0170 C0F20000 		movt	r0, #:upper16:.LC6
 299 0174 1946     		mov	r1, r3
 300 0176 FFF7FEFF 		bl	strcmp
 301 017a 0346     		mov	r3, r0
 302 017c 002B     		cmp	r3, #0
 303 017e 38D1     		bne	.L13
  78:main.c        **** 					if (cmd == 's') {
 304              		.loc 2 78 0
 305 0180 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 306 0182 732B     		cmp	r3, #115
 307 0184 22D1     		bne	.L14
  79:main.c        **** 						if (argc < 1) {
 308              		.loc 2 79 0
 309 0186 BB69     		ldr	r3, [r7, #24]
 310 0188 002B     		cmp	r3, #0
 311 018a 06DC     		bgt	.L15
  80:main.c        **** 							puts("? arg");
 312              		.loc 2 80 0
 313 018c 40F20000 		movw	r0, #:lower16:.LC7
 314 0190 C0F20000 		movt	r0, #:upper16:.LC7
 315 0194 FFF7FEFF 		bl	puts
  81:main.c        **** 							break;
 316              		.loc 2 81 0
 317 0198 ABE1     		b	.L5
 318              	.L15:
  82:main.c        **** 						}
  83:main.c        **** 						if (*argv > STOP || *argv < OFF)
 319              		.loc 2 83 0
 320 019a 7B68     		ldr	r3, [r7, #4]
 321 019c 032B     		cmp	r3, #3
 322 019e 02DC     		bgt	.L16
ARM GAS  /tmp/ccZvkXpi.s 			page 35


 323              		.loc 2 83 0 is_stmt 0 discriminator 1
 324 01a0 7B68     		ldr	r3, [r7, #4]
 325 01a2 002B     		cmp	r3, #0
 326 01a4 02DA     		bge	.L17
 327              	.L16:
  84:main.c        **** 							*argv = OFF;				
 328              		.loc 2 84 0 is_stmt 1
 329 01a6 4FF00003 		mov	r3, #0
 330 01aa 7B60     		str	r3, [r7, #4]
 331              	.L17:
  85:main.c        **** 						mode(*argv, &loops[id]);
 332              		.loc 2 85 0
 333 01ac 7B68     		ldr	r3, [r7, #4]
 334 01ae DAB2     		uxtb	r2, r3
 335 01b0 3B6A     		ldr	r3, [r7, #32]
 336 01b2 4FF02C01 		mov	r1, #44
 337 01b6 01FB03F1 		mul	r1, r1, r3
 338 01ba 40F20003 		movw	r3, #:lower16:loops
 339 01be C0F20003 		movt	r3, #:upper16:loops
 340 01c2 CB18     		adds	r3, r1, r3
 341 01c4 1046     		mov	r0, r2
 342 01c6 1946     		mov	r1, r3
 343 01c8 FFF7FEFF 		bl	mode
 344              	.L14:
  86:main.c        **** 					}
  87:main.c        **** 					printf("%u\n", loops[id].mode);
 345              		.loc 2 87 0
 346 01cc 40F20003 		movw	r3, #:lower16:loops
 347 01d0 C0F20003 		movt	r3, #:upper16:loops
 348 01d4 3A6A     		ldr	r2, [r7, #32]
 349 01d6 4FF02C01 		mov	r1, #44
 350 01da 01FB02F2 		mul	r2, r1, r2
 351 01de 9B18     		adds	r3, r3, r2
 352 01e0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 353 01e2 40F20000 		movw	r0, #:lower16:.LC8
 354 01e6 C0F20000 		movt	r0, #:upper16:.LC8
 355 01ea 1946     		mov	r1, r3
 356 01ec FFF7FEFF 		bl	iprintf
 357 01f0 1FE1     		b	.L18
 358              	.L13:
  88:main.c        **** 				}
  89:main.c        **** 				else if (match("sp", opt)) {
 359              		.loc 2 89 0
 360 01f2 07F11003 		add	r3, r7, #16
 361 01f6 40F20000 		movw	r0, #:lower16:.LC9
 362 01fa C0F20000 		movt	r0, #:upper16:.LC9
 363 01fe 1946     		mov	r1, r3
 364 0200 FFF7FEFF 		bl	strcmp
 365 0204 0346     		mov	r3, r0
 366 0206 002B     		cmp	r3, #0
 367 0208 4AD1     		bne	.L19
  90:main.c        **** 					if (cmd == 's') {
 368              		.loc 2 90 0
 369 020a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 370 020c 732B     		cmp	r3, #115
 371 020e 34D1     		bne	.L20
  91:main.c        **** 						if (argc < 1) {
ARM GAS  /tmp/ccZvkXpi.s 			page 36


 372              		.loc 2 91 0
 373 0210 BB69     		ldr	r3, [r7, #24]
 374 0212 002B     		cmp	r3, #0
 375 0214 06DC     		bgt	.L21
  92:main.c        **** 							puts("? arg");
 376              		.loc 2 92 0
 377 0216 40F20000 		movw	r0, #:lower16:.LC7
 378 021a C0F20000 		movt	r0, #:upper16:.LC7
 379 021e FFF7FEFF 		bl	puts
  93:main.c        **** 							break;
 380              		.loc 2 93 0
 381 0222 66E1     		b	.L5
 382              	.L21:
  94:main.c        **** 						}
  95:main.c        **** 						loops[id].SP = LIMIT(*argv, conf[id].min, conf[id].max);
 383              		.loc 2 95 0
 384 0224 7A68     		ldr	r2, [r7, #4]
 385 0226 40F20003 		movw	r3, #:lower16:conf
 386 022a C0F20003 		movt	r3, #:upper16:conf
 387 022e 396A     		ldr	r1, [r7, #32]
 388 0230 33F83130 		ldrh	r3, [r3, r1, lsl #3]
 389 0234 9A42     		cmp	r2, r3
 390 0236 07DA     		bge	.L22
 391              		.loc 2 95 0 is_stmt 0 discriminator 1
 392 0238 40F20003 		movw	r3, #:lower16:conf
 393 023c C0F20003 		movt	r3, #:upper16:conf
 394 0240 3A6A     		ldr	r2, [r7, #32]
 395 0242 33F83220 		ldrh	r2, [r3, r2, lsl #3]
 396 0246 0DE0     		b	.L23
 397              	.L22:
 398              		.loc 2 95 0 discriminator 2
 399 0248 7968     		ldr	r1, [r7, #4]
 400 024a 40F20002 		movw	r2, #:lower16:conf
 401 024e C0F20002 		movt	r2, #:upper16:conf
 402 0252 3B6A     		ldr	r3, [r7, #32]
 403 0254 4FEAC303 		lsl	r3, r3, #3
 404 0258 D318     		adds	r3, r2, r3
 405 025a 5B88     		ldrh	r3, [r3, #2]
 406 025c 9942     		cmp	r1, r3
 407 025e B8BF     		it	lt
 408 0260 0B46     		movlt	r3, r1
 409 0262 9AB2     		uxth	r2, r3
 410              	.L23:
 411              		.loc 2 95 0 discriminator 3
 412 0264 40F20003 		movw	r3, #:lower16:loops
 413 0268 C0F20003 		movt	r3, #:upper16:loops
 414 026c 396A     		ldr	r1, [r7, #32]
 415 026e 4FF02C00 		mov	r0, #44
 416 0272 00FB01F1 		mul	r1, r0, r1
 417 0276 5B18     		adds	r3, r3, r1
 418 0278 5A80     		strh	r2, [r3, #2]	@ movhi
 419              	.L20:
  96:main.c        **** 					}
  97:main.c        **** 					printf("%u\n", loops[id].SP);
 420              		.loc 2 97 0 is_stmt 1
 421 027a 40F20003 		movw	r3, #:lower16:loops
 422 027e C0F20003 		movt	r3, #:upper16:loops
ARM GAS  /tmp/ccZvkXpi.s 			page 37


 423 0282 3A6A     		ldr	r2, [r7, #32]
 424 0284 4FF02C01 		mov	r1, #44
 425 0288 01FB02F2 		mul	r2, r1, r2
 426 028c 9B18     		adds	r3, r3, r2
 427 028e 5B88     		ldrh	r3, [r3, #2]
 428 0290 40F20000 		movw	r0, #:lower16:.LC8
 429 0294 C0F20000 		movt	r0, #:upper16:.LC8
 430 0298 1946     		mov	r1, r3
 431 029a FFF7FEFF 		bl	iprintf
 432 029e C8E0     		b	.L18
 433              	.L19:
  98:main.c        **** 				}
  99:main.c        **** 				else if (match("pv", opt)) {
 434              		.loc 2 99 0
 435 02a0 07F11003 		add	r3, r7, #16
 436 02a4 40F20000 		movw	r0, #:lower16:.LC10
 437 02a8 C0F20000 		movt	r0, #:upper16:.LC10
 438 02ac 1946     		mov	r1, r3
 439 02ae FFF7FEFF 		bl	strcmp
 440 02b2 0346     		mov	r3, r0
 441 02b4 002B     		cmp	r3, #0
 442 02b6 1DD1     		bne	.L24
 100:main.c        **** 					if (cmd == 's')
 443              		.loc 2 100 0
 444 02b8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 445 02ba 732B     		cmp	r3, #115
 446 02bc 05D1     		bne	.L25
 101:main.c        **** 						puts("? read-only");
 447              		.loc 2 101 0
 448 02be 40F20000 		movw	r0, #:lower16:.LC11
 449 02c2 C0F20000 		movt	r0, #:upper16:.LC11
 450 02c6 FFF7FEFF 		bl	puts
 451              	.L25:
 102:main.c        **** 					printf("%u\n", loops[id]._x);
 452              		.loc 2 102 0
 453 02ca 40F20003 		movw	r3, #:lower16:loops
 454 02ce C0F20003 		movt	r3, #:upper16:loops
 455 02d2 3A6A     		ldr	r2, [r7, #32]
 456 02d4 4FF02C01 		mov	r1, #44
 457 02d8 01FB02F2 		mul	r2, r1, r2
 458 02dc 9B18     		adds	r3, r3, r2
 459 02de 03F12003 		add	r3, r3, #32
 460 02e2 9B88     		ldrh	r3, [r3, #4]
 461 02e4 40F20000 		movw	r0, #:lower16:.LC8
 462 02e8 C0F20000 		movt	r0, #:upper16:.LC8
 463 02ec 1946     		mov	r1, r3
 464 02ee FFF7FEFF 		bl	iprintf
 465 02f2 9EE0     		b	.L18
 466              	.L24:
 103:main.c        **** 				}
 104:main.c        **** 				else if (match("error", opt)) {
 467              		.loc 2 104 0
 468 02f4 07F11003 		add	r3, r7, #16
 469 02f8 40F20000 		movw	r0, #:lower16:.LC12
 470 02fc C0F20000 		movt	r0, #:upper16:.LC12
 471 0300 1946     		mov	r1, r3
 472 0302 FFF7FEFF 		bl	strcmp
ARM GAS  /tmp/ccZvkXpi.s 			page 38


 473 0306 0346     		mov	r3, r0
 474 0308 002B     		cmp	r3, #0
 475 030a 1DD1     		bne	.L26
 105:main.c        **** 					if (cmd == 's')
 476              		.loc 2 105 0
 477 030c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 478 030e 732B     		cmp	r3, #115
 479 0310 05D1     		bne	.L27
 106:main.c        **** 						puts("? read-only");
 480              		.loc 2 106 0
 481 0312 40F20000 		movw	r0, #:lower16:.LC11
 482 0316 C0F20000 		movt	r0, #:upper16:.LC11
 483 031a FFF7FEFF 		bl	puts
 484              	.L27:
 107:main.c        **** 					printf("%u\n", loops[id]._e);
 485              		.loc 2 107 0
 486 031e 40F20003 		movw	r3, #:lower16:loops
 487 0322 C0F20003 		movt	r3, #:upper16:loops
 488 0326 3A6A     		ldr	r2, [r7, #32]
 489 0328 4FF02C01 		mov	r1, #44
 490 032c 01FB02F2 		mul	r2, r1, r2
 491 0330 9B18     		adds	r3, r3, r2
 492 0332 03F11403 		add	r3, r3, #20
 493 0336 1B68     		ldr	r3, [r3, #0]
 494 0338 40F20000 		movw	r0, #:lower16:.LC8
 495 033c C0F20000 		movt	r0, #:upper16:.LC8
 496 0340 1946     		mov	r1, r3
 497 0342 FFF7FEFF 		bl	iprintf
 498 0346 74E0     		b	.L18
 499              	.L26:
 108:main.c        **** 				}
 109:main.c        **** 				else if (match("k", opt)) {
 500              		.loc 2 109 0
 501 0348 07F11003 		add	r3, r7, #16
 502 034c 40F20000 		movw	r0, #:lower16:.LC13
 503 0350 C0F20000 		movt	r0, #:upper16:.LC13
 504 0354 1946     		mov	r1, r3
 505 0356 FFF7FEFF 		bl	strcmp
 506 035a 0346     		mov	r3, r0
 507 035c 002B     		cmp	r3, #0
 508 035e 68D1     		bne	.L18
 110:main.c        **** 					if (cmd == 's') {
 509              		.loc 2 110 0
 510 0360 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 511 0362 732B     		cmp	r3, #115
 512 0364 36D1     		bne	.L28
 111:main.c        **** 						if (argc < 3) {
 513              		.loc 2 111 0
 514 0366 BB69     		ldr	r3, [r7, #24]
 515 0368 022B     		cmp	r3, #2
 516 036a 06DC     		bgt	.L29
 112:main.c        **** 							puts("? arg");
 517              		.loc 2 112 0
 518 036c 40F20000 		movw	r0, #:lower16:.LC7
 519 0370 C0F20000 		movt	r0, #:upper16:.LC7
 520 0374 FFF7FEFF 		bl	puts
 113:main.c        **** 							break;
ARM GAS  /tmp/ccZvkXpi.s 			page 39


 521              		.loc 2 113 0
 522 0378 BBE0     		b	.L5
 523              	.L29:
 114:main.c        **** 						}
 115:main.c        **** 						loops[id].Kp = argv[0];
 524              		.loc 2 115 0
 525 037a 7B68     		ldr	r3, [r7, #4]
 526 037c 9AB2     		uxth	r2, r3
 527 037e 40F20003 		movw	r3, #:lower16:loops
 528 0382 C0F20003 		movt	r3, #:upper16:loops
 529 0386 396A     		ldr	r1, [r7, #32]
 530 0388 4FF02C00 		mov	r0, #44
 531 038c 00FB01F1 		mul	r1, r0, r1
 532 0390 5B18     		adds	r3, r3, r1
 533 0392 03F10803 		add	r3, r3, #8
 534 0396 9A80     		strh	r2, [r3, #4]	@ movhi
 116:main.c        **** 						loops[id].Ki = argv[1];
 535              		.loc 2 116 0
 536 0398 BB68     		ldr	r3, [r7, #8]
 537 039a 9AB2     		uxth	r2, r3
 538 039c 40F20003 		movw	r3, #:lower16:loops
 539 03a0 C0F20003 		movt	r3, #:upper16:loops
 540 03a4 396A     		ldr	r1, [r7, #32]
 541 03a6 4FF02C00 		mov	r0, #44
 542 03aa 00FB01F1 		mul	r1, r0, r1
 543 03ae 5B18     		adds	r3, r3, r1
 544 03b0 03F10803 		add	r3, r3, #8
 545 03b4 DA80     		strh	r2, [r3, #6]	@ movhi
 117:main.c        **** 						loops[id].Kd = argv[2];
 546              		.loc 2 117 0
 547 03b6 FB68     		ldr	r3, [r7, #12]
 548 03b8 9AB2     		uxth	r2, r3
 549 03ba 40F20003 		movw	r3, #:lower16:loops
 550 03be C0F20003 		movt	r3, #:upper16:loops
 551 03c2 396A     		ldr	r1, [r7, #32]
 552 03c4 4FF02C00 		mov	r0, #44
 553 03c8 00FB01F1 		mul	r1, r0, r1
 554 03cc 5B18     		adds	r3, r3, r1
 555 03ce 03F11003 		add	r3, r3, #16
 556 03d2 1A80     		strh	r2, [r3, #0]	@ movhi
 557              	.L28:
 118:main.c        **** 					}
 119:main.c        **** 					printf("%u %u %u\n", loops[id].Kp, loops[id].Ki, loops[id].Kd);
 558              		.loc 2 119 0
 559 03d4 40F20003 		movw	r3, #:lower16:loops
 560 03d8 C0F20003 		movt	r3, #:upper16:loops
 561 03dc 3A6A     		ldr	r2, [r7, #32]
 562 03de 4FF02C01 		mov	r1, #44
 563 03e2 01FB02F2 		mul	r2, r1, r2
 564 03e6 9B18     		adds	r3, r3, r2
 565 03e8 03F10803 		add	r3, r3, #8
 566 03ec 9B88     		ldrh	r3, [r3, #4]
 567 03ee 1946     		mov	r1, r3
 568 03f0 40F20003 		movw	r3, #:lower16:loops
 569 03f4 C0F20003 		movt	r3, #:upper16:loops
 570 03f8 3A6A     		ldr	r2, [r7, #32]
 571 03fa 4FF02C00 		mov	r0, #44
ARM GAS  /tmp/ccZvkXpi.s 			page 40


 572 03fe 00FB02F2 		mul	r2, r0, r2
 573 0402 9B18     		adds	r3, r3, r2
 574 0404 03F10803 		add	r3, r3, #8
 575 0408 DB88     		ldrh	r3, [r3, #6]
 576 040a 1A46     		mov	r2, r3
 577 040c 40F20003 		movw	r3, #:lower16:loops
 578 0410 C0F20003 		movt	r3, #:upper16:loops
 579 0414 386A     		ldr	r0, [r7, #32]
 580 0416 4FF02C04 		mov	r4, #44
 581 041a 04FB00F0 		mul	r0, r4, r0
 582 041e 1B18     		adds	r3, r3, r0
 583 0420 03F11003 		add	r3, r3, #16
 584 0424 1B88     		ldrh	r3, [r3, #0]
 585 0426 40F20000 		movw	r0, #:lower16:.LC14
 586 042a C0F20000 		movt	r0, #:upper16:.LC14
 587 042e FFF7FEFF 		bl	iprintf
 588              	.L18:
 120:main.c        **** 				}
 121:main.c        **** 				if (match("limit", opt)) {
 589              		.loc 2 121 0
 590 0432 07F11003 		add	r3, r7, #16
 591 0436 40F20000 		movw	r0, #:lower16:.LC15
 592 043a C0F20000 		movt	r0, #:upper16:.LC15
 593 043e 1946     		mov	r1, r3
 594 0440 FFF7FEFF 		bl	strcmp
 595 0444 0346     		mov	r3, r0
 596 0446 002B     		cmp	r3, #0
 597 0448 42D1     		bne	.L30
 122:main.c        **** 					if (cmd == 's') {
 598              		.loc 2 122 0
 599 044a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 600 044c 732B     		cmp	r3, #115
 601 044e 26D1     		bne	.L31
 123:main.c        **** 						if (argc < 2) {
 602              		.loc 2 123 0
 603 0450 BB69     		ldr	r3, [r7, #24]
 604 0452 012B     		cmp	r3, #1
 605 0454 06DC     		bgt	.L32
 124:main.c        **** 							puts("? arg");
 606              		.loc 2 124 0
 607 0456 40F20000 		movw	r0, #:lower16:.LC7
 608 045a C0F20000 		movt	r0, #:upper16:.LC7
 609 045e FFF7FEFF 		bl	puts
 125:main.c        **** 							break;
 610              		.loc 2 125 0
 611 0462 46E0     		b	.L5
 612              	.L32:
 126:main.c        **** 						}
 127:main.c        **** 						conf[id].min = argv[0] < argv[1] ? argv[0] : argv[1];
 613              		.loc 2 127 0
 614 0464 BA68     		ldr	r2, [r7, #8]
 615 0466 7B68     		ldr	r3, [r7, #4]
 616 0468 9A42     		cmp	r2, r3
 617 046a B8BF     		it	lt
 618 046c 1346     		movlt	r3, r2
 619 046e 99B2     		uxth	r1, r3
 620 0470 40F20003 		movw	r3, #:lower16:conf
ARM GAS  /tmp/ccZvkXpi.s 			page 41


 621 0474 C0F20003 		movt	r3, #:upper16:conf
 622 0478 3A6A     		ldr	r2, [r7, #32]
 623 047a 23F83210 		strh	r1, [r3, r2, lsl #3]	@ movhi
 128:main.c        **** 						conf[id].max = argv[0] < argv[1] ? argv[1] : argv[0];
 624              		.loc 2 128 0
 625 047e 7A68     		ldr	r2, [r7, #4]
 626 0480 BB68     		ldr	r3, [r7, #8]
 627 0482 9A42     		cmp	r2, r3
 628 0484 A8BF     		it	ge
 629 0486 1346     		movge	r3, r2
 630 0488 99B2     		uxth	r1, r3
 631 048a 40F20002 		movw	r2, #:lower16:conf
 632 048e C0F20002 		movt	r2, #:upper16:conf
 633 0492 3B6A     		ldr	r3, [r7, #32]
 634 0494 4FEAC303 		lsl	r3, r3, #3
 635 0498 D318     		adds	r3, r2, r3
 636 049a 0A46     		mov	r2, r1	@ movhi
 637 049c 5A80     		strh	r2, [r3, #2]	@ movhi
 638              	.L31:
 129:main.c        **** 					}
 130:main.c        **** 					printf("%u %u\n", conf[id].min, conf[id].max);
 639              		.loc 2 130 0
 640 049e 40F20003 		movw	r3, #:lower16:conf
 641 04a2 C0F20003 		movt	r3, #:upper16:conf
 642 04a6 3A6A     		ldr	r2, [r7, #32]
 643 04a8 33F83230 		ldrh	r3, [r3, r2, lsl #3]
 644 04ac 1946     		mov	r1, r3
 645 04ae 40F20002 		movw	r2, #:lower16:conf
 646 04b2 C0F20002 		movt	r2, #:upper16:conf
 647 04b6 3B6A     		ldr	r3, [r7, #32]
 648 04b8 4FEAC303 		lsl	r3, r3, #3
 649 04bc D318     		adds	r3, r2, r3
 650 04be 5B88     		ldrh	r3, [r3, #2]
 651 04c0 40F20000 		movw	r0, #:lower16:.LC16
 652 04c4 C0F20000 		movt	r0, #:upper16:.LC16
 653 04c8 1A46     		mov	r2, r3
 654 04ca FFF7FEFF 		bl	iprintf
 131:main.c        **** 				}
 132:main.c        **** 				else 
 133:main.c        **** 					puts("? opt");
 134:main.c        **** 				break;
 655              		.loc 2 134 0
 656 04ce 10E0     		b	.L5
 657              	.L30:
 133:main.c        **** 					puts("? opt");
 658              		.loc 2 133 0
 659 04d0 40F20000 		movw	r0, #:lower16:.LC4
 660 04d4 C0F20000 		movt	r0, #:upper16:.LC4
 661 04d8 FFF7FEFF 		bl	puts
 662              		.loc 2 134 0
 663 04dc 09E0     		b	.L5
 664              	.L6:
 135:main.c        **** 			case 'l':
 136:main.c        **** 			case 'q':
 137:main.c        **** 				break;
 138:main.c        **** 			default:
 139:main.c        **** 				puts("? cmd");
ARM GAS  /tmp/ccZvkXpi.s 			page 42


 665              		.loc 2 139 0
 666 04de 40F20000 		movw	r0, #:lower16:.LC17
 667 04e2 C0F20000 		movt	r0, #:upper16:.LC17
 668 04e6 FFF7FEFF 		bl	puts
 140:main.c        **** 		}
 141:main.c        **** 	}
 669              		.loc 2 141 0
 670 04ea CBE5     		b	.L34
 671              	.L36:
  48:main.c        **** 			continue;
 672              		.loc 2 48 0
 673 04ec 00BF     		nop
 674 04ee 00E0     		b	.L5
 675              	.L37:
 137:main.c        **** 				break;
 676              		.loc 2 137 0
 677 04f0 00BF     		nop
 678              	.L5:
 679              		.loc 2 141 0
 680 04f2 C7E5     		b	.L34
 681              		.cfi_endproc
 682              	.LFE35:
 683              		.size	main, .-main
 684              		.section	.text.TC1_IrqHandler,"ax",%progbits
 685              		.align	2
 686              		.global	TC1_IrqHandler
 687              		.thumb
 688              		.thumb_func
 689              		.type	TC1_IrqHandler, %function
 690              	TC1_IrqHandler:
 691              	.LFB36:
 142:main.c        **** 	return 0;
 143:main.c        **** }
 144:main.c        **** 
 145:main.c        **** void TC1_IrqHandler()
 146:main.c        **** {
 692              		.loc 2 146 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 697 0000 80B4     		push	{r7}
 698              	.LCFI6:
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 83B0     		sub	sp, sp, #12
 702              	.LCFI7:
 703              		.cfi_def_cfa_offset 16
 704 0004 00AF     		add	r7, sp, #0
 705              	.LCFI8:
 706              		.cfi_def_cfa_register 7
 147:main.c        **** 	uint8_t i;
 148:main.c        **** 	struct ctrl *loop = loops;
 707              		.loc 2 148 0
 708 0006 40F20003 		movw	r3, #:lower16:loops
 709 000a C0F20003 		movt	r3, #:upper16:loops
 710 000e 3B60     		str	r3, [r7, #0]
ARM GAS  /tmp/ccZvkXpi.s 			page 43


 149:main.c        **** 
 150:main.c        **** 	for (i=0; i < LOOPS; i++, loop++) {
 711              		.loc 2 150 0
 712 0010 4FF00003 		mov	r3, #0
 713 0014 FB71     		strb	r3, [r7, #7]
 714 0016 22E0     		b	.L39
 715              	.L41:
 151:main.c        **** 		if ((ADC->ADC_CHSR & (1<<i)) == 0 && loop->mode > OFF)
 716              		.loc 2 151 0
 717 0018 4FF40043 		mov	r3, #32768
 718 001c C4F20303 		movt	r3, 16387
 719 0020 9A69     		ldr	r2, [r3, #24]
 720 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 721 0024 4FF00101 		mov	r1, #1
 722 0028 01FA03F3 		lsl	r3, r1, r3
 723 002c 1340     		ands	r3, r3, r2
 724 002e 002B     		cmp	r3, #0
 725 0030 0DD1     		bne	.L40
 726              		.loc 2 151 0 is_stmt 0 discriminator 1
 727 0032 3B68     		ldr	r3, [r7, #0]
 728 0034 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 729 0036 002B     		cmp	r3, #0
 730 0038 09D0     		beq	.L40
 152:main.c        **** 			ADC->ADC_CHER = (1<<i); // enable channel
 731              		.loc 2 152 0 is_stmt 1
 732 003a 4FF40043 		mov	r3, #32768
 733 003e C4F20303 		movt	r3, 16387
 734 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 735 0044 4FF00101 		mov	r1, #1
 736 0048 01FA02F2 		lsl	r2, r1, r2
 737 004c 1A61     		str	r2, [r3, #16]
 738              	.L40:
 150:main.c        **** 	for (i=0; i < LOOPS; i++, loop++) {
 739              		.loc 2 150 0
 740 004e FB79     		ldrb	r3, [r7, #7]
 741 0050 03F10103 		add	r3, r3, #1
 742 0054 FB71     		strb	r3, [r7, #7]
 743 0056 3B68     		ldr	r3, [r7, #0]
 744 0058 03F12C03 		add	r3, r3, #44
 745 005c 3B60     		str	r3, [r7, #0]
 746              	.L39:
 150:main.c        **** 	for (i=0; i < LOOPS; i++, loop++) {
 747              		.loc 2 150 0 is_stmt 0 discriminator 1
 748 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 749 0060 012B     		cmp	r3, #1
 750 0062 D9D9     		bls	.L41
 153:main.c        **** 	}
 154:main.c        **** 	ADC_StartConversion(ADC);
 751              		.loc 2 154 0 is_stmt 1
 752 0064 4FF40043 		mov	r3, #32768
 753 0068 C4F20303 		movt	r3, 16387
 754 006c 4FF00202 		mov	r2, #2
 755 0070 1A60     		str	r2, [r3, #0]
 155:main.c        **** }
 756              		.loc 2 155 0
 757 0072 07F10C07 		add	r7, r7, #12
 758 0076 BD46     		mov	sp, r7
ARM GAS  /tmp/ccZvkXpi.s 			page 44


 759 0078 80BC     		pop	{r7}
 760 007a 7047     		bx	lr
 761              		.cfi_endproc
 762              	.LFE36:
 763              		.size	TC1_IrqHandler, .-TC1_IrqHandler
 764              		.section	.text.ADC_IrqHandler,"ax",%progbits
 765              		.align	2
 766              		.global	ADC_IrqHandler
 767              		.thumb
 768              		.thumb_func
 769              		.type	ADC_IrqHandler, %function
 770              	ADC_IrqHandler:
 771              	.LFB37:
 156:main.c        **** 
 157:main.c        **** void ADC_IrqHandler(void)
 158:main.c        **** {
 772              		.loc 2 158 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 16
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776 0000 80B5     		push	{r7, lr}
 777              	.LCFI9:
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 14, -4
 780              		.cfi_offset 7, -8
 781 0002 84B0     		sub	sp, sp, #16
 782              	.LCFI10:
 783              		.cfi_def_cfa_offset 24
 784 0004 00AF     		add	r7, sp, #0
 785              	.LCFI11:
 786              		.cfi_def_cfa_register 7
 159:main.c        **** 	uint8_t i;
 160:main.c        **** 	uint8_t msk;
 161:main.c        ****     uint32_t status;
 162:main.c        **** 	struct ctrl *loop = loops;
 787              		.loc 2 162 0
 788 0006 40F20003 		movw	r3, #:lower16:loops
 789 000a C0F20003 		movt	r3, #:upper16:loops
 790 000e BB60     		str	r3, [r7, #8]
 163:main.c        **** 	ctrlio_t x;
 164:main.c        **** 
 165:main.c        ****     status = ADC_GetStatus(ADC);
 791              		.loc 2 165 0
 792 0010 4FF40043 		mov	r3, #32768
 793 0014 C4F20303 		movt	r3, 16387
 794 0018 1B6B     		ldr	r3, [r3, #48]
 795 001a 7B60     		str	r3, [r7, #4]
 166:main.c        **** 
 167:main.c        **** 	for (i=0, msk=1; i < LOOPS; i++, msk<<=1, loop++) {
 796              		.loc 2 167 0
 797 001c 4FF00003 		mov	r3, #0
 798 0020 FB73     		strb	r3, [r7, #15]
 799 0022 4FF00103 		mov	r3, #1
 800 0026 BB73     		strb	r3, [r7, #14]
 801 0028 4EE0     		b	.L43
 802              	.L49:
 168:main.c        **** 		if (!((status & msk) == msk)) // check End of Conversion flag for channel i
ARM GAS  /tmp/ccZvkXpi.s 			page 45


 803              		.loc 2 168 0
 804 002a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 805 002c 7B68     		ldr	r3, [r7, #4]
 806 002e 1A40     		ands	r2, r2, r3
 807 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 808 0032 9A42     		cmp	r2, r3
 809 0034 3BD1     		bne	.L50
 810              	.L44:
 169:main.c        **** 			continue;
 170:main.c        **** 			
 171:main.c        **** 		x = (ctrlio_t) *(ADC->ADC_CDR+i); // read channel data
 811              		.loc 2 171 0
 812 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 813 0038 4FEA8302 		lsl	r2, r3, #2
 814 003c 48F25003 		movw	r3, #32848
 815 0040 C4F20303 		movt	r3, 16387
 816 0044 D318     		adds	r3, r2, r3
 817 0046 1B68     		ldr	r3, [r3, #0]
 818 0048 7B80     		strh	r3, [r7, #2]	@ movhi
 172:main.c        **** 		x = LIMIT(x, conf[i].min, conf[i].max);
 819              		.loc 2 172 0
 820 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 821 004c 40F20003 		movw	r3, #:lower16:conf
 822 0050 C0F20003 		movt	r3, #:upper16:conf
 823 0054 33F83230 		ldrh	r3, [r3, r2, lsl #3]
 824 0058 7A88     		ldrh	r2, [r7, #2]
 825 005a 9A42     		cmp	r2, r3
 826 005c 07D2     		bcs	.L46
 827              		.loc 2 172 0 is_stmt 0 discriminator 1
 828 005e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 829 0060 40F20003 		movw	r3, #:lower16:conf
 830 0064 C0F20003 		movt	r3, #:upper16:conf
 831 0068 33F83230 		ldrh	r3, [r3, r2, lsl #3]
 832 006c 0DE0     		b	.L47
 833              	.L46:
 834              		.loc 2 172 0 discriminator 2
 835 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836 0070 40F20002 		movw	r2, #:lower16:conf
 837 0074 C0F20002 		movt	r2, #:upper16:conf
 838 0078 4FEAC303 		lsl	r3, r3, #3
 839 007c D318     		adds	r3, r2, r3
 840 007e 5A88     		ldrh	r2, [r3, #2]
 841 0080 7B88     		ldrh	r3, [r7, #2]
 842 0082 9A42     		cmp	r2, r3
 843 0084 38BF     		it	cc
 844 0086 1346     		movcc	r3, r2
 845 0088 9BB2     		uxth	r3, r3
 846              	.L47:
 847              		.loc 2 172 0 discriminator 3
 848 008a 7B80     		strh	r3, [r7, #2]	@ movhi
 173:main.c        **** 
 174:main.c        **** 		if (loop->mode > OFF) {
 849              		.loc 2 174 0 is_stmt 1 discriminator 3
 850 008c BB68     		ldr	r3, [r7, #8]
 851 008e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 852 0090 002B     		cmp	r3, #0
 853 0092 05D0     		beq	.L48
ARM GAS  /tmp/ccZvkXpi.s 			page 46


 175:main.c        **** 			control(x, loop);    // run controller
 854              		.loc 2 175 0
 855 0094 7B88     		ldrh	r3, [r7, #2]
 856 0096 1846     		mov	r0, r3
 857 0098 B968     		ldr	r1, [r7, #8]
 858 009a FFF7FEFF 		bl	control
 859 009e 07E0     		b	.L45
 860              	.L48:
 176:main.c        **** 			// write output here
 177:main.c        **** 		}
 178:main.c        **** 		else {
 179:main.c        **** 			ADC->ADC_CHDR = msk; // disable channel
 861              		.loc 2 179 0
 862 00a0 4FF40043 		mov	r3, #32768
 863 00a4 C4F20303 		movt	r3, 16387
 864 00a8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 865 00aa 5A61     		str	r2, [r3, #20]
 866 00ac 00E0     		b	.L45
 867              	.L50:
 169:main.c        **** 			continue;
 868              		.loc 2 169 0
 869 00ae 00BF     		nop
 870              	.L45:
 167:main.c        **** 	for (i=0, msk=1; i < LOOPS; i++, msk<<=1, loop++) {
 871              		.loc 2 167 0
 872 00b0 FB7B     		ldrb	r3, [r7, #15]
 873 00b2 03F10103 		add	r3, r3, #1
 874 00b6 FB73     		strb	r3, [r7, #15]
 875 00b8 BB7B     		ldrb	r3, [r7, #14]
 876 00ba 4FEA4303 		lsl	r3, r3, #1
 877 00be BB73     		strb	r3, [r7, #14]
 878 00c0 BB68     		ldr	r3, [r7, #8]
 879 00c2 03F12C03 		add	r3, r3, #44
 880 00c6 BB60     		str	r3, [r7, #8]
 881              	.L43:
 167:main.c        **** 	for (i=0, msk=1; i < LOOPS; i++, msk<<=1, loop++) {
 882              		.loc 2 167 0 is_stmt 0 discriminator 1
 883 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 884 00ca 012B     		cmp	r3, #1
 885 00cc ADD9     		bls	.L49
 180:main.c        **** 			// reset output here
 181:main.c        **** 		}
 182:main.c        **** 	}
 183:main.c        **** }
 886              		.loc 2 183 0 is_stmt 1
 887 00ce 07F11007 		add	r7, r7, #16
 888 00d2 BD46     		mov	sp, r7
 889 00d4 80BD     		pop	{r7, pc}
 890              		.cfi_endproc
 891              	.LFE37:
 892              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 893 00d6 00BF     		.section	.text.init,"ax",%progbits
 894              		.align	2
 895              		.thumb
 896              		.thumb_func
 897              		.type	init, %function
 898              	init:
ARM GAS  /tmp/ccZvkXpi.s 			page 47


 899              	.LFB38:
 184:main.c        **** 
 185:main.c        **** void init()
 186:main.c        **** {
 900              		.loc 2 186 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 8
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 90B5     		push	{r4, r7, lr}
 905              	.LCFI12:
 906              		.cfi_def_cfa_offset 12
 907              		.cfi_offset 14, -4
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 4, -12
 910 0002 85B0     		sub	sp, sp, #20
 911              	.LCFI13:
 912              		.cfi_def_cfa_offset 32
 913 0004 02AF     		add	r7, sp, #8
 914              	.LCFI14:
 915              		.cfi_def_cfa 7, 24
 187:main.c        ****     uint32_t div;
 188:main.c        ****     uint32_t tcclks;
 189:main.c        **** 
 190:main.c        ****     /* Enable peripheral clock. */
 191:main.c        ****     PMC->PMC_PCER0 = 1 << ID_TC1;
 916              		.loc 2 191 0
 917 0006 4FF48063 		mov	r3, #1024
 918 000a C4F20E03 		movt	r3, 16398
 919 000e 4FF08072 		mov	r2, #16777216
 920 0012 1A61     		str	r2, [r3, #16]
 192:main.c        **** 
 193:main.c        ****     /* Configure TC */
 194:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 921              		.loc 2 194 0
 922 0014 07F10402 		add	r2, r7, #4
 923 0018 3C46     		mov	r4, r7
 924 001a 4FF4D843 		mov	r3, #27648
 925 001e C0F2DC23 		movt	r3, 732
 926 0022 0093     		str	r3, [sp, #0]
 927 0024 4FF00400 		mov	r0, #4
 928 0028 4FF4D841 		mov	r1, #27648
 929 002c C0F2DC21 		movt	r1, 732
 930 0030 2346     		mov	r3, r4
 931 0032 FFF7FEFF 		bl	TC_FindMckDivisor
 195:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 932              		.loc 2 195 0
 933 0036 3B68     		ldr	r3, [r7, #0]
 934 0038 43F48043 		orr	r3, r3, #16384
 935 003c 4FF48040 		mov	r0, #16384
 936 0040 C4F20100 		movt	r0, 16385
 937 0044 4FF00001 		mov	r1, #0
 938 0048 1A46     		mov	r2, r3
 939 004a FFF7FEFF 		bl	TC_Configure
 196:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
 940              		.loc 2 196 0
 941 004e 4FF48043 		mov	r3, #16384
 942 0052 C4F20103 		movt	r3, 16385
ARM GAS  /tmp/ccZvkXpi.s 			page 48


 943 0056 7968     		ldr	r1, [r7, #4]
 944 0058 4FF4D852 		mov	r2, #6912
 945 005c C0F2B702 		movt	r2, 183
 946 0060 B2FBF1F2 		udiv	r2, r2, r1
 947 0064 DA61     		str	r2, [r3, #28]
 197:main.c        **** 
 198:main.c        ****     /* Configure and enable interrupt on RC compare */
 199:main.c        ****     NVIC_EnableIRQ((IRQn_Type) ID_TC1);
 948              		.loc 2 199 0
 949 0066 4FF01800 		mov	r0, #24
 950 006a FFF7FEFF 		bl	NVIC_EnableIRQ
 200:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 951              		.loc 2 200 0
 952 006e 4FF48043 		mov	r3, #16384
 953 0072 C4F20103 		movt	r3, 16385
 954 0076 4FF01002 		mov	r2, #16
 955 007a 5A62     		str	r2, [r3, #36]
 201:main.c        **** 
 202:main.c        **** 	/* Tick Config */
 203:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 956              		.loc 2 203 0
 957 007c 4FF4D840 		mov	r0, #27648
 958 0080 C0F2DC20 		movt	r0, 732
 959 0084 FFF7FEFF 		bl	TimeTick_Configure
 204:main.c        **** 
 205:main.c        ****     /* Initialize ADC */
 206:main.c        ****     ADC_Initialize( ADC, ID_ADC );
 960              		.loc 2 206 0
 961 0088 4FF40040 		mov	r0, #32768
 962 008c C4F20300 		movt	r0, 16387
 963 0090 4FF01D01 		mov	r1, #29
 964 0094 FFF7FEFF 		bl	ADC_Initialize
 207:main.c        **** 
 208:main.c        ****     /* startup = 15, prescal = 4, ADC clock = 6.4 MHz */
 209:main.c        ****     ADC_cfgFrequency( ADC, 15, 4 );
 965              		.loc 2 209 0
 966 0098 4FF40040 		mov	r0, #32768
 967 009c C4F20300 		movt	r0, 16387
 968 00a0 4FF00F01 		mov	r1, #15
 969 00a4 4FF00402 		mov	r2, #4
 970 00a8 FFF7FEFF 		bl	ADC_cfgFrequency
 210:main.c        **** 
 211:main.c        ****     /* Enable ADC interrupt */
 212:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
 971              		.loc 2 212 0
 972 00ac 4FF01D00 		mov	r0, #29
 973 00b0 FFF7FEFF 		bl	NVIC_EnableIRQ
 213:main.c        ****     ADC->ADC_IER = ADC_EOC_IRQS;
 974              		.loc 2 213 0
 975 00b4 4FF40043 		mov	r3, #32768
 976 00b8 C4F20303 		movt	r3, 16387
 977 00bc 4FF00302 		mov	r2, #3
 978 00c0 5A62     		str	r2, [r3, #36]
 214:main.c        **** 
 215:main.c        **** 	/* LED PIO Config */
 216:main.c        **** 	LEDs_configure();
 979              		.loc 2 216 0
ARM GAS  /tmp/ccZvkXpi.s 			page 49


 980 00c2 FFF7FEFF 		bl	LEDs_configure
 217:main.c        **** 	LED_clr(statusled);
 981              		.loc 2 217 0
 982 00c6 4FF00000 		mov	r0, #0
 983 00ca FFF7FEFF 		bl	LED_clr
 218:main.c        **** 
 219:main.c        **** 	/* USB Console Config */
 220:main.c        **** 	USBC_Configure();
 984              		.loc 2 220 0
 985 00ce FFF7FEFF 		bl	USBC_Configure
 221:main.c        **** 
 222:main.c        **** }
 986              		.loc 2 222 0
 987 00d2 07F10C07 		add	r7, r7, #12
 988 00d6 BD46     		mov	sp, r7
 989 00d8 90BD     		pop	{r4, r7, pc}
 990              		.cfi_endproc
 991              	.LFE38:
 992              		.size	init, .-init
 993 00da 00BF     		.text
 994              	.Letext0:
 995              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 996              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 997              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 998              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 999              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1000              		.file 8 "libchip/include/SAM3S.h"
 1001              		.file 9 "controller.h"
 1002              		.section	.debug_info,"",%progbits
 1003              	.Ldebug_info0:
 1004 0000 A4150000 		.4byte	0x15a4
 1005 0004 0200     		.2byte	0x2
 1006 0006 00000000 		.4byte	.Ldebug_abbrev0
 1007 000a 04       		.byte	0x4
 1008 000b 01       		.uleb128 0x1
 1009 000c 46090000 		.4byte	.LASF287
 1010 0010 01       		.byte	0x1
 1011 0011 4F050000 		.4byte	.LASF288
 1012 0015 6C080000 		.4byte	.LASF289
 1013 0019 00000000 		.4byte	0
 1014 001d 00000000 		.4byte	0
 1015 0021 00000000 		.4byte	.Ldebug_ranges0+0
 1016 0025 00000000 		.4byte	.Ldebug_line0
 1017 0029 02       		.uleb128 0x2
 1018 002a 01       		.byte	0x1
 1019 002b 06       		.byte	0x6
 1020 002c 22020000 		.4byte	.LASF0
 1021 0030 02       		.uleb128 0x2
 1022 0031 01       		.byte	0x1
 1023 0032 08       		.byte	0x8
 1024 0033 4A020000 		.4byte	.LASF1
 1025 0037 02       		.uleb128 0x2
 1026 0038 02       		.byte	0x2
 1027 0039 05       		.byte	0x5
 1028 003a B0080000 		.4byte	.LASF2
 1029 003e 02       		.uleb128 0x2
 1030 003f 02       		.byte	0x2
ARM GAS  /tmp/ccZvkXpi.s 			page 50


 1031 0040 07       		.byte	0x7
 1032 0041 B0090000 		.4byte	.LASF3
 1033 0045 03       		.uleb128 0x3
 1034 0046 04       		.byte	0x4
 1035 0047 05       		.byte	0x5
 1036 0048 696E7400 		.ascii	"int\000"
 1037 004c 02       		.uleb128 0x2
 1038 004d 04       		.byte	0x4
 1039 004e 07       		.byte	0x7
 1040 004f C7050000 		.4byte	.LASF4
 1041 0053 02       		.uleb128 0x2
 1042 0054 08       		.byte	0x8
 1043 0055 05       		.byte	0x5
 1044 0056 0E050000 		.4byte	.LASF5
 1045 005a 02       		.uleb128 0x2
 1046 005b 08       		.byte	0x8
 1047 005c 07       		.byte	0x7
 1048 005d C7060000 		.4byte	.LASF6
 1049 0061 04       		.uleb128 0x4
 1050 0062 65040000 		.4byte	.LASF8
 1051 0066 03       		.byte	0x3
 1052 0067 07       		.byte	0x7
 1053 0068 45000000 		.4byte	0x45
 1054 006c 02       		.uleb128 0x2
 1055 006d 04       		.byte	0x4
 1056 006e 05       		.byte	0x5
 1057 006f 7B010000 		.4byte	.LASF7
 1058 0073 04       		.uleb128 0x4
 1059 0074 91060000 		.4byte	.LASF9
 1060 0078 04       		.byte	0x4
 1061 0079 2C       		.byte	0x2c
 1062 007a 6C000000 		.4byte	0x6c
 1063 007e 05       		.uleb128 0x5
 1064 007f AC070000 		.4byte	.LASF10
 1065 0083 05       		.byte	0x5
 1066 0084 6101     		.2byte	0x161
 1067 0086 4C000000 		.4byte	0x4c
 1068 008a 06       		.uleb128 0x6
 1069 008b 04       		.byte	0x4
 1070 008c 04       		.byte	0x4
 1071 008d 46       		.byte	0x46
 1072 008e A9000000 		.4byte	0xa9
 1073 0092 07       		.uleb128 0x7
 1074 0093 17010000 		.4byte	.LASF11
 1075 0097 04       		.byte	0x4
 1076 0098 48       		.byte	0x48
 1077 0099 7E000000 		.4byte	0x7e
 1078 009d 07       		.uleb128 0x7
 1079 009e 99060000 		.4byte	.LASF12
 1080 00a2 04       		.byte	0x4
 1081 00a3 49       		.byte	0x49
 1082 00a4 A9000000 		.4byte	0xa9
 1083 00a8 00       		.byte	0
 1084 00a9 08       		.uleb128 0x8
 1085 00aa 30000000 		.4byte	0x30
 1086 00ae B9000000 		.4byte	0xb9
 1087 00b2 09       		.uleb128 0x9
ARM GAS  /tmp/ccZvkXpi.s 			page 51


 1088 00b3 4C000000 		.4byte	0x4c
 1089 00b7 03       		.byte	0x3
 1090 00b8 00       		.byte	0
 1091 00b9 0A       		.uleb128 0xa
 1092 00ba 08       		.byte	0x8
 1093 00bb 04       		.byte	0x4
 1094 00bc 43       		.byte	0x43
 1095 00bd DE000000 		.4byte	0xde
 1096 00c1 0B       		.uleb128 0xb
 1097 00c2 4E060000 		.4byte	.LASF13
 1098 00c6 04       		.byte	0x4
 1099 00c7 45       		.byte	0x45
 1100 00c8 45000000 		.4byte	0x45
 1101 00cc 02       		.byte	0x2
 1102 00cd 23       		.byte	0x23
 1103 00ce 00       		.uleb128 0
 1104 00cf 0B       		.uleb128 0xb
 1105 00d0 34000000 		.4byte	.LASF14
 1106 00d4 04       		.byte	0x4
 1107 00d5 4A       		.byte	0x4a
 1108 00d6 8A000000 		.4byte	0x8a
 1109 00da 02       		.byte	0x2
 1110 00db 23       		.byte	0x23
 1111 00dc 04       		.uleb128 0x4
 1112 00dd 00       		.byte	0
 1113 00de 04       		.uleb128 0x4
 1114 00df 89070000 		.4byte	.LASF15
 1115 00e3 04       		.byte	0x4
 1116 00e4 4B       		.byte	0x4b
 1117 00e5 B9000000 		.4byte	0xb9
 1118 00e9 04       		.uleb128 0x4
 1119 00ea 72070000 		.4byte	.LASF16
 1120 00ee 04       		.byte	0x4
 1121 00ef 4F       		.byte	0x4f
 1122 00f0 61000000 		.4byte	0x61
 1123 00f4 0C       		.uleb128 0xc
 1124 00f5 04       		.byte	0x4
 1125 00f6 04       		.uleb128 0x4
 1126 00f7 6F090000 		.4byte	.LASF17
 1127 00fb 06       		.byte	0x6
 1128 00fc 15       		.byte	0x15
 1129 00fd 01010000 		.4byte	0x101
 1130 0101 02       		.uleb128 0x2
 1131 0102 04       		.byte	0x4
 1132 0103 07       		.byte	0x7
 1133 0104 04040000 		.4byte	.LASF18
 1134 0108 0D       		.uleb128 0xd
 1135 0109 C0040000 		.4byte	.LASF23
 1136 010d 18       		.byte	0x18
 1137 010e 06       		.byte	0x6
 1138 010f 2C       		.byte	0x2c
 1139 0110 67010000 		.4byte	0x167
 1140 0114 0B       		.uleb128 0xb
 1141 0115 CF070000 		.4byte	.LASF19
 1142 0119 06       		.byte	0x6
 1143 011a 2E       		.byte	0x2e
 1144 011b 67010000 		.4byte	0x167
ARM GAS  /tmp/ccZvkXpi.s 			page 52


 1145 011f 02       		.byte	0x2
 1146 0120 23       		.byte	0x23
 1147 0121 00       		.uleb128 0
 1148 0122 0E       		.uleb128 0xe
 1149 0123 5F6B00   		.ascii	"_k\000"
 1150 0126 06       		.byte	0x6
 1151 0127 2F       		.byte	0x2f
 1152 0128 45000000 		.4byte	0x45
 1153 012c 02       		.byte	0x2
 1154 012d 23       		.byte	0x23
 1155 012e 04       		.uleb128 0x4
 1156 012f 0B       		.uleb128 0xb
 1157 0130 C8040000 		.4byte	.LASF20
 1158 0134 06       		.byte	0x6
 1159 0135 2F       		.byte	0x2f
 1160 0136 45000000 		.4byte	0x45
 1161 013a 02       		.byte	0x2
 1162 013b 23       		.byte	0x23
 1163 013c 08       		.uleb128 0x8
 1164 013d 0B       		.uleb128 0xb
 1165 013e AF050000 		.4byte	.LASF21
 1166 0142 06       		.byte	0x6
 1167 0143 2F       		.byte	0x2f
 1168 0144 45000000 		.4byte	0x45
 1169 0148 02       		.byte	0x2
 1170 0149 23       		.byte	0x23
 1171 014a 0C       		.uleb128 0xc
 1172 014b 0B       		.uleb128 0xb
 1173 014c 4F030000 		.4byte	.LASF22
 1174 0150 06       		.byte	0x6
 1175 0151 2F       		.byte	0x2f
 1176 0152 45000000 		.4byte	0x45
 1177 0156 02       		.byte	0x2
 1178 0157 23       		.byte	0x23
 1179 0158 10       		.uleb128 0x10
 1180 0159 0E       		.uleb128 0xe
 1181 015a 5F7800   		.ascii	"_x\000"
 1182 015d 06       		.byte	0x6
 1183 015e 30       		.byte	0x30
 1184 015f 6D010000 		.4byte	0x16d
 1185 0163 02       		.byte	0x2
 1186 0164 23       		.byte	0x23
 1187 0165 14       		.uleb128 0x14
 1188 0166 00       		.byte	0
 1189 0167 0F       		.uleb128 0xf
 1190 0168 04       		.byte	0x4
 1191 0169 08010000 		.4byte	0x108
 1192 016d 08       		.uleb128 0x8
 1193 016e F6000000 		.4byte	0xf6
 1194 0172 7D010000 		.4byte	0x17d
 1195 0176 09       		.uleb128 0x9
 1196 0177 4C000000 		.4byte	0x4c
 1197 017b 00       		.byte	0
 1198 017c 00       		.byte	0
 1199 017d 0D       		.uleb128 0xd
 1200 017e 98000000 		.4byte	.LASF24
 1201 0182 24       		.byte	0x24
ARM GAS  /tmp/ccZvkXpi.s 			page 53


 1202 0183 06       		.byte	0x6
 1203 0184 34       		.byte	0x34
 1204 0185 08020000 		.4byte	0x208
 1205 0189 0B       		.uleb128 0xb
 1206 018a B4000000 		.4byte	.LASF25
 1207 018e 06       		.byte	0x6
 1208 018f 36       		.byte	0x36
 1209 0190 45000000 		.4byte	0x45
 1210 0194 02       		.byte	0x2
 1211 0195 23       		.byte	0x23
 1212 0196 00       		.uleb128 0
 1213 0197 0B       		.uleb128 0xb
 1214 0198 490A0000 		.4byte	.LASF26
 1215 019c 06       		.byte	0x6
 1216 019d 37       		.byte	0x37
 1217 019e 45000000 		.4byte	0x45
 1218 01a2 02       		.byte	0x2
 1219 01a3 23       		.byte	0x23
 1220 01a4 04       		.uleb128 0x4
 1221 01a5 0B       		.uleb128 0xb
 1222 01a6 CC090000 		.4byte	.LASF27
 1223 01aa 06       		.byte	0x6
 1224 01ab 38       		.byte	0x38
 1225 01ac 45000000 		.4byte	0x45
 1226 01b0 02       		.byte	0x2
 1227 01b1 23       		.byte	0x23
 1228 01b2 08       		.uleb128 0x8
 1229 01b3 0B       		.uleb128 0xb
 1230 01b4 FD050000 		.4byte	.LASF28
 1231 01b8 06       		.byte	0x6
 1232 01b9 39       		.byte	0x39
 1233 01ba 45000000 		.4byte	0x45
 1234 01be 02       		.byte	0x2
 1235 01bf 23       		.byte	0x23
 1236 01c0 0C       		.uleb128 0xc
 1237 01c1 0B       		.uleb128 0xb
 1238 01c2 EE010000 		.4byte	.LASF29
 1239 01c6 06       		.byte	0x6
 1240 01c7 3A       		.byte	0x3a
 1241 01c8 45000000 		.4byte	0x45
 1242 01cc 02       		.byte	0x2
 1243 01cd 23       		.byte	0x23
 1244 01ce 10       		.uleb128 0x10
 1245 01cf 0B       		.uleb128 0xb
 1246 01d0 EA080000 		.4byte	.LASF30
 1247 01d4 06       		.byte	0x6
 1248 01d5 3B       		.byte	0x3b
 1249 01d6 45000000 		.4byte	0x45
 1250 01da 02       		.byte	0x2
 1251 01db 23       		.byte	0x23
 1252 01dc 14       		.uleb128 0x14
 1253 01dd 0B       		.uleb128 0xb
 1254 01de 5D060000 		.4byte	.LASF31
 1255 01e2 06       		.byte	0x6
 1256 01e3 3C       		.byte	0x3c
 1257 01e4 45000000 		.4byte	0x45
 1258 01e8 02       		.byte	0x2
ARM GAS  /tmp/ccZvkXpi.s 			page 54


 1259 01e9 23       		.byte	0x23
 1260 01ea 18       		.uleb128 0x18
 1261 01eb 0B       		.uleb128 0xb
 1262 01ec 67060000 		.4byte	.LASF32
 1263 01f0 06       		.byte	0x6
 1264 01f1 3D       		.byte	0x3d
 1265 01f2 45000000 		.4byte	0x45
 1266 01f6 02       		.byte	0x2
 1267 01f7 23       		.byte	0x23
 1268 01f8 1C       		.uleb128 0x1c
 1269 01f9 0B       		.uleb128 0xb
 1270 01fa 3E0A0000 		.4byte	.LASF33
 1271 01fe 06       		.byte	0x6
 1272 01ff 3E       		.byte	0x3e
 1273 0200 45000000 		.4byte	0x45
 1274 0204 02       		.byte	0x2
 1275 0205 23       		.byte	0x23
 1276 0206 20       		.uleb128 0x20
 1277 0207 00       		.byte	0
 1278 0208 10       		.uleb128 0x10
 1279 0209 37010000 		.4byte	.LASF34
 1280 020d 0801     		.2byte	0x108
 1281 020f 06       		.byte	0x6
 1282 0210 47       		.byte	0x47
 1283 0211 51020000 		.4byte	0x251
 1284 0215 0B       		.uleb128 0xb
 1285 0216 2E0A0000 		.4byte	.LASF35
 1286 021a 06       		.byte	0x6
 1287 021b 48       		.byte	0x48
 1288 021c 51020000 		.4byte	0x251
 1289 0220 02       		.byte	0x2
 1290 0221 23       		.byte	0x23
 1291 0222 00       		.uleb128 0
 1292 0223 0B       		.uleb128 0xb
 1293 0224 E7060000 		.4byte	.LASF36
 1294 0228 06       		.byte	0x6
 1295 0229 49       		.byte	0x49
 1296 022a 51020000 		.4byte	0x251
 1297 022e 03       		.byte	0x3
 1298 022f 23       		.byte	0x23
 1299 0230 8001     		.uleb128 0x80
 1300 0232 0B       		.uleb128 0xb
 1301 0233 D7080000 		.4byte	.LASF37
 1302 0237 06       		.byte	0x6
 1303 0238 4B       		.byte	0x4b
 1304 0239 F6000000 		.4byte	0xf6
 1305 023d 03       		.byte	0x3
 1306 023e 23       		.byte	0x23
 1307 023f 8002     		.uleb128 0x100
 1308 0241 0B       		.uleb128 0xb
 1309 0242 3E090000 		.4byte	.LASF38
 1310 0246 06       		.byte	0x6
 1311 0247 4E       		.byte	0x4e
 1312 0248 F6000000 		.4byte	0xf6
 1313 024c 03       		.byte	0x3
 1314 024d 23       		.byte	0x23
 1315 024e 8402     		.uleb128 0x104
ARM GAS  /tmp/ccZvkXpi.s 			page 55


 1316 0250 00       		.byte	0
 1317 0251 08       		.uleb128 0x8
 1318 0252 F4000000 		.4byte	0xf4
 1319 0256 61020000 		.4byte	0x261
 1320 025a 09       		.uleb128 0x9
 1321 025b 4C000000 		.4byte	0x4c
 1322 025f 1F       		.byte	0x1f
 1323 0260 00       		.byte	0
 1324 0261 0D       		.uleb128 0xd
 1325 0262 46060000 		.4byte	.LASF39
 1326 0266 8C       		.byte	0x8c
 1327 0267 06       		.byte	0x6
 1328 0268 52       		.byte	0x52
 1329 0269 A7020000 		.4byte	0x2a7
 1330 026d 0B       		.uleb128 0xb
 1331 026e CF070000 		.4byte	.LASF19
 1332 0272 06       		.byte	0x6
 1333 0273 53       		.byte	0x53
 1334 0274 A7020000 		.4byte	0x2a7
 1335 0278 02       		.byte	0x2
 1336 0279 23       		.byte	0x23
 1337 027a 00       		.uleb128 0
 1338 027b 0B       		.uleb128 0xb
 1339 027c 21090000 		.4byte	.LASF40
 1340 0280 06       		.byte	0x6
 1341 0281 54       		.byte	0x54
 1342 0282 45000000 		.4byte	0x45
 1343 0286 02       		.byte	0x2
 1344 0287 23       		.byte	0x23
 1345 0288 04       		.uleb128 0x4
 1346 0289 0B       		.uleb128 0xb
 1347 028a BF020000 		.4byte	.LASF41
 1348 028e 06       		.byte	0x6
 1349 028f 55       		.byte	0x55
 1350 0290 AD020000 		.4byte	0x2ad
 1351 0294 02       		.byte	0x2
 1352 0295 23       		.byte	0x23
 1353 0296 08       		.uleb128 0x8
 1354 0297 0B       		.uleb128 0xb
 1355 0298 1C050000 		.4byte	.LASF42
 1356 029c 06       		.byte	0x6
 1357 029d 56       		.byte	0x56
 1358 029e C5020000 		.4byte	0x2c5
 1359 02a2 03       		.byte	0x3
 1360 02a3 23       		.byte	0x23
 1361 02a4 8801     		.uleb128 0x88
 1362 02a6 00       		.byte	0
 1363 02a7 0F       		.uleb128 0xf
 1364 02a8 04       		.byte	0x4
 1365 02a9 61020000 		.4byte	0x261
 1366 02ad 08       		.uleb128 0x8
 1367 02ae BF020000 		.4byte	0x2bf
 1368 02b2 BD020000 		.4byte	0x2bd
 1369 02b6 09       		.uleb128 0x9
 1370 02b7 4C000000 		.4byte	0x4c
 1371 02bb 1F       		.byte	0x1f
 1372 02bc 00       		.byte	0
ARM GAS  /tmp/ccZvkXpi.s 			page 56


 1373 02bd 11       		.uleb128 0x11
 1374 02be 01       		.byte	0x1
 1375 02bf 0F       		.uleb128 0xf
 1376 02c0 04       		.byte	0x4
 1377 02c1 BD020000 		.4byte	0x2bd
 1378 02c5 0F       		.uleb128 0xf
 1379 02c6 04       		.byte	0x4
 1380 02c7 08020000 		.4byte	0x208
 1381 02cb 0D       		.uleb128 0xd
 1382 02cc 37090000 		.4byte	.LASF43
 1383 02d0 08       		.byte	0x8
 1384 02d1 06       		.byte	0x6
 1385 02d2 69       		.byte	0x69
 1386 02d3 F4020000 		.4byte	0x2f4
 1387 02d7 0B       		.uleb128 0xb
 1388 02d8 2B070000 		.4byte	.LASF44
 1389 02dc 06       		.byte	0x6
 1390 02dd 6A       		.byte	0x6a
 1391 02de F4020000 		.4byte	0x2f4
 1392 02e2 02       		.byte	0x2
 1393 02e3 23       		.byte	0x23
 1394 02e4 00       		.uleb128 0
 1395 02e5 0B       		.uleb128 0xb
 1396 02e6 9A010000 		.4byte	.LASF45
 1397 02ea 06       		.byte	0x6
 1398 02eb 6B       		.byte	0x6b
 1399 02ec 45000000 		.4byte	0x45
 1400 02f0 02       		.byte	0x2
 1401 02f1 23       		.byte	0x23
 1402 02f2 04       		.uleb128 0x4
 1403 02f3 00       		.byte	0
 1404 02f4 0F       		.uleb128 0xf
 1405 02f5 04       		.byte	0x4
 1406 02f6 30000000 		.4byte	0x30
 1407 02fa 12       		.uleb128 0x12
 1408 02fb 80020000 		.4byte	.LASF46
 1409 02ff F0       		.byte	0xf0
 1410 0300 06       		.byte	0x6
 1411 0301 7B01     		.2byte	0x17b
 1412 0303 74040000 		.4byte	0x474
 1413 0307 13       		.uleb128 0x13
 1414 0308 77040000 		.4byte	.LASF47
 1415 030c 06       		.byte	0x6
 1416 030d 7F01     		.2byte	0x17f
 1417 030f 45000000 		.4byte	0x45
 1418 0313 02       		.byte	0x2
 1419 0314 23       		.byte	0x23
 1420 0315 00       		.uleb128 0
 1421 0316 13       		.uleb128 0x13
 1422 0317 EA020000 		.4byte	.LASF48
 1423 031b 06       		.byte	0x6
 1424 031c 8401     		.2byte	0x184
 1425 031e E3060000 		.4byte	0x6e3
 1426 0322 02       		.byte	0x2
 1427 0323 23       		.byte	0x23
 1428 0324 04       		.uleb128 0x4
 1429 0325 13       		.uleb128 0x13
ARM GAS  /tmp/ccZvkXpi.s 			page 57


 1430 0326 0E070000 		.4byte	.LASF49
 1431 032a 06       		.byte	0x6
 1432 032b 8401     		.2byte	0x184
 1433 032d E3060000 		.4byte	0x6e3
 1434 0331 02       		.byte	0x2
 1435 0332 23       		.byte	0x23
 1436 0333 08       		.uleb128 0x8
 1437 0334 13       		.uleb128 0x13
 1438 0335 15060000 		.4byte	.LASF50
 1439 0339 06       		.byte	0x6
 1440 033a 8401     		.2byte	0x184
 1441 033c E3060000 		.4byte	0x6e3
 1442 0340 02       		.byte	0x2
 1443 0341 23       		.byte	0x23
 1444 0342 0C       		.uleb128 0xc
 1445 0343 13       		.uleb128 0x13
 1446 0344 1C090000 		.4byte	.LASF51
 1447 0348 06       		.byte	0x6
 1448 0349 8601     		.2byte	0x186
 1449 034b 45000000 		.4byte	0x45
 1450 034f 02       		.byte	0x2
 1451 0350 23       		.byte	0x23
 1452 0351 10       		.uleb128 0x10
 1453 0352 13       		.uleb128 0x13
 1454 0353 03050000 		.4byte	.LASF52
 1455 0357 06       		.byte	0x6
 1456 0358 8801     		.2byte	0x188
 1457 035a F3050000 		.4byte	0x5f3
 1458 035e 02       		.byte	0x2
 1459 035f 23       		.byte	0x23
 1460 0360 14       		.uleb128 0x14
 1461 0361 13       		.uleb128 0x13
 1462 0362 3B040000 		.4byte	.LASF53
 1463 0366 06       		.byte	0x6
 1464 0367 8A01     		.2byte	0x18a
 1465 0369 45000000 		.4byte	0x45
 1466 036d 02       		.byte	0x2
 1467 036e 23       		.byte	0x23
 1468 036f 18       		.uleb128 0x18
 1469 0370 13       		.uleb128 0x13
 1470 0371 10020000 		.4byte	.LASF54
 1471 0375 06       		.byte	0x6
 1472 0376 8C01     		.2byte	0x18c
 1473 0378 45000000 		.4byte	0x45
 1474 037c 02       		.byte	0x2
 1475 037d 23       		.byte	0x23
 1476 037e 1C       		.uleb128 0x1c
 1477 037f 13       		.uleb128 0x13
 1478 0380 7C050000 		.4byte	.LASF55
 1479 0384 06       		.byte	0x6
 1480 0385 8D01     		.2byte	0x18d
 1481 0387 25060000 		.4byte	0x625
 1482 038b 02       		.byte	0x2
 1483 038c 23       		.byte	0x23
 1484 038d 20       		.uleb128 0x20
 1485 038e 14       		.uleb128 0x14
 1486 038f 5F6D7000 		.ascii	"_mp\000"
ARM GAS  /tmp/ccZvkXpi.s 			page 58


 1487 0393 06       		.byte	0x6
 1488 0394 8F01     		.2byte	0x18f
 1489 0396 56080000 		.4byte	0x856
 1490 039a 02       		.byte	0x2
 1491 039b 23       		.byte	0x23
 1492 039c 24       		.uleb128 0x24
 1493 039d 13       		.uleb128 0x13
 1494 039e DB040000 		.4byte	.LASF56
 1495 03a2 06       		.byte	0x6
 1496 03a3 9101     		.2byte	0x191
 1497 03a5 68080000 		.4byte	0x868
 1498 03a9 02       		.byte	0x2
 1499 03aa 23       		.byte	0x23
 1500 03ab 28       		.uleb128 0x28
 1501 03ac 13       		.uleb128 0x13
 1502 03ad 62050000 		.4byte	.LASF57
 1503 03b1 06       		.byte	0x6
 1504 03b2 9301     		.2byte	0x193
 1505 03b4 45000000 		.4byte	0x45
 1506 03b8 02       		.byte	0x2
 1507 03b9 23       		.byte	0x23
 1508 03ba 2C       		.uleb128 0x2c
 1509 03bb 13       		.uleb128 0x13
 1510 03bc 78000000 		.4byte	.LASF58
 1511 03c0 06       		.byte	0x6
 1512 03c1 9601     		.2byte	0x196
 1513 03c3 45000000 		.4byte	0x45
 1514 03c7 02       		.byte	0x2
 1515 03c8 23       		.byte	0x23
 1516 03c9 30       		.uleb128 0x30
 1517 03ca 13       		.uleb128 0x13
 1518 03cb 78030000 		.4byte	.LASF59
 1519 03cf 06       		.byte	0x6
 1520 03d0 9701     		.2byte	0x197
 1521 03d2 F3050000 		.4byte	0x5f3
 1522 03d6 02       		.byte	0x2
 1523 03d7 23       		.byte	0x23
 1524 03d8 34       		.uleb128 0x34
 1525 03d9 13       		.uleb128 0x13
 1526 03da 9F070000 		.4byte	.LASF60
 1527 03de 06       		.byte	0x6
 1528 03df 9901     		.2byte	0x199
 1529 03e1 6E080000 		.4byte	0x86e
 1530 03e5 02       		.byte	0x2
 1531 03e6 23       		.byte	0x23
 1532 03e7 38       		.uleb128 0x38
 1533 03e8 13       		.uleb128 0x13
 1534 03e9 A0010000 		.4byte	.LASF61
 1535 03ed 06       		.byte	0x6
 1536 03ee 9A01     		.2byte	0x19a
 1537 03f0 74080000 		.4byte	0x874
 1538 03f4 02       		.byte	0x2
 1539 03f5 23       		.byte	0x23
 1540 03f6 3C       		.uleb128 0x3c
 1541 03f7 13       		.uleb128 0x13
 1542 03f8 6B000000 		.4byte	.LASF62
 1543 03fc 06       		.byte	0x6
ARM GAS  /tmp/ccZvkXpi.s 			page 59


 1544 03fd 9B01     		.2byte	0x19b
 1545 03ff F3050000 		.4byte	0x5f3
 1546 0403 02       		.byte	0x2
 1547 0404 23       		.byte	0x23
 1548 0405 40       		.uleb128 0x40
 1549 0406 13       		.uleb128 0x13
 1550 0407 66030000 		.4byte	.LASF63
 1551 040b 06       		.byte	0x6
 1552 040c 9E01     		.2byte	0x19e
 1553 040e 86080000 		.4byte	0x886
 1554 0412 02       		.byte	0x2
 1555 0413 23       		.byte	0x23
 1556 0414 44       		.uleb128 0x44
 1557 0415 13       		.uleb128 0x13
 1558 0416 46060000 		.4byte	.LASF39
 1559 041a 06       		.byte	0x6
 1560 041b A101     		.2byte	0x1a1
 1561 041d A7020000 		.4byte	0x2a7
 1562 0421 02       		.byte	0x2
 1563 0422 23       		.byte	0x23
 1564 0423 48       		.uleb128 0x48
 1565 0424 13       		.uleb128 0x13
 1566 0425 FA040000 		.4byte	.LASF64
 1567 0429 06       		.byte	0x6
 1568 042a A201     		.2byte	0x1a2
 1569 042c 61020000 		.4byte	0x261
 1570 0430 02       		.byte	0x2
 1571 0431 23       		.byte	0x23
 1572 0432 4C       		.uleb128 0x4c
 1573 0433 13       		.uleb128 0x13
 1574 0434 3F050000 		.4byte	.LASF65
 1575 0438 06       		.byte	0x6
 1576 0439 A401     		.2byte	0x1a4
 1577 043b A2060000 		.4byte	0x6a2
 1578 043f 03       		.byte	0x3
 1579 0440 23       		.byte	0x23
 1580 0441 D801     		.uleb128 0xd8
 1581 0443 13       		.uleb128 0x13
 1582 0444 3C000000 		.4byte	.LASF66
 1583 0448 06       		.byte	0x6
 1584 0449 A501     		.2byte	0x1a5
 1585 044b E3060000 		.4byte	0x6e3
 1586 044f 03       		.byte	0x3
 1587 0450 23       		.byte	0x23
 1588 0451 E401     		.uleb128 0xe4
 1589 0453 13       		.uleb128 0x13
 1590 0454 69090000 		.4byte	.LASF67
 1591 0458 06       		.byte	0x6
 1592 0459 A601     		.2byte	0x1a6
 1593 045b 92080000 		.4byte	0x892
 1594 045f 03       		.byte	0x3
 1595 0460 23       		.byte	0x23
 1596 0461 E801     		.uleb128 0xe8
 1597 0463 13       		.uleb128 0x13
 1598 0464 8F040000 		.4byte	.LASF68
 1599 0468 06       		.byte	0x6
 1600 0469 A701     		.2byte	0x1a7
ARM GAS  /tmp/ccZvkXpi.s 			page 60


 1601 046b F3050000 		.4byte	0x5f3
 1602 046f 03       		.byte	0x3
 1603 0470 23       		.byte	0x23
 1604 0471 EC01     		.uleb128 0xec
 1605 0473 00       		.byte	0
 1606 0474 0F       		.uleb128 0xf
 1607 0475 04       		.byte	0x4
 1608 0476 FA020000 		.4byte	0x2fa
 1609 047a 0D       		.uleb128 0xd
 1610 047b 33040000 		.4byte	.LASF69
 1611 047f 68       		.byte	0x68
 1612 0480 06       		.byte	0x6
 1613 0481 B3       		.byte	0xb3
 1614 0482 D4050000 		.4byte	0x5d4
 1615 0486 0E       		.uleb128 0xe
 1616 0487 5F7000   		.ascii	"_p\000"
 1617 048a 06       		.byte	0x6
 1618 048b B4       		.byte	0xb4
 1619 048c F4020000 		.4byte	0x2f4
 1620 0490 02       		.byte	0x2
 1621 0491 23       		.byte	0x23
 1622 0492 00       		.uleb128 0
 1623 0493 0E       		.uleb128 0xe
 1624 0494 5F7200   		.ascii	"_r\000"
 1625 0497 06       		.byte	0x6
 1626 0498 B5       		.byte	0xb5
 1627 0499 45000000 		.4byte	0x45
 1628 049d 02       		.byte	0x2
 1629 049e 23       		.byte	0x23
 1630 049f 04       		.uleb128 0x4
 1631 04a0 0E       		.uleb128 0xe
 1632 04a1 5F7700   		.ascii	"_w\000"
 1633 04a4 06       		.byte	0x6
 1634 04a5 B6       		.byte	0xb6
 1635 04a6 45000000 		.4byte	0x45
 1636 04aa 02       		.byte	0x2
 1637 04ab 23       		.byte	0x23
 1638 04ac 08       		.uleb128 0x8
 1639 04ad 0B       		.uleb128 0xb
 1640 04ae 3F060000 		.4byte	.LASF70
 1641 04b2 06       		.byte	0x6
 1642 04b3 B7       		.byte	0xb7
 1643 04b4 37000000 		.4byte	0x37
 1644 04b8 02       		.byte	0x2
 1645 04b9 23       		.byte	0x23
 1646 04ba 0C       		.uleb128 0xc
 1647 04bb 0B       		.uleb128 0xb
 1648 04bc 31010000 		.4byte	.LASF71
 1649 04c0 06       		.byte	0x6
 1650 04c1 B8       		.byte	0xb8
 1651 04c2 37000000 		.4byte	0x37
 1652 04c6 02       		.byte	0x2
 1653 04c7 23       		.byte	0x23
 1654 04c8 0E       		.uleb128 0xe
 1655 04c9 0E       		.uleb128 0xe
 1656 04ca 5F626600 		.ascii	"_bf\000"
 1657 04ce 06       		.byte	0x6
ARM GAS  /tmp/ccZvkXpi.s 			page 61


 1658 04cf B9       		.byte	0xb9
 1659 04d0 CB020000 		.4byte	0x2cb
 1660 04d4 02       		.byte	0x2
 1661 04d5 23       		.byte	0x23
 1662 04d6 10       		.uleb128 0x10
 1663 04d7 0B       		.uleb128 0xb
 1664 04d8 13090000 		.4byte	.LASF72
 1665 04dc 06       		.byte	0x6
 1666 04dd BA       		.byte	0xba
 1667 04de 45000000 		.4byte	0x45
 1668 04e2 02       		.byte	0x2
 1669 04e3 23       		.byte	0x23
 1670 04e4 18       		.uleb128 0x18
 1671 04e5 0B       		.uleb128 0xb
 1672 04e6 D5070000 		.4byte	.LASF73
 1673 04ea 06       		.byte	0x6
 1674 04eb BD       		.byte	0xbd
 1675 04ec 74040000 		.4byte	0x474
 1676 04f0 02       		.byte	0x2
 1677 04f1 23       		.byte	0x23
 1678 04f2 1C       		.uleb128 0x1c
 1679 04f3 0B       		.uleb128 0xb
 1680 04f4 47030000 		.4byte	.LASF74
 1681 04f8 06       		.byte	0x6
 1682 04f9 C1       		.byte	0xc1
 1683 04fa F4000000 		.4byte	0xf4
 1684 04fe 02       		.byte	0x2
 1685 04ff 23       		.byte	0x23
 1686 0500 20       		.uleb128 0x20
 1687 0501 0B       		.uleb128 0xb
 1688 0502 41000000 		.4byte	.LASF75
 1689 0506 06       		.byte	0x6
 1690 0507 C3       		.byte	0xc3
 1691 0508 00060000 		.4byte	0x600
 1692 050c 02       		.byte	0x2
 1693 050d 23       		.byte	0x23
 1694 050e 24       		.uleb128 0x24
 1695 050f 0B       		.uleb128 0xb
 1696 0510 5C000000 		.4byte	.LASF76
 1697 0514 06       		.byte	0x6
 1698 0515 C5       		.byte	0xc5
 1699 0516 30060000 		.4byte	0x630
 1700 051a 02       		.byte	0x2
 1701 051b 23       		.byte	0x23
 1702 051c 28       		.uleb128 0x28
 1703 051d 0B       		.uleb128 0xb
 1704 051e 80060000 		.4byte	.LASF77
 1705 0522 06       		.byte	0x6
 1706 0523 C7       		.byte	0xc7
 1707 0524 55060000 		.4byte	0x655
 1708 0528 02       		.byte	0x2
 1709 0529 23       		.byte	0x23
 1710 052a 2C       		.uleb128 0x2c
 1711 052b 0B       		.uleb128 0xb
 1712 052c D2020000 		.4byte	.LASF78
 1713 0530 06       		.byte	0x6
 1714 0531 C8       		.byte	0xc8
ARM GAS  /tmp/ccZvkXpi.s 			page 62


 1715 0532 70060000 		.4byte	0x670
 1716 0536 02       		.byte	0x2
 1717 0537 23       		.byte	0x23
 1718 0538 30       		.uleb128 0x30
 1719 0539 0E       		.uleb128 0xe
 1720 053a 5F756200 		.ascii	"_ub\000"
 1721 053e 06       		.byte	0x6
 1722 053f CB       		.byte	0xcb
 1723 0540 CB020000 		.4byte	0x2cb
 1724 0544 02       		.byte	0x2
 1725 0545 23       		.byte	0x23
 1726 0546 34       		.uleb128 0x34
 1727 0547 0E       		.uleb128 0xe
 1728 0548 5F757000 		.ascii	"_up\000"
 1729 054c 06       		.byte	0x6
 1730 054d CC       		.byte	0xcc
 1731 054e F4020000 		.4byte	0x2f4
 1732 0552 02       		.byte	0x2
 1733 0553 23       		.byte	0x23
 1734 0554 3C       		.uleb128 0x3c
 1735 0555 0E       		.uleb128 0xe
 1736 0556 5F757200 		.ascii	"_ur\000"
 1737 055a 06       		.byte	0x6
 1738 055b CD       		.byte	0xcd
 1739 055c 45000000 		.4byte	0x45
 1740 0560 02       		.byte	0x2
 1741 0561 23       		.byte	0x23
 1742 0562 40       		.uleb128 0x40
 1743 0563 0B       		.uleb128 0xb
 1744 0564 0F060000 		.4byte	.LASF79
 1745 0568 06       		.byte	0x6
 1746 0569 D0       		.byte	0xd0
 1747 056a 76060000 		.4byte	0x676
 1748 056e 02       		.byte	0x2
 1749 056f 23       		.byte	0x23
 1750 0570 44       		.uleb128 0x44
 1751 0571 0B       		.uleb128 0xb
 1752 0572 AE000000 		.4byte	.LASF80
 1753 0576 06       		.byte	0x6
 1754 0577 D1       		.byte	0xd1
 1755 0578 86060000 		.4byte	0x686
 1756 057c 02       		.byte	0x2
 1757 057d 23       		.byte	0x23
 1758 057e 47       		.uleb128 0x47
 1759 057f 0E       		.uleb128 0xe
 1760 0580 5F6C6200 		.ascii	"_lb\000"
 1761 0584 06       		.byte	0x6
 1762 0585 D4       		.byte	0xd4
 1763 0586 CB020000 		.4byte	0x2cb
 1764 058a 02       		.byte	0x2
 1765 058b 23       		.byte	0x23
 1766 058c 48       		.uleb128 0x48
 1767 058d 0B       		.uleb128 0xb
 1768 058e 22070000 		.4byte	.LASF81
 1769 0592 06       		.byte	0x6
 1770 0593 D7       		.byte	0xd7
 1771 0594 45000000 		.4byte	0x45
ARM GAS  /tmp/ccZvkXpi.s 			page 63


 1772 0598 02       		.byte	0x2
 1773 0599 23       		.byte	0x23
 1774 059a 50       		.uleb128 0x50
 1775 059b 0B       		.uleb128 0xb
 1776 059c 70030000 		.4byte	.LASF82
 1777 05a0 06       		.byte	0x6
 1778 05a1 D8       		.byte	0xd8
 1779 05a2 45000000 		.4byte	0x45
 1780 05a6 02       		.byte	0x2
 1781 05a7 23       		.byte	0x23
 1782 05a8 54       		.uleb128 0x54
 1783 05a9 0B       		.uleb128 0xb
 1784 05aa C7000000 		.4byte	.LASF83
 1785 05ae 06       		.byte	0x6
 1786 05af DF       		.byte	0xdf
 1787 05b0 E9000000 		.4byte	0xe9
 1788 05b4 02       		.byte	0x2
 1789 05b5 23       		.byte	0x23
 1790 05b6 58       		.uleb128 0x58
 1791 05b7 0B       		.uleb128 0xb
 1792 05b8 2B060000 		.4byte	.LASF84
 1793 05bc 06       		.byte	0x6
 1794 05bd E1       		.byte	0xe1
 1795 05be DE000000 		.4byte	0xde
 1796 05c2 02       		.byte	0x2
 1797 05c3 23       		.byte	0x23
 1798 05c4 5C       		.uleb128 0x5c
 1799 05c5 0B       		.uleb128 0xb
 1800 05c6 46040000 		.4byte	.LASF85
 1801 05ca 06       		.byte	0x6
 1802 05cb E2       		.byte	0xe2
 1803 05cc 45000000 		.4byte	0x45
 1804 05d0 02       		.byte	0x2
 1805 05d1 23       		.byte	0x23
 1806 05d2 64       		.uleb128 0x64
 1807 05d3 00       		.byte	0
 1808 05d4 15       		.uleb128 0x15
 1809 05d5 01       		.byte	0x1
 1810 05d6 45000000 		.4byte	0x45
 1811 05da F3050000 		.4byte	0x5f3
 1812 05de 16       		.uleb128 0x16
 1813 05df 74040000 		.4byte	0x474
 1814 05e3 16       		.uleb128 0x16
 1815 05e4 F4000000 		.4byte	0xf4
 1816 05e8 16       		.uleb128 0x16
 1817 05e9 F3050000 		.4byte	0x5f3
 1818 05ed 16       		.uleb128 0x16
 1819 05ee 45000000 		.4byte	0x45
 1820 05f2 00       		.byte	0
 1821 05f3 0F       		.uleb128 0xf
 1822 05f4 04       		.byte	0x4
 1823 05f5 F9050000 		.4byte	0x5f9
 1824 05f9 02       		.uleb128 0x2
 1825 05fa 01       		.byte	0x1
 1826 05fb 08       		.byte	0x8
 1827 05fc BA020000 		.4byte	.LASF86
 1828 0600 0F       		.uleb128 0xf
ARM GAS  /tmp/ccZvkXpi.s 			page 64


 1829 0601 04       		.byte	0x4
 1830 0602 D4050000 		.4byte	0x5d4
 1831 0606 15       		.uleb128 0x15
 1832 0607 01       		.byte	0x1
 1833 0608 45000000 		.4byte	0x45
 1834 060c 25060000 		.4byte	0x625
 1835 0610 16       		.uleb128 0x16
 1836 0611 74040000 		.4byte	0x474
 1837 0615 16       		.uleb128 0x16
 1838 0616 F4000000 		.4byte	0xf4
 1839 061a 16       		.uleb128 0x16
 1840 061b 25060000 		.4byte	0x625
 1841 061f 16       		.uleb128 0x16
 1842 0620 45000000 		.4byte	0x45
 1843 0624 00       		.byte	0
 1844 0625 0F       		.uleb128 0xf
 1845 0626 04       		.byte	0x4
 1846 0627 2B060000 		.4byte	0x62b
 1847 062b 17       		.uleb128 0x17
 1848 062c F9050000 		.4byte	0x5f9
 1849 0630 0F       		.uleb128 0xf
 1850 0631 04       		.byte	0x4
 1851 0632 06060000 		.4byte	0x606
 1852 0636 15       		.uleb128 0x15
 1853 0637 01       		.byte	0x1
 1854 0638 73000000 		.4byte	0x73
 1855 063c 55060000 		.4byte	0x655
 1856 0640 16       		.uleb128 0x16
 1857 0641 74040000 		.4byte	0x474
 1858 0645 16       		.uleb128 0x16
 1859 0646 F4000000 		.4byte	0xf4
 1860 064a 16       		.uleb128 0x16
 1861 064b 73000000 		.4byte	0x73
 1862 064f 16       		.uleb128 0x16
 1863 0650 45000000 		.4byte	0x45
 1864 0654 00       		.byte	0
 1865 0655 0F       		.uleb128 0xf
 1866 0656 04       		.byte	0x4
 1867 0657 36060000 		.4byte	0x636
 1868 065b 15       		.uleb128 0x15
 1869 065c 01       		.byte	0x1
 1870 065d 45000000 		.4byte	0x45
 1871 0661 70060000 		.4byte	0x670
 1872 0665 16       		.uleb128 0x16
 1873 0666 74040000 		.4byte	0x474
 1874 066a 16       		.uleb128 0x16
 1875 066b F4000000 		.4byte	0xf4
 1876 066f 00       		.byte	0
 1877 0670 0F       		.uleb128 0xf
 1878 0671 04       		.byte	0x4
 1879 0672 5B060000 		.4byte	0x65b
 1880 0676 08       		.uleb128 0x8
 1881 0677 30000000 		.4byte	0x30
 1882 067b 86060000 		.4byte	0x686
 1883 067f 09       		.uleb128 0x9
 1884 0680 4C000000 		.4byte	0x4c
 1885 0684 02       		.byte	0x2
ARM GAS  /tmp/ccZvkXpi.s 			page 65


 1886 0685 00       		.byte	0
 1887 0686 08       		.uleb128 0x8
 1888 0687 30000000 		.4byte	0x30
 1889 068b 96060000 		.4byte	0x696
 1890 068f 09       		.uleb128 0x9
 1891 0690 4C000000 		.4byte	0x4c
 1892 0694 00       		.byte	0
 1893 0695 00       		.byte	0
 1894 0696 05       		.uleb128 0x5
 1895 0697 82070000 		.4byte	.LASF87
 1896 069b 06       		.byte	0x6
 1897 069c 1E01     		.2byte	0x11e
 1898 069e 7A040000 		.4byte	0x47a
 1899 06a2 12       		.uleb128 0x12
 1900 06a3 9C050000 		.4byte	.LASF88
 1901 06a7 0C       		.byte	0xc
 1902 06a8 06       		.byte	0x6
 1903 06a9 2201     		.2byte	0x122
 1904 06ab DD060000 		.4byte	0x6dd
 1905 06af 13       		.uleb128 0x13
 1906 06b0 CF070000 		.4byte	.LASF19
 1907 06b4 06       		.byte	0x6
 1908 06b5 2401     		.2byte	0x124
 1909 06b7 DD060000 		.4byte	0x6dd
 1910 06bb 02       		.byte	0x2
 1911 06bc 23       		.byte	0x23
 1912 06bd 00       		.uleb128 0
 1913 06be 13       		.uleb128 0x13
 1914 06bf 2E050000 		.4byte	.LASF89
 1915 06c3 06       		.byte	0x6
 1916 06c4 2501     		.2byte	0x125
 1917 06c6 45000000 		.4byte	0x45
 1918 06ca 02       		.byte	0x2
 1919 06cb 23       		.byte	0x23
 1920 06cc 04       		.uleb128 0x4
 1921 06cd 13       		.uleb128 0x13
 1922 06ce 96050000 		.4byte	.LASF90
 1923 06d2 06       		.byte	0x6
 1924 06d3 2601     		.2byte	0x126
 1925 06d5 E3060000 		.4byte	0x6e3
 1926 06d9 02       		.byte	0x2
 1927 06da 23       		.byte	0x23
 1928 06db 08       		.uleb128 0x8
 1929 06dc 00       		.byte	0
 1930 06dd 0F       		.uleb128 0xf
 1931 06de 04       		.byte	0x4
 1932 06df A2060000 		.4byte	0x6a2
 1933 06e3 0F       		.uleb128 0xf
 1934 06e4 04       		.byte	0x4
 1935 06e5 96060000 		.4byte	0x696
 1936 06e9 12       		.uleb128 0x12
 1937 06ea F3060000 		.4byte	.LASF91
 1938 06ee 18       		.byte	0x18
 1939 06ef 06       		.byte	0x6
 1940 06f0 3E01     		.2byte	0x13e
 1941 06f2 33070000 		.4byte	0x733
 1942 06f6 13       		.uleb128 0x13
ARM GAS  /tmp/ccZvkXpi.s 			page 66


 1943 06f7 7A060000 		.4byte	.LASF92
 1944 06fb 06       		.byte	0x6
 1945 06fc 3F01     		.2byte	0x13f
 1946 06fe 33070000 		.4byte	0x733
 1947 0702 02       		.byte	0x2
 1948 0703 23       		.byte	0x23
 1949 0704 00       		.uleb128 0
 1950 0705 13       		.uleb128 0x13
 1951 0706 DE000000 		.4byte	.LASF93
 1952 070a 06       		.byte	0x6
 1953 070b 4001     		.2byte	0x140
 1954 070d 33070000 		.4byte	0x733
 1955 0711 02       		.byte	0x2
 1956 0712 23       		.byte	0x23
 1957 0713 06       		.uleb128 0x6
 1958 0714 13       		.uleb128 0x13
 1959 0715 AB090000 		.4byte	.LASF94
 1960 0719 06       		.byte	0x6
 1961 071a 4101     		.2byte	0x141
 1962 071c 3E000000 		.4byte	0x3e
 1963 0720 02       		.byte	0x2
 1964 0721 23       		.byte	0x23
 1965 0722 0C       		.uleb128 0xc
 1966 0723 13       		.uleb128 0x13
 1967 0724 34060000 		.4byte	.LASF95
 1968 0728 06       		.byte	0x6
 1969 0729 4401     		.2byte	0x144
 1970 072b 5A000000 		.4byte	0x5a
 1971 072f 02       		.byte	0x2
 1972 0730 23       		.byte	0x23
 1973 0731 10       		.uleb128 0x10
 1974 0732 00       		.byte	0
 1975 0733 08       		.uleb128 0x8
 1976 0734 3E000000 		.4byte	0x3e
 1977 0738 43070000 		.4byte	0x743
 1978 073c 09       		.uleb128 0x9
 1979 073d 4C000000 		.4byte	0x4c
 1980 0741 02       		.byte	0x2
 1981 0742 00       		.byte	0
 1982 0743 12       		.uleb128 0x12
 1983 0744 52090000 		.4byte	.LASF96
 1984 0748 10       		.byte	0x10
 1985 0749 06       		.byte	0x6
 1986 074a 5F01     		.2byte	0x15f
 1987 074c 8D070000 		.4byte	0x78d
 1988 0750 13       		.uleb128 0x13
 1989 0751 89090000 		.4byte	.LASF97
 1990 0755 06       		.byte	0x6
 1991 0756 6201     		.2byte	0x162
 1992 0758 67010000 		.4byte	0x167
 1993 075c 02       		.byte	0x2
 1994 075d 23       		.byte	0x23
 1995 075e 00       		.uleb128 0
 1996 075f 13       		.uleb128 0x13
 1997 0760 90010000 		.4byte	.LASF98
 1998 0764 06       		.byte	0x6
 1999 0765 6301     		.2byte	0x163
ARM GAS  /tmp/ccZvkXpi.s 			page 67


 2000 0767 45000000 		.4byte	0x45
 2001 076b 02       		.byte	0x2
 2002 076c 23       		.byte	0x23
 2003 076d 04       		.uleb128 0x4
 2004 076e 13       		.uleb128 0x13
 2005 076f FF030000 		.4byte	.LASF99
 2006 0773 06       		.byte	0x6
 2007 0774 6401     		.2byte	0x164
 2008 0776 67010000 		.4byte	0x167
 2009 077a 02       		.byte	0x2
 2010 077b 23       		.byte	0x23
 2011 077c 08       		.uleb128 0x8
 2012 077d 13       		.uleb128 0x13
 2013 077e 8C050000 		.4byte	.LASF100
 2014 0782 06       		.byte	0x6
 2015 0783 6501     		.2byte	0x165
 2016 0785 8D070000 		.4byte	0x78d
 2017 0789 02       		.byte	0x2
 2018 078a 23       		.byte	0x23
 2019 078b 0C       		.uleb128 0xc
 2020 078c 00       		.byte	0
 2021 078d 0F       		.uleb128 0xf
 2022 078e 04       		.byte	0x4
 2023 078f 67010000 		.4byte	0x167
 2024 0793 12       		.uleb128 0x12
 2025 0794 F7010000 		.4byte	.LASF101
 2026 0798 50       		.byte	0x50
 2027 0799 06       		.byte	0x6
 2028 079a 6901     		.2byte	0x169
 2029 079c 46080000 		.4byte	0x846
 2030 07a0 13       		.uleb128 0x13
 2031 07a1 40070000 		.4byte	.LASF102
 2032 07a5 06       		.byte	0x6
 2033 07a6 6C01     		.2byte	0x16c
 2034 07a8 F3050000 		.4byte	0x5f3
 2035 07ac 02       		.byte	0x2
 2036 07ad 23       		.byte	0x23
 2037 07ae 00       		.uleb128 0
 2038 07af 13       		.uleb128 0x13
 2039 07b0 A3080000 		.4byte	.LASF103
 2040 07b4 06       		.byte	0x6
 2041 07b5 6D01     		.2byte	0x16d
 2042 07b7 DE000000 		.4byte	0xde
 2043 07bb 02       		.byte	0x2
 2044 07bc 23       		.byte	0x23
 2045 07bd 04       		.uleb128 0x4
 2046 07be 13       		.uleb128 0x13
 2047 07bf 1D060000 		.4byte	.LASF104
 2048 07c3 06       		.byte	0x6
 2049 07c4 6E01     		.2byte	0x16e
 2050 07c6 DE000000 		.4byte	0xde
 2051 07ca 02       		.byte	0x2
 2052 07cb 23       		.byte	0x23
 2053 07cc 0C       		.uleb128 0xc
 2054 07cd 13       		.uleb128 0x13
 2055 07ce A9060000 		.4byte	.LASF105
 2056 07d2 06       		.byte	0x6
ARM GAS  /tmp/ccZvkXpi.s 			page 68


 2057 07d3 6F01     		.2byte	0x16f
 2058 07d5 DE000000 		.4byte	0xde
 2059 07d9 02       		.byte	0x2
 2060 07da 23       		.byte	0x23
 2061 07db 14       		.uleb128 0x14
 2062 07dc 13       		.uleb128 0x13
 2063 07dd BD000000 		.4byte	.LASF106
 2064 07e1 06       		.byte	0x6
 2065 07e2 7001     		.2byte	0x170
 2066 07e4 46080000 		.4byte	0x846
 2067 07e8 02       		.byte	0x2
 2068 07e9 23       		.byte	0x23
 2069 07ea 1C       		.uleb128 0x1c
 2070 07eb 13       		.uleb128 0x13
 2071 07ec 520A0000 		.4byte	.LASF107
 2072 07f0 06       		.byte	0x6
 2073 07f1 7101     		.2byte	0x171
 2074 07f3 45000000 		.4byte	0x45
 2075 07f7 02       		.byte	0x2
 2076 07f8 23       		.byte	0x23
 2077 07f9 24       		.uleb128 0x24
 2078 07fa 13       		.uleb128 0x13
 2079 07fb 6D010000 		.4byte	.LASF108
 2080 07ff 06       		.byte	0x6
 2081 0800 7201     		.2byte	0x172
 2082 0802 DE000000 		.4byte	0xde
 2083 0806 02       		.byte	0x2
 2084 0807 23       		.byte	0x23
 2085 0808 28       		.uleb128 0x28
 2086 0809 13       		.uleb128 0x13
 2087 080a 56070000 		.4byte	.LASF109
 2088 080e 06       		.byte	0x6
 2089 080f 7301     		.2byte	0x173
 2090 0811 DE000000 		.4byte	0xde
 2091 0815 02       		.byte	0x2
 2092 0816 23       		.byte	0x23
 2093 0817 30       		.uleb128 0x30
 2094 0818 13       		.uleb128 0x13
 2095 0819 E2090000 		.4byte	.LASF110
 2096 081d 06       		.byte	0x6
 2097 081e 7401     		.2byte	0x174
 2098 0820 DE000000 		.4byte	0xde
 2099 0824 02       		.byte	0x2
 2100 0825 23       		.byte	0x23
 2101 0826 38       		.uleb128 0x38
 2102 0827 13       		.uleb128 0x13
 2103 0828 EE050000 		.4byte	.LASF111
 2104 082c 06       		.byte	0x6
 2105 082d 7501     		.2byte	0x175
 2106 082f DE000000 		.4byte	0xde
 2107 0833 02       		.byte	0x2
 2108 0834 23       		.byte	0x23
 2109 0835 40       		.uleb128 0x40
 2110 0836 13       		.uleb128 0x13
 2111 0837 9D000000 		.4byte	.LASF112
 2112 083b 06       		.byte	0x6
 2113 083c 7601     		.2byte	0x176
ARM GAS  /tmp/ccZvkXpi.s 			page 69


 2114 083e DE000000 		.4byte	0xde
 2115 0842 02       		.byte	0x2
 2116 0843 23       		.byte	0x23
 2117 0844 48       		.uleb128 0x48
 2118 0845 00       		.byte	0
 2119 0846 08       		.uleb128 0x8
 2120 0847 F9050000 		.4byte	0x5f9
 2121 084b 56080000 		.4byte	0x856
 2122 084f 09       		.uleb128 0x9
 2123 0850 4C000000 		.4byte	0x4c
 2124 0854 07       		.byte	0x7
 2125 0855 00       		.byte	0
 2126 0856 0F       		.uleb128 0xf
 2127 0857 04       		.byte	0x4
 2128 0858 43070000 		.4byte	0x743
 2129 085c 18       		.uleb128 0x18
 2130 085d 01       		.byte	0x1
 2131 085e 68080000 		.4byte	0x868
 2132 0862 16       		.uleb128 0x16
 2133 0863 74040000 		.4byte	0x474
 2134 0867 00       		.byte	0
 2135 0868 0F       		.uleb128 0xf
 2136 0869 04       		.byte	0x4
 2137 086a 5C080000 		.4byte	0x85c
 2138 086e 0F       		.uleb128 0xf
 2139 086f 04       		.byte	0x4
 2140 0870 E9060000 		.4byte	0x6e9
 2141 0874 0F       		.uleb128 0xf
 2142 0875 04       		.byte	0x4
 2143 0876 7D010000 		.4byte	0x17d
 2144 087a 18       		.uleb128 0x18
 2145 087b 01       		.byte	0x1
 2146 087c 86080000 		.4byte	0x886
 2147 0880 16       		.uleb128 0x16
 2148 0881 45000000 		.4byte	0x45
 2149 0885 00       		.byte	0
 2150 0886 0F       		.uleb128 0xf
 2151 0887 04       		.byte	0x4
 2152 0888 8C080000 		.4byte	0x88c
 2153 088c 0F       		.uleb128 0xf
 2154 088d 04       		.byte	0x4
 2155 088e 7A080000 		.4byte	0x87a
 2156 0892 0F       		.uleb128 0xf
 2157 0893 04       		.byte	0x4
 2158 0894 93070000 		.4byte	0x793
 2159 0898 04       		.uleb128 0x4
 2160 0899 2E020000 		.4byte	.LASF113
 2161 089d 07       		.byte	0x7
 2162 089e 2A       		.byte	0x2a
 2163 089f 30000000 		.4byte	0x30
 2164 08a3 04       		.uleb128 0x4
 2165 08a4 DE060000 		.4byte	.LASF114
 2166 08a8 07       		.byte	0x7
 2167 08a9 36       		.byte	0x36
 2168 08aa 3E000000 		.4byte	0x3e
 2169 08ae 04       		.uleb128 0x4
 2170 08af 80090000 		.4byte	.LASF115
ARM GAS  /tmp/ccZvkXpi.s 			page 70


 2171 08b3 07       		.byte	0x7
 2172 08b4 50       		.byte	0x50
 2173 08b5 01010000 		.4byte	0x101
 2174 08b9 19       		.uleb128 0x19
 2175 08ba AE080000 		.4byte	0x8ae
 2176 08be 1A       		.uleb128 0x1a
 2177 08bf D0010000 		.4byte	.LASF290
 2178 08c3 01       		.byte	0x1
 2179 08c4 08       		.byte	0x8
 2180 08c5 49       		.byte	0x49
 2181 08c6 BB090000 		.4byte	0x9bb
 2182 08ca 1B       		.uleb128 0x1b
 2183 08cb E2030000 		.4byte	.LASF116
 2184 08cf 72       		.sleb128 -14
 2185 08d0 1B       		.uleb128 0x1b
 2186 08d1 16040000 		.4byte	.LASF117
 2187 08d5 74       		.sleb128 -12
 2188 08d6 1B       		.uleb128 0x1b
 2189 08d7 E5040000 		.4byte	.LASF118
 2190 08db 75       		.sleb128 -11
 2191 08dc 1B       		.uleb128 0x1b
 2192 08dd 98020000 		.4byte	.LASF119
 2193 08e1 76       		.sleb128 -10
 2194 08e2 1B       		.uleb128 0x1b
 2195 08e3 56050000 		.4byte	.LASF120
 2196 08e7 7B       		.sleb128 -5
 2197 08e8 1B       		.uleb128 0x1b
 2198 08e9 5A080000 		.4byte	.LASF121
 2199 08ed 7C       		.sleb128 -4
 2200 08ee 1B       		.uleb128 0x1b
 2201 08ef D6090000 		.4byte	.LASF122
 2202 08f3 7E       		.sleb128 -2
 2203 08f4 1B       		.uleb128 0x1b
 2204 08f5 03020000 		.4byte	.LASF123
 2205 08f9 7F       		.sleb128 -1
 2206 08fa 1B       		.uleb128 0x1b
 2207 08fb 80030000 		.4byte	.LASF124
 2208 08ff 00       		.sleb128 0
 2209 0900 1B       		.uleb128 0x1b
 2210 0901 E4000000 		.4byte	.LASF125
 2211 0905 01       		.sleb128 1
 2212 0906 1B       		.uleb128 0x1b
 2213 0907 720A0000 		.4byte	.LASF126
 2214 090b 02       		.sleb128 2
 2215 090c 1B       		.uleb128 0x1b
 2216 090d C6030000 		.4byte	.LASF127
 2217 0911 03       		.sleb128 3
 2218 0912 1B       		.uleb128 0x1b
 2219 0913 B2040000 		.4byte	.LASF128
 2220 0917 04       		.sleb128 4
 2221 0918 1B       		.uleb128 0x1b
 2222 0919 54030000 		.4byte	.LASF129
 2223 091d 05       		.sleb128 5
 2224 091e 1B       		.uleb128 0x1b
 2225 091f 5D030000 		.4byte	.LASF130
 2226 0923 06       		.sleb128 6
 2227 0924 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccZvkXpi.s 			page 71


 2228 0925 94070000 		.4byte	.LASF131
 2229 0929 08       		.sleb128 8
 2230 092a 1B       		.uleb128 0x1b
 2231 092b 86060000 		.4byte	.LASF132
 2232 092f 09       		.sleb128 9
 2233 0930 1B       		.uleb128 0x1b
 2234 0931 D9020000 		.4byte	.LASF133
 2235 0935 0A       		.sleb128 10
 2236 0936 1B       		.uleb128 0x1b
 2237 0937 E0080000 		.4byte	.LASF134
 2238 093b 0B       		.sleb128 11
 2239 093c 1B       		.uleb128 0x1b
 2240 093d 43080000 		.4byte	.LASF135
 2241 0941 0C       		.sleb128 12
 2242 0942 1B       		.uleb128 0x1b
 2243 0943 9A030000 		.4byte	.LASF136
 2244 0947 0D       		.sleb128 13
 2245 0948 1B       		.uleb128 0x1b
 2246 0949 E9070000 		.4byte	.LASF137
 2247 094d 0E       		.sleb128 14
 2248 094e 1B       		.uleb128 0x1b
 2249 094f 16070000 		.4byte	.LASF138
 2250 0953 0F       		.sleb128 15
 2251 0954 1B       		.uleb128 0x1b
 2252 0955 03070000 		.4byte	.LASF139
 2253 0959 12       		.sleb128 18
 2254 095a 1B       		.uleb128 0x1b
 2255 095b DD050000 		.4byte	.LASF140
 2256 095f 13       		.sleb128 19
 2257 0960 1B       		.uleb128 0x1b
 2258 0961 35050000 		.4byte	.LASF141
 2259 0965 14       		.sleb128 20
 2260 0966 1B       		.uleb128 0x1b
 2261 0967 DB070000 		.4byte	.LASF142
 2262 096b 15       		.sleb128 21
 2263 096c 1B       		.uleb128 0x1b
 2264 096d 77090000 		.4byte	.LASF143
 2265 0971 16       		.sleb128 22
 2266 0972 1B       		.uleb128 0x1b
 2267 0973 31080000 		.4byte	.LASF144
 2268 0977 17       		.sleb128 23
 2269 0978 1B       		.uleb128 0x1b
 2270 0979 91030000 		.4byte	.LASF145
 2271 097d 18       		.sleb128 24
 2272 097e 1B       		.uleb128 0x1b
 2273 097f 18000000 		.4byte	.LASF146
 2274 0983 19       		.sleb128 25
 2275 0984 1B       		.uleb128 0x1b
 2276 0985 FA090000 		.4byte	.LASF147
 2277 0989 1A       		.sleb128 26
 2278 098a 1B       		.uleb128 0x1b
 2279 098b D4050000 		.4byte	.LASF148
 2280 098f 1B       		.sleb128 27
 2281 0990 1B       		.uleb128 0x1b
 2282 0991 D5010000 		.4byte	.LASF149
 2283 0995 1C       		.sleb128 28
 2284 0996 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccZvkXpi.s 			page 72


 2285 0997 4D070000 		.4byte	.LASF150
 2286 099b 1D       		.sleb128 29
 2287 099c 1B       		.uleb128 0x1b
 2288 099d D8030000 		.4byte	.LASF151
 2289 09a1 1E       		.sleb128 30
 2290 09a2 1B       		.uleb128 0x1b
 2291 09a3 0F030000 		.4byte	.LASF152
 2292 09a7 1F       		.sleb128 31
 2293 09a8 1B       		.uleb128 0x1b
 2294 09a9 56010000 		.4byte	.LASF153
 2295 09ad 20       		.sleb128 32
 2296 09ae 1B       		.uleb128 0x1b
 2297 09af 3E030000 		.4byte	.LASF154
 2298 09b3 21       		.sleb128 33
 2299 09b4 1B       		.uleb128 0x1b
 2300 09b5 CF030000 		.4byte	.LASF155
 2301 09b9 22       		.sleb128 34
 2302 09ba 00       		.byte	0
 2303 09bb 04       		.uleb128 0x4
 2304 09bc 4E040000 		.4byte	.LASF156
 2305 09c0 08       		.byte	0x8
 2306 09c1 76       		.byte	0x76
 2307 09c2 BE080000 		.4byte	0x8be
 2308 09c6 1C       		.uleb128 0x1c
 2309 09c7 040E     		.2byte	0xe04
 2310 09c9 01       		.byte	0x1
 2311 09ca 84       		.byte	0x84
 2312 09cb 900A0000 		.4byte	0xa90
 2313 09cf 0B       		.uleb128 0xb
 2314 09d0 150A0000 		.4byte	.LASF157
 2315 09d4 01       		.byte	0x1
 2316 09d5 86       		.byte	0x86
 2317 09d6 A00A0000 		.4byte	0xaa0
 2318 09da 02       		.byte	0x2
 2319 09db 23       		.byte	0x23
 2320 09dc 00       		.uleb128 0
 2321 09dd 0B       		.uleb128 0xb
 2322 09de 40020000 		.4byte	.LASF158
 2323 09e2 01       		.byte	0x1
 2324 09e3 87       		.byte	0x87
 2325 09e4 A50A0000 		.4byte	0xaa5
 2326 09e8 02       		.byte	0x2
 2327 09e9 23       		.byte	0x23
 2328 09ea 20       		.uleb128 0x20
 2329 09eb 0B       		.uleb128 0xb
 2330 09ec 6D070000 		.4byte	.LASF159
 2331 09f0 01       		.byte	0x1
 2332 09f1 88       		.byte	0x88
 2333 09f2 B50A0000 		.4byte	0xab5
 2334 09f6 03       		.byte	0x3
 2335 09f7 23       		.byte	0x23
 2336 09f8 8001     		.uleb128 0x80
 2337 09fa 0B       		.uleb128 0xb
 2338 09fb 00000000 		.4byte	.LASF160
 2339 09ff 01       		.byte	0x1
 2340 0a00 89       		.byte	0x89
 2341 0a01 A50A0000 		.4byte	0xaa5
ARM GAS  /tmp/ccZvkXpi.s 			page 73


 2342 0a05 03       		.byte	0x3
 2343 0a06 23       		.byte	0x23
 2344 0a07 A001     		.uleb128 0xa0
 2345 0a09 0B       		.uleb128 0xb
 2346 0a0a 18030000 		.4byte	.LASF161
 2347 0a0e 01       		.byte	0x1
 2348 0a0f 8A       		.byte	0x8a
 2349 0a10 BA0A0000 		.4byte	0xaba
 2350 0a14 03       		.byte	0x3
 2351 0a15 23       		.byte	0x23
 2352 0a16 8002     		.uleb128 0x100
 2353 0a18 0B       		.uleb128 0xb
 2354 0a19 8E020000 		.4byte	.LASF162
 2355 0a1d 01       		.byte	0x1
 2356 0a1e 8B       		.byte	0x8b
 2357 0a1f A50A0000 		.4byte	0xaa5
 2358 0a23 03       		.byte	0x3
 2359 0a24 23       		.byte	0x23
 2360 0a25 A002     		.uleb128 0x120
 2361 0a27 0B       		.uleb128 0xb
 2362 0a28 01010000 		.4byte	.LASF163
 2363 0a2c 01       		.byte	0x1
 2364 0a2d 8C       		.byte	0x8c
 2365 0a2e BF0A0000 		.4byte	0xabf
 2366 0a32 03       		.byte	0x3
 2367 0a33 23       		.byte	0x23
 2368 0a34 8003     		.uleb128 0x180
 2369 0a36 0B       		.uleb128 0xb
 2370 0a37 58020000 		.4byte	.LASF164
 2371 0a3b 01       		.byte	0x1
 2372 0a3c 8D       		.byte	0x8d
 2373 0a3d A50A0000 		.4byte	0xaa5
 2374 0a41 03       		.byte	0x3
 2375 0a42 23       		.byte	0x23
 2376 0a43 A003     		.uleb128 0x1a0
 2377 0a45 0B       		.uleb128 0xb
 2378 0a46 76020000 		.4byte	.LASF165
 2379 0a4a 01       		.byte	0x1
 2380 0a4b 8E       		.byte	0x8e
 2381 0a4c C40A0000 		.4byte	0xac4
 2382 0a50 03       		.byte	0x3
 2383 0a51 23       		.byte	0x23
 2384 0a52 8004     		.uleb128 0x200
 2385 0a54 0B       		.uleb128 0xb
 2386 0a55 62020000 		.4byte	.LASF166
 2387 0a59 01       		.byte	0x1
 2388 0a5a 8F       		.byte	0x8f
 2389 0a5b C90A0000 		.4byte	0xac9
 2390 0a5f 03       		.byte	0x3
 2391 0a60 23       		.byte	0x23
 2392 0a61 A004     		.uleb128 0x220
 2393 0a63 0E       		.uleb128 0xe
 2394 0a64 495000   		.ascii	"IP\000"
 2395 0a67 01       		.byte	0x1
 2396 0a68 90       		.byte	0x90
 2397 0a69 E90A0000 		.4byte	0xae9
 2398 0a6d 03       		.byte	0x3
ARM GAS  /tmp/ccZvkXpi.s 			page 74


 2399 0a6e 23       		.byte	0x23
 2400 0a6f 8006     		.uleb128 0x300
 2401 0a71 0B       		.uleb128 0xb
 2402 0a72 6C020000 		.4byte	.LASF167
 2403 0a76 01       		.byte	0x1
 2404 0a77 91       		.byte	0x91
 2405 0a78 EE0A0000 		.4byte	0xaee
 2406 0a7c 03       		.byte	0x3
 2407 0a7d 23       		.byte	0x23
 2408 0a7e F007     		.uleb128 0x3f0
 2409 0a80 0B       		.uleb128 0xb
 2410 0a81 33030000 		.4byte	.LASF168
 2411 0a85 01       		.byte	0x1
 2412 0a86 92       		.byte	0x92
 2413 0a87 B9080000 		.4byte	0x8b9
 2414 0a8b 03       		.byte	0x3
 2415 0a8c 23       		.byte	0x23
 2416 0a8d 801C     		.uleb128 0xe00
 2417 0a8f 00       		.byte	0
 2418 0a90 08       		.uleb128 0x8
 2419 0a91 AE080000 		.4byte	0x8ae
 2420 0a95 A00A0000 		.4byte	0xaa0
 2421 0a99 09       		.uleb128 0x9
 2422 0a9a 4C000000 		.4byte	0x4c
 2423 0a9e 07       		.byte	0x7
 2424 0a9f 00       		.byte	0
 2425 0aa0 19       		.uleb128 0x19
 2426 0aa1 900A0000 		.4byte	0xa90
 2427 0aa5 08       		.uleb128 0x8
 2428 0aa6 AE080000 		.4byte	0x8ae
 2429 0aaa B50A0000 		.4byte	0xab5
 2430 0aae 09       		.uleb128 0x9
 2431 0aaf 4C000000 		.4byte	0x4c
 2432 0ab3 17       		.byte	0x17
 2433 0ab4 00       		.byte	0
 2434 0ab5 19       		.uleb128 0x19
 2435 0ab6 900A0000 		.4byte	0xa90
 2436 0aba 19       		.uleb128 0x19
 2437 0abb 900A0000 		.4byte	0xa90
 2438 0abf 19       		.uleb128 0x19
 2439 0ac0 900A0000 		.4byte	0xa90
 2440 0ac4 19       		.uleb128 0x19
 2441 0ac5 900A0000 		.4byte	0xa90
 2442 0ac9 08       		.uleb128 0x8
 2443 0aca AE080000 		.4byte	0x8ae
 2444 0ace D90A0000 		.4byte	0xad9
 2445 0ad2 09       		.uleb128 0x9
 2446 0ad3 4C000000 		.4byte	0x4c
 2447 0ad7 37       		.byte	0x37
 2448 0ad8 00       		.byte	0
 2449 0ad9 08       		.uleb128 0x8
 2450 0ada 98080000 		.4byte	0x898
 2451 0ade E90A0000 		.4byte	0xae9
 2452 0ae2 09       		.uleb128 0x9
 2453 0ae3 4C000000 		.4byte	0x4c
 2454 0ae7 EF       		.byte	0xef
 2455 0ae8 00       		.byte	0
ARM GAS  /tmp/ccZvkXpi.s 			page 75


 2456 0ae9 19       		.uleb128 0x19
 2457 0aea D90A0000 		.4byte	0xad9
 2458 0aee 08       		.uleb128 0x8
 2459 0aef AE080000 		.4byte	0x8ae
 2460 0af3 FF0A0000 		.4byte	0xaff
 2461 0af7 1D       		.uleb128 0x1d
 2462 0af8 4C000000 		.4byte	0x4c
 2463 0afc 8302     		.2byte	0x283
 2464 0afe 00       		.byte	0
 2465 0aff 04       		.uleb128 0x4
 2466 0b00 47000000 		.4byte	.LASF169
 2467 0b04 01       		.byte	0x1
 2468 0b05 93       		.byte	0x93
 2469 0b06 C6090000 		.4byte	0x9c6
 2470 0b0a 19       		.uleb128 0x19
 2471 0b0b 01010000 		.4byte	0x101
 2472 0b0f 17       		.uleb128 0x17
 2473 0b10 0A0B0000 		.4byte	0xb0a
 2474 0b14 08       		.uleb128 0x8
 2475 0b15 01010000 		.4byte	0x101
 2476 0b19 240B0000 		.4byte	0xb24
 2477 0b1d 09       		.uleb128 0x9
 2478 0b1e 4C000000 		.4byte	0x4c
 2479 0b22 12       		.byte	0x12
 2480 0b23 00       		.byte	0
 2481 0b24 1C       		.uleb128 0x1c
 2482 0b25 2801     		.2byte	0x128
 2483 0b27 08       		.byte	0x8
 2484 0b28 EF       		.byte	0xef
 2485 0b29 4A0D0000 		.4byte	0xd4a
 2486 0b2d 0B       		.uleb128 0xb
 2487 0b2e FC080000 		.4byte	.LASF170
 2488 0b32 08       		.byte	0x8
 2489 0b33 F0       		.byte	0xf0
 2490 0b34 0A0B0000 		.4byte	0xb0a
 2491 0b38 02       		.byte	0x2
 2492 0b39 23       		.byte	0x23
 2493 0b3a 00       		.uleb128 0
 2494 0b3b 0B       		.uleb128 0xb
 2495 0b3c E7010000 		.4byte	.LASF171
 2496 0b40 08       		.byte	0x8
 2497 0b41 F1       		.byte	0xf1
 2498 0b42 0A0B0000 		.4byte	0xb0a
 2499 0b46 02       		.byte	0x2
 2500 0b47 23       		.byte	0x23
 2501 0b48 04       		.uleb128 0x4
 2502 0b49 0B       		.uleb128 0xb
 2503 0b4a BB070000 		.4byte	.LASF172
 2504 0b4e 08       		.byte	0x8
 2505 0b4f F2       		.byte	0xf2
 2506 0b50 0A0B0000 		.4byte	0xb0a
 2507 0b54 02       		.byte	0x2
 2508 0b55 23       		.byte	0x23
 2509 0b56 08       		.uleb128 0x8
 2510 0b57 0B       		.uleb128 0xb
 2511 0b58 C5070000 		.4byte	.LASF173
 2512 0b5c 08       		.byte	0x8
ARM GAS  /tmp/ccZvkXpi.s 			page 76


 2513 0b5d F3       		.byte	0xf3
 2514 0b5e 0A0B0000 		.4byte	0xb0a
 2515 0b62 02       		.byte	0x2
 2516 0b63 23       		.byte	0x23
 2517 0b64 0C       		.uleb128 0xc
 2518 0b65 0B       		.uleb128 0xb
 2519 0b66 030A0000 		.4byte	.LASF174
 2520 0b6a 08       		.byte	0x8
 2521 0b6b F4       		.byte	0xf4
 2522 0b6c 0A0B0000 		.4byte	0xb0a
 2523 0b70 02       		.byte	0x2
 2524 0b71 23       		.byte	0x23
 2525 0b72 10       		.uleb128 0x10
 2526 0b73 0B       		.uleb128 0xb
 2527 0b74 A2090000 		.4byte	.LASF175
 2528 0b78 08       		.byte	0x8
 2529 0b79 F5       		.byte	0xf5
 2530 0b7a 0A0B0000 		.4byte	0xb0a
 2531 0b7e 02       		.byte	0x2
 2532 0b7f 23       		.byte	0x23
 2533 0b80 14       		.uleb128 0x14
 2534 0b81 0B       		.uleb128 0xb
 2535 0b82 F6030000 		.4byte	.LASF176
 2536 0b86 08       		.byte	0x8
 2537 0b87 F6       		.byte	0xf6
 2538 0b88 0F0B0000 		.4byte	0xb0f
 2539 0b8c 02       		.byte	0x2
 2540 0b8d 23       		.byte	0x23
 2541 0b8e 18       		.uleb128 0x18
 2542 0b8f 0B       		.uleb128 0xb
 2543 0b90 F5070000 		.4byte	.LASF177
 2544 0b94 08       		.byte	0x8
 2545 0b95 F7       		.byte	0xf7
 2546 0b96 5A0D0000 		.4byte	0xd5a
 2547 0b9a 02       		.byte	0x2
 2548 0b9b 23       		.byte	0x23
 2549 0b9c 1C       		.uleb128 0x1c
 2550 0b9d 0B       		.uleb128 0xb
 2551 0b9e A0040000 		.4byte	.LASF178
 2552 0ba2 08       		.byte	0x8
 2553 0ba3 F8       		.byte	0xf8
 2554 0ba4 0F0B0000 		.4byte	0xb0f
 2555 0ba8 02       		.byte	0x2
 2556 0ba9 23       		.byte	0x23
 2557 0baa 20       		.uleb128 0x20
 2558 0bab 0B       		.uleb128 0xb
 2559 0bac 07060000 		.4byte	.LASF179
 2560 0bb0 08       		.byte	0x8
 2561 0bb1 F9       		.byte	0xf9
 2562 0bb2 0A0B0000 		.4byte	0xb0a
 2563 0bb6 02       		.byte	0x2
 2564 0bb7 23       		.byte	0x23
 2565 0bb8 24       		.uleb128 0x24
 2566 0bb9 0B       		.uleb128 0xb
 2567 0bba BF050000 		.4byte	.LASF180
 2568 0bbe 08       		.byte	0x8
 2569 0bbf FA       		.byte	0xfa
ARM GAS  /tmp/ccZvkXpi.s 			page 77


 2570 0bc0 0A0B0000 		.4byte	0xb0a
 2571 0bc4 02       		.byte	0x2
 2572 0bc5 23       		.byte	0x23
 2573 0bc6 28       		.uleb128 0x28
 2574 0bc7 0B       		.uleb128 0xb
 2575 0bc8 F4080000 		.4byte	.LASF181
 2576 0bcc 08       		.byte	0x8
 2577 0bcd FB       		.byte	0xfb
 2578 0bce 0F0B0000 		.4byte	0xb0f
 2579 0bd2 02       		.byte	0x2
 2580 0bd3 23       		.byte	0x23
 2581 0bd4 2C       		.uleb128 0x2c
 2582 0bd5 0B       		.uleb128 0xb
 2583 0bd6 90000000 		.4byte	.LASF182
 2584 0bda 08       		.byte	0x8
 2585 0bdb FC       		.byte	0xfc
 2586 0bdc 0F0B0000 		.4byte	0xb0f
 2587 0be0 02       		.byte	0x2
 2588 0be1 23       		.byte	0x23
 2589 0be2 30       		.uleb128 0x30
 2590 0be3 0B       		.uleb128 0xb
 2591 0be4 FF070000 		.4byte	.LASF183
 2592 0be8 08       		.byte	0x8
 2593 0be9 FD       		.byte	0xfd
 2594 0bea 6F0D0000 		.4byte	0xd6f
 2595 0bee 02       		.byte	0x2
 2596 0bef 23       		.byte	0x23
 2597 0bf0 34       		.uleb128 0x34
 2598 0bf1 0B       		.uleb128 0xb
 2599 0bf2 CE080000 		.4byte	.LASF184
 2600 0bf6 08       		.byte	0x8
 2601 0bf7 FE       		.byte	0xfe
 2602 0bf8 0F0B0000 		.4byte	0xb0f
 2603 0bfc 02       		.byte	0x2
 2604 0bfd 23       		.byte	0x23
 2605 0bfe 3C       		.uleb128 0x3c
 2606 0bff 0B       		.uleb128 0xb
 2607 0c00 88000000 		.4byte	.LASF185
 2608 0c04 08       		.byte	0x8
 2609 0c05 FF       		.byte	0xff
 2610 0c06 0A0B0000 		.4byte	0xb0a
 2611 0c0a 02       		.byte	0x2
 2612 0c0b 23       		.byte	0x23
 2613 0c0c 40       		.uleb128 0x40
 2614 0c0d 13       		.uleb128 0x13
 2615 0c0e 360A0000 		.4byte	.LASF186
 2616 0c12 08       		.byte	0x8
 2617 0c13 0001     		.2byte	0x100
 2618 0c15 0A0B0000 		.4byte	0xb0a
 2619 0c19 02       		.byte	0x2
 2620 0c1a 23       		.byte	0x23
 2621 0c1b 44       		.uleb128 0x44
 2622 0c1c 13       		.uleb128 0x13
 2623 0c1d 7E040000 		.4byte	.LASF187
 2624 0c21 08       		.byte	0x8
 2625 0c22 0101     		.2byte	0x101
 2626 0c24 0A0B0000 		.4byte	0xb0a
ARM GAS  /tmp/ccZvkXpi.s 			page 78


 2627 0c28 02       		.byte	0x2
 2628 0c29 23       		.byte	0x23
 2629 0c2a 48       		.uleb128 0x48
 2630 0c2b 13       		.uleb128 0x13
 2631 0c2c FB060000 		.4byte	.LASF188
 2632 0c30 08       		.byte	0x8
 2633 0c31 0201     		.2byte	0x102
 2634 0c33 0A0B0000 		.4byte	0xb0a
 2635 0c37 02       		.byte	0x2
 2636 0c38 23       		.byte	0x23
 2637 0c39 4C       		.uleb128 0x4c
 2638 0c3a 13       		.uleb128 0x13
 2639 0c3b 2B030000 		.4byte	.LASF189
 2640 0c3f 08       		.byte	0x8
 2641 0c40 0301     		.2byte	0x103
 2642 0c42 840D0000 		.4byte	0xd84
 2643 0c46 02       		.byte	0x2
 2644 0c47 23       		.byte	0x23
 2645 0c48 50       		.uleb128 0x50
 2646 0c49 13       		.uleb128 0x13
 2647 0c4a 09080000 		.4byte	.LASF190
 2648 0c4e 08       		.byte	0x8
 2649 0c4f 0401     		.2byte	0x104
 2650 0c51 8E0D0000 		.4byte	0xd8e
 2651 0c55 03       		.byte	0x3
 2652 0c56 23       		.byte	0x23
 2653 0c57 9001     		.uleb128 0x90
 2654 0c59 13       		.uleb128 0x13
 2655 0c5a 91090000 		.4byte	.LASF191
 2656 0c5e 08       		.byte	0x8
 2657 0c5f 0501     		.2byte	0x105
 2658 0c61 0A0B0000 		.4byte	0xb0a
 2659 0c65 03       		.byte	0x3
 2660 0c66 23       		.byte	0x23
 2661 0c67 9401     		.uleb128 0x94
 2662 0c69 13       		.uleb128 0x13
 2663 0c6a 13080000 		.4byte	.LASF192
 2664 0c6e 08       		.byte	0x8
 2665 0c6f 0601     		.2byte	0x106
 2666 0c71 930D0000 		.4byte	0xd93
 2667 0c75 03       		.byte	0x3
 2668 0c76 23       		.byte	0x23
 2669 0c77 9801     		.uleb128 0x98
 2670 0c79 13       		.uleb128 0x13
 2671 0c7a C3090000 		.4byte	.LASF193
 2672 0c7e 08       		.byte	0x8
 2673 0c7f 0701     		.2byte	0x107
 2674 0c81 0A0B0000 		.4byte	0xb0a
 2675 0c85 03       		.byte	0x3
 2676 0c86 23       		.byte	0x23
 2677 0c87 E401     		.uleb128 0xe4
 2678 0c89 13       		.uleb128 0x13
 2679 0c8a 28010000 		.4byte	.LASF194
 2680 0c8e 08       		.byte	0x8
 2681 0c8f 0801     		.2byte	0x108
 2682 0c91 0F0B0000 		.4byte	0xb0f
 2683 0c95 03       		.byte	0x3
ARM GAS  /tmp/ccZvkXpi.s 			page 79


 2684 0c96 23       		.byte	0x23
 2685 0c97 E801     		.uleb128 0xe8
 2686 0c99 13       		.uleb128 0x13
 2687 0c9a 1D080000 		.4byte	.LASF195
 2688 0c9e 08       		.byte	0x8
 2689 0c9f 0901     		.2byte	0x109
 2690 0ca1 A80D0000 		.4byte	0xda8
 2691 0ca5 03       		.byte	0x3
 2692 0ca6 23       		.byte	0x23
 2693 0ca7 EC01     		.uleb128 0xec
 2694 0ca9 13       		.uleb128 0x13
 2695 0caa B3070000 		.4byte	.LASF196
 2696 0cae 08       		.byte	0x8
 2697 0caf 0A01     		.2byte	0x10a
 2698 0cb1 0A0B0000 		.4byte	0xb0a
 2699 0cb5 03       		.byte	0x3
 2700 0cb6 23       		.byte	0x23
 2701 0cb7 8002     		.uleb128 0x100
 2702 0cb9 13       		.uleb128 0x13
 2703 0cba 23030000 		.4byte	.LASF197
 2704 0cbe 08       		.byte	0x8
 2705 0cbf 0B01     		.2byte	0x10b
 2706 0cc1 0A0B0000 		.4byte	0xb0a
 2707 0cc5 03       		.byte	0x3
 2708 0cc6 23       		.byte	0x23
 2709 0cc7 8402     		.uleb128 0x104
 2710 0cc9 13       		.uleb128 0x13
 2711 0cca AF010000 		.4byte	.LASF198
 2712 0cce 08       		.byte	0x8
 2713 0ccf 0C01     		.2byte	0x10c
 2714 0cd1 0A0B0000 		.4byte	0xb0a
 2715 0cd5 03       		.byte	0x3
 2716 0cd6 23       		.byte	0x23
 2717 0cd7 8802     		.uleb128 0x108
 2718 0cd9 13       		.uleb128 0x13
 2719 0cda 65070000 		.4byte	.LASF199
 2720 0cde 08       		.byte	0x8
 2721 0cdf 0D01     		.2byte	0x10d
 2722 0ce1 0A0B0000 		.4byte	0xb0a
 2723 0ce5 03       		.byte	0x3
 2724 0ce6 23       		.byte	0x23
 2725 0ce7 8C02     		.uleb128 0x10c
 2726 0ce9 13       		.uleb128 0x13
 2727 0cea F8000000 		.4byte	.LASF200
 2728 0cee 08       		.byte	0x8
 2729 0cef 0E01     		.2byte	0x10e
 2730 0cf1 0A0B0000 		.4byte	0xb0a
 2731 0cf5 03       		.byte	0x3
 2732 0cf6 23       		.byte	0x23
 2733 0cf7 9002     		.uleb128 0x110
 2734 0cf9 13       		.uleb128 0x13
 2735 0cfa A0060000 		.4byte	.LASF201
 2736 0cfe 08       		.byte	0x8
 2737 0cff 0F01     		.2byte	0x10f
 2738 0d01 0A0B0000 		.4byte	0xb0a
 2739 0d05 03       		.byte	0x3
 2740 0d06 23       		.byte	0x23
ARM GAS  /tmp/ccZvkXpi.s 			page 80


 2741 0d07 9402     		.uleb128 0x114
 2742 0d09 13       		.uleb128 0x13
 2743 0d0a 0E010000 		.4byte	.LASF202
 2744 0d0e 08       		.byte	0x8
 2745 0d0f 1001     		.2byte	0x110
 2746 0d11 0A0B0000 		.4byte	0xb0a
 2747 0d15 03       		.byte	0x3
 2748 0d16 23       		.byte	0x23
 2749 0d17 9802     		.uleb128 0x118
 2750 0d19 13       		.uleb128 0x13
 2751 0d1a B7060000 		.4byte	.LASF203
 2752 0d1e 08       		.byte	0x8
 2753 0d1f 1101     		.2byte	0x111
 2754 0d21 0A0B0000 		.4byte	0xb0a
 2755 0d25 03       		.byte	0x3
 2756 0d26 23       		.byte	0x23
 2757 0d27 9C02     		.uleb128 0x11c
 2758 0d29 13       		.uleb128 0x13
 2759 0d2a 26090000 		.4byte	.LASF204
 2760 0d2e 08       		.byte	0x8
 2761 0d2f 1201     		.2byte	0x112
 2762 0d31 0A0B0000 		.4byte	0xb0a
 2763 0d35 03       		.byte	0x3
 2764 0d36 23       		.byte	0x23
 2765 0d37 A002     		.uleb128 0x120
 2766 0d39 13       		.uleb128 0x13
 2767 0d3a BD030000 		.4byte	.LASF205
 2768 0d3e 08       		.byte	0x8
 2769 0d3f 1301     		.2byte	0x113
 2770 0d41 0F0B0000 		.4byte	0xb0f
 2771 0d45 03       		.byte	0x3
 2772 0d46 23       		.byte	0x23
 2773 0d47 A402     		.uleb128 0x124
 2774 0d49 00       		.byte	0
 2775 0d4a 08       		.uleb128 0x8
 2776 0d4b 01010000 		.4byte	0x101
 2777 0d4f 5A0D0000 		.4byte	0xd5a
 2778 0d53 09       		.uleb128 0x9
 2779 0d54 4C000000 		.4byte	0x4c
 2780 0d58 00       		.byte	0
 2781 0d59 00       		.byte	0
 2782 0d5a 19       		.uleb128 0x19
 2783 0d5b 4A0D0000 		.4byte	0xd4a
 2784 0d5f 08       		.uleb128 0x8
 2785 0d60 01010000 		.4byte	0x101
 2786 0d64 6F0D0000 		.4byte	0xd6f
 2787 0d68 09       		.uleb128 0x9
 2788 0d69 4C000000 		.4byte	0x4c
 2789 0d6d 01       		.byte	0x1
 2790 0d6e 00       		.byte	0
 2791 0d6f 19       		.uleb128 0x19
 2792 0d70 5F0D0000 		.4byte	0xd5f
 2793 0d74 08       		.uleb128 0x8
 2794 0d75 01010000 		.4byte	0x101
 2795 0d79 840D0000 		.4byte	0xd84
 2796 0d7d 09       		.uleb128 0x9
 2797 0d7e 4C000000 		.4byte	0x4c
ARM GAS  /tmp/ccZvkXpi.s 			page 81


 2798 0d82 0F       		.byte	0xf
 2799 0d83 00       		.byte	0
 2800 0d84 17       		.uleb128 0x17
 2801 0d85 890D0000 		.4byte	0xd89
 2802 0d89 19       		.uleb128 0x19
 2803 0d8a 740D0000 		.4byte	0xd74
 2804 0d8e 19       		.uleb128 0x19
 2805 0d8f 4A0D0000 		.4byte	0xd4a
 2806 0d93 19       		.uleb128 0x19
 2807 0d94 140B0000 		.4byte	0xb14
 2808 0d98 08       		.uleb128 0x8
 2809 0d99 01010000 		.4byte	0x101
 2810 0d9d A80D0000 		.4byte	0xda8
 2811 0da1 09       		.uleb128 0x9
 2812 0da2 4C000000 		.4byte	0x4c
 2813 0da6 04       		.byte	0x4
 2814 0da7 00       		.byte	0
 2815 0da8 19       		.uleb128 0x19
 2816 0da9 980D0000 		.4byte	0xd98
 2817 0dad 1E       		.uleb128 0x1e
 2818 0dae 41646300 		.ascii	"Adc\000"
 2819 0db2 08       		.byte	0x8
 2820 0db3 1401     		.2byte	0x114
 2821 0db5 240B0000 		.4byte	0xb24
 2822 0db9 08       		.uleb128 0x8
 2823 0dba 01010000 		.4byte	0x101
 2824 0dbe C90D0000 		.4byte	0xdc9
 2825 0dc2 09       		.uleb128 0x9
 2826 0dc3 4C000000 		.4byte	0x4c
 2827 0dc7 03       		.byte	0x3
 2828 0dc8 00       		.byte	0
 2829 0dc9 1F       		.uleb128 0x1f
 2830 0dca 1401     		.2byte	0x114
 2831 0dcc 08       		.byte	0x8
 2832 0dcd 450D     		.2byte	0xd45
 2833 0dcf DA0F0000 		.4byte	0xfda
 2834 0dd3 13       		.uleb128 0x13
 2835 0dd4 5F0A0000 		.4byte	.LASF206
 2836 0dd8 08       		.byte	0x8
 2837 0dd9 460D     		.2byte	0xd46
 2838 0ddb 0A0B0000 		.4byte	0xb0a
 2839 0ddf 02       		.byte	0x2
 2840 0de0 23       		.byte	0x23
 2841 0de1 00       		.uleb128 0
 2842 0de2 13       		.uleb128 0x13
 2843 0de3 0C0A0000 		.4byte	.LASF207
 2844 0de7 08       		.byte	0x8
 2845 0de8 470D     		.2byte	0xd47
 2846 0dea 0A0B0000 		.4byte	0xb0a
 2847 0dee 02       		.byte	0x2
 2848 0def 23       		.byte	0x23
 2849 0df0 04       		.uleb128 0x4
 2850 0df1 13       		.uleb128 0x13
 2851 0df2 86040000 		.4byte	.LASF208
 2852 0df6 08       		.byte	0x8
 2853 0df7 480D     		.2byte	0xd48
 2854 0df9 0F0B0000 		.4byte	0xb0f
ARM GAS  /tmp/ccZvkXpi.s 			page 82


 2855 0dfd 02       		.byte	0x2
 2856 0dfe 23       		.byte	0x23
 2857 0dff 08       		.uleb128 0x8
 2858 0e00 13       		.uleb128 0x13
 2859 0e01 F5070000 		.4byte	.LASF177
 2860 0e05 08       		.byte	0x8
 2861 0e06 490D     		.2byte	0xd49
 2862 0e08 DA0F0000 		.4byte	0xfda
 2863 0e0c 02       		.byte	0x2
 2864 0e0d 23       		.byte	0x23
 2865 0e0e 0C       		.uleb128 0xc
 2866 0e0f 13       		.uleb128 0x13
 2867 0e10 B7010000 		.4byte	.LASF209
 2868 0e14 08       		.byte	0x8
 2869 0e15 4A0D     		.2byte	0xd4a
 2870 0e17 0A0B0000 		.4byte	0xb0a
 2871 0e1b 02       		.byte	0x2
 2872 0e1c 23       		.byte	0x23
 2873 0e1d 10       		.uleb128 0x10
 2874 0e1e 13       		.uleb128 0x13
 2875 0e1f 1A0A0000 		.4byte	.LASF210
 2876 0e23 08       		.byte	0x8
 2877 0e24 4B0D     		.2byte	0xd4b
 2878 0e26 0A0B0000 		.4byte	0xb0a
 2879 0e2a 02       		.byte	0x2
 2880 0e2b 23       		.byte	0x23
 2881 0e2c 14       		.uleb128 0x14
 2882 0e2d 13       		.uleb128 0x13
 2883 0e2e 2A000000 		.4byte	.LASF211
 2884 0e32 08       		.byte	0x8
 2885 0e33 4C0D     		.2byte	0xd4c
 2886 0e35 0F0B0000 		.4byte	0xb0f
 2887 0e39 02       		.byte	0x2
 2888 0e3a 23       		.byte	0x23
 2889 0e3b 18       		.uleb128 0x18
 2890 0e3c 13       		.uleb128 0x13
 2891 0e3d FF070000 		.4byte	.LASF183
 2892 0e41 08       		.byte	0x8
 2893 0e42 4D0D     		.2byte	0xd4d
 2894 0e44 DF0F0000 		.4byte	0xfdf
 2895 0e48 02       		.byte	0x2
 2896 0e49 23       		.byte	0x23
 2897 0e4a 1C       		.uleb128 0x1c
 2898 0e4b 13       		.uleb128 0x13
 2899 0e4c DE010000 		.4byte	.LASF212
 2900 0e50 08       		.byte	0x8
 2901 0e51 4E0D     		.2byte	0xd4e
 2902 0e53 0A0B0000 		.4byte	0xb0a
 2903 0e57 02       		.byte	0x2
 2904 0e58 23       		.byte	0x23
 2905 0e59 20       		.uleb128 0x20
 2906 0e5a 13       		.uleb128 0x13
 2907 0e5b 09090000 		.4byte	.LASF213
 2908 0e5f 08       		.byte	0x8
 2909 0e60 4F0D     		.2byte	0xd4f
 2910 0e62 0F0B0000 		.4byte	0xb0f
 2911 0e66 02       		.byte	0x2
ARM GAS  /tmp/ccZvkXpi.s 			page 83


 2912 0e67 23       		.byte	0x23
 2913 0e68 24       		.uleb128 0x24
 2914 0e69 13       		.uleb128 0x13
 2915 0e6a 7B0A0000 		.4byte	.LASF214
 2916 0e6e 08       		.byte	0x8
 2917 0e6f 500D     		.2byte	0xd50
 2918 0e71 0A0B0000 		.4byte	0xb0a
 2919 0e75 02       		.byte	0x2
 2920 0e76 23       		.byte	0x23
 2921 0e77 28       		.uleb128 0x28
 2922 0e78 13       		.uleb128 0x13
 2923 0e79 51000000 		.4byte	.LASF215
 2924 0e7d 08       		.byte	0x8
 2925 0e7e 510D     		.2byte	0xd51
 2926 0e80 0A0B0000 		.4byte	0xb0a
 2927 0e84 02       		.byte	0x2
 2928 0e85 23       		.byte	0x23
 2929 0e86 2C       		.uleb128 0x2c
 2930 0e87 13       		.uleb128 0x13
 2931 0e88 F8020000 		.4byte	.LASF216
 2932 0e8c 08       		.byte	0x8
 2933 0e8d 520D     		.2byte	0xd52
 2934 0e8f 0A0B0000 		.4byte	0xb0a
 2935 0e93 02       		.byte	0x2
 2936 0e94 23       		.byte	0x23
 2937 0e95 30       		.uleb128 0x30
 2938 0e96 13       		.uleb128 0x13
 2939 0e97 09080000 		.4byte	.LASF190
 2940 0e9b 08       		.byte	0x8
 2941 0e9c 530D     		.2byte	0xd53
 2942 0e9e E40F0000 		.4byte	0xfe4
 2943 0ea2 02       		.byte	0x2
 2944 0ea3 23       		.byte	0x23
 2945 0ea4 34       		.uleb128 0x34
 2946 0ea5 13       		.uleb128 0x13
 2947 0ea6 80000000 		.4byte	.LASF217
 2948 0eaa 08       		.byte	0x8
 2949 0eab 540D     		.2byte	0xd54
 2950 0ead 0A0B0000 		.4byte	0xb0a
 2951 0eb1 02       		.byte	0x2
 2952 0eb2 23       		.byte	0x23
 2953 0eb3 38       		.uleb128 0x38
 2954 0eb4 13       		.uleb128 0x13
 2955 0eb5 13080000 		.4byte	.LASF192
 2956 0eb9 08       		.byte	0x8
 2957 0eba 550D     		.2byte	0xd55
 2958 0ebc E90F0000 		.4byte	0xfe9
 2959 0ec0 02       		.byte	0x2
 2960 0ec1 23       		.byte	0x23
 2961 0ec2 3C       		.uleb128 0x3c
 2962 0ec3 13       		.uleb128 0x13
 2963 0ec4 47050000 		.4byte	.LASF218
 2964 0ec8 08       		.byte	0x8
 2965 0ec9 560D     		.2byte	0xd56
 2966 0ecb FE0F0000 		.4byte	0xffe
 2967 0ecf 02       		.byte	0x2
 2968 0ed0 23       		.byte	0x23
ARM GAS  /tmp/ccZvkXpi.s 			page 84


 2969 0ed1 40       		.uleb128 0x40
 2970 0ed2 13       		.uleb128 0x13
 2971 0ed3 1D080000 		.4byte	.LASF195
 2972 0ed7 08       		.byte	0x8
 2973 0ed8 570D     		.2byte	0xd57
 2974 0eda 03100000 		.4byte	0x1003
 2975 0ede 02       		.byte	0x2
 2976 0edf 23       		.byte	0x23
 2977 0ee0 4C       		.uleb128 0x4c
 2978 0ee1 13       		.uleb128 0x13
 2979 0ee2 A4070000 		.4byte	.LASF219
 2980 0ee6 08       		.byte	0x8
 2981 0ee7 580D     		.2byte	0xd58
 2982 0ee9 0A0B0000 		.4byte	0xb0a
 2983 0eed 02       		.byte	0x2
 2984 0eee 23       		.byte	0x23
 2985 0eef 60       		.uleb128 0x60
 2986 0ef0 13       		.uleb128 0x13
 2987 0ef1 4E010000 		.4byte	.LASF220
 2988 0ef5 08       		.byte	0x8
 2989 0ef6 590D     		.2byte	0xd59
 2990 0ef8 0A0B0000 		.4byte	0xb0a
 2991 0efc 02       		.byte	0x2
 2992 0efd 23       		.byte	0x23
 2993 0efe 64       		.uleb128 0x64
 2994 0eff 13       		.uleb128 0x13
 2995 0f00 C7080000 		.4byte	.LASF221
 2996 0f04 08       		.byte	0x8
 2997 0f05 5A0D     		.2byte	0xd5a
 2998 0f07 0F0B0000 		.4byte	0xb0f
 2999 0f0b 02       		.byte	0x2
 3000 0f0c 23       		.byte	0x23
 3001 0f0d 68       		.uleb128 0x68
 3002 0f0e 13       		.uleb128 0x13
 3003 0f0f 58040000 		.4byte	.LASF222
 3004 0f13 08       		.byte	0x8
 3005 0f14 5B0D     		.2byte	0xd5b
 3006 0f16 0F0B0000 		.4byte	0xb0f
 3007 0f1a 02       		.byte	0x2
 3008 0f1b 23       		.byte	0x23
 3009 0f1c 6C       		.uleb128 0x6c
 3010 0f1d 13       		.uleb128 0x13
 3011 0f1e 99090000 		.4byte	.LASF223
 3012 0f22 08       		.byte	0x8
 3013 0f23 5C0D     		.2byte	0xd5c
 3014 0f25 0A0B0000 		.4byte	0xb0a
 3015 0f29 02       		.byte	0x2
 3016 0f2a 23       		.byte	0x23
 3017 0f2b 70       		.uleb128 0x70
 3018 0f2c 13       		.uleb128 0x13
 3019 0f2d 21000000 		.4byte	.LASF224
 3020 0f31 08       		.byte	0x8
 3021 0f32 5D0D     		.2byte	0xd5d
 3022 0f34 0A0B0000 		.4byte	0xb0a
 3023 0f38 02       		.byte	0x2
 3024 0f39 23       		.byte	0x23
 3025 0f3a 74       		.uleb128 0x74
ARM GAS  /tmp/ccZvkXpi.s 			page 85


 3026 0f3b 13       		.uleb128 0x13
 3027 0f3c 3A080000 		.4byte	.LASF225
 3028 0f40 08       		.byte	0x8
 3029 0f41 5E0D     		.2byte	0xd5e
 3030 0f43 0A0B0000 		.4byte	0xb0a
 3031 0f47 02       		.byte	0x2
 3032 0f48 23       		.byte	0x23
 3033 0f49 78       		.uleb128 0x78
 3034 0f4a 13       		.uleb128 0x13
 3035 0f4b 27080000 		.4byte	.LASF226
 3036 0f4f 08       		.byte	0x8
 3037 0f50 5F0D     		.2byte	0xd5f
 3038 0f52 18100000 		.4byte	0x1018
 3039 0f56 02       		.byte	0x2
 3040 0f57 23       		.byte	0x23
 3041 0f58 7C       		.uleb128 0x7c
 3042 0f59 13       		.uleb128 0x13
 3043 0f5a 60090000 		.4byte	.LASF227
 3044 0f5e 08       		.byte	0x8
 3045 0f5f 600D     		.2byte	0xd60
 3046 0f61 0A0B0000 		.4byte	0xb0a
 3047 0f65 03       		.byte	0x3
 3048 0f66 23       		.byte	0x23
 3049 0f67 E401     		.uleb128 0xe4
 3050 0f69 13       		.uleb128 0x13
 3051 0f6a 71060000 		.4byte	.LASF228
 3052 0f6e 08       		.byte	0x8
 3053 0f6f 610D     		.2byte	0xd61
 3054 0f71 0F0B0000 		.4byte	0xb0f
 3055 0f75 03       		.byte	0x3
 3056 0f76 23       		.byte	0x23
 3057 0f77 E801     		.uleb128 0xe8
 3058 0f79 13       		.uleb128 0x13
 3059 0f7a D4000000 		.4byte	.LASF229
 3060 0f7e 08       		.byte	0x8
 3061 0f7f 620D     		.2byte	0xd62
 3062 0f81 1D100000 		.4byte	0x101d
 3063 0f85 03       		.byte	0x3
 3064 0f86 23       		.byte	0x23
 3065 0f87 EC01     		.uleb128 0xec
 3066 0f89 13       		.uleb128 0x13
 3067 0f8a C1010000 		.4byte	.LASF230
 3068 0f8e 08       		.byte	0x8
 3069 0f8f 630D     		.2byte	0xd63
 3070 0f91 0A0B0000 		.4byte	0xb0a
 3071 0f95 03       		.byte	0x3
 3072 0f96 23       		.byte	0x23
 3073 0f97 8002     		.uleb128 0x100
 3074 0f99 13       		.uleb128 0x13
 3075 0f9a 240A0000 		.4byte	.LASF231
 3076 0f9e 08       		.byte	0x8
 3077 0f9f 640D     		.2byte	0xd64
 3078 0fa1 0A0B0000 		.4byte	0xb0a
 3079 0fa5 03       		.byte	0x3
 3080 0fa6 23       		.byte	0x23
 3081 0fa7 8402     		.uleb128 0x104
 3082 0fa9 13       		.uleb128 0x13
ARM GAS  /tmp/ccZvkXpi.s 			page 86


 3083 0faa 680A0000 		.4byte	.LASF232
 3084 0fae 08       		.byte	0x8
 3085 0faf 650D     		.2byte	0xd65
 3086 0fb1 0F0B0000 		.4byte	0xb0f
 3087 0fb5 03       		.byte	0x3
 3088 0fb6 23       		.byte	0x23
 3089 0fb7 8802     		.uleb128 0x108
 3090 0fb9 13       		.uleb128 0x13
 3091 0fba B3030000 		.4byte	.LASF233
 3092 0fbe 08       		.byte	0x8
 3093 0fbf 660D     		.2byte	0xd66
 3094 0fc1 22100000 		.4byte	0x1022
 3095 0fc5 03       		.byte	0x3
 3096 0fc6 23       		.byte	0x23
 3097 0fc7 8C02     		.uleb128 0x10c
 3098 0fc9 13       		.uleb128 0x13
 3099 0fca 07030000 		.4byte	.LASF234
 3100 0fce 08       		.byte	0x8
 3101 0fcf 670D     		.2byte	0xd67
 3102 0fd1 0A0B0000 		.4byte	0xb0a
 3103 0fd5 03       		.byte	0x3
 3104 0fd6 23       		.byte	0x23
 3105 0fd7 9002     		.uleb128 0x110
 3106 0fd9 00       		.byte	0
 3107 0fda 19       		.uleb128 0x19
 3108 0fdb 4A0D0000 		.4byte	0xd4a
 3109 0fdf 19       		.uleb128 0x19
 3110 0fe0 4A0D0000 		.4byte	0xd4a
 3111 0fe4 19       		.uleb128 0x19
 3112 0fe5 4A0D0000 		.4byte	0xd4a
 3113 0fe9 19       		.uleb128 0x19
 3114 0fea 4A0D0000 		.4byte	0xd4a
 3115 0fee 08       		.uleb128 0x8
 3116 0fef 01010000 		.4byte	0x101
 3117 0ff3 FE0F0000 		.4byte	0xffe
 3118 0ff7 09       		.uleb128 0x9
 3119 0ff8 4C000000 		.4byte	0x4c
 3120 0ffc 02       		.byte	0x2
 3121 0ffd 00       		.byte	0
 3122 0ffe 19       		.uleb128 0x19
 3123 0fff EE0F0000 		.4byte	0xfee
 3124 1003 19       		.uleb128 0x19
 3125 1004 980D0000 		.4byte	0xd98
 3126 1008 08       		.uleb128 0x8
 3127 1009 01010000 		.4byte	0x101
 3128 100d 18100000 		.4byte	0x1018
 3129 1011 09       		.uleb128 0x9
 3130 1012 4C000000 		.4byte	0x4c
 3131 1016 19       		.byte	0x19
 3132 1017 00       		.byte	0
 3133 1018 19       		.uleb128 0x19
 3134 1019 08100000 		.4byte	0x1008
 3135 101d 19       		.uleb128 0x19
 3136 101e 980D0000 		.4byte	0xd98
 3137 1022 19       		.uleb128 0x19
 3138 1023 4A0D0000 		.4byte	0xd4a
 3139 1027 1E       		.uleb128 0x1e
ARM GAS  /tmp/ccZvkXpi.s 			page 87


 3140 1028 506D6300 		.ascii	"Pmc\000"
 3141 102c 08       		.byte	0x8
 3142 102d 680D     		.2byte	0xd68
 3143 102f C90D0000 		.4byte	0xdc9
 3144 1033 20       		.uleb128 0x20
 3145 1034 40       		.byte	0x40
 3146 1035 08       		.byte	0x8
 3147 1036 4B15     		.2byte	0x154b
 3148 1038 00110000 		.4byte	0x1100
 3149 103c 13       		.uleb128 0x13
 3150 103d 66010000 		.4byte	.LASF235
 3151 1041 08       		.byte	0x8
 3152 1042 4C15     		.2byte	0x154c
 3153 1044 0A0B0000 		.4byte	0xb0a
 3154 1048 02       		.byte	0x2
 3155 1049 23       		.byte	0x23
 3156 104a 00       		.uleb128 0
 3157 104b 13       		.uleb128 0x13
 3158 104c F3040000 		.4byte	.LASF236
 3159 1050 08       		.byte	0x8
 3160 1051 4D15     		.2byte	0x154d
 3161 1053 0A0B0000 		.4byte	0xb0a
 3162 1057 02       		.byte	0x2
 3163 1058 23       		.byte	0x23
 3164 1059 04       		.uleb128 0x4
 3165 105a 13       		.uleb128 0x13
 3166 105b 63000000 		.4byte	.LASF237
 3167 105f 08       		.byte	0x8
 3168 1060 4E15     		.2byte	0x154e
 3169 1062 0A0B0000 		.4byte	0xb0a
 3170 1066 02       		.byte	0x2
 3171 1067 23       		.byte	0x23
 3172 1068 08       		.uleb128 0x8
 3173 1069 13       		.uleb128 0x13
 3174 106a F5070000 		.4byte	.LASF177
 3175 106e 08       		.byte	0x8
 3176 106f 4F15     		.2byte	0x154f
 3177 1071 00110000 		.4byte	0x1100
 3178 1075 02       		.byte	0x2
 3179 1076 23       		.byte	0x23
 3180 1077 0C       		.uleb128 0xc
 3181 1078 13       		.uleb128 0x13
 3182 1079 4D080000 		.4byte	.LASF238
 3183 107d 08       		.byte	0x8
 3184 107e 5015     		.2byte	0x1550
 3185 1080 0A0B0000 		.4byte	0xb0a
 3186 1084 02       		.byte	0x2
 3187 1085 23       		.byte	0x23
 3188 1086 10       		.uleb128 0x10
 3189 1087 13       		.uleb128 0x13
 3190 1088 A8020000 		.4byte	.LASF239
 3191 108c 08       		.byte	0x8
 3192 108d 5115     		.2byte	0x1551
 3193 108f 0A0B0000 		.4byte	0xb0a
 3194 1093 02       		.byte	0x2
 3195 1094 23       		.byte	0x23
 3196 1095 14       		.uleb128 0x14
ARM GAS  /tmp/ccZvkXpi.s 			page 88


 3197 1096 13       		.uleb128 0x13
 3198 1097 AE020000 		.4byte	.LASF240
 3199 109b 08       		.byte	0x8
 3200 109c 5215     		.2byte	0x1552
 3201 109e 0A0B0000 		.4byte	0xb0a
 3202 10a2 02       		.byte	0x2
 3203 10a3 23       		.byte	0x23
 3204 10a4 18       		.uleb128 0x18
 3205 10a5 13       		.uleb128 0x13
 3206 10a6 B4020000 		.4byte	.LASF241
 3207 10aa 08       		.byte	0x8
 3208 10ab 5315     		.2byte	0x1553
 3209 10ad 0A0B0000 		.4byte	0xb0a
 3210 10b1 02       		.byte	0x2
 3211 10b2 23       		.byte	0x23
 3212 10b3 1C       		.uleb128 0x1c
 3213 10b4 13       		.uleb128 0x13
 3214 10b5 01030000 		.4byte	.LASF242
 3215 10b9 08       		.byte	0x8
 3216 10ba 5415     		.2byte	0x1554
 3217 10bc 0A0B0000 		.4byte	0xb0a
 3218 10c0 02       		.byte	0x2
 3219 10c1 23       		.byte	0x23
 3220 10c2 20       		.uleb128 0x20
 3221 10c3 13       		.uleb128 0x13
 3222 10c4 2C040000 		.4byte	.LASF243
 3223 10c8 08       		.byte	0x8
 3224 10c9 5515     		.2byte	0x1555
 3225 10cb 0A0B0000 		.4byte	0xb0a
 3226 10cf 02       		.byte	0x2
 3227 10d0 23       		.byte	0x23
 3228 10d1 24       		.uleb128 0x24
 3229 10d2 13       		.uleb128 0x13
 3230 10d3 8A030000 		.4byte	.LASF244
 3231 10d7 08       		.byte	0x8
 3232 10d8 5615     		.2byte	0x1556
 3233 10da 0A0B0000 		.4byte	0xb0a
 3234 10de 02       		.byte	0x2
 3235 10df 23       		.byte	0x23
 3236 10e0 28       		.uleb128 0x28
 3237 10e1 13       		.uleb128 0x13
 3238 10e2 C0060000 		.4byte	.LASF245
 3239 10e6 08       		.byte	0x8
 3240 10e7 5715     		.2byte	0x1557
 3241 10e9 0A0B0000 		.4byte	0xb0a
 3242 10ed 02       		.byte	0x2
 3243 10ee 23       		.byte	0x23
 3244 10ef 2C       		.uleb128 0x2c
 3245 10f0 13       		.uleb128 0x13
 3246 10f1 FF070000 		.4byte	.LASF183
 3247 10f5 08       		.byte	0x8
 3248 10f6 5815     		.2byte	0x1558
 3249 10f8 05110000 		.4byte	0x1105
 3250 10fc 02       		.byte	0x2
 3251 10fd 23       		.byte	0x23
 3252 10fe 30       		.uleb128 0x30
 3253 10ff 00       		.byte	0
ARM GAS  /tmp/ccZvkXpi.s 			page 89


 3254 1100 19       		.uleb128 0x19
 3255 1101 4A0D0000 		.4byte	0xd4a
 3256 1105 19       		.uleb128 0x19
 3257 1106 B90D0000 		.4byte	0xdb9
 3258 110a 05       		.uleb128 0x5
 3259 110b 36020000 		.4byte	.LASF246
 3260 110f 08       		.byte	0x8
 3261 1110 5915     		.2byte	0x1559
 3262 1112 33100000 		.4byte	0x1033
 3263 1116 20       		.uleb128 0x20
 3264 1117 E8       		.byte	0xe8
 3265 1118 08       		.byte	0x8
 3266 1119 5B15     		.2byte	0x155b
 3267 111b BF110000 		.4byte	0x11bf
 3268 111f 13       		.uleb128 0x13
 3269 1120 1D010000 		.4byte	.LASF247
 3270 1124 08       		.byte	0x8
 3271 1125 5C15     		.2byte	0x155c
 3272 1127 BF110000 		.4byte	0x11bf
 3273 112b 02       		.byte	0x2
 3274 112c 23       		.byte	0x23
 3275 112d 00       		.uleb128 0
 3276 112e 13       		.uleb128 0x13
 3277 112f F3090000 		.4byte	.LASF248
 3278 1133 08       		.byte	0x8
 3279 1134 5D15     		.2byte	0x155d
 3280 1136 0A0B0000 		.4byte	0xb0a
 3281 113a 03       		.byte	0x3
 3282 113b 23       		.byte	0x23
 3283 113c C001     		.uleb128 0xc0
 3284 113e 13       		.uleb128 0x13
 3285 113f CB020000 		.4byte	.LASF249
 3286 1143 08       		.byte	0x8
 3287 1144 5E15     		.2byte	0x155e
 3288 1146 0A0B0000 		.4byte	0xb0a
 3289 114a 03       		.byte	0x3
 3290 114b 23       		.byte	0x23
 3291 114c C401     		.uleb128 0xc4
 3292 114e 13       		.uleb128 0x13
 3293 114f BF080000 		.4byte	.LASF250
 3294 1153 08       		.byte	0x8
 3295 1154 5F15     		.2byte	0x155f
 3296 1156 0A0B0000 		.4byte	0xb0a
 3297 115a 03       		.byte	0x3
 3298 115b 23       		.byte	0x23
 3299 115c C801     		.uleb128 0xc8
 3300 115e 13       		.uleb128 0x13
 3301 115f 9B080000 		.4byte	.LASF251
 3302 1163 08       		.byte	0x8
 3303 1164 6015     		.2byte	0x1560
 3304 1166 0A0B0000 		.4byte	0xb0a
 3305 116a 03       		.byte	0x3
 3306 116b 23       		.byte	0x23
 3307 116c CC01     		.uleb128 0xcc
 3308 116e 13       		.uleb128 0x13
 3309 116f 06010000 		.4byte	.LASF252
 3310 1173 08       		.byte	0x8
ARM GAS  /tmp/ccZvkXpi.s 			page 90


 3311 1174 6115     		.2byte	0x1561
 3312 1176 0F0B0000 		.4byte	0xb0f
 3313 117a 03       		.byte	0x3
 3314 117b 23       		.byte	0x23
 3315 117c D001     		.uleb128 0xd0
 3316 117e 13       		.uleb128 0x13
 3317 117f E2020000 		.4byte	.LASF253
 3318 1183 08       		.byte	0x8
 3319 1184 6215     		.2byte	0x1562
 3320 1186 0F0B0000 		.4byte	0xb0f
 3321 118a 03       		.byte	0x3
 3322 118b 23       		.byte	0x23
 3323 118c D401     		.uleb128 0xd4
 3324 118e 13       		.uleb128 0x13
 3325 118f CD000000 		.4byte	.LASF254
 3326 1193 08       		.byte	0x8
 3327 1194 6315     		.2byte	0x1563
 3328 1196 0A0B0000 		.4byte	0xb0a
 3329 119a 03       		.byte	0x3
 3330 119b 23       		.byte	0x23
 3331 119c D801     		.uleb128 0xd8
 3332 119e 13       		.uleb128 0x13
 3333 119f F5070000 		.4byte	.LASF177
 3334 11a3 08       		.byte	0x8
 3335 11a4 6415     		.2byte	0x1564
 3336 11a6 CF110000 		.4byte	0x11cf
 3337 11aa 03       		.byte	0x3
 3338 11ab 23       		.byte	0x23
 3339 11ac DC01     		.uleb128 0xdc
 3340 11ae 13       		.uleb128 0x13
 3341 11af 2F090000 		.4byte	.LASF255
 3342 11b3 08       		.byte	0x8
 3343 11b4 6515     		.2byte	0x1565
 3344 11b6 0A0B0000 		.4byte	0xb0a
 3345 11ba 03       		.byte	0x3
 3346 11bb 23       		.byte	0x23
 3347 11bc E401     		.uleb128 0xe4
 3348 11be 00       		.byte	0
 3349 11bf 08       		.uleb128 0x8
 3350 11c0 0A110000 		.4byte	0x110a
 3351 11c4 CF110000 		.4byte	0x11cf
 3352 11c8 09       		.uleb128 0x9
 3353 11c9 4C000000 		.4byte	0x4c
 3354 11cd 02       		.byte	0x2
 3355 11ce 00       		.byte	0
 3356 11cf 19       		.uleb128 0x19
 3357 11d0 5F0D0000 		.4byte	0xd5f
 3358 11d4 1E       		.uleb128 0x1e
 3359 11d5 546300   		.ascii	"Tc\000"
 3360 11d8 08       		.byte	0x8
 3361 11d9 6615     		.2byte	0x1566
 3362 11db 16110000 		.4byte	0x1116
 3363 11df 20       		.uleb128 0x20
 3364 11e0 0C       		.byte	0xc
 3365 11e1 08       		.byte	0x8
 3366 11e2 7C19     		.2byte	0x197c
 3367 11e4 16120000 		.4byte	0x1216
ARM GAS  /tmp/ccZvkXpi.s 			page 91


 3368 11e8 13       		.uleb128 0x13
 3369 11e9 87020000 		.4byte	.LASF256
 3370 11ed 08       		.byte	0x8
 3371 11ee 7D19     		.2byte	0x197d
 3372 11f0 0A0B0000 		.4byte	0xb0a
 3373 11f4 02       		.byte	0x2
 3374 11f5 23       		.byte	0x23
 3375 11f6 00       		.uleb128 0
 3376 11f7 13       		.uleb128 0x13
 3377 11f8 E7050000 		.4byte	.LASF257
 3378 11fc 08       		.byte	0x8
 3379 11fd 7E19     		.2byte	0x197e
 3380 11ff 0A0B0000 		.4byte	0xb0a
 3381 1203 02       		.byte	0x2
 3382 1204 23       		.byte	0x23
 3383 1205 04       		.uleb128 0x4
 3384 1206 13       		.uleb128 0x13
 3385 1207 53080000 		.4byte	.LASF258
 3386 120b 08       		.byte	0x8
 3387 120c 7F19     		.2byte	0x197f
 3388 120e 0F0B0000 		.4byte	0xb0f
 3389 1212 02       		.byte	0x2
 3390 1213 23       		.byte	0x23
 3391 1214 08       		.uleb128 0x8
 3392 1215 00       		.byte	0
 3393 1216 1E       		.uleb128 0x1e
 3394 1217 57647400 		.ascii	"Wdt\000"
 3395 121b 08       		.byte	0x8
 3396 121c 8019     		.2byte	0x1980
 3397 121e DF110000 		.4byte	0x11df
 3398 1222 04       		.uleb128 0x4
 3399 1223 A9040000 		.4byte	.LASF259
 3400 1227 09       		.byte	0x9
 3401 1228 10       		.byte	0x10
 3402 1229 A3080000 		.4byte	0x8a3
 3403 122d 21       		.uleb128 0x21
 3404 122e 01       		.byte	0x1
 3405 122f 09       		.byte	0x9
 3406 1230 12       		.byte	0x12
 3407 1231 4E120000 		.4byte	0x124e
 3408 1235 22       		.uleb128 0x22
 3409 1236 4F464600 		.ascii	"OFF\000"
 3410 123a 00       		.sleb128 0
 3411 123b 1B       		.uleb128 0x1b
 3412 123c 56060000 		.4byte	.LASF260
 3413 1240 01       		.sleb128 1
 3414 1241 1B       		.uleb128 0x1b
 3415 1242 61010000 		.4byte	.LASF261
 3416 1246 02       		.sleb128 2
 3417 1247 1B       		.uleb128 0x1b
 3418 1248 BA050000 		.4byte	.LASF262
 3419 124c 03       		.sleb128 3
 3420 124d 00       		.byte	0
 3421 124e 04       		.uleb128 0x4
 3422 124f 71050000 		.4byte	.LASF263
 3423 1253 09       		.byte	0x9
 3424 1254 12       		.byte	0x12
ARM GAS  /tmp/ccZvkXpi.s 			page 92


 3425 1255 2D120000 		.4byte	0x122d
 3426 1259 0D       		.uleb128 0xd
 3427 125a 7B020000 		.4byte	.LASF264
 3428 125e 2C       		.byte	0x2c
 3429 125f 09       		.byte	0x9
 3430 1260 15       		.byte	0x15
 3431 1261 24130000 		.4byte	0x1324
 3432 1265 0B       		.uleb128 0xb
 3433 1266 BA080000 		.4byte	.LASF265
 3434 126a 09       		.byte	0x9
 3435 126b 16       		.byte	0x16
 3436 126c 4E120000 		.4byte	0x124e
 3437 1270 02       		.byte	0x2
 3438 1271 23       		.byte	0x23
 3439 1272 00       		.uleb128 0
 3440 1273 0E       		.uleb128 0xe
 3441 1274 535000   		.ascii	"SP\000"
 3442 1277 09       		.byte	0x9
 3443 1278 17       		.byte	0x17
 3444 1279 22120000 		.4byte	0x1222
 3445 127d 02       		.byte	0x2
 3446 127e 23       		.byte	0x23
 3447 127f 02       		.uleb128 0x2
 3448 1280 0E       		.uleb128 0xe
 3449 1281 72535000 		.ascii	"rSP\000"
 3450 1285 09       		.byte	0x9
 3451 1286 18       		.byte	0x18
 3452 1287 22120000 		.4byte	0x1222
 3453 128b 02       		.byte	0x2
 3454 128c 23       		.byte	0x23
 3455 128d 04       		.uleb128 0x4
 3456 128e 0B       		.uleb128 0xb
 3457 128f F1020000 		.4byte	.LASF266
 3458 1293 09       		.byte	0x9
 3459 1294 19       		.byte	0x19
 3460 1295 45000000 		.4byte	0x45
 3461 1299 02       		.byte	0x2
 3462 129a 23       		.byte	0x23
 3463 129b 08       		.uleb128 0x8
 3464 129c 0E       		.uleb128 0xe
 3465 129d 4B7000   		.ascii	"Kp\000"
 3466 12a0 09       		.byte	0x9
 3467 12a1 1B       		.byte	0x1b
 3468 12a2 22120000 		.4byte	0x1222
 3469 12a6 02       		.byte	0x2
 3470 12a7 23       		.byte	0x23
 3471 12a8 0C       		.uleb128 0xc
 3472 12a9 0E       		.uleb128 0xe
 3473 12aa 4B6900   		.ascii	"Ki\000"
 3474 12ad 09       		.byte	0x9
 3475 12ae 1C       		.byte	0x1c
 3476 12af 22120000 		.4byte	0x1222
 3477 12b3 02       		.byte	0x2
 3478 12b4 23       		.byte	0x23
 3479 12b5 0E       		.uleb128 0xe
 3480 12b6 0E       		.uleb128 0xe
 3481 12b7 4B6400   		.ascii	"Kd\000"
ARM GAS  /tmp/ccZvkXpi.s 			page 93


 3482 12ba 09       		.byte	0x9
 3483 12bb 1D       		.byte	0x1d
 3484 12bc 22120000 		.4byte	0x1222
 3485 12c0 02       		.byte	0x2
 3486 12c1 23       		.byte	0x23
 3487 12c2 10       		.uleb128 0x10
 3488 12c3 0E       		.uleb128 0xe
 3489 12c4 5F6500   		.ascii	"_e\000"
 3490 12c7 09       		.byte	0x9
 3491 12c8 1F       		.byte	0x1f
 3492 12c9 45000000 		.4byte	0x45
 3493 12cd 02       		.byte	0x2
 3494 12ce 23       		.byte	0x23
 3495 12cf 14       		.uleb128 0x14
 3496 12d0 0E       		.uleb128 0xe
 3497 12d1 5F647800 		.ascii	"_dx\000"
 3498 12d5 09       		.byte	0x9
 3499 12d6 20       		.byte	0x20
 3500 12d7 45000000 		.4byte	0x45
 3501 12db 02       		.byte	0x2
 3502 12dc 23       		.byte	0x23
 3503 12dd 18       		.uleb128 0x18
 3504 12de 0E       		.uleb128 0xe
 3505 12df 5F646500 		.ascii	"_de\000"
 3506 12e3 09       		.byte	0x9
 3507 12e4 21       		.byte	0x21
 3508 12e5 45000000 		.4byte	0x45
 3509 12e9 02       		.byte	0x2
 3510 12ea 23       		.byte	0x23
 3511 12eb 1C       		.uleb128 0x1c
 3512 12ec 0B       		.uleb128 0xb
 3513 12ed B5050000 		.4byte	.LASF267
 3514 12f1 09       		.byte	0x9
 3515 12f2 22       		.byte	0x22
 3516 12f3 45000000 		.4byte	0x45
 3517 12f7 02       		.byte	0x2
 3518 12f8 23       		.byte	0x23
 3519 12f9 20       		.uleb128 0x20
 3520 12fa 0E       		.uleb128 0xe
 3521 12fb 5F7800   		.ascii	"_x\000"
 3522 12fe 09       		.byte	0x9
 3523 12ff 23       		.byte	0x23
 3524 1300 22120000 		.4byte	0x1222
 3525 1304 02       		.byte	0x2
 3526 1305 23       		.byte	0x23
 3527 1306 24       		.uleb128 0x24
 3528 1307 0B       		.uleb128 0xb
 3529 1308 C4020000 		.4byte	.LASF268
 3530 130c 09       		.byte	0x9
 3531 130d 25       		.byte	0x25
 3532 130e 37000000 		.4byte	0x37
 3533 1312 02       		.byte	0x2
 3534 1313 23       		.byte	0x23
 3535 1314 26       		.uleb128 0x26
 3536 1315 0B       		.uleb128 0xb
 3537 1316 45010000 		.4byte	.LASF269
 3538 131a 09       		.byte	0x9
ARM GAS  /tmp/ccZvkXpi.s 			page 94


 3539 131b 27       		.byte	0x27
 3540 131c 68130000 		.4byte	0x1368
 3541 1320 02       		.byte	0x2
 3542 1321 23       		.byte	0x23
 3543 1322 28       		.uleb128 0x28
 3544 1323 00       		.byte	0
 3545 1324 0D       		.uleb128 0xd
 3546 1325 9B040000 		.4byte	.LASF270
 3547 1329 10       		.byte	0x10
 3548 132a 09       		.byte	0x9
 3549 132b 2B       		.byte	0x2b
 3550 132c 68130000 		.4byte	0x1368
 3551 1330 0B       		.uleb128 0xb
 3552 1331 1D030000 		.4byte	.LASF271
 3553 1335 09       		.byte	0x9
 3554 1336 2C       		.byte	0x2c
 3555 1337 6E130000 		.4byte	0x136e
 3556 133b 02       		.byte	0x2
 3557 133c 23       		.byte	0x23
 3558 133d 00       		.uleb128 0
 3559 133e 0B       		.uleb128 0xb
 3560 133f C4020000 		.4byte	.LASF268
 3561 1343 09       		.byte	0x9
 3562 1344 2D       		.byte	0x2d
 3563 1345 45000000 		.4byte	0x45
 3564 1349 02       		.byte	0x2
 3565 134a 23       		.byte	0x23
 3566 134b 04       		.uleb128 0x4
 3567 134c 0E       		.uleb128 0xe
 3568 134d 6F6E00   		.ascii	"on\000"
 3569 1350 09       		.byte	0x9
 3570 1351 2E       		.byte	0x2e
 3571 1352 45000000 		.4byte	0x45
 3572 1356 02       		.byte	0x2
 3573 1357 23       		.byte	0x23
 3574 1358 08       		.uleb128 0x8
 3575 1359 0E       		.uleb128 0xe
 3576 135a 6F666600 		.ascii	"off\000"
 3577 135e 09       		.byte	0x9
 3578 135f 2F       		.byte	0x2f
 3579 1360 45000000 		.4byte	0x45
 3580 1364 02       		.byte	0x2
 3581 1365 23       		.byte	0x23
 3582 1366 0C       		.uleb128 0xc
 3583 1367 00       		.byte	0
 3584 1368 0F       		.uleb128 0xf
 3585 1369 04       		.byte	0x4
 3586 136a 24130000 		.4byte	0x1324
 3587 136e 0F       		.uleb128 0xf
 3588 136f 04       		.byte	0x4
 3589 1370 45000000 		.4byte	0x45
 3590 1374 0A       		.uleb128 0xa
 3591 1375 08       		.byte	0x8
 3592 1376 02       		.byte	0x2
 3593 1377 0C       		.byte	0xc
 3594 1378 B5130000 		.4byte	0x13b5
 3595 137c 0E       		.uleb128 0xe
ARM GAS  /tmp/ccZvkXpi.s 			page 95


 3596 137d 6D696E00 		.ascii	"min\000"
 3597 1381 02       		.byte	0x2
 3598 1382 0D       		.byte	0xd
 3599 1383 22120000 		.4byte	0x1222
 3600 1387 02       		.byte	0x2
 3601 1388 23       		.byte	0x23
 3602 1389 00       		.uleb128 0
 3603 138a 0E       		.uleb128 0xe
 3604 138b 6D617800 		.ascii	"max\000"
 3605 138f 02       		.byte	0x2
 3606 1390 0E       		.byte	0xe
 3607 1391 22120000 		.4byte	0x1222
 3608 1395 02       		.byte	0x2
 3609 1396 23       		.byte	0x23
 3610 1397 02       		.uleb128 0x2
 3611 1398 0B       		.uleb128 0xb
 3612 1399 03090000 		.4byte	.LASF272
 3613 139d 02       		.byte	0x2
 3614 139e 0F       		.byte	0xf
 3615 139f 22120000 		.4byte	0x1222
 3616 13a3 02       		.byte	0x2
 3617 13a4 23       		.byte	0x23
 3618 13a5 04       		.uleb128 0x4
 3619 13a6 0B       		.uleb128 0xb
 3620 13a7 D5040000 		.4byte	.LASF273
 3621 13ab 02       		.byte	0x2
 3622 13ac 10       		.byte	0x10
 3623 13ad 22120000 		.4byte	0x1222
 3624 13b1 02       		.byte	0x2
 3625 13b2 23       		.byte	0x23
 3626 13b3 06       		.uleb128 0x6
 3627 13b4 00       		.byte	0
 3628 13b5 23       		.uleb128 0x23
 3629 13b6 09000000 		.4byte	.LASF291
 3630 13ba 01       		.byte	0x1
 3631 13bb DE05     		.2byte	0x5de
 3632 13bd 01       		.byte	0x1
 3633 13be 00000000 		.4byte	.LFB14
 3634 13c2 36000000 		.4byte	.LFE14
 3635 13c6 00000000 		.4byte	.LLST0
 3636 13ca DE130000 		.4byte	0x13de
 3637 13ce 24       		.uleb128 0x24
 3638 13cf D0010000 		.4byte	.LASF290
 3639 13d3 01       		.byte	0x1
 3640 13d4 DE05     		.2byte	0x5de
 3641 13d6 BB090000 		.4byte	0x9bb
 3642 13da 02       		.byte	0x2
 3643 13db 91       		.byte	0x91
 3644 13dc 77       		.sleb128 -9
 3645 13dd 00       		.byte	0
 3646 13de 25       		.uleb128 0x25
 3647 13df 01       		.byte	0x1
 3648 13e0 CB010000 		.4byte	.LASF277
 3649 13e4 02       		.byte	0x2
 3650 13e5 15       		.byte	0x15
 3651 13e6 45000000 		.4byte	0x45
 3652 13ea 00000000 		.4byte	.LFB35
ARM GAS  /tmp/ccZvkXpi.s 			page 96


 3653 13ee F4040000 		.4byte	.LFE35
 3654 13f2 38000000 		.4byte	.LLST1
 3655 13f6 4E140000 		.4byte	0x144e
 3656 13fa 26       		.uleb128 0x26
 3657 13fb 60040000 		.4byte	.LASF274
 3658 13ff 02       		.byte	0x2
 3659 1400 17       		.byte	0x17
 3660 1401 F3050000 		.4byte	0x5f3
 3661 1405 02       		.byte	0x2
 3662 1406 91       		.byte	0x91
 3663 1407 6C       		.sleb128 -20
 3664 1408 27       		.uleb128 0x27
 3665 1409 6F707400 		.ascii	"opt\000"
 3666 140d 02       		.byte	0x2
 3667 140e 18       		.byte	0x18
 3668 140f 46080000 		.4byte	0x846
 3669 1413 02       		.byte	0x2
 3670 1414 91       		.byte	0x91
 3671 1415 58       		.sleb128 -40
 3672 1416 27       		.uleb128 0x27
 3673 1417 636D6400 		.ascii	"cmd\000"
 3674 141b 02       		.byte	0x2
 3675 141c 19       		.byte	0x19
 3676 141d F9050000 		.4byte	0x5f9
 3677 1421 02       		.byte	0x2
 3678 1422 91       		.byte	0x91
 3679 1423 67       		.sleb128 -25
 3680 1424 26       		.uleb128 0x26
 3681 1425 BB040000 		.4byte	.LASF275
 3682 1429 02       		.byte	0x2
 3683 142a 1B       		.byte	0x1b
 3684 142b 45000000 		.4byte	0x45
 3685 142f 02       		.byte	0x2
 3686 1430 91       		.byte	0x91
 3687 1431 60       		.sleb128 -32
 3688 1432 26       		.uleb128 0x26
 3689 1433 D0040000 		.4byte	.LASF276
 3690 1437 02       		.byte	0x2
 3691 1438 1C       		.byte	0x1c
 3692 1439 4E140000 		.4byte	0x144e
 3693 143d 02       		.byte	0x2
 3694 143e 91       		.byte	0x91
 3695 143f 4C       		.sleb128 -52
 3696 1440 27       		.uleb128 0x27
 3697 1441 696400   		.ascii	"id\000"
 3698 1444 02       		.byte	0x2
 3699 1445 1D       		.byte	0x1d
 3700 1446 4C000000 		.4byte	0x4c
 3701 144a 02       		.byte	0x2
 3702 144b 91       		.byte	0x91
 3703 144c 68       		.sleb128 -24
 3704 144d 00       		.byte	0
 3705 144e 08       		.uleb128 0x8
 3706 144f 45000000 		.4byte	0x45
 3707 1453 5E140000 		.4byte	0x145e
 3708 1457 09       		.uleb128 0x9
 3709 1458 4C000000 		.4byte	0x4c
ARM GAS  /tmp/ccZvkXpi.s 			page 97


 3710 145c 02       		.byte	0x2
 3711 145d 00       		.byte	0
 3712 145e 28       		.uleb128 0x28
 3713 145f 01       		.byte	0x1
 3714 1460 31070000 		.4byte	.LASF278
 3715 1464 02       		.byte	0x2
 3716 1465 91       		.byte	0x91
 3717 1466 01       		.byte	0x1
 3718 1467 00000000 		.4byte	.LFB36
 3719 146b 7C000000 		.4byte	.LFE36
 3720 146f 71000000 		.4byte	.LLST2
 3721 1473 92140000 		.4byte	0x1492
 3722 1477 27       		.uleb128 0x27
 3723 1478 6900     		.ascii	"i\000"
 3724 147a 02       		.byte	0x2
 3725 147b 93       		.byte	0x93
 3726 147c 98080000 		.4byte	0x898
 3727 1480 02       		.byte	0x2
 3728 1481 91       		.byte	0x91
 3729 1482 77       		.sleb128 -9
 3730 1483 26       		.uleb128 0x26
 3731 1484 EE000000 		.4byte	.LASF279
 3732 1488 02       		.byte	0x2
 3733 1489 94       		.byte	0x94
 3734 148a 92140000 		.4byte	0x1492
 3735 148e 02       		.byte	0x2
 3736 148f 91       		.byte	0x91
 3737 1490 70       		.sleb128 -16
 3738 1491 00       		.byte	0
 3739 1492 0F       		.uleb128 0xf
 3740 1493 04       		.byte	0x4
 3741 1494 59120000 		.4byte	0x1259
 3742 1498 28       		.uleb128 0x28
 3743 1499 01       		.byte	0x1
 3744 149a A4030000 		.4byte	.LASF280
 3745 149e 02       		.byte	0x2
 3746 149f 9D       		.byte	0x9d
 3747 14a0 01       		.byte	0x1
 3748 14a1 00000000 		.4byte	.LFB37
 3749 14a5 D6000000 		.4byte	.LFE37
 3750 14a9 A9000000 		.4byte	.LLST3
 3751 14ad F4140000 		.4byte	0x14f4
 3752 14b1 27       		.uleb128 0x27
 3753 14b2 6900     		.ascii	"i\000"
 3754 14b4 02       		.byte	0x2
 3755 14b5 9F       		.byte	0x9f
 3756 14b6 98080000 		.4byte	0x898
 3757 14ba 02       		.byte	0x2
 3758 14bb 91       		.byte	0x91
 3759 14bc 77       		.sleb128 -9
 3760 14bd 27       		.uleb128 0x27
 3761 14be 6D736B00 		.ascii	"msk\000"
 3762 14c2 02       		.byte	0x2
 3763 14c3 A0       		.byte	0xa0
 3764 14c4 98080000 		.4byte	0x898
 3765 14c8 02       		.byte	0x2
 3766 14c9 91       		.byte	0x91
ARM GAS  /tmp/ccZvkXpi.s 			page 98


 3767 14ca 76       		.sleb128 -10
 3768 14cb 26       		.uleb128 0x26
 3769 14cc 59090000 		.4byte	.LASF281
 3770 14d0 02       		.byte	0x2
 3771 14d1 A1       		.byte	0xa1
 3772 14d2 AE080000 		.4byte	0x8ae
 3773 14d6 02       		.byte	0x2
 3774 14d7 91       		.byte	0x91
 3775 14d8 6C       		.sleb128 -20
 3776 14d9 26       		.uleb128 0x26
 3777 14da EE000000 		.4byte	.LASF279
 3778 14de 02       		.byte	0x2
 3779 14df A2       		.byte	0xa2
 3780 14e0 92140000 		.4byte	0x1492
 3781 14e4 02       		.byte	0x2
 3782 14e5 91       		.byte	0x91
 3783 14e6 70       		.sleb128 -16
 3784 14e7 27       		.uleb128 0x27
 3785 14e8 7800     		.ascii	"x\000"
 3786 14ea 02       		.byte	0x2
 3787 14eb A3       		.byte	0xa3
 3788 14ec 22120000 		.4byte	0x1222
 3789 14f0 02       		.byte	0x2
 3790 14f1 91       		.byte	0x91
 3791 14f2 6A       		.sleb128 -22
 3792 14f3 00       		.byte	0
 3793 14f4 29       		.uleb128 0x29
 3794 14f5 E4070000 		.4byte	.LASF292
 3795 14f9 02       		.byte	0x2
 3796 14fa B9       		.byte	0xb9
 3797 14fb 00000000 		.4byte	.LFB38
 3798 14ff DA000000 		.4byte	.LFE38
 3799 1503 E1000000 		.4byte	.LLST4
 3800 1507 28150000 		.4byte	0x1528
 3801 150b 27       		.uleb128 0x27
 3802 150c 64697600 		.ascii	"div\000"
 3803 1510 02       		.byte	0x2
 3804 1511 BB       		.byte	0xbb
 3805 1512 AE080000 		.4byte	0x8ae
 3806 1516 02       		.byte	0x2
 3807 1517 91       		.byte	0x91
 3808 1518 6C       		.sleb128 -20
 3809 1519 26       		.uleb128 0x26
 3810 151a 7B070000 		.4byte	.LASF282
 3811 151e 02       		.byte	0x2
 3812 151f BC       		.byte	0xbc
 3813 1520 AE080000 		.4byte	0x8ae
 3814 1524 02       		.byte	0x2
 3815 1525 91       		.byte	0x91
 3816 1526 68       		.sleb128 -24
 3817 1527 00       		.byte	0
 3818 1528 2A       		.uleb128 0x2a
 3819 1529 84010000 		.4byte	.LASF283
 3820 152d 06       		.byte	0x6
 3821 152e 4803     		.2byte	0x348
 3822 1530 74040000 		.4byte	0x474
 3823 1534 01       		.byte	0x1
ARM GAS  /tmp/ccZvkXpi.s 			page 99


 3824 1535 01       		.byte	0x1
 3825 1536 2A       		.uleb128 0x2a
 3826 1537 A2050000 		.4byte	.LASF284
 3827 153b 01       		.byte	0x1
 3828 153c CE06     		.2byte	0x6ce
 3829 153e 44150000 		.4byte	0x1544
 3830 1542 01       		.byte	0x1
 3831 1543 01       		.byte	0x1
 3832 1544 19       		.uleb128 0x19
 3833 1545 45000000 		.4byte	0x45
 3834 1549 08       		.uleb128 0x8
 3835 154a 59120000 		.4byte	0x1259
 3836 154e 59150000 		.4byte	0x1559
 3837 1552 09       		.uleb128 0x9
 3838 1553 4C000000 		.4byte	0x4c
 3839 1557 01       		.byte	0x1
 3840 1558 00       		.byte	0
 3841 1559 26       		.uleb128 0x26
 3842 155a 38030000 		.4byte	.LASF285
 3843 155e 02       		.byte	0x2
 3844 155f 0A       		.byte	0xa
 3845 1560 49150000 		.4byte	0x1549
 3846 1564 05       		.byte	0x5
 3847 1565 03       		.byte	0x3
 3848 1566 00000000 		.4byte	loops
 3849 156a 08       		.uleb128 0x8
 3850 156b 74130000 		.4byte	0x1374
 3851 156f 7A150000 		.4byte	0x157a
 3852 1573 09       		.uleb128 0x9
 3853 1574 4C000000 		.4byte	0x4c
 3854 1578 01       		.byte	0x1
 3855 1579 00       		.byte	0
 3856 157a 26       		.uleb128 0x26
 3857 157b F3000000 		.4byte	.LASF286
 3858 157f 02       		.byte	0x2
 3859 1580 11       		.byte	0x11
 3860 1581 6A150000 		.4byte	0x156a
 3861 1585 05       		.byte	0x5
 3862 1586 03       		.byte	0x3
 3863 1587 00000000 		.4byte	conf
 3864 158b 2A       		.uleb128 0x2a
 3865 158c 84010000 		.4byte	.LASF283
 3866 1590 06       		.byte	0x6
 3867 1591 4803     		.2byte	0x348
 3868 1593 74040000 		.4byte	0x474
 3869 1597 01       		.byte	0x1
 3870 1598 01       		.byte	0x1
 3871 1599 2A       		.uleb128 0x2a
 3872 159a A2050000 		.4byte	.LASF284
 3873 159e 01       		.byte	0x1
 3874 159f CE06     		.2byte	0x6ce
 3875 15a1 44150000 		.4byte	0x1544
 3876 15a5 01       		.byte	0x1
 3877 15a6 01       		.byte	0x1
 3878 15a7 00       		.byte	0
 3879              		.section	.debug_abbrev,"",%progbits
 3880              	.Ldebug_abbrev0:
ARM GAS  /tmp/ccZvkXpi.s 			page 100


 3881 0000 01       		.uleb128 0x1
 3882 0001 11       		.uleb128 0x11
 3883 0002 01       		.byte	0x1
 3884 0003 25       		.uleb128 0x25
 3885 0004 0E       		.uleb128 0xe
 3886 0005 13       		.uleb128 0x13
 3887 0006 0B       		.uleb128 0xb
 3888 0007 03       		.uleb128 0x3
 3889 0008 0E       		.uleb128 0xe
 3890 0009 1B       		.uleb128 0x1b
 3891 000a 0E       		.uleb128 0xe
 3892 000b 11       		.uleb128 0x11
 3893 000c 01       		.uleb128 0x1
 3894 000d 52       		.uleb128 0x52
 3895 000e 01       		.uleb128 0x1
 3896 000f 55       		.uleb128 0x55
 3897 0010 06       		.uleb128 0x6
 3898 0011 10       		.uleb128 0x10
 3899 0012 06       		.uleb128 0x6
 3900 0013 00       		.byte	0
 3901 0014 00       		.byte	0
 3902 0015 02       		.uleb128 0x2
 3903 0016 24       		.uleb128 0x24
 3904 0017 00       		.byte	0
 3905 0018 0B       		.uleb128 0xb
 3906 0019 0B       		.uleb128 0xb
 3907 001a 3E       		.uleb128 0x3e
 3908 001b 0B       		.uleb128 0xb
 3909 001c 03       		.uleb128 0x3
 3910 001d 0E       		.uleb128 0xe
 3911 001e 00       		.byte	0
 3912 001f 00       		.byte	0
 3913 0020 03       		.uleb128 0x3
 3914 0021 24       		.uleb128 0x24
 3915 0022 00       		.byte	0
 3916 0023 0B       		.uleb128 0xb
 3917 0024 0B       		.uleb128 0xb
 3918 0025 3E       		.uleb128 0x3e
 3919 0026 0B       		.uleb128 0xb
 3920 0027 03       		.uleb128 0x3
 3921 0028 08       		.uleb128 0x8
 3922 0029 00       		.byte	0
 3923 002a 00       		.byte	0
 3924 002b 04       		.uleb128 0x4
 3925 002c 16       		.uleb128 0x16
 3926 002d 00       		.byte	0
 3927 002e 03       		.uleb128 0x3
 3928 002f 0E       		.uleb128 0xe
 3929 0030 3A       		.uleb128 0x3a
 3930 0031 0B       		.uleb128 0xb
 3931 0032 3B       		.uleb128 0x3b
 3932 0033 0B       		.uleb128 0xb
 3933 0034 49       		.uleb128 0x49
 3934 0035 13       		.uleb128 0x13
 3935 0036 00       		.byte	0
 3936 0037 00       		.byte	0
 3937 0038 05       		.uleb128 0x5
ARM GAS  /tmp/ccZvkXpi.s 			page 101


 3938 0039 16       		.uleb128 0x16
 3939 003a 00       		.byte	0
 3940 003b 03       		.uleb128 0x3
 3941 003c 0E       		.uleb128 0xe
 3942 003d 3A       		.uleb128 0x3a
 3943 003e 0B       		.uleb128 0xb
 3944 003f 3B       		.uleb128 0x3b
 3945 0040 05       		.uleb128 0x5
 3946 0041 49       		.uleb128 0x49
 3947 0042 13       		.uleb128 0x13
 3948 0043 00       		.byte	0
 3949 0044 00       		.byte	0
 3950 0045 06       		.uleb128 0x6
 3951 0046 17       		.uleb128 0x17
 3952 0047 01       		.byte	0x1
 3953 0048 0B       		.uleb128 0xb
 3954 0049 0B       		.uleb128 0xb
 3955 004a 3A       		.uleb128 0x3a
 3956 004b 0B       		.uleb128 0xb
 3957 004c 3B       		.uleb128 0x3b
 3958 004d 0B       		.uleb128 0xb
 3959 004e 01       		.uleb128 0x1
 3960 004f 13       		.uleb128 0x13
 3961 0050 00       		.byte	0
 3962 0051 00       		.byte	0
 3963 0052 07       		.uleb128 0x7
 3964 0053 0D       		.uleb128 0xd
 3965 0054 00       		.byte	0
 3966 0055 03       		.uleb128 0x3
 3967 0056 0E       		.uleb128 0xe
 3968 0057 3A       		.uleb128 0x3a
 3969 0058 0B       		.uleb128 0xb
 3970 0059 3B       		.uleb128 0x3b
 3971 005a 0B       		.uleb128 0xb
 3972 005b 49       		.uleb128 0x49
 3973 005c 13       		.uleb128 0x13
 3974 005d 00       		.byte	0
 3975 005e 00       		.byte	0
 3976 005f 08       		.uleb128 0x8
 3977 0060 01       		.uleb128 0x1
 3978 0061 01       		.byte	0x1
 3979 0062 49       		.uleb128 0x49
 3980 0063 13       		.uleb128 0x13
 3981 0064 01       		.uleb128 0x1
 3982 0065 13       		.uleb128 0x13
 3983 0066 00       		.byte	0
 3984 0067 00       		.byte	0
 3985 0068 09       		.uleb128 0x9
 3986 0069 21       		.uleb128 0x21
 3987 006a 00       		.byte	0
 3988 006b 49       		.uleb128 0x49
 3989 006c 13       		.uleb128 0x13
 3990 006d 2F       		.uleb128 0x2f
 3991 006e 0B       		.uleb128 0xb
 3992 006f 00       		.byte	0
 3993 0070 00       		.byte	0
 3994 0071 0A       		.uleb128 0xa
ARM GAS  /tmp/ccZvkXpi.s 			page 102


 3995 0072 13       		.uleb128 0x13
 3996 0073 01       		.byte	0x1
 3997 0074 0B       		.uleb128 0xb
 3998 0075 0B       		.uleb128 0xb
 3999 0076 3A       		.uleb128 0x3a
 4000 0077 0B       		.uleb128 0xb
 4001 0078 3B       		.uleb128 0x3b
 4002 0079 0B       		.uleb128 0xb
 4003 007a 01       		.uleb128 0x1
 4004 007b 13       		.uleb128 0x13
 4005 007c 00       		.byte	0
 4006 007d 00       		.byte	0
 4007 007e 0B       		.uleb128 0xb
 4008 007f 0D       		.uleb128 0xd
 4009 0080 00       		.byte	0
 4010 0081 03       		.uleb128 0x3
 4011 0082 0E       		.uleb128 0xe
 4012 0083 3A       		.uleb128 0x3a
 4013 0084 0B       		.uleb128 0xb
 4014 0085 3B       		.uleb128 0x3b
 4015 0086 0B       		.uleb128 0xb
 4016 0087 49       		.uleb128 0x49
 4017 0088 13       		.uleb128 0x13
 4018 0089 38       		.uleb128 0x38
 4019 008a 0A       		.uleb128 0xa
 4020 008b 00       		.byte	0
 4021 008c 00       		.byte	0
 4022 008d 0C       		.uleb128 0xc
 4023 008e 0F       		.uleb128 0xf
 4024 008f 00       		.byte	0
 4025 0090 0B       		.uleb128 0xb
 4026 0091 0B       		.uleb128 0xb
 4027 0092 00       		.byte	0
 4028 0093 00       		.byte	0
 4029 0094 0D       		.uleb128 0xd
 4030 0095 13       		.uleb128 0x13
 4031 0096 01       		.byte	0x1
 4032 0097 03       		.uleb128 0x3
 4033 0098 0E       		.uleb128 0xe
 4034 0099 0B       		.uleb128 0xb
 4035 009a 0B       		.uleb128 0xb
 4036 009b 3A       		.uleb128 0x3a
 4037 009c 0B       		.uleb128 0xb
 4038 009d 3B       		.uleb128 0x3b
 4039 009e 0B       		.uleb128 0xb
 4040 009f 01       		.uleb128 0x1
 4041 00a0 13       		.uleb128 0x13
 4042 00a1 00       		.byte	0
 4043 00a2 00       		.byte	0
 4044 00a3 0E       		.uleb128 0xe
 4045 00a4 0D       		.uleb128 0xd
 4046 00a5 00       		.byte	0
 4047 00a6 03       		.uleb128 0x3
 4048 00a7 08       		.uleb128 0x8
 4049 00a8 3A       		.uleb128 0x3a
 4050 00a9 0B       		.uleb128 0xb
 4051 00aa 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccZvkXpi.s 			page 103


 4052 00ab 0B       		.uleb128 0xb
 4053 00ac 49       		.uleb128 0x49
 4054 00ad 13       		.uleb128 0x13
 4055 00ae 38       		.uleb128 0x38
 4056 00af 0A       		.uleb128 0xa
 4057 00b0 00       		.byte	0
 4058 00b1 00       		.byte	0
 4059 00b2 0F       		.uleb128 0xf
 4060 00b3 0F       		.uleb128 0xf
 4061 00b4 00       		.byte	0
 4062 00b5 0B       		.uleb128 0xb
 4063 00b6 0B       		.uleb128 0xb
 4064 00b7 49       		.uleb128 0x49
 4065 00b8 13       		.uleb128 0x13
 4066 00b9 00       		.byte	0
 4067 00ba 00       		.byte	0
 4068 00bb 10       		.uleb128 0x10
 4069 00bc 13       		.uleb128 0x13
 4070 00bd 01       		.byte	0x1
 4071 00be 03       		.uleb128 0x3
 4072 00bf 0E       		.uleb128 0xe
 4073 00c0 0B       		.uleb128 0xb
 4074 00c1 05       		.uleb128 0x5
 4075 00c2 3A       		.uleb128 0x3a
 4076 00c3 0B       		.uleb128 0xb
 4077 00c4 3B       		.uleb128 0x3b
 4078 00c5 0B       		.uleb128 0xb
 4079 00c6 01       		.uleb128 0x1
 4080 00c7 13       		.uleb128 0x13
 4081 00c8 00       		.byte	0
 4082 00c9 00       		.byte	0
 4083 00ca 11       		.uleb128 0x11
 4084 00cb 15       		.uleb128 0x15
 4085 00cc 00       		.byte	0
 4086 00cd 27       		.uleb128 0x27
 4087 00ce 0C       		.uleb128 0xc
 4088 00cf 00       		.byte	0
 4089 00d0 00       		.byte	0
 4090 00d1 12       		.uleb128 0x12
 4091 00d2 13       		.uleb128 0x13
 4092 00d3 01       		.byte	0x1
 4093 00d4 03       		.uleb128 0x3
 4094 00d5 0E       		.uleb128 0xe
 4095 00d6 0B       		.uleb128 0xb
 4096 00d7 0B       		.uleb128 0xb
 4097 00d8 3A       		.uleb128 0x3a
 4098 00d9 0B       		.uleb128 0xb
 4099 00da 3B       		.uleb128 0x3b
 4100 00db 05       		.uleb128 0x5
 4101 00dc 01       		.uleb128 0x1
 4102 00dd 13       		.uleb128 0x13
 4103 00de 00       		.byte	0
 4104 00df 00       		.byte	0
 4105 00e0 13       		.uleb128 0x13
 4106 00e1 0D       		.uleb128 0xd
 4107 00e2 00       		.byte	0
 4108 00e3 03       		.uleb128 0x3
ARM GAS  /tmp/ccZvkXpi.s 			page 104


 4109 00e4 0E       		.uleb128 0xe
 4110 00e5 3A       		.uleb128 0x3a
 4111 00e6 0B       		.uleb128 0xb
 4112 00e7 3B       		.uleb128 0x3b
 4113 00e8 05       		.uleb128 0x5
 4114 00e9 49       		.uleb128 0x49
 4115 00ea 13       		.uleb128 0x13
 4116 00eb 38       		.uleb128 0x38
 4117 00ec 0A       		.uleb128 0xa
 4118 00ed 00       		.byte	0
 4119 00ee 00       		.byte	0
 4120 00ef 14       		.uleb128 0x14
 4121 00f0 0D       		.uleb128 0xd
 4122 00f1 00       		.byte	0
 4123 00f2 03       		.uleb128 0x3
 4124 00f3 08       		.uleb128 0x8
 4125 00f4 3A       		.uleb128 0x3a
 4126 00f5 0B       		.uleb128 0xb
 4127 00f6 3B       		.uleb128 0x3b
 4128 00f7 05       		.uleb128 0x5
 4129 00f8 49       		.uleb128 0x49
 4130 00f9 13       		.uleb128 0x13
 4131 00fa 38       		.uleb128 0x38
 4132 00fb 0A       		.uleb128 0xa
 4133 00fc 00       		.byte	0
 4134 00fd 00       		.byte	0
 4135 00fe 15       		.uleb128 0x15
 4136 00ff 15       		.uleb128 0x15
 4137 0100 01       		.byte	0x1
 4138 0101 27       		.uleb128 0x27
 4139 0102 0C       		.uleb128 0xc
 4140 0103 49       		.uleb128 0x49
 4141 0104 13       		.uleb128 0x13
 4142 0105 01       		.uleb128 0x1
 4143 0106 13       		.uleb128 0x13
 4144 0107 00       		.byte	0
 4145 0108 00       		.byte	0
 4146 0109 16       		.uleb128 0x16
 4147 010a 05       		.uleb128 0x5
 4148 010b 00       		.byte	0
 4149 010c 49       		.uleb128 0x49
 4150 010d 13       		.uleb128 0x13
 4151 010e 00       		.byte	0
 4152 010f 00       		.byte	0
 4153 0110 17       		.uleb128 0x17
 4154 0111 26       		.uleb128 0x26
 4155 0112 00       		.byte	0
 4156 0113 49       		.uleb128 0x49
 4157 0114 13       		.uleb128 0x13
 4158 0115 00       		.byte	0
 4159 0116 00       		.byte	0
 4160 0117 18       		.uleb128 0x18
 4161 0118 15       		.uleb128 0x15
 4162 0119 01       		.byte	0x1
 4163 011a 27       		.uleb128 0x27
 4164 011b 0C       		.uleb128 0xc
 4165 011c 01       		.uleb128 0x1
ARM GAS  /tmp/ccZvkXpi.s 			page 105


 4166 011d 13       		.uleb128 0x13
 4167 011e 00       		.byte	0
 4168 011f 00       		.byte	0
 4169 0120 19       		.uleb128 0x19
 4170 0121 35       		.uleb128 0x35
 4171 0122 00       		.byte	0
 4172 0123 49       		.uleb128 0x49
 4173 0124 13       		.uleb128 0x13
 4174 0125 00       		.byte	0
 4175 0126 00       		.byte	0
 4176 0127 1A       		.uleb128 0x1a
 4177 0128 04       		.uleb128 0x4
 4178 0129 01       		.byte	0x1
 4179 012a 03       		.uleb128 0x3
 4180 012b 0E       		.uleb128 0xe
 4181 012c 0B       		.uleb128 0xb
 4182 012d 0B       		.uleb128 0xb
 4183 012e 3A       		.uleb128 0x3a
 4184 012f 0B       		.uleb128 0xb
 4185 0130 3B       		.uleb128 0x3b
 4186 0131 0B       		.uleb128 0xb
 4187 0132 01       		.uleb128 0x1
 4188 0133 13       		.uleb128 0x13
 4189 0134 00       		.byte	0
 4190 0135 00       		.byte	0
 4191 0136 1B       		.uleb128 0x1b
 4192 0137 28       		.uleb128 0x28
 4193 0138 00       		.byte	0
 4194 0139 03       		.uleb128 0x3
 4195 013a 0E       		.uleb128 0xe
 4196 013b 1C       		.uleb128 0x1c
 4197 013c 0D       		.uleb128 0xd
 4198 013d 00       		.byte	0
 4199 013e 00       		.byte	0
 4200 013f 1C       		.uleb128 0x1c
 4201 0140 13       		.uleb128 0x13
 4202 0141 01       		.byte	0x1
 4203 0142 0B       		.uleb128 0xb
 4204 0143 05       		.uleb128 0x5
 4205 0144 3A       		.uleb128 0x3a
 4206 0145 0B       		.uleb128 0xb
 4207 0146 3B       		.uleb128 0x3b
 4208 0147 0B       		.uleb128 0xb
 4209 0148 01       		.uleb128 0x1
 4210 0149 13       		.uleb128 0x13
 4211 014a 00       		.byte	0
 4212 014b 00       		.byte	0
 4213 014c 1D       		.uleb128 0x1d
 4214 014d 21       		.uleb128 0x21
 4215 014e 00       		.byte	0
 4216 014f 49       		.uleb128 0x49
 4217 0150 13       		.uleb128 0x13
 4218 0151 2F       		.uleb128 0x2f
 4219 0152 05       		.uleb128 0x5
 4220 0153 00       		.byte	0
 4221 0154 00       		.byte	0
 4222 0155 1E       		.uleb128 0x1e
ARM GAS  /tmp/ccZvkXpi.s 			page 106


 4223 0156 16       		.uleb128 0x16
 4224 0157 00       		.byte	0
 4225 0158 03       		.uleb128 0x3
 4226 0159 08       		.uleb128 0x8
 4227 015a 3A       		.uleb128 0x3a
 4228 015b 0B       		.uleb128 0xb
 4229 015c 3B       		.uleb128 0x3b
 4230 015d 05       		.uleb128 0x5
 4231 015e 49       		.uleb128 0x49
 4232 015f 13       		.uleb128 0x13
 4233 0160 00       		.byte	0
 4234 0161 00       		.byte	0
 4235 0162 1F       		.uleb128 0x1f
 4236 0163 13       		.uleb128 0x13
 4237 0164 01       		.byte	0x1
 4238 0165 0B       		.uleb128 0xb
 4239 0166 05       		.uleb128 0x5
 4240 0167 3A       		.uleb128 0x3a
 4241 0168 0B       		.uleb128 0xb
 4242 0169 3B       		.uleb128 0x3b
 4243 016a 05       		.uleb128 0x5
 4244 016b 01       		.uleb128 0x1
 4245 016c 13       		.uleb128 0x13
 4246 016d 00       		.byte	0
 4247 016e 00       		.byte	0
 4248 016f 20       		.uleb128 0x20
 4249 0170 13       		.uleb128 0x13
 4250 0171 01       		.byte	0x1
 4251 0172 0B       		.uleb128 0xb
 4252 0173 0B       		.uleb128 0xb
 4253 0174 3A       		.uleb128 0x3a
 4254 0175 0B       		.uleb128 0xb
 4255 0176 3B       		.uleb128 0x3b
 4256 0177 05       		.uleb128 0x5
 4257 0178 01       		.uleb128 0x1
 4258 0179 13       		.uleb128 0x13
 4259 017a 00       		.byte	0
 4260 017b 00       		.byte	0
 4261 017c 21       		.uleb128 0x21
 4262 017d 04       		.uleb128 0x4
 4263 017e 01       		.byte	0x1
 4264 017f 0B       		.uleb128 0xb
 4265 0180 0B       		.uleb128 0xb
 4266 0181 3A       		.uleb128 0x3a
 4267 0182 0B       		.uleb128 0xb
 4268 0183 3B       		.uleb128 0x3b
 4269 0184 0B       		.uleb128 0xb
 4270 0185 01       		.uleb128 0x1
 4271 0186 13       		.uleb128 0x13
 4272 0187 00       		.byte	0
 4273 0188 00       		.byte	0
 4274 0189 22       		.uleb128 0x22
 4275 018a 28       		.uleb128 0x28
 4276 018b 00       		.byte	0
 4277 018c 03       		.uleb128 0x3
 4278 018d 08       		.uleb128 0x8
 4279 018e 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccZvkXpi.s 			page 107


 4280 018f 0D       		.uleb128 0xd
 4281 0190 00       		.byte	0
 4282 0191 00       		.byte	0
 4283 0192 23       		.uleb128 0x23
 4284 0193 2E       		.uleb128 0x2e
 4285 0194 01       		.byte	0x1
 4286 0195 03       		.uleb128 0x3
 4287 0196 0E       		.uleb128 0xe
 4288 0197 3A       		.uleb128 0x3a
 4289 0198 0B       		.uleb128 0xb
 4290 0199 3B       		.uleb128 0x3b
 4291 019a 05       		.uleb128 0x5
 4292 019b 27       		.uleb128 0x27
 4293 019c 0C       		.uleb128 0xc
 4294 019d 11       		.uleb128 0x11
 4295 019e 01       		.uleb128 0x1
 4296 019f 12       		.uleb128 0x12
 4297 01a0 01       		.uleb128 0x1
 4298 01a1 40       		.uleb128 0x40
 4299 01a2 06       		.uleb128 0x6
 4300 01a3 01       		.uleb128 0x1
 4301 01a4 13       		.uleb128 0x13
 4302 01a5 00       		.byte	0
 4303 01a6 00       		.byte	0
 4304 01a7 24       		.uleb128 0x24
 4305 01a8 05       		.uleb128 0x5
 4306 01a9 00       		.byte	0
 4307 01aa 03       		.uleb128 0x3
 4308 01ab 0E       		.uleb128 0xe
 4309 01ac 3A       		.uleb128 0x3a
 4310 01ad 0B       		.uleb128 0xb
 4311 01ae 3B       		.uleb128 0x3b
 4312 01af 05       		.uleb128 0x5
 4313 01b0 49       		.uleb128 0x49
 4314 01b1 13       		.uleb128 0x13
 4315 01b2 02       		.uleb128 0x2
 4316 01b3 0A       		.uleb128 0xa
 4317 01b4 00       		.byte	0
 4318 01b5 00       		.byte	0
 4319 01b6 25       		.uleb128 0x25
 4320 01b7 2E       		.uleb128 0x2e
 4321 01b8 01       		.byte	0x1
 4322 01b9 3F       		.uleb128 0x3f
 4323 01ba 0C       		.uleb128 0xc
 4324 01bb 03       		.uleb128 0x3
 4325 01bc 0E       		.uleb128 0xe
 4326 01bd 3A       		.uleb128 0x3a
 4327 01be 0B       		.uleb128 0xb
 4328 01bf 3B       		.uleb128 0x3b
 4329 01c0 0B       		.uleb128 0xb
 4330 01c1 49       		.uleb128 0x49
 4331 01c2 13       		.uleb128 0x13
 4332 01c3 11       		.uleb128 0x11
 4333 01c4 01       		.uleb128 0x1
 4334 01c5 12       		.uleb128 0x12
 4335 01c6 01       		.uleb128 0x1
 4336 01c7 40       		.uleb128 0x40
ARM GAS  /tmp/ccZvkXpi.s 			page 108


 4337 01c8 06       		.uleb128 0x6
 4338 01c9 01       		.uleb128 0x1
 4339 01ca 13       		.uleb128 0x13
 4340 01cb 00       		.byte	0
 4341 01cc 00       		.byte	0
 4342 01cd 26       		.uleb128 0x26
 4343 01ce 34       		.uleb128 0x34
 4344 01cf 00       		.byte	0
 4345 01d0 03       		.uleb128 0x3
 4346 01d1 0E       		.uleb128 0xe
 4347 01d2 3A       		.uleb128 0x3a
 4348 01d3 0B       		.uleb128 0xb
 4349 01d4 3B       		.uleb128 0x3b
 4350 01d5 0B       		.uleb128 0xb
 4351 01d6 49       		.uleb128 0x49
 4352 01d7 13       		.uleb128 0x13
 4353 01d8 02       		.uleb128 0x2
 4354 01d9 0A       		.uleb128 0xa
 4355 01da 00       		.byte	0
 4356 01db 00       		.byte	0
 4357 01dc 27       		.uleb128 0x27
 4358 01dd 34       		.uleb128 0x34
 4359 01de 00       		.byte	0
 4360 01df 03       		.uleb128 0x3
 4361 01e0 08       		.uleb128 0x8
 4362 01e1 3A       		.uleb128 0x3a
 4363 01e2 0B       		.uleb128 0xb
 4364 01e3 3B       		.uleb128 0x3b
 4365 01e4 0B       		.uleb128 0xb
 4366 01e5 49       		.uleb128 0x49
 4367 01e6 13       		.uleb128 0x13
 4368 01e7 02       		.uleb128 0x2
 4369 01e8 0A       		.uleb128 0xa
 4370 01e9 00       		.byte	0
 4371 01ea 00       		.byte	0
 4372 01eb 28       		.uleb128 0x28
 4373 01ec 2E       		.uleb128 0x2e
 4374 01ed 01       		.byte	0x1
 4375 01ee 3F       		.uleb128 0x3f
 4376 01ef 0C       		.uleb128 0xc
 4377 01f0 03       		.uleb128 0x3
 4378 01f1 0E       		.uleb128 0xe
 4379 01f2 3A       		.uleb128 0x3a
 4380 01f3 0B       		.uleb128 0xb
 4381 01f4 3B       		.uleb128 0x3b
 4382 01f5 0B       		.uleb128 0xb
 4383 01f6 27       		.uleb128 0x27
 4384 01f7 0C       		.uleb128 0xc
 4385 01f8 11       		.uleb128 0x11
 4386 01f9 01       		.uleb128 0x1
 4387 01fa 12       		.uleb128 0x12
 4388 01fb 01       		.uleb128 0x1
 4389 01fc 40       		.uleb128 0x40
 4390 01fd 06       		.uleb128 0x6
 4391 01fe 01       		.uleb128 0x1
 4392 01ff 13       		.uleb128 0x13
 4393 0200 00       		.byte	0
ARM GAS  /tmp/ccZvkXpi.s 			page 109


 4394 0201 00       		.byte	0
 4395 0202 29       		.uleb128 0x29
 4396 0203 2E       		.uleb128 0x2e
 4397 0204 01       		.byte	0x1
 4398 0205 03       		.uleb128 0x3
 4399 0206 0E       		.uleb128 0xe
 4400 0207 3A       		.uleb128 0x3a
 4401 0208 0B       		.uleb128 0xb
 4402 0209 3B       		.uleb128 0x3b
 4403 020a 0B       		.uleb128 0xb
 4404 020b 11       		.uleb128 0x11
 4405 020c 01       		.uleb128 0x1
 4406 020d 12       		.uleb128 0x12
 4407 020e 01       		.uleb128 0x1
 4408 020f 40       		.uleb128 0x40
 4409 0210 06       		.uleb128 0x6
 4410 0211 01       		.uleb128 0x1
 4411 0212 13       		.uleb128 0x13
 4412 0213 00       		.byte	0
 4413 0214 00       		.byte	0
 4414 0215 2A       		.uleb128 0x2a
 4415 0216 34       		.uleb128 0x34
 4416 0217 00       		.byte	0
 4417 0218 03       		.uleb128 0x3
 4418 0219 0E       		.uleb128 0xe
 4419 021a 3A       		.uleb128 0x3a
 4420 021b 0B       		.uleb128 0xb
 4421 021c 3B       		.uleb128 0x3b
 4422 021d 05       		.uleb128 0x5
 4423 021e 49       		.uleb128 0x49
 4424 021f 13       		.uleb128 0x13
 4425 0220 3F       		.uleb128 0x3f
 4426 0221 0C       		.uleb128 0xc
 4427 0222 3C       		.uleb128 0x3c
 4428 0223 0C       		.uleb128 0xc
 4429 0224 00       		.byte	0
 4430 0225 00       		.byte	0
 4431 0226 00       		.byte	0
 4432              		.section	.debug_loc,"",%progbits
 4433              	.Ldebug_loc0:
 4434              	.LLST0:
 4435 0000 00000000 		.4byte	.LFB14
 4436 0004 02000000 		.4byte	.LCFI0
 4437 0008 0200     		.2byte	0x2
 4438 000a 7D       		.byte	0x7d
 4439 000b 00       		.sleb128 0
 4440 000c 02000000 		.4byte	.LCFI0
 4441 0010 04000000 		.4byte	.LCFI1
 4442 0014 0200     		.2byte	0x2
 4443 0016 7D       		.byte	0x7d
 4444 0017 04       		.sleb128 4
 4445 0018 04000000 		.4byte	.LCFI1
 4446 001c 06000000 		.4byte	.LCFI2
 4447 0020 0200     		.2byte	0x2
 4448 0022 7D       		.byte	0x7d
 4449 0023 10       		.sleb128 16
 4450 0024 06000000 		.4byte	.LCFI2
ARM GAS  /tmp/ccZvkXpi.s 			page 110


 4451 0028 36000000 		.4byte	.LFE14
 4452 002c 0200     		.2byte	0x2
 4453 002e 77       		.byte	0x77
 4454 002f 10       		.sleb128 16
 4455 0030 00000000 		.4byte	0
 4456 0034 00000000 		.4byte	0
 4457              	.LLST1:
 4458 0038 00000000 		.4byte	.LFB35
 4459 003c 02000000 		.4byte	.LCFI3
 4460 0040 0200     		.2byte	0x2
 4461 0042 7D       		.byte	0x7d
 4462 0043 00       		.sleb128 0
 4463 0044 02000000 		.4byte	.LCFI3
 4464 0048 04000000 		.4byte	.LCFI4
 4465 004c 0200     		.2byte	0x2
 4466 004e 7D       		.byte	0x7d
 4467 004f 0C       		.sleb128 12
 4468 0050 04000000 		.4byte	.LCFI4
 4469 0054 06000000 		.4byte	.LCFI5
 4470 0058 0300     		.2byte	0x3
 4471 005a 7D       		.byte	0x7d
 4472 005b C000     		.sleb128 64
 4473 005d 06000000 		.4byte	.LCFI5
 4474 0061 F4040000 		.4byte	.LFE35
 4475 0065 0200     		.2byte	0x2
 4476 0067 77       		.byte	0x77
 4477 0068 38       		.sleb128 56
 4478 0069 00000000 		.4byte	0
 4479 006d 00000000 		.4byte	0
 4480              	.LLST2:
 4481 0071 00000000 		.4byte	.LFB36
 4482 0075 02000000 		.4byte	.LCFI6
 4483 0079 0200     		.2byte	0x2
 4484 007b 7D       		.byte	0x7d
 4485 007c 00       		.sleb128 0
 4486 007d 02000000 		.4byte	.LCFI6
 4487 0081 04000000 		.4byte	.LCFI7
 4488 0085 0200     		.2byte	0x2
 4489 0087 7D       		.byte	0x7d
 4490 0088 04       		.sleb128 4
 4491 0089 04000000 		.4byte	.LCFI7
 4492 008d 06000000 		.4byte	.LCFI8
 4493 0091 0200     		.2byte	0x2
 4494 0093 7D       		.byte	0x7d
 4495 0094 10       		.sleb128 16
 4496 0095 06000000 		.4byte	.LCFI8
 4497 0099 7C000000 		.4byte	.LFE36
 4498 009d 0200     		.2byte	0x2
 4499 009f 77       		.byte	0x77
 4500 00a0 10       		.sleb128 16
 4501 00a1 00000000 		.4byte	0
 4502 00a5 00000000 		.4byte	0
 4503              	.LLST3:
 4504 00a9 00000000 		.4byte	.LFB37
 4505 00ad 02000000 		.4byte	.LCFI9
 4506 00b1 0200     		.2byte	0x2
 4507 00b3 7D       		.byte	0x7d
ARM GAS  /tmp/ccZvkXpi.s 			page 111


 4508 00b4 00       		.sleb128 0
 4509 00b5 02000000 		.4byte	.LCFI9
 4510 00b9 04000000 		.4byte	.LCFI10
 4511 00bd 0200     		.2byte	0x2
 4512 00bf 7D       		.byte	0x7d
 4513 00c0 08       		.sleb128 8
 4514 00c1 04000000 		.4byte	.LCFI10
 4515 00c5 06000000 		.4byte	.LCFI11
 4516 00c9 0200     		.2byte	0x2
 4517 00cb 7D       		.byte	0x7d
 4518 00cc 18       		.sleb128 24
 4519 00cd 06000000 		.4byte	.LCFI11
 4520 00d1 D6000000 		.4byte	.LFE37
 4521 00d5 0200     		.2byte	0x2
 4522 00d7 77       		.byte	0x77
 4523 00d8 18       		.sleb128 24
 4524 00d9 00000000 		.4byte	0
 4525 00dd 00000000 		.4byte	0
 4526              	.LLST4:
 4527 00e1 00000000 		.4byte	.LFB38
 4528 00e5 02000000 		.4byte	.LCFI12
 4529 00e9 0200     		.2byte	0x2
 4530 00eb 7D       		.byte	0x7d
 4531 00ec 00       		.sleb128 0
 4532 00ed 02000000 		.4byte	.LCFI12
 4533 00f1 04000000 		.4byte	.LCFI13
 4534 00f5 0200     		.2byte	0x2
 4535 00f7 7D       		.byte	0x7d
 4536 00f8 0C       		.sleb128 12
 4537 00f9 04000000 		.4byte	.LCFI13
 4538 00fd 06000000 		.4byte	.LCFI14
 4539 0101 0200     		.2byte	0x2
 4540 0103 7D       		.byte	0x7d
 4541 0104 20       		.sleb128 32
 4542 0105 06000000 		.4byte	.LCFI14
 4543 0109 DA000000 		.4byte	.LFE38
 4544 010d 0200     		.2byte	0x2
 4545 010f 77       		.byte	0x77
 4546 0110 18       		.sleb128 24
 4547 0111 00000000 		.4byte	0
 4548 0115 00000000 		.4byte	0
 4549              		.section	.debug_aranges,"",%progbits
 4550 0000 3C000000 		.4byte	0x3c
 4551 0004 0200     		.2byte	0x2
 4552 0006 00000000 		.4byte	.Ldebug_info0
 4553 000a 04       		.byte	0x4
 4554 000b 00       		.byte	0
 4555 000c 0000     		.2byte	0
 4556 000e 0000     		.2byte	0
 4557 0010 00000000 		.4byte	.LFB14
 4558 0014 36000000 		.4byte	.LFE14-.LFB14
 4559 0018 00000000 		.4byte	.LFB35
 4560 001c F4040000 		.4byte	.LFE35-.LFB35
 4561 0020 00000000 		.4byte	.LFB36
 4562 0024 7C000000 		.4byte	.LFE36-.LFB36
 4563 0028 00000000 		.4byte	.LFB37
 4564 002c D6000000 		.4byte	.LFE37-.LFB37
ARM GAS  /tmp/ccZvkXpi.s 			page 112


 4565 0030 00000000 		.4byte	.LFB38
 4566 0034 DA000000 		.4byte	.LFE38-.LFB38
 4567 0038 00000000 		.4byte	0
 4568 003c 00000000 		.4byte	0
 4569              		.section	.debug_ranges,"",%progbits
 4570              	.Ldebug_ranges0:
 4571 0000 00000000 		.4byte	.LFB14
 4572 0004 36000000 		.4byte	.LFE14
 4573 0008 00000000 		.4byte	.LFB35
 4574 000c F4040000 		.4byte	.LFE35
 4575 0010 00000000 		.4byte	.LFB36
 4576 0014 7C000000 		.4byte	.LFE36
 4577 0018 00000000 		.4byte	.LFB37
 4578 001c D6000000 		.4byte	.LFE37
 4579 0020 00000000 		.4byte	.LFB38
 4580 0024 DA000000 		.4byte	.LFE38
 4581 0028 00000000 		.4byte	0
 4582 002c 00000000 		.4byte	0
 4583              		.section	.debug_line,"",%progbits
 4584              	.Ldebug_line0:
 4585 0000 B9020000 		.section	.debug_str,"MS",%progbits,1
 4585      02009201 
 4585      00000201 
 4585      FB0E0D00 
 4585      01010101 
 4586              	.LASF160:
 4587 0000 52534552 		.ascii	"RSERVED1\000"
 4587      56454431 
 4587      00
 4588              	.LASF291:
 4589 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 4589      5F456E61 
 4589      626C6549 
 4589      525100
 4590              	.LASF146:
 4591 0018 5443325F 		.ascii	"TC2_IRQn\000"
 4591      4952516E 
 4591      00
 4592              	.LASF224:
 4593 0021 504D435F 		.ascii	"PMC_FSPR\000"
 4593      46535052 
 4593      00
 4594              	.LASF211:
 4595 002a 504D435F 		.ascii	"PMC_PCSR0\000"
 4595      50435352 
 4595      3000
 4596              	.LASF14:
 4597 0034 5F5F7661 		.ascii	"__value\000"
 4597      6C756500 
 4598              	.LASF66:
 4599 003c 5F5F7366 		.ascii	"__sf\000"
 4599      00
 4600              	.LASF75:
 4601 0041 5F726561 		.ascii	"_read\000"
 4601      6400
 4602              	.LASF169:
 4603 0047 4E564943 		.ascii	"NVIC_Type\000"
ARM GAS  /tmp/ccZvkXpi.s 			page 113


 4603      5F547970 
 4603      6500
 4604              	.LASF215:
 4605 0051 434B4752 		.ascii	"CKGR_PLLBR\000"
 4605      5F504C4C 
 4605      425200
 4606              	.LASF76:
 4607 005c 5F777269 		.ascii	"_write\000"
 4607      746500
 4608              	.LASF237:
 4609 0063 54435F53 		.ascii	"TC_SMMR\000"
 4609      4D4D5200 
 4610              	.LASF62:
 4611 006b 5F617363 		.ascii	"_asctime_buf\000"
 4611      74696D65 
 4611      5F627566 
 4611      00
 4612              	.LASF58:
 4613 0078 5F637674 		.ascii	"_cvtlen\000"
 4613      6C656E00 
 4614              	.LASF217:
 4615 0080 504D435F 		.ascii	"PMC_USB\000"
 4615      55534200 
 4616              	.LASF185:
 4617 0088 4144435F 		.ascii	"ADC_EMR\000"
 4617      454D5200 
 4618              	.LASF182:
 4619 0090 4144435F 		.ascii	"ADC_ISR\000"
 4619      49535200 
 4620              	.LASF24:
 4621 0098 5F5F746D 		.ascii	"__tm\000"
 4621      00
 4622              	.LASF112:
 4623 009d 5F776373 		.ascii	"_wcsrtombs_state\000"
 4623      72746F6D 
 4623      62735F73 
 4623      74617465 
 4623      00
 4624              	.LASF80:
 4625 00ae 5F6E6275 		.ascii	"_nbuf\000"
 4625      6600
 4626              	.LASF25:
 4627 00b4 5F5F746D 		.ascii	"__tm_sec\000"
 4627      5F736563 
 4627      00
 4628              	.LASF106:
 4629 00bd 5F6C3634 		.ascii	"_l64a_buf\000"
 4629      615F6275 
 4629      6600
 4630              	.LASF83:
 4631 00c7 5F6C6F63 		.ascii	"_lock\000"
 4631      6B00
 4632              	.LASF254:
 4633 00cd 54435F46 		.ascii	"TC_FMR\000"
 4633      4D5200
 4634              	.LASF229:
 4635 00d4 52657365 		.ascii	"Reserved7\000"
ARM GAS  /tmp/ccZvkXpi.s 			page 114


 4635      72766564 
 4635      3700
 4636              	.LASF93:
 4637 00de 5F6D756C 		.ascii	"_mult\000"
 4637      7400
 4638              	.LASF125:
 4639 00e4 52535443 		.ascii	"RSTC_IRQn\000"
 4639      5F495251 
 4639      6E00
 4640              	.LASF279:
 4641 00ee 6C6F6F70 		.ascii	"loop\000"
 4641      00
 4642              	.LASF286:
 4643 00f3 636F6E66 		.ascii	"conf\000"
 4643      00
 4644              	.LASF200:
 4645 00f8 4144435F 		.ascii	"ADC_RNPR\000"
 4645      524E5052 
 4645      00
 4646              	.LASF163:
 4647 0101 49435052 		.ascii	"ICPR\000"
 4647      00
 4648              	.LASF252:
 4649 0106 54435F51 		.ascii	"TC_QIMR\000"
 4649      494D5200 
 4650              	.LASF202:
 4651 010e 4144435F 		.ascii	"ADC_TNPR\000"
 4651      544E5052 
 4651      00
 4652              	.LASF11:
 4653 0117 5F5F7763 		.ascii	"__wch\000"
 4653      6800
 4654              	.LASF247:
 4655 011d 54435F43 		.ascii	"TC_CHANNEL\000"
 4655      48414E4E 
 4655      454C00
 4656              	.LASF194:
 4657 0128 4144435F 		.ascii	"ADC_WPSR\000"
 4657      57505352 
 4657      00
 4658              	.LASF71:
 4659 0131 5F66696C 		.ascii	"_file\000"
 4659      6500
 4660              	.LASF34:
 4661 0137 5F6F6E5F 		.ascii	"_on_exit_args\000"
 4661      65786974 
 4661      5F617267 
 4661      7300
 4662              	.LASF269:
 4663 0145 74726973 		.ascii	"tristate\000"
 4663      74617465 
 4663      00
 4664              	.LASF220:
 4665 014e 504D435F 		.ascii	"PMC_IDR\000"
 4665      49445200 
 4666              	.LASF153:
 4667 0156 43524343 		.ascii	"CRCCU_IRQn\000"
ARM GAS  /tmp/ccZvkXpi.s 			page 115


 4667      555F4952 
 4667      516E00
 4668              	.LASF261:
 4669 0161 52414D50 		.ascii	"RAMP\000"
 4669      00
 4670              	.LASF235:
 4671 0166 54435F43 		.ascii	"TC_CCR\000"
 4671      435200
 4672              	.LASF108:
 4673 016d 5F6D6272 		.ascii	"_mbrlen_state\000"
 4673      6C656E5F 
 4673      73746174 
 4673      6500
 4674              	.LASF7:
 4675 017b 6C6F6E67 		.ascii	"long int\000"
 4675      20696E74 
 4675      00
 4676              	.LASF283:
 4677 0184 5F696D70 		.ascii	"_impure_ptr\000"
 4677      7572655F 
 4677      70747200 
 4678              	.LASF98:
 4679 0190 5F726573 		.ascii	"_result_k\000"
 4679      756C745F 
 4679      6B00
 4680              	.LASF45:
 4681 019a 5F73697A 		.ascii	"_size\000"
 4681      6500
 4682              	.LASF61:
 4683 01a0 5F6C6F63 		.ascii	"_localtime_buf\000"
 4683      616C7469 
 4683      6D655F62 
 4683      756600
 4684              	.LASF198:
 4685 01af 4144435F 		.ascii	"ADC_TPR\000"
 4685      54505200 
 4686              	.LASF209:
 4687 01b7 504D435F 		.ascii	"PMC_PCER0\000"
 4687      50434552 
 4687      3000
 4688              	.LASF230:
 4689 01c1 504D435F 		.ascii	"PMC_PCER1\000"
 4689      50434552 
 4689      3100
 4690              	.LASF277:
 4691 01cb 6D61696E 		.ascii	"main\000"
 4691      00
 4692              	.LASF290:
 4693 01d0 4952516E 		.ascii	"IRQn\000"
 4693      00
 4694              	.LASF149:
 4695 01d5 5443355F 		.ascii	"TC5_IRQn\000"
 4695      4952516E 
 4695      00
 4696              	.LASF212:
 4697 01de 434B4752 		.ascii	"CKGR_MOR\000"
 4697      5F4D4F52 
ARM GAS  /tmp/ccZvkXpi.s 			page 116


 4697      00
 4698              	.LASF171:
 4699 01e7 4144435F 		.ascii	"ADC_MR\000"
 4699      4D5200
 4700              	.LASF29:
 4701 01ee 5F5F746D 		.ascii	"__tm_mon\000"
 4701      5F6D6F6E 
 4701      00
 4702              	.LASF101:
 4703 01f7 5F6D6973 		.ascii	"_misc_reent\000"
 4703      635F7265 
 4703      656E7400 
 4704              	.LASF123:
 4705 0203 53797354 		.ascii	"SysTick_IRQn\000"
 4705      69636B5F 
 4705      4952516E 
 4705      00
 4706              	.LASF54:
 4707 0210 5F637572 		.ascii	"_current_category\000"
 4707      72656E74 
 4707      5F636174 
 4707      65676F72 
 4707      7900
 4708              	.LASF0:
 4709 0222 7369676E 		.ascii	"signed char\000"
 4709      65642063 
 4709      68617200 
 4710              	.LASF113:
 4711 022e 75696E74 		.ascii	"uint8_t\000"
 4711      385F7400 
 4712              	.LASF246:
 4713 0236 54634368 		.ascii	"TcChannel\000"
 4713      616E6E65 
 4713      6C00
 4714              	.LASF158:
 4715 0240 52455345 		.ascii	"RESERVED0\000"
 4715      52564544 
 4715      3000
 4716              	.LASF1:
 4717 024a 756E7369 		.ascii	"unsigned char\000"
 4717      676E6564 
 4717      20636861 
 4717      7200
 4718              	.LASF164:
 4719 0258 52455345 		.ascii	"RESERVED3\000"
 4719      52564544 
 4719      3300
 4720              	.LASF166:
 4721 0262 52455345 		.ascii	"RESERVED4\000"
 4721      52564544 
 4721      3400
 4722              	.LASF167:
 4723 026c 52455345 		.ascii	"RESERVED5\000"
 4723      52564544 
 4723      3500
 4724              	.LASF165:
 4725 0276 49414252 		.ascii	"IABR\000"
ARM GAS  /tmp/ccZvkXpi.s 			page 117


 4725      00
 4726              	.LASF264:
 4727 027b 6374726C 		.ascii	"ctrl\000"
 4727      00
 4728              	.LASF46:
 4729 0280 5F726565 		.ascii	"_reent\000"
 4729      6E7400
 4730              	.LASF256:
 4731 0287 5744545F 		.ascii	"WDT_CR\000"
 4731      435200
 4732              	.LASF162:
 4733 028e 52455345 		.ascii	"RESERVED2\000"
 4733      52564544 
 4733      3200
 4734              	.LASF119:
 4735 0298 55736167 		.ascii	"UsageFault_IRQn\000"
 4735      65466175 
 4735      6C745F49 
 4735      52516E00 
 4736              	.LASF239:
 4737 02a8 54435F52 		.ascii	"TC_RA\000"
 4737      4100
 4738              	.LASF240:
 4739 02ae 54435F52 		.ascii	"TC_RB\000"
 4739      4200
 4740              	.LASF241:
 4741 02b4 54435F52 		.ascii	"TC_RC\000"
 4741      4300
 4742              	.LASF86:
 4743 02ba 63686172 		.ascii	"char\000"
 4743      00
 4744              	.LASF41:
 4745 02bf 5F666E73 		.ascii	"_fns\000"
 4745      00
 4746              	.LASF268:
 4747 02c4 6F757470 		.ascii	"output\000"
 4747      757400
 4748              	.LASF249:
 4749 02cb 54435F42 		.ascii	"TC_BMR\000"
 4749      4D5200
 4750              	.LASF78:
 4751 02d2 5F636C6F 		.ascii	"_close\000"
 4751      736500
 4752              	.LASF133:
 4753 02d9 534D435F 		.ascii	"SMC_IRQn\000"
 4753      4952516E 
 4753      00
 4754              	.LASF253:
 4755 02e2 54435F51 		.ascii	"TC_QISR\000"
 4755      49535200 
 4756              	.LASF48:
 4757 02ea 5F737464 		.ascii	"_stdin\000"
 4757      696E00
 4758              	.LASF266:
 4759 02f1 72536C6F 		.ascii	"rSlope\000"
 4759      706500
 4760              	.LASF216:
ARM GAS  /tmp/ccZvkXpi.s 			page 118


 4761 02f8 504D435F 		.ascii	"PMC_MCKR\000"
 4761      4D434B52 
 4761      00
 4762              	.LASF242:
 4763 0301 54435F53 		.ascii	"TC_SR\000"
 4763      5200
 4764              	.LASF234:
 4765 0307 504D435F 		.ascii	"PMC_OCR\000"
 4765      4F435200 
 4766              	.LASF152:
 4767 030f 50574D5F 		.ascii	"PWM_IRQn\000"
 4767      4952516E 
 4767      00
 4768              	.LASF161:
 4769 0318 49535052 		.ascii	"ISPR\000"
 4769      00
 4770              	.LASF271:
 4771 031d 696E7075 		.ascii	"input\000"
 4771      7400
 4772              	.LASF197:
 4773 0323 4144435F 		.ascii	"ADC_RCR\000"
 4773      52435200 
 4774              	.LASF189:
 4775 032b 4144435F 		.ascii	"ADC_CDR\000"
 4775      43445200 
 4776              	.LASF168:
 4777 0333 53544952 		.ascii	"STIR\000"
 4777      00
 4778              	.LASF285:
 4779 0338 6C6F6F70 		.ascii	"loops\000"
 4779      7300
 4780              	.LASF154:
 4781 033e 4143435F 		.ascii	"ACC_IRQn\000"
 4781      4952516E 
 4781      00
 4782              	.LASF74:
 4783 0347 5F636F6F 		.ascii	"_cookie\000"
 4783      6B696500 
 4784              	.LASF22:
 4785 034f 5F776473 		.ascii	"_wds\000"
 4785      00
 4786              	.LASF129:
 4787 0354 504D435F 		.ascii	"PMC_IRQn\000"
 4787      4952516E 
 4787      00
 4788              	.LASF130:
 4789 035d 4546435F 		.ascii	"EFC_IRQn\000"
 4789      4952516E 
 4789      00
 4790              	.LASF63:
 4791 0366 5F736967 		.ascii	"_sig_func\000"
 4791      5F66756E 
 4791      6300
 4792              	.LASF82:
 4793 0370 5F6F6666 		.ascii	"_offset\000"
 4793      73657400 
 4794              	.LASF59:
ARM GAS  /tmp/ccZvkXpi.s 			page 119


 4795 0378 5F637674 		.ascii	"_cvtbuf\000"
 4795      62756600 
 4796              	.LASF124:
 4797 0380 53555043 		.ascii	"SUPC_IRQn\000"
 4797      5F495251 
 4797      6E00
 4798              	.LASF244:
 4799 038a 54435F49 		.ascii	"TC_IDR\000"
 4799      445200
 4800              	.LASF145:
 4801 0391 5443315F 		.ascii	"TC1_IRQn\000"
 4801      4952516E 
 4801      00
 4802              	.LASF136:
 4803 039a 50494F43 		.ascii	"PIOC_IRQn\000"
 4803      5F495251 
 4803      6E00
 4804              	.LASF280:
 4805 03a4 4144435F 		.ascii	"ADC_IrqHandler\000"
 4805      49727148 
 4805      616E646C 
 4805      657200
 4806              	.LASF233:
 4807 03b3 52657365 		.ascii	"Reserved8\000"
 4807      72766564 
 4807      3800
 4808              	.LASF205:
 4809 03bd 4144435F 		.ascii	"ADC_PTSR\000"
 4809      50545352 
 4809      00
 4810              	.LASF127:
 4811 03c6 5254545F 		.ascii	"RTT_IRQn\000"
 4811      4952516E 
 4811      00
 4812              	.LASF155:
 4813 03cf 5544505F 		.ascii	"UDP_IRQn\000"
 4813      4952516E 
 4813      00
 4814              	.LASF151:
 4815 03d8 44414343 		.ascii	"DACC_IRQn\000"
 4815      5F495251 
 4815      6E00
 4816              	.LASF116:
 4817 03e2 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 4817      61736B61 
 4817      626C6549 
 4817      6E745F49 
 4817      52516E00 
 4818              	.LASF176:
 4819 03f6 4144435F 		.ascii	"ADC_CHSR\000"
 4819      43485352 
 4819      00
 4820              	.LASF99:
 4821 03ff 5F703573 		.ascii	"_p5s\000"
 4821      00
 4822              	.LASF18:
 4823 0404 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  /tmp/ccZvkXpi.s 			page 120


 4823      20756E73 
 4823      69676E65 
 4823      6420696E 
 4823      7400
 4824              	.LASF117:
 4825 0416 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 4825      72794D61 
 4825      6E616765 
 4825      6D656E74 
 4825      5F495251 
 4826              	.LASF243:
 4827 042c 54435F49 		.ascii	"TC_IER\000"
 4827      455200
 4828              	.LASF69:
 4829 0433 5F5F7346 		.ascii	"__sFILE\000"
 4829      494C4500 
 4830              	.LASF53:
 4831 043b 5F5F7364 		.ascii	"__sdidinit\000"
 4831      6964696E 
 4831      697400
 4832              	.LASF85:
 4833 0446 5F666C61 		.ascii	"_flags2\000"
 4833      67733200 
 4834              	.LASF156:
 4835 044e 4952516E 		.ascii	"IRQn_Type\000"
 4835      5F547970 
 4835      6500
 4836              	.LASF222:
 4837 0458 504D435F 		.ascii	"PMC_IMR\000"
 4837      494D5200 
 4838              	.LASF274:
 4839 0460 6C696E65 		.ascii	"line\000"
 4839      00
 4840              	.LASF8:
 4841 0465 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 4841      4B5F5245 
 4841      43555253 
 4841      4956455F 
 4841      5400
 4842              	.LASF47:
 4843 0477 5F657272 		.ascii	"_errno\000"
 4843      6E6F00
 4844              	.LASF187:
 4845 047e 4144435F 		.ascii	"ADC_CGR\000"
 4845      43475200 
 4846              	.LASF208:
 4847 0486 504D435F 		.ascii	"PMC_SCSR\000"
 4847      53435352 
 4847      00
 4848              	.LASF68:
 4849 048f 5F736967 		.ascii	"_signal_buf\000"
 4849      6E616C5F 
 4849      62756600 
 4850              	.LASF270:
 4851 049b 74726970 		.ascii	"trip\000"
 4851      00
 4852              	.LASF178:
ARM GAS  /tmp/ccZvkXpi.s 			page 121


 4853 04a0 4144435F 		.ascii	"ADC_LCDR\000"
 4853      4C434452 
 4853      00
 4854              	.LASF259:
 4855 04a9 6374726C 		.ascii	"ctrlio_t\000"
 4855      696F5F74 
 4855      00
 4856              	.LASF128:
 4857 04b2 5744545F 		.ascii	"WDT_IRQn\000"
 4857      4952516E 
 4857      00
 4858              	.LASF275:
 4859 04bb 61726763 		.ascii	"argc\000"
 4859      00
 4860              	.LASF23:
 4861 04c0 5F426967 		.ascii	"_Bigint\000"
 4861      696E7400 
 4862              	.LASF20:
 4863 04c8 5F6D6178 		.ascii	"_maxwds\000"
 4863      77647300 
 4864              	.LASF276:
 4865 04d0 61726776 		.ascii	"argv\000"
 4865      00
 4866              	.LASF273:
 4867 04d5 75696E69 		.ascii	"uinit\000"
 4867      7400
 4868              	.LASF56:
 4869 04db 5F5F636C 		.ascii	"__cleanup\000"
 4869      65616E75 
 4869      7000
 4870              	.LASF118:
 4871 04e5 42757346 		.ascii	"BusFault_IRQn\000"
 4871      61756C74 
 4871      5F495251 
 4871      6E00
 4872              	.LASF236:
 4873 04f3 54435F43 		.ascii	"TC_CMR\000"
 4873      4D5200
 4874              	.LASF64:
 4875 04fa 5F617465 		.ascii	"_atexit0\000"
 4875      78697430 
 4875      00
 4876              	.LASF52:
 4877 0503 5F656D65 		.ascii	"_emergency\000"
 4877      7267656E 
 4877      637900
 4878              	.LASF5:
 4879 050e 6C6F6E67 		.ascii	"long long int\000"
 4879      206C6F6E 
 4879      6720696E 
 4879      7400
 4880              	.LASF42:
 4881 051c 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 4881      65786974 
 4881      5F617267 
 4881      735F7074 
 4881      7200
ARM GAS  /tmp/ccZvkXpi.s 			page 122


 4882              	.LASF89:
 4883 052e 5F6E696F 		.ascii	"_niobs\000"
 4883      627300
 4884              	.LASF141:
 4885 0535 54574931 		.ascii	"TWI1_IRQn\000"
 4885      5F495251 
 4885      6E00
 4886              	.LASF65:
 4887 053f 5F5F7367 		.ascii	"__sglue\000"
 4887      6C756500 
 4888              	.LASF218:
 4889 0547 504D435F 		.ascii	"PMC_PCK\000"
 4889      50434B00 
 4890              	.LASF288:
 4891 054f 6D61696E 		.ascii	"main.c\000"
 4891      2E6300
 4892              	.LASF120:
 4893 0556 53564361 		.ascii	"SVCall_IRQn\000"
 4893      6C6C5F49 
 4893      52516E00 
 4894              	.LASF57:
 4895 0562 5F67616D 		.ascii	"_gamma_signgam\000"
 4895      6D615F73 
 4895      69676E67 
 4895      616D00
 4896              	.LASF263:
 4897 0571 6374726C 		.ascii	"ctrlmode_t\000"
 4897      6D6F6465 
 4897      5F7400
 4898              	.LASF55:
 4899 057c 5F637572 		.ascii	"_current_locale\000"
 4899      72656E74 
 4899      5F6C6F63 
 4899      616C6500 
 4900              	.LASF100:
 4901 058c 5F667265 		.ascii	"_freelist\000"
 4901      656C6973 
 4901      7400
 4902              	.LASF90:
 4903 0596 5F696F62 		.ascii	"_iobs\000"
 4903      7300
 4904              	.LASF88:
 4905 059c 5F676C75 		.ascii	"_glue\000"
 4905      6500
 4906              	.LASF284:
 4907 05a2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4907      52784275 
 4907      66666572 
 4907      00
 4908              	.LASF21:
 4909 05af 5F736967 		.ascii	"_sign\000"
 4909      6E00
 4910              	.LASF267:
 4911 05b5 5F646478 		.ascii	"_ddx\000"
 4911      00
 4912              	.LASF262:
 4913 05ba 53544F50 		.ascii	"STOP\000"
ARM GAS  /tmp/ccZvkXpi.s 			page 123


 4913      00
 4914              	.LASF180:
 4915 05bf 4144435F 		.ascii	"ADC_IDR\000"
 4915      49445200 
 4916              	.LASF4:
 4917 05c7 756E7369 		.ascii	"unsigned int\000"
 4917      676E6564 
 4917      20696E74 
 4917      00
 4918              	.LASF148:
 4919 05d4 5443345F 		.ascii	"TC4_IRQn\000"
 4919      4952516E 
 4919      00
 4920              	.LASF140:
 4921 05dd 54574930 		.ascii	"TWI0_IRQn\000"
 4921      5F495251 
 4921      6E00
 4922              	.LASF257:
 4923 05e7 5744545F 		.ascii	"WDT_MR\000"
 4923      4D5200
 4924              	.LASF111:
 4925 05ee 5F776372 		.ascii	"_wcrtomb_state\000"
 4925      746F6D62 
 4925      5F737461 
 4925      746500
 4926              	.LASF28:
 4927 05fd 5F5F746D 		.ascii	"__tm_mday\000"
 4927      5F6D6461 
 4927      7900
 4928              	.LASF179:
 4929 0607 4144435F 		.ascii	"ADC_IER\000"
 4929      49455200 
 4930              	.LASF79:
 4931 060f 5F756275 		.ascii	"_ubuf\000"
 4931      6600
 4932              	.LASF50:
 4933 0615 5F737464 		.ascii	"_stderr\000"
 4933      65727200 
 4934              	.LASF104:
 4935 061d 5F776374 		.ascii	"_wctomb_state\000"
 4935      6F6D625F 
 4935      73746174 
 4935      6500
 4936              	.LASF84:
 4937 062b 5F6D6273 		.ascii	"_mbstate\000"
 4937      74617465 
 4937      00
 4938              	.LASF95:
 4939 0634 5F72616E 		.ascii	"_rand_next\000"
 4939      645F6E65 
 4939      787400
 4940              	.LASF70:
 4941 063f 5F666C61 		.ascii	"_flags\000"
 4941      677300
 4942              	.LASF39:
 4943 0646 5F617465 		.ascii	"_atexit\000"
 4943      78697400 
ARM GAS  /tmp/ccZvkXpi.s 			page 124


 4944              	.LASF13:
 4945 064e 5F5F636F 		.ascii	"__count\000"
 4945      756E7400 
 4946              	.LASF260:
 4947 0656 4E4F524D 		.ascii	"NORMAL\000"
 4947      414C00
 4948              	.LASF31:
 4949 065d 5F5F746D 		.ascii	"__tm_wday\000"
 4949      5F776461 
 4949      7900
 4950              	.LASF32:
 4951 0667 5F5F746D 		.ascii	"__tm_yday\000"
 4951      5F796461 
 4951      7900
 4952              	.LASF228:
 4953 0671 504D435F 		.ascii	"PMC_WPSR\000"
 4953      57505352 
 4953      00
 4954              	.LASF92:
 4955 067a 5F736565 		.ascii	"_seed\000"
 4955      6400
 4956              	.LASF77:
 4957 0680 5F736565 		.ascii	"_seek\000"
 4957      6B00
 4958              	.LASF132:
 4959 0686 55415254 		.ascii	"UART1_IRQn\000"
 4959      315F4952 
 4959      516E00
 4960              	.LASF9:
 4961 0691 5F66706F 		.ascii	"_fpos_t\000"
 4961      735F7400 
 4962              	.LASF12:
 4963 0699 5F5F7763 		.ascii	"__wchb\000"
 4963      686200
 4964              	.LASF201:
 4965 06a0 4144435F 		.ascii	"ADC_RNCR\000"
 4965      524E4352 
 4965      00
 4966              	.LASF105:
 4967 06a9 5F6D6274 		.ascii	"_mbtowc_state\000"
 4967      6F77635F 
 4967      73746174 
 4967      6500
 4968              	.LASF203:
 4969 06b7 4144435F 		.ascii	"ADC_TNCR\000"
 4969      544E4352 
 4969      00
 4970              	.LASF245:
 4971 06c0 54435F49 		.ascii	"TC_IMR\000"
 4971      4D5200
 4972              	.LASF6:
 4973 06c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4973      206C6F6E 
 4973      6720756E 
 4973      7369676E 
 4973      65642069 
 4974              	.LASF114:
ARM GAS  /tmp/ccZvkXpi.s 			page 125


 4975 06de 75696E74 		.ascii	"uint16_t\000"
 4975      31365F74 
 4975      00
 4976              	.LASF36:
 4977 06e7 5F64736F 		.ascii	"_dso_handle\000"
 4977      5F68616E 
 4977      646C6500 
 4978              	.LASF91:
 4979 06f3 5F72616E 		.ascii	"_rand48\000"
 4979      64343800 
 4980              	.LASF188:
 4981 06fb 4144435F 		.ascii	"ADC_COR\000"
 4981      434F5200 
 4982              	.LASF139:
 4983 0703 48534D43 		.ascii	"HSMCI_IRQn\000"
 4983      495F4952 
 4983      516E00
 4984              	.LASF49:
 4985 070e 5F737464 		.ascii	"_stdout\000"
 4985      6F757400 
 4986              	.LASF138:
 4987 0716 55534152 		.ascii	"USART1_IRQn\000"
 4987      54315F49 
 4987      52516E00 
 4988              	.LASF81:
 4989 0722 5F626C6B 		.ascii	"_blksize\000"
 4989      73697A65 
 4989      00
 4990              	.LASF44:
 4991 072b 5F626173 		.ascii	"_base\000"
 4991      6500
 4992              	.LASF278:
 4993 0731 5443315F 		.ascii	"TC1_IrqHandler\000"
 4993      49727148 
 4993      616E646C 
 4993      657200
 4994              	.LASF102:
 4995 0740 5F737472 		.ascii	"_strtok_last\000"
 4995      746F6B5F 
 4995      6C617374 
 4995      00
 4996              	.LASF150:
 4997 074d 4144435F 		.ascii	"ADC_IRQn\000"
 4997      4952516E 
 4997      00
 4998              	.LASF109:
 4999 0756 5F6D6272 		.ascii	"_mbrtowc_state\000"
 4999      746F7763 
 4999      5F737461 
 4999      746500
 5000              	.LASF199:
 5001 0765 4144435F 		.ascii	"ADC_TCR\000"
 5001      54435200 
 5002              	.LASF159:
 5003 076d 49434552 		.ascii	"ICER\000"
 5003      00
 5004              	.LASF16:
ARM GAS  /tmp/ccZvkXpi.s 			page 126


 5005 0772 5F666C6F 		.ascii	"_flock_t\000"
 5005      636B5F74 
 5005      00
 5006              	.LASF282:
 5007 077b 7463636C 		.ascii	"tcclks\000"
 5007      6B7300
 5008              	.LASF87:
 5009 0782 5F5F4649 		.ascii	"__FILE\000"
 5009      4C4500
 5010              	.LASF15:
 5011 0789 5F6D6273 		.ascii	"_mbstate_t\000"
 5011      74617465 
 5011      5F7400
 5012              	.LASF131:
 5013 0794 55415254 		.ascii	"UART0_IRQn\000"
 5013      305F4952 
 5013      516E00
 5014              	.LASF60:
 5015 079f 5F723438 		.ascii	"_r48\000"
 5015      00
 5016              	.LASF219:
 5017 07a4 504D435F 		.ascii	"PMC_IER\000"
 5017      49455200 
 5018              	.LASF10:
 5019 07ac 77696E74 		.ascii	"wint_t\000"
 5019      5F7400
 5020              	.LASF196:
 5021 07b3 4144435F 		.ascii	"ADC_RPR\000"
 5021      52505200 
 5022              	.LASF172:
 5023 07bb 4144435F 		.ascii	"ADC_SEQR1\000"
 5023      53455152 
 5023      3100
 5024              	.LASF173:
 5025 07c5 4144435F 		.ascii	"ADC_SEQR2\000"
 5025      53455152 
 5025      3200
 5026              	.LASF19:
 5027 07cf 5F6E6578 		.ascii	"_next\000"
 5027      7400
 5028              	.LASF73:
 5029 07d5 5F646174 		.ascii	"_data\000"
 5029      6100
 5030              	.LASF142:
 5031 07db 5350495F 		.ascii	"SPI_IRQn\000"
 5031      4952516E 
 5031      00
 5032              	.LASF292:
 5033 07e4 696E6974 		.ascii	"init\000"
 5033      00
 5034              	.LASF137:
 5035 07e9 55534152 		.ascii	"USART0_IRQn\000"
 5035      54305F49 
 5035      52516E00 
 5036              	.LASF177:
 5037 07f5 52657365 		.ascii	"Reserved1\000"
 5037      72766564 
ARM GAS  /tmp/ccZvkXpi.s 			page 127


 5037      3100
 5038              	.LASF183:
 5039 07ff 52657365 		.ascii	"Reserved2\000"
 5039      72766564 
 5039      3200
 5040              	.LASF190:
 5041 0809 52657365 		.ascii	"Reserved3\000"
 5041      72766564 
 5041      3300
 5042              	.LASF192:
 5043 0813 52657365 		.ascii	"Reserved4\000"
 5043      72766564 
 5043      3400
 5044              	.LASF195:
 5045 081d 52657365 		.ascii	"Reserved5\000"
 5045      72766564 
 5045      3500
 5046              	.LASF226:
 5047 0827 52657365 		.ascii	"Reserved6\000"
 5047      72766564 
 5047      3600
 5048              	.LASF144:
 5049 0831 5443305F 		.ascii	"TC0_IRQn\000"
 5049      4952516E 
 5049      00
 5050              	.LASF225:
 5051 083a 504D435F 		.ascii	"PMC_FOCR\000"
 5051      464F4352 
 5051      00
 5052              	.LASF135:
 5053 0843 50494F42 		.ascii	"PIOB_IRQn\000"
 5053      5F495251 
 5053      6E00
 5054              	.LASF238:
 5055 084d 54435F43 		.ascii	"TC_CV\000"
 5055      5600
 5056              	.LASF258:
 5057 0853 5744545F 		.ascii	"WDT_SR\000"
 5057      535200
 5058              	.LASF121:
 5059 085a 44656275 		.ascii	"DebugMonitor_IRQn\000"
 5059      674D6F6E 
 5059      69746F72 
 5059      5F495251 
 5059      6E00
 5060              	.LASF289:
 5061 086c 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 5061      652F6D6F 
 5061      2F646F63 
 5061      2F737475 
 5061      6469756D 
 5062              	.LASF251:
 5063 089b 54435F51 		.ascii	"TC_QIDR\000"
 5063      49445200 
 5064              	.LASF103:
 5065 08a3 5F6D626C 		.ascii	"_mblen_state\000"
 5065      656E5F73 
ARM GAS  /tmp/ccZvkXpi.s 			page 128


 5065      74617465 
 5065      00
 5066              	.LASF2:
 5067 08b0 73686F72 		.ascii	"short int\000"
 5067      7420696E 
 5067      7400
 5068              	.LASF265:
 5069 08ba 6D6F6465 		.ascii	"mode\000"
 5069      00
 5070              	.LASF250:
 5071 08bf 54435F51 		.ascii	"TC_QIER\000"
 5071      49455200 
 5072              	.LASF221:
 5073 08c7 504D435F 		.ascii	"PMC_SR\000"
 5073      535200
 5074              	.LASF184:
 5075 08ce 4144435F 		.ascii	"ADC_OVER\000"
 5075      4F564552 
 5075      00
 5076              	.LASF37:
 5077 08d7 5F666E74 		.ascii	"_fntypes\000"
 5077      79706573 
 5077      00
 5078              	.LASF134:
 5079 08e0 50494F41 		.ascii	"PIOA_IRQn\000"
 5079      5F495251 
 5079      6E00
 5080              	.LASF30:
 5081 08ea 5F5F746D 		.ascii	"__tm_year\000"
 5081      5F796561 
 5081      7200
 5082              	.LASF181:
 5083 08f4 4144435F 		.ascii	"ADC_IMR\000"
 5083      494D5200 
 5084              	.LASF170:
 5085 08fc 4144435F 		.ascii	"ADC_CR\000"
 5085      435200
 5086              	.LASF272:
 5087 0903 79696E69 		.ascii	"yinit\000"
 5087      7400
 5088              	.LASF213:
 5089 0909 434B4752 		.ascii	"CKGR_MCFR\000"
 5089      5F4D4346 
 5089      5200
 5090              	.LASF72:
 5091 0913 5F6C6266 		.ascii	"_lbfsize\000"
 5091      73697A65 
 5091      00
 5092              	.LASF51:
 5093 091c 5F696E63 		.ascii	"_inc\000"
 5093      00
 5094              	.LASF40:
 5095 0921 5F696E64 		.ascii	"_ind\000"
 5095      00
 5096              	.LASF204:
 5097 0926 4144435F 		.ascii	"ADC_PTCR\000"
 5097      50544352 
ARM GAS  /tmp/ccZvkXpi.s 			page 129


 5097      00
 5098              	.LASF255:
 5099 092f 54435F57 		.ascii	"TC_WPMR\000"
 5099      504D5200 
 5100              	.LASF43:
 5101 0937 5F5F7362 		.ascii	"__sbuf\000"
 5101      756600
 5102              	.LASF38:
 5103 093e 5F69735F 		.ascii	"_is_cxa\000"
 5103      63786100 
 5104              	.LASF287:
 5105 0946 474E5520 		.ascii	"GNU C 4.6.1\000"
 5105      4320342E 
 5105      362E3100 
 5106              	.LASF96:
 5107 0952 5F6D7072 		.ascii	"_mprec\000"
 5107      656300
 5108              	.LASF281:
 5109 0959 73746174 		.ascii	"status\000"
 5109      757300
 5110              	.LASF227:
 5111 0960 504D435F 		.ascii	"PMC_WPMR\000"
 5111      57504D52 
 5111      00
 5112              	.LASF67:
 5113 0969 5F6D6973 		.ascii	"_misc\000"
 5113      6300
 5114              	.LASF17:
 5115 096f 5F5F554C 		.ascii	"__ULong\000"
 5115      6F6E6700 
 5116              	.LASF143:
 5117 0977 5353435F 		.ascii	"SSC_IRQn\000"
 5117      4952516E 
 5117      00
 5118              	.LASF115:
 5119 0980 75696E74 		.ascii	"uint32_t\000"
 5119      33325F74 
 5119      00
 5120              	.LASF97:
 5121 0989 5F726573 		.ascii	"_result\000"
 5121      756C7400 
 5122              	.LASF191:
 5123 0991 4144435F 		.ascii	"ADC_ACR\000"
 5123      41435200 
 5124              	.LASF223:
 5125 0999 504D435F 		.ascii	"PMC_FSMR\000"
 5125      46534D52 
 5125      00
 5126              	.LASF175:
 5127 09a2 4144435F 		.ascii	"ADC_CHDR\000"
 5127      43484452 
 5127      00
 5128              	.LASF94:
 5129 09ab 5F616464 		.ascii	"_add\000"
 5129      00
 5130              	.LASF3:
 5131 09b0 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  /tmp/ccZvkXpi.s 			page 130


 5131      7420756E 
 5131      7369676E 
 5131      65642069 
 5131      6E7400
 5132              	.LASF193:
 5133 09c3 4144435F 		.ascii	"ADC_WPMR\000"
 5133      57504D52 
 5133      00
 5134              	.LASF27:
 5135 09cc 5F5F746D 		.ascii	"__tm_hour\000"
 5135      5F686F75 
 5135      7200
 5136              	.LASF122:
 5137 09d6 50656E64 		.ascii	"PendSV_IRQn\000"
 5137      53565F49 
 5137      52516E00 
 5138              	.LASF110:
 5139 09e2 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5139      72746F77 
 5139      63735F73 
 5139      74617465 
 5139      00
 5140              	.LASF248:
 5141 09f3 54435F42 		.ascii	"TC_BCR\000"
 5141      435200
 5142              	.LASF147:
 5143 09fa 5443335F 		.ascii	"TC3_IRQn\000"
 5143      4952516E 
 5143      00
 5144              	.LASF174:
 5145 0a03 4144435F 		.ascii	"ADC_CHER\000"
 5145      43484552 
 5145      00
 5146              	.LASF207:
 5147 0a0c 504D435F 		.ascii	"PMC_SCDR\000"
 5147      53434452 
 5147      00
 5148              	.LASF157:
 5149 0a15 49534552 		.ascii	"ISER\000"
 5149      00
 5150              	.LASF210:
 5151 0a1a 504D435F 		.ascii	"PMC_PCDR0\000"
 5151      50434452 
 5151      3000
 5152              	.LASF231:
 5153 0a24 504D435F 		.ascii	"PMC_PCDR1\000"
 5153      50434452 
 5153      3100
 5154              	.LASF35:
 5155 0a2e 5F666E61 		.ascii	"_fnargs\000"
 5155      72677300 
 5156              	.LASF186:
 5157 0a36 4144435F 		.ascii	"ADC_CWR\000"
 5157      43575200 
 5158              	.LASF33:
 5159 0a3e 5F5F746D 		.ascii	"__tm_isdst\000"
 5159      5F697364 
ARM GAS  /tmp/ccZvkXpi.s 			page 131


 5159      737400
 5160              	.LASF26:
 5161 0a49 5F5F746D 		.ascii	"__tm_min\000"
 5161      5F6D696E 
 5161      00
 5162              	.LASF107:
 5163 0a52 5F676574 		.ascii	"_getdate_err\000"
 5163      64617465 
 5163      5F657272 
 5163      00
 5164              	.LASF206:
 5165 0a5f 504D435F 		.ascii	"PMC_SCER\000"
 5165      53434552 
 5165      00
 5166              	.LASF232:
 5167 0a68 504D435F 		.ascii	"PMC_PCSR1\000"
 5167      50435352 
 5167      3100
 5168              	.LASF126:
 5169 0a72 5254435F 		.ascii	"RTC_IRQn\000"
 5169      4952516E 
 5169      00
 5170              	.LASF214:
 5171 0a7b 434B4752 		.ascii	"CKGR_PLLAR\000"
 5171      5F504C4C 
 5171      415200
 5172              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/ccZvkXpi.s 			page 132


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccZvkXpi.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/ccZvkXpi.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/ccZvkXpi.s:62     .bss:00000000 $d
     /tmp/ccZvkXpi.s:63     .bss:00000000 loops
     /tmp/ccZvkXpi.s:66     .data:00000000 $d
     /tmp/ccZvkXpi.s:69     .data:00000000 conf
     /tmp/ccZvkXpi.s:76     .rodata:00000000 $d
     /tmp/ccZvkXpi.s:77     .rodata:00000000 .LC0
     /tmp/ccZvkXpi.s:80     .rodata:00000018 .LC1
     /tmp/ccZvkXpi.s:83     .rodata:00000044 .LC2
     /tmp/ccZvkXpi.s:86     .rodata:00000048 .LC3
     /tmp/ccZvkXpi.s:89     .rodata:00000050 .LC4
     /tmp/ccZvkXpi.s:92     .rodata:00000058 .LC5
     /tmp/ccZvkXpi.s:95     .rodata:00000060 .LC6
     /tmp/ccZvkXpi.s:98     .rodata:00000068 .LC7
     /tmp/ccZvkXpi.s:101    .rodata:00000070 .LC8
     /tmp/ccZvkXpi.s:104    .rodata:00000074 .LC9
     /tmp/ccZvkXpi.s:107    .rodata:00000078 .LC10
     /tmp/ccZvkXpi.s:110    .rodata:0000007c .LC11
     /tmp/ccZvkXpi.s:113    .rodata:00000088 .LC12
     /tmp/ccZvkXpi.s:116    .rodata:00000090 .LC13
     /tmp/ccZvkXpi.s:119    .rodata:00000094 .LC14
     /tmp/ccZvkXpi.s:122    .rodata:000000a0 .LC15
     /tmp/ccZvkXpi.s:125    .rodata:000000a8 .LC16
     /tmp/ccZvkXpi.s:128    .rodata:000000b0 .LC17
     /tmp/ccZvkXpi.s:131    .text.main:00000000 $t
     /tmp/ccZvkXpi.s:136    .text.main:00000000 main
     /tmp/ccZvkXpi.s:898    .text.init:00000000 init
     /tmp/ccZvkXpi.s:226    .text.main:000000b0 $d
     /tmp/ccZvkXpi.s:241    .text.main:000000e4 $t
     /tmp/ccZvkXpi.s:685    .text.TC1_IrqHandler:00000000 $t
     /tmp/ccZvkXpi.s:690    .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/ccZvkXpi.s:765    .text.ADC_IrqHandler:00000000 $t
     /tmp/ccZvkXpi.s:770    .text.ADC_IrqHandler:00000000 ADC_IrqHandler
     /tmp/ccZvkXpi.s:894    .text.init:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_impure_ptr
fiprintf
USBC_isConfigured
LED_blink
setbuf
USBC_hasData
gets
siscanf
puts
strcmp
mode
iprintf
control
TC_FindMckDivisor
TC_Configure
TimeTick_Configure
ADC_Initialize
ARM GAS  /tmp/ccZvkXpi.s 			page 133


ADC_cfgFrequency
LEDs_configure
LED_clr
USBC_Configure
