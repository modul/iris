ARM GAS  /tmp/cctTTGYb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/cctTTGYb.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctTTGYb.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/cctTTGYb.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctTTGYb.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctTTGYb.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/cctTTGYb.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/cctTTGYb.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/cctTTGYb.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/cctTTGYb.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/cctTTGYb.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctTTGYb.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/cctTTGYb.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/cctTTGYb.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/cctTTGYb.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctTTGYb.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctTTGYb.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/cctTTGYb.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/cctTTGYb.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/cctTTGYb.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctTTGYb.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/cctTTGYb.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctTTGYb.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctTTGYb.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/cctTTGYb.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cctTTGYb.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cctTTGYb.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/cctTTGYb.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.section	.text.NVIC_SetPriority,"ax",%progbits
  62              		.align	2
  63              		.thumb
  64              		.thumb_func
  65              		.type	NVIC_SetPriority, %function
  66              	NVIC_SetPriority:
  67              	.LFB20:
1506:libchip/cmsis/core_cm3.h **** 
1507:libchip/cmsis/core_cm3.h **** /**
1508:libchip/cmsis/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:libchip/cmsis/core_cm3.h ****  *
1510:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:libchip/cmsis/core_cm3.h ****  *
1512:libchip/cmsis/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:libchip/cmsis/core_cm3.h ****  */
1515:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:libchip/cmsis/core_cm3.h **** {
1517:libchip/cmsis/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:libchip/cmsis/core_cm3.h **** }
1519:libchip/cmsis/core_cm3.h **** 
1520:libchip/cmsis/core_cm3.h **** /**
1521:libchip/cmsis/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:libchip/cmsis/core_cm3.h ****  *
1523:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:libchip/cmsis/core_cm3.h ****  *
1526:libchip/cmsis/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending,
1527:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0
1528:libchip/cmsis/core_cm3.h ****  */
1529:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/cctTTGYb.s 			page 29


1530:libchip/cmsis/core_cm3.h **** {
1531:libchip/cmsis/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:libchip/cmsis/core_cm3.h **** }
1533:libchip/cmsis/core_cm3.h **** 
1534:libchip/cmsis/core_cm3.h **** /**
1535:libchip/cmsis/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:libchip/cmsis/core_cm3.h ****  *
1537:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:libchip/cmsis/core_cm3.h ****  *
1539:libchip/cmsis/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:libchip/cmsis/core_cm3.h ****  */
1542:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:libchip/cmsis/core_cm3.h **** {
1544:libchip/cmsis/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:libchip/cmsis/core_cm3.h **** }
1546:libchip/cmsis/core_cm3.h **** 
1547:libchip/cmsis/core_cm3.h **** /**
1548:libchip/cmsis/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:libchip/cmsis/core_cm3.h ****  *
1550:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:libchip/cmsis/core_cm3.h ****  *
1552:libchip/cmsis/core_cm3.h ****  * Clear the pending bit for the specified interrupt.
1553:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:libchip/cmsis/core_cm3.h ****  */
1555:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:libchip/cmsis/core_cm3.h **** {
1557:libchip/cmsis/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:libchip/cmsis/core_cm3.h **** }
1559:libchip/cmsis/core_cm3.h **** 
1560:libchip/cmsis/core_cm3.h **** /**
1561:libchip/cmsis/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:libchip/cmsis/core_cm3.h ****  *
1563:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:libchip/cmsis/core_cm3.h ****  *
1566:libchip/cmsis/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active,
1567:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0.
1568:libchip/cmsis/core_cm3.h ****  */
1569:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:libchip/cmsis/core_cm3.h **** {
1571:libchip/cmsis/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:libchip/cmsis/core_cm3.h **** }
1573:libchip/cmsis/core_cm3.h **** 
1574:libchip/cmsis/core_cm3.h **** /**
1575:libchip/cmsis/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:libchip/cmsis/core_cm3.h ****  *
1577:libchip/cmsis/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:libchip/cmsis/core_cm3.h ****  * @param  priority  The priority to set
1579:libchip/cmsis/core_cm3.h ****  *
1580:libchip/cmsis/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt
1581:libchip/cmsis/core_cm3.h ****  * number can be positive to specify an external (device specific)
1582:libchip/cmsis/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:libchip/cmsis/core_cm3.h ****  *
1584:libchip/cmsis/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:libchip/cmsis/core_cm3.h ****  */
1586:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
ARM GAS  /tmp/cctTTGYb.s 			page 30


1587:libchip/cmsis/core_cm3.h **** {
  68              		.loc 1 1587 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI5:
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 3960     		str	r1, [r7, #0]
  85 000a FB71     		strb	r3, [r7, #7]
1588:libchip/cmsis/core_cm3.h ****   if(IRQn < 0) {
  86              		.loc 1 1588 0
  87 000c 97F90730 		ldrsb	r3, [r7, #7]
  88 0010 002B     		cmp	r3, #0
  89 0012 10DA     		bge	.L3
1589:libchip/cmsis/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  90              		.loc 1 1589 0
  91 0014 4FF46D43 		mov	r3, #60672
  92 0018 CEF20003 		movt	r3, 57344
  93 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  94 001e 02F00F02 		and	r2, r2, #15
  95 0022 A2F10401 		sub	r1, r2, #4
  96 0026 3A68     		ldr	r2, [r7, #0]
  97 0028 D2B2     		uxtb	r2, r2
  98 002a 4FEA0212 		lsl	r2, r2, #4
  99 002e D2B2     		uxtb	r2, r2
 100 0030 5B18     		adds	r3, r3, r1
 101 0032 1A76     		strb	r2, [r3, #24]
 102 0034 0DE0     		b	.L2
 103              	.L3:
1590:libchip/cmsis/core_cm3.h ****   else {
1591:libchip/cmsis/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 104              		.loc 1 1591 0
 105 0036 4FF46143 		mov	r3, #57600
 106 003a CEF20003 		movt	r3, 57344
 107 003e 97F90710 		ldrsb	r1, [r7, #7]
 108 0042 3A68     		ldr	r2, [r7, #0]
 109 0044 D2B2     		uxtb	r2, r2
 110 0046 4FEA0212 		lsl	r2, r2, #4
 111 004a D2B2     		uxtb	r2, r2
 112 004c 5B18     		adds	r3, r3, r1
 113 004e 83F80023 		strb	r2, [r3, #768]
 114              	.L2:
1592:libchip/cmsis/core_cm3.h **** }
 115              		.loc 1 1592 0
 116 0052 07F10C07 		add	r7, r7, #12
 117 0056 BD46     		mov	sp, r7
 118 0058 80BC     		pop	{r7}
ARM GAS  /tmp/cctTTGYb.s 			page 31


 119 005a 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE20:
 122              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 123              		.global	input
 124              		.bss
 125              		.align	2
 126              		.type	input, %object
 127              		.size	input, 4
 128              	input:
 129 0000 00000000 		.space	4
 130              		.global	_state
 131              		.data
 132              		.type	_state, %object
 133              		.size	_state, 1
 134              	_state:
 135 0000 01       		.byte	1
 136              		.global	loop
 137              		.bss
 138              		.align	2
 139              		.type	loop, %object
 140              		.size	loop, 44
 141              	loop:
 142 0004 00000000 		.space	44
 142      00000000 
 142      00000000 
 142      00000000 
 142      00000000 
 143              		.global	ntrip
 144              		.data
 145 0001 000000   		.align	2
 146              		.type	ntrip, %object
 147              		.size	ntrip, 16
 148              	ntrip:
 149 0004 14000000 		.word	loop+20
 150 0008 00000000 		.word	0
 151 000c 64000000 		.word	100
 152 0010 0A000000 		.word	10
 153              		.global	rtrip
 154              		.align	2
 155              		.type	rtrip, %object
 156              		.size	rtrip, 16
 157              	rtrip:
 158 0014 14000000 		.word	loop+20
 159 0018 00000000 		.word	0
 160 001c 0C000000 		.word	12
 161 0020 00000000 		.word	0
 162              		.global	releasetime
 163              		.align	2
 164              		.type	releasetime, %object
 165              		.size	releasetime, 4
 166              	releasetime:
 167 0024 E8030000 		.word	1000
 168              		.global	dxmax
 169              		.align	2
 170              		.type	dxmax, %object
 171              		.size	dxmax, 4
ARM GAS  /tmp/cctTTGYb.s 			page 32


 172              	dxmax:
 173 0028 00040000 		.word	1024
 174              		.section	.rodata
 175              		.align	2
 176              	.LC0:
 177 0000 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
 177      52756E6E 
 177      696E6720 
 177      61742025 
 177      69204D48 
 178 0017 00       		.align	2
 179              	.LC1:
 180 0018 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
 180      77616974 
 180      696E6720 
 180      756E7469 
 180      6C205553 
 181 0043 00       		.align	2
 182              	.LC2:
 183 0044 2D442D20 		.ascii	"-D- releasetime elapsed\012\000"
 183      72656C65 
 183      61736574 
 183      696D6520 
 183      656C6170 
 184              		.section	.text.main,"ax",%progbits
 185              		.align	2
 186              		.global	main
 187              		.thumb
 188              		.thumb_func
 189              		.type	main, %function
 190              	main:
 191              	.LFB35:
 192              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "board.h"
   3:main.c        **** #include "controller.h"
   4:main.c        **** 
   5:main.c        **** #define STOPPED  (1 << 0)
   6:main.c        **** #define RUN     (1 << 1)
   7:main.c        **** #define HOLD    (1 << 2)
   8:main.c        **** #define RELEASE (1 << 3)
   9:main.c        **** 
  10:main.c        **** #define MINv 0
  11:main.c        **** #define MAXv MAX
  12:main.c        **** 
  13:main.c        **** #define AIN0 0
  14:main.c        **** #define AIN1 1
  15:main.c        **** #define NUM_AIN 2
  16:main.c        **** 
  17:main.c        **** #define PWMOUT_up 0
  18:main.c        **** #define PWMOUT_down 1
  19:main.c        **** #define PWM_FREQ   20
  20:main.c        **** #define PWM_PERIOD 100
  21:main.c        **** 
  22:main.c        **** ctrlio_t input[NUM_AIN] = {0};
  23:main.c        **** uint8_t _state = STOPPED;
  24:main.c        **** 
ARM GAS  /tmp/cctTTGYb.s 			page 33


  25:main.c        **** struct ctrl loop = CTRL_INIT;	
  26:main.c        **** struct trip ntrip = {&loop._e, 0, 100, 10};
  27:main.c        **** struct trip rtrip = {&loop._e, 0, 12, 0};
  28:main.c        **** 
  29:main.c        **** uint32_t releasetime = 1000;
  30:main.c        **** uint32_t dxmax = 1024;
  31:main.c        **** 
  32:main.c        **** static void init();
  33:main.c        **** static void state(uint8_t new);
  34:main.c        **** static void cli();
  35:main.c        **** 
  36:main.c        **** int main() 
  37:main.c        **** {
 193              		.loc 2 37 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 8
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI6:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 14, -4
 201              		.cfi_offset 7, -8
 202 0002 82B0     		sub	sp, sp, #8
 203              	.LCFI7:
 204              		.cfi_def_cfa_offset 16
 205 0004 00AF     		add	r7, sp, #0
 206              	.LCFI8:
 207              		.cfi_def_cfa_register 7
  38:main.c        **** 	uint32_t timestamp = 0;
 208              		.loc 2 38 0
 209 0006 4FF00003 		mov	r3, #0
 210 000a 7B60     		str	r3, [r7, #4]
  39:main.c        **** 
  40:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 211              		.loc 2 40 0
 212 000c 40F20003 		movw	r3, #:lower16:_impure_ptr
 213 0010 C0F20003 		movt	r3, #:upper16:_impure_ptr
 214 0014 1B68     		ldr	r3, [r3, #0]
 215 0016 DB68     		ldr	r3, [r3, #12]
 216 0018 1846     		mov	r0, r3
 217 001a 40F20001 		movw	r1, #:lower16:.LC0
 218 001e C0F20001 		movt	r1, #:upper16:.LC0
 219 0022 4FF03002 		mov	r2, #48
 220 0026 FFF7FEFF 		bl	fiprintf
  41:main.c        **** 
  42:main.c        **** 	/* WDT off */
  43:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 221              		.loc 2 43 0
 222 002a 41F25043 		movw	r3, #5200
 223 002e C4F20E03 		movt	r3, 16398
 224 0032 4FF40042 		mov	r2, #32768
 225 0036 5A60     		str	r2, [r3, #4]
  44:main.c        **** 
  45:main.c        **** 	/* configure hardware */
  46:main.c        **** 	init();
 226              		.loc 2 46 0
 227 0038 FFF7FEFF 		bl	init
ARM GAS  /tmp/cctTTGYb.s 			page 34


  47:main.c        **** 	LED_blink(statusled, 5);
 228              		.loc 2 47 0
 229 003c 4FF00000 		mov	r0, #0
 230 0040 4FF00501 		mov	r1, #5
 231 0044 FFF7FEFF 		bl	LED_blink
  48:main.c        **** 
  49:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 232              		.loc 2 49 0
 233 0048 40F20003 		movw	r3, #:lower16:_impure_ptr
 234 004c C0F20003 		movt	r3, #:upper16:_impure_ptr
 235 0050 1B68     		ldr	r3, [r3, #0]
 236 0052 DB68     		ldr	r3, [r3, #12]
 237 0054 1846     		mov	r0, r3
 238 0056 40F20001 		movw	r1, #:lower16:.LC1
 239 005a C0F20001 		movt	r1, #:upper16:.LC1
 240 005e FFF7FEFF 		bl	fiprintf
  50:main.c        **** 	while (!USBC_isConfigured());
 241              		.loc 2 50 0
 242 0062 00BF     		nop
 243              	.L6:
 244              		.loc 2 50 0 is_stmt 0 discriminator 1
 245 0064 FFF7FEFF 		bl	USBC_isConfigured
 246 0068 0346     		mov	r3, r0
 247 006a 002B     		cmp	r3, #0
 248 006c FAD0     		beq	.L6
  51:main.c        **** 	setbuf(stdout, NULL);
 249              		.loc 2 51 0 is_stmt 1
 250 006e 40F20003 		movw	r3, #:lower16:_impure_ptr
 251 0072 C0F20003 		movt	r3, #:upper16:_impure_ptr
 252 0076 1B68     		ldr	r3, [r3, #0]
 253 0078 9B68     		ldr	r3, [r3, #8]
 254 007a 1846     		mov	r0, r3
 255 007c 4FF00001 		mov	r1, #0
 256 0080 FFF7FEFF 		bl	setbuf
  52:main.c        **** 
  53:main.c        **** 	loop.Kp = SCALE(3);
 257              		.loc 2 53 0
 258 0084 40F20003 		movw	r3, #:lower16:loop
 259 0088 C0F20003 		movt	r3, #:upper16:loop
 260 008c 4FF4C072 		mov	r2, #384
 261 0090 9A81     		strh	r2, [r3, #12]	@ movhi
  54:main.c        **** 	loop.Ki = SCALE(2);
 262              		.loc 2 54 0
 263 0092 40F20003 		movw	r3, #:lower16:loop
 264 0096 C0F20003 		movt	r3, #:upper16:loop
 265 009a 4FF48072 		mov	r2, #256
 266 009e DA81     		strh	r2, [r3, #14]	@ movhi
  55:main.c        **** 	loop.Kd = SCALE(0);
 267              		.loc 2 55 0
 268 00a0 40F20003 		movw	r3, #:lower16:loop
 269 00a4 C0F20003 		movt	r3, #:upper16:loop
 270 00a8 4FF00002 		mov	r2, #0
 271 00ac 1A82     		strh	r2, [r3, #16]	@ movhi
  56:main.c        **** 	loop.rSlope = 16;
 272              		.loc 2 56 0
 273 00ae 40F20003 		movw	r3, #:lower16:loop
 274 00b2 C0F20003 		movt	r3, #:upper16:loop
ARM GAS  /tmp/cctTTGYb.s 			page 35


 275 00b6 4FF01002 		mov	r2, #16
 276 00ba 9A60     		str	r2, [r3, #8]
  57:main.c        **** 	loop.rSP = MAXv;
 277              		.loc 2 57 0
 278 00bc 40F20003 		movw	r3, #:lower16:loop
 279 00c0 C0F20003 		movt	r3, #:upper16:loop
 280 00c4 40F6FF72 		movw	r2, #4095
 281 00c8 9A80     		strh	r2, [r3, #4]	@ movhi
  58:main.c        **** 	loop.tristate = &rtrip;
 282              		.loc 2 58 0
 283 00ca 40F20003 		movw	r3, #:lower16:loop
 284 00ce C0F20003 		movt	r3, #:upper16:loop
 285 00d2 40F20002 		movw	r2, #:lower16:rtrip
 286 00d6 C0F20002 		movt	r2, #:upper16:rtrip
 287 00da 9A62     		str	r2, [r3, #40]
  59:main.c        **** 	state(STOP);
 288              		.loc 2 59 0
 289 00dc 4FF00300 		mov	r0, #3
 290 00e0 FFF7FEFF 		bl	state
 291              	.L21:
  60:main.c        **** 
  61:main.c        **** 	while (1) {
  62:main.c        **** 		cli();
 292              		.loc 2 62 0
 293 00e4 FFF7FEFF 		bl	cli
  63:main.c        **** 		switch (_state) {
 294              		.loc 2 63 0
 295 00e8 40F20003 		movw	r3, #:lower16:_state
 296 00ec C0F20003 		movt	r3, #:upper16:_state
 297 00f0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 298 00f2 03F1FF33 		add	r3, r3, #-1
 299 00f6 072B     		cmp	r3, #7
 300 00f8 00F2AF80 		bhi	.L7
 301 00fc 01A1     		adr	r1, .L12
 302 00fe 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 303 0102 00BF     		.align	2
 304              	.L12:
 305 0104 65020000 		.word	.L22+1
 306 0108 DB010000 		.word	.L9+1
 307 010c 5B020000 		.word	.L7+1
 308 0110 25010000 		.word	.L10+1
 309 0114 5B020000 		.word	.L7+1
 310 0118 5B020000 		.word	.L7+1
 311 011c 5B020000 		.word	.L7+1
 312 0120 59010000 		.word	.L11+1
 313              	.L10:
  64:main.c        **** 			case STOPPED:
  65:main.c        **** 				break;
  66:main.c        **** 
  67:main.c        **** 			case HOLD:
  68:main.c        **** 				if (GetTickCount() % 1000)
 314              		.loc 2 68 0
 315 0124 FFF7FEFF 		bl	GetTickCount
 316 0128 0246     		mov	r2, r0
 317 012a 44F6D353 		movw	r3, #19923
 318 012e C1F26203 		movt	r3, 4194
 319 0132 A3FB0213 		umull	r1, r3, r3, r2
ARM GAS  /tmp/cctTTGYb.s 			page 36


 320 0136 4FEA9313 		lsr	r3, r3, #6
 321 013a 4FF47A71 		mov	r1, #1000
 322 013e 01FB03F3 		mul	r3, r1, r3
 323 0142 D31A     		subs	r3, r2, r3
 324 0144 002B     		cmp	r3, #0
 325 0146 00F08F80 		beq	.L23
  69:main.c        **** 					LED_blink(statusled, 1);
 326              		.loc 2 69 0
 327 014a 4FF00000 		mov	r0, #0
 328 014e 4FF00101 		mov	r1, #1
 329 0152 FFF7FEFF 		bl	LED_blink
  70:main.c        **** 				break;
 330              		.loc 2 70 0
 331 0156 87E0     		b	.L23
 332              	.L11:
  71:main.c        **** 
  72:main.c        **** 			case RELEASE:
  73:main.c        **** 				if (GetTickCount() % 1000)
 333              		.loc 2 73 0
 334 0158 FFF7FEFF 		bl	GetTickCount
 335 015c 0246     		mov	r2, r0
 336 015e 44F6D353 		movw	r3, #19923
 337 0162 C1F26203 		movt	r3, 4194
 338 0166 A3FB0213 		umull	r1, r3, r3, r2
 339 016a 4FEA9313 		lsr	r3, r3, #6
 340 016e 4FF47A71 		mov	r1, #1000
 341 0172 01FB03F3 		mul	r3, r1, r3
 342 0176 D31A     		subs	r3, r2, r3
 343 0178 002B     		cmp	r3, #0
 344 017a 05D0     		beq	.L15
  74:main.c        **** 					LED_blink(statusled, 2);
 345              		.loc 2 74 0
 346 017c 4FF00000 		mov	r0, #0
 347 0180 4FF00201 		mov	r1, #2
 348 0184 FFF7FEFF 		bl	LED_blink
 349              	.L15:
  75:main.c        **** 
  76:main.c        **** 				if (timestamp == 0)
 350              		.loc 2 76 0
 351 0188 7B68     		ldr	r3, [r7, #4]
 352 018a 002B     		cmp	r3, #0
 353 018c 0AD1     		bne	.L16
  77:main.c        **** 					timestamp = GetTickCount() + releasetime;
 354              		.loc 2 77 0
 355 018e FFF7FEFF 		bl	GetTickCount
 356 0192 0246     		mov	r2, r0
 357 0194 40F20003 		movw	r3, #:lower16:releasetime
 358 0198 C0F20003 		movt	r3, #:upper16:releasetime
 359 019c 1B68     		ldr	r3, [r3, #0]
 360 019e D318     		adds	r3, r2, r3
 361 01a0 7B60     		str	r3, [r7, #4]
  78:main.c        **** 				else if (GetTickCount() >= timestamp) {
  79:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
  80:main.c        **** 					timestamp = 0;
  81:main.c        **** 					state(STOPPED);
  82:main.c        **** 				}
  83:main.c        **** 				break;
ARM GAS  /tmp/cctTTGYb.s 			page 37


 362              		.loc 2 83 0
 363 01a2 63E0     		b	.L24
 364              	.L16:
  78:main.c        **** 				else if (GetTickCount() >= timestamp) {
 365              		.loc 2 78 0
 366 01a4 FFF7FEFF 		bl	GetTickCount
 367 01a8 0246     		mov	r2, r0
 368 01aa 7B68     		ldr	r3, [r7, #4]
 369 01ac 9A42     		cmp	r2, r3
 370 01ae 5DD3     		bcc	.L24
  79:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
 371              		.loc 2 79 0
 372 01b0 40F20003 		movw	r3, #:lower16:_impure_ptr
 373 01b4 C0F20003 		movt	r3, #:upper16:_impure_ptr
 374 01b8 1B68     		ldr	r3, [r3, #0]
 375 01ba DB68     		ldr	r3, [r3, #12]
 376 01bc 1846     		mov	r0, r3
 377 01be 40F20001 		movw	r1, #:lower16:.LC2
 378 01c2 C0F20001 		movt	r1, #:upper16:.LC2
 379 01c6 FFF7FEFF 		bl	fiprintf
  80:main.c        **** 					timestamp = 0;
 380              		.loc 2 80 0
 381 01ca 4FF00003 		mov	r3, #0
 382 01ce 7B60     		str	r3, [r7, #4]
  81:main.c        **** 					state(STOPPED);
 383              		.loc 2 81 0
 384 01d0 4FF00100 		mov	r0, #1
 385 01d4 FFF7FEFF 		bl	state
 386              		.loc 2 83 0
 387 01d8 48E0     		b	.L24
 388              	.L9:
  84:main.c        **** 
  85:main.c        **** 			case RUN:
  86:main.c        **** 				if (GetTickCount() % 1000)
 389              		.loc 2 86 0
 390 01da FFF7FEFF 		bl	GetTickCount
 391 01de 0246     		mov	r2, r0
 392 01e0 44F6D353 		movw	r3, #19923
 393 01e4 C1F26203 		movt	r3, 4194
 394 01e8 A3FB0213 		umull	r1, r3, r3, r2
 395 01ec 4FEA9313 		lsr	r3, r3, #6
 396 01f0 4FF47A71 		mov	r1, #1000
 397 01f4 01FB03F3 		mul	r3, r1, r3
 398 01f8 D31A     		subs	r3, r2, r3
 399 01fa 002B     		cmp	r3, #0
 400 01fc 05D0     		beq	.L18
  87:main.c        **** 					LED_blink(statusled, 3);
 401              		.loc 2 87 0
 402 01fe 4FF00000 		mov	r0, #0
 403 0202 4FF00301 		mov	r1, #3
 404 0206 FFF7FEFF 		bl	LED_blink
 405              	.L18:
  88:main.c        **** 				if (   loop._dx > dxmax \
 406              		.loc 2 88 0
 407 020a 40F20003 		movw	r3, #:lower16:loop
 408 020e C0F20003 		movt	r3, #:upper16:loop
 409 0212 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/cctTTGYb.s 			page 38


 410 0214 1A46     		mov	r2, r3
 411 0216 40F20003 		movw	r3, #:lower16:dxmax
 412 021a C0F20003 		movt	r3, #:upper16:dxmax
 413 021e 1B68     		ldr	r3, [r3, #0]
 414 0220 9A42     		cmp	r2, r3
 415 0222 15D8     		bhi	.L19
  89:main.c        **** 				    || loop._dx < -dxmax \
 416              		.loc 2 89 0
 417 0224 40F20003 		movw	r3, #:lower16:loop
 418 0228 C0F20003 		movt	r3, #:upper16:loop
 419 022c 9B69     		ldr	r3, [r3, #24]
 420 022e 1A46     		mov	r2, r3
 421 0230 40F20003 		movw	r3, #:lower16:dxmax
 422 0234 C0F20003 		movt	r3, #:upper16:dxmax
 423 0238 1B68     		ldr	r3, [r3, #0]
 424 023a C3F10003 		rsb	r3, r3, #0
 425 023e 9A42     		cmp	r2, r3
 426 0240 06D3     		bcc	.L19
  90:main.c        **** 					|| loop.mode == NORMAL) // ramp finished
 427              		.loc 2 90 0
 428 0242 40F20003 		movw	r3, #:lower16:loop
 429 0246 C0F20003 		movt	r3, #:upper16:loop
 430 024a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 431 024c 012B     		cmp	r3, #1
 432 024e 0FD1     		bne	.L25
 433              	.L19:
  91:main.c        **** 					state(RELEASE);
 434              		.loc 2 91 0
 435 0250 4FF00800 		mov	r0, #8
 436 0254 FFF7FEFF 		bl	state
  92:main.c        **** 				break;
 437              		.loc 2 92 0
 438 0258 0AE0     		b	.L25
 439              	.L7:
  93:main.c        **** 
  94:main.c        **** 			default:
  95:main.c        **** 				state(STOPPED);
 440              		.loc 2 95 0
 441 025a 4FF00100 		mov	r0, #1
 442 025e FFF7FEFF 		bl	state
  96:main.c        **** 		}
  97:main.c        **** 	}
 443              		.loc 2 97 0
 444 0262 3FE7     		b	.L21
 445              	.L22:
  65:main.c        **** 				break;
 446              		.loc 2 65 0
 447 0264 00BF     		nop
 448 0266 04E0     		b	.L13
 449              	.L23:
  70:main.c        **** 				break;
 450              		.loc 2 70 0
 451 0268 00BF     		nop
 452 026a 02E0     		b	.L13
 453              	.L24:
  83:main.c        **** 				break;
 454              		.loc 2 83 0
ARM GAS  /tmp/cctTTGYb.s 			page 39


 455 026c 00BF     		nop
 456 026e 00E0     		b	.L13
 457              	.L25:
  92:main.c        **** 				break;
 458              		.loc 2 92 0
 459 0270 00BF     		nop
 460              	.L13:
 461              		.loc 2 97 0
 462 0272 37E7     		b	.L21
 463              		.cfi_endproc
 464              	.LFE35:
 465              		.size	main, .-main
 466              		.section	.text.TC1_IrqHandler,"ax",%progbits
 467              		.align	2
 468              		.global	TC1_IrqHandler
 469              		.thumb
 470              		.thumb_func
 471              		.type	TC1_IrqHandler, %function
 472              	TC1_IrqHandler:
 473              	.LFB36:
  98:main.c        **** 	return 0;
  99:main.c        **** }
 100:main.c        **** 
 101:main.c        **** void TC1_IrqHandler()
 102:main.c        **** {
 474              		.loc 2 102 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 1, uses_anonymous_args = 0
 478 0000 80B5     		push	{r7, lr}
 479              	.LCFI9:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 14, -4
 482              		.cfi_offset 7, -8
 483 0002 00AF     		add	r7, sp, #0
 484              	.LCFI10:
 485              		.cfi_def_cfa_register 7
 103:main.c        **** 	ADC_StartConversion(ADC);
 486              		.loc 2 103 0
 487 0004 4FF40043 		mov	r3, #32768
 488 0008 C4F20303 		movt	r3, 16387
 489 000c 4FF00202 		mov	r2, #2
 490 0010 1A60     		str	r2, [r3, #0]
 104:main.c        **** 	ADC_ReadBuffer(ADC, (int16_t*) input, NUM_AIN);
 491              		.loc 2 104 0
 492 0012 4FF40040 		mov	r0, #32768
 493 0016 C4F20300 		movt	r0, 16387
 494 001a 40F20001 		movw	r1, #:lower16:input
 495 001e C0F20001 		movt	r1, #:upper16:input
 496 0022 4FF00202 		mov	r2, #2
 497 0026 FFF7FEFF 		bl	ADC_ReadBuffer
 105:main.c        **** }
 498              		.loc 2 105 0
 499 002a 80BD     		pop	{r7, pc}
 500              		.cfi_endproc
 501              	.LFE36:
 502              		.size	TC1_IrqHandler, .-TC1_IrqHandler
ARM GAS  /tmp/cctTTGYb.s 			page 40


 503              		.section	.text.ADC_IrqHandler,"ax",%progbits
 504              		.align	2
 505              		.global	ADC_IrqHandler
 506              		.thumb
 507              		.thumb_func
 508              		.type	ADC_IrqHandler, %function
 509              	ADC_IrqHandler:
 510              	.LFB37:
 106:main.c        **** 
 107:main.c        **** void ADC_IrqHandler(void)
 108:main.c        **** {
 511              		.loc 2 108 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 8
 514              		@ frame_needed = 1, uses_anonymous_args = 0
 515 0000 80B5     		push	{r7, lr}
 516              	.LCFI11:
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 14, -4
 519              		.cfi_offset 7, -8
 520 0002 82B0     		sub	sp, sp, #8
 521              	.LCFI12:
 522              		.cfi_def_cfa_offset 16
 523 0004 00AF     		add	r7, sp, #0
 524              	.LCFI13:
 525              		.cfi_def_cfa_register 7
 109:main.c        **** 	//TODO enable TAG option and check
 110:main.c        ****     uint32_t status;
 111:main.c        **** 	uint32_t duty = 0;
 526              		.loc 2 111 0
 527 0006 4FF00003 		mov	r3, #0
 528 000a 7B60     		str	r3, [r7, #4]
 112:main.c        **** 
 113:main.c        ****     status = ADC_GetStatus(ADC);
 529              		.loc 2 113 0
 530 000c 4FF40043 		mov	r3, #32768
 531 0010 C4F20303 		movt	r3, 16387
 532 0014 1B6B     		ldr	r3, [r3, #48]
 533 0016 3B60     		str	r3, [r7, #0]
 114:main.c        **** 
 115:main.c        **** 	if ((status & ADC_ISR_RXBUFF) == ADC_ISR_RXBUFF) {
 534              		.loc 2 115 0
 535 0018 3B68     		ldr	r3, [r7, #0]
 536 001a 03F08053 		and	r3, r3, #268435456
 537 001e 002B     		cmp	r3, #0
 538 0020 00F08B80 		beq	.L27
 116:main.c        **** 		if (_state & (RUN|HOLD)) {
 539              		.loc 2 116 0
 540 0024 40F20003 		movw	r3, #:lower16:_state
 541 0028 C0F20003 		movt	r3, #:upper16:_state
 542 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 543 002e 03F00603 		and	r3, r3, #6
 544 0032 002B     		cmp	r3, #0
 545 0034 00F08180 		beq	.L27
 117:main.c        **** 			control(LIMIT(input[AIN0], MINv, MAXv), &loop);
 546              		.loc 2 117 0
 547 0038 40F20003 		movw	r3, #:lower16:input
ARM GAS  /tmp/cctTTGYb.s 			page 41


 548 003c C0F20003 		movt	r3, #:upper16:input
 549 0040 1A88     		ldrh	r2, [r3, #0]
 550 0042 40F6FF73 		movw	r3, #4095
 551 0046 9A42     		cmp	r2, r3
 552 0048 38BF     		it	cc
 553 004a 1346     		movcc	r3, r2
 554 004c 9BB2     		uxth	r3, r3
 555 004e 1846     		mov	r0, r3
 556 0050 40F20001 		movw	r1, #:lower16:loop
 557 0054 C0F20001 		movt	r1, #:upper16:loop
 558 0058 FFF7FEFF 		bl	control
 118:main.c        **** 			duty = loop.tristate->output * ((loop.output * PWM_PERIOD) / MAX);
 559              		.loc 2 118 0
 560 005c 40F20003 		movw	r3, #:lower16:loop
 561 0060 C0F20003 		movt	r3, #:upper16:loop
 562 0064 9B6A     		ldr	r3, [r3, #40]
 563 0066 5968     		ldr	r1, [r3, #4]
 564 0068 40F20003 		movw	r3, #:lower16:loop
 565 006c C0F20003 		movt	r3, #:upper16:loop
 566 0070 DB8C     		ldrh	r3, [r3, #38]
 567 0072 1BB2     		sxth	r3, r3
 568 0074 4FF06402 		mov	r2, #100
 569 0078 02FB03F3 		mul	r3, r2, r3
 570 007c 03F57E62 		add	r2, r3, #4064
 571 0080 02F11F02 		add	r2, r2, #31
 572 0084 002B     		cmp	r3, #0
 573 0086 B8BF     		it	lt
 574 0088 1346     		movlt	r3, r2
 575 008a 4FEA2333 		asr	r3, r3, #12
 576 008e 03F1FF33 		add	r3, r3, #-1
 577 0092 03FB01F3 		mul	r3, r3, r1
 578 0096 7B60     		str	r3, [r7, #4]
 119:main.c        **** 			if (loop.tristate->output == 1) {
 579              		.loc 2 119 0
 580 0098 40F20003 		movw	r3, #:lower16:loop
 581 009c C0F20003 		movt	r3, #:upper16:loop
 582 00a0 9B6A     		ldr	r3, [r3, #40]
 583 00a2 5B68     		ldr	r3, [r3, #4]
 584 00a4 012B     		cmp	r3, #1
 585 00a6 15D1     		bne	.L29
 120:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 586              		.loc 2 120 0
 587 00a8 4FF00000 		mov	r0, #0
 588 00ac C4F20200 		movt	r0, 16386
 589 00b0 4FF00001 		mov	r1, #0
 590 00b4 4FF00002 		mov	r2, #0
 591 00b8 FFF7FEFF 		bl	PWMC_SetDutyCycle
 121:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_down, duty);
 592              		.loc 2 121 0
 593 00bc 7B68     		ldr	r3, [r7, #4]
 594 00be 9BB2     		uxth	r3, r3
 595 00c0 4FF00000 		mov	r0, #0
 596 00c4 C4F20200 		movt	r0, 16386
 597 00c8 4FF00101 		mov	r1, #1
 598 00cc 1A46     		mov	r2, r3
 599 00ce FFF7FEFF 		bl	PWMC_SetDutyCycle
 600 00d2 32E0     		b	.L27
ARM GAS  /tmp/cctTTGYb.s 			page 42


 601              	.L29:
 122:main.c        **** 			}
 123:main.c        **** 			else if (loop.tristate->output == -1) {
 602              		.loc 2 123 0
 603 00d4 40F20003 		movw	r3, #:lower16:loop
 604 00d8 C0F20003 		movt	r3, #:upper16:loop
 605 00dc 9B6A     		ldr	r3, [r3, #40]
 606 00de 5B68     		ldr	r3, [r3, #4]
 607 00e0 B3F1FF3F 		cmp	r3, #-1
 608 00e4 15D1     		bne	.L30
 124:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_up, duty);
 609              		.loc 2 124 0
 610 00e6 7B68     		ldr	r3, [r7, #4]
 611 00e8 9BB2     		uxth	r3, r3
 612 00ea 4FF00000 		mov	r0, #0
 613 00ee C4F20200 		movt	r0, 16386
 614 00f2 4FF00001 		mov	r1, #0
 615 00f6 1A46     		mov	r2, r3
 616 00f8 FFF7FEFF 		bl	PWMC_SetDutyCycle
 125:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 617              		.loc 2 125 0
 618 00fc 4FF00000 		mov	r0, #0
 619 0100 C4F20200 		movt	r0, 16386
 620 0104 4FF00101 		mov	r1, #1
 621 0108 4FF00002 		mov	r2, #0
 622 010c FFF7FEFF 		bl	PWMC_SetDutyCycle
 623 0110 13E0     		b	.L27
 624              	.L30:
 126:main.c        **** 			}
 127:main.c        **** 			else {
 128:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 625              		.loc 2 128 0
 626 0112 4FF00000 		mov	r0, #0
 627 0116 C4F20200 		movt	r0, 16386
 628 011a 4FF00001 		mov	r1, #0
 629 011e 4FF00002 		mov	r2, #0
 630 0122 FFF7FEFF 		bl	PWMC_SetDutyCycle
 129:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 631              		.loc 2 129 0
 632 0126 4FF00000 		mov	r0, #0
 633 012a C4F20200 		movt	r0, 16386
 634 012e 4FF00101 		mov	r1, #1
 635 0132 4FF00002 		mov	r2, #0
 636 0136 FFF7FEFF 		bl	PWMC_SetDutyCycle
 637              	.L27:
 130:main.c        **** 			}
 131:main.c        **** 		}
 132:main.c        **** 	}
 133:main.c        **** }
 638              		.loc 2 133 0
 639 013a 07F10807 		add	r7, r7, #8
 640 013e BD46     		mov	sp, r7
 641 0140 80BD     		pop	{r7, pc}
 642              		.cfi_endproc
 643              	.LFE37:
 644              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 645 0142 00BF     		.section	.text.init,"ax",%progbits
ARM GAS  /tmp/cctTTGYb.s 			page 43


 646              		.align	2
 647              		.thumb
 648              		.thumb_func
 649              		.type	init, %function
 650              	init:
 651              	.LFB38:
 134:main.c        **** 
 135:main.c        **** static void init()
 136:main.c        **** {
 652              		.loc 2 136 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 8
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 90B5     		push	{r4, r7, lr}
 657              	.LCFI14:
 658              		.cfi_def_cfa_offset 12
 659              		.cfi_offset 14, -4
 660              		.cfi_offset 7, -8
 661              		.cfi_offset 4, -12
 662 0002 89B0     		sub	sp, sp, #36
 663              	.LCFI15:
 664              		.cfi_def_cfa_offset 48
 665 0004 06AF     		add	r7, sp, #24
 666              	.LCFI16:
 667              		.cfi_def_cfa 7, 24
 137:main.c        ****     uint32_t div;
 138:main.c        ****     uint32_t tcclks;
 139:main.c        **** 
 140:main.c        **** 	//TODO PIO Configure 
 141:main.c        **** 
 142:main.c        ****     /* Enable peripheral clocks */
 143:main.c        ****     PMC_EnablePeripheral(ID_TC1);
 668              		.loc 2 143 0
 669 0006 4FF01800 		mov	r0, #24
 670 000a FFF7FEFF 		bl	PMC_EnablePeripheral
 144:main.c        ****     PMC_EnablePeripheral(ID_ADC);
 671              		.loc 2 144 0
 672 000e 4FF01D00 		mov	r0, #29
 673 0012 FFF7FEFF 		bl	PMC_EnablePeripheral
 145:main.c        ****     PMC_EnablePeripheral(ID_PWM);
 674              		.loc 2 145 0
 675 0016 4FF01F00 		mov	r0, #31
 676 001a FFF7FEFF 		bl	PMC_EnablePeripheral
 146:main.c        **** 
 147:main.c        ****     /* Configure TC */
 148:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 677              		.loc 2 148 0
 678 001e 07F10402 		add	r2, r7, #4
 679 0022 3C46     		mov	r4, r7
 680 0024 4FF4D843 		mov	r3, #27648
 681 0028 C0F2DC23 		movt	r3, 732
 682 002c 0093     		str	r3, [sp, #0]
 683 002e 4FF00400 		mov	r0, #4
 684 0032 4FF4D841 		mov	r1, #27648
 685 0036 C0F2DC21 		movt	r1, 732
 686 003a 2346     		mov	r3, r4
 687 003c FFF7FEFF 		bl	TC_FindMckDivisor
ARM GAS  /tmp/cctTTGYb.s 			page 44


 149:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 688              		.loc 2 149 0
 689 0040 3B68     		ldr	r3, [r7, #0]
 690 0042 43F48043 		orr	r3, r3, #16384
 691 0046 4FF48040 		mov	r0, #16384
 692 004a C4F20100 		movt	r0, 16385
 693 004e 4FF00001 		mov	r1, #0
 694 0052 1A46     		mov	r2, r3
 695 0054 FFF7FEFF 		bl	TC_Configure
 150:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
 696              		.loc 2 150 0
 697 0058 4FF48043 		mov	r3, #16384
 698 005c C4F20103 		movt	r3, 16385
 699 0060 7968     		ldr	r1, [r7, #4]
 700 0062 4FF4D852 		mov	r2, #6912
 701 0066 C0F2B702 		movt	r2, 183
 702 006a B2FBF1F2 		udiv	r2, r2, r1
 703 006e DA61     		str	r2, [r3, #28]
 151:main.c        **** 	TC_Start(TC1, 0);
 704              		.loc 2 151 0
 705 0070 4FF48040 		mov	r0, #16384
 706 0074 C4F20100 		movt	r0, 16385
 707 0078 4FF00001 		mov	r1, #0
 708 007c FFF7FEFF 		bl	TC_Start
 152:main.c        **** 
 153:main.c        ****     NVIC_EnableIRQ(TC1_IRQn);
 709              		.loc 2 153 0
 710 0080 4FF01800 		mov	r0, #24
 711 0084 FFF7FEFF 		bl	NVIC_EnableIRQ
 154:main.c        ****     NVIC_SetPriority(TC1_IRQn, 1);
 712              		.loc 2 154 0
 713 0088 4FF01800 		mov	r0, #24
 714 008c 4FF00101 		mov	r1, #1
 715 0090 FFF7FEFF 		bl	NVIC_SetPriority
 155:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 716              		.loc 2 155 0
 717 0094 4FF48043 		mov	r3, #16384
 718 0098 C4F20103 		movt	r3, 16385
 719 009c 4FF01002 		mov	r2, #16
 720 00a0 5A62     		str	r2, [r3, #36]
 156:main.c        **** 
 157:main.c        ****     /* Initialize ADC */
 158:main.c        ****     ADC_Initialize(ADC, ID_ADC);
 721              		.loc 2 158 0
 722 00a2 4FF40040 		mov	r0, #32768
 723 00a6 C4F20300 		movt	r0, 16387
 724 00aa 4FF01D01 		mov	r1, #29
 725 00ae FFF7FEFF 		bl	ADC_Initialize
 159:main.c        ****     ADC_cfgFrequency(ADC, 15, 4 ); // startup = 15, prescal = 4, ADC clock = 6.4 MHz
 726              		.loc 2 159 0
 727 00b2 4FF40040 		mov	r0, #32768
 728 00b6 C4F20300 		movt	r0, 16387
 729 00ba 4FF00F01 		mov	r1, #15
 730 00be 4FF00402 		mov	r2, #4
 731 00c2 FFF7FEFF 		bl	ADC_cfgFrequency
 160:main.c        **** 
 161:main.c        ****     ADC_EnableChannel(ADC, AIN0);
ARM GAS  /tmp/cctTTGYb.s 			page 45


 732              		.loc 2 161 0
 733 00c6 4FF40043 		mov	r3, #32768
 734 00ca C4F20303 		movt	r3, 16387
 735 00ce 4FF00102 		mov	r2, #1
 736 00d2 1A61     		str	r2, [r3, #16]
 162:main.c        ****     ADC_EnableChannel(ADC, AIN1);
 737              		.loc 2 162 0
 738 00d4 4FF40043 		mov	r3, #32768
 739 00d8 C4F20303 		movt	r3, 16387
 740 00dc 4FF00202 		mov	r2, #2
 741 00e0 1A61     		str	r2, [r3, #16]
 163:main.c        **** 	ADC_StartConversion(ADC);
 742              		.loc 2 163 0
 743 00e2 4FF40043 		mov	r3, #32768
 744 00e6 C4F20303 		movt	r3, 16387
 745 00ea 4FF00202 		mov	r2, #2
 746 00ee 1A60     		str	r2, [r3, #0]
 164:main.c        ****     ADC_ReadBuffer(ADC, (int16_t*) input, NUM_AIN);
 747              		.loc 2 164 0
 748 00f0 4FF40040 		mov	r0, #32768
 749 00f4 C4F20300 		movt	r0, 16387
 750 00f8 40F20001 		movw	r1, #:lower16:input
 751 00fc C0F20001 		movt	r1, #:upper16:input
 752 0100 4FF00202 		mov	r2, #2
 753 0104 FFF7FEFF 		bl	ADC_ReadBuffer
 165:main.c        **** 
 166:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
 754              		.loc 2 166 0
 755 0108 4FF01D00 		mov	r0, #29
 756 010c FFF7FEFF 		bl	NVIC_EnableIRQ
 167:main.c        **** 	NVIC_SetPriority(ADC_IRQn, 0);
 757              		.loc 2 167 0
 758 0110 4FF01D00 		mov	r0, #29
 759 0114 4FF00001 		mov	r1, #0
 760 0118 FFF7FEFF 		bl	NVIC_SetPriority
 168:main.c        ****     ADC_EnableIt(ADC,ADC_IER_RXBUFF);
 761              		.loc 2 168 0
 762 011c 4FF40043 		mov	r3, #32768
 763 0120 C4F20303 		movt	r3, 16387
 764 0124 4FF08052 		mov	r2, #268435456
 765 0128 5A62     		str	r2, [r3, #36]
 169:main.c        **** 
 170:main.c        ****     /* Configure PWMC channels */
 171:main.c        ****     PWMC_ConfigureClocks(PWM_FREQ * PWM_PERIOD, 0, BOARD_MCK);
 766              		.loc 2 171 0
 767 012a 4FF4FA60 		mov	r0, #2000
 768 012e 4FF00001 		mov	r1, #0
 769 0132 4FF4D842 		mov	r2, #27648
 770 0136 C0F2DC22 		movt	r2, 732
 771 013a FFF7FEFF 		bl	PWMC_ConfigureClocks
 172:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWMOUT_up, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 772              		.loc 2 172 0
 773 013e 4FF00103 		mov	r3, #1
 774 0142 0093     		str	r3, [sp, #0]
 775 0144 4FF00003 		mov	r3, #0
 776 0148 0193     		str	r3, [sp, #4]
 777 014a 4FF00003 		mov	r3, #0
ARM GAS  /tmp/cctTTGYb.s 			page 46


 778 014e 0293     		str	r3, [sp, #8]
 779 0150 4FF00003 		mov	r3, #0
 780 0154 0393     		str	r3, [sp, #12]
 781 0156 4FF00003 		mov	r3, #0
 782 015a 0493     		str	r3, [sp, #16]
 783 015c 4FF00000 		mov	r0, #0
 784 0160 C4F20200 		movt	r0, 16386
 785 0164 4FF00001 		mov	r1, #0
 786 0168 4FF00B02 		mov	r2, #11
 787 016c 4FF00003 		mov	r3, #0
 788 0170 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
 173:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWMOUT_down, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 789              		.loc 2 173 0
 790 0174 4FF00103 		mov	r3, #1
 791 0178 0093     		str	r3, [sp, #0]
 792 017a 4FF00003 		mov	r3, #0
 793 017e 0193     		str	r3, [sp, #4]
 794 0180 4FF00003 		mov	r3, #0
 795 0184 0293     		str	r3, [sp, #8]
 796 0186 4FF00003 		mov	r3, #0
 797 018a 0393     		str	r3, [sp, #12]
 798 018c 4FF00003 		mov	r3, #0
 799 0190 0493     		str	r3, [sp, #16]
 800 0192 4FF00000 		mov	r0, #0
 801 0196 C4F20200 		movt	r0, 16386
 802 019a 4FF00101 		mov	r1, #1
 803 019e 4FF00B02 		mov	r2, #11
 804 01a2 4FF00003 		mov	r3, #0
 805 01a6 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
 174:main.c        **** 
 175:main.c        ****     PWMC_SetPeriod(PWM, PWMOUT_up, PWM_PERIOD);
 806              		.loc 2 175 0
 807 01aa 4FF00000 		mov	r0, #0
 808 01ae C4F20200 		movt	r0, 16386
 809 01b2 4FF00001 		mov	r1, #0
 810 01b6 4FF06402 		mov	r2, #100
 811 01ba FFF7FEFF 		bl	PWMC_SetPeriod
 176:main.c        ****     PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 812              		.loc 2 176 0
 813 01be 4FF00000 		mov	r0, #0
 814 01c2 C4F20200 		movt	r0, 16386
 815 01c6 4FF00001 		mov	r1, #0
 816 01ca 4FF00002 		mov	r2, #0
 817 01ce FFF7FEFF 		bl	PWMC_SetDutyCycle
 177:main.c        ****     PWMC_SetPeriod(PWM, PWMOUT_down, PWM_PERIOD);
 818              		.loc 2 177 0
 819 01d2 4FF00000 		mov	r0, #0
 820 01d6 C4F20200 		movt	r0, 16386
 821 01da 4FF00101 		mov	r1, #1
 822 01de 4FF06402 		mov	r2, #100
 823 01e2 FFF7FEFF 		bl	PWMC_SetPeriod
 178:main.c        ****     PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 824              		.loc 2 178 0
 825 01e6 4FF00000 		mov	r0, #0
 826 01ea C4F20200 		movt	r0, 16386
 827 01ee 4FF00101 		mov	r1, #1
 828 01f2 4FF00002 		mov	r2, #0
ARM GAS  /tmp/cctTTGYb.s 			page 47


 829 01f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
 179:main.c        **** 
 180:main.c        ****     PWMC_ConfigureSyncChannel(PWM, (1 << PWMOUT_up)|(1 << PWMOUT_down), PWM_SCM_UPDM_MODE1, 0, 0);
 830              		.loc 2 180 0
 831 01fa 4FF00003 		mov	r3, #0
 832 01fe 0093     		str	r3, [sp, #0]
 833 0200 4FF00000 		mov	r0, #0
 834 0204 C4F20200 		movt	r0, 16386
 835 0208 4FF00301 		mov	r1, #3
 836 020c 4FF48032 		mov	r2, #65536
 837 0210 4FF00003 		mov	r3, #0
 838 0214 FFF7FEFF 		bl	PWMC_ConfigureSyncChannel
 181:main.c        ****     PWMC_SetSyncChannelUpdatePeriod(PWM, PWM_SCUP_UPR(1));
 839              		.loc 2 181 0
 840 0218 4FF00000 		mov	r0, #0
 841 021c C4F20200 		movt	r0, 16386
 842 0220 4FF00101 		mov	r1, #1
 843 0224 FFF7FEFF 		bl	PWMC_SetSyncChannelUpdatePeriod
 182:main.c        **** 
 183:main.c        **** 	/* Tick Config */
 184:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 844              		.loc 2 184 0
 845 0228 4FF4D840 		mov	r0, #27648
 846 022c C0F2DC20 		movt	r0, 732
 847 0230 FFF7FEFF 		bl	TimeTick_Configure
 185:main.c        **** 
 186:main.c        **** 	/* LED PIO Config */
 187:main.c        **** 	LEDs_configure();
 848              		.loc 2 187 0
 849 0234 FFF7FEFF 		bl	LEDs_configure
 188:main.c        **** 	LED_clr(statusled);
 850              		.loc 2 188 0
 851 0238 4FF00000 		mov	r0, #0
 852 023c FFF7FEFF 		bl	LED_clr
 189:main.c        **** 
 190:main.c        **** 	/* USB Console Config */
 191:main.c        **** 	USBC_Configure();
 853              		.loc 2 191 0
 854 0240 FFF7FEFF 		bl	USBC_Configure
 192:main.c        **** }
 855              		.loc 2 192 0
 856 0244 07F10C07 		add	r7, r7, #12
 857 0248 BD46     		mov	sp, r7
 858 024a 90BD     		pop	{r4, r7, pc}
 859              		.cfi_endproc
 860              	.LFE38:
 861              		.size	init, .-init
 862              		.section	.rodata
 863 005d 000000   		.align	2
 864              	.LC3:
 865 0060 2D442D20 		.ascii	"-D- set state STOPPED\012\000"
 865      73657420 
 865      73746174 
 865      65205354 
 865      4F505045 
 866 0077 00       		.align	2
 867              	.LC4:
ARM GAS  /tmp/cctTTGYb.s 			page 48


 868 0078 2D442D20 		.ascii	"-D- set state RUN\012\000"
 868      73657420 
 868      73746174 
 868      65205255 
 868      4E0A00
 869 008b 00       		.align	2
 870              	.LC5:
 871 008c 2D442D20 		.ascii	"-D- set state HOLD\012\000"
 871      73657420 
 871      73746174 
 871      6520484F 
 871      4C440A00 
 872              		.align	2
 873              	.LC6:
 874 00a0 2D442D20 		.ascii	"-D- set state RELEASE\012\000"
 874      73657420 
 874      73746174 
 874      65205245 
 874      4C454153 
 875 00b7 00       		.align	2
 876              	.LC7:
 877 00b8 2D442D20 		.ascii	"-D- got invalid state\012\000"
 877      676F7420 
 877      696E7661 
 877      6C696420 
 877      73746174 
 878              		.section	.text.state,"ax",%progbits
 879              		.align	2
 880              		.thumb
 881              		.thumb_func
 882              		.type	state, %function
 883              	state:
 884              	.LFB39:
 193:main.c        **** 
 194:main.c        **** static void state(uint8_t new) 
 195:main.c        **** {
 885              		.loc 2 195 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 8
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889 0000 80B5     		push	{r7, lr}
 890              	.LCFI17:
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 14, -4
 893              		.cfi_offset 7, -8
 894 0002 82B0     		sub	sp, sp, #8
 895              	.LCFI18:
 896              		.cfi_def_cfa_offset 16
 897 0004 00AF     		add	r7, sp, #0
 898              	.LCFI19:
 899              		.cfi_def_cfa_register 7
 900 0006 0346     		mov	r3, r0
 901 0008 FB71     		strb	r3, [r7, #7]
 196:main.c        **** 	switch (new) {
 902              		.loc 2 196 0
 903 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 904 000c 03F1FF33 		add	r3, r3, #-1
ARM GAS  /tmp/cctTTGYb.s 			page 49


 905 0010 072B     		cmp	r3, #7
 906 0012 00F2B380 		bhi	.L33
 907 0016 01A2     		adr	r2, .L38
 908 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 909              		.align	2
 910              	.L38:
 911 001c 3D000000 		.word	.L34+1
 912 0020 99000000 		.word	.L35+1
 913 0024 7D010000 		.word	.L33+1
 914 0028 D7000000 		.word	.L36+1
 915 002c 7D010000 		.word	.L33+1
 916 0030 7D010000 		.word	.L33+1
 917 0034 7D010000 		.word	.L33+1
 918 0038 29010000 		.word	.L37+1
 919              	.L34:
 197:main.c        **** 		case STOPPED:
 198:main.c        **** 			LED_clr(statusled);
 920              		.loc 2 198 0
 921 003c 4FF00000 		mov	r0, #0
 922 0040 FFF7FEFF 		bl	LED_clr
 199:main.c        **** 			mode(STOP, &loop);
 923              		.loc 2 199 0
 924 0044 4FF00300 		mov	r0, #3
 925 0048 40F20001 		movw	r1, #:lower16:loop
 926 004c C0F20001 		movt	r1, #:upper16:loop
 927 0050 FFF7FEFF 		bl	mode
 200:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 928              		.loc 2 200 0
 929 0054 4FF00000 		mov	r0, #0
 930 0058 C4F20200 		movt	r0, 16386
 931 005c 4FF00001 		mov	r1, #0
 932 0060 4FF00002 		mov	r2, #0
 933 0064 FFF7FEFF 		bl	PWMC_SetDutyCycle
 201:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 934              		.loc 2 201 0
 935 0068 4FF00000 		mov	r0, #0
 936 006c C4F20200 		movt	r0, 16386
 937 0070 4FF00101 		mov	r1, #1
 938 0074 4FF00002 		mov	r2, #0
 939 0078 FFF7FEFF 		bl	PWMC_SetDutyCycle
 202:main.c        **** 			TRACE_DEBUG("set state STOPPED\n");
 940              		.loc 2 202 0
 941 007c 40F20003 		movw	r3, #:lower16:_impure_ptr
 942 0080 C0F20003 		movt	r3, #:upper16:_impure_ptr
 943 0084 1B68     		ldr	r3, [r3, #0]
 944 0086 DB68     		ldr	r3, [r3, #12]
 945 0088 1846     		mov	r0, r3
 946 008a 40F20001 		movw	r1, #:lower16:.LC3
 947 008e C0F20001 		movt	r1, #:upper16:.LC3
 948 0092 FFF7FEFF 		bl	fiprintf
 203:main.c        **** 			break;
 949              		.loc 2 203 0
 950 0096 82E0     		b	.L39
 951              	.L35:
 204:main.c        **** 		case RUN:
 205:main.c        **** 			loop.tristate = &rtrip;
 952              		.loc 2 205 0
ARM GAS  /tmp/cctTTGYb.s 			page 50


 953 0098 40F20003 		movw	r3, #:lower16:loop
 954 009c C0F20003 		movt	r3, #:upper16:loop
 955 00a0 40F20002 		movw	r2, #:lower16:rtrip
 956 00a4 C0F20002 		movt	r2, #:upper16:rtrip
 957 00a8 9A62     		str	r2, [r3, #40]
 206:main.c        **** 			mode(RAMP, &loop);
 958              		.loc 2 206 0
 959 00aa 4FF00200 		mov	r0, #2
 960 00ae 40F20001 		movw	r1, #:lower16:loop
 961 00b2 C0F20001 		movt	r1, #:upper16:loop
 962 00b6 FFF7FEFF 		bl	mode
 207:main.c        **** 			TRACE_DEBUG("set state RUN\n");
 963              		.loc 2 207 0
 964 00ba 40F20003 		movw	r3, #:lower16:_impure_ptr
 965 00be C0F20003 		movt	r3, #:upper16:_impure_ptr
 966 00c2 1B68     		ldr	r3, [r3, #0]
 967 00c4 DB68     		ldr	r3, [r3, #12]
 968 00c6 1846     		mov	r0, r3
 969 00c8 40F20001 		movw	r1, #:lower16:.LC4
 970 00cc C0F20001 		movt	r1, #:upper16:.LC4
 971 00d0 FFF7FEFF 		bl	fiprintf
 208:main.c        **** 			break;
 972              		.loc 2 208 0
 973 00d4 63E0     		b	.L39
 974              	.L36:
 209:main.c        **** 		case HOLD:
 210:main.c        **** 			loop.tristate = &ntrip;
 975              		.loc 2 210 0
 976 00d6 40F20003 		movw	r3, #:lower16:loop
 977 00da C0F20003 		movt	r3, #:upper16:loop
 978 00de 40F20002 		movw	r2, #:lower16:ntrip
 979 00e2 C0F20002 		movt	r2, #:upper16:ntrip
 980 00e6 9A62     		str	r2, [r3, #40]
 211:main.c        **** 			loop.SP = loop._x;
 981              		.loc 2 211 0
 982 00e8 40F20003 		movw	r3, #:lower16:loop
 983 00ec C0F20003 		movt	r3, #:upper16:loop
 984 00f0 9A8C     		ldrh	r2, [r3, #36]
 985 00f2 40F20003 		movw	r3, #:lower16:loop
 986 00f6 C0F20003 		movt	r3, #:upper16:loop
 987 00fa 5A80     		strh	r2, [r3, #2]	@ movhi
 212:main.c        **** 			mode(NORMAL, &loop);
 988              		.loc 2 212 0
 989 00fc 4FF00100 		mov	r0, #1
 990 0100 40F20001 		movw	r1, #:lower16:loop
 991 0104 C0F20001 		movt	r1, #:upper16:loop
 992 0108 FFF7FEFF 		bl	mode
 213:main.c        **** 			TRACE_DEBUG("set state HOLD\n");
 993              		.loc 2 213 0
 994 010c 40F20003 		movw	r3, #:lower16:_impure_ptr
 995 0110 C0F20003 		movt	r3, #:upper16:_impure_ptr
 996 0114 1B68     		ldr	r3, [r3, #0]
 997 0116 DB68     		ldr	r3, [r3, #12]
 998 0118 1846     		mov	r0, r3
 999 011a 40F20001 		movw	r1, #:lower16:.LC5
 1000 011e C0F20001 		movt	r1, #:upper16:.LC5
 1001 0122 FFF7FEFF 		bl	fiprintf
ARM GAS  /tmp/cctTTGYb.s 			page 51


 214:main.c        **** 			break;
 1002              		.loc 2 214 0
 1003 0126 3AE0     		b	.L39
 1004              	.L37:
 215:main.c        **** 		case RELEASE:
 216:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_up, PWM_PERIOD);
 1005              		.loc 2 216 0
 1006 0128 4FF00000 		mov	r0, #0
 1007 012c C4F20200 		movt	r0, 16386
 1008 0130 4FF00001 		mov	r1, #0
 1009 0134 4FF06402 		mov	r2, #100
 1010 0138 FFF7FEFF 		bl	PWMC_SetDutyCycle
 217:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 1011              		.loc 2 217 0
 1012 013c 4FF00000 		mov	r0, #0
 1013 0140 C4F20200 		movt	r0, 16386
 1014 0144 4FF00101 		mov	r1, #1
 1015 0148 4FF00002 		mov	r2, #0
 1016 014c FFF7FEFF 		bl	PWMC_SetDutyCycle
 218:main.c        **** 			mode(STOP, &loop);
 1017              		.loc 2 218 0
 1018 0150 4FF00300 		mov	r0, #3
 1019 0154 40F20001 		movw	r1, #:lower16:loop
 1020 0158 C0F20001 		movt	r1, #:upper16:loop
 1021 015c FFF7FEFF 		bl	mode
 219:main.c        **** 			TRACE_DEBUG("set state RELEASE\n");
 1022              		.loc 2 219 0
 1023 0160 40F20003 		movw	r3, #:lower16:_impure_ptr
 1024 0164 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1025 0168 1B68     		ldr	r3, [r3, #0]
 1026 016a DB68     		ldr	r3, [r3, #12]
 1027 016c 1846     		mov	r0, r3
 1028 016e 40F20001 		movw	r1, #:lower16:.LC6
 1029 0172 C0F20001 		movt	r1, #:upper16:.LC6
 1030 0176 FFF7FEFF 		bl	fiprintf
 220:main.c        **** 			break;
 1031              		.loc 2 220 0
 1032 017a 10E0     		b	.L39
 1033              	.L33:
 221:main.c        **** 		default:
 222:main.c        **** 			TRACE_DEBUG("got invalid state\n");
 1034              		.loc 2 222 0
 1035 017c 40F20003 		movw	r3, #:lower16:_impure_ptr
 1036 0180 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1037 0184 1B68     		ldr	r3, [r3, #0]
 1038 0186 DB68     		ldr	r3, [r3, #12]
 1039 0188 1846     		mov	r0, r3
 1040 018a 40F20001 		movw	r1, #:lower16:.LC7
 1041 018e C0F20001 		movt	r1, #:upper16:.LC7
 1042 0192 FFF7FEFF 		bl	fiprintf
 223:main.c        **** 			state(STOPPED);
 1043              		.loc 2 223 0
 1044 0196 4FF00100 		mov	r0, #1
 1045 019a FFF731FF 		bl	state
 1046              	.L39:
 224:main.c        **** 	}
 225:main.c        **** 	_state = new;
ARM GAS  /tmp/cctTTGYb.s 			page 52


 1047              		.loc 2 225 0
 1048 019e 40F20003 		movw	r3, #:lower16:_state
 1049 01a2 C0F20003 		movt	r3, #:upper16:_state
 1050 01a6 FA79     		ldrb	r2, [r7, #7]
 1051 01a8 1A70     		strb	r2, [r3, #0]
 226:main.c        **** }
 1052              		.loc 2 226 0
 1053 01aa 07F10807 		add	r7, r7, #8
 1054 01ae BD46     		mov	sp, r7
 1055 01b0 80BD     		pop	{r7, pc}
 1056              		.cfi_endproc
 1057              	.LFE39:
 1058              		.size	state, .-state
 1059 01b2 00BF     		.section	.rodata
 1060 00cf 00       		.align	2
 1061              	.LC8:
 1062 00d0 25632025 		.ascii	"%c %u %u %u\000"
 1062      75202575 
 1062      20257500 
 1063              		.align	2
 1064              	.LC9:
 1065 00dc 2D442D20 		.ascii	"-D- got %i arguments\000"
 1065      676F7420 
 1065      25692061 
 1065      7267756D 
 1065      656E7473 
 1066 00f1 000000   		.align	2
 1067              	.LC10:
 1068 00f4 25752025 		.ascii	"%u %u %u\012\000"
 1068      75202575 
 1068      0A00
 1069 00fe 0000     		.align	2
 1070              	.LC11:
 1071 0100 2D492D20 		.ascii	"-I- set ramp endpoint to %u\012\000"
 1071      73657420 
 1071      72616D70 
 1071      20656E64 
 1071      706F696E 
 1072 011d 000000   		.align	2
 1073              	.LC12:
 1074 0120 25750A00 		.ascii	"%u\012\000"
 1075              		.align	2
 1076              	.LC13:
 1077 0124 2D492D20 		.ascii	"-I- set ramp slope to %i\012\000"
 1077      73657420 
 1077      72616D70 
 1077      20736C6F 
 1077      70652074 
 1078 013e 0000     		.align	2
 1079              	.LC14:
 1080 0140 25690A00 		.ascii	"%i\012\000"
 1081              		.align	2
 1082              	.LC15:
 1083 0144 2D492D20 		.ascii	"-I- set PID factors to %u, %u, %u\012\000"
 1083      73657420 
 1083      50494420 
 1083      66616374 
ARM GAS  /tmp/cctTTGYb.s 			page 53


 1083      6F727320 
 1084 0167 00       		.align	2
 1085              	.LC16:
 1086 0168 2D492D20 		.ascii	"-I- set releasetime to %u\012\000"
 1086      73657420 
 1086      72656C65 
 1086      61736574 
 1086      696D6520 
 1087 0183 00       		.align	2
 1088              	.LC17:
 1089 0184 2D492D20 		.ascii	"-I- set dxmax to %u\012\000"
 1089      73657420 
 1089      64786D61 
 1089      7820746F 
 1089      2025750A 
 1090 0199 000000   		.align	2
 1091              	.LC18:
 1092 019c 2D492D20 		.ascii	"-I- set setpoint to %u\012\000"
 1092      73657420 
 1092      73657470 
 1092      6F696E74 
 1092      20746F20 
 1093              		.section	.text.cli,"ax",%progbits
 1094              		.align	2
 1095              		.thumb
 1096              		.thumb_func
 1097              		.type	cli, %function
 1098              	cli:
 1099              	.LFB40:
 227:main.c        **** 
 228:main.c        **** static void cli()
 229:main.c        **** {
 1100              		.loc 2 229 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 56
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104 0000 90B5     		push	{r4, r7, lr}
 1105              	.LCFI20:
 1106              		.cfi_def_cfa_offset 12
 1107              		.cfi_offset 14, -4
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 4, -12
 1110 0002 91B0     		sub	sp, sp, #68
 1111              	.LCFI21:
 1112              		.cfi_def_cfa_offset 80
 1113 0004 02AF     		add	r7, sp, #8
 1114              	.LCFI22:
 1115              		.cfi_def_cfa 7, 72
 230:main.c        **** 	int argc;
 231:main.c        **** 	int argv[3];
 232:main.c        **** 	char line[32];
 233:main.c        **** 	char cmd = 0;
 1116              		.loc 2 233 0
 1117 0006 4FF00003 		mov	r3, #0
 1118 000a FB71     		strb	r3, [r7, #7]
 234:main.c        **** 
 235:main.c        **** 	if (!USBC_hasData())
ARM GAS  /tmp/cctTTGYb.s 			page 54


 1119              		.loc 2 235 0
 1120 000c FFF7FEFF 		bl	USBC_hasData
 1121 0010 0346     		mov	r3, r0
 1122 0012 002B     		cmp	r3, #0
 1123 0014 00F0CF81 		beq	.L68
 1124              	.L41:
 236:main.c        **** 		return;
 237:main.c        **** 
 238:main.c        **** 	gets(line);
 1125              		.loc 2 238 0
 1126 0018 07F10803 		add	r3, r7, #8
 1127 001c 1846     		mov	r0, r3
 1128 001e FFF7FEFF 		bl	gets
 239:main.c        **** 	argc = sscanf(line, "%c %u %u %u", &cmd, argv, argv+1, argv+2) - 1;
 1129              		.loc 2 239 0
 1130 0022 07F10801 		add	r1, r7, #8
 1131 0026 07F10702 		add	r2, r7, #7
 1132 002a 07F12803 		add	r3, r7, #40
 1133 002e 07F12800 		add	r0, r7, #40
 1134 0032 00F10400 		add	r0, r0, #4
 1135 0036 0090     		str	r0, [sp, #0]
 1136 0038 07F12800 		add	r0, r7, #40
 1137 003c 00F10800 		add	r0, r0, #8
 1138 0040 0190     		str	r0, [sp, #4]
 1139 0042 0846     		mov	r0, r1
 1140 0044 40F20001 		movw	r1, #:lower16:.LC8
 1141 0048 C0F20001 		movt	r1, #:upper16:.LC8
 1142 004c FFF7FEFF 		bl	siscanf
 1143 0050 0346     		mov	r3, r0
 1144 0052 03F1FF33 		add	r3, r3, #-1
 1145 0056 7B63     		str	r3, [r7, #52]
 240:main.c        **** 	TRACE_DEBUG("got %i arguments", argc);
 1146              		.loc 2 240 0
 1147 0058 40F20003 		movw	r3, #:lower16:_impure_ptr
 1148 005c C0F20003 		movt	r3, #:upper16:_impure_ptr
 1149 0060 1B68     		ldr	r3, [r3, #0]
 1150 0062 DB68     		ldr	r3, [r3, #12]
 1151 0064 1846     		mov	r0, r3
 1152 0066 40F20001 		movw	r1, #:lower16:.LC9
 1153 006a C0F20001 		movt	r1, #:upper16:.LC9
 1154 006e 7A6B     		ldr	r2, [r7, #52]
 1155 0070 FFF7FEFF 		bl	fiprintf
 241:main.c        **** 
 242:main.c        **** 	/* commands allowed in all states */
 243:main.c        **** 	if (cmd == 's')
 1156              		.loc 2 243 0
 1157 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1158 0076 732B     		cmp	r3, #115
 1159 0078 04D1     		bne	.L43
 244:main.c        **** 		state(STOPPED);
 1160              		.loc 2 244 0
 1161 007a 4FF00100 		mov	r0, #1
 1162 007e FFF7FEFF 		bl	state
 1163 0082 21E0     		b	.L44
 1164              	.L43:
 245:main.c        **** 	else if (cmd == 'r')
 1165              		.loc 2 245 0
ARM GAS  /tmp/cctTTGYb.s 			page 55


 1166 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1167 0086 722B     		cmp	r3, #114
 1168 0088 04D1     		bne	.L45
 246:main.c        **** 		state(RELEASE);
 1169              		.loc 2 246 0
 1170 008a 4FF00800 		mov	r0, #8
 1171 008e FFF7FEFF 		bl	state
 1172 0092 19E0     		b	.L44
 1173              	.L45:
 247:main.c        **** 	else if (cmd == '?')
 1174              		.loc 2 247 0
 1175 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1176 0096 3F2B     		cmp	r3, #63
 1177 0098 16D1     		bne	.L44
 248:main.c        **** 		printf("%u %u %u\n", _state, input[AIN0], input[AIN1]);
 1178              		.loc 2 248 0
 1179 009a 40F20003 		movw	r3, #:lower16:_state
 1180 009e C0F20003 		movt	r3, #:upper16:_state
 1181 00a2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1182 00a4 1946     		mov	r1, r3
 1183 00a6 40F20003 		movw	r3, #:lower16:input
 1184 00aa C0F20003 		movt	r3, #:upper16:input
 1185 00ae 1B88     		ldrh	r3, [r3, #0]
 1186 00b0 1A46     		mov	r2, r3
 1187 00b2 40F20003 		movw	r3, #:lower16:input
 1188 00b6 C0F20003 		movt	r3, #:upper16:input
 1189 00ba 5B88     		ldrh	r3, [r3, #2]
 1190 00bc 40F20000 		movw	r0, #:lower16:.LC10
 1191 00c0 C0F20000 		movt	r0, #:upper16:.LC10
 1192 00c4 FFF7FEFF 		bl	iprintf
 1193              	.L44:
 249:main.c        **** 
 250:main.c        **** 	/* state specific commands */
 251:main.c        **** 	switch (_state) {
 1194              		.loc 2 251 0
 1195 00c8 40F20003 		movw	r3, #:lower16:_state
 1196 00cc C0F20003 		movt	r3, #:upper16:_state
 1197 00d0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1198 00d2 03F1FF33 		add	r3, r3, #-1
 1199 00d6 072B     		cmp	r3, #7
 1200 00d8 00F27281 		bhi	.L40
 1201 00dc 01A2     		adr	r2, .L49
 1202 00de 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1203 00e2 00BF     		.align	2
 1204              	.L49:
 1205 00e4 05010000 		.word	.L46+1
 1206 00e8 C1030000 		.word	.L40+1
 1207 00ec C1030000 		.word	.L40+1
 1208 00f0 47030000 		.word	.L48+1
 1209 00f4 C1030000 		.word	.L40+1
 1210 00f8 C1030000 		.word	.L40+1
 1211 00fc C1030000 		.word	.L40+1
 1212 0100 C1030000 		.word	.L40+1
 1213              	.L46:
 252:main.c        **** 		case STOPPED:
 253:main.c        **** 			if (cmd == 'g') {
 1214              		.loc 2 253 0
ARM GAS  /tmp/cctTTGYb.s 			page 56


 1215 0104 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1216 0106 672B     		cmp	r3, #103
 1217 0108 04D1     		bne	.L50
 254:main.c        **** 				state(RUN);
 1218              		.loc 2 254 0
 1219 010a 4FF00200 		mov	r0, #2
 1220 010e FFF7FEFF 		bl	state
 255:main.c        **** 			}
 256:main.c        **** 			else if (cmd == 'h') {
 257:main.c        **** 				state(HOLD);
 258:main.c        **** 			}
 259:main.c        **** 			else if (cmd == 'e') {
 260:main.c        **** 				if (argc == 1) {
 261:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 262:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 263:main.c        **** 				}
 264:main.c        **** 				printf("%u\n", loop.rSP);
 265:main.c        **** 			}
 266:main.c        **** 			else if (cmd == 'v') {
 267:main.c        **** 				if (argc == 1) {
 268:main.c        **** 					loop.rSlope = *argv;
 269:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 270:main.c        **** 				}
 271:main.c        **** 				printf("%i\n", loop.rSlope);
 272:main.c        **** 			}
 273:main.c        **** 			else if (cmd == 'k') {
 274:main.c        **** 				if (argc == 3) {
 275:main.c        **** 					loop.Kp = argv[0];
 276:main.c        **** 					loop.Ki = argv[1];
 277:main.c        **** 					loop.Kd = argv[2];
 278:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 279:main.c        **** 				}
 280:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 281:main.c        **** 			}
 282:main.c        **** 			else if (cmd == 't') {
 283:main.c        **** 				if (argc == 1) {
 284:main.c        **** 					releasetime = *argv;
 285:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 286:main.c        **** 				}
 287:main.c        **** 				printf("%u\n", releasetime);
 288:main.c        **** 			}
 289:main.c        **** 			else if (cmd == 'd') {
 290:main.c        **** 				if (argc == 2) {
 291:main.c        **** 					dxmax = *argv;
 292:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 293:main.c        **** 				}
 294:main.c        **** 				printf("%u\n", dxmax);
 295:main.c        **** 			}
 296:main.c        **** 			break;
 1221              		.loc 2 296 0
 1222 0112 52E1     		b	.L69
 1223              	.L50:
 256:main.c        **** 			else if (cmd == 'h') {
 1224              		.loc 2 256 0
 1225 0114 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1226 0116 682B     		cmp	r3, #104
 1227 0118 04D1     		bne	.L52
ARM GAS  /tmp/cctTTGYb.s 			page 57


 257:main.c        **** 				state(HOLD);
 1228              		.loc 2 257 0
 1229 011a 4FF00400 		mov	r0, #4
 1230 011e FFF7FEFF 		bl	state
 1231              		.loc 2 296 0
 1232 0122 4AE1     		b	.L69
 1233              	.L52:
 259:main.c        **** 			else if (cmd == 'e') {
 1234              		.loc 2 259 0
 1235 0124 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1236 0126 652B     		cmp	r3, #101
 1237 0128 34D1     		bne	.L53
 260:main.c        **** 				if (argc == 1) {
 1238              		.loc 2 260 0
 1239 012a 7B6B     		ldr	r3, [r7, #52]
 1240 012c 012B     		cmp	r3, #1
 1241 012e 24D1     		bne	.L54
 261:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1242              		.loc 2 261 0
 1243 0130 BB6A     		ldr	r3, [r7, #40]
 1244 0132 002B     		cmp	r3, #0
 1245 0134 07DB     		blt	.L55
 261:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1246              		.loc 2 261 0 is_stmt 0 discriminator 1
 1247 0136 BA6A     		ldr	r2, [r7, #40]
 1248 0138 40F6FF73 		movw	r3, #4095
 1249 013c 9A42     		cmp	r2, r3
 1250 013e B8BF     		it	lt
 1251 0140 1346     		movlt	r3, r2
 1252 0142 9AB2     		uxth	r2, r3
 1253 0144 01E0     		b	.L56
 1254              	.L55:
 261:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1255              		.loc 2 261 0 discriminator 2
 1256 0146 4FF00002 		mov	r2, #0
 1257              	.L56:
 261:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1258              		.loc 2 261 0 discriminator 3
 1259 014a 40F20003 		movw	r3, #:lower16:loop
 1260 014e C0F20003 		movt	r3, #:upper16:loop
 1261 0152 9A80     		strh	r2, [r3, #4]	@ movhi
 262:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 1262              		.loc 2 262 0 is_stmt 1 discriminator 3
 1263 0154 40F20003 		movw	r3, #:lower16:_impure_ptr
 1264 0158 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1265 015c 1B68     		ldr	r3, [r3, #0]
 1266 015e DA68     		ldr	r2, [r3, #12]
 1267 0160 40F20003 		movw	r3, #:lower16:loop
 1268 0164 C0F20003 		movt	r3, #:upper16:loop
 1269 0168 9B88     		ldrh	r3, [r3, #4]
 1270 016a 1046     		mov	r0, r2
 1271 016c 40F20001 		movw	r1, #:lower16:.LC11
 1272 0170 C0F20001 		movt	r1, #:upper16:.LC11
 1273 0174 1A46     		mov	r2, r3
 1274 0176 FFF7FEFF 		bl	fiprintf
 1275              	.L54:
 264:main.c        **** 				printf("%u\n", loop.rSP);
ARM GAS  /tmp/cctTTGYb.s 			page 58


 1276              		.loc 2 264 0
 1277 017a 40F20003 		movw	r3, #:lower16:loop
 1278 017e C0F20003 		movt	r3, #:upper16:loop
 1279 0182 9B88     		ldrh	r3, [r3, #4]
 1280 0184 40F20000 		movw	r0, #:lower16:.LC12
 1281 0188 C0F20000 		movt	r0, #:upper16:.LC12
 1282 018c 1946     		mov	r1, r3
 1283 018e FFF7FEFF 		bl	iprintf
 1284              		.loc 2 296 0
 1285 0192 12E1     		b	.L69
 1286              	.L53:
 266:main.c        **** 			else if (cmd == 'v') {
 1287              		.loc 2 266 0
 1288 0194 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1289 0196 762B     		cmp	r3, #118
 1290 0198 28D1     		bne	.L57
 267:main.c        **** 				if (argc == 1) {
 1291              		.loc 2 267 0
 1292 019a 7B6B     		ldr	r3, [r7, #52]
 1293 019c 012B     		cmp	r3, #1
 1294 019e 18D1     		bne	.L58
 268:main.c        **** 					loop.rSlope = *argv;
 1295              		.loc 2 268 0
 1296 01a0 BA6A     		ldr	r2, [r7, #40]
 1297 01a2 40F20003 		movw	r3, #:lower16:loop
 1298 01a6 C0F20003 		movt	r3, #:upper16:loop
 1299 01aa 9A60     		str	r2, [r3, #8]
 269:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 1300              		.loc 2 269 0
 1301 01ac 40F20003 		movw	r3, #:lower16:_impure_ptr
 1302 01b0 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1303 01b4 1B68     		ldr	r3, [r3, #0]
 1304 01b6 DA68     		ldr	r2, [r3, #12]
 1305 01b8 40F20003 		movw	r3, #:lower16:loop
 1306 01bc C0F20003 		movt	r3, #:upper16:loop
 1307 01c0 9B68     		ldr	r3, [r3, #8]
 1308 01c2 1046     		mov	r0, r2
 1309 01c4 40F20001 		movw	r1, #:lower16:.LC13
 1310 01c8 C0F20001 		movt	r1, #:upper16:.LC13
 1311 01cc 1A46     		mov	r2, r3
 1312 01ce FFF7FEFF 		bl	fiprintf
 1313              	.L58:
 271:main.c        **** 				printf("%i\n", loop.rSlope);
 1314              		.loc 2 271 0
 1315 01d2 40F20003 		movw	r3, #:lower16:loop
 1316 01d6 C0F20003 		movt	r3, #:upper16:loop
 1317 01da 9B68     		ldr	r3, [r3, #8]
 1318 01dc 40F20000 		movw	r0, #:lower16:.LC14
 1319 01e0 C0F20000 		movt	r0, #:upper16:.LC14
 1320 01e4 1946     		mov	r1, r3
 1321 01e6 FFF7FEFF 		bl	iprintf
 1322              		.loc 2 296 0
 1323 01ea E6E0     		b	.L69
 1324              	.L57:
 273:main.c        **** 			else if (cmd == 'k') {
 1325              		.loc 2 273 0
 1326 01ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  /tmp/cctTTGYb.s 			page 59


 1327 01ee 6B2B     		cmp	r3, #107
 1328 01f0 4FD1     		bne	.L59
 274:main.c        **** 				if (argc == 3) {
 1329              		.loc 2 274 0
 1330 01f2 7B6B     		ldr	r3, [r7, #52]
 1331 01f4 032B     		cmp	r3, #3
 1332 01f6 34D1     		bne	.L60
 275:main.c        **** 					loop.Kp = argv[0];
 1333              		.loc 2 275 0
 1334 01f8 BB6A     		ldr	r3, [r7, #40]
 1335 01fa 9AB2     		uxth	r2, r3
 1336 01fc 40F20003 		movw	r3, #:lower16:loop
 1337 0200 C0F20003 		movt	r3, #:upper16:loop
 1338 0204 9A81     		strh	r2, [r3, #12]	@ movhi
 276:main.c        **** 					loop.Ki = argv[1];
 1339              		.loc 2 276 0
 1340 0206 FB6A     		ldr	r3, [r7, #44]
 1341 0208 9AB2     		uxth	r2, r3
 1342 020a 40F20003 		movw	r3, #:lower16:loop
 1343 020e C0F20003 		movt	r3, #:upper16:loop
 1344 0212 DA81     		strh	r2, [r3, #14]	@ movhi
 277:main.c        **** 					loop.Kd = argv[2];
 1345              		.loc 2 277 0
 1346 0214 3B6B     		ldr	r3, [r7, #48]
 1347 0216 9AB2     		uxth	r2, r3
 1348 0218 40F20003 		movw	r3, #:lower16:loop
 1349 021c C0F20003 		movt	r3, #:upper16:loop
 1350 0220 1A82     		strh	r2, [r3, #16]	@ movhi
 278:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 1351              		.loc 2 278 0
 1352 0222 40F20003 		movw	r3, #:lower16:_impure_ptr
 1353 0226 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1354 022a 1B68     		ldr	r3, [r3, #0]
 1355 022c D968     		ldr	r1, [r3, #12]
 1356 022e 40F20003 		movw	r3, #:lower16:loop
 1357 0232 C0F20003 		movt	r3, #:upper16:loop
 1358 0236 9B89     		ldrh	r3, [r3, #12]
 1359 0238 1A46     		mov	r2, r3
 1360 023a 40F20003 		movw	r3, #:lower16:loop
 1361 023e C0F20003 		movt	r3, #:upper16:loop
 1362 0242 DB89     		ldrh	r3, [r3, #14]
 1363 0244 1C46     		mov	r4, r3
 1364 0246 40F20003 		movw	r3, #:lower16:loop
 1365 024a C0F20003 		movt	r3, #:upper16:loop
 1366 024e 1B8A     		ldrh	r3, [r3, #16]
 1367 0250 0093     		str	r3, [sp, #0]
 1368 0252 0846     		mov	r0, r1
 1369 0254 40F20001 		movw	r1, #:lower16:.LC15
 1370 0258 C0F20001 		movt	r1, #:upper16:.LC15
 1371 025c 2346     		mov	r3, r4
 1372 025e FFF7FEFF 		bl	fiprintf
 1373              	.L60:
 280:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 1374              		.loc 2 280 0
 1375 0262 40F20003 		movw	r3, #:lower16:loop
 1376 0266 C0F20003 		movt	r3, #:upper16:loop
 1377 026a 9B89     		ldrh	r3, [r3, #12]
ARM GAS  /tmp/cctTTGYb.s 			page 60


 1378 026c 1946     		mov	r1, r3
 1379 026e 40F20003 		movw	r3, #:lower16:loop
 1380 0272 C0F20003 		movt	r3, #:upper16:loop
 1381 0276 DB89     		ldrh	r3, [r3, #14]
 1382 0278 1A46     		mov	r2, r3
 1383 027a 40F20003 		movw	r3, #:lower16:loop
 1384 027e C0F20003 		movt	r3, #:upper16:loop
 1385 0282 1B8A     		ldrh	r3, [r3, #16]
 1386 0284 40F20000 		movw	r0, #:lower16:.LC10
 1387 0288 C0F20000 		movt	r0, #:upper16:.LC10
 1388 028c FFF7FEFF 		bl	iprintf
 1389              		.loc 2 296 0
 1390 0290 93E0     		b	.L69
 1391              	.L59:
 282:main.c        **** 			else if (cmd == 't') {
 1392              		.loc 2 282 0
 1393 0292 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1394 0294 742B     		cmp	r3, #116
 1395 0296 29D1     		bne	.L61
 283:main.c        **** 				if (argc == 1) {
 1396              		.loc 2 283 0
 1397 0298 7B6B     		ldr	r3, [r7, #52]
 1398 029a 012B     		cmp	r3, #1
 1399 029c 19D1     		bne	.L62
 284:main.c        **** 					releasetime = *argv;
 1400              		.loc 2 284 0
 1401 029e BB6A     		ldr	r3, [r7, #40]
 1402 02a0 1A46     		mov	r2, r3
 1403 02a2 40F20003 		movw	r3, #:lower16:releasetime
 1404 02a6 C0F20003 		movt	r3, #:upper16:releasetime
 1405 02aa 1A60     		str	r2, [r3, #0]
 285:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 1406              		.loc 2 285 0
 1407 02ac 40F20003 		movw	r3, #:lower16:_impure_ptr
 1408 02b0 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1409 02b4 1B68     		ldr	r3, [r3, #0]
 1410 02b6 DA68     		ldr	r2, [r3, #12]
 1411 02b8 40F20003 		movw	r3, #:lower16:releasetime
 1412 02bc C0F20003 		movt	r3, #:upper16:releasetime
 1413 02c0 1B68     		ldr	r3, [r3, #0]
 1414 02c2 1046     		mov	r0, r2
 1415 02c4 40F20001 		movw	r1, #:lower16:.LC16
 1416 02c8 C0F20001 		movt	r1, #:upper16:.LC16
 1417 02cc 1A46     		mov	r2, r3
 1418 02ce FFF7FEFF 		bl	fiprintf
 1419              	.L62:
 287:main.c        **** 				printf("%u\n", releasetime);
 1420              		.loc 2 287 0
 1421 02d2 40F20003 		movw	r3, #:lower16:releasetime
 1422 02d6 C0F20003 		movt	r3, #:upper16:releasetime
 1423 02da 1B68     		ldr	r3, [r3, #0]
 1424 02dc 40F20000 		movw	r0, #:lower16:.LC12
 1425 02e0 C0F20000 		movt	r0, #:upper16:.LC12
 1426 02e4 1946     		mov	r1, r3
 1427 02e6 FFF7FEFF 		bl	iprintf
 1428              		.loc 2 296 0
 1429 02ea 66E0     		b	.L69
ARM GAS  /tmp/cctTTGYb.s 			page 61


 1430              	.L61:
 289:main.c        **** 			else if (cmd == 'd') {
 1431              		.loc 2 289 0
 1432 02ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1433 02ee 642B     		cmp	r3, #100
 1434 02f0 63D1     		bne	.L69
 290:main.c        **** 				if (argc == 2) {
 1435              		.loc 2 290 0
 1436 02f2 7B6B     		ldr	r3, [r7, #52]
 1437 02f4 022B     		cmp	r3, #2
 1438 02f6 19D1     		bne	.L63
 291:main.c        **** 					dxmax = *argv;
 1439              		.loc 2 291 0
 1440 02f8 BB6A     		ldr	r3, [r7, #40]
 1441 02fa 1A46     		mov	r2, r3
 1442 02fc 40F20003 		movw	r3, #:lower16:dxmax
 1443 0300 C0F20003 		movt	r3, #:upper16:dxmax
 1444 0304 1A60     		str	r2, [r3, #0]
 292:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 1445              		.loc 2 292 0
 1446 0306 40F20003 		movw	r3, #:lower16:_impure_ptr
 1447 030a C0F20003 		movt	r3, #:upper16:_impure_ptr
 1448 030e 1B68     		ldr	r3, [r3, #0]
 1449 0310 DA68     		ldr	r2, [r3, #12]
 1450 0312 40F20003 		movw	r3, #:lower16:dxmax
 1451 0316 C0F20003 		movt	r3, #:upper16:dxmax
 1452 031a 1B68     		ldr	r3, [r3, #0]
 1453 031c 1046     		mov	r0, r2
 1454 031e 40F20001 		movw	r1, #:lower16:.LC17
 1455 0322 C0F20001 		movt	r1, #:upper16:.LC17
 1456 0326 1A46     		mov	r2, r3
 1457 0328 FFF7FEFF 		bl	fiprintf
 1458              	.L63:
 294:main.c        **** 				printf("%u\n", dxmax);
 1459              		.loc 2 294 0
 1460 032c 40F20003 		movw	r3, #:lower16:dxmax
 1461 0330 C0F20003 		movt	r3, #:upper16:dxmax
 1462 0334 1B68     		ldr	r3, [r3, #0]
 1463 0336 40F20000 		movw	r0, #:lower16:.LC12
 1464 033a C0F20000 		movt	r0, #:upper16:.LC12
 1465 033e 1946     		mov	r1, r3
 1466 0340 FFF7FEFF 		bl	iprintf
 1467              		.loc 2 296 0
 1468 0344 39E0     		b	.L69
 1469              	.L48:
 297:main.c        **** 
 298:main.c        **** 		case HOLD:
 299:main.c        **** 			if (cmd == 'w') {
 1470              		.loc 2 299 0
 1471 0346 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1472 0348 772B     		cmp	r3, #119
 1473 034a 38D1     		bne	.L70
 300:main.c        **** 				if (argc == 1) {
 1474              		.loc 2 300 0
 1475 034c 7B6B     		ldr	r3, [r7, #52]
 1476 034e 012B     		cmp	r3, #1
 1477 0350 24D1     		bne	.L65
ARM GAS  /tmp/cctTTGYb.s 			page 62


 301:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1478              		.loc 2 301 0
 1479 0352 BB6A     		ldr	r3, [r7, #40]
 1480 0354 002B     		cmp	r3, #0
 1481 0356 07DB     		blt	.L66
 1482              		.loc 2 301 0 is_stmt 0 discriminator 1
 1483 0358 BA6A     		ldr	r2, [r7, #40]
 1484 035a 40F6FF73 		movw	r3, #4095
 1485 035e 9A42     		cmp	r2, r3
 1486 0360 B8BF     		it	lt
 1487 0362 1346     		movlt	r3, r2
 1488 0364 9AB2     		uxth	r2, r3
 1489 0366 01E0     		b	.L67
 1490              	.L66:
 1491              		.loc 2 301 0 discriminator 2
 1492 0368 4FF00002 		mov	r2, #0
 1493              	.L67:
 1494              		.loc 2 301 0 discriminator 3
 1495 036c 40F20003 		movw	r3, #:lower16:loop
 1496 0370 C0F20003 		movt	r3, #:upper16:loop
 1497 0374 5A80     		strh	r2, [r3, #2]	@ movhi
 302:main.c        **** 					TRACE_INFO("set setpoint to %u\n", loop.SP);
 1498              		.loc 2 302 0 is_stmt 1 discriminator 3
 1499 0376 40F20003 		movw	r3, #:lower16:_impure_ptr
 1500 037a C0F20003 		movt	r3, #:upper16:_impure_ptr
 1501 037e 1B68     		ldr	r3, [r3, #0]
 1502 0380 DA68     		ldr	r2, [r3, #12]
 1503 0382 40F20003 		movw	r3, #:lower16:loop
 1504 0386 C0F20003 		movt	r3, #:upper16:loop
 1505 038a 5B88     		ldrh	r3, [r3, #2]
 1506 038c 1046     		mov	r0, r2
 1507 038e 40F20001 		movw	r1, #:lower16:.LC18
 1508 0392 C0F20001 		movt	r1, #:upper16:.LC18
 1509 0396 1A46     		mov	r2, r3
 1510 0398 FFF7FEFF 		bl	fiprintf
 1511              	.L65:
 303:main.c        **** 				}
 304:main.c        **** 				printf("%u\n", loop.SP);
 1512              		.loc 2 304 0
 1513 039c 40F20003 		movw	r3, #:lower16:loop
 1514 03a0 C0F20003 		movt	r3, #:upper16:loop
 1515 03a4 5B88     		ldrh	r3, [r3, #2]
 1516 03a6 40F20000 		movw	r0, #:lower16:.LC12
 1517 03aa C0F20000 		movt	r0, #:upper16:.LC12
 1518 03ae 1946     		mov	r1, r3
 1519 03b0 FFF7FEFF 		bl	iprintf
 305:main.c        **** 			}
 306:main.c        **** 			break;
 1520              		.loc 2 306 0
 1521 03b4 03E0     		b	.L70
 1522              	.L68:
 236:main.c        **** 		return;
 1523              		.loc 2 236 0
 1524 03b6 00BF     		nop
 1525 03b8 02E0     		b	.L40
 1526              	.L69:
 296:main.c        **** 			break;
ARM GAS  /tmp/cctTTGYb.s 			page 63


 1527              		.loc 2 296 0
 1528 03ba 00BF     		nop
 1529 03bc 00E0     		b	.L40
 1530              	.L70:
 1531              		.loc 2 306 0
 1532 03be 00BF     		nop
 1533              	.L40:
 307:main.c        **** 
 308:main.c        **** 		case RUN:
 309:main.c        **** 		case RELEASE:
 310:main.c        **** 			break;
 311:main.c        **** 	}
 312:main.c        **** }
 1534              		.loc 2 312 0
 1535 03c0 07F13C07 		add	r7, r7, #60
 1536 03c4 BD46     		mov	sp, r7
 1537 03c6 90BD     		pop	{r4, r7, pc}
 1538              		.cfi_endproc
 1539              	.LFE40:
 1540              		.size	cli, .-cli
 1541              		.text
 1542              	.Letext0:
 1543              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1544              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1545              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 1546              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1547              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1548              		.file 8 "libchip/include/SAM3S.h"
 1549              		.file 9 "controller.h"
 1550              		.section	.debug_info,"",%progbits
 1551              	.Ldebug_info0:
 1552 0000 061A0000 		.4byte	0x1a06
 1553 0004 0200     		.2byte	0x2
 1554 0006 00000000 		.4byte	.Ldebug_abbrev0
 1555 000a 04       		.byte	0x4
 1556 000b 01       		.uleb128 0x1
 1557 000c FF0A0000 		.4byte	.LASF340
 1558 0010 01       		.byte	0x1
 1559 0011 66060000 		.4byte	.LASF341
 1560 0015 DD090000 		.4byte	.LASF342
 1561 0019 00000000 		.4byte	0
 1562 001d 00000000 		.4byte	0
 1563 0021 00000000 		.4byte	.Ldebug_ranges0+0
 1564 0025 00000000 		.4byte	.Ldebug_line0
 1565 0029 02       		.uleb128 0x2
 1566 002a 01       		.byte	0x1
 1567 002b 06       		.byte	0x6
 1568 002c 52020000 		.4byte	.LASF0
 1569 0030 02       		.uleb128 0x2
 1570 0031 01       		.byte	0x1
 1571 0032 08       		.byte	0x8
 1572 0033 94020000 		.4byte	.LASF1
 1573 0037 02       		.uleb128 0x2
 1574 0038 02       		.byte	0x2
 1575 0039 05       		.byte	0x5
 1576 003a 420A0000 		.4byte	.LASF2
 1577 003e 02       		.uleb128 0x2
ARM GAS  /tmp/cctTTGYb.s 			page 64


 1578 003f 02       		.byte	0x2
 1579 0040 07       		.byte	0x7
 1580 0041 840B0000 		.4byte	.LASF3
 1581 0045 03       		.uleb128 0x3
 1582 0046 04       		.byte	0x4
 1583 0047 05       		.byte	0x5
 1584 0048 696E7400 		.ascii	"int\000"
 1585 004c 02       		.uleb128 0x2
 1586 004d 04       		.byte	0x4
 1587 004e 07       		.byte	0x7
 1588 004f F9060000 		.4byte	.LASF4
 1589 0053 02       		.uleb128 0x2
 1590 0054 08       		.byte	0x8
 1591 0055 05       		.byte	0x5
 1592 0056 F3050000 		.4byte	.LASF5
 1593 005a 02       		.uleb128 0x2
 1594 005b 08       		.byte	0x8
 1595 005c 07       		.byte	0x7
 1596 005d 19080000 		.4byte	.LASF6
 1597 0061 04       		.uleb128 0x4
 1598 0062 49050000 		.4byte	.LASF8
 1599 0066 03       		.byte	0x3
 1600 0067 07       		.byte	0x7
 1601 0068 45000000 		.4byte	0x45
 1602 006c 02       		.uleb128 0x2
 1603 006d 04       		.byte	0x4
 1604 006e 05       		.byte	0x5
 1605 006f AA010000 		.4byte	.LASF7
 1606 0073 04       		.uleb128 0x4
 1607 0074 D3070000 		.4byte	.LASF9
 1608 0078 04       		.byte	0x4
 1609 0079 2C       		.byte	0x2c
 1610 007a 6C000000 		.4byte	0x6c
 1611 007e 05       		.uleb128 0x5
 1612 007f 19090000 		.4byte	.LASF10
 1613 0083 05       		.byte	0x5
 1614 0084 6101     		.2byte	0x161
 1615 0086 4C000000 		.4byte	0x4c
 1616 008a 06       		.uleb128 0x6
 1617 008b 04       		.byte	0x4
 1618 008c 04       		.byte	0x4
 1619 008d 46       		.byte	0x46
 1620 008e A9000000 		.4byte	0xa9
 1621 0092 07       		.uleb128 0x7
 1622 0093 3C010000 		.4byte	.LASF11
 1623 0097 04       		.byte	0x4
 1624 0098 48       		.byte	0x48
 1625 0099 7E000000 		.4byte	0x7e
 1626 009d 07       		.uleb128 0x7
 1627 009e DB070000 		.4byte	.LASF12
 1628 00a2 04       		.byte	0x4
 1629 00a3 49       		.byte	0x49
 1630 00a4 A9000000 		.4byte	0xa9
 1631 00a8 00       		.byte	0
 1632 00a9 08       		.uleb128 0x8
 1633 00aa 30000000 		.4byte	0x30
 1634 00ae B9000000 		.4byte	0xb9
ARM GAS  /tmp/cctTTGYb.s 			page 65


 1635 00b2 09       		.uleb128 0x9
 1636 00b3 4C000000 		.4byte	0x4c
 1637 00b7 03       		.byte	0x3
 1638 00b8 00       		.byte	0
 1639 00b9 0A       		.uleb128 0xa
 1640 00ba 08       		.byte	0x8
 1641 00bb 04       		.byte	0x4
 1642 00bc 43       		.byte	0x43
 1643 00bd DE000000 		.4byte	0xde
 1644 00c1 0B       		.uleb128 0xb
 1645 00c2 93070000 		.4byte	.LASF13
 1646 00c6 04       		.byte	0x4
 1647 00c7 45       		.byte	0x45
 1648 00c8 45000000 		.4byte	0x45
 1649 00cc 02       		.byte	0x2
 1650 00cd 23       		.byte	0x23
 1651 00ce 00       		.uleb128 0
 1652 00cf 0B       		.uleb128 0xb
 1653 00d0 2A000000 		.4byte	.LASF14
 1654 00d4 04       		.byte	0x4
 1655 00d5 4A       		.byte	0x4a
 1656 00d6 8A000000 		.4byte	0x8a
 1657 00da 02       		.byte	0x2
 1658 00db 23       		.byte	0x23
 1659 00dc 04       		.uleb128 0x4
 1660 00dd 00       		.byte	0
 1661 00de 04       		.uleb128 0x4
 1662 00df F6080000 		.4byte	.LASF15
 1663 00e3 04       		.byte	0x4
 1664 00e4 4B       		.byte	0x4b
 1665 00e5 B9000000 		.4byte	0xb9
 1666 00e9 04       		.uleb128 0x4
 1667 00ea DF080000 		.4byte	.LASF16
 1668 00ee 04       		.byte	0x4
 1669 00ef 4F       		.byte	0x4f
 1670 00f0 61000000 		.4byte	0x61
 1671 00f4 0C       		.uleb128 0xc
 1672 00f5 04       		.byte	0x4
 1673 00f6 04       		.uleb128 0x4
 1674 00f7 1F0B0000 		.4byte	.LASF17
 1675 00fb 06       		.byte	0x6
 1676 00fc 15       		.byte	0x15
 1677 00fd 01010000 		.4byte	0x101
 1678 0101 02       		.uleb128 0x2
 1679 0102 04       		.byte	0x4
 1680 0103 07       		.byte	0x7
 1681 0104 D2040000 		.4byte	.LASF18
 1682 0108 0D       		.uleb128 0xd
 1683 0109 A2050000 		.4byte	.LASF23
 1684 010d 18       		.byte	0x18
 1685 010e 06       		.byte	0x6
 1686 010f 2C       		.byte	0x2c
 1687 0110 67010000 		.4byte	0x167
 1688 0114 0B       		.uleb128 0xb
 1689 0115 39090000 		.4byte	.LASF19
 1690 0119 06       		.byte	0x6
 1691 011a 2E       		.byte	0x2e
ARM GAS  /tmp/cctTTGYb.s 			page 66


 1692 011b 67010000 		.4byte	0x167
 1693 011f 02       		.byte	0x2
 1694 0120 23       		.byte	0x23
 1695 0121 00       		.uleb128 0
 1696 0122 0E       		.uleb128 0xe
 1697 0123 5F6B00   		.ascii	"_k\000"
 1698 0126 06       		.byte	0x6
 1699 0127 2F       		.byte	0x2f
 1700 0128 45000000 		.4byte	0x45
 1701 012c 02       		.byte	0x2
 1702 012d 23       		.byte	0x23
 1703 012e 04       		.uleb128 0x4
 1704 012f 0B       		.uleb128 0xb
 1705 0130 B3050000 		.4byte	.LASF20
 1706 0134 06       		.byte	0x6
 1707 0135 2F       		.byte	0x2f
 1708 0136 45000000 		.4byte	0x45
 1709 013a 02       		.byte	0x2
 1710 013b 23       		.byte	0x23
 1711 013c 08       		.uleb128 0x8
 1712 013d 0B       		.uleb128 0xb
 1713 013e D8060000 		.4byte	.LASF21
 1714 0142 06       		.byte	0x6
 1715 0143 2F       		.byte	0x2f
 1716 0144 45000000 		.4byte	0x45
 1717 0148 02       		.byte	0x2
 1718 0149 23       		.byte	0x23
 1719 014a 0C       		.uleb128 0xc
 1720 014b 0B       		.uleb128 0xb
 1721 014c 17040000 		.4byte	.LASF22
 1722 0150 06       		.byte	0x6
 1723 0151 2F       		.byte	0x2f
 1724 0152 45000000 		.4byte	0x45
 1725 0156 02       		.byte	0x2
 1726 0157 23       		.byte	0x23
 1727 0158 10       		.uleb128 0x10
 1728 0159 0E       		.uleb128 0xe
 1729 015a 5F7800   		.ascii	"_x\000"
 1730 015d 06       		.byte	0x6
 1731 015e 30       		.byte	0x30
 1732 015f 6D010000 		.4byte	0x16d
 1733 0163 02       		.byte	0x2
 1734 0164 23       		.byte	0x23
 1735 0165 14       		.uleb128 0x14
 1736 0166 00       		.byte	0
 1737 0167 0F       		.uleb128 0xf
 1738 0168 04       		.byte	0x4
 1739 0169 08010000 		.4byte	0x108
 1740 016d 08       		.uleb128 0x8
 1741 016e F6000000 		.4byte	0xf6
 1742 0172 7D010000 		.4byte	0x17d
 1743 0176 09       		.uleb128 0x9
 1744 0177 4C000000 		.4byte	0x4c
 1745 017b 00       		.byte	0
 1746 017c 00       		.byte	0
 1747 017d 0D       		.uleb128 0xd
 1748 017e 91000000 		.4byte	.LASF24
ARM GAS  /tmp/cctTTGYb.s 			page 67


 1749 0182 24       		.byte	0x24
 1750 0183 06       		.byte	0x6
 1751 0184 34       		.byte	0x34
 1752 0185 08020000 		.4byte	0x208
 1753 0189 0B       		.uleb128 0xb
 1754 018a AD000000 		.4byte	.LASF25
 1755 018e 06       		.byte	0x6
 1756 018f 36       		.byte	0x36
 1757 0190 45000000 		.4byte	0x45
 1758 0194 02       		.byte	0x2
 1759 0195 23       		.byte	0x23
 1760 0196 00       		.uleb128 0
 1761 0197 0B       		.uleb128 0xb
 1762 0198 0A0C0000 		.4byte	.LASF26
 1763 019c 06       		.byte	0x6
 1764 019d 37       		.byte	0x37
 1765 019e 45000000 		.4byte	0x45
 1766 01a2 02       		.byte	0x2
 1767 01a3 23       		.byte	0x23
 1768 01a4 04       		.uleb128 0x4
 1769 01a5 0B       		.uleb128 0xb
 1770 01a6 A00B0000 		.4byte	.LASF27
 1771 01aa 06       		.byte	0x6
 1772 01ab 38       		.byte	0x38
 1773 01ac 45000000 		.4byte	0x45
 1774 01b0 02       		.byte	0x2
 1775 01b1 23       		.byte	0x23
 1776 01b2 08       		.uleb128 0x8
 1777 01b3 0B       		.uleb128 0xb
 1778 01b4 2F070000 		.4byte	.LASF28
 1779 01b8 06       		.byte	0x6
 1780 01b9 39       		.byte	0x39
 1781 01ba 45000000 		.4byte	0x45
 1782 01be 02       		.byte	0x2
 1783 01bf 23       		.byte	0x23
 1784 01c0 0C       		.uleb128 0xc
 1785 01c1 0B       		.uleb128 0xb
 1786 01c2 08020000 		.4byte	.LASF29
 1787 01c6 06       		.byte	0x6
 1788 01c7 3A       		.byte	0x3a
 1789 01c8 45000000 		.4byte	0x45
 1790 01cc 02       		.byte	0x2
 1791 01cd 23       		.byte	0x23
 1792 01ce 10       		.uleb128 0x10
 1793 01cf 0B       		.uleb128 0xb
 1794 01d0 920A0000 		.4byte	.LASF30
 1795 01d4 06       		.byte	0x6
 1796 01d5 3B       		.byte	0x3b
 1797 01d6 45000000 		.4byte	0x45
 1798 01da 02       		.byte	0x2
 1799 01db 23       		.byte	0x23
 1800 01dc 14       		.uleb128 0x14
 1801 01dd 0B       		.uleb128 0xb
 1802 01de A2070000 		.4byte	.LASF31
 1803 01e2 06       		.byte	0x6
 1804 01e3 3C       		.byte	0x3c
 1805 01e4 45000000 		.4byte	0x45
ARM GAS  /tmp/cctTTGYb.s 			page 68


 1806 01e8 02       		.byte	0x2
 1807 01e9 23       		.byte	0x23
 1808 01ea 18       		.uleb128 0x18
 1809 01eb 0B       		.uleb128 0xb
 1810 01ec AC070000 		.4byte	.LASF32
 1811 01f0 06       		.byte	0x6
 1812 01f1 3D       		.byte	0x3d
 1813 01f2 45000000 		.4byte	0x45
 1814 01f6 02       		.byte	0x2
 1815 01f7 23       		.byte	0x23
 1816 01f8 1C       		.uleb128 0x1c
 1817 01f9 0B       		.uleb128 0xb
 1818 01fa F50B0000 		.4byte	.LASF33
 1819 01fe 06       		.byte	0x6
 1820 01ff 3E       		.byte	0x3e
 1821 0200 45000000 		.4byte	0x45
 1822 0204 02       		.byte	0x2
 1823 0205 23       		.byte	0x23
 1824 0206 20       		.uleb128 0x20
 1825 0207 00       		.byte	0
 1826 0208 10       		.uleb128 0x10
 1827 0209 5C010000 		.4byte	.LASF34
 1828 020d 0801     		.2byte	0x108
 1829 020f 06       		.byte	0x6
 1830 0210 47       		.byte	0x47
 1831 0211 51020000 		.4byte	0x251
 1832 0215 0B       		.uleb128 0xb
 1833 0216 E50B0000 		.4byte	.LASF35
 1834 021a 06       		.byte	0x6
 1835 021b 48       		.byte	0x48
 1836 021c 51020000 		.4byte	0x251
 1837 0220 02       		.byte	0x2
 1838 0221 23       		.byte	0x23
 1839 0222 00       		.uleb128 0
 1840 0223 0B       		.uleb128 0xb
 1841 0224 41080000 		.4byte	.LASF36
 1842 0228 06       		.byte	0x6
 1843 0229 49       		.byte	0x49
 1844 022a 51020000 		.4byte	0x251
 1845 022e 03       		.byte	0x3
 1846 022f 23       		.byte	0x23
 1847 0230 8001     		.uleb128 0x80
 1848 0232 0B       		.uleb128 0xb
 1849 0233 780A0000 		.4byte	.LASF37
 1850 0237 06       		.byte	0x6
 1851 0238 4B       		.byte	0x4b
 1852 0239 F6000000 		.4byte	0xf6
 1853 023d 03       		.byte	0x3
 1854 023e 23       		.byte	0x23
 1855 023f 8002     		.uleb128 0x100
 1856 0241 0B       		.uleb128 0xb
 1857 0242 EB0A0000 		.4byte	.LASF38
 1858 0246 06       		.byte	0x6
 1859 0247 4E       		.byte	0x4e
 1860 0248 F6000000 		.4byte	0xf6
 1861 024c 03       		.byte	0x3
 1862 024d 23       		.byte	0x23
ARM GAS  /tmp/cctTTGYb.s 			page 69


 1863 024e 8402     		.uleb128 0x104
 1864 0250 00       		.byte	0
 1865 0251 08       		.uleb128 0x8
 1866 0252 F4000000 		.4byte	0xf4
 1867 0256 61020000 		.4byte	0x261
 1868 025a 09       		.uleb128 0x9
 1869 025b 4C000000 		.4byte	0x4c
 1870 025f 1F       		.byte	0x1f
 1871 0260 00       		.byte	0
 1872 0261 0D       		.uleb128 0xd
 1873 0262 8B070000 		.4byte	.LASF39
 1874 0266 8C       		.byte	0x8c
 1875 0267 06       		.byte	0x6
 1876 0268 52       		.byte	0x52
 1877 0269 A7020000 		.4byte	0x2a7
 1878 026d 0B       		.uleb128 0xb
 1879 026e 39090000 		.4byte	.LASF19
 1880 0272 06       		.byte	0x6
 1881 0273 53       		.byte	0x53
 1882 0274 A7020000 		.4byte	0x2a7
 1883 0278 02       		.byte	0x2
 1884 0279 23       		.byte	0x23
 1885 027a 00       		.uleb128 0
 1886 027b 0B       		.uleb128 0xb
 1887 027c B90A0000 		.4byte	.LASF40
 1888 0280 06       		.byte	0x6
 1889 0281 54       		.byte	0x54
 1890 0282 45000000 		.4byte	0x45
 1891 0286 02       		.byte	0x2
 1892 0287 23       		.byte	0x23
 1893 0288 04       		.uleb128 0x4
 1894 0289 0B       		.uleb128 0xb
 1895 028a 2E030000 		.4byte	.LASF41
 1896 028e 06       		.byte	0x6
 1897 028f 55       		.byte	0x55
 1898 0290 AD020000 		.4byte	0x2ad
 1899 0294 02       		.byte	0x2
 1900 0295 23       		.byte	0x23
 1901 0296 08       		.uleb128 0x8
 1902 0297 0B       		.uleb128 0xb
 1903 0298 09060000 		.4byte	.LASF42
 1904 029c 06       		.byte	0x6
 1905 029d 56       		.byte	0x56
 1906 029e C5020000 		.4byte	0x2c5
 1907 02a2 03       		.byte	0x3
 1908 02a3 23       		.byte	0x23
 1909 02a4 8801     		.uleb128 0x88
 1910 02a6 00       		.byte	0
 1911 02a7 0F       		.uleb128 0xf
 1912 02a8 04       		.byte	0x4
 1913 02a9 61020000 		.4byte	0x261
 1914 02ad 08       		.uleb128 0x8
 1915 02ae BF020000 		.4byte	0x2bf
 1916 02b2 BD020000 		.4byte	0x2bd
 1917 02b6 09       		.uleb128 0x9
 1918 02b7 4C000000 		.4byte	0x4c
 1919 02bb 1F       		.byte	0x1f
ARM GAS  /tmp/cctTTGYb.s 			page 70


 1920 02bc 00       		.byte	0
 1921 02bd 11       		.uleb128 0x11
 1922 02be 01       		.byte	0x1
 1923 02bf 0F       		.uleb128 0xf
 1924 02c0 04       		.byte	0x4
 1925 02c1 BD020000 		.4byte	0x2bd
 1926 02c5 0F       		.uleb128 0xf
 1927 02c6 04       		.byte	0x4
 1928 02c7 08020000 		.4byte	0x208
 1929 02cb 0D       		.uleb128 0xd
 1930 02cc E40A0000 		.4byte	.LASF43
 1931 02d0 08       		.byte	0x8
 1932 02d1 06       		.byte	0x6
 1933 02d2 69       		.byte	0x69
 1934 02d3 F4020000 		.4byte	0x2f4
 1935 02d7 0B       		.uleb128 0xb
 1936 02d8 8E080000 		.4byte	.LASF44
 1937 02dc 06       		.byte	0x6
 1938 02dd 6A       		.byte	0x6a
 1939 02de F4020000 		.4byte	0x2f4
 1940 02e2 02       		.byte	0x2
 1941 02e3 23       		.byte	0x23
 1942 02e4 00       		.uleb128 0
 1943 02e5 0B       		.uleb128 0xb
 1944 02e6 D2010000 		.4byte	.LASF45
 1945 02ea 06       		.byte	0x6
 1946 02eb 6B       		.byte	0x6b
 1947 02ec 45000000 		.4byte	0x45
 1948 02f0 02       		.byte	0x2
 1949 02f1 23       		.byte	0x23
 1950 02f2 04       		.uleb128 0x4
 1951 02f3 00       		.byte	0
 1952 02f4 0F       		.uleb128 0xf
 1953 02f5 04       		.byte	0x4
 1954 02f6 30000000 		.4byte	0x30
 1955 02fa 12       		.uleb128 0x12
 1956 02fb E7020000 		.4byte	.LASF46
 1957 02ff F0       		.byte	0xf0
 1958 0300 06       		.byte	0x6
 1959 0301 7B01     		.2byte	0x17b
 1960 0303 74040000 		.4byte	0x474
 1961 0307 13       		.uleb128 0x13
 1962 0308 5B050000 		.4byte	.LASF47
 1963 030c 06       		.byte	0x6
 1964 030d 7F01     		.2byte	0x17f
 1965 030f 45000000 		.4byte	0x45
 1966 0313 02       		.byte	0x2
 1967 0314 23       		.byte	0x23
 1968 0315 00       		.uleb128 0
 1969 0316 13       		.uleb128 0x13
 1970 0317 82030000 		.4byte	.LASF48
 1971 031b 06       		.byte	0x6
 1972 031c 8401     		.2byte	0x184
 1973 031e E3060000 		.4byte	0x6e3
 1974 0322 02       		.byte	0x2
 1975 0323 23       		.byte	0x23
 1976 0324 04       		.uleb128 0x4
ARM GAS  /tmp/cctTTGYb.s 			page 71


 1977 0325 13       		.uleb128 0x13
 1978 0326 71080000 		.4byte	.LASF49
 1979 032a 06       		.byte	0x6
 1980 032b 8401     		.2byte	0x184
 1981 032d E3060000 		.4byte	0x6e3
 1982 0331 02       		.byte	0x2
 1983 0332 23       		.byte	0x23
 1984 0333 08       		.uleb128 0x8
 1985 0334 13       		.uleb128 0x13
 1986 0335 52070000 		.4byte	.LASF50
 1987 0339 06       		.byte	0x6
 1988 033a 8401     		.2byte	0x184
 1989 033c E3060000 		.4byte	0x6e3
 1990 0340 02       		.byte	0x2
 1991 0341 23       		.byte	0x23
 1992 0342 0C       		.uleb128 0xc
 1993 0343 13       		.uleb128 0x13
 1994 0344 B40A0000 		.4byte	.LASF51
 1995 0348 06       		.byte	0x6
 1996 0349 8601     		.2byte	0x186
 1997 034b 45000000 		.4byte	0x45
 1998 034f 02       		.byte	0x2
 1999 0350 23       		.byte	0x23
 2000 0351 10       		.uleb128 0x10
 2001 0352 13       		.uleb128 0x13
 2002 0353 E8050000 		.4byte	.LASF52
 2003 0357 06       		.byte	0x6
 2004 0358 8801     		.2byte	0x188
 2005 035a F3050000 		.4byte	0x5f3
 2006 035e 02       		.byte	0x2
 2007 035f 23       		.byte	0x23
 2008 0360 14       		.uleb128 0x14
 2009 0361 13       		.uleb128 0x13
 2010 0362 1E050000 		.4byte	.LASF53
 2011 0366 06       		.byte	0x6
 2012 0367 8A01     		.2byte	0x18a
 2013 0369 45000000 		.4byte	0x45
 2014 036d 02       		.byte	0x2
 2015 036e 23       		.byte	0x23
 2016 036f 18       		.uleb128 0x18
 2017 0370 13       		.uleb128 0x13
 2018 0371 3B020000 		.4byte	.LASF54
 2019 0375 06       		.byte	0x6
 2020 0376 8C01     		.2byte	0x18c
 2021 0378 45000000 		.4byte	0x45
 2022 037c 02       		.byte	0x2
 2023 037d 23       		.byte	0x23
 2024 037e 1C       		.uleb128 0x1c
 2025 037f 13       		.uleb128 0x13
 2026 0380 A5060000 		.4byte	.LASF55
 2027 0384 06       		.byte	0x6
 2028 0385 8D01     		.2byte	0x18d
 2029 0387 25060000 		.4byte	0x625
 2030 038b 02       		.byte	0x2
 2031 038c 23       		.byte	0x23
 2032 038d 20       		.uleb128 0x20
 2033 038e 14       		.uleb128 0x14
ARM GAS  /tmp/cctTTGYb.s 			page 72


 2034 038f 5F6D7000 		.ascii	"_mp\000"
 2035 0393 06       		.byte	0x6
 2036 0394 8F01     		.2byte	0x18f
 2037 0396 56080000 		.4byte	0x856
 2038 039a 02       		.byte	0x2
 2039 039b 23       		.byte	0x23
 2040 039c 24       		.uleb128 0x24
 2041 039d 13       		.uleb128 0x13
 2042 039e C0050000 		.4byte	.LASF56
 2043 03a2 06       		.byte	0x6
 2044 03a3 9101     		.2byte	0x191
 2045 03a5 68080000 		.4byte	0x868
 2046 03a9 02       		.byte	0x2
 2047 03aa 23       		.byte	0x23
 2048 03ab 28       		.uleb128 0x28
 2049 03ac 13       		.uleb128 0x13
 2050 03ad 79060000 		.4byte	.LASF57
 2051 03b1 06       		.byte	0x6
 2052 03b2 9301     		.2byte	0x193
 2053 03b4 45000000 		.4byte	0x45
 2054 03b8 02       		.byte	0x2
 2055 03b9 23       		.byte	0x23
 2056 03ba 2C       		.uleb128 0x2c
 2057 03bb 13       		.uleb128 0x13
 2058 03bc 69000000 		.4byte	.LASF58
 2059 03c0 06       		.byte	0x6
 2060 03c1 9601     		.2byte	0x196
 2061 03c3 45000000 		.4byte	0x45
 2062 03c7 02       		.byte	0x2
 2063 03c8 23       		.byte	0x23
 2064 03c9 30       		.uleb128 0x30
 2065 03ca 13       		.uleb128 0x13
 2066 03cb 40040000 		.4byte	.LASF59
 2067 03cf 06       		.byte	0x6
 2068 03d0 9701     		.2byte	0x197
 2069 03d2 F3050000 		.4byte	0x5f3
 2070 03d6 02       		.byte	0x2
 2071 03d7 23       		.byte	0x23
 2072 03d8 34       		.uleb128 0x34
 2073 03d9 13       		.uleb128 0x13
 2074 03da 0C090000 		.4byte	.LASF60
 2075 03de 06       		.byte	0x6
 2076 03df 9901     		.2byte	0x199
 2077 03e1 6E080000 		.4byte	0x86e
 2078 03e5 02       		.byte	0x2
 2079 03e6 23       		.byte	0x23
 2080 03e7 38       		.uleb128 0x38
 2081 03e8 13       		.uleb128 0x13
 2082 03e9 DE010000 		.4byte	.LASF61
 2083 03ed 06       		.byte	0x6
 2084 03ee 9A01     		.2byte	0x19a
 2085 03f0 74080000 		.4byte	0x874
 2086 03f4 02       		.byte	0x2
 2087 03f5 23       		.byte	0x23
 2088 03f6 3C       		.uleb128 0x3c
 2089 03f7 13       		.uleb128 0x13
 2090 03f8 5C000000 		.4byte	.LASF62
ARM GAS  /tmp/cctTTGYb.s 			page 73


 2091 03fc 06       		.byte	0x6
 2092 03fd 9B01     		.2byte	0x19b
 2093 03ff F3050000 		.4byte	0x5f3
 2094 0403 02       		.byte	0x2
 2095 0404 23       		.byte	0x23
 2096 0405 40       		.uleb128 0x40
 2097 0406 13       		.uleb128 0x13
 2098 0407 2E040000 		.4byte	.LASF63
 2099 040b 06       		.byte	0x6
 2100 040c 9E01     		.2byte	0x19e
 2101 040e 86080000 		.4byte	0x886
 2102 0412 02       		.byte	0x2
 2103 0413 23       		.byte	0x23
 2104 0414 44       		.uleb128 0x44
 2105 0415 13       		.uleb128 0x13
 2106 0416 8B070000 		.4byte	.LASF39
 2107 041a 06       		.byte	0x6
 2108 041b A101     		.2byte	0x1a1
 2109 041d A7020000 		.4byte	0x2a7
 2110 0421 02       		.byte	0x2
 2111 0422 23       		.byte	0x23
 2112 0423 48       		.uleb128 0x48
 2113 0424 13       		.uleb128 0x13
 2114 0425 DF050000 		.4byte	.LASF64
 2115 0429 06       		.byte	0x6
 2116 042a A201     		.2byte	0x1a2
 2117 042c 61020000 		.4byte	0x261
 2118 0430 02       		.byte	0x2
 2119 0431 23       		.byte	0x23
 2120 0432 4C       		.uleb128 0x4c
 2121 0433 13       		.uleb128 0x13
 2122 0434 4A060000 		.4byte	.LASF65
 2123 0438 06       		.byte	0x6
 2124 0439 A401     		.2byte	0x1a4
 2125 043b A2060000 		.4byte	0x6a2
 2126 043f 03       		.byte	0x3
 2127 0440 23       		.byte	0x23
 2128 0441 D801     		.uleb128 0xd8
 2129 0443 13       		.uleb128 0x13
 2130 0444 32000000 		.4byte	.LASF66
 2131 0448 06       		.byte	0x6
 2132 0449 A501     		.2byte	0x1a5
 2133 044b E3060000 		.4byte	0x6e3
 2134 044f 03       		.byte	0x3
 2135 0450 23       		.byte	0x23
 2136 0451 E401     		.uleb128 0xe4
 2137 0453 13       		.uleb128 0x13
 2138 0454 190B0000 		.4byte	.LASF67
 2139 0458 06       		.byte	0x6
 2140 0459 A601     		.2byte	0x1a6
 2141 045b 92080000 		.4byte	0x892
 2142 045f 03       		.byte	0x3
 2143 0460 23       		.byte	0x23
 2144 0461 E801     		.uleb128 0xe8
 2145 0463 13       		.uleb128 0x13
 2146 0464 6A050000 		.4byte	.LASF68
 2147 0468 06       		.byte	0x6
ARM GAS  /tmp/cctTTGYb.s 			page 74


 2148 0469 A701     		.2byte	0x1a7
 2149 046b F3050000 		.4byte	0x5f3
 2150 046f 03       		.byte	0x3
 2151 0470 23       		.byte	0x23
 2152 0471 EC01     		.uleb128 0xec
 2153 0473 00       		.byte	0
 2154 0474 0F       		.uleb128 0xf
 2155 0475 04       		.byte	0x4
 2156 0476 FA020000 		.4byte	0x2fa
 2157 047a 0D       		.uleb128 0xd
 2158 047b 16050000 		.4byte	.LASF69
 2159 047f 68       		.byte	0x68
 2160 0480 06       		.byte	0x6
 2161 0481 B3       		.byte	0xb3
 2162 0482 D4050000 		.4byte	0x5d4
 2163 0486 0E       		.uleb128 0xe
 2164 0487 5F7000   		.ascii	"_p\000"
 2165 048a 06       		.byte	0x6
 2166 048b B4       		.byte	0xb4
 2167 048c F4020000 		.4byte	0x2f4
 2168 0490 02       		.byte	0x2
 2169 0491 23       		.byte	0x23
 2170 0492 00       		.uleb128 0
 2171 0493 0E       		.uleb128 0xe
 2172 0494 5F7200   		.ascii	"_r\000"
 2173 0497 06       		.byte	0x6
 2174 0498 B5       		.byte	0xb5
 2175 0499 45000000 		.4byte	0x45
 2176 049d 02       		.byte	0x2
 2177 049e 23       		.byte	0x23
 2178 049f 04       		.uleb128 0x4
 2179 04a0 0E       		.uleb128 0xe
 2180 04a1 5F7700   		.ascii	"_w\000"
 2181 04a4 06       		.byte	0x6
 2182 04a5 B6       		.byte	0xb6
 2183 04a6 45000000 		.4byte	0x45
 2184 04aa 02       		.byte	0x2
 2185 04ab 23       		.byte	0x23
 2186 04ac 08       		.uleb128 0x8
 2187 04ad 0B       		.uleb128 0xb
 2188 04ae 7C070000 		.4byte	.LASF70
 2189 04b2 06       		.byte	0x6
 2190 04b3 B7       		.byte	0xb7
 2191 04b4 37000000 		.4byte	0x37
 2192 04b8 02       		.byte	0x2
 2193 04b9 23       		.byte	0x23
 2194 04ba 0C       		.uleb128 0xc
 2195 04bb 0B       		.uleb128 0xb
 2196 04bc 56010000 		.4byte	.LASF71
 2197 04c0 06       		.byte	0x6
 2198 04c1 B8       		.byte	0xb8
 2199 04c2 37000000 		.4byte	0x37
 2200 04c6 02       		.byte	0x2
 2201 04c7 23       		.byte	0x23
 2202 04c8 0E       		.uleb128 0xe
 2203 04c9 0E       		.uleb128 0xe
 2204 04ca 5F626600 		.ascii	"_bf\000"
ARM GAS  /tmp/cctTTGYb.s 			page 75


 2205 04ce 06       		.byte	0x6
 2206 04cf B9       		.byte	0xb9
 2207 04d0 CB020000 		.4byte	0x2cb
 2208 04d4 02       		.byte	0x2
 2209 04d5 23       		.byte	0x23
 2210 04d6 10       		.uleb128 0x10
 2211 04d7 0B       		.uleb128 0xb
 2212 04d8 AB0A0000 		.4byte	.LASF72
 2213 04dc 06       		.byte	0x6
 2214 04dd BA       		.byte	0xba
 2215 04de 45000000 		.4byte	0x45
 2216 04e2 02       		.byte	0x2
 2217 04e3 23       		.byte	0x23
 2218 04e4 18       		.uleb128 0x18
 2219 04e5 0B       		.uleb128 0xb
 2220 04e6 3F090000 		.4byte	.LASF73
 2221 04ea 06       		.byte	0x6
 2222 04eb BD       		.byte	0xbd
 2223 04ec 74040000 		.4byte	0x474
 2224 04f0 02       		.byte	0x2
 2225 04f1 23       		.byte	0x23
 2226 04f2 1C       		.uleb128 0x1c
 2227 04f3 0B       		.uleb128 0xb
 2228 04f4 0F040000 		.4byte	.LASF74
 2229 04f8 06       		.byte	0x6
 2230 04f9 C1       		.byte	0xc1
 2231 04fa F4000000 		.4byte	0xf4
 2232 04fe 02       		.byte	0x2
 2233 04ff 23       		.byte	0x23
 2234 0500 20       		.uleb128 0x20
 2235 0501 0B       		.uleb128 0xb
 2236 0502 3C000000 		.4byte	.LASF75
 2237 0506 06       		.byte	0x6
 2238 0507 C3       		.byte	0xc3
 2239 0508 00060000 		.4byte	0x600
 2240 050c 02       		.byte	0x2
 2241 050d 23       		.byte	0x23
 2242 050e 24       		.uleb128 0x24
 2243 050f 0B       		.uleb128 0xb
 2244 0510 55000000 		.4byte	.LASF76
 2245 0514 06       		.byte	0x6
 2246 0515 C5       		.byte	0xc5
 2247 0516 30060000 		.4byte	0x630
 2248 051a 02       		.byte	0x2
 2249 051b 23       		.byte	0x23
 2250 051c 28       		.uleb128 0x28
 2251 051d 0B       		.uleb128 0xb
 2252 051e BC070000 		.4byte	.LASF77
 2253 0522 06       		.byte	0x6
 2254 0523 C7       		.byte	0xc7
 2255 0524 55060000 		.4byte	0x655
 2256 0528 02       		.byte	0x2
 2257 0529 23       		.byte	0x23
 2258 052a 2C       		.uleb128 0x2c
 2259 052b 0B       		.uleb128 0xb
 2260 052c 4A030000 		.4byte	.LASF78
 2261 0530 06       		.byte	0x6
ARM GAS  /tmp/cctTTGYb.s 			page 76


 2262 0531 C8       		.byte	0xc8
 2263 0532 70060000 		.4byte	0x670
 2264 0536 02       		.byte	0x2
 2265 0537 23       		.byte	0x23
 2266 0538 30       		.uleb128 0x30
 2267 0539 0E       		.uleb128 0xe
 2268 053a 5F756200 		.ascii	"_ub\000"
 2269 053e 06       		.byte	0x6
 2270 053f CB       		.byte	0xcb
 2271 0540 CB020000 		.4byte	0x2cb
 2272 0544 02       		.byte	0x2
 2273 0545 23       		.byte	0x23
 2274 0546 34       		.uleb128 0x34
 2275 0547 0E       		.uleb128 0xe
 2276 0548 5F757000 		.ascii	"_up\000"
 2277 054c 06       		.byte	0x6
 2278 054d CC       		.byte	0xcc
 2279 054e F4020000 		.4byte	0x2f4
 2280 0552 02       		.byte	0x2
 2281 0553 23       		.byte	0x23
 2282 0554 3C       		.uleb128 0x3c
 2283 0555 0E       		.uleb128 0xe
 2284 0556 5F757200 		.ascii	"_ur\000"
 2285 055a 06       		.byte	0x6
 2286 055b CD       		.byte	0xcd
 2287 055c 45000000 		.4byte	0x45
 2288 0560 02       		.byte	0x2
 2289 0561 23       		.byte	0x23
 2290 0562 40       		.uleb128 0x40
 2291 0563 0B       		.uleb128 0xb
 2292 0564 41070000 		.4byte	.LASF79
 2293 0568 06       		.byte	0x6
 2294 0569 D0       		.byte	0xd0
 2295 056a 76060000 		.4byte	0x676
 2296 056e 02       		.byte	0x2
 2297 056f 23       		.byte	0x23
 2298 0570 44       		.uleb128 0x44
 2299 0571 0B       		.uleb128 0xb
 2300 0572 A7000000 		.4byte	.LASF80
 2301 0576 06       		.byte	0x6
 2302 0577 D1       		.byte	0xd1
 2303 0578 86060000 		.4byte	0x686
 2304 057c 02       		.byte	0x2
 2305 057d 23       		.byte	0x23
 2306 057e 47       		.uleb128 0x47
 2307 057f 0E       		.uleb128 0xe
 2308 0580 5F6C6200 		.ascii	"_lb\000"
 2309 0584 06       		.byte	0x6
 2310 0585 D4       		.byte	0xd4
 2311 0586 CB020000 		.4byte	0x2cb
 2312 058a 02       		.byte	0x2
 2313 058b 23       		.byte	0x23
 2314 058c 48       		.uleb128 0x48
 2315 058d 0B       		.uleb128 0xb
 2316 058e 85080000 		.4byte	.LASF81
 2317 0592 06       		.byte	0x6
 2318 0593 D7       		.byte	0xd7
ARM GAS  /tmp/cctTTGYb.s 			page 77


 2319 0594 45000000 		.4byte	0x45
 2320 0598 02       		.byte	0x2
 2321 0599 23       		.byte	0x23
 2322 059a 50       		.uleb128 0x50
 2323 059b 0B       		.uleb128 0xb
 2324 059c 38040000 		.4byte	.LASF82
 2325 05a0 06       		.byte	0x6
 2326 05a1 D8       		.byte	0xd8
 2327 05a2 45000000 		.4byte	0x45
 2328 05a6 02       		.byte	0x2
 2329 05a7 23       		.byte	0x23
 2330 05a8 54       		.uleb128 0x54
 2331 05a9 0B       		.uleb128 0xb
 2332 05aa D3000000 		.4byte	.LASF83
 2333 05ae 06       		.byte	0x6
 2334 05af DF       		.byte	0xdf
 2335 05b0 E9000000 		.4byte	0xe9
 2336 05b4 02       		.byte	0x2
 2337 05b5 23       		.byte	0x23
 2338 05b6 58       		.uleb128 0x58
 2339 05b7 0B       		.uleb128 0xb
 2340 05b8 68070000 		.4byte	.LASF84
 2341 05bc 06       		.byte	0x6
 2342 05bd E1       		.byte	0xe1
 2343 05be DE000000 		.4byte	0xde
 2344 05c2 02       		.byte	0x2
 2345 05c3 23       		.byte	0x23
 2346 05c4 5C       		.uleb128 0x5c
 2347 05c5 0B       		.uleb128 0xb
 2348 05c6 29050000 		.4byte	.LASF85
 2349 05ca 06       		.byte	0x6
 2350 05cb E2       		.byte	0xe2
 2351 05cc 45000000 		.4byte	0x45
 2352 05d0 02       		.byte	0x2
 2353 05d1 23       		.byte	0x23
 2354 05d2 64       		.uleb128 0x64
 2355 05d3 00       		.byte	0
 2356 05d4 15       		.uleb128 0x15
 2357 05d5 01       		.byte	0x1
 2358 05d6 45000000 		.4byte	0x45
 2359 05da F3050000 		.4byte	0x5f3
 2360 05de 16       		.uleb128 0x16
 2361 05df 74040000 		.4byte	0x474
 2362 05e3 16       		.uleb128 0x16
 2363 05e4 F4000000 		.4byte	0xf4
 2364 05e8 16       		.uleb128 0x16
 2365 05e9 F3050000 		.4byte	0x5f3
 2366 05ed 16       		.uleb128 0x16
 2367 05ee 45000000 		.4byte	0x45
 2368 05f2 00       		.byte	0
 2369 05f3 0F       		.uleb128 0xf
 2370 05f4 04       		.byte	0x4
 2371 05f5 F9050000 		.4byte	0x5f9
 2372 05f9 02       		.uleb128 0x2
 2373 05fa 01       		.byte	0x1
 2374 05fb 08       		.byte	0x8
 2375 05fc 29030000 		.4byte	.LASF86
ARM GAS  /tmp/cctTTGYb.s 			page 78


 2376 0600 0F       		.uleb128 0xf
 2377 0601 04       		.byte	0x4
 2378 0602 D4050000 		.4byte	0x5d4
 2379 0606 15       		.uleb128 0x15
 2380 0607 01       		.byte	0x1
 2381 0608 45000000 		.4byte	0x45
 2382 060c 25060000 		.4byte	0x625
 2383 0610 16       		.uleb128 0x16
 2384 0611 74040000 		.4byte	0x474
 2385 0615 16       		.uleb128 0x16
 2386 0616 F4000000 		.4byte	0xf4
 2387 061a 16       		.uleb128 0x16
 2388 061b 25060000 		.4byte	0x625
 2389 061f 16       		.uleb128 0x16
 2390 0620 45000000 		.4byte	0x45
 2391 0624 00       		.byte	0
 2392 0625 0F       		.uleb128 0xf
 2393 0626 04       		.byte	0x4
 2394 0627 2B060000 		.4byte	0x62b
 2395 062b 17       		.uleb128 0x17
 2396 062c F9050000 		.4byte	0x5f9
 2397 0630 0F       		.uleb128 0xf
 2398 0631 04       		.byte	0x4
 2399 0632 06060000 		.4byte	0x606
 2400 0636 15       		.uleb128 0x15
 2401 0637 01       		.byte	0x1
 2402 0638 73000000 		.4byte	0x73
 2403 063c 55060000 		.4byte	0x655
 2404 0640 16       		.uleb128 0x16
 2405 0641 74040000 		.4byte	0x474
 2406 0645 16       		.uleb128 0x16
 2407 0646 F4000000 		.4byte	0xf4
 2408 064a 16       		.uleb128 0x16
 2409 064b 73000000 		.4byte	0x73
 2410 064f 16       		.uleb128 0x16
 2411 0650 45000000 		.4byte	0x45
 2412 0654 00       		.byte	0
 2413 0655 0F       		.uleb128 0xf
 2414 0656 04       		.byte	0x4
 2415 0657 36060000 		.4byte	0x636
 2416 065b 15       		.uleb128 0x15
 2417 065c 01       		.byte	0x1
 2418 065d 45000000 		.4byte	0x45
 2419 0661 70060000 		.4byte	0x670
 2420 0665 16       		.uleb128 0x16
 2421 0666 74040000 		.4byte	0x474
 2422 066a 16       		.uleb128 0x16
 2423 066b F4000000 		.4byte	0xf4
 2424 066f 00       		.byte	0
 2425 0670 0F       		.uleb128 0xf
 2426 0671 04       		.byte	0x4
 2427 0672 5B060000 		.4byte	0x65b
 2428 0676 08       		.uleb128 0x8
 2429 0677 30000000 		.4byte	0x30
 2430 067b 86060000 		.4byte	0x686
 2431 067f 09       		.uleb128 0x9
 2432 0680 4C000000 		.4byte	0x4c
ARM GAS  /tmp/cctTTGYb.s 			page 79


 2433 0684 02       		.byte	0x2
 2434 0685 00       		.byte	0
 2435 0686 08       		.uleb128 0x8
 2436 0687 30000000 		.4byte	0x30
 2437 068b 96060000 		.4byte	0x696
 2438 068f 09       		.uleb128 0x9
 2439 0690 4C000000 		.4byte	0x4c
 2440 0694 00       		.byte	0
 2441 0695 00       		.byte	0
 2442 0696 05       		.uleb128 0x5
 2443 0697 EF080000 		.4byte	.LASF87
 2444 069b 06       		.byte	0x6
 2445 069c 1E01     		.2byte	0x11e
 2446 069e 7A040000 		.4byte	0x47a
 2447 06a2 12       		.uleb128 0x12
 2448 06a3 C5060000 		.4byte	.LASF88
 2449 06a7 0C       		.byte	0xc
 2450 06a8 06       		.byte	0x6
 2451 06a9 2201     		.2byte	0x122
 2452 06ab DD060000 		.4byte	0x6dd
 2453 06af 13       		.uleb128 0x13
 2454 06b0 39090000 		.4byte	.LASF19
 2455 06b4 06       		.byte	0x6
 2456 06b5 2401     		.2byte	0x124
 2457 06b7 DD060000 		.4byte	0x6dd
 2458 06bb 02       		.byte	0x2
 2459 06bc 23       		.byte	0x23
 2460 06bd 00       		.uleb128 0
 2461 06be 13       		.uleb128 0x13
 2462 06bf 39060000 		.4byte	.LASF89
 2463 06c3 06       		.byte	0x6
 2464 06c4 2501     		.2byte	0x125
 2465 06c6 45000000 		.4byte	0x45
 2466 06ca 02       		.byte	0x2
 2467 06cb 23       		.byte	0x23
 2468 06cc 04       		.uleb128 0x4
 2469 06cd 13       		.uleb128 0x13
 2470 06ce BF060000 		.4byte	.LASF90
 2471 06d2 06       		.byte	0x6
 2472 06d3 2601     		.2byte	0x126
 2473 06d5 E3060000 		.4byte	0x6e3
 2474 06d9 02       		.byte	0x2
 2475 06da 23       		.byte	0x23
 2476 06db 08       		.uleb128 0x8
 2477 06dc 00       		.byte	0
 2478 06dd 0F       		.uleb128 0xf
 2479 06de 04       		.byte	0x4
 2480 06df A2060000 		.4byte	0x6a2
 2481 06e3 0F       		.uleb128 0xf
 2482 06e4 04       		.byte	0x4
 2483 06e5 96060000 		.4byte	0x696
 2484 06e9 12       		.uleb128 0x12
 2485 06ea 56080000 		.4byte	.LASF91
 2486 06ee 18       		.byte	0x18
 2487 06ef 06       		.byte	0x6
 2488 06f0 3E01     		.2byte	0x13e
 2489 06f2 33070000 		.4byte	0x733
ARM GAS  /tmp/cctTTGYb.s 			page 80


 2490 06f6 13       		.uleb128 0x13
 2491 06f7 B6070000 		.4byte	.LASF92
 2492 06fb 06       		.byte	0x6
 2493 06fc 3F01     		.2byte	0x13f
 2494 06fe 33070000 		.4byte	0x733
 2495 0702 02       		.byte	0x2
 2496 0703 23       		.byte	0x23
 2497 0704 00       		.uleb128 0
 2498 0705 13       		.uleb128 0x13
 2499 0706 FC000000 		.4byte	.LASF93
 2500 070a 06       		.byte	0x6
 2501 070b 4001     		.2byte	0x140
 2502 070d 33070000 		.4byte	0x733
 2503 0711 02       		.byte	0x2
 2504 0712 23       		.byte	0x23
 2505 0713 06       		.uleb128 0x6
 2506 0714 13       		.uleb128 0x13
 2507 0715 7F0B0000 		.4byte	.LASF94
 2508 0719 06       		.byte	0x6
 2509 071a 4101     		.2byte	0x141
 2510 071c 3E000000 		.4byte	0x3e
 2511 0720 02       		.byte	0x2
 2512 0721 23       		.byte	0x23
 2513 0722 0C       		.uleb128 0xc
 2514 0723 13       		.uleb128 0x13
 2515 0724 71070000 		.4byte	.LASF95
 2516 0728 06       		.byte	0x6
 2517 0729 4401     		.2byte	0x144
 2518 072b 5A000000 		.4byte	0x5a
 2519 072f 02       		.byte	0x2
 2520 0730 23       		.byte	0x23
 2521 0731 10       		.uleb128 0x10
 2522 0732 00       		.byte	0
 2523 0733 08       		.uleb128 0x8
 2524 0734 3E000000 		.4byte	0x3e
 2525 0738 43070000 		.4byte	0x743
 2526 073c 09       		.uleb128 0x9
 2527 073d 4C000000 		.4byte	0x4c
 2528 0741 02       		.byte	0x2
 2529 0742 00       		.byte	0
 2530 0743 12       		.uleb128 0x12
 2531 0744 0B0B0000 		.4byte	.LASF96
 2532 0748 10       		.byte	0x10
 2533 0749 06       		.byte	0x6
 2534 074a 5F01     		.2byte	0x15f
 2535 074c 8D070000 		.4byte	0x78d
 2536 0750 13       		.uleb128 0x13
 2537 0751 560B0000 		.4byte	.LASF97
 2538 0755 06       		.byte	0x6
 2539 0756 6201     		.2byte	0x162
 2540 0758 67010000 		.4byte	0x167
 2541 075c 02       		.byte	0x2
 2542 075d 23       		.byte	0x23
 2543 075e 00       		.uleb128 0
 2544 075f 13       		.uleb128 0x13
 2545 0760 BF010000 		.4byte	.LASF98
 2546 0764 06       		.byte	0x6
ARM GAS  /tmp/cctTTGYb.s 			page 81


 2547 0765 6301     		.2byte	0x163
 2548 0767 45000000 		.4byte	0x45
 2549 076b 02       		.byte	0x2
 2550 076c 23       		.byte	0x23
 2551 076d 04       		.uleb128 0x4
 2552 076e 13       		.uleb128 0x13
 2553 076f CD040000 		.4byte	.LASF99
 2554 0773 06       		.byte	0x6
 2555 0774 6401     		.2byte	0x164
 2556 0776 67010000 		.4byte	0x167
 2557 077a 02       		.byte	0x2
 2558 077b 23       		.byte	0x23
 2559 077c 08       		.uleb128 0x8
 2560 077d 13       		.uleb128 0x13
 2561 077e B5060000 		.4byte	.LASF100
 2562 0782 06       		.byte	0x6
 2563 0783 6501     		.2byte	0x165
 2564 0785 8D070000 		.4byte	0x78d
 2565 0789 02       		.byte	0x2
 2566 078a 23       		.byte	0x23
 2567 078b 0C       		.uleb128 0xc
 2568 078c 00       		.byte	0
 2569 078d 0F       		.uleb128 0xf
 2570 078e 04       		.byte	0x4
 2571 078f 67010000 		.4byte	0x167
 2572 0793 12       		.uleb128 0x12
 2573 0794 22020000 		.4byte	.LASF101
 2574 0798 50       		.byte	0x50
 2575 0799 06       		.byte	0x6
 2576 079a 6901     		.2byte	0x169
 2577 079c 46080000 		.4byte	0x846
 2578 07a0 13       		.uleb128 0x13
 2579 07a1 A3080000 		.4byte	.LASF102
 2580 07a5 06       		.byte	0x6
 2581 07a6 6C01     		.2byte	0x16c
 2582 07a8 F3050000 		.4byte	0x5f3
 2583 07ac 02       		.byte	0x2
 2584 07ad 23       		.byte	0x23
 2585 07ae 00       		.uleb128 0
 2586 07af 13       		.uleb128 0x13
 2587 07b0 350A0000 		.4byte	.LASF103
 2588 07b4 06       		.byte	0x6
 2589 07b5 6D01     		.2byte	0x16d
 2590 07b7 DE000000 		.4byte	0xde
 2591 07bb 02       		.byte	0x2
 2592 07bc 23       		.byte	0x23
 2593 07bd 04       		.uleb128 0x4
 2594 07be 13       		.uleb128 0x13
 2595 07bf 5A070000 		.4byte	.LASF104
 2596 07c3 06       		.byte	0x6
 2597 07c4 6E01     		.2byte	0x16e
 2598 07c6 DE000000 		.4byte	0xde
 2599 07ca 02       		.byte	0x2
 2600 07cb 23       		.byte	0x23
 2601 07cc 0C       		.uleb128 0xc
 2602 07cd 13       		.uleb128 0x13
 2603 07ce FB070000 		.4byte	.LASF105
ARM GAS  /tmp/cctTTGYb.s 			page 82


 2604 07d2 06       		.byte	0x6
 2605 07d3 6F01     		.2byte	0x16f
 2606 07d5 DE000000 		.4byte	0xde
 2607 07d9 02       		.byte	0x2
 2608 07da 23       		.byte	0x23
 2609 07db 14       		.uleb128 0x14
 2610 07dc 13       		.uleb128 0x13
 2611 07dd B6000000 		.4byte	.LASF106
 2612 07e1 06       		.byte	0x6
 2613 07e2 7001     		.2byte	0x170
 2614 07e4 46080000 		.4byte	0x846
 2615 07e8 02       		.byte	0x2
 2616 07e9 23       		.byte	0x23
 2617 07ea 1C       		.uleb128 0x1c
 2618 07eb 13       		.uleb128 0x13
 2619 07ec 1C0C0000 		.4byte	.LASF107
 2620 07f0 06       		.byte	0x6
 2621 07f1 7101     		.2byte	0x171
 2622 07f3 45000000 		.4byte	0x45
 2623 07f7 02       		.byte	0x2
 2624 07f8 23       		.byte	0x23
 2625 07f9 24       		.uleb128 0x24
 2626 07fa 13       		.uleb128 0x13
 2627 07fb 9C010000 		.4byte	.LASF108
 2628 07ff 06       		.byte	0x6
 2629 0800 7201     		.2byte	0x172
 2630 0802 DE000000 		.4byte	0xde
 2631 0806 02       		.byte	0x2
 2632 0807 23       		.byte	0x23
 2633 0808 28       		.uleb128 0x28
 2634 0809 13       		.uleb128 0x13
 2635 080a B9080000 		.4byte	.LASF109
 2636 080e 06       		.byte	0x6
 2637 080f 7301     		.2byte	0x173
 2638 0811 DE000000 		.4byte	0xde
 2639 0815 02       		.byte	0x2
 2640 0816 23       		.byte	0x23
 2641 0817 30       		.uleb128 0x30
 2642 0818 13       		.uleb128 0x13
 2643 0819 B60B0000 		.4byte	.LASF110
 2644 081d 06       		.byte	0x6
 2645 081e 7401     		.2byte	0x174
 2646 0820 DE000000 		.4byte	0xde
 2647 0824 02       		.byte	0x2
 2648 0825 23       		.byte	0x23
 2649 0826 38       		.uleb128 0x38
 2650 0827 13       		.uleb128 0x13
 2651 0828 20070000 		.4byte	.LASF111
 2652 082c 06       		.byte	0x6
 2653 082d 7501     		.2byte	0x175
 2654 082f DE000000 		.4byte	0xde
 2655 0833 02       		.byte	0x2
 2656 0834 23       		.byte	0x23
 2657 0835 40       		.uleb128 0x40
 2658 0836 13       		.uleb128 0x13
 2659 0837 96000000 		.4byte	.LASF112
 2660 083b 06       		.byte	0x6
ARM GAS  /tmp/cctTTGYb.s 			page 83


 2661 083c 7601     		.2byte	0x176
 2662 083e DE000000 		.4byte	0xde
 2663 0842 02       		.byte	0x2
 2664 0843 23       		.byte	0x23
 2665 0844 48       		.uleb128 0x48
 2666 0845 00       		.byte	0
 2667 0846 08       		.uleb128 0x8
 2668 0847 F9050000 		.4byte	0x5f9
 2669 084b 56080000 		.4byte	0x856
 2670 084f 09       		.uleb128 0x9
 2671 0850 4C000000 		.4byte	0x4c
 2672 0854 07       		.byte	0x7
 2673 0855 00       		.byte	0
 2674 0856 0F       		.uleb128 0xf
 2675 0857 04       		.byte	0x4
 2676 0858 43070000 		.4byte	0x743
 2677 085c 18       		.uleb128 0x18
 2678 085d 01       		.byte	0x1
 2679 085e 68080000 		.4byte	0x868
 2680 0862 16       		.uleb128 0x16
 2681 0863 74040000 		.4byte	0x474
 2682 0867 00       		.byte	0
 2683 0868 0F       		.uleb128 0xf
 2684 0869 04       		.byte	0x4
 2685 086a 5C080000 		.4byte	0x85c
 2686 086e 0F       		.uleb128 0xf
 2687 086f 04       		.byte	0x4
 2688 0870 E9060000 		.4byte	0x6e9
 2689 0874 0F       		.uleb128 0xf
 2690 0875 04       		.byte	0x4
 2691 0876 7D010000 		.4byte	0x17d
 2692 087a 18       		.uleb128 0x18
 2693 087b 01       		.byte	0x1
 2694 087c 86080000 		.4byte	0x886
 2695 0880 16       		.uleb128 0x16
 2696 0881 45000000 		.4byte	0x45
 2697 0885 00       		.byte	0
 2698 0886 0F       		.uleb128 0xf
 2699 0887 04       		.byte	0x4
 2700 0888 8C080000 		.4byte	0x88c
 2701 088c 0F       		.uleb128 0xf
 2702 088d 04       		.byte	0x4
 2703 088e 7A080000 		.4byte	0x87a
 2704 0892 0F       		.uleb128 0xf
 2705 0893 04       		.byte	0x4
 2706 0894 93070000 		.4byte	0x793
 2707 0898 04       		.uleb128 0x4
 2708 0899 5E020000 		.4byte	.LASF113
 2709 089d 07       		.byte	0x7
 2710 089e 2A       		.byte	0x2a
 2711 089f 30000000 		.4byte	0x30
 2712 08a3 04       		.uleb128 0x4
 2713 08a4 5A0A0000 		.4byte	.LASF114
 2714 08a8 07       		.byte	0x7
 2715 08a9 35       		.byte	0x35
 2716 08aa 37000000 		.4byte	0x37
 2717 08ae 04       		.uleb128 0x4
ARM GAS  /tmp/cctTTGYb.s 			page 84


 2718 08af 38080000 		.4byte	.LASF115
 2719 08b3 07       		.byte	0x7
 2720 08b4 36       		.byte	0x36
 2721 08b5 3E000000 		.4byte	0x3e
 2722 08b9 04       		.uleb128 0x4
 2723 08ba 430B0000 		.4byte	.LASF116
 2724 08be 07       		.byte	0x7
 2725 08bf 50       		.byte	0x50
 2726 08c0 01010000 		.4byte	0x101
 2727 08c4 17       		.uleb128 0x17
 2728 08c5 C9080000 		.4byte	0x8c9
 2729 08c9 19       		.uleb128 0x19
 2730 08ca B9080000 		.4byte	0x8b9
 2731 08ce 19       		.uleb128 0x19
 2732 08cf B9080000 		.4byte	0x8b9
 2733 08d3 1A       		.uleb128 0x1a
 2734 08d4 FA010000 		.4byte	.LASF319
 2735 08d8 01       		.byte	0x1
 2736 08d9 08       		.byte	0x8
 2737 08da 49       		.byte	0x49
 2738 08db D0090000 		.4byte	0x9d0
 2739 08df 1B       		.uleb128 0x1b
 2740 08e0 A0040000 		.4byte	.LASF117
 2741 08e4 72       		.sleb128 -14
 2742 08e5 1B       		.uleb128 0x1b
 2743 08e6 F9040000 		.4byte	.LASF118
 2744 08ea 74       		.sleb128 -12
 2745 08eb 1B       		.uleb128 0x1b
 2746 08ec CA050000 		.4byte	.LASF119
 2747 08f0 75       		.sleb128 -11
 2748 08f1 1B       		.uleb128 0x1b
 2749 08f2 07030000 		.4byte	.LASF120
 2750 08f6 76       		.sleb128 -10
 2751 08f7 1B       		.uleb128 0x1b
 2752 08f8 6D060000 		.4byte	.LASF121
 2753 08fc 7B       		.sleb128 -5
 2754 08fd 1B       		.uleb128 0x1b
 2755 08fe CB090000 		.4byte	.LASF122
 2756 0902 7C       		.sleb128 -4
 2757 0903 1B       		.uleb128 0x1b
 2758 0904 AA0B0000 		.4byte	.LASF123
 2759 0908 7E       		.sleb128 -2
 2760 0909 1B       		.uleb128 0x1b
 2761 090a 2E020000 		.4byte	.LASF124
 2762 090e 7F       		.sleb128 -1
 2763 090f 1B       		.uleb128 0x1b
 2764 0910 48040000 		.4byte	.LASF125
 2765 0914 00       		.sleb128 0
 2766 0915 1B       		.uleb128 0x1b
 2767 0916 0A010000 		.4byte	.LASF126
 2768 091a 01       		.sleb128 1
 2769 091b 1B       		.uleb128 0x1b
 2770 091c 290C0000 		.4byte	.LASF127
 2771 0920 02       		.sleb128 2
 2772 0921 1B       		.uleb128 0x1b
 2773 0922 84040000 		.4byte	.LASF128
 2774 0926 03       		.sleb128 3
ARM GAS  /tmp/cctTTGYb.s 			page 85


 2775 0927 1B       		.uleb128 0x1b
 2776 0928 94050000 		.4byte	.LASF129
 2777 092c 04       		.sleb128 4
 2778 092d 1B       		.uleb128 0x1b
 2779 092e 1C040000 		.4byte	.LASF130
 2780 0932 05       		.sleb128 5
 2781 0933 1B       		.uleb128 0x1b
 2782 0934 25040000 		.4byte	.LASF131
 2783 0938 06       		.sleb128 6
 2784 0939 1B       		.uleb128 0x1b
 2785 093a 01090000 		.4byte	.LASF132
 2786 093e 08       		.sleb128 8
 2787 093f 1B       		.uleb128 0x1b
 2788 0940 C2070000 		.4byte	.LASF133
 2789 0944 09       		.sleb128 9
 2790 0945 1B       		.uleb128 0x1b
 2791 0946 56030000 		.4byte	.LASF134
 2792 094a 0A       		.sleb128 10
 2793 094b 1B       		.uleb128 0x1b
 2794 094c 810A0000 		.4byte	.LASF135
 2795 0950 0B       		.sleb128 11
 2796 0951 1B       		.uleb128 0x1b
 2797 0952 AD090000 		.4byte	.LASF136
 2798 0956 0C       		.sleb128 12
 2799 0957 1B       		.uleb128 0x1b
 2800 0958 62040000 		.4byte	.LASF137
 2801 095c 0D       		.sleb128 13
 2802 095d 1B       		.uleb128 0x1b
 2803 095e 5A090000 		.4byte	.LASF138
 2804 0962 0E       		.sleb128 14
 2805 0963 1B       		.uleb128 0x1b
 2806 0964 79080000 		.4byte	.LASF139
 2807 0968 0F       		.sleb128 15
 2808 0969 1B       		.uleb128 0x1b
 2809 096a 66080000 		.4byte	.LASF140
 2810 096e 12       		.sleb128 18
 2811 096f 1B       		.uleb128 0x1b
 2812 0970 0F070000 		.4byte	.LASF141
 2813 0974 13       		.sleb128 19
 2814 0975 1B       		.uleb128 0x1b
 2815 0976 40060000 		.4byte	.LASF142
 2816 097a 14       		.sleb128 20
 2817 097b 1B       		.uleb128 0x1b
 2818 097c 4C090000 		.4byte	.LASF143
 2819 0980 15       		.sleb128 21
 2820 0981 1B       		.uleb128 0x1b
 2821 0982 300B0000 		.4byte	.LASF144
 2822 0986 16       		.sleb128 22
 2823 0987 1B       		.uleb128 0x1b
 2824 0988 9D090000 		.4byte	.LASF145
 2825 098c 17       		.sleb128 23
 2826 098d 1B       		.uleb128 0x1b
 2827 098e 59040000 		.4byte	.LASF146
 2828 0992 18       		.sleb128 24
 2829 0993 1B       		.uleb128 0x1b
 2830 0994 18000000 		.4byte	.LASF147
 2831 0998 19       		.sleb128 25
ARM GAS  /tmp/cctTTGYb.s 			page 86


 2832 0999 1B       		.uleb128 0x1b
 2833 099a CE0B0000 		.4byte	.LASF148
 2834 099e 1A       		.sleb128 26
 2835 099f 1B       		.uleb128 0x1b
 2836 09a0 06070000 		.4byte	.LASF149
 2837 09a4 1B       		.sleb128 27
 2838 09a5 1B       		.uleb128 0x1b
 2839 09a6 FF010000 		.4byte	.LASF150
 2840 09aa 1C       		.sleb128 28
 2841 09ab 1B       		.uleb128 0x1b
 2842 09ac B0080000 		.4byte	.LASF151
 2843 09b0 1D       		.sleb128 29
 2844 09b1 1B       		.uleb128 0x1b
 2845 09b2 96040000 		.4byte	.LASF152
 2846 09b6 1E       		.sleb128 30
 2847 09b7 1B       		.uleb128 0x1b
 2848 09b8 C8030000 		.4byte	.LASF153
 2849 09bc 1F       		.sleb128 31
 2850 09bd 1B       		.uleb128 0x1b
 2851 09be 85010000 		.4byte	.LASF154
 2852 09c2 20       		.sleb128 32
 2853 09c3 1B       		.uleb128 0x1b
 2854 09c4 06040000 		.4byte	.LASF155
 2855 09c8 21       		.sleb128 33
 2856 09c9 1B       		.uleb128 0x1b
 2857 09ca 8D040000 		.4byte	.LASF156
 2858 09ce 22       		.sleb128 34
 2859 09cf 00       		.byte	0
 2860 09d0 04       		.uleb128 0x4
 2861 09d1 3A050000 		.4byte	.LASF157
 2862 09d5 08       		.byte	0x8
 2863 09d6 76       		.byte	0x76
 2864 09d7 D3080000 		.4byte	0x8d3
 2865 09db 1C       		.uleb128 0x1c
 2866 09dc 040E     		.2byte	0xe04
 2867 09de 01       		.byte	0x1
 2868 09df 84       		.byte	0x84
 2869 09e0 A50A0000 		.4byte	0xaa5
 2870 09e4 0B       		.uleb128 0xb
 2871 09e5 E00B0000 		.4byte	.LASF158
 2872 09e9 01       		.byte	0x1
 2873 09ea 86       		.byte	0x86
 2874 09eb B50A0000 		.4byte	0xab5
 2875 09ef 02       		.byte	0x2
 2876 09f0 23       		.byte	0x23
 2877 09f1 00       		.uleb128 0
 2878 09f2 0B       		.uleb128 0xb
 2879 09f3 8A020000 		.4byte	.LASF159
 2880 09f7 01       		.byte	0x1
 2881 09f8 87       		.byte	0x87
 2882 09f9 BA0A0000 		.4byte	0xaba
 2883 09fd 02       		.byte	0x2
 2884 09fe 23       		.byte	0x23
 2885 09ff 20       		.uleb128 0x20
 2886 0a00 0B       		.uleb128 0xb
 2887 0a01 DA080000 		.4byte	.LASF160
 2888 0a05 01       		.byte	0x1
ARM GAS  /tmp/cctTTGYb.s 			page 87


 2889 0a06 88       		.byte	0x88
 2890 0a07 CA0A0000 		.4byte	0xaca
 2891 0a0b 03       		.byte	0x3
 2892 0a0c 23       		.byte	0x23
 2893 0a0d 8001     		.uleb128 0x80
 2894 0a0f 0B       		.uleb128 0xb
 2895 0a10 00000000 		.4byte	.LASF161
 2896 0a14 01       		.byte	0x1
 2897 0a15 89       		.byte	0x89
 2898 0a16 BA0A0000 		.4byte	0xaba
 2899 0a1a 03       		.byte	0x3
 2900 0a1b 23       		.byte	0x23
 2901 0a1c A001     		.uleb128 0xa0
 2902 0a1e 0B       		.uleb128 0xb
 2903 0a1f D1030000 		.4byte	.LASF162
 2904 0a23 01       		.byte	0x1
 2905 0a24 8A       		.byte	0x8a
 2906 0a25 CF0A0000 		.4byte	0xacf
 2907 0a29 03       		.byte	0x3
 2908 0a2a 23       		.byte	0x23
 2909 0a2b 8002     		.uleb128 0x100
 2910 0a2d 0B       		.uleb128 0xb
 2911 0a2e FD020000 		.4byte	.LASF163
 2912 0a32 01       		.byte	0x1
 2913 0a33 8B       		.byte	0x8b
 2914 0a34 BA0A0000 		.4byte	0xaba
 2915 0a38 03       		.byte	0x3
 2916 0a39 23       		.byte	0x23
 2917 0a3a A002     		.uleb128 0x120
 2918 0a3c 0B       		.uleb128 0xb
 2919 0a3d 1D010000 		.4byte	.LASF164
 2920 0a41 01       		.byte	0x1
 2921 0a42 8C       		.byte	0x8c
 2922 0a43 D40A0000 		.4byte	0xad4
 2923 0a47 03       		.byte	0x3
 2924 0a48 23       		.byte	0x23
 2925 0a49 8003     		.uleb128 0x180
 2926 0a4b 0B       		.uleb128 0xb
 2927 0a4c A2020000 		.4byte	.LASF165
 2928 0a50 01       		.byte	0x1
 2929 0a51 8D       		.byte	0x8d
 2930 0a52 BA0A0000 		.4byte	0xaba
 2931 0a56 03       		.byte	0x3
 2932 0a57 23       		.byte	0x23
 2933 0a58 A003     		.uleb128 0x1a0
 2934 0a5a 0B       		.uleb128 0xb
 2935 0a5b D0020000 		.4byte	.LASF166
 2936 0a5f 01       		.byte	0x1
 2937 0a60 8E       		.byte	0x8e
 2938 0a61 D90A0000 		.4byte	0xad9
 2939 0a65 03       		.byte	0x3
 2940 0a66 23       		.byte	0x23
 2941 0a67 8004     		.uleb128 0x200
 2942 0a69 0B       		.uleb128 0xb
 2943 0a6a AC020000 		.4byte	.LASF167
 2944 0a6e 01       		.byte	0x1
 2945 0a6f 8F       		.byte	0x8f
ARM GAS  /tmp/cctTTGYb.s 			page 88


 2946 0a70 DE0A0000 		.4byte	0xade
 2947 0a74 03       		.byte	0x3
 2948 0a75 23       		.byte	0x23
 2949 0a76 A004     		.uleb128 0x220
 2950 0a78 0E       		.uleb128 0xe
 2951 0a79 495000   		.ascii	"IP\000"
 2952 0a7c 01       		.byte	0x1
 2953 0a7d 90       		.byte	0x90
 2954 0a7e FE0A0000 		.4byte	0xafe
 2955 0a82 03       		.byte	0x3
 2956 0a83 23       		.byte	0x23
 2957 0a84 8006     		.uleb128 0x300
 2958 0a86 0B       		.uleb128 0xb
 2959 0a87 B6020000 		.4byte	.LASF168
 2960 0a8b 01       		.byte	0x1
 2961 0a8c 91       		.byte	0x91
 2962 0a8d 030B0000 		.4byte	0xb03
 2963 0a91 03       		.byte	0x3
 2964 0a92 23       		.byte	0x23
 2965 0a93 F007     		.uleb128 0x3f0
 2966 0a95 0B       		.uleb128 0xb
 2967 0a96 01040000 		.4byte	.LASF169
 2968 0a9a 01       		.byte	0x1
 2969 0a9b 92       		.byte	0x92
 2970 0a9c CE080000 		.4byte	0x8ce
 2971 0aa0 03       		.byte	0x3
 2972 0aa1 23       		.byte	0x23
 2973 0aa2 801C     		.uleb128 0xe00
 2974 0aa4 00       		.byte	0
 2975 0aa5 08       		.uleb128 0x8
 2976 0aa6 B9080000 		.4byte	0x8b9
 2977 0aaa B50A0000 		.4byte	0xab5
 2978 0aae 09       		.uleb128 0x9
 2979 0aaf 4C000000 		.4byte	0x4c
 2980 0ab3 07       		.byte	0x7
 2981 0ab4 00       		.byte	0
 2982 0ab5 19       		.uleb128 0x19
 2983 0ab6 A50A0000 		.4byte	0xaa5
 2984 0aba 08       		.uleb128 0x8
 2985 0abb B9080000 		.4byte	0x8b9
 2986 0abf CA0A0000 		.4byte	0xaca
 2987 0ac3 09       		.uleb128 0x9
 2988 0ac4 4C000000 		.4byte	0x4c
 2989 0ac8 17       		.byte	0x17
 2990 0ac9 00       		.byte	0
 2991 0aca 19       		.uleb128 0x19
 2992 0acb A50A0000 		.4byte	0xaa5
 2993 0acf 19       		.uleb128 0x19
 2994 0ad0 A50A0000 		.4byte	0xaa5
 2995 0ad4 19       		.uleb128 0x19
 2996 0ad5 A50A0000 		.4byte	0xaa5
 2997 0ad9 19       		.uleb128 0x19
 2998 0ada A50A0000 		.4byte	0xaa5
 2999 0ade 08       		.uleb128 0x8
 3000 0adf B9080000 		.4byte	0x8b9
 3001 0ae3 EE0A0000 		.4byte	0xaee
 3002 0ae7 09       		.uleb128 0x9
ARM GAS  /tmp/cctTTGYb.s 			page 89


 3003 0ae8 4C000000 		.4byte	0x4c
 3004 0aec 37       		.byte	0x37
 3005 0aed 00       		.byte	0
 3006 0aee 08       		.uleb128 0x8
 3007 0aef 98080000 		.4byte	0x898
 3008 0af3 FE0A0000 		.4byte	0xafe
 3009 0af7 09       		.uleb128 0x9
 3010 0af8 4C000000 		.4byte	0x4c
 3011 0afc EF       		.byte	0xef
 3012 0afd 00       		.byte	0
 3013 0afe 19       		.uleb128 0x19
 3014 0aff EE0A0000 		.4byte	0xaee
 3015 0b03 08       		.uleb128 0x8
 3016 0b04 B9080000 		.4byte	0x8b9
 3017 0b08 140B0000 		.4byte	0xb14
 3018 0b0c 1D       		.uleb128 0x1d
 3019 0b0d 4C000000 		.4byte	0x4c
 3020 0b11 8302     		.2byte	0x283
 3021 0b13 00       		.byte	0
 3022 0b14 04       		.uleb128 0x4
 3023 0b15 42000000 		.4byte	.LASF170
 3024 0b19 01       		.byte	0x1
 3025 0b1a 93       		.byte	0x93
 3026 0b1b DB090000 		.4byte	0x9db
 3027 0b1f 0A       		.uleb128 0xa
 3028 0b20 74       		.byte	0x74
 3029 0b21 01       		.byte	0x1
 3030 0b22 9B       		.byte	0x9b
 3031 0b23 320C0000 		.4byte	0xc32
 3032 0b27 0B       		.uleb128 0xb
 3033 0b28 D8010000 		.4byte	.LASF171
 3034 0b2c 01       		.byte	0x1
 3035 0b2d 9D       		.byte	0x9d
 3036 0b2e C4080000 		.4byte	0x8c4
 3037 0b32 02       		.byte	0x2
 3038 0b33 23       		.byte	0x23
 3039 0b34 00       		.uleb128 0
 3040 0b35 0B       		.uleb128 0xb
 3041 0b36 4D020000 		.4byte	.LASF172
 3042 0b3a 01       		.byte	0x1
 3043 0b3b 9E       		.byte	0x9e
 3044 0b3c CE080000 		.4byte	0x8ce
 3045 0b40 02       		.byte	0x2
 3046 0b41 23       		.byte	0x23
 3047 0b42 04       		.uleb128 0x4
 3048 0b43 0B       		.uleb128 0xb
 3049 0b44 C0000000 		.4byte	.LASF173
 3050 0b48 01       		.byte	0x1
 3051 0b49 9F       		.byte	0x9f
 3052 0b4a CE080000 		.4byte	0x8ce
 3053 0b4e 02       		.byte	0x2
 3054 0b4f 23       		.byte	0x23
 3055 0b50 08       		.uleb128 0x8
 3056 0b51 0B       		.uleb128 0xb
 3057 0b52 6A010000 		.4byte	.LASF174
 3058 0b56 01       		.byte	0x1
 3059 0b57 A0       		.byte	0xa0
ARM GAS  /tmp/cctTTGYb.s 			page 90


 3060 0b58 CE080000 		.4byte	0x8ce
 3061 0b5c 02       		.byte	0x2
 3062 0b5d 23       		.byte	0x23
 3063 0b5e 0C       		.uleb128 0xc
 3064 0b5f 0E       		.uleb128 0xe
 3065 0b60 53435200 		.ascii	"SCR\000"
 3066 0b64 01       		.byte	0x1
 3067 0b65 A1       		.byte	0xa1
 3068 0b66 CE080000 		.4byte	0x8ce
 3069 0b6a 02       		.byte	0x2
 3070 0b6b 23       		.byte	0x23
 3071 0b6c 10       		.uleb128 0x10
 3072 0b6d 0E       		.uleb128 0xe
 3073 0b6e 43435200 		.ascii	"CCR\000"
 3074 0b72 01       		.byte	0x1
 3075 0b73 A2       		.byte	0xa2
 3076 0b74 CE080000 		.4byte	0x8ce
 3077 0b78 02       		.byte	0x2
 3078 0b79 23       		.byte	0x23
 3079 0b7a 14       		.uleb128 0x14
 3080 0b7b 0E       		.uleb128 0xe
 3081 0b7c 53485000 		.ascii	"SHP\000"
 3082 0b80 01       		.byte	0x1
 3083 0b81 A3       		.byte	0xa3
 3084 0b82 420C0000 		.4byte	0xc42
 3085 0b86 02       		.byte	0x2
 3086 0b87 23       		.byte	0x23
 3087 0b88 18       		.uleb128 0x18
 3088 0b89 0B       		.uleb128 0xb
 3089 0b8a F3030000 		.4byte	.LASF175
 3090 0b8e 01       		.byte	0x1
 3091 0b8f A4       		.byte	0xa4
 3092 0b90 CE080000 		.4byte	0x8ce
 3093 0b94 02       		.byte	0x2
 3094 0b95 23       		.byte	0x23
 3095 0b96 24       		.uleb128 0x24
 3096 0b97 0B       		.uleb128 0xb
 3097 0b98 7A090000 		.4byte	.LASF176
 3098 0b9c 01       		.byte	0x1
 3099 0b9d A5       		.byte	0xa5
 3100 0b9e CE080000 		.4byte	0x8ce
 3101 0ba2 02       		.byte	0x2
 3102 0ba3 23       		.byte	0x23
 3103 0ba4 28       		.uleb128 0x28
 3104 0ba5 0B       		.uleb128 0xb
 3105 0ba6 96030000 		.4byte	.LASF177
 3106 0baa 01       		.byte	0x1
 3107 0bab A6       		.byte	0xa6
 3108 0bac CE080000 		.4byte	0x8ce
 3109 0bb0 02       		.byte	0x2
 3110 0bb1 23       		.byte	0x23
 3111 0bb2 2C       		.uleb128 0x2c
 3112 0bb3 0B       		.uleb128 0xb
 3113 0bb4 51030000 		.4byte	.LASF178
 3114 0bb8 01       		.byte	0x1
 3115 0bb9 A7       		.byte	0xa7
 3116 0bba CE080000 		.4byte	0x8ce
ARM GAS  /tmp/cctTTGYb.s 			page 91


 3117 0bbe 02       		.byte	0x2
 3118 0bbf 23       		.byte	0x23
 3119 0bc0 30       		.uleb128 0x30
 3120 0bc1 0B       		.uleb128 0xb
 3121 0bc2 2F0A0000 		.4byte	.LASF179
 3122 0bc6 01       		.byte	0x1
 3123 0bc7 A8       		.byte	0xa8
 3124 0bc8 CE080000 		.4byte	0x8ce
 3125 0bcc 02       		.byte	0x2
 3126 0bcd 23       		.byte	0x23
 3127 0bce 34       		.uleb128 0x34
 3128 0bcf 0B       		.uleb128 0xb
 3129 0bd0 F6070000 		.4byte	.LASF180
 3130 0bd4 01       		.byte	0x1
 3131 0bd5 A9       		.byte	0xa9
 3132 0bd6 CE080000 		.4byte	0x8ce
 3133 0bda 02       		.byte	0x2
 3134 0bdb 23       		.byte	0x23
 3135 0bdc 38       		.uleb128 0x38
 3136 0bdd 0B       		.uleb128 0xb
 3137 0bde 20090000 		.4byte	.LASF181
 3138 0be2 01       		.byte	0x1
 3139 0be3 AA       		.byte	0xaa
 3140 0be4 CE080000 		.4byte	0x8ce
 3141 0be8 02       		.byte	0x2
 3142 0be9 23       		.byte	0x23
 3143 0bea 3C       		.uleb128 0x3c
 3144 0beb 0E       		.uleb128 0xe
 3145 0bec 50465200 		.ascii	"PFR\000"
 3146 0bf0 01       		.byte	0x1
 3147 0bf1 AB       		.byte	0xab
 3148 0bf2 570C0000 		.4byte	0xc57
 3149 0bf6 02       		.byte	0x2
 3150 0bf7 23       		.byte	0x23
 3151 0bf8 40       		.uleb128 0x40
 3152 0bf9 0E       		.uleb128 0xe
 3153 0bfa 44465200 		.ascii	"DFR\000"
 3154 0bfe 01       		.byte	0x1
 3155 0bff AC       		.byte	0xac
 3156 0c00 C4080000 		.4byte	0x8c4
 3157 0c04 02       		.byte	0x2
 3158 0c05 23       		.byte	0x23
 3159 0c06 48       		.uleb128 0x48
 3160 0c07 0E       		.uleb128 0xe
 3161 0c08 41445200 		.ascii	"ADR\000"
 3162 0c0c 01       		.byte	0x1
 3163 0c0d AD       		.byte	0xad
 3164 0c0e C4080000 		.4byte	0x8c4
 3165 0c12 02       		.byte	0x2
 3166 0c13 23       		.byte	0x23
 3167 0c14 4C       		.uleb128 0x4c
 3168 0c15 0B       		.uleb128 0xb
 3169 0c16 240A0000 		.4byte	.LASF182
 3170 0c1a 01       		.byte	0x1
 3171 0c1b AE       		.byte	0xae
 3172 0c1c 710C0000 		.4byte	0xc71
 3173 0c20 02       		.byte	0x2
ARM GAS  /tmp/cctTTGYb.s 			page 92


 3174 0c21 23       		.byte	0x23
 3175 0c22 50       		.uleb128 0x50
 3176 0c23 0B       		.uleb128 0xb
 3177 0c24 6A0A0000 		.4byte	.LASF183
 3178 0c28 01       		.byte	0x1
 3179 0c29 AF       		.byte	0xaf
 3180 0c2a 8B0C0000 		.4byte	0xc8b
 3181 0c2e 02       		.byte	0x2
 3182 0c2f 23       		.byte	0x23
 3183 0c30 60       		.uleb128 0x60
 3184 0c31 00       		.byte	0
 3185 0c32 08       		.uleb128 0x8
 3186 0c33 98080000 		.4byte	0x898
 3187 0c37 420C0000 		.4byte	0xc42
 3188 0c3b 09       		.uleb128 0x9
 3189 0c3c 4C000000 		.4byte	0x4c
 3190 0c40 0B       		.byte	0xb
 3191 0c41 00       		.byte	0
 3192 0c42 19       		.uleb128 0x19
 3193 0c43 320C0000 		.4byte	0xc32
 3194 0c47 08       		.uleb128 0x8
 3195 0c48 B9080000 		.4byte	0x8b9
 3196 0c4c 570C0000 		.4byte	0xc57
 3197 0c50 09       		.uleb128 0x9
 3198 0c51 4C000000 		.4byte	0x4c
 3199 0c55 01       		.byte	0x1
 3200 0c56 00       		.byte	0
 3201 0c57 17       		.uleb128 0x17
 3202 0c58 5C0C0000 		.4byte	0xc5c
 3203 0c5c 19       		.uleb128 0x19
 3204 0c5d 470C0000 		.4byte	0xc47
 3205 0c61 08       		.uleb128 0x8
 3206 0c62 B9080000 		.4byte	0x8b9
 3207 0c66 710C0000 		.4byte	0xc71
 3208 0c6a 09       		.uleb128 0x9
 3209 0c6b 4C000000 		.4byte	0x4c
 3210 0c6f 03       		.byte	0x3
 3211 0c70 00       		.byte	0
 3212 0c71 17       		.uleb128 0x17
 3213 0c72 760C0000 		.4byte	0xc76
 3214 0c76 19       		.uleb128 0x19
 3215 0c77 610C0000 		.4byte	0xc61
 3216 0c7b 08       		.uleb128 0x8
 3217 0c7c B9080000 		.4byte	0x8b9
 3218 0c80 8B0C0000 		.4byte	0xc8b
 3219 0c84 09       		.uleb128 0x9
 3220 0c85 4C000000 		.4byte	0x4c
 3221 0c89 04       		.byte	0x4
 3222 0c8a 00       		.byte	0
 3223 0c8b 17       		.uleb128 0x17
 3224 0c8c 900C0000 		.4byte	0xc90
 3225 0c90 19       		.uleb128 0x19
 3226 0c91 7B0C0000 		.4byte	0xc7b
 3227 0c95 04       		.uleb128 0x4
 3228 0c96 3A030000 		.4byte	.LASF184
 3229 0c9a 01       		.byte	0x1
 3230 0c9b B0       		.byte	0xb0
ARM GAS  /tmp/cctTTGYb.s 			page 93


 3231 0c9c 1F0B0000 		.4byte	0xb1f
 3232 0ca0 19       		.uleb128 0x19
 3233 0ca1 01010000 		.4byte	0x101
 3234 0ca5 17       		.uleb128 0x17
 3235 0ca6 A00C0000 		.4byte	0xca0
 3236 0caa 08       		.uleb128 0x8
 3237 0cab 01010000 		.4byte	0x101
 3238 0caf BA0C0000 		.4byte	0xcba
 3239 0cb3 09       		.uleb128 0x9
 3240 0cb4 4C000000 		.4byte	0x4c
 3241 0cb8 12       		.byte	0x12
 3242 0cb9 00       		.byte	0
 3243 0cba 1C       		.uleb128 0x1c
 3244 0cbb 2801     		.2byte	0x128
 3245 0cbd 08       		.byte	0x8
 3246 0cbe EF       		.byte	0xef
 3247 0cbf E00E0000 		.4byte	0xee0
 3248 0cc3 0B       		.uleb128 0xb
 3249 0cc4 A40A0000 		.4byte	.LASF185
 3250 0cc8 08       		.byte	0x8
 3251 0cc9 F0       		.byte	0xf0
 3252 0cca A00C0000 		.4byte	0xca0
 3253 0cce 02       		.byte	0x2
 3254 0ccf 23       		.byte	0x23
 3255 0cd0 00       		.uleb128 0
 3256 0cd1 0B       		.uleb128 0xb
 3257 0cd2 7B050000 		.4byte	.LASF186
 3258 0cd6 08       		.byte	0x8
 3259 0cd7 F1       		.byte	0xf1
 3260 0cd8 A00C0000 		.4byte	0xca0
 3261 0cdc 02       		.byte	0x2
 3262 0cdd 23       		.byte	0x23
 3263 0cde 04       		.uleb128 0x4
 3264 0cdf 0B       		.uleb128 0xb
 3265 0ce0 25090000 		.4byte	.LASF187
 3266 0ce4 08       		.byte	0x8
 3267 0ce5 F2       		.byte	0xf2
 3268 0ce6 A00C0000 		.4byte	0xca0
 3269 0cea 02       		.byte	0x2
 3270 0ceb 23       		.byte	0x23
 3271 0cec 08       		.uleb128 0x8
 3272 0ced 0B       		.uleb128 0xb
 3273 0cee 2F090000 		.4byte	.LASF188
 3274 0cf2 08       		.byte	0x8
 3275 0cf3 F3       		.byte	0xf3
 3276 0cf4 A00C0000 		.4byte	0xca0
 3277 0cf8 02       		.byte	0x2
 3278 0cf9 23       		.byte	0x23
 3279 0cfa 0C       		.uleb128 0xc
 3280 0cfb 0B       		.uleb128 0xb
 3281 0cfc D70B0000 		.4byte	.LASF189
 3282 0d00 08       		.byte	0x8
 3283 0d01 F4       		.byte	0xf4
 3284 0d02 A00C0000 		.4byte	0xca0
 3285 0d06 02       		.byte	0x2
 3286 0d07 23       		.byte	0x23
 3287 0d08 10       		.uleb128 0x10
ARM GAS  /tmp/cctTTGYb.s 			page 94


 3288 0d09 0B       		.uleb128 0xb
 3289 0d0a 6E0B0000 		.4byte	.LASF190
 3290 0d0e 08       		.byte	0x8
 3291 0d0f F5       		.byte	0xf5
 3292 0d10 A00C0000 		.4byte	0xca0
 3293 0d14 02       		.byte	0x2
 3294 0d15 23       		.byte	0x23
 3295 0d16 14       		.uleb128 0x14
 3296 0d17 0B       		.uleb128 0xb
 3297 0d18 C4040000 		.4byte	.LASF191
 3298 0d1c 08       		.byte	0x8
 3299 0d1d F6       		.byte	0xf6
 3300 0d1e A50C0000 		.4byte	0xca5
 3301 0d22 02       		.byte	0x2
 3302 0d23 23       		.byte	0x23
 3303 0d24 18       		.uleb128 0x18
 3304 0d25 0B       		.uleb128 0xb
 3305 0d26 66090000 		.4byte	.LASF192
 3306 0d2a 08       		.byte	0x8
 3307 0d2b F7       		.byte	0xf7
 3308 0d2c F00E0000 		.4byte	0xef0
 3309 0d30 02       		.byte	0x2
 3310 0d31 23       		.byte	0x23
 3311 0d32 1C       		.uleb128 0x1c
 3312 0d33 0B       		.uleb128 0xb
 3313 0d34 82050000 		.4byte	.LASF193
 3314 0d38 08       		.byte	0x8
 3315 0d39 F8       		.byte	0xf8
 3316 0d3a A50C0000 		.4byte	0xca5
 3317 0d3e 02       		.byte	0x2
 3318 0d3f 23       		.byte	0x23
 3319 0d40 20       		.uleb128 0x20
 3320 0d41 0B       		.uleb128 0xb
 3321 0d42 39070000 		.4byte	.LASF194
 3322 0d46 08       		.byte	0x8
 3323 0d47 F9       		.byte	0xf9
 3324 0d48 A00C0000 		.4byte	0xca0
 3325 0d4c 02       		.byte	0x2
 3326 0d4d 23       		.byte	0x23
 3327 0d4e 24       		.uleb128 0x24
 3328 0d4f 0B       		.uleb128 0xb
 3329 0d50 E8060000 		.4byte	.LASF195
 3330 0d54 08       		.byte	0x8
 3331 0d55 FA       		.byte	0xfa
 3332 0d56 A00C0000 		.4byte	0xca0
 3333 0d5a 02       		.byte	0x2
 3334 0d5b 23       		.byte	0x23
 3335 0d5c 28       		.uleb128 0x28
 3336 0d5d 0B       		.uleb128 0xb
 3337 0d5e 9C0A0000 		.4byte	.LASF196
 3338 0d62 08       		.byte	0x8
 3339 0d63 FB       		.byte	0xfb
 3340 0d64 A50C0000 		.4byte	0xca5
 3341 0d68 02       		.byte	0x2
 3342 0d69 23       		.byte	0x23
 3343 0d6a 2C       		.uleb128 0x2c
 3344 0d6b 0B       		.uleb128 0xb
ARM GAS  /tmp/cctTTGYb.s 			page 95


 3345 0d6c 82000000 		.4byte	.LASF197
 3346 0d70 08       		.byte	0x8
 3347 0d71 FC       		.byte	0xfc
 3348 0d72 A50C0000 		.4byte	0xca5
 3349 0d76 02       		.byte	0x2
 3350 0d77 23       		.byte	0x23
 3351 0d78 30       		.uleb128 0x30
 3352 0d79 0B       		.uleb128 0xb
 3353 0d7a 70090000 		.4byte	.LASF198
 3354 0d7e 08       		.byte	0x8
 3355 0d7f FD       		.byte	0xfd
 3356 0d80 050F0000 		.4byte	0xf05
 3357 0d84 02       		.byte	0x2
 3358 0d85 23       		.byte	0x23
 3359 0d86 34       		.uleb128 0x34
 3360 0d87 0B       		.uleb128 0xb
 3361 0d88 6F0A0000 		.4byte	.LASF199
 3362 0d8c 08       		.byte	0x8
 3363 0d8d FE       		.byte	0xfe
 3364 0d8e A50C0000 		.4byte	0xca5
 3365 0d92 02       		.byte	0x2
 3366 0d93 23       		.byte	0x23
 3367 0d94 3C       		.uleb128 0x3c
 3368 0d95 0B       		.uleb128 0xb
 3369 0d96 7A000000 		.4byte	.LASF200
 3370 0d9a 08       		.byte	0x8
 3371 0d9b FF       		.byte	0xff
 3372 0d9c A00C0000 		.4byte	0xca0
 3373 0da0 02       		.byte	0x2
 3374 0da1 23       		.byte	0x23
 3375 0da2 40       		.uleb128 0x40
 3376 0da3 13       		.uleb128 0x13
 3377 0da4 ED0B0000 		.4byte	.LASF201
 3378 0da8 08       		.byte	0x8
 3379 0da9 0001     		.2byte	0x100
 3380 0dab A00C0000 		.4byte	0xca0
 3381 0daf 02       		.byte	0x2
 3382 0db0 23       		.byte	0x23
 3383 0db1 44       		.uleb128 0x44
 3384 0db2 13       		.uleb128 0x13
 3385 0db3 62050000 		.4byte	.LASF202
 3386 0db7 08       		.byte	0x8
 3387 0db8 0101     		.2byte	0x101
 3388 0dba A00C0000 		.4byte	0xca0
 3389 0dbe 02       		.byte	0x2
 3390 0dbf 23       		.byte	0x23
 3391 0dc0 48       		.uleb128 0x48
 3392 0dc1 13       		.uleb128 0x13
 3393 0dc2 5E080000 		.4byte	.LASF203
 3394 0dc6 08       		.byte	0x8
 3395 0dc7 0201     		.2byte	0x102
 3396 0dc9 A00C0000 		.4byte	0xca0
 3397 0dcd 02       		.byte	0x2
 3398 0dce 23       		.byte	0x23
 3399 0dcf 4C       		.uleb128 0x4c
 3400 0dd0 13       		.uleb128 0x13
 3401 0dd1 F9030000 		.4byte	.LASF204
ARM GAS  /tmp/cctTTGYb.s 			page 96


 3402 0dd5 08       		.byte	0x8
 3403 0dd6 0301     		.2byte	0x103
 3404 0dd8 1A0F0000 		.4byte	0xf1a
 3405 0ddc 02       		.byte	0x2
 3406 0ddd 23       		.byte	0x23
 3407 0dde 50       		.uleb128 0x50
 3408 0ddf 13       		.uleb128 0x13
 3409 0de0 E8000000 		.4byte	.LASF205
 3410 0de4 08       		.byte	0x8
 3411 0de5 0401     		.2byte	0x104
 3412 0de7 240F0000 		.4byte	0xf24
 3413 0deb 03       		.byte	0x3
 3414 0dec 23       		.byte	0x23
 3415 0ded 9001     		.uleb128 0x90
 3416 0def 13       		.uleb128 0x13
 3417 0df0 5E0B0000 		.4byte	.LASF206
 3418 0df4 08       		.byte	0x8
 3419 0df5 0501     		.2byte	0x105
 3420 0df7 A00C0000 		.4byte	0xca0
 3421 0dfb 03       		.byte	0x3
 3422 0dfc 23       		.byte	0x23
 3423 0dfd 9401     		.uleb128 0x94
 3424 0dff 13       		.uleb128 0x13
 3425 0e00 7F090000 		.4byte	.LASF207
 3426 0e04 08       		.byte	0x8
 3427 0e05 0601     		.2byte	0x106
 3428 0e07 290F0000 		.4byte	0xf29
 3429 0e0b 03       		.byte	0x3
 3430 0e0c 23       		.byte	0x23
 3431 0e0d 9801     		.uleb128 0x98
 3432 0e0f 13       		.uleb128 0x13
 3433 0e10 970B0000 		.4byte	.LASF208
 3434 0e14 08       		.byte	0x8
 3435 0e15 0701     		.2byte	0x107
 3436 0e17 A00C0000 		.4byte	0xca0
 3437 0e1b 03       		.byte	0x3
 3438 0e1c 23       		.byte	0x23
 3439 0e1d E401     		.uleb128 0xe4
 3440 0e1f 13       		.uleb128 0x13
 3441 0e20 4D010000 		.4byte	.LASF209
 3442 0e24 08       		.byte	0x8
 3443 0e25 0801     		.2byte	0x108
 3444 0e27 A50C0000 		.4byte	0xca5
 3445 0e2b 03       		.byte	0x3
 3446 0e2c 23       		.byte	0x23
 3447 0e2d E801     		.uleb128 0xe8
 3448 0e2f 13       		.uleb128 0x13
 3449 0e30 89090000 		.4byte	.LASF210
 3450 0e34 08       		.byte	0x8
 3451 0e35 0901     		.2byte	0x109
 3452 0e37 3E0F0000 		.4byte	0xf3e
 3453 0e3b 03       		.byte	0x3
 3454 0e3c 23       		.byte	0x23
 3455 0e3d EC01     		.uleb128 0xec
 3456 0e3f 13       		.uleb128 0x13
 3457 0e40 02010000 		.4byte	.LASF211
 3458 0e44 08       		.byte	0x8
ARM GAS  /tmp/cctTTGYb.s 			page 97


 3459 0e45 0A01     		.2byte	0x10a
 3460 0e47 A00C0000 		.4byte	0xca0
 3461 0e4b 03       		.byte	0x3
 3462 0e4c 23       		.byte	0x23
 3463 0e4d 8002     		.uleb128 0x100
 3464 0e4f 13       		.uleb128 0x13
 3465 0e50 E4030000 		.4byte	.LASF212
 3466 0e54 08       		.byte	0x8
 3467 0e55 0B01     		.2byte	0x10b
 3468 0e57 A00C0000 		.4byte	0xca0
 3469 0e5b 03       		.byte	0x3
 3470 0e5c 23       		.byte	0x23
 3471 0e5d 8402     		.uleb128 0x104
 3472 0e5f 13       		.uleb128 0x13
 3473 0e60 ED010000 		.4byte	.LASF213
 3474 0e64 08       		.byte	0x8
 3475 0e65 0C01     		.2byte	0x10c
 3476 0e67 A00C0000 		.4byte	0xca0
 3477 0e6b 03       		.byte	0x3
 3478 0e6c 23       		.byte	0x23
 3479 0e6d 8802     		.uleb128 0x108
 3480 0e6f 13       		.uleb128 0x13
 3481 0e70 D2080000 		.4byte	.LASF214
 3482 0e74 08       		.byte	0x8
 3483 0e75 0D01     		.2byte	0x10d
 3484 0e77 A00C0000 		.4byte	0xca0
 3485 0e7b 03       		.byte	0x3
 3486 0e7c 23       		.byte	0x23
 3487 0e7d 8C02     		.uleb128 0x10c
 3488 0e7f 13       		.uleb128 0x13
 3489 0e80 14010000 		.4byte	.LASF215
 3490 0e84 08       		.byte	0x8
 3491 0e85 0E01     		.2byte	0x10e
 3492 0e87 A00C0000 		.4byte	0xca0
 3493 0e8b 03       		.byte	0x3
 3494 0e8c 23       		.byte	0x23
 3495 0e8d 9002     		.uleb128 0x110
 3496 0e8f 13       		.uleb128 0x13
 3497 0e90 E2070000 		.4byte	.LASF216
 3498 0e94 08       		.byte	0x8
 3499 0e95 0F01     		.2byte	0x10f
 3500 0e97 A00C0000 		.4byte	0xca0
 3501 0e9b 03       		.byte	0x3
 3502 0e9c 23       		.byte	0x23
 3503 0e9d 9402     		.uleb128 0x114
 3504 0e9f 13       		.uleb128 0x13
 3505 0ea0 2A010000 		.4byte	.LASF217
 3506 0ea4 08       		.byte	0x8
 3507 0ea5 1001     		.2byte	0x110
 3508 0ea7 A00C0000 		.4byte	0xca0
 3509 0eab 03       		.byte	0x3
 3510 0eac 23       		.byte	0x23
 3511 0ead 9802     		.uleb128 0x118
 3512 0eaf 13       		.uleb128 0x13
 3513 0eb0 09080000 		.4byte	.LASF218
 3514 0eb4 08       		.byte	0x8
 3515 0eb5 1101     		.2byte	0x111
ARM GAS  /tmp/cctTTGYb.s 			page 98


 3516 0eb7 A00C0000 		.4byte	0xca0
 3517 0ebb 03       		.byte	0x3
 3518 0ebc 23       		.byte	0x23
 3519 0ebd 9C02     		.uleb128 0x11c
 3520 0ebf 13       		.uleb128 0x13
 3521 0ec0 BE0A0000 		.4byte	.LASF219
 3522 0ec4 08       		.byte	0x8
 3523 0ec5 1201     		.2byte	0x112
 3524 0ec7 A00C0000 		.4byte	0xca0
 3525 0ecb 03       		.byte	0x3
 3526 0ecc 23       		.byte	0x23
 3527 0ecd A002     		.uleb128 0x120
 3528 0ecf 13       		.uleb128 0x13
 3529 0ed0 7B040000 		.4byte	.LASF220
 3530 0ed4 08       		.byte	0x8
 3531 0ed5 1301     		.2byte	0x113
 3532 0ed7 A50C0000 		.4byte	0xca5
 3533 0edb 03       		.byte	0x3
 3534 0edc 23       		.byte	0x23
 3535 0edd A402     		.uleb128 0x124
 3536 0edf 00       		.byte	0
 3537 0ee0 08       		.uleb128 0x8
 3538 0ee1 01010000 		.4byte	0x101
 3539 0ee5 F00E0000 		.4byte	0xef0
 3540 0ee9 09       		.uleb128 0x9
 3541 0eea 4C000000 		.4byte	0x4c
 3542 0eee 00       		.byte	0
 3543 0eef 00       		.byte	0
 3544 0ef0 19       		.uleb128 0x19
 3545 0ef1 E00E0000 		.4byte	0xee0
 3546 0ef5 08       		.uleb128 0x8
 3547 0ef6 01010000 		.4byte	0x101
 3548 0efa 050F0000 		.4byte	0xf05
 3549 0efe 09       		.uleb128 0x9
 3550 0eff 4C000000 		.4byte	0x4c
 3551 0f03 01       		.byte	0x1
 3552 0f04 00       		.byte	0
 3553 0f05 19       		.uleb128 0x19
 3554 0f06 F50E0000 		.4byte	0xef5
 3555 0f0a 08       		.uleb128 0x8
 3556 0f0b 01010000 		.4byte	0x101
 3557 0f0f 1A0F0000 		.4byte	0xf1a
 3558 0f13 09       		.uleb128 0x9
 3559 0f14 4C000000 		.4byte	0x4c
 3560 0f18 0F       		.byte	0xf
 3561 0f19 00       		.byte	0
 3562 0f1a 17       		.uleb128 0x17
 3563 0f1b 1F0F0000 		.4byte	0xf1f
 3564 0f1f 19       		.uleb128 0x19
 3565 0f20 0A0F0000 		.4byte	0xf0a
 3566 0f24 19       		.uleb128 0x19
 3567 0f25 E00E0000 		.4byte	0xee0
 3568 0f29 19       		.uleb128 0x19
 3569 0f2a AA0C0000 		.4byte	0xcaa
 3570 0f2e 08       		.uleb128 0x8
 3571 0f2f 01010000 		.4byte	0x101
 3572 0f33 3E0F0000 		.4byte	0xf3e
ARM GAS  /tmp/cctTTGYb.s 			page 99


 3573 0f37 09       		.uleb128 0x9
 3574 0f38 4C000000 		.4byte	0x4c
 3575 0f3c 04       		.byte	0x4
 3576 0f3d 00       		.byte	0
 3577 0f3e 19       		.uleb128 0x19
 3578 0f3f 2E0F0000 		.4byte	0xf2e
 3579 0f43 1E       		.uleb128 0x1e
 3580 0f44 41646300 		.ascii	"Adc\000"
 3581 0f48 08       		.byte	0x8
 3582 0f49 1401     		.2byte	0x114
 3583 0f4b BA0C0000 		.4byte	0xcba
 3584 0f4f 08       		.uleb128 0x8
 3585 0f50 01010000 		.4byte	0x101
 3586 0f54 5F0F0000 		.4byte	0xf5f
 3587 0f58 09       		.uleb128 0x9
 3588 0f59 4C000000 		.4byte	0x4c
 3589 0f5d 03       		.byte	0x3
 3590 0f5e 00       		.byte	0
 3591 0f5f 08       		.uleb128 0x8
 3592 0f60 01010000 		.4byte	0x101
 3593 0f64 6F0F0000 		.4byte	0xf6f
 3594 0f68 09       		.uleb128 0x9
 3595 0f69 4C000000 		.4byte	0x4c
 3596 0f6d 0B       		.byte	0xb
 3597 0f6e 00       		.byte	0
 3598 0f6f 08       		.uleb128 0x8
 3599 0f70 01010000 		.4byte	0x101
 3600 0f74 7F0F0000 		.4byte	0xf7f
 3601 0f78 09       		.uleb128 0x9
 3602 0f79 4C000000 		.4byte	0x4c
 3603 0f7d 0A       		.byte	0xa
 3604 0f7e 00       		.byte	0
 3605 0f7f 08       		.uleb128 0x8
 3606 0f80 01010000 		.4byte	0x101
 3607 0f84 8F0F0000 		.4byte	0xf8f
 3608 0f88 09       		.uleb128 0x9
 3609 0f89 4C000000 		.4byte	0x4c
 3610 0f8d 02       		.byte	0x2
 3611 0f8e 00       		.byte	0
 3612 0f8f 1F       		.uleb128 0x1f
 3613 0f90 20       		.byte	0x20
 3614 0f91 08       		.byte	0x8
 3615 0f92 050F     		.2byte	0xf05
 3616 0f94 11100000 		.4byte	0x1011
 3617 0f98 13       		.uleb128 0x13
 3618 0f99 1C0A0000 		.4byte	.LASF221
 3619 0f9d 08       		.byte	0x8
 3620 0f9e 060F     		.2byte	0xf06
 3621 0fa0 A00C0000 		.4byte	0xca0
 3622 0fa4 02       		.byte	0x2
 3623 0fa5 23       		.byte	0x23
 3624 0fa6 00       		.uleb128 0
 3625 0fa7 13       		.uleb128 0x13
 3626 0fa8 F0060000 		.4byte	.LASF222
 3627 0fac 08       		.byte	0x8
 3628 0fad 070F     		.2byte	0xf07
 3629 0faf A00C0000 		.4byte	0xca0
ARM GAS  /tmp/cctTTGYb.s 			page 100


 3630 0fb3 02       		.byte	0x2
 3631 0fb4 23       		.byte	0x23
 3632 0fb5 04       		.uleb128 0x4
 3633 0fb6 13       		.uleb128 0x13
 3634 0fb7 2D060000 		.4byte	.LASF223
 3635 0fbb 08       		.byte	0x8
 3636 0fbc 080F     		.2byte	0xf08
 3637 0fbe A00C0000 		.4byte	0xca0
 3638 0fc2 02       		.byte	0x2
 3639 0fc3 23       		.byte	0x23
 3640 0fc4 08       		.uleb128 0x8
 3641 0fc5 13       		.uleb128 0x13
 3642 0fc6 270B0000 		.4byte	.LASF224
 3643 0fca 08       		.byte	0x8
 3644 0fcb 090F     		.2byte	0xf09
 3645 0fcd A00C0000 		.4byte	0xca0
 3646 0fd1 02       		.byte	0x2
 3647 0fd2 23       		.byte	0x23
 3648 0fd3 0C       		.uleb128 0xc
 3649 0fd4 13       		.uleb128 0x13
 3650 0fd5 F30A0000 		.4byte	.LASF225
 3651 0fd9 08       		.byte	0x8
 3652 0fda 0A0F     		.2byte	0xf0a
 3653 0fdc A00C0000 		.4byte	0xca0
 3654 0fe0 02       		.byte	0x2
 3655 0fe1 23       		.byte	0x23
 3656 0fe2 10       		.uleb128 0x10
 3657 0fe3 13       		.uleb128 0x13
 3658 0fe4 C9010000 		.4byte	.LASF226
 3659 0fe8 08       		.byte	0x8
 3660 0fe9 0B0F     		.2byte	0xf0b
 3661 0feb A00C0000 		.4byte	0xca0
 3662 0fef 02       		.byte	0x2
 3663 0ff0 23       		.byte	0x23
 3664 0ff1 14       		.uleb128 0x14
 3665 0ff2 13       		.uleb128 0x13
 3666 0ff3 8B0A0000 		.4byte	.LASF227
 3667 0ff7 08       		.byte	0x8
 3668 0ff8 0C0F     		.2byte	0xf0c
 3669 0ffa A00C0000 		.4byte	0xca0
 3670 0ffe 02       		.byte	0x2
 3671 0fff 23       		.byte	0x23
 3672 1000 18       		.uleb128 0x18
 3673 1001 13       		.uleb128 0x13
 3674 1002 000C0000 		.4byte	.LASF228
 3675 1006 08       		.byte	0x8
 3676 1007 0D0F     		.2byte	0xf0d
 3677 1009 A00C0000 		.4byte	0xca0
 3678 100d 02       		.byte	0x2
 3679 100e 23       		.byte	0x23
 3680 100f 1C       		.uleb128 0x1c
 3681 1010 00       		.byte	0
 3682 1011 05       		.uleb128 0x5
 3683 1012 78030000 		.4byte	.LASF229
 3684 1016 08       		.byte	0x8
 3685 1017 0E0F     		.2byte	0xf0e
 3686 1019 8F0F0000 		.4byte	0xf8f
ARM GAS  /tmp/cctTTGYb.s 			page 101


 3687 101d 1F       		.uleb128 0x1f
 3688 101e 10       		.byte	0x10
 3689 101f 08       		.byte	0x8
 3690 1020 100F     		.2byte	0xf10
 3691 1022 63100000 		.4byte	0x1063
 3692 1026 13       		.uleb128 0x13
 3693 1027 4C0B0000 		.4byte	.LASF230
 3694 102b 08       		.byte	0x8
 3695 102c 110F     		.2byte	0xf11
 3696 102e A00C0000 		.4byte	0xca0
 3697 1032 02       		.byte	0x2
 3698 1033 23       		.byte	0x23
 3699 1034 00       		.uleb128 0
 3700 1035 13       		.uleb128 0x13
 3701 1036 EC040000 		.4byte	.LASF231
 3702 103a 08       		.byte	0x8
 3703 103b 120F     		.2byte	0xf12
 3704 103d A00C0000 		.4byte	0xca0
 3705 1041 02       		.byte	0x2
 3706 1042 23       		.byte	0x23
 3707 1043 04       		.uleb128 0x4
 3708 1044 13       		.uleb128 0x13
 3709 1045 390B0000 		.4byte	.LASF232
 3710 1049 08       		.byte	0x8
 3711 104a 130F     		.2byte	0xf13
 3712 104c A00C0000 		.4byte	0xca0
 3713 1050 02       		.byte	0x2
 3714 1051 23       		.byte	0x23
 3715 1052 08       		.uleb128 0x8
 3716 1053 13       		.uleb128 0x13
 3717 1054 D70A0000 		.4byte	.LASF233
 3718 1058 08       		.byte	0x8
 3719 1059 140F     		.2byte	0xf14
 3720 105b A00C0000 		.4byte	0xca0
 3721 105f 02       		.byte	0x2
 3722 1060 23       		.byte	0x23
 3723 1061 0C       		.uleb128 0xc
 3724 1062 00       		.byte	0
 3725 1063 05       		.uleb128 0x5
 3726 1064 45090000 		.4byte	.LASF234
 3727 1068 08       		.byte	0x8
 3728 1069 150F     		.2byte	0xf15
 3729 106b 1D100000 		.4byte	0x101d
 3730 106f 20       		.uleb128 0x20
 3731 1070 8002     		.2byte	0x280
 3732 1072 08       		.byte	0x8
 3733 1073 170F     		.2byte	0xf17
 3734 1075 7C130000 		.4byte	0x137c
 3735 1079 13       		.uleb128 0x13
 3736 107a 11090000 		.4byte	.LASF235
 3737 107e 08       		.byte	0x8
 3738 107f 180F     		.2byte	0xf18
 3739 1081 A00C0000 		.4byte	0xca0
 3740 1085 02       		.byte	0x2
 3741 1086 23       		.byte	0x23
 3742 1087 00       		.uleb128 0
 3743 1088 13       		.uleb128 0x13
ARM GAS  /tmp/cctTTGYb.s 			page 102


 3744 1089 C8020000 		.4byte	.LASF236
 3745 108d 08       		.byte	0x8
 3746 108e 190F     		.2byte	0xf19
 3747 1090 A00C0000 		.4byte	0xca0
 3748 1094 02       		.byte	0x2
 3749 1095 23       		.byte	0x23
 3750 1096 04       		.uleb128 0x4
 3751 1097 13       		.uleb128 0x13
 3752 1098 CF0A0000 		.4byte	.LASF237
 3753 109c 08       		.byte	0x8
 3754 109d 1A0F     		.2byte	0xf1a
 3755 109f A00C0000 		.4byte	0xca0
 3756 10a3 02       		.byte	0x2
 3757 10a4 23       		.byte	0x23
 3758 10a5 08       		.uleb128 0x8
 3759 10a6 13       		.uleb128 0x13
 3760 10a7 EC030000 		.4byte	.LASF238
 3761 10ab 08       		.byte	0x8
 3762 10ac 1B0F     		.2byte	0xf1b
 3763 10ae A50C0000 		.4byte	0xca5
 3764 10b2 02       		.byte	0x2
 3765 10b3 23       		.byte	0x23
 3766 10b4 0C       		.uleb128 0xc
 3767 10b5 13       		.uleb128 0x13
 3768 10b6 4C000000 		.4byte	.LASF239
 3769 10ba 08       		.byte	0x8
 3770 10bb 1C0F     		.2byte	0xf1c
 3771 10bd A00C0000 		.4byte	0xca0
 3772 10c1 02       		.byte	0x2
 3773 10c2 23       		.byte	0x23
 3774 10c3 10       		.uleb128 0x10
 3775 10c4 13       		.uleb128 0x13
 3776 10c5 1B060000 		.4byte	.LASF240
 3777 10c9 08       		.byte	0x8
 3778 10ca 1D0F     		.2byte	0xf1d
 3779 10cc A00C0000 		.4byte	0xca0
 3780 10d0 02       		.byte	0x2
 3781 10d1 23       		.byte	0x23
 3782 10d2 14       		.uleb128 0x14
 3783 10d3 13       		.uleb128 0x13
 3784 10d4 B6030000 		.4byte	.LASF241
 3785 10d8 08       		.byte	0x8
 3786 10d9 1E0F     		.2byte	0xf1e
 3787 10db A50C0000 		.4byte	0xca5
 3788 10df 02       		.byte	0x2
 3789 10e0 23       		.byte	0x23
 3790 10e1 18       		.uleb128 0x18
 3791 10e2 13       		.uleb128 0x13
 3792 10e3 93060000 		.4byte	.LASF242
 3793 10e7 08       		.byte	0x8
 3794 10e8 1F0F     		.2byte	0xf1f
 3795 10ea A50C0000 		.4byte	0xca5
 3796 10ee 02       		.byte	0x2
 3797 10ef 23       		.byte	0x23
 3798 10f0 1C       		.uleb128 0x1c
 3799 10f1 13       		.uleb128 0x13
 3800 10f2 30080000 		.4byte	.LASF243
ARM GAS  /tmp/cctTTGYb.s 			page 103


 3801 10f6 08       		.byte	0x8
 3802 10f7 200F     		.2byte	0xf20
 3803 10f9 A00C0000 		.4byte	0xca0
 3804 10fd 02       		.byte	0x2
 3805 10fe 23       		.byte	0x23
 3806 10ff 20       		.uleb128 0x20
 3807 1100 13       		.uleb128 0x13
 3808 1101 66090000 		.4byte	.LASF192
 3809 1105 08       		.byte	0x8
 3810 1106 210F     		.2byte	0xf21
 3811 1108 7C130000 		.4byte	0x137c
 3812 110c 02       		.byte	0x2
 3813 110d 23       		.byte	0x23
 3814 110e 24       		.uleb128 0x24
 3815 110f 13       		.uleb128 0x13
 3816 1110 130C0000 		.4byte	.LASF244
 3817 1114 08       		.byte	0x8
 3818 1115 220F     		.2byte	0xf22
 3819 1117 A00C0000 		.4byte	0xca0
 3820 111b 02       		.byte	0x2
 3821 111c 23       		.byte	0x23
 3822 111d 28       		.uleb128 0x28
 3823 111e 13       		.uleb128 0x13
 3824 111f AA050000 		.4byte	.LASF245
 3825 1123 08       		.byte	0x8
 3826 1124 230F     		.2byte	0xf23
 3827 1126 A00C0000 		.4byte	0xca0
 3828 112a 02       		.byte	0x2
 3829 112b 23       		.byte	0x23
 3830 112c 2C       		.uleb128 0x2c
 3831 112d 13       		.uleb128 0x13
 3832 112e 9B030000 		.4byte	.LASF246
 3833 1132 08       		.byte	0x8
 3834 1133 240F     		.2byte	0xf24
 3835 1135 A00C0000 		.4byte	0xca0
 3836 1139 02       		.byte	0x2
 3837 113a 23       		.byte	0x23
 3838 113b 30       		.uleb128 0x30
 3839 113c 13       		.uleb128 0x13
 3840 113d 4D080000 		.4byte	.LASF247
 3841 1141 08       		.byte	0x8
 3842 1142 250F     		.2byte	0xf25
 3843 1144 A00C0000 		.4byte	0xca0
 3844 1148 02       		.byte	0x2
 3845 1149 23       		.byte	0x23
 3846 114a 34       		.uleb128 0x34
 3847 114b 13       		.uleb128 0x13
 3848 114c 24060000 		.4byte	.LASF248
 3849 1150 08       		.byte	0x8
 3850 1151 260F     		.2byte	0xf26
 3851 1153 A00C0000 		.4byte	0xca0
 3852 1157 02       		.byte	0x2
 3853 1158 23       		.byte	0x23
 3854 1159 38       		.uleb128 0x38
 3855 115a 13       		.uleb128 0x13
 3856 115b BF030000 		.4byte	.LASF249
 3857 115f 08       		.byte	0x8
ARM GAS  /tmp/cctTTGYb.s 			page 104


 3858 1160 270F     		.2byte	0xf27
 3859 1162 A50C0000 		.4byte	0xca5
 3860 1166 02       		.byte	0x2
 3861 1167 23       		.byte	0x23
 3862 1168 3C       		.uleb128 0x3c
 3863 1169 13       		.uleb128 0x13
 3864 116a 9C060000 		.4byte	.LASF250
 3865 116e 08       		.byte	0x8
 3866 116f 280F     		.2byte	0xf28
 3867 1171 A50C0000 		.4byte	0xca5
 3868 1175 02       		.byte	0x2
 3869 1176 23       		.byte	0x23
 3870 1177 40       		.uleb128 0x40
 3871 1178 13       		.uleb128 0x13
 3872 1179 68030000 		.4byte	.LASF251
 3873 117d 08       		.byte	0x8
 3874 117e 290F     		.2byte	0xf29
 3875 1180 A00C0000 		.4byte	0xca0
 3876 1184 02       		.byte	0x2
 3877 1185 23       		.byte	0x23
 3878 1186 44       		.uleb128 0x44
 3879 1187 13       		.uleb128 0x13
 3880 1188 66020000 		.4byte	.LASF252
 3881 118c 08       		.byte	0x8
 3882 118d 2A0F     		.2byte	0xf2a
 3883 118f A00C0000 		.4byte	0xca0
 3884 1193 02       		.byte	0x2
 3885 1194 23       		.byte	0x23
 3886 1195 48       		.uleb128 0x48
 3887 1196 13       		.uleb128 0x13
 3888 1197 E4040000 		.4byte	.LASF253
 3889 119b 08       		.byte	0x8
 3890 119c 2B0F     		.2byte	0xf2b
 3891 119e A00C0000 		.4byte	0xca0
 3892 11a2 02       		.byte	0x2
 3893 11a3 23       		.byte	0x23
 3894 11a4 4C       		.uleb128 0x4c
 3895 11a5 13       		.uleb128 0x13
 3896 11a6 BC040000 		.4byte	.LASF254
 3897 11aa 08       		.byte	0x8
 3898 11ab 2C0F     		.2byte	0xf2c
 3899 11ad A00C0000 		.4byte	0xca0
 3900 11b1 02       		.byte	0x2
 3901 11b2 23       		.byte	0x23
 3902 11b3 50       		.uleb128 0x50
 3903 11b4 13       		.uleb128 0x13
 3904 11b5 EB070000 		.4byte	.LASF255
 3905 11b9 08       		.byte	0x8
 3906 11ba 2D0F     		.2byte	0xf2d
 3907 11bc A00C0000 		.4byte	0xca0
 3908 11c0 02       		.byte	0x2
 3909 11c1 23       		.byte	0x23
 3910 11c2 54       		.uleb128 0x54
 3911 11c3 13       		.uleb128 0x13
 3912 11c4 47070000 		.4byte	.LASF256
 3913 11c8 08       		.byte	0x8
 3914 11c9 2E0F     		.2byte	0xf2e
ARM GAS  /tmp/cctTTGYb.s 			page 105


 3915 11cb A00C0000 		.4byte	0xca0
 3916 11cf 02       		.byte	0x2
 3917 11d0 23       		.byte	0x23
 3918 11d1 58       		.uleb128 0x58
 3919 11d2 13       		.uleb128 0x13
 3920 11d3 B4040000 		.4byte	.LASF257
 3921 11d7 08       		.byte	0x8
 3922 11d8 2F0F     		.2byte	0xf2f
 3923 11da A00C0000 		.4byte	0xca0
 3924 11de 02       		.byte	0x2
 3925 11df 23       		.byte	0x23
 3926 11e0 5C       		.uleb128 0x5c
 3927 11e1 13       		.uleb128 0x13
 3928 11e2 83070000 		.4byte	.LASF258
 3929 11e6 08       		.byte	0x8
 3930 11e7 300F     		.2byte	0xf30
 3931 11e9 A50C0000 		.4byte	0xca5
 3932 11ed 02       		.byte	0x2
 3933 11ee 23       		.byte	0x23
 3934 11ef 60       		.uleb128 0x60
 3935 11f0 13       		.uleb128 0x13
 3936 11f1 D9000000 		.4byte	.LASF259
 3937 11f5 08       		.byte	0x8
 3938 11f6 310F     		.2byte	0xf31
 3939 11f8 A00C0000 		.4byte	0xca0
 3940 11fc 02       		.byte	0x2
 3941 11fd 23       		.byte	0x23
 3942 11fe 64       		.uleb128 0x64
 3943 11ff 13       		.uleb128 0x13
 3944 1200 EE020000 		.4byte	.LASF260
 3945 1204 08       		.byte	0x8
 3946 1205 320F     		.2byte	0xf32
 3947 1207 A00C0000 		.4byte	0xca0
 3948 120b 02       		.byte	0x2
 3949 120c 23       		.byte	0x23
 3950 120d 68       		.uleb128 0x68
 3951 120e 13       		.uleb128 0x13
 3952 120f C0020000 		.4byte	.LASF261
 3953 1213 08       		.byte	0x8
 3954 1214 330F     		.2byte	0xf33
 3955 1216 A00C0000 		.4byte	0xca0
 3956 121a 02       		.byte	0x2
 3957 121b 23       		.byte	0x23
 3958 121c 6C       		.uleb128 0x6c
 3959 121d 13       		.uleb128 0x13
 3960 121e 70090000 		.4byte	.LASF198
 3961 1222 08       		.byte	0x8
 3962 1223 340F     		.2byte	0xf34
 3963 1225 81130000 		.4byte	0x1381
 3964 1229 02       		.byte	0x2
 3965 122a 23       		.byte	0x23
 3966 122b 70       		.uleb128 0x70
 3967 122c 13       		.uleb128 0x13
 3968 122d C8080000 		.4byte	.LASF262
 3969 1231 08       		.byte	0x8
 3970 1232 350F     		.2byte	0xf35
 3971 1234 86130000 		.4byte	0x1386
ARM GAS  /tmp/cctTTGYb.s 			page 106


 3972 1238 02       		.byte	0x2
 3973 1239 23       		.byte	0x23
 3974 123a 7C       		.uleb128 0x7c
 3975 123b 13       		.uleb128 0x13
 3976 123c E8000000 		.4byte	.LASF205
 3977 1240 08       		.byte	0x8
 3978 1241 360F     		.2byte	0xf36
 3979 1243 8B130000 		.4byte	0x138b
 3980 1247 03       		.byte	0x3
 3981 1248 23       		.byte	0x23
 3982 1249 8401     		.uleb128 0x84
 3983 124b 13       		.uleb128 0x13
 3984 124c 81020000 		.4byte	.LASF263
 3985 1250 08       		.byte	0x8
 3986 1251 370F     		.2byte	0xf37
 3987 1253 A00C0000 		.4byte	0xca0
 3988 1257 03       		.byte	0x3
 3989 1258 23       		.byte	0x23
 3990 1259 B001     		.uleb128 0xb0
 3991 125b 13       		.uleb128 0x13
 3992 125c 7F090000 		.4byte	.LASF207
 3993 1260 08       		.byte	0x8
 3994 1261 380F     		.2byte	0xf38
 3995 1263 90130000 		.4byte	0x1390
 3996 1267 03       		.byte	0x3
 3997 1268 23       		.byte	0x23
 3998 1269 B401     		.uleb128 0xb4
 3999 126b 13       		.uleb128 0x13
 4000 126c 52060000 		.4byte	.LASF264
 4001 1270 08       		.byte	0x8
 4002 1271 390F     		.2byte	0xf39
 4003 1273 A00C0000 		.4byte	0xca0
 4004 1277 03       		.byte	0x3
 4005 1278 23       		.byte	0x23
 4006 1279 E401     		.uleb128 0xe4
 4007 127b 13       		.uleb128 0x13
 4008 127c 71000000 		.4byte	.LASF265
 4009 1280 08       		.byte	0x8
 4010 1281 3A0F     		.2byte	0xf3a
 4011 1283 A50C0000 		.4byte	0xca5
 4012 1287 03       		.byte	0x3
 4013 1288 23       		.byte	0x23
 4014 1289 E801     		.uleb128 0xe8
 4015 128b 13       		.uleb128 0x13
 4016 128c 89090000 		.4byte	.LASF210
 4017 1290 08       		.byte	0x8
 4018 1291 3B0F     		.2byte	0xf3b
 4019 1293 95130000 		.4byte	0x1395
 4020 1297 03       		.byte	0x3
 4021 1298 23       		.byte	0x23
 4022 1299 EC01     		.uleb128 0xec
 4023 129b 13       		.uleb128 0x13
 4024 129c 770B0000 		.4byte	.LASF266
 4025 12a0 08       		.byte	0x8
 4026 12a1 3C0F     		.2byte	0xf3c
 4027 12a3 A00C0000 		.4byte	0xca0
 4028 12a7 03       		.byte	0x3
ARM GAS  /tmp/cctTTGYb.s 			page 107


 4029 12a8 23       		.byte	0x23
 4030 12a9 8002     		.uleb128 0x100
 4031 12ab 13       		.uleb128 0x13
 4032 12ac 01060000 		.4byte	.LASF267
 4033 12b0 08       		.byte	0x8
 4034 12b1 3D0F     		.2byte	0xf3d
 4035 12b3 A00C0000 		.4byte	0xca0
 4036 12b7 03       		.byte	0x3
 4037 12b8 23       		.byte	0x23
 4038 12b9 8402     		.uleb128 0x104
 4039 12bb 13       		.uleb128 0x13
 4040 12bc D6030000 		.4byte	.LASF268
 4041 12c0 08       		.byte	0x8
 4042 12c1 3E0F     		.2byte	0xf3e
 4043 12c3 A00C0000 		.4byte	0xca0
 4044 12c7 03       		.byte	0x3
 4045 12c8 23       		.byte	0x23
 4046 12c9 8802     		.uleb128 0x108
 4047 12cb 13       		.uleb128 0x13
 4048 12cc C5000000 		.4byte	.LASF269
 4049 12d0 08       		.byte	0x8
 4050 12d1 3F0F     		.2byte	0xf3f
 4051 12d3 A00C0000 		.4byte	0xca0
 4052 12d7 03       		.byte	0x3
 4053 12d8 23       		.byte	0x23
 4054 12d9 8C02     		.uleb128 0x10c
 4055 12db 13       		.uleb128 0x13
 4056 12dc 21000000 		.4byte	.LASF270
 4057 12e0 08       		.byte	0x8
 4058 12e1 400F     		.2byte	0xf40
 4059 12e3 A00C0000 		.4byte	0xca0
 4060 12e7 03       		.byte	0x3
 4061 12e8 23       		.byte	0x23
 4062 12e9 9002     		.uleb128 0x110
 4063 12eb 13       		.uleb128 0x13
 4064 12ec 33010000 		.4byte	.LASF271
 4065 12f0 08       		.byte	0x8
 4066 12f1 410F     		.2byte	0xf41
 4067 12f3 A00C0000 		.4byte	0xca0
 4068 12f7 03       		.byte	0x3
 4069 12f8 23       		.byte	0x23
 4070 12f9 9402     		.uleb128 0x114
 4071 12fb 13       		.uleb128 0x13
 4072 12fc 5F030000 		.4byte	.LASF272
 4073 1300 08       		.byte	0x8
 4074 1301 420F     		.2byte	0xf42
 4075 1303 A00C0000 		.4byte	0xca0
 4076 1307 03       		.byte	0x3
 4077 1308 23       		.byte	0x23
 4078 1309 9802     		.uleb128 0x118
 4079 130b 13       		.uleb128 0x13
 4080 130c 31050000 		.4byte	.LASF273
 4081 1310 08       		.byte	0x8
 4082 1311 430F     		.2byte	0xf43
 4083 1313 A00C0000 		.4byte	0xca0
 4084 1317 03       		.byte	0x3
 4085 1318 23       		.byte	0x23
ARM GAS  /tmp/cctTTGYb.s 			page 108


 4086 1319 9C02     		.uleb128 0x11c
 4087 131b 13       		.uleb128 0x13
 4088 131c BD090000 		.4byte	.LASF274
 4089 1320 08       		.byte	0x8
 4090 1321 440F     		.2byte	0xf44
 4091 1323 A00C0000 		.4byte	0xca0
 4092 1327 03       		.byte	0x3
 4093 1328 23       		.byte	0x23
 4094 1329 A002     		.uleb128 0x120
 4095 132b 13       		.uleb128 0x13
 4096 132c AD030000 		.4byte	.LASF275
 4097 1330 08       		.byte	0x8
 4098 1331 450F     		.2byte	0xf45
 4099 1333 A50C0000 		.4byte	0xca5
 4100 1337 03       		.byte	0x3
 4101 1338 23       		.byte	0x23
 4102 1339 A402     		.uleb128 0x124
 4103 133b 13       		.uleb128 0x13
 4104 133c 93090000 		.4byte	.LASF276
 4105 1340 08       		.byte	0x8
 4106 1341 460F     		.2byte	0xf46
 4107 1343 9A130000 		.4byte	0x139a
 4108 1347 03       		.byte	0x3
 4109 1348 23       		.byte	0x23
 4110 1349 A802     		.uleb128 0x128
 4111 134b 13       		.uleb128 0x13
 4112 134c 140A0000 		.4byte	.LASF277
 4113 1350 08       		.byte	0x8
 4114 1351 470F     		.2byte	0xf47
 4115 1353 9F130000 		.4byte	0x139f
 4116 1357 03       		.byte	0x3
 4117 1358 23       		.byte	0x23
 4118 1359 B002     		.uleb128 0x130
 4119 135b 13       		.uleb128 0x13
 4120 135c F2000000 		.4byte	.LASF278
 4121 1360 08       		.byte	0x8
 4122 1361 480F     		.2byte	0xf48
 4123 1363 BF130000 		.4byte	0x13bf
 4124 1367 03       		.byte	0x3
 4125 1368 23       		.byte	0x23
 4126 1369 B003     		.uleb128 0x1b0
 4127 136b 13       		.uleb128 0x13
 4128 136c 5B060000 		.4byte	.LASF279
 4129 1370 08       		.byte	0x8
 4130 1371 490F     		.2byte	0xf49
 4131 1373 C4130000 		.4byte	0x13c4
 4132 1377 03       		.byte	0x3
 4133 1378 23       		.byte	0x23
 4134 1379 8004     		.uleb128 0x200
 4135 137b 00       		.byte	0
 4136 137c 19       		.uleb128 0x19
 4137 137d E00E0000 		.4byte	0xee0
 4138 1381 19       		.uleb128 0x19
 4139 1382 7F0F0000 		.4byte	0xf7f
 4140 1386 19       		.uleb128 0x19
 4141 1387 F50E0000 		.4byte	0xef5
 4142 138b 19       		.uleb128 0x19
ARM GAS  /tmp/cctTTGYb.s 			page 109


 4143 138c 6F0F0000 		.4byte	0xf6f
 4144 1390 19       		.uleb128 0x19
 4145 1391 5F0F0000 		.4byte	0xf5f
 4146 1395 19       		.uleb128 0x19
 4147 1396 2E0F0000 		.4byte	0xf2e
 4148 139a 19       		.uleb128 0x19
 4149 139b F50E0000 		.4byte	0xef5
 4150 139f 08       		.uleb128 0x8
 4151 13a0 63100000 		.4byte	0x1063
 4152 13a4 AF130000 		.4byte	0x13af
 4153 13a8 09       		.uleb128 0x9
 4154 13a9 4C000000 		.4byte	0x4c
 4155 13ad 07       		.byte	0x7
 4156 13ae 00       		.byte	0
 4157 13af 08       		.uleb128 0x8
 4158 13b0 01010000 		.4byte	0x101
 4159 13b4 BF130000 		.4byte	0x13bf
 4160 13b8 09       		.uleb128 0x9
 4161 13b9 4C000000 		.4byte	0x4c
 4162 13bd 13       		.byte	0x13
 4163 13be 00       		.byte	0
 4164 13bf 19       		.uleb128 0x19
 4165 13c0 AF130000 		.4byte	0x13af
 4166 13c4 08       		.uleb128 0x8
 4167 13c5 11100000 		.4byte	0x1011
 4168 13c9 D4130000 		.4byte	0x13d4
 4169 13cd 09       		.uleb128 0x9
 4170 13ce 4C000000 		.4byte	0x4c
 4171 13d2 03       		.byte	0x3
 4172 13d3 00       		.byte	0
 4173 13d4 1E       		.uleb128 0x1e
 4174 13d5 50776D00 		.ascii	"Pwm\000"
 4175 13d9 08       		.byte	0x8
 4176 13da 4A0F     		.2byte	0xf4a
 4177 13dc 6F100000 		.4byte	0x106f
 4178 13e0 1F       		.uleb128 0x1f
 4179 13e1 40       		.byte	0x40
 4180 13e2 08       		.byte	0x8
 4181 13e3 4B15     		.2byte	0x154b
 4182 13e5 AD140000 		.4byte	0x14ad
 4183 13e9 13       		.uleb128 0x13
 4184 13ea 95010000 		.4byte	.LASF280
 4185 13ee 08       		.byte	0x8
 4186 13ef 4C15     		.2byte	0x154c
 4187 13f1 A00C0000 		.4byte	0xca0
 4188 13f5 02       		.byte	0x2
 4189 13f6 23       		.byte	0x23
 4190 13f7 00       		.uleb128 0
 4191 13f8 13       		.uleb128 0x13
 4192 13f9 D8050000 		.4byte	.LASF281
 4193 13fd 08       		.byte	0x8
 4194 13fe 4D15     		.2byte	0x154d
 4195 1400 A00C0000 		.4byte	0xca0
 4196 1404 02       		.byte	0x2
 4197 1405 23       		.byte	0x23
 4198 1406 04       		.uleb128 0x4
 4199 1407 13       		.uleb128 0x13
ARM GAS  /tmp/cctTTGYb.s 			page 110


 4200 1408 660B0000 		.4byte	.LASF282
 4201 140c 08       		.byte	0x8
 4202 140d 4E15     		.2byte	0x154e
 4203 140f A00C0000 		.4byte	0xca0
 4204 1413 02       		.byte	0x2
 4205 1414 23       		.byte	0x23
 4206 1415 08       		.uleb128 0x8
 4207 1416 13       		.uleb128 0x13
 4208 1417 66090000 		.4byte	.LASF192
 4209 141b 08       		.byte	0x8
 4210 141c 4F15     		.2byte	0x154f
 4211 141e AD140000 		.4byte	0x14ad
 4212 1422 02       		.byte	0x2
 4213 1423 23       		.byte	0x23
 4214 1424 0C       		.uleb128 0xc
 4215 1425 13       		.uleb128 0x13
 4216 1426 B7090000 		.4byte	.LASF283
 4217 142a 08       		.byte	0x8
 4218 142b 5015     		.2byte	0x1550
 4219 142d A00C0000 		.4byte	0xca0
 4220 1431 02       		.byte	0x2
 4221 1432 23       		.byte	0x23
 4222 1433 10       		.uleb128 0x10
 4223 1434 13       		.uleb128 0x13
 4224 1435 17030000 		.4byte	.LASF284
 4225 1439 08       		.byte	0x8
 4226 143a 5115     		.2byte	0x1551
 4227 143c A00C0000 		.4byte	0xca0
 4228 1440 02       		.byte	0x2
 4229 1441 23       		.byte	0x23
 4230 1442 14       		.uleb128 0x14
 4231 1443 13       		.uleb128 0x13
 4232 1444 1D030000 		.4byte	.LASF285
 4233 1448 08       		.byte	0x8
 4234 1449 5215     		.2byte	0x1552
 4235 144b A00C0000 		.4byte	0xca0
 4236 144f 02       		.byte	0x2
 4237 1450 23       		.byte	0x23
 4238 1451 18       		.uleb128 0x18
 4239 1452 13       		.uleb128 0x13
 4240 1453 23030000 		.4byte	.LASF286
 4241 1457 08       		.byte	0x8
 4242 1458 5315     		.2byte	0x1553
 4243 145a A00C0000 		.4byte	0xca0
 4244 145e 02       		.byte	0x2
 4245 145f 23       		.byte	0x23
 4246 1460 1C       		.uleb128 0x1c
 4247 1461 13       		.uleb128 0x13
 4248 1462 A7030000 		.4byte	.LASF287
 4249 1466 08       		.byte	0x8
 4250 1467 5415     		.2byte	0x1554
 4251 1469 A00C0000 		.4byte	0xca0
 4252 146d 02       		.byte	0x2
 4253 146e 23       		.byte	0x23
 4254 146f 20       		.uleb128 0x20
 4255 1470 13       		.uleb128 0x13
 4256 1471 0F050000 		.4byte	.LASF288
ARM GAS  /tmp/cctTTGYb.s 			page 111


 4257 1475 08       		.byte	0x8
 4258 1476 5515     		.2byte	0x1555
 4259 1478 A00C0000 		.4byte	0xca0
 4260 147c 02       		.byte	0x2
 4261 147d 23       		.byte	0x23
 4262 147e 24       		.uleb128 0x24
 4263 147f 13       		.uleb128 0x13
 4264 1480 52040000 		.4byte	.LASF289
 4265 1484 08       		.byte	0x8
 4266 1485 5615     		.2byte	0x1556
 4267 1487 A00C0000 		.4byte	0xca0
 4268 148b 02       		.byte	0x2
 4269 148c 23       		.byte	0x23
 4270 148d 28       		.uleb128 0x28
 4271 148e 13       		.uleb128 0x13
 4272 148f 12080000 		.4byte	.LASF290
 4273 1493 08       		.byte	0x8
 4274 1494 5715     		.2byte	0x1557
 4275 1496 A00C0000 		.4byte	0xca0
 4276 149a 02       		.byte	0x2
 4277 149b 23       		.byte	0x23
 4278 149c 2C       		.uleb128 0x2c
 4279 149d 13       		.uleb128 0x13
 4280 149e 70090000 		.4byte	.LASF198
 4281 14a2 08       		.byte	0x8
 4282 14a3 5815     		.2byte	0x1558
 4283 14a5 B2140000 		.4byte	0x14b2
 4284 14a9 02       		.byte	0x2
 4285 14aa 23       		.byte	0x23
 4286 14ab 30       		.uleb128 0x30
 4287 14ac 00       		.byte	0
 4288 14ad 19       		.uleb128 0x19
 4289 14ae E00E0000 		.4byte	0xee0
 4290 14b2 19       		.uleb128 0x19
 4291 14b3 4F0F0000 		.4byte	0xf4f
 4292 14b7 05       		.uleb128 0x5
 4293 14b8 77020000 		.4byte	.LASF291
 4294 14bc 08       		.byte	0x8
 4295 14bd 5915     		.2byte	0x1559
 4296 14bf E0130000 		.4byte	0x13e0
 4297 14c3 1F       		.uleb128 0x1f
 4298 14c4 E8       		.byte	0xe8
 4299 14c5 08       		.byte	0x8
 4300 14c6 5B15     		.2byte	0x155b
 4301 14c8 6C150000 		.4byte	0x156c
 4302 14cc 13       		.uleb128 0x13
 4303 14cd 42010000 		.4byte	.LASF292
 4304 14d1 08       		.byte	0x8
 4305 14d2 5C15     		.2byte	0x155c
 4306 14d4 6C150000 		.4byte	0x156c
 4307 14d8 02       		.byte	0x2
 4308 14d9 23       		.byte	0x23
 4309 14da 00       		.uleb128 0
 4310 14db 13       		.uleb128 0x13
 4311 14dc C70B0000 		.4byte	.LASF293
 4312 14e0 08       		.byte	0x8
 4313 14e1 5D15     		.2byte	0x155d
ARM GAS  /tmp/cctTTGYb.s 			page 112


 4314 14e3 A00C0000 		.4byte	0xca0
 4315 14e7 03       		.byte	0x3
 4316 14e8 23       		.byte	0x23
 4317 14e9 C001     		.uleb128 0xc0
 4318 14eb 13       		.uleb128 0x13
 4319 14ec 43030000 		.4byte	.LASF294
 4320 14f0 08       		.byte	0x8
 4321 14f1 5E15     		.2byte	0x155e
 4322 14f3 A00C0000 		.4byte	0xca0
 4323 14f7 03       		.byte	0x3
 4324 14f8 23       		.byte	0x23
 4325 14f9 C401     		.uleb128 0xc4
 4326 14fb 13       		.uleb128 0x13
 4327 14fc 620A0000 		.4byte	.LASF295
 4328 1500 08       		.byte	0x8
 4329 1501 5F15     		.2byte	0x155f
 4330 1503 A00C0000 		.4byte	0xca0
 4331 1507 03       		.byte	0x3
 4332 1508 23       		.byte	0x23
 4333 1509 C801     		.uleb128 0xc8
 4334 150b 13       		.uleb128 0x13
 4335 150c 0C0A0000 		.4byte	.LASF296
 4336 1510 08       		.byte	0x8
 4337 1511 6015     		.2byte	0x1560
 4338 1513 A00C0000 		.4byte	0xca0
 4339 1517 03       		.byte	0x3
 4340 1518 23       		.byte	0x23
 4341 1519 CC01     		.uleb128 0xcc
 4342 151b 13       		.uleb128 0x13
 4343 151c 22010000 		.4byte	.LASF297
 4344 1520 08       		.byte	0x8
 4345 1521 6115     		.2byte	0x1561
 4346 1523 A50C0000 		.4byte	0xca5
 4347 1527 03       		.byte	0x3
 4348 1528 23       		.byte	0x23
 4349 1529 D001     		.uleb128 0xd0
 4350 152b 13       		.uleb128 0x13
 4351 152c 70030000 		.4byte	.LASF298
 4352 1530 08       		.byte	0x8
 4353 1531 6215     		.2byte	0x1562
 4354 1533 A50C0000 		.4byte	0xca5
 4355 1537 03       		.byte	0x3
 4356 1538 23       		.byte	0x23
 4357 1539 D401     		.uleb128 0xd4
 4358 153b 13       		.uleb128 0x13
 4359 153c E1000000 		.4byte	.LASF299
 4360 1540 08       		.byte	0x8
 4361 1541 6315     		.2byte	0x1563
 4362 1543 A00C0000 		.4byte	0xca0
 4363 1547 03       		.byte	0x3
 4364 1548 23       		.byte	0x23
 4365 1549 D801     		.uleb128 0xd8
 4366 154b 13       		.uleb128 0x13
 4367 154c 66090000 		.4byte	.LASF192
 4368 1550 08       		.byte	0x8
 4369 1551 6415     		.2byte	0x1564
 4370 1553 7C150000 		.4byte	0x157c
ARM GAS  /tmp/cctTTGYb.s 			page 113


 4371 1557 03       		.byte	0x3
 4372 1558 23       		.byte	0x23
 4373 1559 DC01     		.uleb128 0xdc
 4374 155b 13       		.uleb128 0x13
 4375 155c C70A0000 		.4byte	.LASF300
 4376 1560 08       		.byte	0x8
 4377 1561 6515     		.2byte	0x1565
 4378 1563 A00C0000 		.4byte	0xca0
 4379 1567 03       		.byte	0x3
 4380 1568 23       		.byte	0x23
 4381 1569 E401     		.uleb128 0xe4
 4382 156b 00       		.byte	0
 4383 156c 08       		.uleb128 0x8
 4384 156d B7140000 		.4byte	0x14b7
 4385 1571 7C150000 		.4byte	0x157c
 4386 1575 09       		.uleb128 0x9
 4387 1576 4C000000 		.4byte	0x4c
 4388 157a 02       		.byte	0x2
 4389 157b 00       		.byte	0
 4390 157c 19       		.uleb128 0x19
 4391 157d F50E0000 		.4byte	0xef5
 4392 1581 1E       		.uleb128 0x1e
 4393 1582 546300   		.ascii	"Tc\000"
 4394 1585 08       		.byte	0x8
 4395 1586 6615     		.2byte	0x1566
 4396 1588 C3140000 		.4byte	0x14c3
 4397 158c 1F       		.uleb128 0x1f
 4398 158d 0C       		.byte	0xc
 4399 158e 08       		.byte	0x8
 4400 158f 7C19     		.2byte	0x197c
 4401 1591 C3150000 		.4byte	0x15c3
 4402 1595 13       		.uleb128 0x13
 4403 1596 F6020000 		.4byte	.LASF301
 4404 159a 08       		.byte	0x8
 4405 159b 7D19     		.2byte	0x197d
 4406 159d A00C0000 		.4byte	0xca0
 4407 15a1 02       		.byte	0x2
 4408 15a2 23       		.byte	0x23
 4409 15a3 00       		.uleb128 0
 4410 15a4 13       		.uleb128 0x13
 4411 15a5 19070000 		.4byte	.LASF302
 4412 15a9 08       		.byte	0x8
 4413 15aa 7E19     		.2byte	0x197e
 4414 15ac A00C0000 		.4byte	0xca0
 4415 15b0 02       		.byte	0x2
 4416 15b1 23       		.byte	0x23
 4417 15b2 04       		.uleb128 0x4
 4418 15b3 13       		.uleb128 0x13
 4419 15b4 A6090000 		.4byte	.LASF303
 4420 15b8 08       		.byte	0x8
 4421 15b9 7F19     		.2byte	0x197f
 4422 15bb A50C0000 		.4byte	0xca5
 4423 15bf 02       		.byte	0x2
 4424 15c0 23       		.byte	0x23
 4425 15c1 08       		.uleb128 0x8
 4426 15c2 00       		.byte	0
 4427 15c3 1E       		.uleb128 0x1e
ARM GAS  /tmp/cctTTGYb.s 			page 114


 4428 15c4 57647400 		.ascii	"Wdt\000"
 4429 15c8 08       		.byte	0x8
 4430 15c9 8019     		.2byte	0x1980
 4431 15cb 8C150000 		.4byte	0x158c
 4432 15cf 04       		.uleb128 0x4
 4433 15d0 8B050000 		.4byte	.LASF304
 4434 15d4 09       		.byte	0x9
 4435 15d5 10       		.byte	0x10
 4436 15d6 AE080000 		.4byte	0x8ae
 4437 15da 21       		.uleb128 0x21
 4438 15db 01       		.byte	0x1
 4439 15dc 09       		.byte	0x9
 4440 15dd 12       		.byte	0x12
 4441 15de FB150000 		.4byte	0x15fb
 4442 15e2 22       		.uleb128 0x22
 4443 15e3 4F464600 		.ascii	"OFF\000"
 4444 15e7 00       		.sleb128 0
 4445 15e8 1B       		.uleb128 0x1b
 4446 15e9 9B070000 		.4byte	.LASF305
 4447 15ed 01       		.sleb128 1
 4448 15ee 1B       		.uleb128 0x1b
 4449 15ef 90010000 		.4byte	.LASF306
 4450 15f3 02       		.sleb128 2
 4451 15f4 1B       		.uleb128 0x1b
 4452 15f5 E3060000 		.4byte	.LASF307
 4453 15f9 03       		.sleb128 3
 4454 15fa 00       		.byte	0
 4455 15fb 04       		.uleb128 0x4
 4456 15fc 88060000 		.4byte	.LASF308
 4457 1600 09       		.byte	0x9
 4458 1601 12       		.byte	0x12
 4459 1602 DA150000 		.4byte	0x15da
 4460 1606 0D       		.uleb128 0xd
 4461 1607 D5020000 		.4byte	.LASF309
 4462 160b 2C       		.byte	0x2c
 4463 160c 09       		.byte	0x9
 4464 160d 15       		.byte	0x15
 4465 160e D1160000 		.4byte	0x16d1
 4466 1612 0B       		.uleb128 0xb
 4467 1613 4C0A0000 		.4byte	.LASF310
 4468 1617 09       		.byte	0x9
 4469 1618 16       		.byte	0x16
 4470 1619 FB150000 		.4byte	0x15fb
 4471 161d 02       		.byte	0x2
 4472 161e 23       		.byte	0x23
 4473 161f 00       		.uleb128 0
 4474 1620 0E       		.uleb128 0xe
 4475 1621 535000   		.ascii	"SP\000"
 4476 1624 09       		.byte	0x9
 4477 1625 17       		.byte	0x17
 4478 1626 CF150000 		.4byte	0x15cf
 4479 162a 02       		.byte	0x2
 4480 162b 23       		.byte	0x23
 4481 162c 02       		.uleb128 0x2
 4482 162d 0E       		.uleb128 0xe
 4483 162e 72535000 		.ascii	"rSP\000"
 4484 1632 09       		.byte	0x9
ARM GAS  /tmp/cctTTGYb.s 			page 115


 4485 1633 18       		.byte	0x18
 4486 1634 CF150000 		.4byte	0x15cf
 4487 1638 02       		.byte	0x2
 4488 1639 23       		.byte	0x23
 4489 163a 04       		.uleb128 0x4
 4490 163b 0B       		.uleb128 0xb
 4491 163c 89030000 		.4byte	.LASF311
 4492 1640 09       		.byte	0x9
 4493 1641 19       		.byte	0x19
 4494 1642 45000000 		.4byte	0x45
 4495 1646 02       		.byte	0x2
 4496 1647 23       		.byte	0x23
 4497 1648 08       		.uleb128 0x8
 4498 1649 0E       		.uleb128 0xe
 4499 164a 4B7000   		.ascii	"Kp\000"
 4500 164d 09       		.byte	0x9
 4501 164e 1B       		.byte	0x1b
 4502 164f CF150000 		.4byte	0x15cf
 4503 1653 02       		.byte	0x2
 4504 1654 23       		.byte	0x23
 4505 1655 0C       		.uleb128 0xc
 4506 1656 0E       		.uleb128 0xe
 4507 1657 4B6900   		.ascii	"Ki\000"
 4508 165a 09       		.byte	0x9
 4509 165b 1C       		.byte	0x1c
 4510 165c CF150000 		.4byte	0x15cf
 4511 1660 02       		.byte	0x2
 4512 1661 23       		.byte	0x23
 4513 1662 0E       		.uleb128 0xe
 4514 1663 0E       		.uleb128 0xe
 4515 1664 4B6400   		.ascii	"Kd\000"
 4516 1667 09       		.byte	0x9
 4517 1668 1D       		.byte	0x1d
 4518 1669 CF150000 		.4byte	0x15cf
 4519 166d 02       		.byte	0x2
 4520 166e 23       		.byte	0x23
 4521 166f 10       		.uleb128 0x10
 4522 1670 0E       		.uleb128 0xe
 4523 1671 5F6500   		.ascii	"_e\000"
 4524 1674 09       		.byte	0x9
 4525 1675 1F       		.byte	0x1f
 4526 1676 45000000 		.4byte	0x45
 4527 167a 02       		.byte	0x2
 4528 167b 23       		.byte	0x23
 4529 167c 14       		.uleb128 0x14
 4530 167d 0E       		.uleb128 0xe
 4531 167e 5F647800 		.ascii	"_dx\000"
 4532 1682 09       		.byte	0x9
 4533 1683 20       		.byte	0x20
 4534 1684 45000000 		.4byte	0x45
 4535 1688 02       		.byte	0x2
 4536 1689 23       		.byte	0x23
 4537 168a 18       		.uleb128 0x18
 4538 168b 0E       		.uleb128 0xe
 4539 168c 5F646500 		.ascii	"_de\000"
 4540 1690 09       		.byte	0x9
 4541 1691 21       		.byte	0x21
ARM GAS  /tmp/cctTTGYb.s 			page 116


 4542 1692 45000000 		.4byte	0x45
 4543 1696 02       		.byte	0x2
 4544 1697 23       		.byte	0x23
 4545 1698 1C       		.uleb128 0x1c
 4546 1699 0B       		.uleb128 0xb
 4547 169a DE060000 		.4byte	.LASF312
 4548 169e 09       		.byte	0x9
 4549 169f 22       		.byte	0x22
 4550 16a0 45000000 		.4byte	0x45
 4551 16a4 02       		.byte	0x2
 4552 16a5 23       		.byte	0x23
 4553 16a6 20       		.uleb128 0x20
 4554 16a7 0E       		.uleb128 0xe
 4555 16a8 5F7800   		.ascii	"_x\000"
 4556 16ab 09       		.byte	0x9
 4557 16ac 23       		.byte	0x23
 4558 16ad CF150000 		.4byte	0x15cf
 4559 16b1 02       		.byte	0x2
 4560 16b2 23       		.byte	0x23
 4561 16b3 24       		.uleb128 0x24
 4562 16b4 0B       		.uleb128 0xb
 4563 16b5 33030000 		.4byte	.LASF313
 4564 16b9 09       		.byte	0x9
 4565 16ba 25       		.byte	0x25
 4566 16bb 37000000 		.4byte	0x37
 4567 16bf 02       		.byte	0x2
 4568 16c0 23       		.byte	0x23
 4569 16c1 26       		.uleb128 0x26
 4570 16c2 0B       		.uleb128 0xb
 4571 16c3 70010000 		.4byte	.LASF314
 4572 16c7 09       		.byte	0x9
 4573 16c8 27       		.byte	0x27
 4574 16c9 15170000 		.4byte	0x1715
 4575 16cd 02       		.byte	0x2
 4576 16ce 23       		.byte	0x23
 4577 16cf 28       		.uleb128 0x28
 4578 16d0 00       		.byte	0
 4579 16d1 0D       		.uleb128 0xd
 4580 16d2 76050000 		.4byte	.LASF315
 4581 16d6 10       		.byte	0x10
 4582 16d7 09       		.byte	0x9
 4583 16d8 2B       		.byte	0x2b
 4584 16d9 15170000 		.4byte	0x1715
 4585 16dd 0B       		.uleb128 0xb
 4586 16de DE030000 		.4byte	.LASF316
 4587 16e2 09       		.byte	0x9
 4588 16e3 2C       		.byte	0x2c
 4589 16e4 1B170000 		.4byte	0x171b
 4590 16e8 02       		.byte	0x2
 4591 16e9 23       		.byte	0x23
 4592 16ea 00       		.uleb128 0
 4593 16eb 0B       		.uleb128 0xb
 4594 16ec 33030000 		.4byte	.LASF313
 4595 16f0 09       		.byte	0x9
 4596 16f1 2D       		.byte	0x2d
 4597 16f2 45000000 		.4byte	0x45
 4598 16f6 02       		.byte	0x2
ARM GAS  /tmp/cctTTGYb.s 			page 117


 4599 16f7 23       		.byte	0x23
 4600 16f8 04       		.uleb128 0x4
 4601 16f9 0E       		.uleb128 0xe
 4602 16fa 6F6E00   		.ascii	"on\000"
 4603 16fd 09       		.byte	0x9
 4604 16fe 2E       		.byte	0x2e
 4605 16ff 45000000 		.4byte	0x45
 4606 1703 02       		.byte	0x2
 4607 1704 23       		.byte	0x23
 4608 1705 08       		.uleb128 0x8
 4609 1706 0E       		.uleb128 0xe
 4610 1707 6F666600 		.ascii	"off\000"
 4611 170b 09       		.byte	0x9
 4612 170c 2F       		.byte	0x2f
 4613 170d 45000000 		.4byte	0x45
 4614 1711 02       		.byte	0x2
 4615 1712 23       		.byte	0x23
 4616 1713 0C       		.uleb128 0xc
 4617 1714 00       		.byte	0
 4618 1715 0F       		.uleb128 0xf
 4619 1716 04       		.byte	0x4
 4620 1717 D1160000 		.4byte	0x16d1
 4621 171b 0F       		.uleb128 0xf
 4622 171c 04       		.byte	0x4
 4623 171d 45000000 		.4byte	0x45
 4624 1721 23       		.uleb128 0x23
 4625 1722 09000000 		.4byte	.LASF317
 4626 1726 01       		.byte	0x1
 4627 1727 DE05     		.2byte	0x5de
 4628 1729 01       		.byte	0x1
 4629 172a 00000000 		.4byte	.LFB14
 4630 172e 36000000 		.4byte	.LFE14
 4631 1732 00000000 		.4byte	.LLST0
 4632 1736 4A170000 		.4byte	0x174a
 4633 173a 24       		.uleb128 0x24
 4634 173b FA010000 		.4byte	.LASF319
 4635 173f 01       		.byte	0x1
 4636 1740 DE05     		.2byte	0x5de
 4637 1742 D0090000 		.4byte	0x9d0
 4638 1746 02       		.byte	0x2
 4639 1747 91       		.byte	0x91
 4640 1748 77       		.sleb128 -9
 4641 1749 00       		.byte	0
 4642 174a 23       		.uleb128 0x23
 4643 174b 11020000 		.4byte	.LASF318
 4644 174f 01       		.byte	0x1
 4645 1750 3206     		.2byte	0x632
 4646 1752 01       		.byte	0x1
 4647 1753 00000000 		.4byte	.LFB20
 4648 1757 5C000000 		.4byte	.LFE20
 4649 175b 38000000 		.4byte	.LLST1
 4650 175f 82170000 		.4byte	0x1782
 4651 1763 24       		.uleb128 0x24
 4652 1764 FA010000 		.4byte	.LASF319
 4653 1768 01       		.byte	0x1
 4654 1769 3206     		.2byte	0x632
 4655 176b D0090000 		.4byte	0x9d0
ARM GAS  /tmp/cctTTGYb.s 			page 118


 4656 176f 02       		.byte	0x2
 4657 1770 91       		.byte	0x91
 4658 1771 77       		.sleb128 -9
 4659 1772 24       		.uleb128 0x24
 4660 1773 510A0000 		.4byte	.LASF320
 4661 1777 01       		.byte	0x1
 4662 1778 3206     		.2byte	0x632
 4663 177a B9080000 		.4byte	0x8b9
 4664 177e 02       		.byte	0x2
 4665 177f 91       		.byte	0x91
 4666 1780 70       		.sleb128 -16
 4667 1781 00       		.byte	0
 4668 1782 25       		.uleb128 0x25
 4669 1783 01       		.byte	0x1
 4670 1784 F5010000 		.4byte	.LASF321
 4671 1788 02       		.byte	0x2
 4672 1789 24       		.byte	0x24
 4673 178a 45000000 		.4byte	0x45
 4674 178e 00000000 		.4byte	.LFB35
 4675 1792 74020000 		.4byte	.LFE35
 4676 1796 70000000 		.4byte	.LLST2
 4677 179a AD170000 		.4byte	0x17ad
 4678 179e 26       		.uleb128 0x26
 4679 179f 6D020000 		.4byte	.LASF323
 4680 17a3 02       		.byte	0x2
 4681 17a4 26       		.byte	0x26
 4682 17a5 B9080000 		.4byte	0x8b9
 4683 17a9 02       		.byte	0x2
 4684 17aa 91       		.byte	0x91
 4685 17ab 74       		.sleb128 -12
 4686 17ac 00       		.byte	0
 4687 17ad 27       		.uleb128 0x27
 4688 17ae 01       		.byte	0x1
 4689 17af 94080000 		.4byte	.LASF343
 4690 17b3 02       		.byte	0x2
 4691 17b4 65       		.byte	0x65
 4692 17b5 01       		.byte	0x1
 4693 17b6 00000000 		.4byte	.LFB36
 4694 17ba 2C000000 		.4byte	.LFE36
 4695 17be A8000000 		.4byte	.LLST3
 4696 17c2 28       		.uleb128 0x28
 4697 17c3 01       		.byte	0x1
 4698 17c4 6C040000 		.4byte	.LASF322
 4699 17c8 02       		.byte	0x2
 4700 17c9 6B       		.byte	0x6b
 4701 17ca 01       		.byte	0x1
 4702 17cb 00000000 		.4byte	.LFB37
 4703 17cf 42010000 		.4byte	.LFE37
 4704 17d3 D4000000 		.4byte	.LLST4
 4705 17d7 F8170000 		.4byte	0x17f8
 4706 17db 26       		.uleb128 0x26
 4707 17dc 120B0000 		.4byte	.LASF324
 4708 17e0 02       		.byte	0x2
 4709 17e1 6E       		.byte	0x6e
 4710 17e2 B9080000 		.4byte	0x8b9
 4711 17e6 02       		.byte	0x2
 4712 17e7 91       		.byte	0x91
ARM GAS  /tmp/cctTTGYb.s 			page 119


 4713 17e8 70       		.sleb128 -16
 4714 17e9 26       		.uleb128 0x26
 4715 17ea 37000000 		.4byte	.LASF325
 4716 17ee 02       		.byte	0x2
 4717 17ef 6F       		.byte	0x6f
 4718 17f0 B9080000 		.4byte	0x8b9
 4719 17f4 02       		.byte	0x2
 4720 17f5 91       		.byte	0x91
 4721 17f6 74       		.sleb128 -12
 4722 17f7 00       		.byte	0
 4723 17f8 29       		.uleb128 0x29
 4724 17f9 55090000 		.4byte	.LASF328
 4725 17fd 02       		.byte	0x2
 4726 17fe 87       		.byte	0x87
 4727 17ff 00000000 		.4byte	.LFB38
 4728 1803 4C020000 		.4byte	.LFE38
 4729 1807 0C010000 		.4byte	.LLST5
 4730 180b 36180000 		.4byte	0x1836
 4731 180f 2A       		.uleb128 0x2a
 4732 1810 64697600 		.ascii	"div\000"
 4733 1814 02       		.byte	0x2
 4734 1815 89       		.byte	0x89
 4735 1816 B9080000 		.4byte	0x8b9
 4736 181a 02       		.byte	0x2
 4737 181b 91       		.byte	0x91
 4738 181c 6C       		.sleb128 -20
 4739 181d 26       		.uleb128 0x26
 4740 181e E8080000 		.4byte	.LASF326
 4741 1822 02       		.byte	0x2
 4742 1823 8A       		.byte	0x8a
 4743 1824 B9080000 		.4byte	0x8b9
 4744 1828 02       		.byte	0x2
 4745 1829 91       		.byte	0x91
 4746 182a 68       		.sleb128 -24
 4747 182b 2B       		.uleb128 0x2b
 4748 182c DA020000 		.4byte	.LASF344
 4749 1830 46180000 		.4byte	0x1846
 4750 1834 01       		.byte	0x1
 4751 1835 00       		.byte	0
 4752 1836 08       		.uleb128 0x8
 4753 1837 F9050000 		.4byte	0x5f9
 4754 183b 46180000 		.4byte	0x1846
 4755 183f 09       		.uleb128 0x9
 4756 1840 4C000000 		.4byte	0x4c
 4757 1844 04       		.byte	0x4
 4758 1845 00       		.byte	0
 4759 1846 17       		.uleb128 0x17
 4760 1847 36180000 		.4byte	0x1836
 4761 184b 2C       		.uleb128 0x2c
 4762 184c CD000000 		.4byte	.LASF327
 4763 1850 02       		.byte	0x2
 4764 1851 C2       		.byte	0xc2
 4765 1852 01       		.byte	0x1
 4766 1853 00000000 		.4byte	.LFB39
 4767 1857 B2010000 		.4byte	.LFE39
 4768 185b 44010000 		.4byte	.LLST6
 4769 185f 72180000 		.4byte	0x1872
ARM GAS  /tmp/cctTTGYb.s 			page 120


 4770 1863 2D       		.uleb128 0x2d
 4771 1864 6E657700 		.ascii	"new\000"
 4772 1868 02       		.byte	0x2
 4773 1869 C2       		.byte	0xc2
 4774 186a 98080000 		.4byte	0x898
 4775 186e 02       		.byte	0x2
 4776 186f 91       		.byte	0x91
 4777 1870 77       		.sleb128 -9
 4778 1871 00       		.byte	0
 4779 1872 2E       		.uleb128 0x2e
 4780 1873 636C6900 		.ascii	"cli\000"
 4781 1877 02       		.byte	0x2
 4782 1878 E4       		.byte	0xe4
 4783 1879 00000000 		.4byte	.LFB40
 4784 187d C8030000 		.4byte	.LFE40
 4785 1881 7C010000 		.4byte	.LLST7
 4786 1885 C3180000 		.4byte	0x18c3
 4787 1889 26       		.uleb128 0x26
 4788 188a 9D050000 		.4byte	.LASF329
 4789 188e 02       		.byte	0x2
 4790 188f E6       		.byte	0xe6
 4791 1890 45000000 		.4byte	0x45
 4792 1894 02       		.byte	0x2
 4793 1895 91       		.byte	0x91
 4794 1896 6C       		.sleb128 -20
 4795 1897 26       		.uleb128 0x26
 4796 1898 BB050000 		.4byte	.LASF330
 4797 189c 02       		.byte	0x2
 4798 189d E7       		.byte	0xe7
 4799 189e C3180000 		.4byte	0x18c3
 4800 18a2 02       		.byte	0x2
 4801 18a3 91       		.byte	0x91
 4802 18a4 60       		.sleb128 -32
 4803 18a5 26       		.uleb128 0x26
 4804 18a6 44050000 		.4byte	.LASF331
 4805 18aa 02       		.byte	0x2
 4806 18ab E8       		.byte	0xe8
 4807 18ac D3180000 		.4byte	0x18d3
 4808 18b0 02       		.byte	0x2
 4809 18b1 91       		.byte	0x91
 4810 18b2 40       		.sleb128 -64
 4811 18b3 2A       		.uleb128 0x2a
 4812 18b4 636D6400 		.ascii	"cmd\000"
 4813 18b8 02       		.byte	0x2
 4814 18b9 E9       		.byte	0xe9
 4815 18ba F9050000 		.4byte	0x5f9
 4816 18be 03       		.byte	0x3
 4817 18bf 91       		.byte	0x91
 4818 18c0 BF7F     		.sleb128 -65
 4819 18c2 00       		.byte	0
 4820 18c3 08       		.uleb128 0x8
 4821 18c4 45000000 		.4byte	0x45
 4822 18c8 D3180000 		.4byte	0x18d3
 4823 18cc 09       		.uleb128 0x9
 4824 18cd 4C000000 		.4byte	0x4c
 4825 18d1 02       		.byte	0x2
 4826 18d2 00       		.byte	0
ARM GAS  /tmp/cctTTGYb.s 			page 121


 4827 18d3 08       		.uleb128 0x8
 4828 18d4 F9050000 		.4byte	0x5f9
 4829 18d8 E3180000 		.4byte	0x18e3
 4830 18dc 09       		.uleb128 0x9
 4831 18dd 4C000000 		.4byte	0x4c
 4832 18e1 1F       		.byte	0x1f
 4833 18e2 00       		.byte	0
 4834 18e3 2F       		.uleb128 0x2f
 4835 18e4 B3010000 		.4byte	.LASF332
 4836 18e8 06       		.byte	0x6
 4837 18e9 4803     		.2byte	0x348
 4838 18eb 74040000 		.4byte	0x474
 4839 18ef 01       		.byte	0x1
 4840 18f0 01       		.byte	0x1
 4841 18f1 2F       		.uleb128 0x2f
 4842 18f2 CB060000 		.4byte	.LASF333
 4843 18f6 01       		.byte	0x1
 4844 18f7 CE06     		.2byte	0x6ce
 4845 18f9 FF180000 		.4byte	0x18ff
 4846 18fd 01       		.byte	0x1
 4847 18fe 01       		.byte	0x1
 4848 18ff 19       		.uleb128 0x19
 4849 1900 45000000 		.4byte	0x45
 4850 1904 08       		.uleb128 0x8
 4851 1905 CF150000 		.4byte	0x15cf
 4852 1909 14190000 		.4byte	0x1914
 4853 190d 09       		.uleb128 0x9
 4854 190e 4C000000 		.4byte	0x4c
 4855 1912 01       		.byte	0x1
 4856 1913 00       		.byte	0
 4857 1914 30       		.uleb128 0x30
 4858 1915 DE030000 		.4byte	.LASF316
 4859 1919 02       		.byte	0x2
 4860 191a 16       		.byte	0x16
 4861 191b 04190000 		.4byte	0x1904
 4862 191f 01       		.byte	0x1
 4863 1920 01       		.byte	0x1
 4864 1921 30       		.uleb128 0x30
 4865 1922 8A000000 		.4byte	.LASF334
 4866 1926 02       		.byte	0x2
 4867 1927 17       		.byte	0x17
 4868 1928 98080000 		.4byte	0x898
 4869 192c 01       		.byte	0x1
 4870 192d 01       		.byte	0x1
 4871 192e 30       		.uleb128 0x30
 4872 192f C6090000 		.4byte	.LASF335
 4873 1933 02       		.byte	0x2
 4874 1934 19       		.byte	0x19
 4875 1935 06160000 		.4byte	0x1606
 4876 1939 01       		.byte	0x1
 4877 193a 01       		.byte	0x1
 4878 193b 30       		.uleb128 0x30
 4879 193c CD070000 		.4byte	.LASF336
 4880 1940 02       		.byte	0x2
 4881 1941 1A       		.byte	0x1a
 4882 1942 D1160000 		.4byte	0x16d1
 4883 1946 01       		.byte	0x1
ARM GAS  /tmp/cctTTGYb.s 			page 122


 4884 1947 01       		.byte	0x1
 4885 1948 30       		.uleb128 0x30
 4886 1949 90030000 		.4byte	.LASF337
 4887 194d 02       		.byte	0x2
 4888 194e 1B       		.byte	0x1b
 4889 194f D1160000 		.4byte	0x16d1
 4890 1953 01       		.byte	0x1
 4891 1954 01       		.byte	0x1
 4892 1955 30       		.uleb128 0x30
 4893 1956 79010000 		.4byte	.LASF338
 4894 195a 02       		.byte	0x2
 4895 195b 1D       		.byte	0x1d
 4896 195c B9080000 		.4byte	0x8b9
 4897 1960 01       		.byte	0x1
 4898 1961 01       		.byte	0x1
 4899 1962 30       		.uleb128 0x30
 4900 1963 290A0000 		.4byte	.LASF339
 4901 1967 02       		.byte	0x2
 4902 1968 1E       		.byte	0x1e
 4903 1969 B9080000 		.4byte	0x8b9
 4904 196d 01       		.byte	0x1
 4905 196e 01       		.byte	0x1
 4906 196f 2F       		.uleb128 0x2f
 4907 1970 B3010000 		.4byte	.LASF332
 4908 1974 06       		.byte	0x6
 4909 1975 4803     		.2byte	0x348
 4910 1977 74040000 		.4byte	0x474
 4911 197b 01       		.byte	0x1
 4912 197c 01       		.byte	0x1
 4913 197d 2F       		.uleb128 0x2f
 4914 197e CB060000 		.4byte	.LASF333
 4915 1982 01       		.byte	0x1
 4916 1983 CE06     		.2byte	0x6ce
 4917 1985 FF180000 		.4byte	0x18ff
 4918 1989 01       		.byte	0x1
 4919 198a 01       		.byte	0x1
 4920 198b 31       		.uleb128 0x31
 4921 198c DE030000 		.4byte	.LASF316
 4922 1990 02       		.byte	0x2
 4923 1991 16       		.byte	0x16
 4924 1992 04190000 		.4byte	0x1904
 4925 1996 01       		.byte	0x1
 4926 1997 05       		.byte	0x5
 4927 1998 03       		.byte	0x3
 4928 1999 00000000 		.4byte	input
 4929 199d 31       		.uleb128 0x31
 4930 199e 8A000000 		.4byte	.LASF334
 4931 19a2 02       		.byte	0x2
 4932 19a3 17       		.byte	0x17
 4933 19a4 98080000 		.4byte	0x898
 4934 19a8 01       		.byte	0x1
 4935 19a9 05       		.byte	0x5
 4936 19aa 03       		.byte	0x3
 4937 19ab 00000000 		.4byte	_state
 4938 19af 31       		.uleb128 0x31
 4939 19b0 C6090000 		.4byte	.LASF335
 4940 19b4 02       		.byte	0x2
ARM GAS  /tmp/cctTTGYb.s 			page 123


 4941 19b5 19       		.byte	0x19
 4942 19b6 06160000 		.4byte	0x1606
 4943 19ba 01       		.byte	0x1
 4944 19bb 05       		.byte	0x5
 4945 19bc 03       		.byte	0x3
 4946 19bd 00000000 		.4byte	loop
 4947 19c1 31       		.uleb128 0x31
 4948 19c2 CD070000 		.4byte	.LASF336
 4949 19c6 02       		.byte	0x2
 4950 19c7 1A       		.byte	0x1a
 4951 19c8 D1160000 		.4byte	0x16d1
 4952 19cc 01       		.byte	0x1
 4953 19cd 05       		.byte	0x5
 4954 19ce 03       		.byte	0x3
 4955 19cf 00000000 		.4byte	ntrip
 4956 19d3 31       		.uleb128 0x31
 4957 19d4 90030000 		.4byte	.LASF337
 4958 19d8 02       		.byte	0x2
 4959 19d9 1B       		.byte	0x1b
 4960 19da D1160000 		.4byte	0x16d1
 4961 19de 01       		.byte	0x1
 4962 19df 05       		.byte	0x5
 4963 19e0 03       		.byte	0x3
 4964 19e1 00000000 		.4byte	rtrip
 4965 19e5 31       		.uleb128 0x31
 4966 19e6 79010000 		.4byte	.LASF338
 4967 19ea 02       		.byte	0x2
 4968 19eb 1D       		.byte	0x1d
 4969 19ec B9080000 		.4byte	0x8b9
 4970 19f0 01       		.byte	0x1
 4971 19f1 05       		.byte	0x5
 4972 19f2 03       		.byte	0x3
 4973 19f3 00000000 		.4byte	releasetime
 4974 19f7 31       		.uleb128 0x31
 4975 19f8 290A0000 		.4byte	.LASF339
 4976 19fc 02       		.byte	0x2
 4977 19fd 1E       		.byte	0x1e
 4978 19fe B9080000 		.4byte	0x8b9
 4979 1a02 01       		.byte	0x1
 4980 1a03 05       		.byte	0x5
 4981 1a04 03       		.byte	0x3
 4982 1a05 00000000 		.4byte	dxmax
 4983 1a09 00       		.byte	0
 4984              		.section	.debug_abbrev,"",%progbits
 4985              	.Ldebug_abbrev0:
 4986 0000 01       		.uleb128 0x1
 4987 0001 11       		.uleb128 0x11
 4988 0002 01       		.byte	0x1
 4989 0003 25       		.uleb128 0x25
 4990 0004 0E       		.uleb128 0xe
 4991 0005 13       		.uleb128 0x13
 4992 0006 0B       		.uleb128 0xb
 4993 0007 03       		.uleb128 0x3
 4994 0008 0E       		.uleb128 0xe
 4995 0009 1B       		.uleb128 0x1b
 4996 000a 0E       		.uleb128 0xe
 4997 000b 11       		.uleb128 0x11
ARM GAS  /tmp/cctTTGYb.s 			page 124


 4998 000c 01       		.uleb128 0x1
 4999 000d 52       		.uleb128 0x52
 5000 000e 01       		.uleb128 0x1
 5001 000f 55       		.uleb128 0x55
 5002 0010 06       		.uleb128 0x6
 5003 0011 10       		.uleb128 0x10
 5004 0012 06       		.uleb128 0x6
 5005 0013 00       		.byte	0
 5006 0014 00       		.byte	0
 5007 0015 02       		.uleb128 0x2
 5008 0016 24       		.uleb128 0x24
 5009 0017 00       		.byte	0
 5010 0018 0B       		.uleb128 0xb
 5011 0019 0B       		.uleb128 0xb
 5012 001a 3E       		.uleb128 0x3e
 5013 001b 0B       		.uleb128 0xb
 5014 001c 03       		.uleb128 0x3
 5015 001d 0E       		.uleb128 0xe
 5016 001e 00       		.byte	0
 5017 001f 00       		.byte	0
 5018 0020 03       		.uleb128 0x3
 5019 0021 24       		.uleb128 0x24
 5020 0022 00       		.byte	0
 5021 0023 0B       		.uleb128 0xb
 5022 0024 0B       		.uleb128 0xb
 5023 0025 3E       		.uleb128 0x3e
 5024 0026 0B       		.uleb128 0xb
 5025 0027 03       		.uleb128 0x3
 5026 0028 08       		.uleb128 0x8
 5027 0029 00       		.byte	0
 5028 002a 00       		.byte	0
 5029 002b 04       		.uleb128 0x4
 5030 002c 16       		.uleb128 0x16
 5031 002d 00       		.byte	0
 5032 002e 03       		.uleb128 0x3
 5033 002f 0E       		.uleb128 0xe
 5034 0030 3A       		.uleb128 0x3a
 5035 0031 0B       		.uleb128 0xb
 5036 0032 3B       		.uleb128 0x3b
 5037 0033 0B       		.uleb128 0xb
 5038 0034 49       		.uleb128 0x49
 5039 0035 13       		.uleb128 0x13
 5040 0036 00       		.byte	0
 5041 0037 00       		.byte	0
 5042 0038 05       		.uleb128 0x5
 5043 0039 16       		.uleb128 0x16
 5044 003a 00       		.byte	0
 5045 003b 03       		.uleb128 0x3
 5046 003c 0E       		.uleb128 0xe
 5047 003d 3A       		.uleb128 0x3a
 5048 003e 0B       		.uleb128 0xb
 5049 003f 3B       		.uleb128 0x3b
 5050 0040 05       		.uleb128 0x5
 5051 0041 49       		.uleb128 0x49
 5052 0042 13       		.uleb128 0x13
 5053 0043 00       		.byte	0
 5054 0044 00       		.byte	0
ARM GAS  /tmp/cctTTGYb.s 			page 125


 5055 0045 06       		.uleb128 0x6
 5056 0046 17       		.uleb128 0x17
 5057 0047 01       		.byte	0x1
 5058 0048 0B       		.uleb128 0xb
 5059 0049 0B       		.uleb128 0xb
 5060 004a 3A       		.uleb128 0x3a
 5061 004b 0B       		.uleb128 0xb
 5062 004c 3B       		.uleb128 0x3b
 5063 004d 0B       		.uleb128 0xb
 5064 004e 01       		.uleb128 0x1
 5065 004f 13       		.uleb128 0x13
 5066 0050 00       		.byte	0
 5067 0051 00       		.byte	0
 5068 0052 07       		.uleb128 0x7
 5069 0053 0D       		.uleb128 0xd
 5070 0054 00       		.byte	0
 5071 0055 03       		.uleb128 0x3
 5072 0056 0E       		.uleb128 0xe
 5073 0057 3A       		.uleb128 0x3a
 5074 0058 0B       		.uleb128 0xb
 5075 0059 3B       		.uleb128 0x3b
 5076 005a 0B       		.uleb128 0xb
 5077 005b 49       		.uleb128 0x49
 5078 005c 13       		.uleb128 0x13
 5079 005d 00       		.byte	0
 5080 005e 00       		.byte	0
 5081 005f 08       		.uleb128 0x8
 5082 0060 01       		.uleb128 0x1
 5083 0061 01       		.byte	0x1
 5084 0062 49       		.uleb128 0x49
 5085 0063 13       		.uleb128 0x13
 5086 0064 01       		.uleb128 0x1
 5087 0065 13       		.uleb128 0x13
 5088 0066 00       		.byte	0
 5089 0067 00       		.byte	0
 5090 0068 09       		.uleb128 0x9
 5091 0069 21       		.uleb128 0x21
 5092 006a 00       		.byte	0
 5093 006b 49       		.uleb128 0x49
 5094 006c 13       		.uleb128 0x13
 5095 006d 2F       		.uleb128 0x2f
 5096 006e 0B       		.uleb128 0xb
 5097 006f 00       		.byte	0
 5098 0070 00       		.byte	0
 5099 0071 0A       		.uleb128 0xa
 5100 0072 13       		.uleb128 0x13
 5101 0073 01       		.byte	0x1
 5102 0074 0B       		.uleb128 0xb
 5103 0075 0B       		.uleb128 0xb
 5104 0076 3A       		.uleb128 0x3a
 5105 0077 0B       		.uleb128 0xb
 5106 0078 3B       		.uleb128 0x3b
 5107 0079 0B       		.uleb128 0xb
 5108 007a 01       		.uleb128 0x1
 5109 007b 13       		.uleb128 0x13
 5110 007c 00       		.byte	0
 5111 007d 00       		.byte	0
ARM GAS  /tmp/cctTTGYb.s 			page 126


 5112 007e 0B       		.uleb128 0xb
 5113 007f 0D       		.uleb128 0xd
 5114 0080 00       		.byte	0
 5115 0081 03       		.uleb128 0x3
 5116 0082 0E       		.uleb128 0xe
 5117 0083 3A       		.uleb128 0x3a
 5118 0084 0B       		.uleb128 0xb
 5119 0085 3B       		.uleb128 0x3b
 5120 0086 0B       		.uleb128 0xb
 5121 0087 49       		.uleb128 0x49
 5122 0088 13       		.uleb128 0x13
 5123 0089 38       		.uleb128 0x38
 5124 008a 0A       		.uleb128 0xa
 5125 008b 00       		.byte	0
 5126 008c 00       		.byte	0
 5127 008d 0C       		.uleb128 0xc
 5128 008e 0F       		.uleb128 0xf
 5129 008f 00       		.byte	0
 5130 0090 0B       		.uleb128 0xb
 5131 0091 0B       		.uleb128 0xb
 5132 0092 00       		.byte	0
 5133 0093 00       		.byte	0
 5134 0094 0D       		.uleb128 0xd
 5135 0095 13       		.uleb128 0x13
 5136 0096 01       		.byte	0x1
 5137 0097 03       		.uleb128 0x3
 5138 0098 0E       		.uleb128 0xe
 5139 0099 0B       		.uleb128 0xb
 5140 009a 0B       		.uleb128 0xb
 5141 009b 3A       		.uleb128 0x3a
 5142 009c 0B       		.uleb128 0xb
 5143 009d 3B       		.uleb128 0x3b
 5144 009e 0B       		.uleb128 0xb
 5145 009f 01       		.uleb128 0x1
 5146 00a0 13       		.uleb128 0x13
 5147 00a1 00       		.byte	0
 5148 00a2 00       		.byte	0
 5149 00a3 0E       		.uleb128 0xe
 5150 00a4 0D       		.uleb128 0xd
 5151 00a5 00       		.byte	0
 5152 00a6 03       		.uleb128 0x3
 5153 00a7 08       		.uleb128 0x8
 5154 00a8 3A       		.uleb128 0x3a
 5155 00a9 0B       		.uleb128 0xb
 5156 00aa 3B       		.uleb128 0x3b
 5157 00ab 0B       		.uleb128 0xb
 5158 00ac 49       		.uleb128 0x49
 5159 00ad 13       		.uleb128 0x13
 5160 00ae 38       		.uleb128 0x38
 5161 00af 0A       		.uleb128 0xa
 5162 00b0 00       		.byte	0
 5163 00b1 00       		.byte	0
 5164 00b2 0F       		.uleb128 0xf
 5165 00b3 0F       		.uleb128 0xf
 5166 00b4 00       		.byte	0
 5167 00b5 0B       		.uleb128 0xb
 5168 00b6 0B       		.uleb128 0xb
ARM GAS  /tmp/cctTTGYb.s 			page 127


 5169 00b7 49       		.uleb128 0x49
 5170 00b8 13       		.uleb128 0x13
 5171 00b9 00       		.byte	0
 5172 00ba 00       		.byte	0
 5173 00bb 10       		.uleb128 0x10
 5174 00bc 13       		.uleb128 0x13
 5175 00bd 01       		.byte	0x1
 5176 00be 03       		.uleb128 0x3
 5177 00bf 0E       		.uleb128 0xe
 5178 00c0 0B       		.uleb128 0xb
 5179 00c1 05       		.uleb128 0x5
 5180 00c2 3A       		.uleb128 0x3a
 5181 00c3 0B       		.uleb128 0xb
 5182 00c4 3B       		.uleb128 0x3b
 5183 00c5 0B       		.uleb128 0xb
 5184 00c6 01       		.uleb128 0x1
 5185 00c7 13       		.uleb128 0x13
 5186 00c8 00       		.byte	0
 5187 00c9 00       		.byte	0
 5188 00ca 11       		.uleb128 0x11
 5189 00cb 15       		.uleb128 0x15
 5190 00cc 00       		.byte	0
 5191 00cd 27       		.uleb128 0x27
 5192 00ce 0C       		.uleb128 0xc
 5193 00cf 00       		.byte	0
 5194 00d0 00       		.byte	0
 5195 00d1 12       		.uleb128 0x12
 5196 00d2 13       		.uleb128 0x13
 5197 00d3 01       		.byte	0x1
 5198 00d4 03       		.uleb128 0x3
 5199 00d5 0E       		.uleb128 0xe
 5200 00d6 0B       		.uleb128 0xb
 5201 00d7 0B       		.uleb128 0xb
 5202 00d8 3A       		.uleb128 0x3a
 5203 00d9 0B       		.uleb128 0xb
 5204 00da 3B       		.uleb128 0x3b
 5205 00db 05       		.uleb128 0x5
 5206 00dc 01       		.uleb128 0x1
 5207 00dd 13       		.uleb128 0x13
 5208 00de 00       		.byte	0
 5209 00df 00       		.byte	0
 5210 00e0 13       		.uleb128 0x13
 5211 00e1 0D       		.uleb128 0xd
 5212 00e2 00       		.byte	0
 5213 00e3 03       		.uleb128 0x3
 5214 00e4 0E       		.uleb128 0xe
 5215 00e5 3A       		.uleb128 0x3a
 5216 00e6 0B       		.uleb128 0xb
 5217 00e7 3B       		.uleb128 0x3b
 5218 00e8 05       		.uleb128 0x5
 5219 00e9 49       		.uleb128 0x49
 5220 00ea 13       		.uleb128 0x13
 5221 00eb 38       		.uleb128 0x38
 5222 00ec 0A       		.uleb128 0xa
 5223 00ed 00       		.byte	0
 5224 00ee 00       		.byte	0
 5225 00ef 14       		.uleb128 0x14
ARM GAS  /tmp/cctTTGYb.s 			page 128


 5226 00f0 0D       		.uleb128 0xd
 5227 00f1 00       		.byte	0
 5228 00f2 03       		.uleb128 0x3
 5229 00f3 08       		.uleb128 0x8
 5230 00f4 3A       		.uleb128 0x3a
 5231 00f5 0B       		.uleb128 0xb
 5232 00f6 3B       		.uleb128 0x3b
 5233 00f7 05       		.uleb128 0x5
 5234 00f8 49       		.uleb128 0x49
 5235 00f9 13       		.uleb128 0x13
 5236 00fa 38       		.uleb128 0x38
 5237 00fb 0A       		.uleb128 0xa
 5238 00fc 00       		.byte	0
 5239 00fd 00       		.byte	0
 5240 00fe 15       		.uleb128 0x15
 5241 00ff 15       		.uleb128 0x15
 5242 0100 01       		.byte	0x1
 5243 0101 27       		.uleb128 0x27
 5244 0102 0C       		.uleb128 0xc
 5245 0103 49       		.uleb128 0x49
 5246 0104 13       		.uleb128 0x13
 5247 0105 01       		.uleb128 0x1
 5248 0106 13       		.uleb128 0x13
 5249 0107 00       		.byte	0
 5250 0108 00       		.byte	0
 5251 0109 16       		.uleb128 0x16
 5252 010a 05       		.uleb128 0x5
 5253 010b 00       		.byte	0
 5254 010c 49       		.uleb128 0x49
 5255 010d 13       		.uleb128 0x13
 5256 010e 00       		.byte	0
 5257 010f 00       		.byte	0
 5258 0110 17       		.uleb128 0x17
 5259 0111 26       		.uleb128 0x26
 5260 0112 00       		.byte	0
 5261 0113 49       		.uleb128 0x49
 5262 0114 13       		.uleb128 0x13
 5263 0115 00       		.byte	0
 5264 0116 00       		.byte	0
 5265 0117 18       		.uleb128 0x18
 5266 0118 15       		.uleb128 0x15
 5267 0119 01       		.byte	0x1
 5268 011a 27       		.uleb128 0x27
 5269 011b 0C       		.uleb128 0xc
 5270 011c 01       		.uleb128 0x1
 5271 011d 13       		.uleb128 0x13
 5272 011e 00       		.byte	0
 5273 011f 00       		.byte	0
 5274 0120 19       		.uleb128 0x19
 5275 0121 35       		.uleb128 0x35
 5276 0122 00       		.byte	0
 5277 0123 49       		.uleb128 0x49
 5278 0124 13       		.uleb128 0x13
 5279 0125 00       		.byte	0
 5280 0126 00       		.byte	0
 5281 0127 1A       		.uleb128 0x1a
 5282 0128 04       		.uleb128 0x4
ARM GAS  /tmp/cctTTGYb.s 			page 129


 5283 0129 01       		.byte	0x1
 5284 012a 03       		.uleb128 0x3
 5285 012b 0E       		.uleb128 0xe
 5286 012c 0B       		.uleb128 0xb
 5287 012d 0B       		.uleb128 0xb
 5288 012e 3A       		.uleb128 0x3a
 5289 012f 0B       		.uleb128 0xb
 5290 0130 3B       		.uleb128 0x3b
 5291 0131 0B       		.uleb128 0xb
 5292 0132 01       		.uleb128 0x1
 5293 0133 13       		.uleb128 0x13
 5294 0134 00       		.byte	0
 5295 0135 00       		.byte	0
 5296 0136 1B       		.uleb128 0x1b
 5297 0137 28       		.uleb128 0x28
 5298 0138 00       		.byte	0
 5299 0139 03       		.uleb128 0x3
 5300 013a 0E       		.uleb128 0xe
 5301 013b 1C       		.uleb128 0x1c
 5302 013c 0D       		.uleb128 0xd
 5303 013d 00       		.byte	0
 5304 013e 00       		.byte	0
 5305 013f 1C       		.uleb128 0x1c
 5306 0140 13       		.uleb128 0x13
 5307 0141 01       		.byte	0x1
 5308 0142 0B       		.uleb128 0xb
 5309 0143 05       		.uleb128 0x5
 5310 0144 3A       		.uleb128 0x3a
 5311 0145 0B       		.uleb128 0xb
 5312 0146 3B       		.uleb128 0x3b
 5313 0147 0B       		.uleb128 0xb
 5314 0148 01       		.uleb128 0x1
 5315 0149 13       		.uleb128 0x13
 5316 014a 00       		.byte	0
 5317 014b 00       		.byte	0
 5318 014c 1D       		.uleb128 0x1d
 5319 014d 21       		.uleb128 0x21
 5320 014e 00       		.byte	0
 5321 014f 49       		.uleb128 0x49
 5322 0150 13       		.uleb128 0x13
 5323 0151 2F       		.uleb128 0x2f
 5324 0152 05       		.uleb128 0x5
 5325 0153 00       		.byte	0
 5326 0154 00       		.byte	0
 5327 0155 1E       		.uleb128 0x1e
 5328 0156 16       		.uleb128 0x16
 5329 0157 00       		.byte	0
 5330 0158 03       		.uleb128 0x3
 5331 0159 08       		.uleb128 0x8
 5332 015a 3A       		.uleb128 0x3a
 5333 015b 0B       		.uleb128 0xb
 5334 015c 3B       		.uleb128 0x3b
 5335 015d 05       		.uleb128 0x5
 5336 015e 49       		.uleb128 0x49
 5337 015f 13       		.uleb128 0x13
 5338 0160 00       		.byte	0
 5339 0161 00       		.byte	0
ARM GAS  /tmp/cctTTGYb.s 			page 130


 5340 0162 1F       		.uleb128 0x1f
 5341 0163 13       		.uleb128 0x13
 5342 0164 01       		.byte	0x1
 5343 0165 0B       		.uleb128 0xb
 5344 0166 0B       		.uleb128 0xb
 5345 0167 3A       		.uleb128 0x3a
 5346 0168 0B       		.uleb128 0xb
 5347 0169 3B       		.uleb128 0x3b
 5348 016a 05       		.uleb128 0x5
 5349 016b 01       		.uleb128 0x1
 5350 016c 13       		.uleb128 0x13
 5351 016d 00       		.byte	0
 5352 016e 00       		.byte	0
 5353 016f 20       		.uleb128 0x20
 5354 0170 13       		.uleb128 0x13
 5355 0171 01       		.byte	0x1
 5356 0172 0B       		.uleb128 0xb
 5357 0173 05       		.uleb128 0x5
 5358 0174 3A       		.uleb128 0x3a
 5359 0175 0B       		.uleb128 0xb
 5360 0176 3B       		.uleb128 0x3b
 5361 0177 05       		.uleb128 0x5
 5362 0178 01       		.uleb128 0x1
 5363 0179 13       		.uleb128 0x13
 5364 017a 00       		.byte	0
 5365 017b 00       		.byte	0
 5366 017c 21       		.uleb128 0x21
 5367 017d 04       		.uleb128 0x4
 5368 017e 01       		.byte	0x1
 5369 017f 0B       		.uleb128 0xb
 5370 0180 0B       		.uleb128 0xb
 5371 0181 3A       		.uleb128 0x3a
 5372 0182 0B       		.uleb128 0xb
 5373 0183 3B       		.uleb128 0x3b
 5374 0184 0B       		.uleb128 0xb
 5375 0185 01       		.uleb128 0x1
 5376 0186 13       		.uleb128 0x13
 5377 0187 00       		.byte	0
 5378 0188 00       		.byte	0
 5379 0189 22       		.uleb128 0x22
 5380 018a 28       		.uleb128 0x28
 5381 018b 00       		.byte	0
 5382 018c 03       		.uleb128 0x3
 5383 018d 08       		.uleb128 0x8
 5384 018e 1C       		.uleb128 0x1c
 5385 018f 0D       		.uleb128 0xd
 5386 0190 00       		.byte	0
 5387 0191 00       		.byte	0
 5388 0192 23       		.uleb128 0x23
 5389 0193 2E       		.uleb128 0x2e
 5390 0194 01       		.byte	0x1
 5391 0195 03       		.uleb128 0x3
 5392 0196 0E       		.uleb128 0xe
 5393 0197 3A       		.uleb128 0x3a
 5394 0198 0B       		.uleb128 0xb
 5395 0199 3B       		.uleb128 0x3b
 5396 019a 05       		.uleb128 0x5
ARM GAS  /tmp/cctTTGYb.s 			page 131


 5397 019b 27       		.uleb128 0x27
 5398 019c 0C       		.uleb128 0xc
 5399 019d 11       		.uleb128 0x11
 5400 019e 01       		.uleb128 0x1
 5401 019f 12       		.uleb128 0x12
 5402 01a0 01       		.uleb128 0x1
 5403 01a1 40       		.uleb128 0x40
 5404 01a2 06       		.uleb128 0x6
 5405 01a3 01       		.uleb128 0x1
 5406 01a4 13       		.uleb128 0x13
 5407 01a5 00       		.byte	0
 5408 01a6 00       		.byte	0
 5409 01a7 24       		.uleb128 0x24
 5410 01a8 05       		.uleb128 0x5
 5411 01a9 00       		.byte	0
 5412 01aa 03       		.uleb128 0x3
 5413 01ab 0E       		.uleb128 0xe
 5414 01ac 3A       		.uleb128 0x3a
 5415 01ad 0B       		.uleb128 0xb
 5416 01ae 3B       		.uleb128 0x3b
 5417 01af 05       		.uleb128 0x5
 5418 01b0 49       		.uleb128 0x49
 5419 01b1 13       		.uleb128 0x13
 5420 01b2 02       		.uleb128 0x2
 5421 01b3 0A       		.uleb128 0xa
 5422 01b4 00       		.byte	0
 5423 01b5 00       		.byte	0
 5424 01b6 25       		.uleb128 0x25
 5425 01b7 2E       		.uleb128 0x2e
 5426 01b8 01       		.byte	0x1
 5427 01b9 3F       		.uleb128 0x3f
 5428 01ba 0C       		.uleb128 0xc
 5429 01bb 03       		.uleb128 0x3
 5430 01bc 0E       		.uleb128 0xe
 5431 01bd 3A       		.uleb128 0x3a
 5432 01be 0B       		.uleb128 0xb
 5433 01bf 3B       		.uleb128 0x3b
 5434 01c0 0B       		.uleb128 0xb
 5435 01c1 49       		.uleb128 0x49
 5436 01c2 13       		.uleb128 0x13
 5437 01c3 11       		.uleb128 0x11
 5438 01c4 01       		.uleb128 0x1
 5439 01c5 12       		.uleb128 0x12
 5440 01c6 01       		.uleb128 0x1
 5441 01c7 40       		.uleb128 0x40
 5442 01c8 06       		.uleb128 0x6
 5443 01c9 01       		.uleb128 0x1
 5444 01ca 13       		.uleb128 0x13
 5445 01cb 00       		.byte	0
 5446 01cc 00       		.byte	0
 5447 01cd 26       		.uleb128 0x26
 5448 01ce 34       		.uleb128 0x34
 5449 01cf 00       		.byte	0
 5450 01d0 03       		.uleb128 0x3
 5451 01d1 0E       		.uleb128 0xe
 5452 01d2 3A       		.uleb128 0x3a
 5453 01d3 0B       		.uleb128 0xb
ARM GAS  /tmp/cctTTGYb.s 			page 132


 5454 01d4 3B       		.uleb128 0x3b
 5455 01d5 0B       		.uleb128 0xb
 5456 01d6 49       		.uleb128 0x49
 5457 01d7 13       		.uleb128 0x13
 5458 01d8 02       		.uleb128 0x2
 5459 01d9 0A       		.uleb128 0xa
 5460 01da 00       		.byte	0
 5461 01db 00       		.byte	0
 5462 01dc 27       		.uleb128 0x27
 5463 01dd 2E       		.uleb128 0x2e
 5464 01de 00       		.byte	0
 5465 01df 3F       		.uleb128 0x3f
 5466 01e0 0C       		.uleb128 0xc
 5467 01e1 03       		.uleb128 0x3
 5468 01e2 0E       		.uleb128 0xe
 5469 01e3 3A       		.uleb128 0x3a
 5470 01e4 0B       		.uleb128 0xb
 5471 01e5 3B       		.uleb128 0x3b
 5472 01e6 0B       		.uleb128 0xb
 5473 01e7 27       		.uleb128 0x27
 5474 01e8 0C       		.uleb128 0xc
 5475 01e9 11       		.uleb128 0x11
 5476 01ea 01       		.uleb128 0x1
 5477 01eb 12       		.uleb128 0x12
 5478 01ec 01       		.uleb128 0x1
 5479 01ed 40       		.uleb128 0x40
 5480 01ee 06       		.uleb128 0x6
 5481 01ef 00       		.byte	0
 5482 01f0 00       		.byte	0
 5483 01f1 28       		.uleb128 0x28
 5484 01f2 2E       		.uleb128 0x2e
 5485 01f3 01       		.byte	0x1
 5486 01f4 3F       		.uleb128 0x3f
 5487 01f5 0C       		.uleb128 0xc
 5488 01f6 03       		.uleb128 0x3
 5489 01f7 0E       		.uleb128 0xe
 5490 01f8 3A       		.uleb128 0x3a
 5491 01f9 0B       		.uleb128 0xb
 5492 01fa 3B       		.uleb128 0x3b
 5493 01fb 0B       		.uleb128 0xb
 5494 01fc 27       		.uleb128 0x27
 5495 01fd 0C       		.uleb128 0xc
 5496 01fe 11       		.uleb128 0x11
 5497 01ff 01       		.uleb128 0x1
 5498 0200 12       		.uleb128 0x12
 5499 0201 01       		.uleb128 0x1
 5500 0202 40       		.uleb128 0x40
 5501 0203 06       		.uleb128 0x6
 5502 0204 01       		.uleb128 0x1
 5503 0205 13       		.uleb128 0x13
 5504 0206 00       		.byte	0
 5505 0207 00       		.byte	0
 5506 0208 29       		.uleb128 0x29
 5507 0209 2E       		.uleb128 0x2e
 5508 020a 01       		.byte	0x1
 5509 020b 03       		.uleb128 0x3
 5510 020c 0E       		.uleb128 0xe
ARM GAS  /tmp/cctTTGYb.s 			page 133


 5511 020d 3A       		.uleb128 0x3a
 5512 020e 0B       		.uleb128 0xb
 5513 020f 3B       		.uleb128 0x3b
 5514 0210 0B       		.uleb128 0xb
 5515 0211 11       		.uleb128 0x11
 5516 0212 01       		.uleb128 0x1
 5517 0213 12       		.uleb128 0x12
 5518 0214 01       		.uleb128 0x1
 5519 0215 40       		.uleb128 0x40
 5520 0216 06       		.uleb128 0x6
 5521 0217 01       		.uleb128 0x1
 5522 0218 13       		.uleb128 0x13
 5523 0219 00       		.byte	0
 5524 021a 00       		.byte	0
 5525 021b 2A       		.uleb128 0x2a
 5526 021c 34       		.uleb128 0x34
 5527 021d 00       		.byte	0
 5528 021e 03       		.uleb128 0x3
 5529 021f 08       		.uleb128 0x8
 5530 0220 3A       		.uleb128 0x3a
 5531 0221 0B       		.uleb128 0xb
 5532 0222 3B       		.uleb128 0x3b
 5533 0223 0B       		.uleb128 0xb
 5534 0224 49       		.uleb128 0x49
 5535 0225 13       		.uleb128 0x13
 5536 0226 02       		.uleb128 0x2
 5537 0227 0A       		.uleb128 0xa
 5538 0228 00       		.byte	0
 5539 0229 00       		.byte	0
 5540 022a 2B       		.uleb128 0x2b
 5541 022b 34       		.uleb128 0x34
 5542 022c 00       		.byte	0
 5543 022d 03       		.uleb128 0x3
 5544 022e 0E       		.uleb128 0xe
 5545 022f 49       		.uleb128 0x49
 5546 0230 13       		.uleb128 0x13
 5547 0231 34       		.uleb128 0x34
 5548 0232 0C       		.uleb128 0xc
 5549 0233 00       		.byte	0
 5550 0234 00       		.byte	0
 5551 0235 2C       		.uleb128 0x2c
 5552 0236 2E       		.uleb128 0x2e
 5553 0237 01       		.byte	0x1
 5554 0238 03       		.uleb128 0x3
 5555 0239 0E       		.uleb128 0xe
 5556 023a 3A       		.uleb128 0x3a
 5557 023b 0B       		.uleb128 0xb
 5558 023c 3B       		.uleb128 0x3b
 5559 023d 0B       		.uleb128 0xb
 5560 023e 27       		.uleb128 0x27
 5561 023f 0C       		.uleb128 0xc
 5562 0240 11       		.uleb128 0x11
 5563 0241 01       		.uleb128 0x1
 5564 0242 12       		.uleb128 0x12
 5565 0243 01       		.uleb128 0x1
 5566 0244 40       		.uleb128 0x40
 5567 0245 06       		.uleb128 0x6
ARM GAS  /tmp/cctTTGYb.s 			page 134


 5568 0246 01       		.uleb128 0x1
 5569 0247 13       		.uleb128 0x13
 5570 0248 00       		.byte	0
 5571 0249 00       		.byte	0
 5572 024a 2D       		.uleb128 0x2d
 5573 024b 05       		.uleb128 0x5
 5574 024c 00       		.byte	0
 5575 024d 03       		.uleb128 0x3
 5576 024e 08       		.uleb128 0x8
 5577 024f 3A       		.uleb128 0x3a
 5578 0250 0B       		.uleb128 0xb
 5579 0251 3B       		.uleb128 0x3b
 5580 0252 0B       		.uleb128 0xb
 5581 0253 49       		.uleb128 0x49
 5582 0254 13       		.uleb128 0x13
 5583 0255 02       		.uleb128 0x2
 5584 0256 0A       		.uleb128 0xa
 5585 0257 00       		.byte	0
 5586 0258 00       		.byte	0
 5587 0259 2E       		.uleb128 0x2e
 5588 025a 2E       		.uleb128 0x2e
 5589 025b 01       		.byte	0x1
 5590 025c 03       		.uleb128 0x3
 5591 025d 08       		.uleb128 0x8
 5592 025e 3A       		.uleb128 0x3a
 5593 025f 0B       		.uleb128 0xb
 5594 0260 3B       		.uleb128 0x3b
 5595 0261 0B       		.uleb128 0xb
 5596 0262 11       		.uleb128 0x11
 5597 0263 01       		.uleb128 0x1
 5598 0264 12       		.uleb128 0x12
 5599 0265 01       		.uleb128 0x1
 5600 0266 40       		.uleb128 0x40
 5601 0267 06       		.uleb128 0x6
 5602 0268 01       		.uleb128 0x1
 5603 0269 13       		.uleb128 0x13
 5604 026a 00       		.byte	0
 5605 026b 00       		.byte	0
 5606 026c 2F       		.uleb128 0x2f
 5607 026d 34       		.uleb128 0x34
 5608 026e 00       		.byte	0
 5609 026f 03       		.uleb128 0x3
 5610 0270 0E       		.uleb128 0xe
 5611 0271 3A       		.uleb128 0x3a
 5612 0272 0B       		.uleb128 0xb
 5613 0273 3B       		.uleb128 0x3b
 5614 0274 05       		.uleb128 0x5
 5615 0275 49       		.uleb128 0x49
 5616 0276 13       		.uleb128 0x13
 5617 0277 3F       		.uleb128 0x3f
 5618 0278 0C       		.uleb128 0xc
 5619 0279 3C       		.uleb128 0x3c
 5620 027a 0C       		.uleb128 0xc
 5621 027b 00       		.byte	0
 5622 027c 00       		.byte	0
 5623 027d 30       		.uleb128 0x30
 5624 027e 34       		.uleb128 0x34
ARM GAS  /tmp/cctTTGYb.s 			page 135


 5625 027f 00       		.byte	0
 5626 0280 03       		.uleb128 0x3
 5627 0281 0E       		.uleb128 0xe
 5628 0282 3A       		.uleb128 0x3a
 5629 0283 0B       		.uleb128 0xb
 5630 0284 3B       		.uleb128 0x3b
 5631 0285 0B       		.uleb128 0xb
 5632 0286 49       		.uleb128 0x49
 5633 0287 13       		.uleb128 0x13
 5634 0288 3F       		.uleb128 0x3f
 5635 0289 0C       		.uleb128 0xc
 5636 028a 3C       		.uleb128 0x3c
 5637 028b 0C       		.uleb128 0xc
 5638 028c 00       		.byte	0
 5639 028d 00       		.byte	0
 5640 028e 31       		.uleb128 0x31
 5641 028f 34       		.uleb128 0x34
 5642 0290 00       		.byte	0
 5643 0291 03       		.uleb128 0x3
 5644 0292 0E       		.uleb128 0xe
 5645 0293 3A       		.uleb128 0x3a
 5646 0294 0B       		.uleb128 0xb
 5647 0295 3B       		.uleb128 0x3b
 5648 0296 0B       		.uleb128 0xb
 5649 0297 49       		.uleb128 0x49
 5650 0298 13       		.uleb128 0x13
 5651 0299 3F       		.uleb128 0x3f
 5652 029a 0C       		.uleb128 0xc
 5653 029b 02       		.uleb128 0x2
 5654 029c 0A       		.uleb128 0xa
 5655 029d 00       		.byte	0
 5656 029e 00       		.byte	0
 5657 029f 00       		.byte	0
 5658              		.section	.debug_loc,"",%progbits
 5659              	.Ldebug_loc0:
 5660              	.LLST0:
 5661 0000 00000000 		.4byte	.LFB14
 5662 0004 02000000 		.4byte	.LCFI0
 5663 0008 0200     		.2byte	0x2
 5664 000a 7D       		.byte	0x7d
 5665 000b 00       		.sleb128 0
 5666 000c 02000000 		.4byte	.LCFI0
 5667 0010 04000000 		.4byte	.LCFI1
 5668 0014 0200     		.2byte	0x2
 5669 0016 7D       		.byte	0x7d
 5670 0017 04       		.sleb128 4
 5671 0018 04000000 		.4byte	.LCFI1
 5672 001c 06000000 		.4byte	.LCFI2
 5673 0020 0200     		.2byte	0x2
 5674 0022 7D       		.byte	0x7d
 5675 0023 10       		.sleb128 16
 5676 0024 06000000 		.4byte	.LCFI2
 5677 0028 36000000 		.4byte	.LFE14
 5678 002c 0200     		.2byte	0x2
 5679 002e 77       		.byte	0x77
 5680 002f 10       		.sleb128 16
 5681 0030 00000000 		.4byte	0
ARM GAS  /tmp/cctTTGYb.s 			page 136


 5682 0034 00000000 		.4byte	0
 5683              	.LLST1:
 5684 0038 00000000 		.4byte	.LFB20
 5685 003c 02000000 		.4byte	.LCFI3
 5686 0040 0200     		.2byte	0x2
 5687 0042 7D       		.byte	0x7d
 5688 0043 00       		.sleb128 0
 5689 0044 02000000 		.4byte	.LCFI3
 5690 0048 04000000 		.4byte	.LCFI4
 5691 004c 0200     		.2byte	0x2
 5692 004e 7D       		.byte	0x7d
 5693 004f 04       		.sleb128 4
 5694 0050 04000000 		.4byte	.LCFI4
 5695 0054 06000000 		.4byte	.LCFI5
 5696 0058 0200     		.2byte	0x2
 5697 005a 7D       		.byte	0x7d
 5698 005b 10       		.sleb128 16
 5699 005c 06000000 		.4byte	.LCFI5
 5700 0060 5C000000 		.4byte	.LFE20
 5701 0064 0200     		.2byte	0x2
 5702 0066 77       		.byte	0x77
 5703 0067 10       		.sleb128 16
 5704 0068 00000000 		.4byte	0
 5705 006c 00000000 		.4byte	0
 5706              	.LLST2:
 5707 0070 00000000 		.4byte	.LFB35
 5708 0074 02000000 		.4byte	.LCFI6
 5709 0078 0200     		.2byte	0x2
 5710 007a 7D       		.byte	0x7d
 5711 007b 00       		.sleb128 0
 5712 007c 02000000 		.4byte	.LCFI6
 5713 0080 04000000 		.4byte	.LCFI7
 5714 0084 0200     		.2byte	0x2
 5715 0086 7D       		.byte	0x7d
 5716 0087 08       		.sleb128 8
 5717 0088 04000000 		.4byte	.LCFI7
 5718 008c 06000000 		.4byte	.LCFI8
 5719 0090 0200     		.2byte	0x2
 5720 0092 7D       		.byte	0x7d
 5721 0093 10       		.sleb128 16
 5722 0094 06000000 		.4byte	.LCFI8
 5723 0098 74020000 		.4byte	.LFE35
 5724 009c 0200     		.2byte	0x2
 5725 009e 77       		.byte	0x77
 5726 009f 10       		.sleb128 16
 5727 00a0 00000000 		.4byte	0
 5728 00a4 00000000 		.4byte	0
 5729              	.LLST3:
 5730 00a8 00000000 		.4byte	.LFB36
 5731 00ac 02000000 		.4byte	.LCFI9
 5732 00b0 0200     		.2byte	0x2
 5733 00b2 7D       		.byte	0x7d
 5734 00b3 00       		.sleb128 0
 5735 00b4 02000000 		.4byte	.LCFI9
 5736 00b8 04000000 		.4byte	.LCFI10
 5737 00bc 0200     		.2byte	0x2
 5738 00be 7D       		.byte	0x7d
ARM GAS  /tmp/cctTTGYb.s 			page 137


 5739 00bf 08       		.sleb128 8
 5740 00c0 04000000 		.4byte	.LCFI10
 5741 00c4 2C000000 		.4byte	.LFE36
 5742 00c8 0200     		.2byte	0x2
 5743 00ca 77       		.byte	0x77
 5744 00cb 08       		.sleb128 8
 5745 00cc 00000000 		.4byte	0
 5746 00d0 00000000 		.4byte	0
 5747              	.LLST4:
 5748 00d4 00000000 		.4byte	.LFB37
 5749 00d8 02000000 		.4byte	.LCFI11
 5750 00dc 0200     		.2byte	0x2
 5751 00de 7D       		.byte	0x7d
 5752 00df 00       		.sleb128 0
 5753 00e0 02000000 		.4byte	.LCFI11
 5754 00e4 04000000 		.4byte	.LCFI12
 5755 00e8 0200     		.2byte	0x2
 5756 00ea 7D       		.byte	0x7d
 5757 00eb 08       		.sleb128 8
 5758 00ec 04000000 		.4byte	.LCFI12
 5759 00f0 06000000 		.4byte	.LCFI13
 5760 00f4 0200     		.2byte	0x2
 5761 00f6 7D       		.byte	0x7d
 5762 00f7 10       		.sleb128 16
 5763 00f8 06000000 		.4byte	.LCFI13
 5764 00fc 42010000 		.4byte	.LFE37
 5765 0100 0200     		.2byte	0x2
 5766 0102 77       		.byte	0x77
 5767 0103 10       		.sleb128 16
 5768 0104 00000000 		.4byte	0
 5769 0108 00000000 		.4byte	0
 5770              	.LLST5:
 5771 010c 00000000 		.4byte	.LFB38
 5772 0110 02000000 		.4byte	.LCFI14
 5773 0114 0200     		.2byte	0x2
 5774 0116 7D       		.byte	0x7d
 5775 0117 00       		.sleb128 0
 5776 0118 02000000 		.4byte	.LCFI14
 5777 011c 04000000 		.4byte	.LCFI15
 5778 0120 0200     		.2byte	0x2
 5779 0122 7D       		.byte	0x7d
 5780 0123 0C       		.sleb128 12
 5781 0124 04000000 		.4byte	.LCFI15
 5782 0128 06000000 		.4byte	.LCFI16
 5783 012c 0200     		.2byte	0x2
 5784 012e 7D       		.byte	0x7d
 5785 012f 30       		.sleb128 48
 5786 0130 06000000 		.4byte	.LCFI16
 5787 0134 4C020000 		.4byte	.LFE38
 5788 0138 0200     		.2byte	0x2
 5789 013a 77       		.byte	0x77
 5790 013b 18       		.sleb128 24
 5791 013c 00000000 		.4byte	0
 5792 0140 00000000 		.4byte	0
 5793              	.LLST6:
 5794 0144 00000000 		.4byte	.LFB39
 5795 0148 02000000 		.4byte	.LCFI17
ARM GAS  /tmp/cctTTGYb.s 			page 138


 5796 014c 0200     		.2byte	0x2
 5797 014e 7D       		.byte	0x7d
 5798 014f 00       		.sleb128 0
 5799 0150 02000000 		.4byte	.LCFI17
 5800 0154 04000000 		.4byte	.LCFI18
 5801 0158 0200     		.2byte	0x2
 5802 015a 7D       		.byte	0x7d
 5803 015b 08       		.sleb128 8
 5804 015c 04000000 		.4byte	.LCFI18
 5805 0160 06000000 		.4byte	.LCFI19
 5806 0164 0200     		.2byte	0x2
 5807 0166 7D       		.byte	0x7d
 5808 0167 10       		.sleb128 16
 5809 0168 06000000 		.4byte	.LCFI19
 5810 016c B2010000 		.4byte	.LFE39
 5811 0170 0200     		.2byte	0x2
 5812 0172 77       		.byte	0x77
 5813 0173 10       		.sleb128 16
 5814 0174 00000000 		.4byte	0
 5815 0178 00000000 		.4byte	0
 5816              	.LLST7:
 5817 017c 00000000 		.4byte	.LFB40
 5818 0180 02000000 		.4byte	.LCFI20
 5819 0184 0200     		.2byte	0x2
 5820 0186 7D       		.byte	0x7d
 5821 0187 00       		.sleb128 0
 5822 0188 02000000 		.4byte	.LCFI20
 5823 018c 04000000 		.4byte	.LCFI21
 5824 0190 0200     		.2byte	0x2
 5825 0192 7D       		.byte	0x7d
 5826 0193 0C       		.sleb128 12
 5827 0194 04000000 		.4byte	.LCFI21
 5828 0198 06000000 		.4byte	.LCFI22
 5829 019c 0300     		.2byte	0x3
 5830 019e 7D       		.byte	0x7d
 5831 019f D000     		.sleb128 80
 5832 01a1 06000000 		.4byte	.LCFI22
 5833 01a5 C8030000 		.4byte	.LFE40
 5834 01a9 0300     		.2byte	0x3
 5835 01ab 77       		.byte	0x77
 5836 01ac C800     		.sleb128 72
 5837 01ae 00000000 		.4byte	0
 5838 01b2 00000000 		.4byte	0
 5839              		.section	.debug_aranges,"",%progbits
 5840 0000 54000000 		.4byte	0x54
 5841 0004 0200     		.2byte	0x2
 5842 0006 00000000 		.4byte	.Ldebug_info0
 5843 000a 04       		.byte	0x4
 5844 000b 00       		.byte	0
 5845 000c 0000     		.2byte	0
 5846 000e 0000     		.2byte	0
 5847 0010 00000000 		.4byte	.LFB14
 5848 0014 36000000 		.4byte	.LFE14-.LFB14
 5849 0018 00000000 		.4byte	.LFB20
 5850 001c 5C000000 		.4byte	.LFE20-.LFB20
 5851 0020 00000000 		.4byte	.LFB35
 5852 0024 74020000 		.4byte	.LFE35-.LFB35
ARM GAS  /tmp/cctTTGYb.s 			page 139


 5853 0028 00000000 		.4byte	.LFB36
 5854 002c 2C000000 		.4byte	.LFE36-.LFB36
 5855 0030 00000000 		.4byte	.LFB37
 5856 0034 42010000 		.4byte	.LFE37-.LFB37
 5857 0038 00000000 		.4byte	.LFB38
 5858 003c 4C020000 		.4byte	.LFE38-.LFB38
 5859 0040 00000000 		.4byte	.LFB39
 5860 0044 B2010000 		.4byte	.LFE39-.LFB39
 5861 0048 00000000 		.4byte	.LFB40
 5862 004c C8030000 		.4byte	.LFE40-.LFB40
 5863 0050 00000000 		.4byte	0
 5864 0054 00000000 		.4byte	0
 5865              		.section	.debug_ranges,"",%progbits
 5866              	.Ldebug_ranges0:
 5867 0000 00000000 		.4byte	.LFB14
 5868 0004 36000000 		.4byte	.LFE14
 5869 0008 00000000 		.4byte	.LFB20
 5870 000c 5C000000 		.4byte	.LFE20
 5871 0010 00000000 		.4byte	.LFB35
 5872 0014 74020000 		.4byte	.LFE35
 5873 0018 00000000 		.4byte	.LFB36
 5874 001c 2C000000 		.4byte	.LFE36
 5875 0020 00000000 		.4byte	.LFB37
 5876 0024 42010000 		.4byte	.LFE37
 5877 0028 00000000 		.4byte	.LFB38
 5878 002c 4C020000 		.4byte	.LFE38
 5879 0030 00000000 		.4byte	.LFB39
 5880 0034 B2010000 		.4byte	.LFE39
 5881 0038 00000000 		.4byte	.LFB40
 5882 003c C8030000 		.4byte	.LFE40
 5883 0040 00000000 		.4byte	0
 5884 0044 00000000 		.4byte	0
 5885              		.section	.debug_line,"",%progbits
 5886              	.Ldebug_line0:
 5887 0000 49030000 		.section	.debug_str,"MS",%progbits,1
 5887      02009201 
 5887      00000201 
 5887      FB0E0D00 
 5887      01010101 
 5888              	.LASF161:
 5889 0000 52534552 		.ascii	"RSERVED1\000"
 5889      56454431 
 5889      00
 5890              	.LASF317:
 5891 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 5891      5F456E61 
 5891      626C6549 
 5891      525100
 5892              	.LASF147:
 5893 0018 5443325F 		.ascii	"TC2_IRQn\000"
 5893      4952516E 
 5893      00
 5894              	.LASF270:
 5895 0021 50574D5F 		.ascii	"PWM_RNPR\000"
 5895      524E5052 
 5895      00
 5896              	.LASF14:
ARM GAS  /tmp/cctTTGYb.s 			page 140


 5897 002a 5F5F7661 		.ascii	"__value\000"
 5897      6C756500 
 5898              	.LASF66:
 5899 0032 5F5F7366 		.ascii	"__sf\000"
 5899      00
 5900              	.LASF325:
 5901 0037 64757479 		.ascii	"duty\000"
 5901      00
 5902              	.LASF75:
 5903 003c 5F726561 		.ascii	"_read\000"
 5903      6400
 5904              	.LASF170:
 5905 0042 4E564943 		.ascii	"NVIC_Type\000"
 5905      5F547970 
 5905      6500
 5906              	.LASF239:
 5907 004c 50574D5F 		.ascii	"PWM_IER1\000"
 5907      49455231 
 5907      00
 5908              	.LASF76:
 5909 0055 5F777269 		.ascii	"_write\000"
 5909      746500
 5910              	.LASF62:
 5911 005c 5F617363 		.ascii	"_asctime_buf\000"
 5911      74696D65 
 5911      5F627566 
 5911      00
 5912              	.LASF58:
 5913 0069 5F637674 		.ascii	"_cvtlen\000"
 5913      6C656E00 
 5914              	.LASF265:
 5915 0071 50574D5F 		.ascii	"PWM_WPSR\000"
 5915      57505352 
 5915      00
 5916              	.LASF200:
 5917 007a 4144435F 		.ascii	"ADC_EMR\000"
 5917      454D5200 
 5918              	.LASF197:
 5919 0082 4144435F 		.ascii	"ADC_ISR\000"
 5919      49535200 
 5920              	.LASF334:
 5921 008a 5F737461 		.ascii	"_state\000"
 5921      746500
 5922              	.LASF24:
 5923 0091 5F5F746D 		.ascii	"__tm\000"
 5923      00
 5924              	.LASF112:
 5925 0096 5F776373 		.ascii	"_wcsrtombs_state\000"
 5925      72746F6D 
 5925      62735F73 
 5925      74617465 
 5925      00
 5926              	.LASF80:
 5927 00a7 5F6E6275 		.ascii	"_nbuf\000"
 5927      6600
 5928              	.LASF25:
 5929 00ad 5F5F746D 		.ascii	"__tm_sec\000"
ARM GAS  /tmp/cctTTGYb.s 			page 141


 5929      5F736563 
 5929      00
 5930              	.LASF106:
 5931 00b6 5F6C3634 		.ascii	"_l64a_buf\000"
 5931      615F6275 
 5931      6600
 5932              	.LASF173:
 5933 00c0 56544F52 		.ascii	"VTOR\000"
 5933      00
 5934              	.LASF269:
 5935 00c5 50574D5F 		.ascii	"PWM_TCR\000"
 5935      54435200 
 5936              	.LASF327:
 5937 00cd 73746174 		.ascii	"state\000"
 5937      6500
 5938              	.LASF83:
 5939 00d3 5F6C6F63 		.ascii	"_lock\000"
 5939      6B00
 5940              	.LASF259:
 5941 00d9 50574D5F 		.ascii	"PWM_FCR\000"
 5941      46435200 
 5942              	.LASF299:
 5943 00e1 54435F46 		.ascii	"TC_FMR\000"
 5943      4D5200
 5944              	.LASF205:
 5945 00e8 52657365 		.ascii	"Reserved3\000"
 5945      72766564 
 5945      3300
 5946              	.LASF278:
 5947 00f2 52657365 		.ascii	"Reserved7\000"
 5947      72766564 
 5947      3700
 5948              	.LASF93:
 5949 00fc 5F6D756C 		.ascii	"_mult\000"
 5949      7400
 5950              	.LASF211:
 5951 0102 4144435F 		.ascii	"ADC_RPR\000"
 5951      52505200 
 5952              	.LASF126:
 5953 010a 52535443 		.ascii	"RSTC_IRQn\000"
 5953      5F495251 
 5953      6E00
 5954              	.LASF215:
 5955 0114 4144435F 		.ascii	"ADC_RNPR\000"
 5955      524E5052 
 5955      00
 5956              	.LASF164:
 5957 011d 49435052 		.ascii	"ICPR\000"
 5957      00
 5958              	.LASF297:
 5959 0122 54435F51 		.ascii	"TC_QIMR\000"
 5959      494D5200 
 5960              	.LASF217:
 5961 012a 4144435F 		.ascii	"ADC_TNPR\000"
 5961      544E5052 
 5961      00
 5962              	.LASF271:
ARM GAS  /tmp/cctTTGYb.s 			page 142


 5963 0133 50574D5F 		.ascii	"PWM_RNCR\000"
 5963      524E4352 
 5963      00
 5964              	.LASF11:
 5965 013c 5F5F7763 		.ascii	"__wch\000"
 5965      6800
 5966              	.LASF292:
 5967 0142 54435F43 		.ascii	"TC_CHANNEL\000"
 5967      48414E4E 
 5967      454C00
 5968              	.LASF209:
 5969 014d 4144435F 		.ascii	"ADC_WPSR\000"
 5969      57505352 
 5969      00
 5970              	.LASF71:
 5971 0156 5F66696C 		.ascii	"_file\000"
 5971      6500
 5972              	.LASF34:
 5973 015c 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5973      65786974 
 5973      5F617267 
 5973      7300
 5974              	.LASF174:
 5975 016a 41495243 		.ascii	"AIRCR\000"
 5975      5200
 5976              	.LASF314:
 5977 0170 74726973 		.ascii	"tristate\000"
 5977      74617465 
 5977      00
 5978              	.LASF338:
 5979 0179 72656C65 		.ascii	"releasetime\000"
 5979      61736574 
 5979      696D6500 
 5980              	.LASF154:
 5981 0185 43524343 		.ascii	"CRCCU_IRQn\000"
 5981      555F4952 
 5981      516E00
 5982              	.LASF306:
 5983 0190 52414D50 		.ascii	"RAMP\000"
 5983      00
 5984              	.LASF280:
 5985 0195 54435F43 		.ascii	"TC_CCR\000"
 5985      435200
 5986              	.LASF108:
 5987 019c 5F6D6272 		.ascii	"_mbrlen_state\000"
 5987      6C656E5F 
 5987      73746174 
 5987      6500
 5988              	.LASF7:
 5989 01aa 6C6F6E67 		.ascii	"long int\000"
 5989      20696E74 
 5989      00
 5990              	.LASF332:
 5991 01b3 5F696D70 		.ascii	"_impure_ptr\000"
 5991      7572655F 
 5991      70747200 
 5992              	.LASF98:
ARM GAS  /tmp/cctTTGYb.s 			page 143


 5993 01bf 5F726573 		.ascii	"_result_k\000"
 5993      756C745F 
 5993      6B00
 5994              	.LASF226:
 5995 01c9 50574D5F 		.ascii	"PWM_CCNT\000"
 5995      43434E54 
 5995      00
 5996              	.LASF45:
 5997 01d2 5F73697A 		.ascii	"_size\000"
 5997      6500
 5998              	.LASF171:
 5999 01d8 43505549 		.ascii	"CPUID\000"
 5999      4400
 6000              	.LASF61:
 6001 01de 5F6C6F63 		.ascii	"_localtime_buf\000"
 6001      616C7469 
 6001      6D655F62 
 6001      756600
 6002              	.LASF213:
 6003 01ed 4144435F 		.ascii	"ADC_TPR\000"
 6003      54505200 
 6004              	.LASF321:
 6005 01f5 6D61696E 		.ascii	"main\000"
 6005      00
 6006              	.LASF319:
 6007 01fa 4952516E 		.ascii	"IRQn\000"
 6007      00
 6008              	.LASF150:
 6009 01ff 5443355F 		.ascii	"TC5_IRQn\000"
 6009      4952516E 
 6009      00
 6010              	.LASF29:
 6011 0208 5F5F746D 		.ascii	"__tm_mon\000"
 6011      5F6D6F6E 
 6011      00
 6012              	.LASF318:
 6013 0211 4E564943 		.ascii	"NVIC_SetPriority\000"
 6013      5F536574 
 6013      5072696F 
 6013      72697479 
 6013      00
 6014              	.LASF101:
 6015 0222 5F6D6973 		.ascii	"_misc_reent\000"
 6015      635F7265 
 6015      656E7400 
 6016              	.LASF124:
 6017 022e 53797354 		.ascii	"SysTick_IRQn\000"
 6017      69636B5F 
 6017      4952516E 
 6017      00
 6018              	.LASF54:
 6019 023b 5F637572 		.ascii	"_current_category\000"
 6019      72656E74 
 6019      5F636174 
 6019      65676F72 
 6019      7900
 6020              	.LASF172:
ARM GAS  /tmp/cctTTGYb.s 			page 144


 6021 024d 49435352 		.ascii	"ICSR\000"
 6021      00
 6022              	.LASF0:
 6023 0252 7369676E 		.ascii	"signed char\000"
 6023      65642063 
 6023      68617200 
 6024              	.LASF113:
 6025 025e 75696E74 		.ascii	"uint8_t\000"
 6025      385F7400 
 6026              	.LASF252:
 6027 0266 50574D5F 		.ascii	"PWM_OS\000"
 6027      4F5300
 6028              	.LASF323:
 6029 026d 74696D65 		.ascii	"timestamp\000"
 6029      7374616D 
 6029      7000
 6030              	.LASF291:
 6031 0277 54634368 		.ascii	"TcChannel\000"
 6031      616E6E65 
 6031      6C00
 6032              	.LASF263:
 6033 0281 50574D5F 		.ascii	"PWM_SMMR\000"
 6033      534D4D52 
 6033      00
 6034              	.LASF159:
 6035 028a 52455345 		.ascii	"RESERVED0\000"
 6035      52564544 
 6035      3000
 6036              	.LASF1:
 6037 0294 756E7369 		.ascii	"unsigned char\000"
 6037      676E6564 
 6037      20636861 
 6037      7200
 6038              	.LASF165:
 6039 02a2 52455345 		.ascii	"RESERVED3\000"
 6039      52564544 
 6039      3300
 6040              	.LASF167:
 6041 02ac 52455345 		.ascii	"RESERVED4\000"
 6041      52564544 
 6041      3400
 6042              	.LASF168:
 6043 02b6 52455345 		.ascii	"RESERVED5\000"
 6043      52564544 
 6043      3500
 6044              	.LASF261:
 6045 02c0 50574D5F 		.ascii	"PWM_FPE\000"
 6045      46504500 
 6046              	.LASF236:
 6047 02c8 50574D5F 		.ascii	"PWM_ENA\000"
 6047      454E4100 
 6048              	.LASF166:
 6049 02d0 49414252 		.ascii	"IABR\000"
 6049      00
 6050              	.LASF309:
 6051 02d5 6374726C 		.ascii	"ctrl\000"
 6051      00
ARM GAS  /tmp/cctTTGYb.s 			page 145


 6052              	.LASF344:
 6053 02da 5F5F4655 		.ascii	"__FUNCTION__\000"
 6053      4E435449 
 6053      4F4E5F5F 
 6053      00
 6054              	.LASF46:
 6055 02e7 5F726565 		.ascii	"_reent\000"
 6055      6E7400
 6056              	.LASF260:
 6057 02ee 50574D5F 		.ascii	"PWM_FPV\000"
 6057      46505600 
 6058              	.LASF301:
 6059 02f6 5744545F 		.ascii	"WDT_CR\000"
 6059      435200
 6060              	.LASF163:
 6061 02fd 52455345 		.ascii	"RESERVED2\000"
 6061      52564544 
 6061      3200
 6062              	.LASF120:
 6063 0307 55736167 		.ascii	"UsageFault_IRQn\000"
 6063      65466175 
 6063      6C745F49 
 6063      52516E00 
 6064              	.LASF284:
 6065 0317 54435F52 		.ascii	"TC_RA\000"
 6065      4100
 6066              	.LASF285:
 6067 031d 54435F52 		.ascii	"TC_RB\000"
 6067      4200
 6068              	.LASF286:
 6069 0323 54435F52 		.ascii	"TC_RC\000"
 6069      4300
 6070              	.LASF86:
 6071 0329 63686172 		.ascii	"char\000"
 6071      00
 6072              	.LASF41:
 6073 032e 5F666E73 		.ascii	"_fns\000"
 6073      00
 6074              	.LASF313:
 6075 0333 6F757470 		.ascii	"output\000"
 6075      757400
 6076              	.LASF184:
 6077 033a 5343425F 		.ascii	"SCB_Type\000"
 6077      54797065 
 6077      00
 6078              	.LASF294:
 6079 0343 54435F42 		.ascii	"TC_BMR\000"
 6079      4D5200
 6080              	.LASF78:
 6081 034a 5F636C6F 		.ascii	"_close\000"
 6081      736500
 6082              	.LASF178:
 6083 0351 44465352 		.ascii	"DFSR\000"
 6083      00
 6084              	.LASF134:
 6085 0356 534D435F 		.ascii	"SMC_IRQn\000"
 6085      4952516E 
ARM GAS  /tmp/cctTTGYb.s 			page 146


 6085      00
 6086              	.LASF272:
 6087 035f 50574D5F 		.ascii	"PWM_TNPR\000"
 6087      544E5052 
 6087      00
 6088              	.LASF251:
 6089 0368 50574D5F 		.ascii	"PWM_OOV\000"
 6089      4F4F5600 
 6090              	.LASF298:
 6091 0370 54435F51 		.ascii	"TC_QISR\000"
 6091      49535200 
 6092              	.LASF229:
 6093 0378 50776D43 		.ascii	"PwmCh_num\000"
 6093      685F6E75 
 6093      6D00
 6094              	.LASF48:
 6095 0382 5F737464 		.ascii	"_stdin\000"
 6095      696E00
 6096              	.LASF311:
 6097 0389 72536C6F 		.ascii	"rSlope\000"
 6097      706500
 6098              	.LASF337:
 6099 0390 72747269 		.ascii	"rtrip\000"
 6099      7000
 6100              	.LASF177:
 6101 0396 48465352 		.ascii	"HFSR\000"
 6101      00
 6102              	.LASF246:
 6103 039b 50574D5F 		.ascii	"PWM_SCUPUPD\000"
 6103      53435550 
 6103      55504400 
 6104              	.LASF287:
 6105 03a7 54435F53 		.ascii	"TC_SR\000"
 6105      5200
 6106              	.LASF275:
 6107 03ad 50574D5F 		.ascii	"PWM_PTSR\000"
 6107      50545352 
 6107      00
 6108              	.LASF241:
 6109 03b6 50574D5F 		.ascii	"PWM_IMR1\000"
 6109      494D5231 
 6109      00
 6110              	.LASF249:
 6111 03bf 50574D5F 		.ascii	"PWM_IMR2\000"
 6111      494D5232 
 6111      00
 6112              	.LASF153:
 6113 03c8 50574D5F 		.ascii	"PWM_IRQn\000"
 6113      4952516E 
 6113      00
 6114              	.LASF162:
 6115 03d1 49535052 		.ascii	"ISPR\000"
 6115      00
 6116              	.LASF268:
 6117 03d6 50574D5F 		.ascii	"PWM_TPR\000"
 6117      54505200 
 6118              	.LASF316:
ARM GAS  /tmp/cctTTGYb.s 			page 147


 6119 03de 696E7075 		.ascii	"input\000"
 6119      7400
 6120              	.LASF212:
 6121 03e4 4144435F 		.ascii	"ADC_RCR\000"
 6121      52435200 
 6122              	.LASF238:
 6123 03ec 50574D5F 		.ascii	"PWM_SR\000"
 6123      535200
 6124              	.LASF175:
 6125 03f3 53484353 		.ascii	"SHCSR\000"
 6125      5200
 6126              	.LASF204:
 6127 03f9 4144435F 		.ascii	"ADC_CDR\000"
 6127      43445200 
 6128              	.LASF169:
 6129 0401 53544952 		.ascii	"STIR\000"
 6129      00
 6130              	.LASF155:
 6131 0406 4143435F 		.ascii	"ACC_IRQn\000"
 6131      4952516E 
 6131      00
 6132              	.LASF74:
 6133 040f 5F636F6F 		.ascii	"_cookie\000"
 6133      6B696500 
 6134              	.LASF22:
 6135 0417 5F776473 		.ascii	"_wds\000"
 6135      00
 6136              	.LASF130:
 6137 041c 504D435F 		.ascii	"PMC_IRQn\000"
 6137      4952516E 
 6137      00
 6138              	.LASF131:
 6139 0425 4546435F 		.ascii	"EFC_IRQn\000"
 6139      4952516E 
 6139      00
 6140              	.LASF63:
 6141 042e 5F736967 		.ascii	"_sig_func\000"
 6141      5F66756E 
 6141      6300
 6142              	.LASF82:
 6143 0438 5F6F6666 		.ascii	"_offset\000"
 6143      73657400 
 6144              	.LASF59:
 6145 0440 5F637674 		.ascii	"_cvtbuf\000"
 6145      62756600 
 6146              	.LASF125:
 6147 0448 53555043 		.ascii	"SUPC_IRQn\000"
 6147      5F495251 
 6147      6E00
 6148              	.LASF289:
 6149 0452 54435F49 		.ascii	"TC_IDR\000"
 6149      445200
 6150              	.LASF146:
 6151 0459 5443315F 		.ascii	"TC1_IRQn\000"
 6151      4952516E 
 6151      00
 6152              	.LASF137:
ARM GAS  /tmp/cctTTGYb.s 			page 148


 6153 0462 50494F43 		.ascii	"PIOC_IRQn\000"
 6153      5F495251 
 6153      6E00
 6154              	.LASF322:
 6155 046c 4144435F 		.ascii	"ADC_IrqHandler\000"
 6155      49727148 
 6155      616E646C 
 6155      657200
 6156              	.LASF220:
 6157 047b 4144435F 		.ascii	"ADC_PTSR\000"
 6157      50545352 
 6157      00
 6158              	.LASF128:
 6159 0484 5254545F 		.ascii	"RTT_IRQn\000"
 6159      4952516E 
 6159      00
 6160              	.LASF156:
 6161 048d 5544505F 		.ascii	"UDP_IRQn\000"
 6161      4952516E 
 6161      00
 6162              	.LASF152:
 6163 0496 44414343 		.ascii	"DACC_IRQn\000"
 6163      5F495251 
 6163      6E00
 6164              	.LASF117:
 6165 04a0 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6165      61736B61 
 6165      626C6549 
 6165      6E745F49 
 6165      52516E00 
 6166              	.LASF257:
 6167 04b4 50574D5F 		.ascii	"PWM_FMR\000"
 6167      464D5200 
 6168              	.LASF254:
 6169 04bc 50574D5F 		.ascii	"PWM_OSC\000"
 6169      4F534300 
 6170              	.LASF191:
 6171 04c4 4144435F 		.ascii	"ADC_CHSR\000"
 6171      43485352 
 6171      00
 6172              	.LASF99:
 6173 04cd 5F703573 		.ascii	"_p5s\000"
 6173      00
 6174              	.LASF18:
 6175 04d2 6C6F6E67 		.ascii	"long unsigned int\000"
 6175      20756E73 
 6175      69676E65 
 6175      6420696E 
 6175      7400
 6176              	.LASF253:
 6177 04e4 50574D5F 		.ascii	"PWM_OSS\000"
 6177      4F535300 
 6178              	.LASF231:
 6179 04ec 50574D5F 		.ascii	"PWM_CMPxVUPD\000"
 6179      434D5078 
 6179      56555044 
 6179      00
ARM GAS  /tmp/cctTTGYb.s 			page 149


 6180              	.LASF118:
 6181 04f9 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 6181      72794D61 
 6181      6E616765 
 6181      6D656E74 
 6181      5F495251 
 6182              	.LASF288:
 6183 050f 54435F49 		.ascii	"TC_IER\000"
 6183      455200
 6184              	.LASF69:
 6185 0516 5F5F7346 		.ascii	"__sFILE\000"
 6185      494C4500 
 6186              	.LASF53:
 6187 051e 5F5F7364 		.ascii	"__sdidinit\000"
 6187      6964696E 
 6187      697400
 6188              	.LASF85:
 6189 0529 5F666C61 		.ascii	"_flags2\000"
 6189      67733200 
 6190              	.LASF273:
 6191 0531 50574D5F 		.ascii	"PWM_TNCR\000"
 6191      544E4352 
 6191      00
 6192              	.LASF157:
 6193 053a 4952516E 		.ascii	"IRQn_Type\000"
 6193      5F547970 
 6193      6500
 6194              	.LASF331:
 6195 0544 6C696E65 		.ascii	"line\000"
 6195      00
 6196              	.LASF8:
 6197 0549 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 6197      4B5F5245 
 6197      43555253 
 6197      4956455F 
 6197      5400
 6198              	.LASF47:
 6199 055b 5F657272 		.ascii	"_errno\000"
 6199      6E6F00
 6200              	.LASF202:
 6201 0562 4144435F 		.ascii	"ADC_CGR\000"
 6201      43475200 
 6202              	.LASF68:
 6203 056a 5F736967 		.ascii	"_signal_buf\000"
 6203      6E616C5F 
 6203      62756600 
 6204              	.LASF315:
 6205 0576 74726970 		.ascii	"trip\000"
 6205      00
 6206              	.LASF186:
 6207 057b 4144435F 		.ascii	"ADC_MR\000"
 6207      4D5200
 6208              	.LASF193:
 6209 0582 4144435F 		.ascii	"ADC_LCDR\000"
 6209      4C434452 
 6209      00
 6210              	.LASF304:
ARM GAS  /tmp/cctTTGYb.s 			page 150


 6211 058b 6374726C 		.ascii	"ctrlio_t\000"
 6211      696F5F74 
 6211      00
 6212              	.LASF129:
 6213 0594 5744545F 		.ascii	"WDT_IRQn\000"
 6213      4952516E 
 6213      00
 6214              	.LASF329:
 6215 059d 61726763 		.ascii	"argc\000"
 6215      00
 6216              	.LASF23:
 6217 05a2 5F426967 		.ascii	"_Bigint\000"
 6217      696E7400 
 6218              	.LASF245:
 6219 05aa 50574D5F 		.ascii	"PWM_SCUP\000"
 6219      53435550 
 6219      00
 6220              	.LASF20:
 6221 05b3 5F6D6178 		.ascii	"_maxwds\000"
 6221      77647300 
 6222              	.LASF330:
 6223 05bb 61726776 		.ascii	"argv\000"
 6223      00
 6224              	.LASF56:
 6225 05c0 5F5F636C 		.ascii	"__cleanup\000"
 6225      65616E75 
 6225      7000
 6226              	.LASF119:
 6227 05ca 42757346 		.ascii	"BusFault_IRQn\000"
 6227      61756C74 
 6227      5F495251 
 6227      6E00
 6228              	.LASF281:
 6229 05d8 54435F43 		.ascii	"TC_CMR\000"
 6229      4D5200
 6230              	.LASF64:
 6231 05df 5F617465 		.ascii	"_atexit0\000"
 6231      78697430 
 6231      00
 6232              	.LASF52:
 6233 05e8 5F656D65 		.ascii	"_emergency\000"
 6233      7267656E 
 6233      637900
 6234              	.LASF5:
 6235 05f3 6C6F6E67 		.ascii	"long long int\000"
 6235      206C6F6E 
 6235      6720696E 
 6235      7400
 6236              	.LASF267:
 6237 0601 50574D5F 		.ascii	"PWM_RCR\000"
 6237      52435200 
 6238              	.LASF42:
 6239 0609 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 6239      65786974 
 6239      5F617267 
 6239      735F7074 
 6239      7200
ARM GAS  /tmp/cctTTGYb.s 			page 151


 6240              	.LASF240:
 6241 061b 50574D5F 		.ascii	"PWM_IDR1\000"
 6241      49445231 
 6241      00
 6242              	.LASF248:
 6243 0624 50574D5F 		.ascii	"PWM_IDR2\000"
 6243      49445232 
 6243      00
 6244              	.LASF223:
 6245 062d 50574D5F 		.ascii	"PWM_CDTYUPD\000"
 6245      43445459 
 6245      55504400 
 6246              	.LASF89:
 6247 0639 5F6E696F 		.ascii	"_niobs\000"
 6247      627300
 6248              	.LASF142:
 6249 0640 54574931 		.ascii	"TWI1_IRQn\000"
 6249      5F495251 
 6249      6E00
 6250              	.LASF65:
 6251 064a 5F5F7367 		.ascii	"__sglue\000"
 6251      6C756500 
 6252              	.LASF264:
 6253 0652 50574D5F 		.ascii	"PWM_WPCR\000"
 6253      57504352 
 6253      00
 6254              	.LASF279:
 6255 065b 50574D5F 		.ascii	"PWM_CH_NUM\000"
 6255      43485F4E 
 6255      554D00
 6256              	.LASF341:
 6257 0666 6D61696E 		.ascii	"main.c\000"
 6257      2E6300
 6258              	.LASF121:
 6259 066d 53564361 		.ascii	"SVCall_IRQn\000"
 6259      6C6C5F49 
 6259      52516E00 
 6260              	.LASF57:
 6261 0679 5F67616D 		.ascii	"_gamma_signgam\000"
 6261      6D615F73 
 6261      69676E67 
 6261      616D00
 6262              	.LASF308:
 6263 0688 6374726C 		.ascii	"ctrlmode_t\000"
 6263      6D6F6465 
 6263      5F7400
 6264              	.LASF242:
 6265 0693 50574D5F 		.ascii	"PWM_ISR1\000"
 6265      49535231 
 6265      00
 6266              	.LASF250:
 6267 069c 50574D5F 		.ascii	"PWM_ISR2\000"
 6267      49535232 
 6267      00
 6268              	.LASF55:
 6269 06a5 5F637572 		.ascii	"_current_locale\000"
 6269      72656E74 
ARM GAS  /tmp/cctTTGYb.s 			page 152


 6269      5F6C6F63 
 6269      616C6500 
 6270              	.LASF100:
 6271 06b5 5F667265 		.ascii	"_freelist\000"
 6271      656C6973 
 6271      7400
 6272              	.LASF90:
 6273 06bf 5F696F62 		.ascii	"_iobs\000"
 6273      7300
 6274              	.LASF88:
 6275 06c5 5F676C75 		.ascii	"_glue\000"
 6275      6500
 6276              	.LASF333:
 6277 06cb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6277      52784275 
 6277      66666572 
 6277      00
 6278              	.LASF21:
 6279 06d8 5F736967 		.ascii	"_sign\000"
 6279      6E00
 6280              	.LASF312:
 6281 06de 5F646478 		.ascii	"_ddx\000"
 6281      00
 6282              	.LASF307:
 6283 06e3 53544F50 		.ascii	"STOP\000"
 6283      00
 6284              	.LASF195:
 6285 06e8 4144435F 		.ascii	"ADC_IDR\000"
 6285      49445200 
 6286              	.LASF222:
 6287 06f0 50574D5F 		.ascii	"PWM_CDTY\000"
 6287      43445459 
 6287      00
 6288              	.LASF4:
 6289 06f9 756E7369 		.ascii	"unsigned int\000"
 6289      676E6564 
 6289      20696E74 
 6289      00
 6290              	.LASF149:
 6291 0706 5443345F 		.ascii	"TC4_IRQn\000"
 6291      4952516E 
 6291      00
 6292              	.LASF141:
 6293 070f 54574930 		.ascii	"TWI0_IRQn\000"
 6293      5F495251 
 6293      6E00
 6294              	.LASF302:
 6295 0719 5744545F 		.ascii	"WDT_MR\000"
 6295      4D5200
 6296              	.LASF111:
 6297 0720 5F776372 		.ascii	"_wcrtomb_state\000"
 6297      746F6D62 
 6297      5F737461 
 6297      746500
 6298              	.LASF28:
 6299 072f 5F5F746D 		.ascii	"__tm_mday\000"
 6299      5F6D6461 
ARM GAS  /tmp/cctTTGYb.s 			page 153


 6299      7900
 6300              	.LASF194:
 6301 0739 4144435F 		.ascii	"ADC_IER\000"
 6301      49455200 
 6302              	.LASF79:
 6303 0741 5F756275 		.ascii	"_ubuf\000"
 6303      6600
 6304              	.LASF256:
 6305 0747 50574D5F 		.ascii	"PWM_OSCUPD\000"
 6305      4F534355 
 6305      504400
 6306              	.LASF50:
 6307 0752 5F737464 		.ascii	"_stderr\000"
 6307      65727200 
 6308              	.LASF104:
 6309 075a 5F776374 		.ascii	"_wctomb_state\000"
 6309      6F6D625F 
 6309      73746174 
 6309      6500
 6310              	.LASF84:
 6311 0768 5F6D6273 		.ascii	"_mbstate\000"
 6311      74617465 
 6311      00
 6312              	.LASF95:
 6313 0771 5F72616E 		.ascii	"_rand_next\000"
 6313      645F6E65 
 6313      787400
 6314              	.LASF70:
 6315 077c 5F666C61 		.ascii	"_flags\000"
 6315      677300
 6316              	.LASF258:
 6317 0783 50574D5F 		.ascii	"PWM_FSR\000"
 6317      46535200 
 6318              	.LASF39:
 6319 078b 5F617465 		.ascii	"_atexit\000"
 6319      78697400 
 6320              	.LASF13:
 6321 0793 5F5F636F 		.ascii	"__count\000"
 6321      756E7400 
 6322              	.LASF305:
 6323 079b 4E4F524D 		.ascii	"NORMAL\000"
 6323      414C00
 6324              	.LASF31:
 6325 07a2 5F5F746D 		.ascii	"__tm_wday\000"
 6325      5F776461 
 6325      7900
 6326              	.LASF32:
 6327 07ac 5F5F746D 		.ascii	"__tm_yday\000"
 6327      5F796461 
 6327      7900
 6328              	.LASF92:
 6329 07b6 5F736565 		.ascii	"_seed\000"
 6329      6400
 6330              	.LASF77:
 6331 07bc 5F736565 		.ascii	"_seek\000"
 6331      6B00
 6332              	.LASF133:
ARM GAS  /tmp/cctTTGYb.s 			page 154


 6333 07c2 55415254 		.ascii	"UART1_IRQn\000"
 6333      315F4952 
 6333      516E00
 6334              	.LASF336:
 6335 07cd 6E747269 		.ascii	"ntrip\000"
 6335      7000
 6336              	.LASF9:
 6337 07d3 5F66706F 		.ascii	"_fpos_t\000"
 6337      735F7400 
 6338              	.LASF12:
 6339 07db 5F5F7763 		.ascii	"__wchb\000"
 6339      686200
 6340              	.LASF216:
 6341 07e2 4144435F 		.ascii	"ADC_RNCR\000"
 6341      524E4352 
 6341      00
 6342              	.LASF255:
 6343 07eb 50574D5F 		.ascii	"PWM_OSSUPD\000"
 6343      4F535355 
 6343      504400
 6344              	.LASF180:
 6345 07f6 42464152 		.ascii	"BFAR\000"
 6345      00
 6346              	.LASF105:
 6347 07fb 5F6D6274 		.ascii	"_mbtowc_state\000"
 6347      6F77635F 
 6347      73746174 
 6347      6500
 6348              	.LASF218:
 6349 0809 4144435F 		.ascii	"ADC_TNCR\000"
 6349      544E4352 
 6349      00
 6350              	.LASF290:
 6351 0812 54435F49 		.ascii	"TC_IMR\000"
 6351      4D5200
 6352              	.LASF6:
 6353 0819 6C6F6E67 		.ascii	"long long unsigned int\000"
 6353      206C6F6E 
 6353      6720756E 
 6353      7369676E 
 6353      65642069 
 6354              	.LASF243:
 6355 0830 50574D5F 		.ascii	"PWM_SCM\000"
 6355      53434D00 
 6356              	.LASF115:
 6357 0838 75696E74 		.ascii	"uint16_t\000"
 6357      31365F74 
 6357      00
 6358              	.LASF36:
 6359 0841 5F64736F 		.ascii	"_dso_handle\000"
 6359      5F68616E 
 6359      646C6500 
 6360              	.LASF247:
 6361 084d 50574D5F 		.ascii	"PWM_IER2\000"
 6361      49455232 
 6361      00
 6362              	.LASF91:
ARM GAS  /tmp/cctTTGYb.s 			page 155


 6363 0856 5F72616E 		.ascii	"_rand48\000"
 6363      64343800 
 6364              	.LASF203:
 6365 085e 4144435F 		.ascii	"ADC_COR\000"
 6365      434F5200 
 6366              	.LASF140:
 6367 0866 48534D43 		.ascii	"HSMCI_IRQn\000"
 6367      495F4952 
 6367      516E00
 6368              	.LASF49:
 6369 0871 5F737464 		.ascii	"_stdout\000"
 6369      6F757400 
 6370              	.LASF139:
 6371 0879 55534152 		.ascii	"USART1_IRQn\000"
 6371      54315F49 
 6371      52516E00 
 6372              	.LASF81:
 6373 0885 5F626C6B 		.ascii	"_blksize\000"
 6373      73697A65 
 6373      00
 6374              	.LASF44:
 6375 088e 5F626173 		.ascii	"_base\000"
 6375      6500
 6376              	.LASF343:
 6377 0894 5443315F 		.ascii	"TC1_IrqHandler\000"
 6377      49727148 
 6377      616E646C 
 6377      657200
 6378              	.LASF102:
 6379 08a3 5F737472 		.ascii	"_strtok_last\000"
 6379      746F6B5F 
 6379      6C617374 
 6379      00
 6380              	.LASF151:
 6381 08b0 4144435F 		.ascii	"ADC_IRQn\000"
 6381      4952516E 
 6381      00
 6382              	.LASF109:
 6383 08b9 5F6D6272 		.ascii	"_mbrtowc_state\000"
 6383      746F7763 
 6383      5F737461 
 6383      746500
 6384              	.LASF262:
 6385 08c8 50574D5F 		.ascii	"PWM_ELxMR\000"
 6385      454C784D 
 6385      5200
 6386              	.LASF214:
 6387 08d2 4144435F 		.ascii	"ADC_TCR\000"
 6387      54435200 
 6388              	.LASF160:
 6389 08da 49434552 		.ascii	"ICER\000"
 6389      00
 6390              	.LASF16:
 6391 08df 5F666C6F 		.ascii	"_flock_t\000"
 6391      636B5F74 
 6391      00
 6392              	.LASF326:
ARM GAS  /tmp/cctTTGYb.s 			page 156


 6393 08e8 7463636C 		.ascii	"tcclks\000"
 6393      6B7300
 6394              	.LASF87:
 6395 08ef 5F5F4649 		.ascii	"__FILE\000"
 6395      4C4500
 6396              	.LASF15:
 6397 08f6 5F6D6273 		.ascii	"_mbstate_t\000"
 6397      74617465 
 6397      5F7400
 6398              	.LASF132:
 6399 0901 55415254 		.ascii	"UART0_IRQn\000"
 6399      305F4952 
 6399      516E00
 6400              	.LASF60:
 6401 090c 5F723438 		.ascii	"_r48\000"
 6401      00
 6402              	.LASF235:
 6403 0911 50574D5F 		.ascii	"PWM_CLK\000"
 6403      434C4B00 
 6404              	.LASF10:
 6405 0919 77696E74 		.ascii	"wint_t\000"
 6405      5F7400
 6406              	.LASF181:
 6407 0920 41465352 		.ascii	"AFSR\000"
 6407      00
 6408              	.LASF187:
 6409 0925 4144435F 		.ascii	"ADC_SEQR1\000"
 6409      53455152 
 6409      3100
 6410              	.LASF188:
 6411 092f 4144435F 		.ascii	"ADC_SEQR2\000"
 6411      53455152 
 6411      3200
 6412              	.LASF19:
 6413 0939 5F6E6578 		.ascii	"_next\000"
 6413      7400
 6414              	.LASF73:
 6415 093f 5F646174 		.ascii	"_data\000"
 6415      6100
 6416              	.LASF234:
 6417 0945 50776D43 		.ascii	"PwmCmp\000"
 6417      6D7000
 6418              	.LASF143:
 6419 094c 5350495F 		.ascii	"SPI_IRQn\000"
 6419      4952516E 
 6419      00
 6420              	.LASF328:
 6421 0955 696E6974 		.ascii	"init\000"
 6421      00
 6422              	.LASF138:
 6423 095a 55534152 		.ascii	"USART0_IRQn\000"
 6423      54305F49 
 6423      52516E00 
 6424              	.LASF192:
 6425 0966 52657365 		.ascii	"Reserved1\000"
 6425      72766564 
 6425      3100
ARM GAS  /tmp/cctTTGYb.s 			page 157


 6426              	.LASF198:
 6427 0970 52657365 		.ascii	"Reserved2\000"
 6427      72766564 
 6427      3200
 6428              	.LASF176:
 6429 097a 43465352 		.ascii	"CFSR\000"
 6429      00
 6430              	.LASF207:
 6431 097f 52657365 		.ascii	"Reserved4\000"
 6431      72766564 
 6431      3400
 6432              	.LASF210:
 6433 0989 52657365 		.ascii	"Reserved5\000"
 6433      72766564 
 6433      3500
 6434              	.LASF276:
 6435 0993 52657365 		.ascii	"Reserved6\000"
 6435      72766564 
 6435      3600
 6436              	.LASF145:
 6437 099d 5443305F 		.ascii	"TC0_IRQn\000"
 6437      4952516E 
 6437      00
 6438              	.LASF303:
 6439 09a6 5744545F 		.ascii	"WDT_SR\000"
 6439      535200
 6440              	.LASF136:
 6441 09ad 50494F42 		.ascii	"PIOB_IRQn\000"
 6441      5F495251 
 6441      6E00
 6442              	.LASF283:
 6443 09b7 54435F43 		.ascii	"TC_CV\000"
 6443      5600
 6444              	.LASF274:
 6445 09bd 50574D5F 		.ascii	"PWM_PTCR\000"
 6445      50544352 
 6445      00
 6446              	.LASF335:
 6447 09c6 6C6F6F70 		.ascii	"loop\000"
 6447      00
 6448              	.LASF122:
 6449 09cb 44656275 		.ascii	"DebugMonitor_IRQn\000"
 6449      674D6F6E 
 6449      69746F72 
 6449      5F495251 
 6449      6E00
 6450              	.LASF342:
 6451 09dd 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 6451      652F6D6F 
 6451      2F646F63 
 6451      2F737475 
 6451      6469756D 
 6452              	.LASF296:
 6453 0a0c 54435F51 		.ascii	"TC_QIDR\000"
 6453      49445200 
 6454              	.LASF277:
 6455 0a14 50574D5F 		.ascii	"PWM_CMP\000"
ARM GAS  /tmp/cctTTGYb.s 			page 158


 6455      434D5000 
 6456              	.LASF221:
 6457 0a1c 50574D5F 		.ascii	"PWM_CMR\000"
 6457      434D5200 
 6458              	.LASF182:
 6459 0a24 4D4D4652 		.ascii	"MMFR\000"
 6459      00
 6460              	.LASF339:
 6461 0a29 64786D61 		.ascii	"dxmax\000"
 6461      7800
 6462              	.LASF179:
 6463 0a2f 4D4D4641 		.ascii	"MMFAR\000"
 6463      5200
 6464              	.LASF103:
 6465 0a35 5F6D626C 		.ascii	"_mblen_state\000"
 6465      656E5F73 
 6465      74617465 
 6465      00
 6466              	.LASF2:
 6467 0a42 73686F72 		.ascii	"short int\000"
 6467      7420696E 
 6467      7400
 6468              	.LASF310:
 6469 0a4c 6D6F6465 		.ascii	"mode\000"
 6469      00
 6470              	.LASF320:
 6471 0a51 7072696F 		.ascii	"priority\000"
 6471      72697479 
 6471      00
 6472              	.LASF114:
 6473 0a5a 696E7431 		.ascii	"int16_t\000"
 6473      365F7400 
 6474              	.LASF295:
 6475 0a62 54435F51 		.ascii	"TC_QIER\000"
 6475      49455200 
 6476              	.LASF183:
 6477 0a6a 49534152 		.ascii	"ISAR\000"
 6477      00
 6478              	.LASF199:
 6479 0a6f 4144435F 		.ascii	"ADC_OVER\000"
 6479      4F564552 
 6479      00
 6480              	.LASF37:
 6481 0a78 5F666E74 		.ascii	"_fntypes\000"
 6481      79706573 
 6481      00
 6482              	.LASF135:
 6483 0a81 50494F41 		.ascii	"PIOA_IRQn\000"
 6483      5F495251 
 6483      6E00
 6484              	.LASF227:
 6485 0a8b 50574D5F 		.ascii	"PWM_DT\000"
 6485      445400
 6486              	.LASF30:
 6487 0a92 5F5F746D 		.ascii	"__tm_year\000"
 6487      5F796561 
 6487      7200
ARM GAS  /tmp/cctTTGYb.s 			page 159


 6488              	.LASF196:
 6489 0a9c 4144435F 		.ascii	"ADC_IMR\000"
 6489      494D5200 
 6490              	.LASF185:
 6491 0aa4 4144435F 		.ascii	"ADC_CR\000"
 6491      435200
 6492              	.LASF72:
 6493 0aab 5F6C6266 		.ascii	"_lbfsize\000"
 6493      73697A65 
 6493      00
 6494              	.LASF51:
 6495 0ab4 5F696E63 		.ascii	"_inc\000"
 6495      00
 6496              	.LASF40:
 6497 0ab9 5F696E64 		.ascii	"_ind\000"
 6497      00
 6498              	.LASF219:
 6499 0abe 4144435F 		.ascii	"ADC_PTCR\000"
 6499      50544352 
 6499      00
 6500              	.LASF300:
 6501 0ac7 54435F57 		.ascii	"TC_WPMR\000"
 6501      504D5200 
 6502              	.LASF237:
 6503 0acf 50574D5F 		.ascii	"PWM_DIS\000"
 6503      44495300 
 6504              	.LASF233:
 6505 0ad7 50574D5F 		.ascii	"PWM_CMPxMUPD\000"
 6505      434D5078 
 6505      4D555044 
 6505      00
 6506              	.LASF43:
 6507 0ae4 5F5F7362 		.ascii	"__sbuf\000"
 6507      756600
 6508              	.LASF38:
 6509 0aeb 5F69735F 		.ascii	"_is_cxa\000"
 6509      63786100 
 6510              	.LASF225:
 6511 0af3 50574D5F 		.ascii	"PWM_CPRDUPD\000"
 6511      43505244 
 6511      55504400 
 6512              	.LASF340:
 6513 0aff 474E5520 		.ascii	"GNU C 4.6.1\000"
 6513      4320342E 
 6513      362E3100 
 6514              	.LASF96:
 6515 0b0b 5F6D7072 		.ascii	"_mprec\000"
 6515      656300
 6516              	.LASF324:
 6517 0b12 73746174 		.ascii	"status\000"
 6517      757300
 6518              	.LASF67:
 6519 0b19 5F6D6973 		.ascii	"_misc\000"
 6519      6300
 6520              	.LASF17:
 6521 0b1f 5F5F554C 		.ascii	"__ULong\000"
 6521      6F6E6700 
ARM GAS  /tmp/cctTTGYb.s 			page 160


 6522              	.LASF224:
 6523 0b27 50574D5F 		.ascii	"PWM_CPRD\000"
 6523      43505244 
 6523      00
 6524              	.LASF144:
 6525 0b30 5353435F 		.ascii	"SSC_IRQn\000"
 6525      4952516E 
 6525      00
 6526              	.LASF232:
 6527 0b39 50574D5F 		.ascii	"PWM_CMPxM\000"
 6527      434D5078 
 6527      4D00
 6528              	.LASF116:
 6529 0b43 75696E74 		.ascii	"uint32_t\000"
 6529      33325F74 
 6529      00
 6530              	.LASF230:
 6531 0b4c 50574D5F 		.ascii	"PWM_CMPxV\000"
 6531      434D5078 
 6531      5600
 6532              	.LASF97:
 6533 0b56 5F726573 		.ascii	"_result\000"
 6533      756C7400 
 6534              	.LASF206:
 6535 0b5e 4144435F 		.ascii	"ADC_ACR\000"
 6535      41435200 
 6536              	.LASF282:
 6537 0b66 54435F53 		.ascii	"TC_SMMR\000"
 6537      4D4D5200 
 6538              	.LASF190:
 6539 0b6e 4144435F 		.ascii	"ADC_CHDR\000"
 6539      43484452 
 6539      00
 6540              	.LASF266:
 6541 0b77 50574D5F 		.ascii	"PWM_RPR\000"
 6541      52505200 
 6542              	.LASF94:
 6543 0b7f 5F616464 		.ascii	"_add\000"
 6543      00
 6544              	.LASF3:
 6545 0b84 73686F72 		.ascii	"short unsigned int\000"
 6545      7420756E 
 6545      7369676E 
 6545      65642069 
 6545      6E7400
 6546              	.LASF208:
 6547 0b97 4144435F 		.ascii	"ADC_WPMR\000"
 6547      57504D52 
 6547      00
 6548              	.LASF27:
 6549 0ba0 5F5F746D 		.ascii	"__tm_hour\000"
 6549      5F686F75 
 6549      7200
 6550              	.LASF123:
 6551 0baa 50656E64 		.ascii	"PendSV_IRQn\000"
 6551      53565F49 
 6551      52516E00 
ARM GAS  /tmp/cctTTGYb.s 			page 161


 6552              	.LASF110:
 6553 0bb6 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 6553      72746F77 
 6553      63735F73 
 6553      74617465 
 6553      00
 6554              	.LASF293:
 6555 0bc7 54435F42 		.ascii	"TC_BCR\000"
 6555      435200
 6556              	.LASF148:
 6557 0bce 5443335F 		.ascii	"TC3_IRQn\000"
 6557      4952516E 
 6557      00
 6558              	.LASF189:
 6559 0bd7 4144435F 		.ascii	"ADC_CHER\000"
 6559      43484552 
 6559      00
 6560              	.LASF158:
 6561 0be0 49534552 		.ascii	"ISER\000"
 6561      00
 6562              	.LASF35:
 6563 0be5 5F666E61 		.ascii	"_fnargs\000"
 6563      72677300 
 6564              	.LASF201:
 6565 0bed 4144435F 		.ascii	"ADC_CWR\000"
 6565      43575200 
 6566              	.LASF33:
 6567 0bf5 5F5F746D 		.ascii	"__tm_isdst\000"
 6567      5F697364 
 6567      737400
 6568              	.LASF228:
 6569 0c00 50574D5F 		.ascii	"PWM_DTUPD\000"
 6569      44545550 
 6569      4400
 6570              	.LASF26:
 6571 0c0a 5F5F746D 		.ascii	"__tm_min\000"
 6571      5F6D696E 
 6571      00
 6572              	.LASF244:
 6573 0c13 50574D5F 		.ascii	"PWM_SCUC\000"
 6573      53435543 
 6573      00
 6574              	.LASF107:
 6575 0c1c 5F676574 		.ascii	"_getdate_err\000"
 6575      64617465 
 6575      5F657272 
 6575      00
 6576              	.LASF127:
 6577 0c29 5254435F 		.ascii	"RTC_IRQn\000"
 6577      4952516E 
 6577      00
 6578              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/cctTTGYb.s 			page 162


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cctTTGYb.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/cctTTGYb.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/cctTTGYb.s:62     .text.NVIC_SetPriority:00000000 $t
     /tmp/cctTTGYb.s:66     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
     /tmp/cctTTGYb.s:128    .bss:00000000 input
     /tmp/cctTTGYb.s:125    .bss:00000000 $d
     /tmp/cctTTGYb.s:134    .data:00000000 _state
     /tmp/cctTTGYb.s:141    .bss:00000004 loop
     /tmp/cctTTGYb.s:148    .data:00000004 ntrip
     /tmp/cctTTGYb.s:145    .data:00000001 $d
     /tmp/cctTTGYb.s:157    .data:00000014 rtrip
     /tmp/cctTTGYb.s:166    .data:00000024 releasetime
     /tmp/cctTTGYb.s:172    .data:00000028 dxmax
     /tmp/cctTTGYb.s:175    .rodata:00000000 $d
     /tmp/cctTTGYb.s:176    .rodata:00000000 .LC0
     /tmp/cctTTGYb.s:179    .rodata:00000018 .LC1
     /tmp/cctTTGYb.s:182    .rodata:00000044 .LC2
     /tmp/cctTTGYb.s:185    .text.main:00000000 $t
     /tmp/cctTTGYb.s:190    .text.main:00000000 main
     /tmp/cctTTGYb.s:650    .text.init:00000000 init
     /tmp/cctTTGYb.s:883    .text.state:00000000 state
     /tmp/cctTTGYb.s:1098   .text.cli:00000000 cli
     /tmp/cctTTGYb.s:305    .text.main:00000104 $d
     /tmp/cctTTGYb.s:315    .text.main:00000124 $t
     /tmp/cctTTGYb.s:467    .text.TC1_IrqHandler:00000000 $t
     /tmp/cctTTGYb.s:472    .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/cctTTGYb.s:504    .text.ADC_IrqHandler:00000000 $t
     /tmp/cctTTGYb.s:509    .text.ADC_IrqHandler:00000000 ADC_IrqHandler
     /tmp/cctTTGYb.s:646    .text.init:00000000 $t
     /tmp/cctTTGYb.s:864    .rodata:00000060 .LC3
     /tmp/cctTTGYb.s:867    .rodata:00000078 .LC4
     /tmp/cctTTGYb.s:870    .rodata:0000008c .LC5
     /tmp/cctTTGYb.s:873    .rodata:000000a0 .LC6
     /tmp/cctTTGYb.s:876    .rodata:000000b8 .LC7
     /tmp/cctTTGYb.s:879    .text.state:00000000 $t
     /tmp/cctTTGYb.s:911    .text.state:0000001c $d
     /tmp/cctTTGYb.s:921    .text.state:0000003c $t
     /tmp/cctTTGYb.s:1061   .rodata:000000d0 .LC8
     /tmp/cctTTGYb.s:1064   .rodata:000000dc .LC9
     /tmp/cctTTGYb.s:1067   .rodata:000000f4 .LC10
     /tmp/cctTTGYb.s:1070   .rodata:00000100 .LC11
     /tmp/cctTTGYb.s:1073   .rodata:00000120 .LC12
     /tmp/cctTTGYb.s:1076   .rodata:00000124 .LC13
     /tmp/cctTTGYb.s:1079   .rodata:00000140 .LC14
     /tmp/cctTTGYb.s:1082   .rodata:00000144 .LC15
     /tmp/cctTTGYb.s:1085   .rodata:00000168 .LC16
     /tmp/cctTTGYb.s:1088   .rodata:00000184 .LC17
     /tmp/cctTTGYb.s:1091   .rodata:0000019c .LC18
     /tmp/cctTTGYb.s:1094   .text.cli:00000000 $t
     /tmp/cctTTGYb.s:1205   .text.cli:000000e4 $d
     /tmp/cctTTGYb.s:1215   .text.cli:00000104 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_impure_ptr
ARM GAS  /tmp/cctTTGYb.s 			page 163


fiprintf
LED_blink
USBC_isConfigured
setbuf
GetTickCount
ADC_ReadBuffer
control
PWMC_SetDutyCycle
PMC_EnablePeripheral
TC_FindMckDivisor
TC_Configure
TC_Start
ADC_Initialize
ADC_cfgFrequency
PWMC_ConfigureClocks
PWMC_ConfigureChannelExt
PWMC_SetPeriod
PWMC_ConfigureSyncChannel
PWMC_SetSyncChannelUpdatePeriod
TimeTick_Configure
LEDs_configure
LED_clr
USBC_Configure
mode
USBC_hasData
gets
siscanf
iprintf
