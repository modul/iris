ARM GAS  /tmp/ccCX0vdB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/ccCX0vdB.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccCX0vdB.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/ccCX0vdB.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccCX0vdB.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccCX0vdB.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/ccCX0vdB.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/ccCX0vdB.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/ccCX0vdB.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/ccCX0vdB.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/ccCX0vdB.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccCX0vdB.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/ccCX0vdB.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/ccCX0vdB.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/ccCX0vdB.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccCX0vdB.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccCX0vdB.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/ccCX0vdB.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccCX0vdB.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/ccCX0vdB.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccCX0vdB.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccCX0vdB.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccCX0vdB.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccCX0vdB.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccCX0vdB.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccCX0vdB.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccCX0vdB.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/ccCX0vdB.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.section	.text.NVIC_SetPriority,"ax",%progbits
  62              		.align	2
  63              		.thumb
  64              		.thumb_func
  65              		.type	NVIC_SetPriority, %function
  66              	NVIC_SetPriority:
  67              	.LFB20:
1506:libchip/cmsis/core_cm3.h **** 
1507:libchip/cmsis/core_cm3.h **** /**
1508:libchip/cmsis/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:libchip/cmsis/core_cm3.h ****  *
1510:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:libchip/cmsis/core_cm3.h ****  *
1512:libchip/cmsis/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:libchip/cmsis/core_cm3.h ****  */
1515:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:libchip/cmsis/core_cm3.h **** {
1517:libchip/cmsis/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:libchip/cmsis/core_cm3.h **** }
1519:libchip/cmsis/core_cm3.h **** 
1520:libchip/cmsis/core_cm3.h **** /**
1521:libchip/cmsis/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:libchip/cmsis/core_cm3.h ****  *
1523:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:libchip/cmsis/core_cm3.h ****  *
1526:libchip/cmsis/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending,
1527:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0
1528:libchip/cmsis/core_cm3.h ****  */
1529:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/ccCX0vdB.s 			page 29


1530:libchip/cmsis/core_cm3.h **** {
1531:libchip/cmsis/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:libchip/cmsis/core_cm3.h **** }
1533:libchip/cmsis/core_cm3.h **** 
1534:libchip/cmsis/core_cm3.h **** /**
1535:libchip/cmsis/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:libchip/cmsis/core_cm3.h ****  *
1537:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:libchip/cmsis/core_cm3.h ****  *
1539:libchip/cmsis/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:libchip/cmsis/core_cm3.h ****  */
1542:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:libchip/cmsis/core_cm3.h **** {
1544:libchip/cmsis/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:libchip/cmsis/core_cm3.h **** }
1546:libchip/cmsis/core_cm3.h **** 
1547:libchip/cmsis/core_cm3.h **** /**
1548:libchip/cmsis/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:libchip/cmsis/core_cm3.h ****  *
1550:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:libchip/cmsis/core_cm3.h ****  *
1552:libchip/cmsis/core_cm3.h ****  * Clear the pending bit for the specified interrupt.
1553:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:libchip/cmsis/core_cm3.h ****  */
1555:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:libchip/cmsis/core_cm3.h **** {
1557:libchip/cmsis/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:libchip/cmsis/core_cm3.h **** }
1559:libchip/cmsis/core_cm3.h **** 
1560:libchip/cmsis/core_cm3.h **** /**
1561:libchip/cmsis/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:libchip/cmsis/core_cm3.h ****  *
1563:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:libchip/cmsis/core_cm3.h ****  *
1566:libchip/cmsis/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active,
1567:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0.
1568:libchip/cmsis/core_cm3.h ****  */
1569:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:libchip/cmsis/core_cm3.h **** {
1571:libchip/cmsis/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:libchip/cmsis/core_cm3.h **** }
1573:libchip/cmsis/core_cm3.h **** 
1574:libchip/cmsis/core_cm3.h **** /**
1575:libchip/cmsis/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:libchip/cmsis/core_cm3.h ****  *
1577:libchip/cmsis/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:libchip/cmsis/core_cm3.h ****  * @param  priority  The priority to set
1579:libchip/cmsis/core_cm3.h ****  *
1580:libchip/cmsis/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt
1581:libchip/cmsis/core_cm3.h ****  * number can be positive to specify an external (device specific)
1582:libchip/cmsis/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:libchip/cmsis/core_cm3.h ****  *
1584:libchip/cmsis/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:libchip/cmsis/core_cm3.h ****  */
1586:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
ARM GAS  /tmp/ccCX0vdB.s 			page 30


1587:libchip/cmsis/core_cm3.h **** {
  68              		.loc 1 1587 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI5:
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 3960     		str	r1, [r7, #0]
  85 000a FB71     		strb	r3, [r7, #7]
1588:libchip/cmsis/core_cm3.h ****   if(IRQn < 0) {
  86              		.loc 1 1588 0
  87 000c 97F90730 		ldrsb	r3, [r7, #7]
  88 0010 002B     		cmp	r3, #0
  89 0012 10DA     		bge	.L3
1589:libchip/cmsis/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  90              		.loc 1 1589 0
  91 0014 4FF46D43 		mov	r3, #60672
  92 0018 CEF20003 		movt	r3, 57344
  93 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  94 001e 02F00F02 		and	r2, r2, #15
  95 0022 A2F10401 		sub	r1, r2, #4
  96 0026 3A68     		ldr	r2, [r7, #0]
  97 0028 D2B2     		uxtb	r2, r2
  98 002a 4FEA0212 		lsl	r2, r2, #4
  99 002e D2B2     		uxtb	r2, r2
 100 0030 5B18     		adds	r3, r3, r1
 101 0032 1A76     		strb	r2, [r3, #24]
 102 0034 0DE0     		b	.L2
 103              	.L3:
1590:libchip/cmsis/core_cm3.h ****   else {
1591:libchip/cmsis/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 104              		.loc 1 1591 0
 105 0036 4FF46143 		mov	r3, #57600
 106 003a CEF20003 		movt	r3, 57344
 107 003e 97F90710 		ldrsb	r1, [r7, #7]
 108 0042 3A68     		ldr	r2, [r7, #0]
 109 0044 D2B2     		uxtb	r2, r2
 110 0046 4FEA0212 		lsl	r2, r2, #4
 111 004a D2B2     		uxtb	r2, r2
 112 004c 5B18     		adds	r3, r3, r1
 113 004e 83F80023 		strb	r2, [r3, #768]
 114              	.L2:
1592:libchip/cmsis/core_cm3.h **** }
 115              		.loc 1 1592 0
 116 0052 07F10C07 		add	r7, r7, #12
 117 0056 BD46     		mov	sp, r7
 118 0058 80BC     		pop	{r7}
ARM GAS  /tmp/ccCX0vdB.s 			page 31


 119 005a 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE20:
 122              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 123              		.global	input
 124              		.bss
 125              		.align	2
 126              		.type	input, %object
 127              		.size	input, 4
 128              	input:
 129 0000 00000000 		.space	4
 130              		.global	_state
 131              		.data
 132              		.type	_state, %object
 133              		.size	_state, 1
 134              	_state:
 135 0000 01       		.byte	1
 136              		.global	loop
 137              		.bss
 138              		.align	2
 139              		.type	loop, %object
 140              		.size	loop, 44
 141              	loop:
 142 0004 00000000 		.space	44
 142      00000000 
 142      00000000 
 142      00000000 
 142      00000000 
 143              		.global	ntrip
 144              		.data
 145 0001 000000   		.align	2
 146              		.type	ntrip, %object
 147              		.size	ntrip, 16
 148              	ntrip:
 149 0004 14000000 		.word	loop+20
 150 0008 00000000 		.word	0
 151 000c 64000000 		.word	100
 152 0010 0A000000 		.word	10
 153              		.global	rtrip
 154              		.align	2
 155              		.type	rtrip, %object
 156              		.size	rtrip, 16
 157              	rtrip:
 158 0014 14000000 		.word	loop+20
 159 0018 00000000 		.word	0
 160 001c 0C000000 		.word	12
 161 0020 00000000 		.word	0
 162              		.global	releasetime
 163              		.align	2
 164              		.type	releasetime, %object
 165              		.size	releasetime, 4
 166              	releasetime:
 167 0024 E8030000 		.word	1000
 168              		.global	dxmax
 169              		.align	2
 170              		.type	dxmax, %object
 171              		.size	dxmax, 4
ARM GAS  /tmp/ccCX0vdB.s 			page 32


 172              	dxmax:
 173 0028 00040000 		.word	1024
 174              		.section	.text.init,"ax",%progbits
 175              		.align	2
 176              		.thumb
 177              		.thumb_func
 178              		.type	init, %function
 179              	init:
 180              	.LFB35:
 181              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "board.h"
   3:main.c        **** #include "controller.h"
   4:main.c        **** 
   5:main.c        **** #define STOPPED  (1 << 0)
   6:main.c        **** #define RUN     (1 << 1)
   7:main.c        **** #define HOLD    (1 << 2)
   8:main.c        **** #define RELEASE (1 << 3)
   9:main.c        **** 
  10:main.c        **** #define MINv 0
  11:main.c        **** #define MAXv MAX
  12:main.c        **** 
  13:main.c        **** #define ADC0 0
  14:main.c        **** #define ADC1 1
  15:main.c        **** #define BUFFER_SIZE 2
  16:main.c        **** 
  17:main.c        **** #define PWM0 0
  18:main.c        **** #define PWM1 1
  19:main.c        **** #define PWM_FREQ   20
  20:main.c        **** #define PWM_PERIOD 100
  21:main.c        **** 
  22:main.c        **** ctrlio_t input[BUFFER_SIZE] = {0};
  23:main.c        **** uint8_t _state = STOPPED;
  24:main.c        **** 
  25:main.c        **** struct ctrl loop = CTRL_INIT;	
  26:main.c        **** struct trip ntrip = {&loop._e, 0, 100, 10};
  27:main.c        **** struct trip rtrip = {&loop._e, 0, 12, 0};
  28:main.c        **** 
  29:main.c        **** uint32_t releasetime = 1000;
  30:main.c        **** uint32_t dxmax = 1024;
  31:main.c        **** 
  32:main.c        **** static void init()
  33:main.c        **** {
 182              		.loc 2 33 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 8
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 90B5     		push	{r4, r7, lr}
 187              	.LCFI6:
 188              		.cfi_def_cfa_offset 12
 189              		.cfi_offset 14, -4
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 4, -12
 192 0002 89B0     		sub	sp, sp, #36
 193              	.LCFI7:
 194              		.cfi_def_cfa_offset 48
 195 0004 06AF     		add	r7, sp, #24
ARM GAS  /tmp/ccCX0vdB.s 			page 33


 196              	.LCFI8:
 197              		.cfi_def_cfa 7, 24
  34:main.c        ****     uint32_t div;
  35:main.c        ****     uint32_t tcclks;
  36:main.c        **** 
  37:main.c        **** 	//TODO PIO Configure 
  38:main.c        **** 
  39:main.c        ****     /* Enable peripheral clocks */
  40:main.c        ****     PMC_EnablePeripheral(ID_TC1);
 198              		.loc 2 40 0
 199 0006 4FF01800 		mov	r0, #24
 200 000a FFF7FEFF 		bl	PMC_EnablePeripheral
  41:main.c        ****     PMC_EnablePeripheral(ID_ADC);
 201              		.loc 2 41 0
 202 000e 4FF01D00 		mov	r0, #29
 203 0012 FFF7FEFF 		bl	PMC_EnablePeripheral
  42:main.c        ****     PMC_EnablePeripheral(ID_PWM);
 204              		.loc 2 42 0
 205 0016 4FF01F00 		mov	r0, #31
 206 001a FFF7FEFF 		bl	PMC_EnablePeripheral
  43:main.c        **** 
  44:main.c        ****     /* Configure TC */
  45:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 207              		.loc 2 45 0
 208 001e 07F10402 		add	r2, r7, #4
 209 0022 3C46     		mov	r4, r7
 210 0024 4FF4D843 		mov	r3, #27648
 211 0028 C0F2DC23 		movt	r3, 732
 212 002c 0093     		str	r3, [sp, #0]
 213 002e 4FF00400 		mov	r0, #4
 214 0032 4FF4D841 		mov	r1, #27648
 215 0036 C0F2DC21 		movt	r1, 732
 216 003a 2346     		mov	r3, r4
 217 003c FFF7FEFF 		bl	TC_FindMckDivisor
  46:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 218              		.loc 2 46 0
 219 0040 3B68     		ldr	r3, [r7, #0]
 220 0042 43F48043 		orr	r3, r3, #16384
 221 0046 4FF48040 		mov	r0, #16384
 222 004a C4F20100 		movt	r0, 16385
 223 004e 4FF00001 		mov	r1, #0
 224 0052 1A46     		mov	r2, r3
 225 0054 FFF7FEFF 		bl	TC_Configure
  47:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
 226              		.loc 2 47 0
 227 0058 4FF48043 		mov	r3, #16384
 228 005c C4F20103 		movt	r3, 16385
 229 0060 7968     		ldr	r1, [r7, #4]
 230 0062 4FF4D852 		mov	r2, #6912
 231 0066 C0F2B702 		movt	r2, 183
 232 006a B2FBF1F2 		udiv	r2, r2, r1
 233 006e DA61     		str	r2, [r3, #28]
  48:main.c        **** 	TC_Start(TC1, 0);
 234              		.loc 2 48 0
 235 0070 4FF48040 		mov	r0, #16384
 236 0074 C4F20100 		movt	r0, 16385
 237 0078 4FF00001 		mov	r1, #0
ARM GAS  /tmp/ccCX0vdB.s 			page 34


 238 007c FFF7FEFF 		bl	TC_Start
  49:main.c        **** 
  50:main.c        ****     NVIC_EnableIRQ(TC1_IRQn);
 239              		.loc 2 50 0
 240 0080 4FF01800 		mov	r0, #24
 241 0084 FFF7FEFF 		bl	NVIC_EnableIRQ
  51:main.c        ****     NVIC_SetPriority(TC1_IRQn, 1);
 242              		.loc 2 51 0
 243 0088 4FF01800 		mov	r0, #24
 244 008c 4FF00101 		mov	r1, #1
 245 0090 FFF7FEFF 		bl	NVIC_SetPriority
  52:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 246              		.loc 2 52 0
 247 0094 4FF48043 		mov	r3, #16384
 248 0098 C4F20103 		movt	r3, 16385
 249 009c 4FF01002 		mov	r2, #16
 250 00a0 5A62     		str	r2, [r3, #36]
  53:main.c        **** 
  54:main.c        ****     /* Initialize ADC */
  55:main.c        ****     ADC_Initialize(ADC, ID_ADC);
 251              		.loc 2 55 0
 252 00a2 4FF40040 		mov	r0, #32768
 253 00a6 C4F20300 		movt	r0, 16387
 254 00aa 4FF01D01 		mov	r1, #29
 255 00ae FFF7FEFF 		bl	ADC_Initialize
  56:main.c        ****     ADC_cfgFrequency(ADC, 15, 4 ); // startup = 15, prescal = 4, ADC clock = 6.4 MHz
 256              		.loc 2 56 0
 257 00b2 4FF40040 		mov	r0, #32768
 258 00b6 C4F20300 		movt	r0, 16387
 259 00ba 4FF00F01 		mov	r1, #15
 260 00be 4FF00402 		mov	r2, #4
 261 00c2 FFF7FEFF 		bl	ADC_cfgFrequency
  57:main.c        **** 
  58:main.c        ****     ADC_EnableChannel(ADC, ADC0);
 262              		.loc 2 58 0
 263 00c6 4FF40043 		mov	r3, #32768
 264 00ca C4F20303 		movt	r3, 16387
 265 00ce 4FF00102 		mov	r2, #1
 266 00d2 1A61     		str	r2, [r3, #16]
  59:main.c        ****     ADC_EnableChannel(ADC, ADC1);
 267              		.loc 2 59 0
 268 00d4 4FF40043 		mov	r3, #32768
 269 00d8 C4F20303 		movt	r3, 16387
 270 00dc 4FF00202 		mov	r2, #2
 271 00e0 1A61     		str	r2, [r3, #16]
  60:main.c        **** 	ADC_StartConversion(ADC);
 272              		.loc 2 60 0
 273 00e2 4FF40043 		mov	r3, #32768
 274 00e6 C4F20303 		movt	r3, 16387
 275 00ea 4FF00202 		mov	r2, #2
 276 00ee 1A60     		str	r2, [r3, #0]
  61:main.c        ****     ADC_ReadBuffer(ADC, (int16_t*) input, BUFFER_SIZE);
 277              		.loc 2 61 0
 278 00f0 4FF40040 		mov	r0, #32768
 279 00f4 C4F20300 		movt	r0, 16387
 280 00f8 40F20001 		movw	r1, #:lower16:input
 281 00fc C0F20001 		movt	r1, #:upper16:input
ARM GAS  /tmp/ccCX0vdB.s 			page 35


 282 0100 4FF00202 		mov	r2, #2
 283 0104 FFF7FEFF 		bl	ADC_ReadBuffer
  62:main.c        **** 
  63:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
 284              		.loc 2 63 0
 285 0108 4FF01D00 		mov	r0, #29
 286 010c FFF7FEFF 		bl	NVIC_EnableIRQ
  64:main.c        **** 	NVIC_SetPriority(ADC_IRQn, 0);
 287              		.loc 2 64 0
 288 0110 4FF01D00 		mov	r0, #29
 289 0114 4FF00001 		mov	r1, #0
 290 0118 FFF7FEFF 		bl	NVIC_SetPriority
  65:main.c        ****     ADC_EnableIt(ADC,ADC_IER_RXBUFF);
 291              		.loc 2 65 0
 292 011c 4FF40043 		mov	r3, #32768
 293 0120 C4F20303 		movt	r3, 16387
 294 0124 4FF08052 		mov	r2, #268435456
 295 0128 5A62     		str	r2, [r3, #36]
  66:main.c        **** 
  67:main.c        ****     /* Configure PWMC channels */
  68:main.c        ****     PWMC_ConfigureClocks(PWM_FREQ * PWM_PERIOD, 0, BOARD_MCK);
 296              		.loc 2 68 0
 297 012a 4FF4FA60 		mov	r0, #2000
 298 012e 4FF00001 		mov	r1, #0
 299 0132 4FF4D842 		mov	r2, #27648
 300 0136 C0F2DC22 		movt	r2, 732
 301 013a FFF7FEFF 		bl	PWMC_ConfigureClocks
  69:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWM0, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 302              		.loc 2 69 0
 303 013e 4FF00103 		mov	r3, #1
 304 0142 0093     		str	r3, [sp, #0]
 305 0144 4FF00003 		mov	r3, #0
 306 0148 0193     		str	r3, [sp, #4]
 307 014a 4FF00003 		mov	r3, #0
 308 014e 0293     		str	r3, [sp, #8]
 309 0150 4FF00003 		mov	r3, #0
 310 0154 0393     		str	r3, [sp, #12]
 311 0156 4FF00003 		mov	r3, #0
 312 015a 0493     		str	r3, [sp, #16]
 313 015c 4FF00000 		mov	r0, #0
 314 0160 C4F20200 		movt	r0, 16386
 315 0164 4FF00001 		mov	r1, #0
 316 0168 4FF00B02 		mov	r2, #11
 317 016c 4FF00003 		mov	r3, #0
 318 0170 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
  70:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWM1, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 319              		.loc 2 70 0
 320 0174 4FF00103 		mov	r3, #1
 321 0178 0093     		str	r3, [sp, #0]
 322 017a 4FF00003 		mov	r3, #0
 323 017e 0193     		str	r3, [sp, #4]
 324 0180 4FF00003 		mov	r3, #0
 325 0184 0293     		str	r3, [sp, #8]
 326 0186 4FF00003 		mov	r3, #0
 327 018a 0393     		str	r3, [sp, #12]
 328 018c 4FF00003 		mov	r3, #0
 329 0190 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccCX0vdB.s 			page 36


 330 0192 4FF00000 		mov	r0, #0
 331 0196 C4F20200 		movt	r0, 16386
 332 019a 4FF00101 		mov	r1, #1
 333 019e 4FF00B02 		mov	r2, #11
 334 01a2 4FF00003 		mov	r3, #0
 335 01a6 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
  71:main.c        **** 
  72:main.c        ****     PWMC_SetPeriod(PWM, PWM0, PWM_PERIOD);
 336              		.loc 2 72 0
 337 01aa 4FF00000 		mov	r0, #0
 338 01ae C4F20200 		movt	r0, 16386
 339 01b2 4FF00001 		mov	r1, #0
 340 01b6 4FF06402 		mov	r2, #100
 341 01ba FFF7FEFF 		bl	PWMC_SetPeriod
  73:main.c        ****     PWMC_SetDutyCycle(PWM, PWM0, 0);
 342              		.loc 2 73 0
 343 01be 4FF00000 		mov	r0, #0
 344 01c2 C4F20200 		movt	r0, 16386
 345 01c6 4FF00001 		mov	r1, #0
 346 01ca 4FF00002 		mov	r2, #0
 347 01ce FFF7FEFF 		bl	PWMC_SetDutyCycle
  74:main.c        ****     PWMC_SetPeriod(PWM, PWM1, PWM_PERIOD);
 348              		.loc 2 74 0
 349 01d2 4FF00000 		mov	r0, #0
 350 01d6 C4F20200 		movt	r0, 16386
 351 01da 4FF00101 		mov	r1, #1
 352 01de 4FF06402 		mov	r2, #100
 353 01e2 FFF7FEFF 		bl	PWMC_SetPeriod
  75:main.c        ****     PWMC_SetDutyCycle(PWM, PWM1, 0);
 354              		.loc 2 75 0
 355 01e6 4FF00000 		mov	r0, #0
 356 01ea C4F20200 		movt	r0, 16386
 357 01ee 4FF00101 		mov	r1, #1
 358 01f2 4FF00002 		mov	r2, #0
 359 01f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
  76:main.c        **** 
  77:main.c        ****     PWMC_ConfigureSyncChannel(PWM, (1 << PWM0)|(1 << PWM1), PWM_SCM_UPDM_MODE1, 0, 0);
 360              		.loc 2 77 0
 361 01fa 4FF00003 		mov	r3, #0
 362 01fe 0093     		str	r3, [sp, #0]
 363 0200 4FF00000 		mov	r0, #0
 364 0204 C4F20200 		movt	r0, 16386
 365 0208 4FF00301 		mov	r1, #3
 366 020c 4FF48032 		mov	r2, #65536
 367 0210 4FF00003 		mov	r3, #0
 368 0214 FFF7FEFF 		bl	PWMC_ConfigureSyncChannel
  78:main.c        ****     PWMC_SetSyncChannelUpdatePeriod(PWM, PWM_SCUP_UPR(1));
 369              		.loc 2 78 0
 370 0218 4FF00000 		mov	r0, #0
 371 021c C4F20200 		movt	r0, 16386
 372 0220 4FF00101 		mov	r1, #1
 373 0224 FFF7FEFF 		bl	PWMC_SetSyncChannelUpdatePeriod
  79:main.c        **** 
  80:main.c        **** 	/* Tick Config */
  81:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 374              		.loc 2 81 0
 375 0228 4FF4D840 		mov	r0, #27648
ARM GAS  /tmp/ccCX0vdB.s 			page 37


 376 022c C0F2DC20 		movt	r0, 732
 377 0230 FFF7FEFF 		bl	TimeTick_Configure
  82:main.c        **** 
  83:main.c        **** 	/* LED PIO Config */
  84:main.c        **** 	LEDs_configure();
 378              		.loc 2 84 0
 379 0234 FFF7FEFF 		bl	LEDs_configure
  85:main.c        **** 	LED_clr(statusled);
 380              		.loc 2 85 0
 381 0238 4FF00000 		mov	r0, #0
 382 023c FFF7FEFF 		bl	LED_clr
  86:main.c        **** 
  87:main.c        **** 	/* USB Console Config */
  88:main.c        **** 	USBC_Configure();
 383              		.loc 2 88 0
 384 0240 FFF7FEFF 		bl	USBC_Configure
  89:main.c        **** }
 385              		.loc 2 89 0
 386 0244 07F10C07 		add	r7, r7, #12
 387 0248 BD46     		mov	sp, r7
 388 024a 90BD     		pop	{r4, r7, pc}
 389              		.cfi_endproc
 390              	.LFE35:
 391              		.size	init, .-init
 392              		.section	.rodata
 393              		.align	2
 394              	.LC0:
 395 0000 2D442D20 		.ascii	"-D- set state STOPPED\012\000"
 395      73657420 
 395      73746174 
 395      65205354 
 395      4F505045 
 396 0017 00       		.align	2
 397              	.LC1:
 398 0018 2D442D20 		.ascii	"-D- set state RUN\012\000"
 398      73657420 
 398      73746174 
 398      65205255 
 398      4E0A00
 399 002b 00       		.align	2
 400              	.LC2:
 401 002c 2D442D20 		.ascii	"-D- set state HOLD\012\000"
 401      73657420 
 401      73746174 
 401      6520484F 
 401      4C440A00 
 402              		.align	2
 403              	.LC3:
 404 0040 2D442D20 		.ascii	"-D- set state RELEASE\012\000"
 404      73657420 
 404      73746174 
 404      65205245 
 404      4C454153 
 405 0057 00       		.align	2
 406              	.LC4:
 407 0058 2D442D20 		.ascii	"-D- got invalid state\012\000"
 407      676F7420 
ARM GAS  /tmp/ccCX0vdB.s 			page 38


 407      696E7661 
 407      6C696420 
 407      73746174 
 408              		.section	.text.state,"ax",%progbits
 409              		.align	2
 410              		.global	state
 411              		.thumb
 412              		.thumb_func
 413              		.type	state, %function
 414              	state:
 415              	.LFB36:
  90:main.c        **** 
  91:main.c        **** void state(uint8_t new) 
  92:main.c        **** {
 416              		.loc 2 92 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 8
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420 0000 80B5     		push	{r7, lr}
 421              	.LCFI9:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 14, -4
 424              		.cfi_offset 7, -8
 425 0002 82B0     		sub	sp, sp, #8
 426              	.LCFI10:
 427              		.cfi_def_cfa_offset 16
 428 0004 00AF     		add	r7, sp, #0
 429              	.LCFI11:
 430              		.cfi_def_cfa_register 7
 431 0006 0346     		mov	r3, r0
 432 0008 FB71     		strb	r3, [r7, #7]
  93:main.c        **** 	switch (new) {
 433              		.loc 2 93 0
 434 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 435 000c 03F1FF33 		add	r3, r3, #-1
 436 0010 072B     		cmp	r3, #7
 437 0012 00F2AF80 		bhi	.L7
 438 0016 01A2     		adr	r2, .L12
 439 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 440              		.align	2
 441              	.L12:
 442 001c 3D000000 		.word	.L8+1
 443 0020 91000000 		.word	.L9+1
 444 0024 75010000 		.word	.L7+1
 445 0028 CF000000 		.word	.L10+1
 446 002c 75010000 		.word	.L7+1
 447 0030 75010000 		.word	.L7+1
 448 0034 75010000 		.word	.L7+1
 449 0038 21010000 		.word	.L11+1
 450              	.L8:
  94:main.c        **** 		case STOPPED:
  95:main.c        **** 			mode(STOP, &loop);
 451              		.loc 2 95 0
 452 003c 4FF00300 		mov	r0, #3
 453 0040 40F20001 		movw	r1, #:lower16:loop
 454 0044 C0F20001 		movt	r1, #:upper16:loop
 455 0048 FFF7FEFF 		bl	mode
ARM GAS  /tmp/ccCX0vdB.s 			page 39


  96:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM0, 0);
 456              		.loc 2 96 0
 457 004c 4FF00000 		mov	r0, #0
 458 0050 C4F20200 		movt	r0, 16386
 459 0054 4FF00001 		mov	r1, #0
 460 0058 4FF00002 		mov	r2, #0
 461 005c FFF7FEFF 		bl	PWMC_SetDutyCycle
  97:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM1, 0);
 462              		.loc 2 97 0
 463 0060 4FF00000 		mov	r0, #0
 464 0064 C4F20200 		movt	r0, 16386
 465 0068 4FF00101 		mov	r1, #1
 466 006c 4FF00002 		mov	r2, #0
 467 0070 FFF7FEFF 		bl	PWMC_SetDutyCycle
  98:main.c        **** 			TRACE_DEBUG("set state STOPPED\n");
 468              		.loc 2 98 0
 469 0074 40F20003 		movw	r3, #:lower16:_impure_ptr
 470 0078 C0F20003 		movt	r3, #:upper16:_impure_ptr
 471 007c 1B68     		ldr	r3, [r3, #0]
 472 007e DB68     		ldr	r3, [r3, #12]
 473 0080 1846     		mov	r0, r3
 474 0082 40F20001 		movw	r1, #:lower16:.LC0
 475 0086 C0F20001 		movt	r1, #:upper16:.LC0
 476 008a FFF7FEFF 		bl	fiprintf
  99:main.c        **** 			break;
 477              		.loc 2 99 0
 478 008e 82E0     		b	.L13
 479              	.L9:
 100:main.c        **** 		case RUN:
 101:main.c        **** 			loop.tristate = &rtrip;
 480              		.loc 2 101 0
 481 0090 40F20003 		movw	r3, #:lower16:loop
 482 0094 C0F20003 		movt	r3, #:upper16:loop
 483 0098 40F20002 		movw	r2, #:lower16:rtrip
 484 009c C0F20002 		movt	r2, #:upper16:rtrip
 485 00a0 9A62     		str	r2, [r3, #40]
 102:main.c        **** 			mode(RAMP, &loop);
 486              		.loc 2 102 0
 487 00a2 4FF00200 		mov	r0, #2
 488 00a6 40F20001 		movw	r1, #:lower16:loop
 489 00aa C0F20001 		movt	r1, #:upper16:loop
 490 00ae FFF7FEFF 		bl	mode
 103:main.c        **** 			TRACE_DEBUG("set state RUN\n");
 491              		.loc 2 103 0
 492 00b2 40F20003 		movw	r3, #:lower16:_impure_ptr
 493 00b6 C0F20003 		movt	r3, #:upper16:_impure_ptr
 494 00ba 1B68     		ldr	r3, [r3, #0]
 495 00bc DB68     		ldr	r3, [r3, #12]
 496 00be 1846     		mov	r0, r3
 497 00c0 40F20001 		movw	r1, #:lower16:.LC1
 498 00c4 C0F20001 		movt	r1, #:upper16:.LC1
 499 00c8 FFF7FEFF 		bl	fiprintf
 104:main.c        **** 			break;
 500              		.loc 2 104 0
 501 00cc 63E0     		b	.L13
 502              	.L10:
 105:main.c        **** 		case HOLD:
ARM GAS  /tmp/ccCX0vdB.s 			page 40


 106:main.c        **** 			loop.tristate = &ntrip;
 503              		.loc 2 106 0
 504 00ce 40F20003 		movw	r3, #:lower16:loop
 505 00d2 C0F20003 		movt	r3, #:upper16:loop
 506 00d6 40F20002 		movw	r2, #:lower16:ntrip
 507 00da C0F20002 		movt	r2, #:upper16:ntrip
 508 00de 9A62     		str	r2, [r3, #40]
 107:main.c        **** 			loop.SP = loop._x;
 509              		.loc 2 107 0
 510 00e0 40F20003 		movw	r3, #:lower16:loop
 511 00e4 C0F20003 		movt	r3, #:upper16:loop
 512 00e8 9A8C     		ldrh	r2, [r3, #36]
 513 00ea 40F20003 		movw	r3, #:lower16:loop
 514 00ee C0F20003 		movt	r3, #:upper16:loop
 515 00f2 5A80     		strh	r2, [r3, #2]	@ movhi
 108:main.c        **** 			mode(NORMAL, &loop);
 516              		.loc 2 108 0
 517 00f4 4FF00100 		mov	r0, #1
 518 00f8 40F20001 		movw	r1, #:lower16:loop
 519 00fc C0F20001 		movt	r1, #:upper16:loop
 520 0100 FFF7FEFF 		bl	mode
 109:main.c        **** 			TRACE_DEBUG("set state HOLD\n");
 521              		.loc 2 109 0
 522 0104 40F20003 		movw	r3, #:lower16:_impure_ptr
 523 0108 C0F20003 		movt	r3, #:upper16:_impure_ptr
 524 010c 1B68     		ldr	r3, [r3, #0]
 525 010e DB68     		ldr	r3, [r3, #12]
 526 0110 1846     		mov	r0, r3
 527 0112 40F20001 		movw	r1, #:lower16:.LC2
 528 0116 C0F20001 		movt	r1, #:upper16:.LC2
 529 011a FFF7FEFF 		bl	fiprintf
 110:main.c        **** 			break;
 530              		.loc 2 110 0
 531 011e 3AE0     		b	.L13
 532              	.L11:
 111:main.c        **** 		case RELEASE:
 112:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM0, 0); // down -> 0
 533              		.loc 2 112 0
 534 0120 4FF00000 		mov	r0, #0
 535 0124 C4F20200 		movt	r0, 16386
 536 0128 4FF00001 		mov	r1, #0
 537 012c 4FF00002 		mov	r2, #0
 538 0130 FFF7FEFF 		bl	PWMC_SetDutyCycle
 113:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM1, 0); // up -> full
 539              		.loc 2 113 0
 540 0134 4FF00000 		mov	r0, #0
 541 0138 C4F20200 		movt	r0, 16386
 542 013c 4FF00101 		mov	r1, #1
 543 0140 4FF00002 		mov	r2, #0
 544 0144 FFF7FEFF 		bl	PWMC_SetDutyCycle
 114:main.c        **** 			mode(STOP, &loop);
 545              		.loc 2 114 0
 546 0148 4FF00300 		mov	r0, #3
 547 014c 40F20001 		movw	r1, #:lower16:loop
 548 0150 C0F20001 		movt	r1, #:upper16:loop
 549 0154 FFF7FEFF 		bl	mode
 115:main.c        **** 			TRACE_DEBUG("set state RELEASE\n");
ARM GAS  /tmp/ccCX0vdB.s 			page 41


 550              		.loc 2 115 0
 551 0158 40F20003 		movw	r3, #:lower16:_impure_ptr
 552 015c C0F20003 		movt	r3, #:upper16:_impure_ptr
 553 0160 1B68     		ldr	r3, [r3, #0]
 554 0162 DB68     		ldr	r3, [r3, #12]
 555 0164 1846     		mov	r0, r3
 556 0166 40F20001 		movw	r1, #:lower16:.LC3
 557 016a C0F20001 		movt	r1, #:upper16:.LC3
 558 016e FFF7FEFF 		bl	fiprintf
 116:main.c        **** 			break;
 559              		.loc 2 116 0
 560 0172 10E0     		b	.L13
 561              	.L7:
 117:main.c        **** 		default:
 118:main.c        **** 			TRACE_DEBUG("got invalid state\n");
 562              		.loc 2 118 0
 563 0174 40F20003 		movw	r3, #:lower16:_impure_ptr
 564 0178 C0F20003 		movt	r3, #:upper16:_impure_ptr
 565 017c 1B68     		ldr	r3, [r3, #0]
 566 017e DB68     		ldr	r3, [r3, #12]
 567 0180 1846     		mov	r0, r3
 568 0182 40F20001 		movw	r1, #:lower16:.LC4
 569 0186 C0F20001 		movt	r1, #:upper16:.LC4
 570 018a FFF7FEFF 		bl	fiprintf
 119:main.c        **** 			state(STOPPED);
 571              		.loc 2 119 0
 572 018e 4FF00100 		mov	r0, #1
 573 0192 FFF7FEFF 		bl	state
 574              	.L13:
 120:main.c        **** 	}
 121:main.c        **** 	_state = new;
 575              		.loc 2 121 0
 576 0196 40F20003 		movw	r3, #:lower16:_state
 577 019a C0F20003 		movt	r3, #:upper16:_state
 578 019e FA79     		ldrb	r2, [r7, #7]
 579 01a0 1A70     		strb	r2, [r3, #0]
 122:main.c        **** }
 580              		.loc 2 122 0
 581 01a2 07F10807 		add	r7, r7, #8
 582 01a6 BD46     		mov	sp, r7
 583 01a8 80BD     		pop	{r7, pc}
 584              		.cfi_endproc
 585              	.LFE36:
 586              		.size	state, .-state
 587 01aa 00BF     		.section	.rodata
 588 006f 00       		.align	2
 589              	.LC5:
 590 0070 25632025 		.ascii	"%c %u %u %u\000"
 590      75202575 
 590      20257500 
 591              		.align	2
 592              	.LC6:
 593 007c 2D442D20 		.ascii	"-D- got %i arguments\000"
 593      676F7420 
 593      25692061 
 593      7267756D 
 593      656E7473 
ARM GAS  /tmp/ccCX0vdB.s 			page 42


 594 0091 000000   		.align	2
 595              	.LC7:
 596 0094 2D492D20 		.ascii	"-I- set ramp endpoint to %u\012\000"
 596      73657420 
 596      72616D70 
 596      20656E64 
 596      706F696E 
 597 00b1 000000   		.align	2
 598              	.LC8:
 599 00b4 25750A00 		.ascii	"%u\012\000"
 600              		.align	2
 601              	.LC9:
 602 00b8 2D492D20 		.ascii	"-I- set ramp slope to %i\012\000"
 602      73657420 
 602      72616D70 
 602      20736C6F 
 602      70652074 
 603 00d2 0000     		.align	2
 604              	.LC10:
 605 00d4 25690A00 		.ascii	"%i\012\000"
 606              		.align	2
 607              	.LC11:
 608 00d8 2D492D20 		.ascii	"-I- set PID factors to %u, %u, %u\012\000"
 608      73657420 
 608      50494420 
 608      66616374 
 608      6F727320 
 609 00fb 00       		.align	2
 610              	.LC12:
 611 00fc 25752025 		.ascii	"%u %u %u\012\000"
 611      75202575 
 611      0A00
 612 0106 0000     		.align	2
 613              	.LC13:
 614 0108 2D492D20 		.ascii	"-I- set releasetime to %u\012\000"
 614      73657420 
 614      72656C65 
 614      61736574 
 614      696D6520 
 615 0123 00       		.align	2
 616              	.LC14:
 617 0124 2D492D20 		.ascii	"-I- set dxmax to %u\012\000"
 617      73657420 
 617      64786D61 
 617      7820746F 
 617      2025750A 
 618 0139 000000   		.align	2
 619              	.LC15:
 620 013c 636F6E66 		.ascii	"config\000"
 620      696700
 621 0143 00       		.align	2
 622              	.LC16:
 623 0144 72756E00 		.ascii	"run\000"
 624              		.align	2
 625              	.LC17:
 626 0148 686F6C64 		.ascii	"hold\000"
 626      00
ARM GAS  /tmp/ccCX0vdB.s 			page 43


 627 014d 000000   		.align	2
 628              	.LC18:
 629 0150 2D492D20 		.ascii	"-I- set setpoint to %u\012\000"
 629      73657420 
 629      73657470 
 629      6F696E74 
 629      20746F20 
 630              		.align	2
 631              	.LC19:
 632 0168 72656C65 		.ascii	"release\000"
 632      61736500 
 633              		.section	.text.cli,"ax",%progbits
 634              		.align	2
 635              		.global	cli
 636              		.thumb
 637              		.thumb_func
 638              		.type	cli, %function
 639              	cli:
 640              	.LFB37:
 123:main.c        **** 
 124:main.c        **** void cli()
 125:main.c        **** {
 641              		.loc 2 125 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 56
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645 0000 90B5     		push	{r4, r7, lr}
 646              	.LCFI12:
 647              		.cfi_def_cfa_offset 12
 648              		.cfi_offset 14, -4
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 4, -12
 651 0002 91B0     		sub	sp, sp, #68
 652              	.LCFI13:
 653              		.cfi_def_cfa_offset 80
 654 0004 02AF     		add	r7, sp, #8
 655              	.LCFI14:
 656              		.cfi_def_cfa 7, 72
 126:main.c        **** 	int argc;
 127:main.c        **** 	int argv[3];
 128:main.c        **** 	char line[32];
 129:main.c        **** 	char cmd = 0;
 657              		.loc 2 129 0
 658 0006 4FF00003 		mov	r3, #0
 659 000a FB71     		strb	r3, [r7, #7]
 130:main.c        **** 
 131:main.c        **** 	if (!USBC_hasData())
 660              		.loc 2 131 0
 661 000c FFF7FEFF 		bl	USBC_hasData
 662 0010 0346     		mov	r3, r0
 663 0012 002B     		cmp	r3, #0
 664 0014 00F0FB81 		beq	.L50
 665              	.L15:
 132:main.c        **** 		return;
 133:main.c        **** 
 134:main.c        **** 	gets(line);
 666              		.loc 2 134 0
ARM GAS  /tmp/ccCX0vdB.s 			page 44


 667 0018 07F10803 		add	r3, r7, #8
 668 001c 1846     		mov	r0, r3
 669 001e FFF7FEFF 		bl	gets
 135:main.c        **** 	argc = sscanf(line, "%c %u %u %u", &cmd, argv, argv+1, argv+2) - 1;
 670              		.loc 2 135 0
 671 0022 07F10801 		add	r1, r7, #8
 672 0026 07F10702 		add	r2, r7, #7
 673 002a 07F12803 		add	r3, r7, #40
 674 002e 07F12800 		add	r0, r7, #40
 675 0032 00F10400 		add	r0, r0, #4
 676 0036 0090     		str	r0, [sp, #0]
 677 0038 07F12800 		add	r0, r7, #40
 678 003c 00F10800 		add	r0, r0, #8
 679 0040 0190     		str	r0, [sp, #4]
 680 0042 0846     		mov	r0, r1
 681 0044 40F20001 		movw	r1, #:lower16:.LC5
 682 0048 C0F20001 		movt	r1, #:upper16:.LC5
 683 004c FFF7FEFF 		bl	siscanf
 684 0050 0346     		mov	r3, r0
 685 0052 03F1FF33 		add	r3, r3, #-1
 686 0056 7B63     		str	r3, [r7, #52]
 136:main.c        **** 	TRACE_DEBUG("got %i arguments", argc);
 687              		.loc 2 136 0
 688 0058 40F20003 		movw	r3, #:lower16:_impure_ptr
 689 005c C0F20003 		movt	r3, #:upper16:_impure_ptr
 690 0060 1B68     		ldr	r3, [r3, #0]
 691 0062 DB68     		ldr	r3, [r3, #12]
 692 0064 1846     		mov	r0, r3
 693 0066 40F20001 		movw	r1, #:lower16:.LC6
 694 006a C0F20001 		movt	r1, #:upper16:.LC6
 695 006e 7A6B     		ldr	r2, [r7, #52]
 696 0070 FFF7FEFF 		bl	fiprintf
 137:main.c        **** 
 138:main.c        **** 	switch (_state) {
 697              		.loc 2 138 0
 698 0074 40F20003 		movw	r3, #:lower16:_state
 699 0078 C0F20003 		movt	r3, #:upper16:_state
 700 007c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 701 007e 03F1FF33 		add	r3, r3, #-1
 702 0082 072B     		cmp	r3, #7
 703 0084 00F2BE81 		bhi	.L17
 704 0088 01A2     		adr	r2, .L22
 705 008a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 706 008e 00BF     		.align	2
 707              	.L22:
 708 0090 B1000000 		.word	.L18+1
 709 0094 19030000 		.word	.L19+1
 710 0098 05040000 		.word	.L17+1
 711 009c 4D030000 		.word	.L20+1
 712 00a0 05040000 		.word	.L17+1
 713 00a4 05040000 		.word	.L17+1
 714 00a8 05040000 		.word	.L17+1
 715 00ac E1030000 		.word	.L21+1
 716              	.L18:
 139:main.c        **** 		case STOPPED:
 140:main.c        **** 			if (cmd == 'g') {
 717              		.loc 2 140 0
ARM GAS  /tmp/ccCX0vdB.s 			page 45


 718 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719 00b2 672B     		cmp	r3, #103
 720 00b4 04D1     		bne	.L23
 141:main.c        **** 				state(RUN);
 721              		.loc 2 141 0
 722 00b6 4FF00200 		mov	r0, #2
 723 00ba FFF7FEFF 		bl	state
 142:main.c        **** 			}
 143:main.c        **** 			else if (cmd == 'h') {
 144:main.c        **** 				state(HOLD);
 145:main.c        **** 			}
 146:main.c        **** 			else if (cmd == 'r') {
 147:main.c        **** 				state(RELEASE);
 148:main.c        **** 			}
 149:main.c        **** 			else if (cmd == 'e') {
 150:main.c        **** 				if (argc == 1) {
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 152:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 153:main.c        **** 				}
 154:main.c        **** 				printf("%u\n", loop.rSP);
 155:main.c        **** 			}
 156:main.c        **** 			else if (cmd == 's') {
 157:main.c        **** 				if (argc == 1) {
 158:main.c        **** 					loop.rSlope = *argv;
 159:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 160:main.c        **** 				}
 161:main.c        **** 				printf("%i\n", loop.rSlope);
 162:main.c        **** 			}
 163:main.c        **** 			else if (cmd == 'k') {
 164:main.c        **** 				if (argc == 3) {
 165:main.c        **** 					loop.Kp = argv[0];
 166:main.c        **** 					loop.Ki = argv[1];
 167:main.c        **** 					loop.Kd = argv[2];
 168:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 169:main.c        **** 				}
 170:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 171:main.c        **** 			}
 172:main.c        **** 			else if (cmd == 't') {
 173:main.c        **** 				if (argc == 1) {
 174:main.c        **** 					releasetime = *argv;
 175:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 176:main.c        **** 				}
 177:main.c        **** 				printf("%u\n", releasetime);
 178:main.c        **** 			}
 179:main.c        **** 			else if (cmd == 'd') {
 180:main.c        **** 				if (argc == 2) {
 181:main.c        **** 					dxmax = *argv;
 182:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 183:main.c        **** 				}
 184:main.c        **** 				printf("%u\n", dxmax);
 185:main.c        **** 			}
 186:main.c        **** 			else if (cmd == '?') {
 187:main.c        **** 				puts("config");
 188:main.c        **** 			}
 189:main.c        **** 
 190:main.c        **** 			break;
 724              		.loc 2 190 0
ARM GAS  /tmp/ccCX0vdB.s 			page 46


 725 00be A8E1     		b	.L51
 726              	.L23:
 143:main.c        **** 			else if (cmd == 'h') {
 727              		.loc 2 143 0
 728 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 729 00c2 682B     		cmp	r3, #104
 730 00c4 04D1     		bne	.L25
 144:main.c        **** 				state(HOLD);
 731              		.loc 2 144 0
 732 00c6 4FF00400 		mov	r0, #4
 733 00ca FFF7FEFF 		bl	state
 734              		.loc 2 190 0
 735 00ce A0E1     		b	.L51
 736              	.L25:
 146:main.c        **** 			else if (cmd == 'r') {
 737              		.loc 2 146 0
 738 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 739 00d2 722B     		cmp	r3, #114
 740 00d4 04D1     		bne	.L26
 147:main.c        **** 				state(RELEASE);
 741              		.loc 2 147 0
 742 00d6 4FF00800 		mov	r0, #8
 743 00da FFF7FEFF 		bl	state
 744              		.loc 2 190 0
 745 00de 98E1     		b	.L51
 746              	.L26:
 149:main.c        **** 			else if (cmd == 'e') {
 747              		.loc 2 149 0
 748 00e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 749 00e2 652B     		cmp	r3, #101
 750 00e4 34D1     		bne	.L27
 150:main.c        **** 				if (argc == 1) {
 751              		.loc 2 150 0
 752 00e6 7B6B     		ldr	r3, [r7, #52]
 753 00e8 012B     		cmp	r3, #1
 754 00ea 24D1     		bne	.L28
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 755              		.loc 2 151 0
 756 00ec BB6A     		ldr	r3, [r7, #40]
 757 00ee 002B     		cmp	r3, #0
 758 00f0 07DB     		blt	.L29
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 759              		.loc 2 151 0 is_stmt 0 discriminator 1
 760 00f2 BA6A     		ldr	r2, [r7, #40]
 761 00f4 40F6FF73 		movw	r3, #4095
 762 00f8 9A42     		cmp	r2, r3
 763 00fa B8BF     		it	lt
 764 00fc 1346     		movlt	r3, r2
 765 00fe 9AB2     		uxth	r2, r3
 766 0100 01E0     		b	.L30
 767              	.L29:
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 768              		.loc 2 151 0 discriminator 2
 769 0102 4FF00002 		mov	r2, #0
 770              	.L30:
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 771              		.loc 2 151 0 discriminator 3
ARM GAS  /tmp/ccCX0vdB.s 			page 47


 772 0106 40F20003 		movw	r3, #:lower16:loop
 773 010a C0F20003 		movt	r3, #:upper16:loop
 774 010e 9A80     		strh	r2, [r3, #4]	@ movhi
 152:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 775              		.loc 2 152 0 is_stmt 1 discriminator 3
 776 0110 40F20003 		movw	r3, #:lower16:_impure_ptr
 777 0114 C0F20003 		movt	r3, #:upper16:_impure_ptr
 778 0118 1B68     		ldr	r3, [r3, #0]
 779 011a DA68     		ldr	r2, [r3, #12]
 780 011c 40F20003 		movw	r3, #:lower16:loop
 781 0120 C0F20003 		movt	r3, #:upper16:loop
 782 0124 9B88     		ldrh	r3, [r3, #4]
 783 0126 1046     		mov	r0, r2
 784 0128 40F20001 		movw	r1, #:lower16:.LC7
 785 012c C0F20001 		movt	r1, #:upper16:.LC7
 786 0130 1A46     		mov	r2, r3
 787 0132 FFF7FEFF 		bl	fiprintf
 788              	.L28:
 154:main.c        **** 				printf("%u\n", loop.rSP);
 789              		.loc 2 154 0
 790 0136 40F20003 		movw	r3, #:lower16:loop
 791 013a C0F20003 		movt	r3, #:upper16:loop
 792 013e 9B88     		ldrh	r3, [r3, #4]
 793 0140 40F20000 		movw	r0, #:lower16:.LC8
 794 0144 C0F20000 		movt	r0, #:upper16:.LC8
 795 0148 1946     		mov	r1, r3
 796 014a FFF7FEFF 		bl	iprintf
 797              		.loc 2 190 0
 798 014e 60E1     		b	.L51
 799              	.L27:
 156:main.c        **** 			else if (cmd == 's') {
 800              		.loc 2 156 0
 801 0150 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 802 0152 732B     		cmp	r3, #115
 803 0154 28D1     		bne	.L31
 157:main.c        **** 				if (argc == 1) {
 804              		.loc 2 157 0
 805 0156 7B6B     		ldr	r3, [r7, #52]
 806 0158 012B     		cmp	r3, #1
 807 015a 18D1     		bne	.L32
 158:main.c        **** 					loop.rSlope = *argv;
 808              		.loc 2 158 0
 809 015c BA6A     		ldr	r2, [r7, #40]
 810 015e 40F20003 		movw	r3, #:lower16:loop
 811 0162 C0F20003 		movt	r3, #:upper16:loop
 812 0166 9A60     		str	r2, [r3, #8]
 159:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 813              		.loc 2 159 0
 814 0168 40F20003 		movw	r3, #:lower16:_impure_ptr
 815 016c C0F20003 		movt	r3, #:upper16:_impure_ptr
 816 0170 1B68     		ldr	r3, [r3, #0]
 817 0172 DA68     		ldr	r2, [r3, #12]
 818 0174 40F20003 		movw	r3, #:lower16:loop
 819 0178 C0F20003 		movt	r3, #:upper16:loop
 820 017c 9B68     		ldr	r3, [r3, #8]
 821 017e 1046     		mov	r0, r2
 822 0180 40F20001 		movw	r1, #:lower16:.LC9
ARM GAS  /tmp/ccCX0vdB.s 			page 48


 823 0184 C0F20001 		movt	r1, #:upper16:.LC9
 824 0188 1A46     		mov	r2, r3
 825 018a FFF7FEFF 		bl	fiprintf
 826              	.L32:
 161:main.c        **** 				printf("%i\n", loop.rSlope);
 827              		.loc 2 161 0
 828 018e 40F20003 		movw	r3, #:lower16:loop
 829 0192 C0F20003 		movt	r3, #:upper16:loop
 830 0196 9B68     		ldr	r3, [r3, #8]
 831 0198 40F20000 		movw	r0, #:lower16:.LC10
 832 019c C0F20000 		movt	r0, #:upper16:.LC10
 833 01a0 1946     		mov	r1, r3
 834 01a2 FFF7FEFF 		bl	iprintf
 835              		.loc 2 190 0
 836 01a6 34E1     		b	.L51
 837              	.L31:
 163:main.c        **** 			else if (cmd == 'k') {
 838              		.loc 2 163 0
 839 01a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 840 01aa 6B2B     		cmp	r3, #107
 841 01ac 4FD1     		bne	.L33
 164:main.c        **** 				if (argc == 3) {
 842              		.loc 2 164 0
 843 01ae 7B6B     		ldr	r3, [r7, #52]
 844 01b0 032B     		cmp	r3, #3
 845 01b2 34D1     		bne	.L34
 165:main.c        **** 					loop.Kp = argv[0];
 846              		.loc 2 165 0
 847 01b4 BB6A     		ldr	r3, [r7, #40]
 848 01b6 9AB2     		uxth	r2, r3
 849 01b8 40F20003 		movw	r3, #:lower16:loop
 850 01bc C0F20003 		movt	r3, #:upper16:loop
 851 01c0 9A81     		strh	r2, [r3, #12]	@ movhi
 166:main.c        **** 					loop.Ki = argv[1];
 852              		.loc 2 166 0
 853 01c2 FB6A     		ldr	r3, [r7, #44]
 854 01c4 9AB2     		uxth	r2, r3
 855 01c6 40F20003 		movw	r3, #:lower16:loop
 856 01ca C0F20003 		movt	r3, #:upper16:loop
 857 01ce DA81     		strh	r2, [r3, #14]	@ movhi
 167:main.c        **** 					loop.Kd = argv[2];
 858              		.loc 2 167 0
 859 01d0 3B6B     		ldr	r3, [r7, #48]
 860 01d2 9AB2     		uxth	r2, r3
 861 01d4 40F20003 		movw	r3, #:lower16:loop
 862 01d8 C0F20003 		movt	r3, #:upper16:loop
 863 01dc 1A82     		strh	r2, [r3, #16]	@ movhi
 168:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 864              		.loc 2 168 0
 865 01de 40F20003 		movw	r3, #:lower16:_impure_ptr
 866 01e2 C0F20003 		movt	r3, #:upper16:_impure_ptr
 867 01e6 1B68     		ldr	r3, [r3, #0]
 868 01e8 D968     		ldr	r1, [r3, #12]
 869 01ea 40F20003 		movw	r3, #:lower16:loop
 870 01ee C0F20003 		movt	r3, #:upper16:loop
 871 01f2 9B89     		ldrh	r3, [r3, #12]
 872 01f4 1A46     		mov	r2, r3
ARM GAS  /tmp/ccCX0vdB.s 			page 49


 873 01f6 40F20003 		movw	r3, #:lower16:loop
 874 01fa C0F20003 		movt	r3, #:upper16:loop
 875 01fe DB89     		ldrh	r3, [r3, #14]
 876 0200 1C46     		mov	r4, r3
 877 0202 40F20003 		movw	r3, #:lower16:loop
 878 0206 C0F20003 		movt	r3, #:upper16:loop
 879 020a 1B8A     		ldrh	r3, [r3, #16]
 880 020c 0093     		str	r3, [sp, #0]
 881 020e 0846     		mov	r0, r1
 882 0210 40F20001 		movw	r1, #:lower16:.LC11
 883 0214 C0F20001 		movt	r1, #:upper16:.LC11
 884 0218 2346     		mov	r3, r4
 885 021a FFF7FEFF 		bl	fiprintf
 886              	.L34:
 170:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 887              		.loc 2 170 0
 888 021e 40F20003 		movw	r3, #:lower16:loop
 889 0222 C0F20003 		movt	r3, #:upper16:loop
 890 0226 9B89     		ldrh	r3, [r3, #12]
 891 0228 1946     		mov	r1, r3
 892 022a 40F20003 		movw	r3, #:lower16:loop
 893 022e C0F20003 		movt	r3, #:upper16:loop
 894 0232 DB89     		ldrh	r3, [r3, #14]
 895 0234 1A46     		mov	r2, r3
 896 0236 40F20003 		movw	r3, #:lower16:loop
 897 023a C0F20003 		movt	r3, #:upper16:loop
 898 023e 1B8A     		ldrh	r3, [r3, #16]
 899 0240 40F20000 		movw	r0, #:lower16:.LC12
 900 0244 C0F20000 		movt	r0, #:upper16:.LC12
 901 0248 FFF7FEFF 		bl	iprintf
 902              		.loc 2 190 0
 903 024c E1E0     		b	.L51
 904              	.L33:
 172:main.c        **** 			else if (cmd == 't') {
 905              		.loc 2 172 0
 906 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 907 0250 742B     		cmp	r3, #116
 908 0252 29D1     		bne	.L35
 173:main.c        **** 				if (argc == 1) {
 909              		.loc 2 173 0
 910 0254 7B6B     		ldr	r3, [r7, #52]
 911 0256 012B     		cmp	r3, #1
 912 0258 19D1     		bne	.L36
 174:main.c        **** 					releasetime = *argv;
 913              		.loc 2 174 0
 914 025a BB6A     		ldr	r3, [r7, #40]
 915 025c 1A46     		mov	r2, r3
 916 025e 40F20003 		movw	r3, #:lower16:releasetime
 917 0262 C0F20003 		movt	r3, #:upper16:releasetime
 918 0266 1A60     		str	r2, [r3, #0]
 175:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 919              		.loc 2 175 0
 920 0268 40F20003 		movw	r3, #:lower16:_impure_ptr
 921 026c C0F20003 		movt	r3, #:upper16:_impure_ptr
 922 0270 1B68     		ldr	r3, [r3, #0]
 923 0272 DA68     		ldr	r2, [r3, #12]
 924 0274 40F20003 		movw	r3, #:lower16:releasetime
ARM GAS  /tmp/ccCX0vdB.s 			page 50


 925 0278 C0F20003 		movt	r3, #:upper16:releasetime
 926 027c 1B68     		ldr	r3, [r3, #0]
 927 027e 1046     		mov	r0, r2
 928 0280 40F20001 		movw	r1, #:lower16:.LC13
 929 0284 C0F20001 		movt	r1, #:upper16:.LC13
 930 0288 1A46     		mov	r2, r3
 931 028a FFF7FEFF 		bl	fiprintf
 932              	.L36:
 177:main.c        **** 				printf("%u\n", releasetime);
 933              		.loc 2 177 0
 934 028e 40F20003 		movw	r3, #:lower16:releasetime
 935 0292 C0F20003 		movt	r3, #:upper16:releasetime
 936 0296 1B68     		ldr	r3, [r3, #0]
 937 0298 40F20000 		movw	r0, #:lower16:.LC8
 938 029c C0F20000 		movt	r0, #:upper16:.LC8
 939 02a0 1946     		mov	r1, r3
 940 02a2 FFF7FEFF 		bl	iprintf
 941              		.loc 2 190 0
 942 02a6 B4E0     		b	.L51
 943              	.L35:
 179:main.c        **** 			else if (cmd == 'd') {
 944              		.loc 2 179 0
 945 02a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 946 02aa 642B     		cmp	r3, #100
 947 02ac 29D1     		bne	.L37
 180:main.c        **** 				if (argc == 2) {
 948              		.loc 2 180 0
 949 02ae 7B6B     		ldr	r3, [r7, #52]
 950 02b0 022B     		cmp	r3, #2
 951 02b2 19D1     		bne	.L38
 181:main.c        **** 					dxmax = *argv;
 952              		.loc 2 181 0
 953 02b4 BB6A     		ldr	r3, [r7, #40]
 954 02b6 1A46     		mov	r2, r3
 955 02b8 40F20003 		movw	r3, #:lower16:dxmax
 956 02bc C0F20003 		movt	r3, #:upper16:dxmax
 957 02c0 1A60     		str	r2, [r3, #0]
 182:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 958              		.loc 2 182 0
 959 02c2 40F20003 		movw	r3, #:lower16:_impure_ptr
 960 02c6 C0F20003 		movt	r3, #:upper16:_impure_ptr
 961 02ca 1B68     		ldr	r3, [r3, #0]
 962 02cc DA68     		ldr	r2, [r3, #12]
 963 02ce 40F20003 		movw	r3, #:lower16:dxmax
 964 02d2 C0F20003 		movt	r3, #:upper16:dxmax
 965 02d6 1B68     		ldr	r3, [r3, #0]
 966 02d8 1046     		mov	r0, r2
 967 02da 40F20001 		movw	r1, #:lower16:.LC14
 968 02de C0F20001 		movt	r1, #:upper16:.LC14
 969 02e2 1A46     		mov	r2, r3
 970 02e4 FFF7FEFF 		bl	fiprintf
 971              	.L38:
 184:main.c        **** 				printf("%u\n", dxmax);
 972              		.loc 2 184 0
 973 02e8 40F20003 		movw	r3, #:lower16:dxmax
 974 02ec C0F20003 		movt	r3, #:upper16:dxmax
 975 02f0 1B68     		ldr	r3, [r3, #0]
ARM GAS  /tmp/ccCX0vdB.s 			page 51


 976 02f2 40F20000 		movw	r0, #:lower16:.LC8
 977 02f6 C0F20000 		movt	r0, #:upper16:.LC8
 978 02fa 1946     		mov	r1, r3
 979 02fc FFF7FEFF 		bl	iprintf
 980              		.loc 2 190 0
 981 0300 87E0     		b	.L51
 982              	.L37:
 186:main.c        **** 			else if (cmd == '?') {
 983              		.loc 2 186 0
 984 0302 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 985 0304 3F2B     		cmp	r3, #63
 986 0306 40F08480 		bne	.L51
 187:main.c        **** 				puts("config");
 987              		.loc 2 187 0
 988 030a 40F20000 		movw	r0, #:lower16:.LC15
 989 030e C0F20000 		movt	r0, #:upper16:.LC15
 990 0312 FFF7FEFF 		bl	puts
 991              		.loc 2 190 0
 992 0316 7CE0     		b	.L51
 993              	.L19:
 191:main.c        **** 
 192:main.c        **** 		case RUN:
 193:main.c        **** 			if (cmd == '?')
 994              		.loc 2 193 0
 995 0318 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 996 031a 3F2B     		cmp	r3, #63
 997 031c 06D1     		bne	.L39
 194:main.c        **** 				puts("run");
 998              		.loc 2 194 0
 999 031e 40F20000 		movw	r0, #:lower16:.LC16
 1000 0322 C0F20000 		movt	r0, #:upper16:.LC16
 1001 0326 FFF7FEFF 		bl	puts
 195:main.c        **** 			else if (cmd == 's')
 196:main.c        **** 				state(STOPPED);
 197:main.c        **** 			else if (cmd == 'r')
 198:main.c        **** 				state(RELEASE);
 199:main.c        **** 			break;
 1002              		.loc 2 199 0
 1003 032a 74E0     		b	.L52
 1004              	.L39:
 195:main.c        **** 			else if (cmd == 's')
 1005              		.loc 2 195 0
 1006 032c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1007 032e 732B     		cmp	r3, #115
 1008 0330 04D1     		bne	.L41
 196:main.c        **** 				state(STOPPED);
 1009              		.loc 2 196 0
 1010 0332 4FF00100 		mov	r0, #1
 1011 0336 FFF7FEFF 		bl	state
 1012              		.loc 2 199 0
 1013 033a 6CE0     		b	.L52
 1014              	.L41:
 197:main.c        **** 			else if (cmd == 'r')
 1015              		.loc 2 197 0
 1016 033c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1017 033e 722B     		cmp	r3, #114
 1018 0340 69D1     		bne	.L52
ARM GAS  /tmp/ccCX0vdB.s 			page 52


 198:main.c        **** 				state(RELEASE);
 1019              		.loc 2 198 0
 1020 0342 4FF00800 		mov	r0, #8
 1021 0346 FFF7FEFF 		bl	state
 1022              		.loc 2 199 0
 1023 034a 64E0     		b	.L52
 1024              	.L20:
 200:main.c        **** 
 201:main.c        **** 		case HOLD:
 202:main.c        **** 			if (cmd == '?')
 1025              		.loc 2 202 0
 1026 034c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1027 034e 3F2B     		cmp	r3, #63
 1028 0350 06D1     		bne	.L42
 203:main.c        **** 				puts("hold");
 1029              		.loc 2 203 0
 1030 0352 40F20000 		movw	r0, #:lower16:.LC17
 1031 0356 C0F20000 		movt	r0, #:upper16:.LC17
 1032 035a FFF7FEFF 		bl	puts
 204:main.c        **** 			else if (cmd == 's')
 205:main.c        **** 				state(STOPPED);
 206:main.c        **** 			else if (cmd == 'w') {
 207:main.c        **** 				if (argc == 1) {
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 209:main.c        **** 					TRACE_INFO("set setpoint to %u\n", loop.SP);
 210:main.c        **** 				}
 211:main.c        **** 				printf("%u\n", loop.SP);
 212:main.c        **** 			}
 213:main.c        **** 			break;
 1033              		.loc 2 213 0
 1034 035e 5CE0     		b	.L53
 1035              	.L42:
 204:main.c        **** 			else if (cmd == 's')
 1036              		.loc 2 204 0
 1037 0360 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1038 0362 732B     		cmp	r3, #115
 1039 0364 04D1     		bne	.L44
 205:main.c        **** 				state(STOPPED);
 1040              		.loc 2 205 0
 1041 0366 4FF00100 		mov	r0, #1
 1042 036a FFF7FEFF 		bl	state
 1043              		.loc 2 213 0
 1044 036e 54E0     		b	.L53
 1045              	.L44:
 206:main.c        **** 			else if (cmd == 'w') {
 1046              		.loc 2 206 0
 1047 0370 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1048 0372 772B     		cmp	r3, #119
 1049 0374 51D1     		bne	.L53
 207:main.c        **** 				if (argc == 1) {
 1050              		.loc 2 207 0
 1051 0376 7B6B     		ldr	r3, [r7, #52]
 1052 0378 012B     		cmp	r3, #1
 1053 037a 24D1     		bne	.L45
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1054              		.loc 2 208 0
 1055 037c BB6A     		ldr	r3, [r7, #40]
ARM GAS  /tmp/ccCX0vdB.s 			page 53


 1056 037e 002B     		cmp	r3, #0
 1057 0380 07DB     		blt	.L46
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1058              		.loc 2 208 0 is_stmt 0 discriminator 1
 1059 0382 BA6A     		ldr	r2, [r7, #40]
 1060 0384 40F6FF73 		movw	r3, #4095
 1061 0388 9A42     		cmp	r2, r3
 1062 038a B8BF     		it	lt
 1063 038c 1346     		movlt	r3, r2
 1064 038e 9AB2     		uxth	r2, r3
 1065 0390 01E0     		b	.L47
 1066              	.L46:
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1067              		.loc 2 208 0 discriminator 2
 1068 0392 4FF00002 		mov	r2, #0
 1069              	.L47:
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1070              		.loc 2 208 0 discriminator 3
 1071 0396 40F20003 		movw	r3, #:lower16:loop
 1072 039a C0F20003 		movt	r3, #:upper16:loop
 1073 039e 5A80     		strh	r2, [r3, #2]	@ movhi
 209:main.c        **** 					TRACE_INFO("set setpoint to %u\n", loop.SP);
 1074              		.loc 2 209 0 is_stmt 1 discriminator 3
 1075 03a0 40F20003 		movw	r3, #:lower16:_impure_ptr
 1076 03a4 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1077 03a8 1B68     		ldr	r3, [r3, #0]
 1078 03aa DA68     		ldr	r2, [r3, #12]
 1079 03ac 40F20003 		movw	r3, #:lower16:loop
 1080 03b0 C0F20003 		movt	r3, #:upper16:loop
 1081 03b4 5B88     		ldrh	r3, [r3, #2]
 1082 03b6 1046     		mov	r0, r2
 1083 03b8 40F20001 		movw	r1, #:lower16:.LC18
 1084 03bc C0F20001 		movt	r1, #:upper16:.LC18
 1085 03c0 1A46     		mov	r2, r3
 1086 03c2 FFF7FEFF 		bl	fiprintf
 1087              	.L45:
 211:main.c        **** 				printf("%u\n", loop.SP);
 1088              		.loc 2 211 0
 1089 03c6 40F20003 		movw	r3, #:lower16:loop
 1090 03ca C0F20003 		movt	r3, #:upper16:loop
 1091 03ce 5B88     		ldrh	r3, [r3, #2]
 1092 03d0 40F20000 		movw	r0, #:lower16:.LC8
 1093 03d4 C0F20000 		movt	r0, #:upper16:.LC8
 1094 03d8 1946     		mov	r1, r3
 1095 03da FFF7FEFF 		bl	iprintf
 1096              		.loc 2 213 0
 1097 03de 1CE0     		b	.L53
 1098              	.L21:
 214:main.c        **** 
 215:main.c        **** 		case RELEASE:
 216:main.c        **** 			if (cmd == '?')
 1099              		.loc 2 216 0
 1100 03e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1101 03e2 3F2B     		cmp	r3, #63
 1102 03e4 06D1     		bne	.L48
 217:main.c        **** 				puts("release");
 1103              		.loc 2 217 0
ARM GAS  /tmp/ccCX0vdB.s 			page 54


 1104 03e6 40F20000 		movw	r0, #:lower16:.LC19
 1105 03ea C0F20000 		movt	r0, #:upper16:.LC19
 1106 03ee FFF7FEFF 		bl	puts
 218:main.c        **** 			else if (cmd == 's')
 219:main.c        **** 				state(STOPPED);
 220:main.c        **** 			break;
 1107              		.loc 2 220 0
 1108 03f2 14E0     		b	.L54
 1109              	.L48:
 218:main.c        **** 			else if (cmd == 's')
 1110              		.loc 2 218 0
 1111 03f4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1112 03f6 732B     		cmp	r3, #115
 1113 03f8 11D1     		bne	.L54
 219:main.c        **** 				state(STOPPED);
 1114              		.loc 2 219 0
 1115 03fa 4FF00100 		mov	r0, #1
 1116 03fe FFF7FEFF 		bl	state
 1117              		.loc 2 220 0
 1118 0402 0CE0     		b	.L54
 1119              	.L17:
 221:main.c        **** 
 222:main.c        **** 		default:
 223:main.c        **** 			state(STOPPED);
 1120              		.loc 2 223 0
 1121 0404 4FF00100 		mov	r0, #1
 1122 0408 FFF7FEFF 		bl	state
 1123 040c 08E0     		b	.L14
 1124              	.L50:
 132:main.c        **** 		return;
 1125              		.loc 2 132 0
 1126 040e 00BF     		nop
 1127 0410 06E0     		b	.L14
 1128              	.L51:
 190:main.c        **** 			break;
 1129              		.loc 2 190 0
 1130 0412 00BF     		nop
 1131 0414 04E0     		b	.L14
 1132              	.L52:
 199:main.c        **** 			break;
 1133              		.loc 2 199 0
 1134 0416 00BF     		nop
 1135 0418 02E0     		b	.L14
 1136              	.L53:
 213:main.c        **** 			break;
 1137              		.loc 2 213 0
 1138 041a 00BF     		nop
 1139 041c 00E0     		b	.L14
 1140              	.L54:
 220:main.c        **** 			break;
 1141              		.loc 2 220 0
 1142 041e 00BF     		nop
 1143              	.L14:
 224:main.c        **** 	}
 225:main.c        **** }
 1144              		.loc 2 225 0
 1145 0420 07F13C07 		add	r7, r7, #60
ARM GAS  /tmp/ccCX0vdB.s 			page 55


 1146 0424 BD46     		mov	sp, r7
 1147 0426 90BD     		pop	{r4, r7, pc}
 1148              		.cfi_endproc
 1149              	.LFE37:
 1150              		.size	cli, .-cli
 1151              		.section	.rodata
 1152              		.align	2
 1153              	.LC20:
 1154 0170 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
 1154      52756E6E 
 1154      696E6720 
 1154      61742025 
 1154      69204D48 
 1155 0187 00       		.align	2
 1156              	.LC21:
 1157 0188 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
 1157      77616974 
 1157      696E6720 
 1157      756E7469 
 1157      6C205553 
 1158 01b3 00       		.align	2
 1159              	.LC22:
 1160 01b4 2D442D20 		.ascii	"-D- releasetime elapsed\012\000"
 1160      72656C65 
 1160      61736574 
 1160      696D6520 
 1160      656C6170 
 1161 01cd 000000   		.section	.text.main,"ax",%progbits
 1162              		.align	2
 1163              		.global	main
 1164              		.thumb
 1165              		.thumb_func
 1166              		.type	main, %function
 1167              	main:
 1168              	.LFB38:
 226:main.c        **** 
 227:main.c        **** int main() 
 228:main.c        **** {
 1169              		.loc 2 228 0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 8
 1172              		@ frame_needed = 1, uses_anonymous_args = 0
 1173 0000 80B5     		push	{r7, lr}
 1174              	.LCFI15:
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 14, -4
 1177              		.cfi_offset 7, -8
 1178 0002 82B0     		sub	sp, sp, #8
 1179              	.LCFI16:
 1180              		.cfi_def_cfa_offset 16
 1181 0004 00AF     		add	r7, sp, #0
 1182              	.LCFI17:
 1183              		.cfi_def_cfa_register 7
 229:main.c        **** 	uint32_t timestamp = 0;
 1184              		.loc 2 229 0
 1185 0006 4FF00003 		mov	r3, #0
 1186 000a 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/ccCX0vdB.s 			page 56


 230:main.c        **** 
 231:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 1187              		.loc 2 231 0
 1188 000c 40F20003 		movw	r3, #:lower16:_impure_ptr
 1189 0010 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1190 0014 1B68     		ldr	r3, [r3, #0]
 1191 0016 DB68     		ldr	r3, [r3, #12]
 1192 0018 1846     		mov	r0, r3
 1193 001a 40F20001 		movw	r1, #:lower16:.LC20
 1194 001e C0F20001 		movt	r1, #:upper16:.LC20
 1195 0022 4FF03002 		mov	r2, #48
 1196 0026 FFF7FEFF 		bl	fiprintf
 232:main.c        **** 
 233:main.c        **** 	/* WDT off */
 234:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 1197              		.loc 2 234 0
 1198 002a 41F25043 		movw	r3, #5200
 1199 002e C4F20E03 		movt	r3, 16398
 1200 0032 4FF40042 		mov	r2, #32768
 1201 0036 5A60     		str	r2, [r3, #4]
 235:main.c        **** 
 236:main.c        **** 	/* configure hardware */
 237:main.c        **** 	init();
 1202              		.loc 2 237 0
 1203 0038 FFF7FEFF 		bl	init
 238:main.c        **** 
 239:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 1204              		.loc 2 239 0
 1205 003c 40F20003 		movw	r3, #:lower16:_impure_ptr
 1206 0040 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1207 0044 1B68     		ldr	r3, [r3, #0]
 1208 0046 DB68     		ldr	r3, [r3, #12]
 1209 0048 1846     		mov	r0, r3
 1210 004a 40F20001 		movw	r1, #:lower16:.LC21
 1211 004e C0F20001 		movt	r1, #:upper16:.LC21
 1212 0052 FFF7FEFF 		bl	fiprintf
 240:main.c        **** 	while (!USBC_isConfigured());
 1213              		.loc 2 240 0
 1214 0056 00BF     		nop
 1215              	.L56:
 1216              		.loc 2 240 0 is_stmt 0 discriminator 1
 1217 0058 FFF7FEFF 		bl	USBC_isConfigured
 1218 005c 0346     		mov	r3, r0
 1219 005e 002B     		cmp	r3, #0
 1220 0060 FAD0     		beq	.L56
 241:main.c        **** 
 242:main.c        **** 	loop.Kp = SCALE(3);
 1221              		.loc 2 242 0 is_stmt 1
 1222 0062 40F20003 		movw	r3, #:lower16:loop
 1223 0066 C0F20003 		movt	r3, #:upper16:loop
 1224 006a 4FF4C072 		mov	r2, #384
 1225 006e 9A81     		strh	r2, [r3, #12]	@ movhi
 243:main.c        **** 	loop.Ki = SCALE(2);
 1226              		.loc 2 243 0
 1227 0070 40F20003 		movw	r3, #:lower16:loop
 1228 0074 C0F20003 		movt	r3, #:upper16:loop
 1229 0078 4FF48072 		mov	r2, #256
ARM GAS  /tmp/ccCX0vdB.s 			page 57


 1230 007c DA81     		strh	r2, [r3, #14]	@ movhi
 244:main.c        **** 	loop.Kd = SCALE(0);
 1231              		.loc 2 244 0
 1232 007e 40F20003 		movw	r3, #:lower16:loop
 1233 0082 C0F20003 		movt	r3, #:upper16:loop
 1234 0086 4FF00002 		mov	r2, #0
 1235 008a 1A82     		strh	r2, [r3, #16]	@ movhi
 245:main.c        **** 	loop.rSlope = 16;
 1236              		.loc 2 245 0
 1237 008c 40F20003 		movw	r3, #:lower16:loop
 1238 0090 C0F20003 		movt	r3, #:upper16:loop
 1239 0094 4FF01002 		mov	r2, #16
 1240 0098 9A60     		str	r2, [r3, #8]
 246:main.c        **** 	loop.rSP = MAXv;
 1241              		.loc 2 246 0
 1242 009a 40F20003 		movw	r3, #:lower16:loop
 1243 009e C0F20003 		movt	r3, #:upper16:loop
 1244 00a2 40F6FF72 		movw	r2, #4095
 1245 00a6 9A80     		strh	r2, [r3, #4]	@ movhi
 247:main.c        **** 	loop.tristate = &rtrip;
 1246              		.loc 2 247 0
 1247 00a8 40F20003 		movw	r3, #:lower16:loop
 1248 00ac C0F20003 		movt	r3, #:upper16:loop
 1249 00b0 40F20002 		movw	r2, #:lower16:rtrip
 1250 00b4 C0F20002 		movt	r2, #:upper16:rtrip
 1251 00b8 9A62     		str	r2, [r3, #40]
 248:main.c        **** 
 249:main.c        **** 	LED_blink(statusled, 5);
 1252              		.loc 2 249 0
 1253 00ba 4FF00000 		mov	r0, #0
 1254 00be 4FF00501 		mov	r1, #5
 1255 00c2 FFF7FEFF 		bl	LED_blink
 250:main.c        **** 
 251:main.c        **** 	setbuf(stdout, NULL);
 1256              		.loc 2 251 0
 1257 00c6 40F20003 		movw	r3, #:lower16:_impure_ptr
 1258 00ca C0F20003 		movt	r3, #:upper16:_impure_ptr
 1259 00ce 1B68     		ldr	r3, [r3, #0]
 1260 00d0 9B68     		ldr	r3, [r3, #8]
 1261 00d2 1846     		mov	r0, r3
 1262 00d4 4FF00001 		mov	r1, #0
 1263 00d8 FFF7FEFF 		bl	setbuf
 1264              	.L71:
 252:main.c        **** 
 253:main.c        **** 	while (1) {
 254:main.c        **** 		cli();
 1265              		.loc 2 254 0
 1266 00dc FFF7FEFF 		bl	cli
 255:main.c        **** 		switch (_state) {
 1267              		.loc 2 255 0
 1268 00e0 40F20003 		movw	r3, #:lower16:_state
 1269 00e4 C0F20003 		movt	r3, #:upper16:_state
 1270 00e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1271 00ea 03F1FF33 		add	r3, r3, #-1
 1272 00ee 072B     		cmp	r3, #7
 1273 00f0 00F2A780 		bhi	.L57
 1274 00f4 01A1     		adr	r1, .L62
ARM GAS  /tmp/ccCX0vdB.s 			page 58


 1275 00f6 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 1276 00fa 00BF     		.align	2
 1277              	.L62:
 1278 00fc 4D020000 		.word	.L72+1
 1279 0100 11020000 		.word	.L59+1
 1280 0104 43020000 		.word	.L57+1
 1281 0108 1D010000 		.word	.L60+1
 1282 010c 43020000 		.word	.L57+1
 1283 0110 43020000 		.word	.L57+1
 1284 0114 43020000 		.word	.L57+1
 1285 0118 8F010000 		.word	.L61+1
 1286              	.L60:
 256:main.c        **** 			case STOPPED:
 257:main.c        **** 				break;
 258:main.c        **** 
 259:main.c        **** 			case HOLD:
 260:main.c        **** 				if (GetTickCount() % 1000)
 1287              		.loc 2 260 0
 1288 011c FFF7FEFF 		bl	GetTickCount
 1289 0120 0246     		mov	r2, r0
 1290 0122 44F6D353 		movw	r3, #19923
 1291 0126 C1F26203 		movt	r3, 4194
 1292 012a A3FB0213 		umull	r1, r3, r3, r2
 1293 012e 4FEA9313 		lsr	r3, r3, #6
 1294 0132 4FF47A71 		mov	r1, #1000
 1295 0136 01FB03F3 		mul	r3, r1, r3
 1296 013a D31A     		subs	r3, r2, r3
 1297 013c 002B     		cmp	r3, #0
 1298 013e 05D0     		beq	.L64
 261:main.c        **** 					LED_blink(statusled, 1);
 1299              		.loc 2 261 0
 1300 0140 4FF00000 		mov	r0, #0
 1301 0144 4FF00101 		mov	r1, #1
 1302 0148 FFF7FEFF 		bl	LED_blink
 1303              	.L64:
 262:main.c        **** 				if (loop._dx > dxmax || loop._dx < -dxmax)
 1304              		.loc 2 262 0
 1305 014c 40F20003 		movw	r3, #:lower16:loop
 1306 0150 C0F20003 		movt	r3, #:upper16:loop
 1307 0154 9B69     		ldr	r3, [r3, #24]
 1308 0156 1A46     		mov	r2, r3
 1309 0158 40F20003 		movw	r3, #:lower16:dxmax
 1310 015c C0F20003 		movt	r3, #:upper16:dxmax
 1311 0160 1B68     		ldr	r3, [r3, #0]
 1312 0162 9A42     		cmp	r2, r3
 1313 0164 0ED8     		bhi	.L65
 1314              		.loc 2 262 0 is_stmt 0 discriminator 1
 1315 0166 40F20003 		movw	r3, #:lower16:loop
 1316 016a C0F20003 		movt	r3, #:upper16:loop
 1317 016e 9B69     		ldr	r3, [r3, #24]
 1318 0170 1A46     		mov	r2, r3
 1319 0172 40F20003 		movw	r3, #:lower16:dxmax
 1320 0176 C0F20003 		movt	r3, #:upper16:dxmax
 1321 017a 1B68     		ldr	r3, [r3, #0]
 1322 017c C3F10003 		rsb	r3, r3, #0
 1323 0180 9A42     		cmp	r2, r3
 1324 0182 65D2     		bcs	.L73
ARM GAS  /tmp/ccCX0vdB.s 			page 59


 1325              	.L65:
 263:main.c        **** 					state(RELEASE);
 1326              		.loc 2 263 0 is_stmt 1
 1327 0184 4FF00800 		mov	r0, #8
 1328 0188 FFF7FEFF 		bl	state
 264:main.c        **** 				break;
 1329              		.loc 2 264 0
 1330 018c 60E0     		b	.L73
 1331              	.L61:
 265:main.c        **** 
 266:main.c        **** 			case RELEASE:
 267:main.c        **** 				if (GetTickCount() % 1000)
 1332              		.loc 2 267 0
 1333 018e FFF7FEFF 		bl	GetTickCount
 1334 0192 0246     		mov	r2, r0
 1335 0194 44F6D353 		movw	r3, #19923
 1336 0198 C1F26203 		movt	r3, 4194
 1337 019c A3FB0213 		umull	r1, r3, r3, r2
 1338 01a0 4FEA9313 		lsr	r3, r3, #6
 1339 01a4 4FF47A71 		mov	r1, #1000
 1340 01a8 01FB03F3 		mul	r3, r1, r3
 1341 01ac D31A     		subs	r3, r2, r3
 1342 01ae 002B     		cmp	r3, #0
 1343 01b0 05D0     		beq	.L67
 268:main.c        **** 					LED_blink(statusled, 2);
 1344              		.loc 2 268 0
 1345 01b2 4FF00000 		mov	r0, #0
 1346 01b6 4FF00201 		mov	r1, #2
 1347 01ba FFF7FEFF 		bl	LED_blink
 1348              	.L67:
 269:main.c        **** 
 270:main.c        **** 				if (timestamp == 0)
 1349              		.loc 2 270 0
 1350 01be 7B68     		ldr	r3, [r7, #4]
 1351 01c0 002B     		cmp	r3, #0
 1352 01c2 0AD1     		bne	.L68
 271:main.c        **** 					timestamp = GetTickCount() + releasetime;
 1353              		.loc 2 271 0
 1354 01c4 FFF7FEFF 		bl	GetTickCount
 1355 01c8 0246     		mov	r2, r0
 1356 01ca 40F20003 		movw	r3, #:lower16:releasetime
 1357 01ce C0F20003 		movt	r3, #:upper16:releasetime
 1358 01d2 1B68     		ldr	r3, [r3, #0]
 1359 01d4 D318     		adds	r3, r2, r3
 1360 01d6 7B60     		str	r3, [r7, #4]
 272:main.c        **** 				else if (GetTickCount() >= timestamp) {
 273:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
 274:main.c        **** 					timestamp = 0;
 275:main.c        **** 					state(STOPPED);
 276:main.c        **** 				}
 277:main.c        **** 				break;
 1361              		.loc 2 277 0
 1362 01d8 3CE0     		b	.L74
 1363              	.L68:
 272:main.c        **** 				else if (GetTickCount() >= timestamp) {
 1364              		.loc 2 272 0
 1365 01da FFF7FEFF 		bl	GetTickCount
ARM GAS  /tmp/ccCX0vdB.s 			page 60


 1366 01de 0246     		mov	r2, r0
 1367 01e0 7B68     		ldr	r3, [r7, #4]
 1368 01e2 9A42     		cmp	r2, r3
 1369 01e4 36D3     		bcc	.L74
 273:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
 1370              		.loc 2 273 0
 1371 01e6 40F20003 		movw	r3, #:lower16:_impure_ptr
 1372 01ea C0F20003 		movt	r3, #:upper16:_impure_ptr
 1373 01ee 1B68     		ldr	r3, [r3, #0]
 1374 01f0 DB68     		ldr	r3, [r3, #12]
 1375 01f2 1846     		mov	r0, r3
 1376 01f4 40F20001 		movw	r1, #:lower16:.LC22
 1377 01f8 C0F20001 		movt	r1, #:upper16:.LC22
 1378 01fc FFF7FEFF 		bl	fiprintf
 274:main.c        **** 					timestamp = 0;
 1379              		.loc 2 274 0
 1380 0200 4FF00003 		mov	r3, #0
 1381 0204 7B60     		str	r3, [r7, #4]
 275:main.c        **** 					state(STOPPED);
 1382              		.loc 2 275 0
 1383 0206 4FF00100 		mov	r0, #1
 1384 020a FFF7FEFF 		bl	state
 1385              		.loc 2 277 0
 1386 020e 21E0     		b	.L74
 1387              	.L59:
 278:main.c        **** 
 279:main.c        **** 			case RUN:
 280:main.c        **** 				if (GetTickCount() % 1000)
 1388              		.loc 2 280 0
 1389 0210 FFF7FEFF 		bl	GetTickCount
 1390 0214 0246     		mov	r2, r0
 1391 0216 44F6D353 		movw	r3, #19923
 1392 021a C1F26203 		movt	r3, 4194
 1393 021e A3FB0213 		umull	r1, r3, r3, r2
 1394 0222 4FEA9313 		lsr	r3, r3, #6
 1395 0226 4FF47A71 		mov	r1, #1000
 1396 022a 01FB03F3 		mul	r3, r1, r3
 1397 022e D31A     		subs	r3, r2, r3
 1398 0230 002B     		cmp	r3, #0
 1399 0232 11D0     		beq	.L75
 281:main.c        **** 					LED_blink(statusled, 3);
 1400              		.loc 2 281 0
 1401 0234 4FF00000 		mov	r0, #0
 1402 0238 4FF00301 		mov	r1, #3
 1403 023c FFF7FEFF 		bl	LED_blink
 282:main.c        **** 				break;
 1404              		.loc 2 282 0
 1405 0240 0AE0     		b	.L75
 1406              	.L57:
 283:main.c        **** 
 284:main.c        **** 			default:
 285:main.c        **** 				state(STOPPED);
 1407              		.loc 2 285 0
 1408 0242 4FF00100 		mov	r0, #1
 1409 0246 FFF7FEFF 		bl	state
 286:main.c        **** 		}
 287:main.c        **** 	}
ARM GAS  /tmp/ccCX0vdB.s 			page 61


 1410              		.loc 2 287 0
 1411 024a 47E7     		b	.L71
 1412              	.L72:
 257:main.c        **** 				break;
 1413              		.loc 2 257 0
 1414 024c 00BF     		nop
 1415 024e 04E0     		b	.L63
 1416              	.L73:
 264:main.c        **** 				break;
 1417              		.loc 2 264 0
 1418 0250 00BF     		nop
 1419 0252 02E0     		b	.L63
 1420              	.L74:
 277:main.c        **** 				break;
 1421              		.loc 2 277 0
 1422 0254 00BF     		nop
 1423 0256 00E0     		b	.L63
 1424              	.L75:
 282:main.c        **** 				break;
 1425              		.loc 2 282 0
 1426 0258 00BF     		nop
 1427              	.L63:
 1428              		.loc 2 287 0
 1429 025a 3FE7     		b	.L71
 1430              		.cfi_endproc
 1431              	.LFE38:
 1432              		.size	main, .-main
 1433              		.section	.text.TC1_IrqHandler,"ax",%progbits
 1434              		.align	2
 1435              		.global	TC1_IrqHandler
 1436              		.thumb
 1437              		.thumb_func
 1438              		.type	TC1_IrqHandler, %function
 1439              	TC1_IrqHandler:
 1440              	.LFB39:
 288:main.c        **** 	return 0;
 289:main.c        **** }
 290:main.c        **** 
 291:main.c        **** void TC1_IrqHandler()
 292:main.c        **** {
 1441              		.loc 2 292 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 1, uses_anonymous_args = 0
 1445 0000 80B5     		push	{r7, lr}
 1446              	.LCFI18:
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 14, -4
 1449              		.cfi_offset 7, -8
 1450 0002 00AF     		add	r7, sp, #0
 1451              	.LCFI19:
 1452              		.cfi_def_cfa_register 7
 293:main.c        **** 	ADC_StartConversion(ADC);
 1453              		.loc 2 293 0
 1454 0004 4FF40043 		mov	r3, #32768
 1455 0008 C4F20303 		movt	r3, 16387
 1456 000c 4FF00202 		mov	r2, #2
ARM GAS  /tmp/ccCX0vdB.s 			page 62


 1457 0010 1A60     		str	r2, [r3, #0]
 294:main.c        **** 	ADC_ReadBuffer(ADC, (int16_t*) input, BUFFER_SIZE);
 1458              		.loc 2 294 0
 1459 0012 4FF40040 		mov	r0, #32768
 1460 0016 C4F20300 		movt	r0, 16387
 1461 001a 40F20001 		movw	r1, #:lower16:input
 1462 001e C0F20001 		movt	r1, #:upper16:input
 1463 0022 4FF00202 		mov	r2, #2
 1464 0026 FFF7FEFF 		bl	ADC_ReadBuffer
 295:main.c        **** }
 1465              		.loc 2 295 0
 1466 002a 80BD     		pop	{r7, pc}
 1467              		.cfi_endproc
 1468              	.LFE39:
 1469              		.size	TC1_IrqHandler, .-TC1_IrqHandler
 1470              		.section	.text.ADC_IrqHandler,"ax",%progbits
 1471              		.align	2
 1472              		.global	ADC_IrqHandler
 1473              		.thumb
 1474              		.thumb_func
 1475              		.type	ADC_IrqHandler, %function
 1476              	ADC_IrqHandler:
 1477              	.LFB40:
 296:main.c        **** 
 297:main.c        **** void ADC_IrqHandler(void)
 298:main.c        **** {
 1478              		.loc 2 298 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 8
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482 0000 80B5     		push	{r7, lr}
 1483              	.LCFI20:
 1484              		.cfi_def_cfa_offset 8
 1485              		.cfi_offset 14, -4
 1486              		.cfi_offset 7, -8
 1487 0002 82B0     		sub	sp, sp, #8
 1488              	.LCFI21:
 1489              		.cfi_def_cfa_offset 16
 1490 0004 00AF     		add	r7, sp, #0
 1491              	.LCFI22:
 1492              		.cfi_def_cfa_register 7
 299:main.c        ****     uint32_t status;
 300:main.c        **** 	uint32_t duty = 0;
 1493              		.loc 2 300 0
 1494 0006 4FF00003 		mov	r3, #0
 1495 000a 7B60     		str	r3, [r7, #4]
 301:main.c        **** 
 302:main.c        ****     status = ADC_GetStatus(ADC);
 1496              		.loc 2 302 0
 1497 000c 4FF40043 		mov	r3, #32768
 1498 0010 C4F20303 		movt	r3, 16387
 1499 0014 1B6B     		ldr	r3, [r3, #48]
 1500 0016 3B60     		str	r3, [r7, #0]
 303:main.c        **** 
 304:main.c        **** 	if ((status & ADC_ISR_RXBUFF) == ADC_ISR_RXBUFF) {
 1501              		.loc 2 304 0
 1502 0018 3B68     		ldr	r3, [r7, #0]
ARM GAS  /tmp/ccCX0vdB.s 			page 63


 1503 001a 03F08053 		and	r3, r3, #268435456
 1504 001e 002B     		cmp	r3, #0
 1505 0020 00F08B80 		beq	.L77
 305:main.c        **** 		if (_state & (RUN|HOLD)) {
 1506              		.loc 2 305 0
 1507 0024 40F20003 		movw	r3, #:lower16:_state
 1508 0028 C0F20003 		movt	r3, #:upper16:_state
 1509 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1510 002e 03F00603 		and	r3, r3, #6
 1511 0032 002B     		cmp	r3, #0
 1512 0034 00F08180 		beq	.L77
 306:main.c        **** 			control(LIMIT(input[0], MINv, MAXv), &loop);
 1513              		.loc 2 306 0
 1514 0038 40F20003 		movw	r3, #:lower16:input
 1515 003c C0F20003 		movt	r3, #:upper16:input
 1516 0040 1A88     		ldrh	r2, [r3, #0]
 1517 0042 40F6FF73 		movw	r3, #4095
 1518 0046 9A42     		cmp	r2, r3
 1519 0048 38BF     		it	cc
 1520 004a 1346     		movcc	r3, r2
 1521 004c 9BB2     		uxth	r3, r3
 1522 004e 1846     		mov	r0, r3
 1523 0050 40F20001 		movw	r1, #:lower16:loop
 1524 0054 C0F20001 		movt	r1, #:upper16:loop
 1525 0058 FFF7FEFF 		bl	control
 307:main.c        **** 			duty = loop.tristate->output * ((loop.output * PWM_PERIOD) / MAX);
 1526              		.loc 2 307 0
 1527 005c 40F20003 		movw	r3, #:lower16:loop
 1528 0060 C0F20003 		movt	r3, #:upper16:loop
 1529 0064 9B6A     		ldr	r3, [r3, #40]
 1530 0066 5968     		ldr	r1, [r3, #4]
 1531 0068 40F20003 		movw	r3, #:lower16:loop
 1532 006c C0F20003 		movt	r3, #:upper16:loop
 1533 0070 DB8C     		ldrh	r3, [r3, #38]
 1534 0072 1BB2     		sxth	r3, r3
 1535 0074 4FF06402 		mov	r2, #100
 1536 0078 02FB03F3 		mul	r3, r2, r3
 1537 007c 03F57E62 		add	r2, r3, #4064
 1538 0080 02F11F02 		add	r2, r2, #31
 1539 0084 002B     		cmp	r3, #0
 1540 0086 B8BF     		it	lt
 1541 0088 1346     		movlt	r3, r2
 1542 008a 4FEA2333 		asr	r3, r3, #12
 1543 008e 03F1FF33 		add	r3, r3, #-1
 1544 0092 03FB01F3 		mul	r3, r3, r1
 1545 0096 7B60     		str	r3, [r7, #4]
 308:main.c        **** 			if (loop.tristate->output == 1) {
 1546              		.loc 2 308 0
 1547 0098 40F20003 		movw	r3, #:lower16:loop
 1548 009c C0F20003 		movt	r3, #:upper16:loop
 1549 00a0 9B6A     		ldr	r3, [r3, #40]
 1550 00a2 5B68     		ldr	r3, [r3, #4]
 1551 00a4 012B     		cmp	r3, #1
 1552 00a6 15D1     		bne	.L79
 309:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM0, duty);
 1553              		.loc 2 309 0
 1554 00a8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccCX0vdB.s 			page 64


 1555 00aa 9BB2     		uxth	r3, r3
 1556 00ac 4FF00000 		mov	r0, #0
 1557 00b0 C4F20200 		movt	r0, 16386
 1558 00b4 4FF00001 		mov	r1, #0
 1559 00b8 1A46     		mov	r2, r3
 1560 00ba FFF7FEFF 		bl	PWMC_SetDutyCycle
 310:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM1, 0);
 1561              		.loc 2 310 0
 1562 00be 4FF00000 		mov	r0, #0
 1563 00c2 C4F20200 		movt	r0, 16386
 1564 00c6 4FF00101 		mov	r1, #1
 1565 00ca 4FF00002 		mov	r2, #0
 1566 00ce FFF7FEFF 		bl	PWMC_SetDutyCycle
 1567 00d2 32E0     		b	.L77
 1568              	.L79:
 311:main.c        **** 			}
 312:main.c        **** 			else if (loop.tristate->output == -1) {
 1569              		.loc 2 312 0
 1570 00d4 40F20003 		movw	r3, #:lower16:loop
 1571 00d8 C0F20003 		movt	r3, #:upper16:loop
 1572 00dc 9B6A     		ldr	r3, [r3, #40]
 1573 00de 5B68     		ldr	r3, [r3, #4]
 1574 00e0 B3F1FF3F 		cmp	r3, #-1
 1575 00e4 15D1     		bne	.L80
 313:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM0, 0);
 1576              		.loc 2 313 0
 1577 00e6 4FF00000 		mov	r0, #0
 1578 00ea C4F20200 		movt	r0, 16386
 1579 00ee 4FF00001 		mov	r1, #0
 1580 00f2 4FF00002 		mov	r2, #0
 1581 00f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
 314:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM1, duty);
 1582              		.loc 2 314 0
 1583 00fa 7B68     		ldr	r3, [r7, #4]
 1584 00fc 9BB2     		uxth	r3, r3
 1585 00fe 4FF00000 		mov	r0, #0
 1586 0102 C4F20200 		movt	r0, 16386
 1587 0106 4FF00101 		mov	r1, #1
 1588 010a 1A46     		mov	r2, r3
 1589 010c FFF7FEFF 		bl	PWMC_SetDutyCycle
 1590 0110 13E0     		b	.L77
 1591              	.L80:
 315:main.c        **** 			}
 316:main.c        **** 			else {
 317:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM0, 0);
 1592              		.loc 2 317 0
 1593 0112 4FF00000 		mov	r0, #0
 1594 0116 C4F20200 		movt	r0, 16386
 1595 011a 4FF00001 		mov	r1, #0
 1596 011e 4FF00002 		mov	r2, #0
 1597 0122 FFF7FEFF 		bl	PWMC_SetDutyCycle
 318:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM1, 0);
 1598              		.loc 2 318 0
 1599 0126 4FF00000 		mov	r0, #0
 1600 012a C4F20200 		movt	r0, 16386
 1601 012e 4FF00101 		mov	r1, #1
 1602 0132 4FF00002 		mov	r2, #0
ARM GAS  /tmp/ccCX0vdB.s 			page 65


 1603 0136 FFF7FEFF 		bl	PWMC_SetDutyCycle
 1604              	.L77:
 319:main.c        **** 			}
 320:main.c        **** 		}
 321:main.c        **** 	}
 322:main.c        **** }
 1605              		.loc 2 322 0
 1606 013a 07F10807 		add	r7, r7, #8
 1607 013e BD46     		mov	sp, r7
 1608 0140 80BD     		pop	{r7, pc}
 1609              		.cfi_endproc
 1610              	.LFE40:
 1611              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 1612 0142 00BF     		.text
 1613              	.Letext0:
 1614              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1615              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1616              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 1617              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1618              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1619              		.file 8 "libchip/include/SAM3S.h"
 1620              		.file 9 "controller.h"
 1621              		.section	.debug_info,"",%progbits
 1622              	.Ldebug_info0:
 1623 0000 0C1A0000 		.4byte	0x1a0c
 1624 0004 0200     		.2byte	0x2
 1625 0006 00000000 		.4byte	.Ldebug_abbrev0
 1626 000a 04       		.byte	0x4
 1627 000b 01       		.uleb128 0x1
 1628 000c FF0A0000 		.4byte	.LASF339
 1629 0010 01       		.byte	0x1
 1630 0011 66060000 		.4byte	.LASF340
 1631 0015 DD090000 		.4byte	.LASF341
 1632 0019 00000000 		.4byte	0
 1633 001d 00000000 		.4byte	0
 1634 0021 00000000 		.4byte	.Ldebug_ranges0+0
 1635 0025 00000000 		.4byte	.Ldebug_line0
 1636 0029 02       		.uleb128 0x2
 1637 002a 01       		.byte	0x1
 1638 002b 06       		.byte	0x6
 1639 002c 52020000 		.4byte	.LASF0
 1640 0030 02       		.uleb128 0x2
 1641 0031 01       		.byte	0x1
 1642 0032 08       		.byte	0x8
 1643 0033 94020000 		.4byte	.LASF1
 1644 0037 02       		.uleb128 0x2
 1645 0038 02       		.byte	0x2
 1646 0039 05       		.byte	0x5
 1647 003a 420A0000 		.4byte	.LASF2
 1648 003e 02       		.uleb128 0x2
 1649 003f 02       		.byte	0x2
 1650 0040 07       		.byte	0x7
 1651 0041 840B0000 		.4byte	.LASF3
 1652 0045 03       		.uleb128 0x3
 1653 0046 04       		.byte	0x4
 1654 0047 05       		.byte	0x5
 1655 0048 696E7400 		.ascii	"int\000"
ARM GAS  /tmp/ccCX0vdB.s 			page 66


 1656 004c 02       		.uleb128 0x2
 1657 004d 04       		.byte	0x4
 1658 004e 07       		.byte	0x7
 1659 004f F9060000 		.4byte	.LASF4
 1660 0053 02       		.uleb128 0x2
 1661 0054 08       		.byte	0x8
 1662 0055 05       		.byte	0x5
 1663 0056 F3050000 		.4byte	.LASF5
 1664 005a 02       		.uleb128 0x2
 1665 005b 08       		.byte	0x8
 1666 005c 07       		.byte	0x7
 1667 005d 19080000 		.4byte	.LASF6
 1668 0061 04       		.uleb128 0x4
 1669 0062 49050000 		.4byte	.LASF8
 1670 0066 03       		.byte	0x3
 1671 0067 07       		.byte	0x7
 1672 0068 45000000 		.4byte	0x45
 1673 006c 02       		.uleb128 0x2
 1674 006d 04       		.byte	0x4
 1675 006e 05       		.byte	0x5
 1676 006f AA010000 		.4byte	.LASF7
 1677 0073 04       		.uleb128 0x4
 1678 0074 D3070000 		.4byte	.LASF9
 1679 0078 04       		.byte	0x4
 1680 0079 2C       		.byte	0x2c
 1681 007a 6C000000 		.4byte	0x6c
 1682 007e 05       		.uleb128 0x5
 1683 007f 19090000 		.4byte	.LASF10
 1684 0083 05       		.byte	0x5
 1685 0084 6101     		.2byte	0x161
 1686 0086 4C000000 		.4byte	0x4c
 1687 008a 06       		.uleb128 0x6
 1688 008b 04       		.byte	0x4
 1689 008c 04       		.byte	0x4
 1690 008d 46       		.byte	0x46
 1691 008e A9000000 		.4byte	0xa9
 1692 0092 07       		.uleb128 0x7
 1693 0093 3C010000 		.4byte	.LASF11
 1694 0097 04       		.byte	0x4
 1695 0098 48       		.byte	0x48
 1696 0099 7E000000 		.4byte	0x7e
 1697 009d 07       		.uleb128 0x7
 1698 009e DB070000 		.4byte	.LASF12
 1699 00a2 04       		.byte	0x4
 1700 00a3 49       		.byte	0x49
 1701 00a4 A9000000 		.4byte	0xa9
 1702 00a8 00       		.byte	0
 1703 00a9 08       		.uleb128 0x8
 1704 00aa 30000000 		.4byte	0x30
 1705 00ae B9000000 		.4byte	0xb9
 1706 00b2 09       		.uleb128 0x9
 1707 00b3 4C000000 		.4byte	0x4c
 1708 00b7 03       		.byte	0x3
 1709 00b8 00       		.byte	0
 1710 00b9 0A       		.uleb128 0xa
 1711 00ba 08       		.byte	0x8
 1712 00bb 04       		.byte	0x4
ARM GAS  /tmp/ccCX0vdB.s 			page 67


 1713 00bc 43       		.byte	0x43
 1714 00bd DE000000 		.4byte	0xde
 1715 00c1 0B       		.uleb128 0xb
 1716 00c2 93070000 		.4byte	.LASF13
 1717 00c6 04       		.byte	0x4
 1718 00c7 45       		.byte	0x45
 1719 00c8 45000000 		.4byte	0x45
 1720 00cc 02       		.byte	0x2
 1721 00cd 23       		.byte	0x23
 1722 00ce 00       		.uleb128 0
 1723 00cf 0B       		.uleb128 0xb
 1724 00d0 2A000000 		.4byte	.LASF14
 1725 00d4 04       		.byte	0x4
 1726 00d5 4A       		.byte	0x4a
 1727 00d6 8A000000 		.4byte	0x8a
 1728 00da 02       		.byte	0x2
 1729 00db 23       		.byte	0x23
 1730 00dc 04       		.uleb128 0x4
 1731 00dd 00       		.byte	0
 1732 00de 04       		.uleb128 0x4
 1733 00df F6080000 		.4byte	.LASF15
 1734 00e3 04       		.byte	0x4
 1735 00e4 4B       		.byte	0x4b
 1736 00e5 B9000000 		.4byte	0xb9
 1737 00e9 04       		.uleb128 0x4
 1738 00ea DF080000 		.4byte	.LASF16
 1739 00ee 04       		.byte	0x4
 1740 00ef 4F       		.byte	0x4f
 1741 00f0 61000000 		.4byte	0x61
 1742 00f4 0C       		.uleb128 0xc
 1743 00f5 04       		.byte	0x4
 1744 00f6 04       		.uleb128 0x4
 1745 00f7 1F0B0000 		.4byte	.LASF17
 1746 00fb 06       		.byte	0x6
 1747 00fc 15       		.byte	0x15
 1748 00fd 01010000 		.4byte	0x101
 1749 0101 02       		.uleb128 0x2
 1750 0102 04       		.byte	0x4
 1751 0103 07       		.byte	0x7
 1752 0104 D2040000 		.4byte	.LASF18
 1753 0108 0D       		.uleb128 0xd
 1754 0109 A2050000 		.4byte	.LASF23
 1755 010d 18       		.byte	0x18
 1756 010e 06       		.byte	0x6
 1757 010f 2C       		.byte	0x2c
 1758 0110 67010000 		.4byte	0x167
 1759 0114 0B       		.uleb128 0xb
 1760 0115 39090000 		.4byte	.LASF19
 1761 0119 06       		.byte	0x6
 1762 011a 2E       		.byte	0x2e
 1763 011b 67010000 		.4byte	0x167
 1764 011f 02       		.byte	0x2
 1765 0120 23       		.byte	0x23
 1766 0121 00       		.uleb128 0
 1767 0122 0E       		.uleb128 0xe
 1768 0123 5F6B00   		.ascii	"_k\000"
 1769 0126 06       		.byte	0x6
ARM GAS  /tmp/ccCX0vdB.s 			page 68


 1770 0127 2F       		.byte	0x2f
 1771 0128 45000000 		.4byte	0x45
 1772 012c 02       		.byte	0x2
 1773 012d 23       		.byte	0x23
 1774 012e 04       		.uleb128 0x4
 1775 012f 0B       		.uleb128 0xb
 1776 0130 B3050000 		.4byte	.LASF20
 1777 0134 06       		.byte	0x6
 1778 0135 2F       		.byte	0x2f
 1779 0136 45000000 		.4byte	0x45
 1780 013a 02       		.byte	0x2
 1781 013b 23       		.byte	0x23
 1782 013c 08       		.uleb128 0x8
 1783 013d 0B       		.uleb128 0xb
 1784 013e D8060000 		.4byte	.LASF21
 1785 0142 06       		.byte	0x6
 1786 0143 2F       		.byte	0x2f
 1787 0144 45000000 		.4byte	0x45
 1788 0148 02       		.byte	0x2
 1789 0149 23       		.byte	0x23
 1790 014a 0C       		.uleb128 0xc
 1791 014b 0B       		.uleb128 0xb
 1792 014c 17040000 		.4byte	.LASF22
 1793 0150 06       		.byte	0x6
 1794 0151 2F       		.byte	0x2f
 1795 0152 45000000 		.4byte	0x45
 1796 0156 02       		.byte	0x2
 1797 0157 23       		.byte	0x23
 1798 0158 10       		.uleb128 0x10
 1799 0159 0E       		.uleb128 0xe
 1800 015a 5F7800   		.ascii	"_x\000"
 1801 015d 06       		.byte	0x6
 1802 015e 30       		.byte	0x30
 1803 015f 6D010000 		.4byte	0x16d
 1804 0163 02       		.byte	0x2
 1805 0164 23       		.byte	0x23
 1806 0165 14       		.uleb128 0x14
 1807 0166 00       		.byte	0
 1808 0167 0F       		.uleb128 0xf
 1809 0168 04       		.byte	0x4
 1810 0169 08010000 		.4byte	0x108
 1811 016d 08       		.uleb128 0x8
 1812 016e F6000000 		.4byte	0xf6
 1813 0172 7D010000 		.4byte	0x17d
 1814 0176 09       		.uleb128 0x9
 1815 0177 4C000000 		.4byte	0x4c
 1816 017b 00       		.byte	0
 1817 017c 00       		.byte	0
 1818 017d 0D       		.uleb128 0xd
 1819 017e 91000000 		.4byte	.LASF24
 1820 0182 24       		.byte	0x24
 1821 0183 06       		.byte	0x6
 1822 0184 34       		.byte	0x34
 1823 0185 08020000 		.4byte	0x208
 1824 0189 0B       		.uleb128 0xb
 1825 018a AD000000 		.4byte	.LASF25
 1826 018e 06       		.byte	0x6
ARM GAS  /tmp/ccCX0vdB.s 			page 69


 1827 018f 36       		.byte	0x36
 1828 0190 45000000 		.4byte	0x45
 1829 0194 02       		.byte	0x2
 1830 0195 23       		.byte	0x23
 1831 0196 00       		.uleb128 0
 1832 0197 0B       		.uleb128 0xb
 1833 0198 0A0C0000 		.4byte	.LASF26
 1834 019c 06       		.byte	0x6
 1835 019d 37       		.byte	0x37
 1836 019e 45000000 		.4byte	0x45
 1837 01a2 02       		.byte	0x2
 1838 01a3 23       		.byte	0x23
 1839 01a4 04       		.uleb128 0x4
 1840 01a5 0B       		.uleb128 0xb
 1841 01a6 A00B0000 		.4byte	.LASF27
 1842 01aa 06       		.byte	0x6
 1843 01ab 38       		.byte	0x38
 1844 01ac 45000000 		.4byte	0x45
 1845 01b0 02       		.byte	0x2
 1846 01b1 23       		.byte	0x23
 1847 01b2 08       		.uleb128 0x8
 1848 01b3 0B       		.uleb128 0xb
 1849 01b4 2F070000 		.4byte	.LASF28
 1850 01b8 06       		.byte	0x6
 1851 01b9 39       		.byte	0x39
 1852 01ba 45000000 		.4byte	0x45
 1853 01be 02       		.byte	0x2
 1854 01bf 23       		.byte	0x23
 1855 01c0 0C       		.uleb128 0xc
 1856 01c1 0B       		.uleb128 0xb
 1857 01c2 08020000 		.4byte	.LASF29
 1858 01c6 06       		.byte	0x6
 1859 01c7 3A       		.byte	0x3a
 1860 01c8 45000000 		.4byte	0x45
 1861 01cc 02       		.byte	0x2
 1862 01cd 23       		.byte	0x23
 1863 01ce 10       		.uleb128 0x10
 1864 01cf 0B       		.uleb128 0xb
 1865 01d0 920A0000 		.4byte	.LASF30
 1866 01d4 06       		.byte	0x6
 1867 01d5 3B       		.byte	0x3b
 1868 01d6 45000000 		.4byte	0x45
 1869 01da 02       		.byte	0x2
 1870 01db 23       		.byte	0x23
 1871 01dc 14       		.uleb128 0x14
 1872 01dd 0B       		.uleb128 0xb
 1873 01de A2070000 		.4byte	.LASF31
 1874 01e2 06       		.byte	0x6
 1875 01e3 3C       		.byte	0x3c
 1876 01e4 45000000 		.4byte	0x45
 1877 01e8 02       		.byte	0x2
 1878 01e9 23       		.byte	0x23
 1879 01ea 18       		.uleb128 0x18
 1880 01eb 0B       		.uleb128 0xb
 1881 01ec AC070000 		.4byte	.LASF32
 1882 01f0 06       		.byte	0x6
 1883 01f1 3D       		.byte	0x3d
ARM GAS  /tmp/ccCX0vdB.s 			page 70


 1884 01f2 45000000 		.4byte	0x45
 1885 01f6 02       		.byte	0x2
 1886 01f7 23       		.byte	0x23
 1887 01f8 1C       		.uleb128 0x1c
 1888 01f9 0B       		.uleb128 0xb
 1889 01fa F50B0000 		.4byte	.LASF33
 1890 01fe 06       		.byte	0x6
 1891 01ff 3E       		.byte	0x3e
 1892 0200 45000000 		.4byte	0x45
 1893 0204 02       		.byte	0x2
 1894 0205 23       		.byte	0x23
 1895 0206 20       		.uleb128 0x20
 1896 0207 00       		.byte	0
 1897 0208 10       		.uleb128 0x10
 1898 0209 5C010000 		.4byte	.LASF34
 1899 020d 0801     		.2byte	0x108
 1900 020f 06       		.byte	0x6
 1901 0210 47       		.byte	0x47
 1902 0211 51020000 		.4byte	0x251
 1903 0215 0B       		.uleb128 0xb
 1904 0216 E50B0000 		.4byte	.LASF35
 1905 021a 06       		.byte	0x6
 1906 021b 48       		.byte	0x48
 1907 021c 51020000 		.4byte	0x251
 1908 0220 02       		.byte	0x2
 1909 0221 23       		.byte	0x23
 1910 0222 00       		.uleb128 0
 1911 0223 0B       		.uleb128 0xb
 1912 0224 41080000 		.4byte	.LASF36
 1913 0228 06       		.byte	0x6
 1914 0229 49       		.byte	0x49
 1915 022a 51020000 		.4byte	0x251
 1916 022e 03       		.byte	0x3
 1917 022f 23       		.byte	0x23
 1918 0230 8001     		.uleb128 0x80
 1919 0232 0B       		.uleb128 0xb
 1920 0233 780A0000 		.4byte	.LASF37
 1921 0237 06       		.byte	0x6
 1922 0238 4B       		.byte	0x4b
 1923 0239 F6000000 		.4byte	0xf6
 1924 023d 03       		.byte	0x3
 1925 023e 23       		.byte	0x23
 1926 023f 8002     		.uleb128 0x100
 1927 0241 0B       		.uleb128 0xb
 1928 0242 EB0A0000 		.4byte	.LASF38
 1929 0246 06       		.byte	0x6
 1930 0247 4E       		.byte	0x4e
 1931 0248 F6000000 		.4byte	0xf6
 1932 024c 03       		.byte	0x3
 1933 024d 23       		.byte	0x23
 1934 024e 8402     		.uleb128 0x104
 1935 0250 00       		.byte	0
 1936 0251 08       		.uleb128 0x8
 1937 0252 F4000000 		.4byte	0xf4
 1938 0256 61020000 		.4byte	0x261
 1939 025a 09       		.uleb128 0x9
 1940 025b 4C000000 		.4byte	0x4c
ARM GAS  /tmp/ccCX0vdB.s 			page 71


 1941 025f 1F       		.byte	0x1f
 1942 0260 00       		.byte	0
 1943 0261 0D       		.uleb128 0xd
 1944 0262 8B070000 		.4byte	.LASF39
 1945 0266 8C       		.byte	0x8c
 1946 0267 06       		.byte	0x6
 1947 0268 52       		.byte	0x52
 1948 0269 A7020000 		.4byte	0x2a7
 1949 026d 0B       		.uleb128 0xb
 1950 026e 39090000 		.4byte	.LASF19
 1951 0272 06       		.byte	0x6
 1952 0273 53       		.byte	0x53
 1953 0274 A7020000 		.4byte	0x2a7
 1954 0278 02       		.byte	0x2
 1955 0279 23       		.byte	0x23
 1956 027a 00       		.uleb128 0
 1957 027b 0B       		.uleb128 0xb
 1958 027c B90A0000 		.4byte	.LASF40
 1959 0280 06       		.byte	0x6
 1960 0281 54       		.byte	0x54
 1961 0282 45000000 		.4byte	0x45
 1962 0286 02       		.byte	0x2
 1963 0287 23       		.byte	0x23
 1964 0288 04       		.uleb128 0x4
 1965 0289 0B       		.uleb128 0xb
 1966 028a 2E030000 		.4byte	.LASF41
 1967 028e 06       		.byte	0x6
 1968 028f 55       		.byte	0x55
 1969 0290 AD020000 		.4byte	0x2ad
 1970 0294 02       		.byte	0x2
 1971 0295 23       		.byte	0x23
 1972 0296 08       		.uleb128 0x8
 1973 0297 0B       		.uleb128 0xb
 1974 0298 09060000 		.4byte	.LASF42
 1975 029c 06       		.byte	0x6
 1976 029d 56       		.byte	0x56
 1977 029e C5020000 		.4byte	0x2c5
 1978 02a2 03       		.byte	0x3
 1979 02a3 23       		.byte	0x23
 1980 02a4 8801     		.uleb128 0x88
 1981 02a6 00       		.byte	0
 1982 02a7 0F       		.uleb128 0xf
 1983 02a8 04       		.byte	0x4
 1984 02a9 61020000 		.4byte	0x261
 1985 02ad 08       		.uleb128 0x8
 1986 02ae BF020000 		.4byte	0x2bf
 1987 02b2 BD020000 		.4byte	0x2bd
 1988 02b6 09       		.uleb128 0x9
 1989 02b7 4C000000 		.4byte	0x4c
 1990 02bb 1F       		.byte	0x1f
 1991 02bc 00       		.byte	0
 1992 02bd 11       		.uleb128 0x11
 1993 02be 01       		.byte	0x1
 1994 02bf 0F       		.uleb128 0xf
 1995 02c0 04       		.byte	0x4
 1996 02c1 BD020000 		.4byte	0x2bd
 1997 02c5 0F       		.uleb128 0xf
ARM GAS  /tmp/ccCX0vdB.s 			page 72


 1998 02c6 04       		.byte	0x4
 1999 02c7 08020000 		.4byte	0x208
 2000 02cb 0D       		.uleb128 0xd
 2001 02cc E40A0000 		.4byte	.LASF43
 2002 02d0 08       		.byte	0x8
 2003 02d1 06       		.byte	0x6
 2004 02d2 69       		.byte	0x69
 2005 02d3 F4020000 		.4byte	0x2f4
 2006 02d7 0B       		.uleb128 0xb
 2007 02d8 8E080000 		.4byte	.LASF44
 2008 02dc 06       		.byte	0x6
 2009 02dd 6A       		.byte	0x6a
 2010 02de F4020000 		.4byte	0x2f4
 2011 02e2 02       		.byte	0x2
 2012 02e3 23       		.byte	0x23
 2013 02e4 00       		.uleb128 0
 2014 02e5 0B       		.uleb128 0xb
 2015 02e6 D2010000 		.4byte	.LASF45
 2016 02ea 06       		.byte	0x6
 2017 02eb 6B       		.byte	0x6b
 2018 02ec 45000000 		.4byte	0x45
 2019 02f0 02       		.byte	0x2
 2020 02f1 23       		.byte	0x23
 2021 02f2 04       		.uleb128 0x4
 2022 02f3 00       		.byte	0
 2023 02f4 0F       		.uleb128 0xf
 2024 02f5 04       		.byte	0x4
 2025 02f6 30000000 		.4byte	0x30
 2026 02fa 12       		.uleb128 0x12
 2027 02fb E7020000 		.4byte	.LASF46
 2028 02ff F0       		.byte	0xf0
 2029 0300 06       		.byte	0x6
 2030 0301 7B01     		.2byte	0x17b
 2031 0303 74040000 		.4byte	0x474
 2032 0307 13       		.uleb128 0x13
 2033 0308 5B050000 		.4byte	.LASF47
 2034 030c 06       		.byte	0x6
 2035 030d 7F01     		.2byte	0x17f
 2036 030f 45000000 		.4byte	0x45
 2037 0313 02       		.byte	0x2
 2038 0314 23       		.byte	0x23
 2039 0315 00       		.uleb128 0
 2040 0316 13       		.uleb128 0x13
 2041 0317 82030000 		.4byte	.LASF48
 2042 031b 06       		.byte	0x6
 2043 031c 8401     		.2byte	0x184
 2044 031e E3060000 		.4byte	0x6e3
 2045 0322 02       		.byte	0x2
 2046 0323 23       		.byte	0x23
 2047 0324 04       		.uleb128 0x4
 2048 0325 13       		.uleb128 0x13
 2049 0326 71080000 		.4byte	.LASF49
 2050 032a 06       		.byte	0x6
 2051 032b 8401     		.2byte	0x184
 2052 032d E3060000 		.4byte	0x6e3
 2053 0331 02       		.byte	0x2
 2054 0332 23       		.byte	0x23
ARM GAS  /tmp/ccCX0vdB.s 			page 73


 2055 0333 08       		.uleb128 0x8
 2056 0334 13       		.uleb128 0x13
 2057 0335 52070000 		.4byte	.LASF50
 2058 0339 06       		.byte	0x6
 2059 033a 8401     		.2byte	0x184
 2060 033c E3060000 		.4byte	0x6e3
 2061 0340 02       		.byte	0x2
 2062 0341 23       		.byte	0x23
 2063 0342 0C       		.uleb128 0xc
 2064 0343 13       		.uleb128 0x13
 2065 0344 B40A0000 		.4byte	.LASF51
 2066 0348 06       		.byte	0x6
 2067 0349 8601     		.2byte	0x186
 2068 034b 45000000 		.4byte	0x45
 2069 034f 02       		.byte	0x2
 2070 0350 23       		.byte	0x23
 2071 0351 10       		.uleb128 0x10
 2072 0352 13       		.uleb128 0x13
 2073 0353 E8050000 		.4byte	.LASF52
 2074 0357 06       		.byte	0x6
 2075 0358 8801     		.2byte	0x188
 2076 035a F3050000 		.4byte	0x5f3
 2077 035e 02       		.byte	0x2
 2078 035f 23       		.byte	0x23
 2079 0360 14       		.uleb128 0x14
 2080 0361 13       		.uleb128 0x13
 2081 0362 1E050000 		.4byte	.LASF53
 2082 0366 06       		.byte	0x6
 2083 0367 8A01     		.2byte	0x18a
 2084 0369 45000000 		.4byte	0x45
 2085 036d 02       		.byte	0x2
 2086 036e 23       		.byte	0x23
 2087 036f 18       		.uleb128 0x18
 2088 0370 13       		.uleb128 0x13
 2089 0371 3B020000 		.4byte	.LASF54
 2090 0375 06       		.byte	0x6
 2091 0376 8C01     		.2byte	0x18c
 2092 0378 45000000 		.4byte	0x45
 2093 037c 02       		.byte	0x2
 2094 037d 23       		.byte	0x23
 2095 037e 1C       		.uleb128 0x1c
 2096 037f 13       		.uleb128 0x13
 2097 0380 A5060000 		.4byte	.LASF55
 2098 0384 06       		.byte	0x6
 2099 0385 8D01     		.2byte	0x18d
 2100 0387 25060000 		.4byte	0x625
 2101 038b 02       		.byte	0x2
 2102 038c 23       		.byte	0x23
 2103 038d 20       		.uleb128 0x20
 2104 038e 14       		.uleb128 0x14
 2105 038f 5F6D7000 		.ascii	"_mp\000"
 2106 0393 06       		.byte	0x6
 2107 0394 8F01     		.2byte	0x18f
 2108 0396 56080000 		.4byte	0x856
 2109 039a 02       		.byte	0x2
 2110 039b 23       		.byte	0x23
 2111 039c 24       		.uleb128 0x24
ARM GAS  /tmp/ccCX0vdB.s 			page 74


 2112 039d 13       		.uleb128 0x13
 2113 039e C0050000 		.4byte	.LASF56
 2114 03a2 06       		.byte	0x6
 2115 03a3 9101     		.2byte	0x191
 2116 03a5 68080000 		.4byte	0x868
 2117 03a9 02       		.byte	0x2
 2118 03aa 23       		.byte	0x23
 2119 03ab 28       		.uleb128 0x28
 2120 03ac 13       		.uleb128 0x13
 2121 03ad 79060000 		.4byte	.LASF57
 2122 03b1 06       		.byte	0x6
 2123 03b2 9301     		.2byte	0x193
 2124 03b4 45000000 		.4byte	0x45
 2125 03b8 02       		.byte	0x2
 2126 03b9 23       		.byte	0x23
 2127 03ba 2C       		.uleb128 0x2c
 2128 03bb 13       		.uleb128 0x13
 2129 03bc 69000000 		.4byte	.LASF58
 2130 03c0 06       		.byte	0x6
 2131 03c1 9601     		.2byte	0x196
 2132 03c3 45000000 		.4byte	0x45
 2133 03c7 02       		.byte	0x2
 2134 03c8 23       		.byte	0x23
 2135 03c9 30       		.uleb128 0x30
 2136 03ca 13       		.uleb128 0x13
 2137 03cb 40040000 		.4byte	.LASF59
 2138 03cf 06       		.byte	0x6
 2139 03d0 9701     		.2byte	0x197
 2140 03d2 F3050000 		.4byte	0x5f3
 2141 03d6 02       		.byte	0x2
 2142 03d7 23       		.byte	0x23
 2143 03d8 34       		.uleb128 0x34
 2144 03d9 13       		.uleb128 0x13
 2145 03da 0C090000 		.4byte	.LASF60
 2146 03de 06       		.byte	0x6
 2147 03df 9901     		.2byte	0x199
 2148 03e1 6E080000 		.4byte	0x86e
 2149 03e5 02       		.byte	0x2
 2150 03e6 23       		.byte	0x23
 2151 03e7 38       		.uleb128 0x38
 2152 03e8 13       		.uleb128 0x13
 2153 03e9 DE010000 		.4byte	.LASF61
 2154 03ed 06       		.byte	0x6
 2155 03ee 9A01     		.2byte	0x19a
 2156 03f0 74080000 		.4byte	0x874
 2157 03f4 02       		.byte	0x2
 2158 03f5 23       		.byte	0x23
 2159 03f6 3C       		.uleb128 0x3c
 2160 03f7 13       		.uleb128 0x13
 2161 03f8 5C000000 		.4byte	.LASF62
 2162 03fc 06       		.byte	0x6
 2163 03fd 9B01     		.2byte	0x19b
 2164 03ff F3050000 		.4byte	0x5f3
 2165 0403 02       		.byte	0x2
 2166 0404 23       		.byte	0x23
 2167 0405 40       		.uleb128 0x40
 2168 0406 13       		.uleb128 0x13
ARM GAS  /tmp/ccCX0vdB.s 			page 75


 2169 0407 2E040000 		.4byte	.LASF63
 2170 040b 06       		.byte	0x6
 2171 040c 9E01     		.2byte	0x19e
 2172 040e 86080000 		.4byte	0x886
 2173 0412 02       		.byte	0x2
 2174 0413 23       		.byte	0x23
 2175 0414 44       		.uleb128 0x44
 2176 0415 13       		.uleb128 0x13
 2177 0416 8B070000 		.4byte	.LASF39
 2178 041a 06       		.byte	0x6
 2179 041b A101     		.2byte	0x1a1
 2180 041d A7020000 		.4byte	0x2a7
 2181 0421 02       		.byte	0x2
 2182 0422 23       		.byte	0x23
 2183 0423 48       		.uleb128 0x48
 2184 0424 13       		.uleb128 0x13
 2185 0425 DF050000 		.4byte	.LASF64
 2186 0429 06       		.byte	0x6
 2187 042a A201     		.2byte	0x1a2
 2188 042c 61020000 		.4byte	0x261
 2189 0430 02       		.byte	0x2
 2190 0431 23       		.byte	0x23
 2191 0432 4C       		.uleb128 0x4c
 2192 0433 13       		.uleb128 0x13
 2193 0434 4A060000 		.4byte	.LASF65
 2194 0438 06       		.byte	0x6
 2195 0439 A401     		.2byte	0x1a4
 2196 043b A2060000 		.4byte	0x6a2
 2197 043f 03       		.byte	0x3
 2198 0440 23       		.byte	0x23
 2199 0441 D801     		.uleb128 0xd8
 2200 0443 13       		.uleb128 0x13
 2201 0444 32000000 		.4byte	.LASF66
 2202 0448 06       		.byte	0x6
 2203 0449 A501     		.2byte	0x1a5
 2204 044b E3060000 		.4byte	0x6e3
 2205 044f 03       		.byte	0x3
 2206 0450 23       		.byte	0x23
 2207 0451 E401     		.uleb128 0xe4
 2208 0453 13       		.uleb128 0x13
 2209 0454 190B0000 		.4byte	.LASF67
 2210 0458 06       		.byte	0x6
 2211 0459 A601     		.2byte	0x1a6
 2212 045b 92080000 		.4byte	0x892
 2213 045f 03       		.byte	0x3
 2214 0460 23       		.byte	0x23
 2215 0461 E801     		.uleb128 0xe8
 2216 0463 13       		.uleb128 0x13
 2217 0464 6A050000 		.4byte	.LASF68
 2218 0468 06       		.byte	0x6
 2219 0469 A701     		.2byte	0x1a7
 2220 046b F3050000 		.4byte	0x5f3
 2221 046f 03       		.byte	0x3
 2222 0470 23       		.byte	0x23
 2223 0471 EC01     		.uleb128 0xec
 2224 0473 00       		.byte	0
 2225 0474 0F       		.uleb128 0xf
ARM GAS  /tmp/ccCX0vdB.s 			page 76


 2226 0475 04       		.byte	0x4
 2227 0476 FA020000 		.4byte	0x2fa
 2228 047a 0D       		.uleb128 0xd
 2229 047b 16050000 		.4byte	.LASF69
 2230 047f 68       		.byte	0x68
 2231 0480 06       		.byte	0x6
 2232 0481 B3       		.byte	0xb3
 2233 0482 D4050000 		.4byte	0x5d4
 2234 0486 0E       		.uleb128 0xe
 2235 0487 5F7000   		.ascii	"_p\000"
 2236 048a 06       		.byte	0x6
 2237 048b B4       		.byte	0xb4
 2238 048c F4020000 		.4byte	0x2f4
 2239 0490 02       		.byte	0x2
 2240 0491 23       		.byte	0x23
 2241 0492 00       		.uleb128 0
 2242 0493 0E       		.uleb128 0xe
 2243 0494 5F7200   		.ascii	"_r\000"
 2244 0497 06       		.byte	0x6
 2245 0498 B5       		.byte	0xb5
 2246 0499 45000000 		.4byte	0x45
 2247 049d 02       		.byte	0x2
 2248 049e 23       		.byte	0x23
 2249 049f 04       		.uleb128 0x4
 2250 04a0 0E       		.uleb128 0xe
 2251 04a1 5F7700   		.ascii	"_w\000"
 2252 04a4 06       		.byte	0x6
 2253 04a5 B6       		.byte	0xb6
 2254 04a6 45000000 		.4byte	0x45
 2255 04aa 02       		.byte	0x2
 2256 04ab 23       		.byte	0x23
 2257 04ac 08       		.uleb128 0x8
 2258 04ad 0B       		.uleb128 0xb
 2259 04ae 7C070000 		.4byte	.LASF70
 2260 04b2 06       		.byte	0x6
 2261 04b3 B7       		.byte	0xb7
 2262 04b4 37000000 		.4byte	0x37
 2263 04b8 02       		.byte	0x2
 2264 04b9 23       		.byte	0x23
 2265 04ba 0C       		.uleb128 0xc
 2266 04bb 0B       		.uleb128 0xb
 2267 04bc 56010000 		.4byte	.LASF71
 2268 04c0 06       		.byte	0x6
 2269 04c1 B8       		.byte	0xb8
 2270 04c2 37000000 		.4byte	0x37
 2271 04c6 02       		.byte	0x2
 2272 04c7 23       		.byte	0x23
 2273 04c8 0E       		.uleb128 0xe
 2274 04c9 0E       		.uleb128 0xe
 2275 04ca 5F626600 		.ascii	"_bf\000"
 2276 04ce 06       		.byte	0x6
 2277 04cf B9       		.byte	0xb9
 2278 04d0 CB020000 		.4byte	0x2cb
 2279 04d4 02       		.byte	0x2
 2280 04d5 23       		.byte	0x23
 2281 04d6 10       		.uleb128 0x10
 2282 04d7 0B       		.uleb128 0xb
ARM GAS  /tmp/ccCX0vdB.s 			page 77


 2283 04d8 AB0A0000 		.4byte	.LASF72
 2284 04dc 06       		.byte	0x6
 2285 04dd BA       		.byte	0xba
 2286 04de 45000000 		.4byte	0x45
 2287 04e2 02       		.byte	0x2
 2288 04e3 23       		.byte	0x23
 2289 04e4 18       		.uleb128 0x18
 2290 04e5 0B       		.uleb128 0xb
 2291 04e6 3F090000 		.4byte	.LASF73
 2292 04ea 06       		.byte	0x6
 2293 04eb BD       		.byte	0xbd
 2294 04ec 74040000 		.4byte	0x474
 2295 04f0 02       		.byte	0x2
 2296 04f1 23       		.byte	0x23
 2297 04f2 1C       		.uleb128 0x1c
 2298 04f3 0B       		.uleb128 0xb
 2299 04f4 0F040000 		.4byte	.LASF74
 2300 04f8 06       		.byte	0x6
 2301 04f9 C1       		.byte	0xc1
 2302 04fa F4000000 		.4byte	0xf4
 2303 04fe 02       		.byte	0x2
 2304 04ff 23       		.byte	0x23
 2305 0500 20       		.uleb128 0x20
 2306 0501 0B       		.uleb128 0xb
 2307 0502 3C000000 		.4byte	.LASF75
 2308 0506 06       		.byte	0x6
 2309 0507 C3       		.byte	0xc3
 2310 0508 00060000 		.4byte	0x600
 2311 050c 02       		.byte	0x2
 2312 050d 23       		.byte	0x23
 2313 050e 24       		.uleb128 0x24
 2314 050f 0B       		.uleb128 0xb
 2315 0510 55000000 		.4byte	.LASF76
 2316 0514 06       		.byte	0x6
 2317 0515 C5       		.byte	0xc5
 2318 0516 30060000 		.4byte	0x630
 2319 051a 02       		.byte	0x2
 2320 051b 23       		.byte	0x23
 2321 051c 28       		.uleb128 0x28
 2322 051d 0B       		.uleb128 0xb
 2323 051e BC070000 		.4byte	.LASF77
 2324 0522 06       		.byte	0x6
 2325 0523 C7       		.byte	0xc7
 2326 0524 55060000 		.4byte	0x655
 2327 0528 02       		.byte	0x2
 2328 0529 23       		.byte	0x23
 2329 052a 2C       		.uleb128 0x2c
 2330 052b 0B       		.uleb128 0xb
 2331 052c 4A030000 		.4byte	.LASF78
 2332 0530 06       		.byte	0x6
 2333 0531 C8       		.byte	0xc8
 2334 0532 70060000 		.4byte	0x670
 2335 0536 02       		.byte	0x2
 2336 0537 23       		.byte	0x23
 2337 0538 30       		.uleb128 0x30
 2338 0539 0E       		.uleb128 0xe
 2339 053a 5F756200 		.ascii	"_ub\000"
ARM GAS  /tmp/ccCX0vdB.s 			page 78


 2340 053e 06       		.byte	0x6
 2341 053f CB       		.byte	0xcb
 2342 0540 CB020000 		.4byte	0x2cb
 2343 0544 02       		.byte	0x2
 2344 0545 23       		.byte	0x23
 2345 0546 34       		.uleb128 0x34
 2346 0547 0E       		.uleb128 0xe
 2347 0548 5F757000 		.ascii	"_up\000"
 2348 054c 06       		.byte	0x6
 2349 054d CC       		.byte	0xcc
 2350 054e F4020000 		.4byte	0x2f4
 2351 0552 02       		.byte	0x2
 2352 0553 23       		.byte	0x23
 2353 0554 3C       		.uleb128 0x3c
 2354 0555 0E       		.uleb128 0xe
 2355 0556 5F757200 		.ascii	"_ur\000"
 2356 055a 06       		.byte	0x6
 2357 055b CD       		.byte	0xcd
 2358 055c 45000000 		.4byte	0x45
 2359 0560 02       		.byte	0x2
 2360 0561 23       		.byte	0x23
 2361 0562 40       		.uleb128 0x40
 2362 0563 0B       		.uleb128 0xb
 2363 0564 41070000 		.4byte	.LASF79
 2364 0568 06       		.byte	0x6
 2365 0569 D0       		.byte	0xd0
 2366 056a 76060000 		.4byte	0x676
 2367 056e 02       		.byte	0x2
 2368 056f 23       		.byte	0x23
 2369 0570 44       		.uleb128 0x44
 2370 0571 0B       		.uleb128 0xb
 2371 0572 A7000000 		.4byte	.LASF80
 2372 0576 06       		.byte	0x6
 2373 0577 D1       		.byte	0xd1
 2374 0578 86060000 		.4byte	0x686
 2375 057c 02       		.byte	0x2
 2376 057d 23       		.byte	0x23
 2377 057e 47       		.uleb128 0x47
 2378 057f 0E       		.uleb128 0xe
 2379 0580 5F6C6200 		.ascii	"_lb\000"
 2380 0584 06       		.byte	0x6
 2381 0585 D4       		.byte	0xd4
 2382 0586 CB020000 		.4byte	0x2cb
 2383 058a 02       		.byte	0x2
 2384 058b 23       		.byte	0x23
 2385 058c 48       		.uleb128 0x48
 2386 058d 0B       		.uleb128 0xb
 2387 058e 85080000 		.4byte	.LASF81
 2388 0592 06       		.byte	0x6
 2389 0593 D7       		.byte	0xd7
 2390 0594 45000000 		.4byte	0x45
 2391 0598 02       		.byte	0x2
 2392 0599 23       		.byte	0x23
 2393 059a 50       		.uleb128 0x50
 2394 059b 0B       		.uleb128 0xb
 2395 059c 38040000 		.4byte	.LASF82
 2396 05a0 06       		.byte	0x6
ARM GAS  /tmp/ccCX0vdB.s 			page 79


 2397 05a1 D8       		.byte	0xd8
 2398 05a2 45000000 		.4byte	0x45
 2399 05a6 02       		.byte	0x2
 2400 05a7 23       		.byte	0x23
 2401 05a8 54       		.uleb128 0x54
 2402 05a9 0B       		.uleb128 0xb
 2403 05aa D3000000 		.4byte	.LASF83
 2404 05ae 06       		.byte	0x6
 2405 05af DF       		.byte	0xdf
 2406 05b0 E9000000 		.4byte	0xe9
 2407 05b4 02       		.byte	0x2
 2408 05b5 23       		.byte	0x23
 2409 05b6 58       		.uleb128 0x58
 2410 05b7 0B       		.uleb128 0xb
 2411 05b8 68070000 		.4byte	.LASF84
 2412 05bc 06       		.byte	0x6
 2413 05bd E1       		.byte	0xe1
 2414 05be DE000000 		.4byte	0xde
 2415 05c2 02       		.byte	0x2
 2416 05c3 23       		.byte	0x23
 2417 05c4 5C       		.uleb128 0x5c
 2418 05c5 0B       		.uleb128 0xb
 2419 05c6 29050000 		.4byte	.LASF85
 2420 05ca 06       		.byte	0x6
 2421 05cb E2       		.byte	0xe2
 2422 05cc 45000000 		.4byte	0x45
 2423 05d0 02       		.byte	0x2
 2424 05d1 23       		.byte	0x23
 2425 05d2 64       		.uleb128 0x64
 2426 05d3 00       		.byte	0
 2427 05d4 15       		.uleb128 0x15
 2428 05d5 01       		.byte	0x1
 2429 05d6 45000000 		.4byte	0x45
 2430 05da F3050000 		.4byte	0x5f3
 2431 05de 16       		.uleb128 0x16
 2432 05df 74040000 		.4byte	0x474
 2433 05e3 16       		.uleb128 0x16
 2434 05e4 F4000000 		.4byte	0xf4
 2435 05e8 16       		.uleb128 0x16
 2436 05e9 F3050000 		.4byte	0x5f3
 2437 05ed 16       		.uleb128 0x16
 2438 05ee 45000000 		.4byte	0x45
 2439 05f2 00       		.byte	0
 2440 05f3 0F       		.uleb128 0xf
 2441 05f4 04       		.byte	0x4
 2442 05f5 F9050000 		.4byte	0x5f9
 2443 05f9 02       		.uleb128 0x2
 2444 05fa 01       		.byte	0x1
 2445 05fb 08       		.byte	0x8
 2446 05fc 29030000 		.4byte	.LASF86
 2447 0600 0F       		.uleb128 0xf
 2448 0601 04       		.byte	0x4
 2449 0602 D4050000 		.4byte	0x5d4
 2450 0606 15       		.uleb128 0x15
 2451 0607 01       		.byte	0x1
 2452 0608 45000000 		.4byte	0x45
 2453 060c 25060000 		.4byte	0x625
ARM GAS  /tmp/ccCX0vdB.s 			page 80


 2454 0610 16       		.uleb128 0x16
 2455 0611 74040000 		.4byte	0x474
 2456 0615 16       		.uleb128 0x16
 2457 0616 F4000000 		.4byte	0xf4
 2458 061a 16       		.uleb128 0x16
 2459 061b 25060000 		.4byte	0x625
 2460 061f 16       		.uleb128 0x16
 2461 0620 45000000 		.4byte	0x45
 2462 0624 00       		.byte	0
 2463 0625 0F       		.uleb128 0xf
 2464 0626 04       		.byte	0x4
 2465 0627 2B060000 		.4byte	0x62b
 2466 062b 17       		.uleb128 0x17
 2467 062c F9050000 		.4byte	0x5f9
 2468 0630 0F       		.uleb128 0xf
 2469 0631 04       		.byte	0x4
 2470 0632 06060000 		.4byte	0x606
 2471 0636 15       		.uleb128 0x15
 2472 0637 01       		.byte	0x1
 2473 0638 73000000 		.4byte	0x73
 2474 063c 55060000 		.4byte	0x655
 2475 0640 16       		.uleb128 0x16
 2476 0641 74040000 		.4byte	0x474
 2477 0645 16       		.uleb128 0x16
 2478 0646 F4000000 		.4byte	0xf4
 2479 064a 16       		.uleb128 0x16
 2480 064b 73000000 		.4byte	0x73
 2481 064f 16       		.uleb128 0x16
 2482 0650 45000000 		.4byte	0x45
 2483 0654 00       		.byte	0
 2484 0655 0F       		.uleb128 0xf
 2485 0656 04       		.byte	0x4
 2486 0657 36060000 		.4byte	0x636
 2487 065b 15       		.uleb128 0x15
 2488 065c 01       		.byte	0x1
 2489 065d 45000000 		.4byte	0x45
 2490 0661 70060000 		.4byte	0x670
 2491 0665 16       		.uleb128 0x16
 2492 0666 74040000 		.4byte	0x474
 2493 066a 16       		.uleb128 0x16
 2494 066b F4000000 		.4byte	0xf4
 2495 066f 00       		.byte	0
 2496 0670 0F       		.uleb128 0xf
 2497 0671 04       		.byte	0x4
 2498 0672 5B060000 		.4byte	0x65b
 2499 0676 08       		.uleb128 0x8
 2500 0677 30000000 		.4byte	0x30
 2501 067b 86060000 		.4byte	0x686
 2502 067f 09       		.uleb128 0x9
 2503 0680 4C000000 		.4byte	0x4c
 2504 0684 02       		.byte	0x2
 2505 0685 00       		.byte	0
 2506 0686 08       		.uleb128 0x8
 2507 0687 30000000 		.4byte	0x30
 2508 068b 96060000 		.4byte	0x696
 2509 068f 09       		.uleb128 0x9
 2510 0690 4C000000 		.4byte	0x4c
ARM GAS  /tmp/ccCX0vdB.s 			page 81


 2511 0694 00       		.byte	0
 2512 0695 00       		.byte	0
 2513 0696 05       		.uleb128 0x5
 2514 0697 EF080000 		.4byte	.LASF87
 2515 069b 06       		.byte	0x6
 2516 069c 1E01     		.2byte	0x11e
 2517 069e 7A040000 		.4byte	0x47a
 2518 06a2 12       		.uleb128 0x12
 2519 06a3 C5060000 		.4byte	.LASF88
 2520 06a7 0C       		.byte	0xc
 2521 06a8 06       		.byte	0x6
 2522 06a9 2201     		.2byte	0x122
 2523 06ab DD060000 		.4byte	0x6dd
 2524 06af 13       		.uleb128 0x13
 2525 06b0 39090000 		.4byte	.LASF19
 2526 06b4 06       		.byte	0x6
 2527 06b5 2401     		.2byte	0x124
 2528 06b7 DD060000 		.4byte	0x6dd
 2529 06bb 02       		.byte	0x2
 2530 06bc 23       		.byte	0x23
 2531 06bd 00       		.uleb128 0
 2532 06be 13       		.uleb128 0x13
 2533 06bf 39060000 		.4byte	.LASF89
 2534 06c3 06       		.byte	0x6
 2535 06c4 2501     		.2byte	0x125
 2536 06c6 45000000 		.4byte	0x45
 2537 06ca 02       		.byte	0x2
 2538 06cb 23       		.byte	0x23
 2539 06cc 04       		.uleb128 0x4
 2540 06cd 13       		.uleb128 0x13
 2541 06ce BF060000 		.4byte	.LASF90
 2542 06d2 06       		.byte	0x6
 2543 06d3 2601     		.2byte	0x126
 2544 06d5 E3060000 		.4byte	0x6e3
 2545 06d9 02       		.byte	0x2
 2546 06da 23       		.byte	0x23
 2547 06db 08       		.uleb128 0x8
 2548 06dc 00       		.byte	0
 2549 06dd 0F       		.uleb128 0xf
 2550 06de 04       		.byte	0x4
 2551 06df A2060000 		.4byte	0x6a2
 2552 06e3 0F       		.uleb128 0xf
 2553 06e4 04       		.byte	0x4
 2554 06e5 96060000 		.4byte	0x696
 2555 06e9 12       		.uleb128 0x12
 2556 06ea 56080000 		.4byte	.LASF91
 2557 06ee 18       		.byte	0x18
 2558 06ef 06       		.byte	0x6
 2559 06f0 3E01     		.2byte	0x13e
 2560 06f2 33070000 		.4byte	0x733
 2561 06f6 13       		.uleb128 0x13
 2562 06f7 B6070000 		.4byte	.LASF92
 2563 06fb 06       		.byte	0x6
 2564 06fc 3F01     		.2byte	0x13f
 2565 06fe 33070000 		.4byte	0x733
 2566 0702 02       		.byte	0x2
 2567 0703 23       		.byte	0x23
ARM GAS  /tmp/ccCX0vdB.s 			page 82


 2568 0704 00       		.uleb128 0
 2569 0705 13       		.uleb128 0x13
 2570 0706 FC000000 		.4byte	.LASF93
 2571 070a 06       		.byte	0x6
 2572 070b 4001     		.2byte	0x140
 2573 070d 33070000 		.4byte	0x733
 2574 0711 02       		.byte	0x2
 2575 0712 23       		.byte	0x23
 2576 0713 06       		.uleb128 0x6
 2577 0714 13       		.uleb128 0x13
 2578 0715 7F0B0000 		.4byte	.LASF94
 2579 0719 06       		.byte	0x6
 2580 071a 4101     		.2byte	0x141
 2581 071c 3E000000 		.4byte	0x3e
 2582 0720 02       		.byte	0x2
 2583 0721 23       		.byte	0x23
 2584 0722 0C       		.uleb128 0xc
 2585 0723 13       		.uleb128 0x13
 2586 0724 71070000 		.4byte	.LASF95
 2587 0728 06       		.byte	0x6
 2588 0729 4401     		.2byte	0x144
 2589 072b 5A000000 		.4byte	0x5a
 2590 072f 02       		.byte	0x2
 2591 0730 23       		.byte	0x23
 2592 0731 10       		.uleb128 0x10
 2593 0732 00       		.byte	0
 2594 0733 08       		.uleb128 0x8
 2595 0734 3E000000 		.4byte	0x3e
 2596 0738 43070000 		.4byte	0x743
 2597 073c 09       		.uleb128 0x9
 2598 073d 4C000000 		.4byte	0x4c
 2599 0741 02       		.byte	0x2
 2600 0742 00       		.byte	0
 2601 0743 12       		.uleb128 0x12
 2602 0744 0B0B0000 		.4byte	.LASF96
 2603 0748 10       		.byte	0x10
 2604 0749 06       		.byte	0x6
 2605 074a 5F01     		.2byte	0x15f
 2606 074c 8D070000 		.4byte	0x78d
 2607 0750 13       		.uleb128 0x13
 2608 0751 560B0000 		.4byte	.LASF97
 2609 0755 06       		.byte	0x6
 2610 0756 6201     		.2byte	0x162
 2611 0758 67010000 		.4byte	0x167
 2612 075c 02       		.byte	0x2
 2613 075d 23       		.byte	0x23
 2614 075e 00       		.uleb128 0
 2615 075f 13       		.uleb128 0x13
 2616 0760 BF010000 		.4byte	.LASF98
 2617 0764 06       		.byte	0x6
 2618 0765 6301     		.2byte	0x163
 2619 0767 45000000 		.4byte	0x45
 2620 076b 02       		.byte	0x2
 2621 076c 23       		.byte	0x23
 2622 076d 04       		.uleb128 0x4
 2623 076e 13       		.uleb128 0x13
 2624 076f CD040000 		.4byte	.LASF99
ARM GAS  /tmp/ccCX0vdB.s 			page 83


 2625 0773 06       		.byte	0x6
 2626 0774 6401     		.2byte	0x164
 2627 0776 67010000 		.4byte	0x167
 2628 077a 02       		.byte	0x2
 2629 077b 23       		.byte	0x23
 2630 077c 08       		.uleb128 0x8
 2631 077d 13       		.uleb128 0x13
 2632 077e B5060000 		.4byte	.LASF100
 2633 0782 06       		.byte	0x6
 2634 0783 6501     		.2byte	0x165
 2635 0785 8D070000 		.4byte	0x78d
 2636 0789 02       		.byte	0x2
 2637 078a 23       		.byte	0x23
 2638 078b 0C       		.uleb128 0xc
 2639 078c 00       		.byte	0
 2640 078d 0F       		.uleb128 0xf
 2641 078e 04       		.byte	0x4
 2642 078f 67010000 		.4byte	0x167
 2643 0793 12       		.uleb128 0x12
 2644 0794 22020000 		.4byte	.LASF101
 2645 0798 50       		.byte	0x50
 2646 0799 06       		.byte	0x6
 2647 079a 6901     		.2byte	0x169
 2648 079c 46080000 		.4byte	0x846
 2649 07a0 13       		.uleb128 0x13
 2650 07a1 A3080000 		.4byte	.LASF102
 2651 07a5 06       		.byte	0x6
 2652 07a6 6C01     		.2byte	0x16c
 2653 07a8 F3050000 		.4byte	0x5f3
 2654 07ac 02       		.byte	0x2
 2655 07ad 23       		.byte	0x23
 2656 07ae 00       		.uleb128 0
 2657 07af 13       		.uleb128 0x13
 2658 07b0 350A0000 		.4byte	.LASF103
 2659 07b4 06       		.byte	0x6
 2660 07b5 6D01     		.2byte	0x16d
 2661 07b7 DE000000 		.4byte	0xde
 2662 07bb 02       		.byte	0x2
 2663 07bc 23       		.byte	0x23
 2664 07bd 04       		.uleb128 0x4
 2665 07be 13       		.uleb128 0x13
 2666 07bf 5A070000 		.4byte	.LASF104
 2667 07c3 06       		.byte	0x6
 2668 07c4 6E01     		.2byte	0x16e
 2669 07c6 DE000000 		.4byte	0xde
 2670 07ca 02       		.byte	0x2
 2671 07cb 23       		.byte	0x23
 2672 07cc 0C       		.uleb128 0xc
 2673 07cd 13       		.uleb128 0x13
 2674 07ce FB070000 		.4byte	.LASF105
 2675 07d2 06       		.byte	0x6
 2676 07d3 6F01     		.2byte	0x16f
 2677 07d5 DE000000 		.4byte	0xde
 2678 07d9 02       		.byte	0x2
 2679 07da 23       		.byte	0x23
 2680 07db 14       		.uleb128 0x14
 2681 07dc 13       		.uleb128 0x13
ARM GAS  /tmp/ccCX0vdB.s 			page 84


 2682 07dd B6000000 		.4byte	.LASF106
 2683 07e1 06       		.byte	0x6
 2684 07e2 7001     		.2byte	0x170
 2685 07e4 46080000 		.4byte	0x846
 2686 07e8 02       		.byte	0x2
 2687 07e9 23       		.byte	0x23
 2688 07ea 1C       		.uleb128 0x1c
 2689 07eb 13       		.uleb128 0x13
 2690 07ec 1C0C0000 		.4byte	.LASF107
 2691 07f0 06       		.byte	0x6
 2692 07f1 7101     		.2byte	0x171
 2693 07f3 45000000 		.4byte	0x45
 2694 07f7 02       		.byte	0x2
 2695 07f8 23       		.byte	0x23
 2696 07f9 24       		.uleb128 0x24
 2697 07fa 13       		.uleb128 0x13
 2698 07fb 9C010000 		.4byte	.LASF108
 2699 07ff 06       		.byte	0x6
 2700 0800 7201     		.2byte	0x172
 2701 0802 DE000000 		.4byte	0xde
 2702 0806 02       		.byte	0x2
 2703 0807 23       		.byte	0x23
 2704 0808 28       		.uleb128 0x28
 2705 0809 13       		.uleb128 0x13
 2706 080a B9080000 		.4byte	.LASF109
 2707 080e 06       		.byte	0x6
 2708 080f 7301     		.2byte	0x173
 2709 0811 DE000000 		.4byte	0xde
 2710 0815 02       		.byte	0x2
 2711 0816 23       		.byte	0x23
 2712 0817 30       		.uleb128 0x30
 2713 0818 13       		.uleb128 0x13
 2714 0819 B60B0000 		.4byte	.LASF110
 2715 081d 06       		.byte	0x6
 2716 081e 7401     		.2byte	0x174
 2717 0820 DE000000 		.4byte	0xde
 2718 0824 02       		.byte	0x2
 2719 0825 23       		.byte	0x23
 2720 0826 38       		.uleb128 0x38
 2721 0827 13       		.uleb128 0x13
 2722 0828 20070000 		.4byte	.LASF111
 2723 082c 06       		.byte	0x6
 2724 082d 7501     		.2byte	0x175
 2725 082f DE000000 		.4byte	0xde
 2726 0833 02       		.byte	0x2
 2727 0834 23       		.byte	0x23
 2728 0835 40       		.uleb128 0x40
 2729 0836 13       		.uleb128 0x13
 2730 0837 96000000 		.4byte	.LASF112
 2731 083b 06       		.byte	0x6
 2732 083c 7601     		.2byte	0x176
 2733 083e DE000000 		.4byte	0xde
 2734 0842 02       		.byte	0x2
 2735 0843 23       		.byte	0x23
 2736 0844 48       		.uleb128 0x48
 2737 0845 00       		.byte	0
 2738 0846 08       		.uleb128 0x8
ARM GAS  /tmp/ccCX0vdB.s 			page 85


 2739 0847 F9050000 		.4byte	0x5f9
 2740 084b 56080000 		.4byte	0x856
 2741 084f 09       		.uleb128 0x9
 2742 0850 4C000000 		.4byte	0x4c
 2743 0854 07       		.byte	0x7
 2744 0855 00       		.byte	0
 2745 0856 0F       		.uleb128 0xf
 2746 0857 04       		.byte	0x4
 2747 0858 43070000 		.4byte	0x743
 2748 085c 18       		.uleb128 0x18
 2749 085d 01       		.byte	0x1
 2750 085e 68080000 		.4byte	0x868
 2751 0862 16       		.uleb128 0x16
 2752 0863 74040000 		.4byte	0x474
 2753 0867 00       		.byte	0
 2754 0868 0F       		.uleb128 0xf
 2755 0869 04       		.byte	0x4
 2756 086a 5C080000 		.4byte	0x85c
 2757 086e 0F       		.uleb128 0xf
 2758 086f 04       		.byte	0x4
 2759 0870 E9060000 		.4byte	0x6e9
 2760 0874 0F       		.uleb128 0xf
 2761 0875 04       		.byte	0x4
 2762 0876 7D010000 		.4byte	0x17d
 2763 087a 18       		.uleb128 0x18
 2764 087b 01       		.byte	0x1
 2765 087c 86080000 		.4byte	0x886
 2766 0880 16       		.uleb128 0x16
 2767 0881 45000000 		.4byte	0x45
 2768 0885 00       		.byte	0
 2769 0886 0F       		.uleb128 0xf
 2770 0887 04       		.byte	0x4
 2771 0888 8C080000 		.4byte	0x88c
 2772 088c 0F       		.uleb128 0xf
 2773 088d 04       		.byte	0x4
 2774 088e 7A080000 		.4byte	0x87a
 2775 0892 0F       		.uleb128 0xf
 2776 0893 04       		.byte	0x4
 2777 0894 93070000 		.4byte	0x793
 2778 0898 04       		.uleb128 0x4
 2779 0899 5E020000 		.4byte	.LASF113
 2780 089d 07       		.byte	0x7
 2781 089e 2A       		.byte	0x2a
 2782 089f 30000000 		.4byte	0x30
 2783 08a3 04       		.uleb128 0x4
 2784 08a4 5A0A0000 		.4byte	.LASF114
 2785 08a8 07       		.byte	0x7
 2786 08a9 35       		.byte	0x35
 2787 08aa 37000000 		.4byte	0x37
 2788 08ae 04       		.uleb128 0x4
 2789 08af 38080000 		.4byte	.LASF115
 2790 08b3 07       		.byte	0x7
 2791 08b4 36       		.byte	0x36
 2792 08b5 3E000000 		.4byte	0x3e
 2793 08b9 04       		.uleb128 0x4
 2794 08ba 430B0000 		.4byte	.LASF116
 2795 08be 07       		.byte	0x7
ARM GAS  /tmp/ccCX0vdB.s 			page 86


 2796 08bf 50       		.byte	0x50
 2797 08c0 01010000 		.4byte	0x101
 2798 08c4 17       		.uleb128 0x17
 2799 08c5 C9080000 		.4byte	0x8c9
 2800 08c9 19       		.uleb128 0x19
 2801 08ca B9080000 		.4byte	0x8b9
 2802 08ce 19       		.uleb128 0x19
 2803 08cf B9080000 		.4byte	0x8b9
 2804 08d3 1A       		.uleb128 0x1a
 2805 08d4 FA010000 		.4byte	.LASF319
 2806 08d8 01       		.byte	0x1
 2807 08d9 08       		.byte	0x8
 2808 08da 49       		.byte	0x49
 2809 08db D0090000 		.4byte	0x9d0
 2810 08df 1B       		.uleb128 0x1b
 2811 08e0 A0040000 		.4byte	.LASF117
 2812 08e4 72       		.sleb128 -14
 2813 08e5 1B       		.uleb128 0x1b
 2814 08e6 F9040000 		.4byte	.LASF118
 2815 08ea 74       		.sleb128 -12
 2816 08eb 1B       		.uleb128 0x1b
 2817 08ec CA050000 		.4byte	.LASF119
 2818 08f0 75       		.sleb128 -11
 2819 08f1 1B       		.uleb128 0x1b
 2820 08f2 07030000 		.4byte	.LASF120
 2821 08f6 76       		.sleb128 -10
 2822 08f7 1B       		.uleb128 0x1b
 2823 08f8 6D060000 		.4byte	.LASF121
 2824 08fc 7B       		.sleb128 -5
 2825 08fd 1B       		.uleb128 0x1b
 2826 08fe CB090000 		.4byte	.LASF122
 2827 0902 7C       		.sleb128 -4
 2828 0903 1B       		.uleb128 0x1b
 2829 0904 AA0B0000 		.4byte	.LASF123
 2830 0908 7E       		.sleb128 -2
 2831 0909 1B       		.uleb128 0x1b
 2832 090a 2E020000 		.4byte	.LASF124
 2833 090e 7F       		.sleb128 -1
 2834 090f 1B       		.uleb128 0x1b
 2835 0910 48040000 		.4byte	.LASF125
 2836 0914 00       		.sleb128 0
 2837 0915 1B       		.uleb128 0x1b
 2838 0916 0A010000 		.4byte	.LASF126
 2839 091a 01       		.sleb128 1
 2840 091b 1B       		.uleb128 0x1b
 2841 091c 290C0000 		.4byte	.LASF127
 2842 0920 02       		.sleb128 2
 2843 0921 1B       		.uleb128 0x1b
 2844 0922 84040000 		.4byte	.LASF128
 2845 0926 03       		.sleb128 3
 2846 0927 1B       		.uleb128 0x1b
 2847 0928 94050000 		.4byte	.LASF129
 2848 092c 04       		.sleb128 4
 2849 092d 1B       		.uleb128 0x1b
 2850 092e 1C040000 		.4byte	.LASF130
 2851 0932 05       		.sleb128 5
 2852 0933 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccCX0vdB.s 			page 87


 2853 0934 25040000 		.4byte	.LASF131
 2854 0938 06       		.sleb128 6
 2855 0939 1B       		.uleb128 0x1b
 2856 093a 01090000 		.4byte	.LASF132
 2857 093e 08       		.sleb128 8
 2858 093f 1B       		.uleb128 0x1b
 2859 0940 C2070000 		.4byte	.LASF133
 2860 0944 09       		.sleb128 9
 2861 0945 1B       		.uleb128 0x1b
 2862 0946 56030000 		.4byte	.LASF134
 2863 094a 0A       		.sleb128 10
 2864 094b 1B       		.uleb128 0x1b
 2865 094c 810A0000 		.4byte	.LASF135
 2866 0950 0B       		.sleb128 11
 2867 0951 1B       		.uleb128 0x1b
 2868 0952 AD090000 		.4byte	.LASF136
 2869 0956 0C       		.sleb128 12
 2870 0957 1B       		.uleb128 0x1b
 2871 0958 62040000 		.4byte	.LASF137
 2872 095c 0D       		.sleb128 13
 2873 095d 1B       		.uleb128 0x1b
 2874 095e 5A090000 		.4byte	.LASF138
 2875 0962 0E       		.sleb128 14
 2876 0963 1B       		.uleb128 0x1b
 2877 0964 79080000 		.4byte	.LASF139
 2878 0968 0F       		.sleb128 15
 2879 0969 1B       		.uleb128 0x1b
 2880 096a 66080000 		.4byte	.LASF140
 2881 096e 12       		.sleb128 18
 2882 096f 1B       		.uleb128 0x1b
 2883 0970 0F070000 		.4byte	.LASF141
 2884 0974 13       		.sleb128 19
 2885 0975 1B       		.uleb128 0x1b
 2886 0976 40060000 		.4byte	.LASF142
 2887 097a 14       		.sleb128 20
 2888 097b 1B       		.uleb128 0x1b
 2889 097c 4C090000 		.4byte	.LASF143
 2890 0980 15       		.sleb128 21
 2891 0981 1B       		.uleb128 0x1b
 2892 0982 300B0000 		.4byte	.LASF144
 2893 0986 16       		.sleb128 22
 2894 0987 1B       		.uleb128 0x1b
 2895 0988 9D090000 		.4byte	.LASF145
 2896 098c 17       		.sleb128 23
 2897 098d 1B       		.uleb128 0x1b
 2898 098e 59040000 		.4byte	.LASF146
 2899 0992 18       		.sleb128 24
 2900 0993 1B       		.uleb128 0x1b
 2901 0994 18000000 		.4byte	.LASF147
 2902 0998 19       		.sleb128 25
 2903 0999 1B       		.uleb128 0x1b
 2904 099a CE0B0000 		.4byte	.LASF148
 2905 099e 1A       		.sleb128 26
 2906 099f 1B       		.uleb128 0x1b
 2907 09a0 06070000 		.4byte	.LASF149
 2908 09a4 1B       		.sleb128 27
 2909 09a5 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccCX0vdB.s 			page 88


 2910 09a6 FF010000 		.4byte	.LASF150
 2911 09aa 1C       		.sleb128 28
 2912 09ab 1B       		.uleb128 0x1b
 2913 09ac B0080000 		.4byte	.LASF151
 2914 09b0 1D       		.sleb128 29
 2915 09b1 1B       		.uleb128 0x1b
 2916 09b2 96040000 		.4byte	.LASF152
 2917 09b6 1E       		.sleb128 30
 2918 09b7 1B       		.uleb128 0x1b
 2919 09b8 C8030000 		.4byte	.LASF153
 2920 09bc 1F       		.sleb128 31
 2921 09bd 1B       		.uleb128 0x1b
 2922 09be 85010000 		.4byte	.LASF154
 2923 09c2 20       		.sleb128 32
 2924 09c3 1B       		.uleb128 0x1b
 2925 09c4 06040000 		.4byte	.LASF155
 2926 09c8 21       		.sleb128 33
 2927 09c9 1B       		.uleb128 0x1b
 2928 09ca 8D040000 		.4byte	.LASF156
 2929 09ce 22       		.sleb128 34
 2930 09cf 00       		.byte	0
 2931 09d0 04       		.uleb128 0x4
 2932 09d1 3A050000 		.4byte	.LASF157
 2933 09d5 08       		.byte	0x8
 2934 09d6 76       		.byte	0x76
 2935 09d7 D3080000 		.4byte	0x8d3
 2936 09db 1C       		.uleb128 0x1c
 2937 09dc 040E     		.2byte	0xe04
 2938 09de 01       		.byte	0x1
 2939 09df 84       		.byte	0x84
 2940 09e0 A50A0000 		.4byte	0xaa5
 2941 09e4 0B       		.uleb128 0xb
 2942 09e5 E00B0000 		.4byte	.LASF158
 2943 09e9 01       		.byte	0x1
 2944 09ea 86       		.byte	0x86
 2945 09eb B50A0000 		.4byte	0xab5
 2946 09ef 02       		.byte	0x2
 2947 09f0 23       		.byte	0x23
 2948 09f1 00       		.uleb128 0
 2949 09f2 0B       		.uleb128 0xb
 2950 09f3 8A020000 		.4byte	.LASF159
 2951 09f7 01       		.byte	0x1
 2952 09f8 87       		.byte	0x87
 2953 09f9 BA0A0000 		.4byte	0xaba
 2954 09fd 02       		.byte	0x2
 2955 09fe 23       		.byte	0x23
 2956 09ff 20       		.uleb128 0x20
 2957 0a00 0B       		.uleb128 0xb
 2958 0a01 DA080000 		.4byte	.LASF160
 2959 0a05 01       		.byte	0x1
 2960 0a06 88       		.byte	0x88
 2961 0a07 CA0A0000 		.4byte	0xaca
 2962 0a0b 03       		.byte	0x3
 2963 0a0c 23       		.byte	0x23
 2964 0a0d 8001     		.uleb128 0x80
 2965 0a0f 0B       		.uleb128 0xb
 2966 0a10 00000000 		.4byte	.LASF161
ARM GAS  /tmp/ccCX0vdB.s 			page 89


 2967 0a14 01       		.byte	0x1
 2968 0a15 89       		.byte	0x89
 2969 0a16 BA0A0000 		.4byte	0xaba
 2970 0a1a 03       		.byte	0x3
 2971 0a1b 23       		.byte	0x23
 2972 0a1c A001     		.uleb128 0xa0
 2973 0a1e 0B       		.uleb128 0xb
 2974 0a1f D1030000 		.4byte	.LASF162
 2975 0a23 01       		.byte	0x1
 2976 0a24 8A       		.byte	0x8a
 2977 0a25 CF0A0000 		.4byte	0xacf
 2978 0a29 03       		.byte	0x3
 2979 0a2a 23       		.byte	0x23
 2980 0a2b 8002     		.uleb128 0x100
 2981 0a2d 0B       		.uleb128 0xb
 2982 0a2e FD020000 		.4byte	.LASF163
 2983 0a32 01       		.byte	0x1
 2984 0a33 8B       		.byte	0x8b
 2985 0a34 BA0A0000 		.4byte	0xaba
 2986 0a38 03       		.byte	0x3
 2987 0a39 23       		.byte	0x23
 2988 0a3a A002     		.uleb128 0x120
 2989 0a3c 0B       		.uleb128 0xb
 2990 0a3d 1D010000 		.4byte	.LASF164
 2991 0a41 01       		.byte	0x1
 2992 0a42 8C       		.byte	0x8c
 2993 0a43 D40A0000 		.4byte	0xad4
 2994 0a47 03       		.byte	0x3
 2995 0a48 23       		.byte	0x23
 2996 0a49 8003     		.uleb128 0x180
 2997 0a4b 0B       		.uleb128 0xb
 2998 0a4c A2020000 		.4byte	.LASF165
 2999 0a50 01       		.byte	0x1
 3000 0a51 8D       		.byte	0x8d
 3001 0a52 BA0A0000 		.4byte	0xaba
 3002 0a56 03       		.byte	0x3
 3003 0a57 23       		.byte	0x23
 3004 0a58 A003     		.uleb128 0x1a0
 3005 0a5a 0B       		.uleb128 0xb
 3006 0a5b D0020000 		.4byte	.LASF166
 3007 0a5f 01       		.byte	0x1
 3008 0a60 8E       		.byte	0x8e
 3009 0a61 D90A0000 		.4byte	0xad9
 3010 0a65 03       		.byte	0x3
 3011 0a66 23       		.byte	0x23
 3012 0a67 8004     		.uleb128 0x200
 3013 0a69 0B       		.uleb128 0xb
 3014 0a6a AC020000 		.4byte	.LASF167
 3015 0a6e 01       		.byte	0x1
 3016 0a6f 8F       		.byte	0x8f
 3017 0a70 DE0A0000 		.4byte	0xade
 3018 0a74 03       		.byte	0x3
 3019 0a75 23       		.byte	0x23
 3020 0a76 A004     		.uleb128 0x220
 3021 0a78 0E       		.uleb128 0xe
 3022 0a79 495000   		.ascii	"IP\000"
 3023 0a7c 01       		.byte	0x1
ARM GAS  /tmp/ccCX0vdB.s 			page 90


 3024 0a7d 90       		.byte	0x90
 3025 0a7e FE0A0000 		.4byte	0xafe
 3026 0a82 03       		.byte	0x3
 3027 0a83 23       		.byte	0x23
 3028 0a84 8006     		.uleb128 0x300
 3029 0a86 0B       		.uleb128 0xb
 3030 0a87 B6020000 		.4byte	.LASF168
 3031 0a8b 01       		.byte	0x1
 3032 0a8c 91       		.byte	0x91
 3033 0a8d 030B0000 		.4byte	0xb03
 3034 0a91 03       		.byte	0x3
 3035 0a92 23       		.byte	0x23
 3036 0a93 F007     		.uleb128 0x3f0
 3037 0a95 0B       		.uleb128 0xb
 3038 0a96 01040000 		.4byte	.LASF169
 3039 0a9a 01       		.byte	0x1
 3040 0a9b 92       		.byte	0x92
 3041 0a9c CE080000 		.4byte	0x8ce
 3042 0aa0 03       		.byte	0x3
 3043 0aa1 23       		.byte	0x23
 3044 0aa2 801C     		.uleb128 0xe00
 3045 0aa4 00       		.byte	0
 3046 0aa5 08       		.uleb128 0x8
 3047 0aa6 B9080000 		.4byte	0x8b9
 3048 0aaa B50A0000 		.4byte	0xab5
 3049 0aae 09       		.uleb128 0x9
 3050 0aaf 4C000000 		.4byte	0x4c
 3051 0ab3 07       		.byte	0x7
 3052 0ab4 00       		.byte	0
 3053 0ab5 19       		.uleb128 0x19
 3054 0ab6 A50A0000 		.4byte	0xaa5
 3055 0aba 08       		.uleb128 0x8
 3056 0abb B9080000 		.4byte	0x8b9
 3057 0abf CA0A0000 		.4byte	0xaca
 3058 0ac3 09       		.uleb128 0x9
 3059 0ac4 4C000000 		.4byte	0x4c
 3060 0ac8 17       		.byte	0x17
 3061 0ac9 00       		.byte	0
 3062 0aca 19       		.uleb128 0x19
 3063 0acb A50A0000 		.4byte	0xaa5
 3064 0acf 19       		.uleb128 0x19
 3065 0ad0 A50A0000 		.4byte	0xaa5
 3066 0ad4 19       		.uleb128 0x19
 3067 0ad5 A50A0000 		.4byte	0xaa5
 3068 0ad9 19       		.uleb128 0x19
 3069 0ada A50A0000 		.4byte	0xaa5
 3070 0ade 08       		.uleb128 0x8
 3071 0adf B9080000 		.4byte	0x8b9
 3072 0ae3 EE0A0000 		.4byte	0xaee
 3073 0ae7 09       		.uleb128 0x9
 3074 0ae8 4C000000 		.4byte	0x4c
 3075 0aec 37       		.byte	0x37
 3076 0aed 00       		.byte	0
 3077 0aee 08       		.uleb128 0x8
 3078 0aef 98080000 		.4byte	0x898
 3079 0af3 FE0A0000 		.4byte	0xafe
 3080 0af7 09       		.uleb128 0x9
ARM GAS  /tmp/ccCX0vdB.s 			page 91


 3081 0af8 4C000000 		.4byte	0x4c
 3082 0afc EF       		.byte	0xef
 3083 0afd 00       		.byte	0
 3084 0afe 19       		.uleb128 0x19
 3085 0aff EE0A0000 		.4byte	0xaee
 3086 0b03 08       		.uleb128 0x8
 3087 0b04 B9080000 		.4byte	0x8b9
 3088 0b08 140B0000 		.4byte	0xb14
 3089 0b0c 1D       		.uleb128 0x1d
 3090 0b0d 4C000000 		.4byte	0x4c
 3091 0b11 8302     		.2byte	0x283
 3092 0b13 00       		.byte	0
 3093 0b14 04       		.uleb128 0x4
 3094 0b15 42000000 		.4byte	.LASF170
 3095 0b19 01       		.byte	0x1
 3096 0b1a 93       		.byte	0x93
 3097 0b1b DB090000 		.4byte	0x9db
 3098 0b1f 0A       		.uleb128 0xa
 3099 0b20 74       		.byte	0x74
 3100 0b21 01       		.byte	0x1
 3101 0b22 9B       		.byte	0x9b
 3102 0b23 320C0000 		.4byte	0xc32
 3103 0b27 0B       		.uleb128 0xb
 3104 0b28 D8010000 		.4byte	.LASF171
 3105 0b2c 01       		.byte	0x1
 3106 0b2d 9D       		.byte	0x9d
 3107 0b2e C4080000 		.4byte	0x8c4
 3108 0b32 02       		.byte	0x2
 3109 0b33 23       		.byte	0x23
 3110 0b34 00       		.uleb128 0
 3111 0b35 0B       		.uleb128 0xb
 3112 0b36 4D020000 		.4byte	.LASF172
 3113 0b3a 01       		.byte	0x1
 3114 0b3b 9E       		.byte	0x9e
 3115 0b3c CE080000 		.4byte	0x8ce
 3116 0b40 02       		.byte	0x2
 3117 0b41 23       		.byte	0x23
 3118 0b42 04       		.uleb128 0x4
 3119 0b43 0B       		.uleb128 0xb
 3120 0b44 C0000000 		.4byte	.LASF173
 3121 0b48 01       		.byte	0x1
 3122 0b49 9F       		.byte	0x9f
 3123 0b4a CE080000 		.4byte	0x8ce
 3124 0b4e 02       		.byte	0x2
 3125 0b4f 23       		.byte	0x23
 3126 0b50 08       		.uleb128 0x8
 3127 0b51 0B       		.uleb128 0xb
 3128 0b52 6A010000 		.4byte	.LASF174
 3129 0b56 01       		.byte	0x1
 3130 0b57 A0       		.byte	0xa0
 3131 0b58 CE080000 		.4byte	0x8ce
 3132 0b5c 02       		.byte	0x2
 3133 0b5d 23       		.byte	0x23
 3134 0b5e 0C       		.uleb128 0xc
 3135 0b5f 0E       		.uleb128 0xe
 3136 0b60 53435200 		.ascii	"SCR\000"
 3137 0b64 01       		.byte	0x1
ARM GAS  /tmp/ccCX0vdB.s 			page 92


 3138 0b65 A1       		.byte	0xa1
 3139 0b66 CE080000 		.4byte	0x8ce
 3140 0b6a 02       		.byte	0x2
 3141 0b6b 23       		.byte	0x23
 3142 0b6c 10       		.uleb128 0x10
 3143 0b6d 0E       		.uleb128 0xe
 3144 0b6e 43435200 		.ascii	"CCR\000"
 3145 0b72 01       		.byte	0x1
 3146 0b73 A2       		.byte	0xa2
 3147 0b74 CE080000 		.4byte	0x8ce
 3148 0b78 02       		.byte	0x2
 3149 0b79 23       		.byte	0x23
 3150 0b7a 14       		.uleb128 0x14
 3151 0b7b 0E       		.uleb128 0xe
 3152 0b7c 53485000 		.ascii	"SHP\000"
 3153 0b80 01       		.byte	0x1
 3154 0b81 A3       		.byte	0xa3
 3155 0b82 420C0000 		.4byte	0xc42
 3156 0b86 02       		.byte	0x2
 3157 0b87 23       		.byte	0x23
 3158 0b88 18       		.uleb128 0x18
 3159 0b89 0B       		.uleb128 0xb
 3160 0b8a F3030000 		.4byte	.LASF175
 3161 0b8e 01       		.byte	0x1
 3162 0b8f A4       		.byte	0xa4
 3163 0b90 CE080000 		.4byte	0x8ce
 3164 0b94 02       		.byte	0x2
 3165 0b95 23       		.byte	0x23
 3166 0b96 24       		.uleb128 0x24
 3167 0b97 0B       		.uleb128 0xb
 3168 0b98 7A090000 		.4byte	.LASF176
 3169 0b9c 01       		.byte	0x1
 3170 0b9d A5       		.byte	0xa5
 3171 0b9e CE080000 		.4byte	0x8ce
 3172 0ba2 02       		.byte	0x2
 3173 0ba3 23       		.byte	0x23
 3174 0ba4 28       		.uleb128 0x28
 3175 0ba5 0B       		.uleb128 0xb
 3176 0ba6 96030000 		.4byte	.LASF177
 3177 0baa 01       		.byte	0x1
 3178 0bab A6       		.byte	0xa6
 3179 0bac CE080000 		.4byte	0x8ce
 3180 0bb0 02       		.byte	0x2
 3181 0bb1 23       		.byte	0x23
 3182 0bb2 2C       		.uleb128 0x2c
 3183 0bb3 0B       		.uleb128 0xb
 3184 0bb4 51030000 		.4byte	.LASF178
 3185 0bb8 01       		.byte	0x1
 3186 0bb9 A7       		.byte	0xa7
 3187 0bba CE080000 		.4byte	0x8ce
 3188 0bbe 02       		.byte	0x2
 3189 0bbf 23       		.byte	0x23
 3190 0bc0 30       		.uleb128 0x30
 3191 0bc1 0B       		.uleb128 0xb
 3192 0bc2 2F0A0000 		.4byte	.LASF179
 3193 0bc6 01       		.byte	0x1
 3194 0bc7 A8       		.byte	0xa8
ARM GAS  /tmp/ccCX0vdB.s 			page 93


 3195 0bc8 CE080000 		.4byte	0x8ce
 3196 0bcc 02       		.byte	0x2
 3197 0bcd 23       		.byte	0x23
 3198 0bce 34       		.uleb128 0x34
 3199 0bcf 0B       		.uleb128 0xb
 3200 0bd0 F6070000 		.4byte	.LASF180
 3201 0bd4 01       		.byte	0x1
 3202 0bd5 A9       		.byte	0xa9
 3203 0bd6 CE080000 		.4byte	0x8ce
 3204 0bda 02       		.byte	0x2
 3205 0bdb 23       		.byte	0x23
 3206 0bdc 38       		.uleb128 0x38
 3207 0bdd 0B       		.uleb128 0xb
 3208 0bde 20090000 		.4byte	.LASF181
 3209 0be2 01       		.byte	0x1
 3210 0be3 AA       		.byte	0xaa
 3211 0be4 CE080000 		.4byte	0x8ce
 3212 0be8 02       		.byte	0x2
 3213 0be9 23       		.byte	0x23
 3214 0bea 3C       		.uleb128 0x3c
 3215 0beb 0E       		.uleb128 0xe
 3216 0bec 50465200 		.ascii	"PFR\000"
 3217 0bf0 01       		.byte	0x1
 3218 0bf1 AB       		.byte	0xab
 3219 0bf2 570C0000 		.4byte	0xc57
 3220 0bf6 02       		.byte	0x2
 3221 0bf7 23       		.byte	0x23
 3222 0bf8 40       		.uleb128 0x40
 3223 0bf9 0E       		.uleb128 0xe
 3224 0bfa 44465200 		.ascii	"DFR\000"
 3225 0bfe 01       		.byte	0x1
 3226 0bff AC       		.byte	0xac
 3227 0c00 C4080000 		.4byte	0x8c4
 3228 0c04 02       		.byte	0x2
 3229 0c05 23       		.byte	0x23
 3230 0c06 48       		.uleb128 0x48
 3231 0c07 0E       		.uleb128 0xe
 3232 0c08 41445200 		.ascii	"ADR\000"
 3233 0c0c 01       		.byte	0x1
 3234 0c0d AD       		.byte	0xad
 3235 0c0e C4080000 		.4byte	0x8c4
 3236 0c12 02       		.byte	0x2
 3237 0c13 23       		.byte	0x23
 3238 0c14 4C       		.uleb128 0x4c
 3239 0c15 0B       		.uleb128 0xb
 3240 0c16 240A0000 		.4byte	.LASF182
 3241 0c1a 01       		.byte	0x1
 3242 0c1b AE       		.byte	0xae
 3243 0c1c 710C0000 		.4byte	0xc71
 3244 0c20 02       		.byte	0x2
 3245 0c21 23       		.byte	0x23
 3246 0c22 50       		.uleb128 0x50
 3247 0c23 0B       		.uleb128 0xb
 3248 0c24 6A0A0000 		.4byte	.LASF183
 3249 0c28 01       		.byte	0x1
 3250 0c29 AF       		.byte	0xaf
 3251 0c2a 8B0C0000 		.4byte	0xc8b
ARM GAS  /tmp/ccCX0vdB.s 			page 94


 3252 0c2e 02       		.byte	0x2
 3253 0c2f 23       		.byte	0x23
 3254 0c30 60       		.uleb128 0x60
 3255 0c31 00       		.byte	0
 3256 0c32 08       		.uleb128 0x8
 3257 0c33 98080000 		.4byte	0x898
 3258 0c37 420C0000 		.4byte	0xc42
 3259 0c3b 09       		.uleb128 0x9
 3260 0c3c 4C000000 		.4byte	0x4c
 3261 0c40 0B       		.byte	0xb
 3262 0c41 00       		.byte	0
 3263 0c42 19       		.uleb128 0x19
 3264 0c43 320C0000 		.4byte	0xc32
 3265 0c47 08       		.uleb128 0x8
 3266 0c48 B9080000 		.4byte	0x8b9
 3267 0c4c 570C0000 		.4byte	0xc57
 3268 0c50 09       		.uleb128 0x9
 3269 0c51 4C000000 		.4byte	0x4c
 3270 0c55 01       		.byte	0x1
 3271 0c56 00       		.byte	0
 3272 0c57 17       		.uleb128 0x17
 3273 0c58 5C0C0000 		.4byte	0xc5c
 3274 0c5c 19       		.uleb128 0x19
 3275 0c5d 470C0000 		.4byte	0xc47
 3276 0c61 08       		.uleb128 0x8
 3277 0c62 B9080000 		.4byte	0x8b9
 3278 0c66 710C0000 		.4byte	0xc71
 3279 0c6a 09       		.uleb128 0x9
 3280 0c6b 4C000000 		.4byte	0x4c
 3281 0c6f 03       		.byte	0x3
 3282 0c70 00       		.byte	0
 3283 0c71 17       		.uleb128 0x17
 3284 0c72 760C0000 		.4byte	0xc76
 3285 0c76 19       		.uleb128 0x19
 3286 0c77 610C0000 		.4byte	0xc61
 3287 0c7b 08       		.uleb128 0x8
 3288 0c7c B9080000 		.4byte	0x8b9
 3289 0c80 8B0C0000 		.4byte	0xc8b
 3290 0c84 09       		.uleb128 0x9
 3291 0c85 4C000000 		.4byte	0x4c
 3292 0c89 04       		.byte	0x4
 3293 0c8a 00       		.byte	0
 3294 0c8b 17       		.uleb128 0x17
 3295 0c8c 900C0000 		.4byte	0xc90
 3296 0c90 19       		.uleb128 0x19
 3297 0c91 7B0C0000 		.4byte	0xc7b
 3298 0c95 04       		.uleb128 0x4
 3299 0c96 3A030000 		.4byte	.LASF184
 3300 0c9a 01       		.byte	0x1
 3301 0c9b B0       		.byte	0xb0
 3302 0c9c 1F0B0000 		.4byte	0xb1f
 3303 0ca0 19       		.uleb128 0x19
 3304 0ca1 01010000 		.4byte	0x101
 3305 0ca5 17       		.uleb128 0x17
 3306 0ca6 A00C0000 		.4byte	0xca0
 3307 0caa 08       		.uleb128 0x8
 3308 0cab 01010000 		.4byte	0x101
ARM GAS  /tmp/ccCX0vdB.s 			page 95


 3309 0caf BA0C0000 		.4byte	0xcba
 3310 0cb3 09       		.uleb128 0x9
 3311 0cb4 4C000000 		.4byte	0x4c
 3312 0cb8 12       		.byte	0x12
 3313 0cb9 00       		.byte	0
 3314 0cba 1C       		.uleb128 0x1c
 3315 0cbb 2801     		.2byte	0x128
 3316 0cbd 08       		.byte	0x8
 3317 0cbe EF       		.byte	0xef
 3318 0cbf E00E0000 		.4byte	0xee0
 3319 0cc3 0B       		.uleb128 0xb
 3320 0cc4 A40A0000 		.4byte	.LASF185
 3321 0cc8 08       		.byte	0x8
 3322 0cc9 F0       		.byte	0xf0
 3323 0cca A00C0000 		.4byte	0xca0
 3324 0cce 02       		.byte	0x2
 3325 0ccf 23       		.byte	0x23
 3326 0cd0 00       		.uleb128 0
 3327 0cd1 0B       		.uleb128 0xb
 3328 0cd2 7B050000 		.4byte	.LASF186
 3329 0cd6 08       		.byte	0x8
 3330 0cd7 F1       		.byte	0xf1
 3331 0cd8 A00C0000 		.4byte	0xca0
 3332 0cdc 02       		.byte	0x2
 3333 0cdd 23       		.byte	0x23
 3334 0cde 04       		.uleb128 0x4
 3335 0cdf 0B       		.uleb128 0xb
 3336 0ce0 25090000 		.4byte	.LASF187
 3337 0ce4 08       		.byte	0x8
 3338 0ce5 F2       		.byte	0xf2
 3339 0ce6 A00C0000 		.4byte	0xca0
 3340 0cea 02       		.byte	0x2
 3341 0ceb 23       		.byte	0x23
 3342 0cec 08       		.uleb128 0x8
 3343 0ced 0B       		.uleb128 0xb
 3344 0cee 2F090000 		.4byte	.LASF188
 3345 0cf2 08       		.byte	0x8
 3346 0cf3 F3       		.byte	0xf3
 3347 0cf4 A00C0000 		.4byte	0xca0
 3348 0cf8 02       		.byte	0x2
 3349 0cf9 23       		.byte	0x23
 3350 0cfa 0C       		.uleb128 0xc
 3351 0cfb 0B       		.uleb128 0xb
 3352 0cfc D70B0000 		.4byte	.LASF189
 3353 0d00 08       		.byte	0x8
 3354 0d01 F4       		.byte	0xf4
 3355 0d02 A00C0000 		.4byte	0xca0
 3356 0d06 02       		.byte	0x2
 3357 0d07 23       		.byte	0x23
 3358 0d08 10       		.uleb128 0x10
 3359 0d09 0B       		.uleb128 0xb
 3360 0d0a 6E0B0000 		.4byte	.LASF190
 3361 0d0e 08       		.byte	0x8
 3362 0d0f F5       		.byte	0xf5
 3363 0d10 A00C0000 		.4byte	0xca0
 3364 0d14 02       		.byte	0x2
 3365 0d15 23       		.byte	0x23
ARM GAS  /tmp/ccCX0vdB.s 			page 96


 3366 0d16 14       		.uleb128 0x14
 3367 0d17 0B       		.uleb128 0xb
 3368 0d18 C4040000 		.4byte	.LASF191
 3369 0d1c 08       		.byte	0x8
 3370 0d1d F6       		.byte	0xf6
 3371 0d1e A50C0000 		.4byte	0xca5
 3372 0d22 02       		.byte	0x2
 3373 0d23 23       		.byte	0x23
 3374 0d24 18       		.uleb128 0x18
 3375 0d25 0B       		.uleb128 0xb
 3376 0d26 66090000 		.4byte	.LASF192
 3377 0d2a 08       		.byte	0x8
 3378 0d2b F7       		.byte	0xf7
 3379 0d2c F00E0000 		.4byte	0xef0
 3380 0d30 02       		.byte	0x2
 3381 0d31 23       		.byte	0x23
 3382 0d32 1C       		.uleb128 0x1c
 3383 0d33 0B       		.uleb128 0xb
 3384 0d34 82050000 		.4byte	.LASF193
 3385 0d38 08       		.byte	0x8
 3386 0d39 F8       		.byte	0xf8
 3387 0d3a A50C0000 		.4byte	0xca5
 3388 0d3e 02       		.byte	0x2
 3389 0d3f 23       		.byte	0x23
 3390 0d40 20       		.uleb128 0x20
 3391 0d41 0B       		.uleb128 0xb
 3392 0d42 39070000 		.4byte	.LASF194
 3393 0d46 08       		.byte	0x8
 3394 0d47 F9       		.byte	0xf9
 3395 0d48 A00C0000 		.4byte	0xca0
 3396 0d4c 02       		.byte	0x2
 3397 0d4d 23       		.byte	0x23
 3398 0d4e 24       		.uleb128 0x24
 3399 0d4f 0B       		.uleb128 0xb
 3400 0d50 E8060000 		.4byte	.LASF195
 3401 0d54 08       		.byte	0x8
 3402 0d55 FA       		.byte	0xfa
 3403 0d56 A00C0000 		.4byte	0xca0
 3404 0d5a 02       		.byte	0x2
 3405 0d5b 23       		.byte	0x23
 3406 0d5c 28       		.uleb128 0x28
 3407 0d5d 0B       		.uleb128 0xb
 3408 0d5e 9C0A0000 		.4byte	.LASF196
 3409 0d62 08       		.byte	0x8
 3410 0d63 FB       		.byte	0xfb
 3411 0d64 A50C0000 		.4byte	0xca5
 3412 0d68 02       		.byte	0x2
 3413 0d69 23       		.byte	0x23
 3414 0d6a 2C       		.uleb128 0x2c
 3415 0d6b 0B       		.uleb128 0xb
 3416 0d6c 82000000 		.4byte	.LASF197
 3417 0d70 08       		.byte	0x8
 3418 0d71 FC       		.byte	0xfc
 3419 0d72 A50C0000 		.4byte	0xca5
 3420 0d76 02       		.byte	0x2
 3421 0d77 23       		.byte	0x23
 3422 0d78 30       		.uleb128 0x30
ARM GAS  /tmp/ccCX0vdB.s 			page 97


 3423 0d79 0B       		.uleb128 0xb
 3424 0d7a 70090000 		.4byte	.LASF198
 3425 0d7e 08       		.byte	0x8
 3426 0d7f FD       		.byte	0xfd
 3427 0d80 050F0000 		.4byte	0xf05
 3428 0d84 02       		.byte	0x2
 3429 0d85 23       		.byte	0x23
 3430 0d86 34       		.uleb128 0x34
 3431 0d87 0B       		.uleb128 0xb
 3432 0d88 6F0A0000 		.4byte	.LASF199
 3433 0d8c 08       		.byte	0x8
 3434 0d8d FE       		.byte	0xfe
 3435 0d8e A50C0000 		.4byte	0xca5
 3436 0d92 02       		.byte	0x2
 3437 0d93 23       		.byte	0x23
 3438 0d94 3C       		.uleb128 0x3c
 3439 0d95 0B       		.uleb128 0xb
 3440 0d96 7A000000 		.4byte	.LASF200
 3441 0d9a 08       		.byte	0x8
 3442 0d9b FF       		.byte	0xff
 3443 0d9c A00C0000 		.4byte	0xca0
 3444 0da0 02       		.byte	0x2
 3445 0da1 23       		.byte	0x23
 3446 0da2 40       		.uleb128 0x40
 3447 0da3 13       		.uleb128 0x13
 3448 0da4 ED0B0000 		.4byte	.LASF201
 3449 0da8 08       		.byte	0x8
 3450 0da9 0001     		.2byte	0x100
 3451 0dab A00C0000 		.4byte	0xca0
 3452 0daf 02       		.byte	0x2
 3453 0db0 23       		.byte	0x23
 3454 0db1 44       		.uleb128 0x44
 3455 0db2 13       		.uleb128 0x13
 3456 0db3 62050000 		.4byte	.LASF202
 3457 0db7 08       		.byte	0x8
 3458 0db8 0101     		.2byte	0x101
 3459 0dba A00C0000 		.4byte	0xca0
 3460 0dbe 02       		.byte	0x2
 3461 0dbf 23       		.byte	0x23
 3462 0dc0 48       		.uleb128 0x48
 3463 0dc1 13       		.uleb128 0x13
 3464 0dc2 5E080000 		.4byte	.LASF203
 3465 0dc6 08       		.byte	0x8
 3466 0dc7 0201     		.2byte	0x102
 3467 0dc9 A00C0000 		.4byte	0xca0
 3468 0dcd 02       		.byte	0x2
 3469 0dce 23       		.byte	0x23
 3470 0dcf 4C       		.uleb128 0x4c
 3471 0dd0 13       		.uleb128 0x13
 3472 0dd1 F9030000 		.4byte	.LASF204
 3473 0dd5 08       		.byte	0x8
 3474 0dd6 0301     		.2byte	0x103
 3475 0dd8 1A0F0000 		.4byte	0xf1a
 3476 0ddc 02       		.byte	0x2
 3477 0ddd 23       		.byte	0x23
 3478 0dde 50       		.uleb128 0x50
 3479 0ddf 13       		.uleb128 0x13
ARM GAS  /tmp/ccCX0vdB.s 			page 98


 3480 0de0 E8000000 		.4byte	.LASF205
 3481 0de4 08       		.byte	0x8
 3482 0de5 0401     		.2byte	0x104
 3483 0de7 240F0000 		.4byte	0xf24
 3484 0deb 03       		.byte	0x3
 3485 0dec 23       		.byte	0x23
 3486 0ded 9001     		.uleb128 0x90
 3487 0def 13       		.uleb128 0x13
 3488 0df0 5E0B0000 		.4byte	.LASF206
 3489 0df4 08       		.byte	0x8
 3490 0df5 0501     		.2byte	0x105
 3491 0df7 A00C0000 		.4byte	0xca0
 3492 0dfb 03       		.byte	0x3
 3493 0dfc 23       		.byte	0x23
 3494 0dfd 9401     		.uleb128 0x94
 3495 0dff 13       		.uleb128 0x13
 3496 0e00 7F090000 		.4byte	.LASF207
 3497 0e04 08       		.byte	0x8
 3498 0e05 0601     		.2byte	0x106
 3499 0e07 290F0000 		.4byte	0xf29
 3500 0e0b 03       		.byte	0x3
 3501 0e0c 23       		.byte	0x23
 3502 0e0d 9801     		.uleb128 0x98
 3503 0e0f 13       		.uleb128 0x13
 3504 0e10 970B0000 		.4byte	.LASF208
 3505 0e14 08       		.byte	0x8
 3506 0e15 0701     		.2byte	0x107
 3507 0e17 A00C0000 		.4byte	0xca0
 3508 0e1b 03       		.byte	0x3
 3509 0e1c 23       		.byte	0x23
 3510 0e1d E401     		.uleb128 0xe4
 3511 0e1f 13       		.uleb128 0x13
 3512 0e20 4D010000 		.4byte	.LASF209
 3513 0e24 08       		.byte	0x8
 3514 0e25 0801     		.2byte	0x108
 3515 0e27 A50C0000 		.4byte	0xca5
 3516 0e2b 03       		.byte	0x3
 3517 0e2c 23       		.byte	0x23
 3518 0e2d E801     		.uleb128 0xe8
 3519 0e2f 13       		.uleb128 0x13
 3520 0e30 89090000 		.4byte	.LASF210
 3521 0e34 08       		.byte	0x8
 3522 0e35 0901     		.2byte	0x109
 3523 0e37 3E0F0000 		.4byte	0xf3e
 3524 0e3b 03       		.byte	0x3
 3525 0e3c 23       		.byte	0x23
 3526 0e3d EC01     		.uleb128 0xec
 3527 0e3f 13       		.uleb128 0x13
 3528 0e40 02010000 		.4byte	.LASF211
 3529 0e44 08       		.byte	0x8
 3530 0e45 0A01     		.2byte	0x10a
 3531 0e47 A00C0000 		.4byte	0xca0
 3532 0e4b 03       		.byte	0x3
 3533 0e4c 23       		.byte	0x23
 3534 0e4d 8002     		.uleb128 0x100
 3535 0e4f 13       		.uleb128 0x13
 3536 0e50 E4030000 		.4byte	.LASF212
ARM GAS  /tmp/ccCX0vdB.s 			page 99


 3537 0e54 08       		.byte	0x8
 3538 0e55 0B01     		.2byte	0x10b
 3539 0e57 A00C0000 		.4byte	0xca0
 3540 0e5b 03       		.byte	0x3
 3541 0e5c 23       		.byte	0x23
 3542 0e5d 8402     		.uleb128 0x104
 3543 0e5f 13       		.uleb128 0x13
 3544 0e60 ED010000 		.4byte	.LASF213
 3545 0e64 08       		.byte	0x8
 3546 0e65 0C01     		.2byte	0x10c
 3547 0e67 A00C0000 		.4byte	0xca0
 3548 0e6b 03       		.byte	0x3
 3549 0e6c 23       		.byte	0x23
 3550 0e6d 8802     		.uleb128 0x108
 3551 0e6f 13       		.uleb128 0x13
 3552 0e70 D2080000 		.4byte	.LASF214
 3553 0e74 08       		.byte	0x8
 3554 0e75 0D01     		.2byte	0x10d
 3555 0e77 A00C0000 		.4byte	0xca0
 3556 0e7b 03       		.byte	0x3
 3557 0e7c 23       		.byte	0x23
 3558 0e7d 8C02     		.uleb128 0x10c
 3559 0e7f 13       		.uleb128 0x13
 3560 0e80 14010000 		.4byte	.LASF215
 3561 0e84 08       		.byte	0x8
 3562 0e85 0E01     		.2byte	0x10e
 3563 0e87 A00C0000 		.4byte	0xca0
 3564 0e8b 03       		.byte	0x3
 3565 0e8c 23       		.byte	0x23
 3566 0e8d 9002     		.uleb128 0x110
 3567 0e8f 13       		.uleb128 0x13
 3568 0e90 E2070000 		.4byte	.LASF216
 3569 0e94 08       		.byte	0x8
 3570 0e95 0F01     		.2byte	0x10f
 3571 0e97 A00C0000 		.4byte	0xca0
 3572 0e9b 03       		.byte	0x3
 3573 0e9c 23       		.byte	0x23
 3574 0e9d 9402     		.uleb128 0x114
 3575 0e9f 13       		.uleb128 0x13
 3576 0ea0 2A010000 		.4byte	.LASF217
 3577 0ea4 08       		.byte	0x8
 3578 0ea5 1001     		.2byte	0x110
 3579 0ea7 A00C0000 		.4byte	0xca0
 3580 0eab 03       		.byte	0x3
 3581 0eac 23       		.byte	0x23
 3582 0ead 9802     		.uleb128 0x118
 3583 0eaf 13       		.uleb128 0x13
 3584 0eb0 09080000 		.4byte	.LASF218
 3585 0eb4 08       		.byte	0x8
 3586 0eb5 1101     		.2byte	0x111
 3587 0eb7 A00C0000 		.4byte	0xca0
 3588 0ebb 03       		.byte	0x3
 3589 0ebc 23       		.byte	0x23
 3590 0ebd 9C02     		.uleb128 0x11c
 3591 0ebf 13       		.uleb128 0x13
 3592 0ec0 BE0A0000 		.4byte	.LASF219
 3593 0ec4 08       		.byte	0x8
ARM GAS  /tmp/ccCX0vdB.s 			page 100


 3594 0ec5 1201     		.2byte	0x112
 3595 0ec7 A00C0000 		.4byte	0xca0
 3596 0ecb 03       		.byte	0x3
 3597 0ecc 23       		.byte	0x23
 3598 0ecd A002     		.uleb128 0x120
 3599 0ecf 13       		.uleb128 0x13
 3600 0ed0 7B040000 		.4byte	.LASF220
 3601 0ed4 08       		.byte	0x8
 3602 0ed5 1301     		.2byte	0x113
 3603 0ed7 A50C0000 		.4byte	0xca5
 3604 0edb 03       		.byte	0x3
 3605 0edc 23       		.byte	0x23
 3606 0edd A402     		.uleb128 0x124
 3607 0edf 00       		.byte	0
 3608 0ee0 08       		.uleb128 0x8
 3609 0ee1 01010000 		.4byte	0x101
 3610 0ee5 F00E0000 		.4byte	0xef0
 3611 0ee9 09       		.uleb128 0x9
 3612 0eea 4C000000 		.4byte	0x4c
 3613 0eee 00       		.byte	0
 3614 0eef 00       		.byte	0
 3615 0ef0 19       		.uleb128 0x19
 3616 0ef1 E00E0000 		.4byte	0xee0
 3617 0ef5 08       		.uleb128 0x8
 3618 0ef6 01010000 		.4byte	0x101
 3619 0efa 050F0000 		.4byte	0xf05
 3620 0efe 09       		.uleb128 0x9
 3621 0eff 4C000000 		.4byte	0x4c
 3622 0f03 01       		.byte	0x1
 3623 0f04 00       		.byte	0
 3624 0f05 19       		.uleb128 0x19
 3625 0f06 F50E0000 		.4byte	0xef5
 3626 0f0a 08       		.uleb128 0x8
 3627 0f0b 01010000 		.4byte	0x101
 3628 0f0f 1A0F0000 		.4byte	0xf1a
 3629 0f13 09       		.uleb128 0x9
 3630 0f14 4C000000 		.4byte	0x4c
 3631 0f18 0F       		.byte	0xf
 3632 0f19 00       		.byte	0
 3633 0f1a 17       		.uleb128 0x17
 3634 0f1b 1F0F0000 		.4byte	0xf1f
 3635 0f1f 19       		.uleb128 0x19
 3636 0f20 0A0F0000 		.4byte	0xf0a
 3637 0f24 19       		.uleb128 0x19
 3638 0f25 E00E0000 		.4byte	0xee0
 3639 0f29 19       		.uleb128 0x19
 3640 0f2a AA0C0000 		.4byte	0xcaa
 3641 0f2e 08       		.uleb128 0x8
 3642 0f2f 01010000 		.4byte	0x101
 3643 0f33 3E0F0000 		.4byte	0xf3e
 3644 0f37 09       		.uleb128 0x9
 3645 0f38 4C000000 		.4byte	0x4c
 3646 0f3c 04       		.byte	0x4
 3647 0f3d 00       		.byte	0
 3648 0f3e 19       		.uleb128 0x19
 3649 0f3f 2E0F0000 		.4byte	0xf2e
 3650 0f43 1E       		.uleb128 0x1e
ARM GAS  /tmp/ccCX0vdB.s 			page 101


 3651 0f44 41646300 		.ascii	"Adc\000"
 3652 0f48 08       		.byte	0x8
 3653 0f49 1401     		.2byte	0x114
 3654 0f4b BA0C0000 		.4byte	0xcba
 3655 0f4f 08       		.uleb128 0x8
 3656 0f50 01010000 		.4byte	0x101
 3657 0f54 5F0F0000 		.4byte	0xf5f
 3658 0f58 09       		.uleb128 0x9
 3659 0f59 4C000000 		.4byte	0x4c
 3660 0f5d 03       		.byte	0x3
 3661 0f5e 00       		.byte	0
 3662 0f5f 08       		.uleb128 0x8
 3663 0f60 01010000 		.4byte	0x101
 3664 0f64 6F0F0000 		.4byte	0xf6f
 3665 0f68 09       		.uleb128 0x9
 3666 0f69 4C000000 		.4byte	0x4c
 3667 0f6d 0B       		.byte	0xb
 3668 0f6e 00       		.byte	0
 3669 0f6f 08       		.uleb128 0x8
 3670 0f70 01010000 		.4byte	0x101
 3671 0f74 7F0F0000 		.4byte	0xf7f
 3672 0f78 09       		.uleb128 0x9
 3673 0f79 4C000000 		.4byte	0x4c
 3674 0f7d 0A       		.byte	0xa
 3675 0f7e 00       		.byte	0
 3676 0f7f 08       		.uleb128 0x8
 3677 0f80 01010000 		.4byte	0x101
 3678 0f84 8F0F0000 		.4byte	0xf8f
 3679 0f88 09       		.uleb128 0x9
 3680 0f89 4C000000 		.4byte	0x4c
 3681 0f8d 02       		.byte	0x2
 3682 0f8e 00       		.byte	0
 3683 0f8f 1F       		.uleb128 0x1f
 3684 0f90 20       		.byte	0x20
 3685 0f91 08       		.byte	0x8
 3686 0f92 050F     		.2byte	0xf05
 3687 0f94 11100000 		.4byte	0x1011
 3688 0f98 13       		.uleb128 0x13
 3689 0f99 1C0A0000 		.4byte	.LASF221
 3690 0f9d 08       		.byte	0x8
 3691 0f9e 060F     		.2byte	0xf06
 3692 0fa0 A00C0000 		.4byte	0xca0
 3693 0fa4 02       		.byte	0x2
 3694 0fa5 23       		.byte	0x23
 3695 0fa6 00       		.uleb128 0
 3696 0fa7 13       		.uleb128 0x13
 3697 0fa8 F0060000 		.4byte	.LASF222
 3698 0fac 08       		.byte	0x8
 3699 0fad 070F     		.2byte	0xf07
 3700 0faf A00C0000 		.4byte	0xca0
 3701 0fb3 02       		.byte	0x2
 3702 0fb4 23       		.byte	0x23
 3703 0fb5 04       		.uleb128 0x4
 3704 0fb6 13       		.uleb128 0x13
 3705 0fb7 2D060000 		.4byte	.LASF223
 3706 0fbb 08       		.byte	0x8
 3707 0fbc 080F     		.2byte	0xf08
ARM GAS  /tmp/ccCX0vdB.s 			page 102


 3708 0fbe A00C0000 		.4byte	0xca0
 3709 0fc2 02       		.byte	0x2
 3710 0fc3 23       		.byte	0x23
 3711 0fc4 08       		.uleb128 0x8
 3712 0fc5 13       		.uleb128 0x13
 3713 0fc6 270B0000 		.4byte	.LASF224
 3714 0fca 08       		.byte	0x8
 3715 0fcb 090F     		.2byte	0xf09
 3716 0fcd A00C0000 		.4byte	0xca0
 3717 0fd1 02       		.byte	0x2
 3718 0fd2 23       		.byte	0x23
 3719 0fd3 0C       		.uleb128 0xc
 3720 0fd4 13       		.uleb128 0x13
 3721 0fd5 F30A0000 		.4byte	.LASF225
 3722 0fd9 08       		.byte	0x8
 3723 0fda 0A0F     		.2byte	0xf0a
 3724 0fdc A00C0000 		.4byte	0xca0
 3725 0fe0 02       		.byte	0x2
 3726 0fe1 23       		.byte	0x23
 3727 0fe2 10       		.uleb128 0x10
 3728 0fe3 13       		.uleb128 0x13
 3729 0fe4 C9010000 		.4byte	.LASF226
 3730 0fe8 08       		.byte	0x8
 3731 0fe9 0B0F     		.2byte	0xf0b
 3732 0feb A00C0000 		.4byte	0xca0
 3733 0fef 02       		.byte	0x2
 3734 0ff0 23       		.byte	0x23
 3735 0ff1 14       		.uleb128 0x14
 3736 0ff2 13       		.uleb128 0x13
 3737 0ff3 8B0A0000 		.4byte	.LASF227
 3738 0ff7 08       		.byte	0x8
 3739 0ff8 0C0F     		.2byte	0xf0c
 3740 0ffa A00C0000 		.4byte	0xca0
 3741 0ffe 02       		.byte	0x2
 3742 0fff 23       		.byte	0x23
 3743 1000 18       		.uleb128 0x18
 3744 1001 13       		.uleb128 0x13
 3745 1002 000C0000 		.4byte	.LASF228
 3746 1006 08       		.byte	0x8
 3747 1007 0D0F     		.2byte	0xf0d
 3748 1009 A00C0000 		.4byte	0xca0
 3749 100d 02       		.byte	0x2
 3750 100e 23       		.byte	0x23
 3751 100f 1C       		.uleb128 0x1c
 3752 1010 00       		.byte	0
 3753 1011 05       		.uleb128 0x5
 3754 1012 78030000 		.4byte	.LASF229
 3755 1016 08       		.byte	0x8
 3756 1017 0E0F     		.2byte	0xf0e
 3757 1019 8F0F0000 		.4byte	0xf8f
 3758 101d 1F       		.uleb128 0x1f
 3759 101e 10       		.byte	0x10
 3760 101f 08       		.byte	0x8
 3761 1020 100F     		.2byte	0xf10
 3762 1022 63100000 		.4byte	0x1063
 3763 1026 13       		.uleb128 0x13
 3764 1027 4C0B0000 		.4byte	.LASF230
ARM GAS  /tmp/ccCX0vdB.s 			page 103


 3765 102b 08       		.byte	0x8
 3766 102c 110F     		.2byte	0xf11
 3767 102e A00C0000 		.4byte	0xca0
 3768 1032 02       		.byte	0x2
 3769 1033 23       		.byte	0x23
 3770 1034 00       		.uleb128 0
 3771 1035 13       		.uleb128 0x13
 3772 1036 EC040000 		.4byte	.LASF231
 3773 103a 08       		.byte	0x8
 3774 103b 120F     		.2byte	0xf12
 3775 103d A00C0000 		.4byte	0xca0
 3776 1041 02       		.byte	0x2
 3777 1042 23       		.byte	0x23
 3778 1043 04       		.uleb128 0x4
 3779 1044 13       		.uleb128 0x13
 3780 1045 390B0000 		.4byte	.LASF232
 3781 1049 08       		.byte	0x8
 3782 104a 130F     		.2byte	0xf13
 3783 104c A00C0000 		.4byte	0xca0
 3784 1050 02       		.byte	0x2
 3785 1051 23       		.byte	0x23
 3786 1052 08       		.uleb128 0x8
 3787 1053 13       		.uleb128 0x13
 3788 1054 D70A0000 		.4byte	.LASF233
 3789 1058 08       		.byte	0x8
 3790 1059 140F     		.2byte	0xf14
 3791 105b A00C0000 		.4byte	0xca0
 3792 105f 02       		.byte	0x2
 3793 1060 23       		.byte	0x23
 3794 1061 0C       		.uleb128 0xc
 3795 1062 00       		.byte	0
 3796 1063 05       		.uleb128 0x5
 3797 1064 45090000 		.4byte	.LASF234
 3798 1068 08       		.byte	0x8
 3799 1069 150F     		.2byte	0xf15
 3800 106b 1D100000 		.4byte	0x101d
 3801 106f 20       		.uleb128 0x20
 3802 1070 8002     		.2byte	0x280
 3803 1072 08       		.byte	0x8
 3804 1073 170F     		.2byte	0xf17
 3805 1075 7C130000 		.4byte	0x137c
 3806 1079 13       		.uleb128 0x13
 3807 107a 11090000 		.4byte	.LASF235
 3808 107e 08       		.byte	0x8
 3809 107f 180F     		.2byte	0xf18
 3810 1081 A00C0000 		.4byte	0xca0
 3811 1085 02       		.byte	0x2
 3812 1086 23       		.byte	0x23
 3813 1087 00       		.uleb128 0
 3814 1088 13       		.uleb128 0x13
 3815 1089 C8020000 		.4byte	.LASF236
 3816 108d 08       		.byte	0x8
 3817 108e 190F     		.2byte	0xf19
 3818 1090 A00C0000 		.4byte	0xca0
 3819 1094 02       		.byte	0x2
 3820 1095 23       		.byte	0x23
 3821 1096 04       		.uleb128 0x4
ARM GAS  /tmp/ccCX0vdB.s 			page 104


 3822 1097 13       		.uleb128 0x13
 3823 1098 CF0A0000 		.4byte	.LASF237
 3824 109c 08       		.byte	0x8
 3825 109d 1A0F     		.2byte	0xf1a
 3826 109f A00C0000 		.4byte	0xca0
 3827 10a3 02       		.byte	0x2
 3828 10a4 23       		.byte	0x23
 3829 10a5 08       		.uleb128 0x8
 3830 10a6 13       		.uleb128 0x13
 3831 10a7 EC030000 		.4byte	.LASF238
 3832 10ab 08       		.byte	0x8
 3833 10ac 1B0F     		.2byte	0xf1b
 3834 10ae A50C0000 		.4byte	0xca5
 3835 10b2 02       		.byte	0x2
 3836 10b3 23       		.byte	0x23
 3837 10b4 0C       		.uleb128 0xc
 3838 10b5 13       		.uleb128 0x13
 3839 10b6 4C000000 		.4byte	.LASF239
 3840 10ba 08       		.byte	0x8
 3841 10bb 1C0F     		.2byte	0xf1c
 3842 10bd A00C0000 		.4byte	0xca0
 3843 10c1 02       		.byte	0x2
 3844 10c2 23       		.byte	0x23
 3845 10c3 10       		.uleb128 0x10
 3846 10c4 13       		.uleb128 0x13
 3847 10c5 1B060000 		.4byte	.LASF240
 3848 10c9 08       		.byte	0x8
 3849 10ca 1D0F     		.2byte	0xf1d
 3850 10cc A00C0000 		.4byte	0xca0
 3851 10d0 02       		.byte	0x2
 3852 10d1 23       		.byte	0x23
 3853 10d2 14       		.uleb128 0x14
 3854 10d3 13       		.uleb128 0x13
 3855 10d4 B6030000 		.4byte	.LASF241
 3856 10d8 08       		.byte	0x8
 3857 10d9 1E0F     		.2byte	0xf1e
 3858 10db A50C0000 		.4byte	0xca5
 3859 10df 02       		.byte	0x2
 3860 10e0 23       		.byte	0x23
 3861 10e1 18       		.uleb128 0x18
 3862 10e2 13       		.uleb128 0x13
 3863 10e3 93060000 		.4byte	.LASF242
 3864 10e7 08       		.byte	0x8
 3865 10e8 1F0F     		.2byte	0xf1f
 3866 10ea A50C0000 		.4byte	0xca5
 3867 10ee 02       		.byte	0x2
 3868 10ef 23       		.byte	0x23
 3869 10f0 1C       		.uleb128 0x1c
 3870 10f1 13       		.uleb128 0x13
 3871 10f2 30080000 		.4byte	.LASF243
 3872 10f6 08       		.byte	0x8
 3873 10f7 200F     		.2byte	0xf20
 3874 10f9 A00C0000 		.4byte	0xca0
 3875 10fd 02       		.byte	0x2
 3876 10fe 23       		.byte	0x23
 3877 10ff 20       		.uleb128 0x20
 3878 1100 13       		.uleb128 0x13
ARM GAS  /tmp/ccCX0vdB.s 			page 105


 3879 1101 66090000 		.4byte	.LASF192
 3880 1105 08       		.byte	0x8
 3881 1106 210F     		.2byte	0xf21
 3882 1108 7C130000 		.4byte	0x137c
 3883 110c 02       		.byte	0x2
 3884 110d 23       		.byte	0x23
 3885 110e 24       		.uleb128 0x24
 3886 110f 13       		.uleb128 0x13
 3887 1110 130C0000 		.4byte	.LASF244
 3888 1114 08       		.byte	0x8
 3889 1115 220F     		.2byte	0xf22
 3890 1117 A00C0000 		.4byte	0xca0
 3891 111b 02       		.byte	0x2
 3892 111c 23       		.byte	0x23
 3893 111d 28       		.uleb128 0x28
 3894 111e 13       		.uleb128 0x13
 3895 111f AA050000 		.4byte	.LASF245
 3896 1123 08       		.byte	0x8
 3897 1124 230F     		.2byte	0xf23
 3898 1126 A00C0000 		.4byte	0xca0
 3899 112a 02       		.byte	0x2
 3900 112b 23       		.byte	0x23
 3901 112c 2C       		.uleb128 0x2c
 3902 112d 13       		.uleb128 0x13
 3903 112e 9B030000 		.4byte	.LASF246
 3904 1132 08       		.byte	0x8
 3905 1133 240F     		.2byte	0xf24
 3906 1135 A00C0000 		.4byte	0xca0
 3907 1139 02       		.byte	0x2
 3908 113a 23       		.byte	0x23
 3909 113b 30       		.uleb128 0x30
 3910 113c 13       		.uleb128 0x13
 3911 113d 4D080000 		.4byte	.LASF247
 3912 1141 08       		.byte	0x8
 3913 1142 250F     		.2byte	0xf25
 3914 1144 A00C0000 		.4byte	0xca0
 3915 1148 02       		.byte	0x2
 3916 1149 23       		.byte	0x23
 3917 114a 34       		.uleb128 0x34
 3918 114b 13       		.uleb128 0x13
 3919 114c 24060000 		.4byte	.LASF248
 3920 1150 08       		.byte	0x8
 3921 1151 260F     		.2byte	0xf26
 3922 1153 A00C0000 		.4byte	0xca0
 3923 1157 02       		.byte	0x2
 3924 1158 23       		.byte	0x23
 3925 1159 38       		.uleb128 0x38
 3926 115a 13       		.uleb128 0x13
 3927 115b BF030000 		.4byte	.LASF249
 3928 115f 08       		.byte	0x8
 3929 1160 270F     		.2byte	0xf27
 3930 1162 A50C0000 		.4byte	0xca5
 3931 1166 02       		.byte	0x2
 3932 1167 23       		.byte	0x23
 3933 1168 3C       		.uleb128 0x3c
 3934 1169 13       		.uleb128 0x13
 3935 116a 9C060000 		.4byte	.LASF250
ARM GAS  /tmp/ccCX0vdB.s 			page 106


 3936 116e 08       		.byte	0x8
 3937 116f 280F     		.2byte	0xf28
 3938 1171 A50C0000 		.4byte	0xca5
 3939 1175 02       		.byte	0x2
 3940 1176 23       		.byte	0x23
 3941 1177 40       		.uleb128 0x40
 3942 1178 13       		.uleb128 0x13
 3943 1179 68030000 		.4byte	.LASF251
 3944 117d 08       		.byte	0x8
 3945 117e 290F     		.2byte	0xf29
 3946 1180 A00C0000 		.4byte	0xca0
 3947 1184 02       		.byte	0x2
 3948 1185 23       		.byte	0x23
 3949 1186 44       		.uleb128 0x44
 3950 1187 13       		.uleb128 0x13
 3951 1188 66020000 		.4byte	.LASF252
 3952 118c 08       		.byte	0x8
 3953 118d 2A0F     		.2byte	0xf2a
 3954 118f A00C0000 		.4byte	0xca0
 3955 1193 02       		.byte	0x2
 3956 1194 23       		.byte	0x23
 3957 1195 48       		.uleb128 0x48
 3958 1196 13       		.uleb128 0x13
 3959 1197 E4040000 		.4byte	.LASF253
 3960 119b 08       		.byte	0x8
 3961 119c 2B0F     		.2byte	0xf2b
 3962 119e A00C0000 		.4byte	0xca0
 3963 11a2 02       		.byte	0x2
 3964 11a3 23       		.byte	0x23
 3965 11a4 4C       		.uleb128 0x4c
 3966 11a5 13       		.uleb128 0x13
 3967 11a6 BC040000 		.4byte	.LASF254
 3968 11aa 08       		.byte	0x8
 3969 11ab 2C0F     		.2byte	0xf2c
 3970 11ad A00C0000 		.4byte	0xca0
 3971 11b1 02       		.byte	0x2
 3972 11b2 23       		.byte	0x23
 3973 11b3 50       		.uleb128 0x50
 3974 11b4 13       		.uleb128 0x13
 3975 11b5 EB070000 		.4byte	.LASF255
 3976 11b9 08       		.byte	0x8
 3977 11ba 2D0F     		.2byte	0xf2d
 3978 11bc A00C0000 		.4byte	0xca0
 3979 11c0 02       		.byte	0x2
 3980 11c1 23       		.byte	0x23
 3981 11c2 54       		.uleb128 0x54
 3982 11c3 13       		.uleb128 0x13
 3983 11c4 47070000 		.4byte	.LASF256
 3984 11c8 08       		.byte	0x8
 3985 11c9 2E0F     		.2byte	0xf2e
 3986 11cb A00C0000 		.4byte	0xca0
 3987 11cf 02       		.byte	0x2
 3988 11d0 23       		.byte	0x23
 3989 11d1 58       		.uleb128 0x58
 3990 11d2 13       		.uleb128 0x13
 3991 11d3 B4040000 		.4byte	.LASF257
 3992 11d7 08       		.byte	0x8
ARM GAS  /tmp/ccCX0vdB.s 			page 107


 3993 11d8 2F0F     		.2byte	0xf2f
 3994 11da A00C0000 		.4byte	0xca0
 3995 11de 02       		.byte	0x2
 3996 11df 23       		.byte	0x23
 3997 11e0 5C       		.uleb128 0x5c
 3998 11e1 13       		.uleb128 0x13
 3999 11e2 83070000 		.4byte	.LASF258
 4000 11e6 08       		.byte	0x8
 4001 11e7 300F     		.2byte	0xf30
 4002 11e9 A50C0000 		.4byte	0xca5
 4003 11ed 02       		.byte	0x2
 4004 11ee 23       		.byte	0x23
 4005 11ef 60       		.uleb128 0x60
 4006 11f0 13       		.uleb128 0x13
 4007 11f1 D9000000 		.4byte	.LASF259
 4008 11f5 08       		.byte	0x8
 4009 11f6 310F     		.2byte	0xf31
 4010 11f8 A00C0000 		.4byte	0xca0
 4011 11fc 02       		.byte	0x2
 4012 11fd 23       		.byte	0x23
 4013 11fe 64       		.uleb128 0x64
 4014 11ff 13       		.uleb128 0x13
 4015 1200 EE020000 		.4byte	.LASF260
 4016 1204 08       		.byte	0x8
 4017 1205 320F     		.2byte	0xf32
 4018 1207 A00C0000 		.4byte	0xca0
 4019 120b 02       		.byte	0x2
 4020 120c 23       		.byte	0x23
 4021 120d 68       		.uleb128 0x68
 4022 120e 13       		.uleb128 0x13
 4023 120f C0020000 		.4byte	.LASF261
 4024 1213 08       		.byte	0x8
 4025 1214 330F     		.2byte	0xf33
 4026 1216 A00C0000 		.4byte	0xca0
 4027 121a 02       		.byte	0x2
 4028 121b 23       		.byte	0x23
 4029 121c 6C       		.uleb128 0x6c
 4030 121d 13       		.uleb128 0x13
 4031 121e 70090000 		.4byte	.LASF198
 4032 1222 08       		.byte	0x8
 4033 1223 340F     		.2byte	0xf34
 4034 1225 81130000 		.4byte	0x1381
 4035 1229 02       		.byte	0x2
 4036 122a 23       		.byte	0x23
 4037 122b 70       		.uleb128 0x70
 4038 122c 13       		.uleb128 0x13
 4039 122d C8080000 		.4byte	.LASF262
 4040 1231 08       		.byte	0x8
 4041 1232 350F     		.2byte	0xf35
 4042 1234 86130000 		.4byte	0x1386
 4043 1238 02       		.byte	0x2
 4044 1239 23       		.byte	0x23
 4045 123a 7C       		.uleb128 0x7c
 4046 123b 13       		.uleb128 0x13
 4047 123c E8000000 		.4byte	.LASF205
 4048 1240 08       		.byte	0x8
 4049 1241 360F     		.2byte	0xf36
ARM GAS  /tmp/ccCX0vdB.s 			page 108


 4050 1243 8B130000 		.4byte	0x138b
 4051 1247 03       		.byte	0x3
 4052 1248 23       		.byte	0x23
 4053 1249 8401     		.uleb128 0x84
 4054 124b 13       		.uleb128 0x13
 4055 124c 81020000 		.4byte	.LASF263
 4056 1250 08       		.byte	0x8
 4057 1251 370F     		.2byte	0xf37
 4058 1253 A00C0000 		.4byte	0xca0
 4059 1257 03       		.byte	0x3
 4060 1258 23       		.byte	0x23
 4061 1259 B001     		.uleb128 0xb0
 4062 125b 13       		.uleb128 0x13
 4063 125c 7F090000 		.4byte	.LASF207
 4064 1260 08       		.byte	0x8
 4065 1261 380F     		.2byte	0xf38
 4066 1263 90130000 		.4byte	0x1390
 4067 1267 03       		.byte	0x3
 4068 1268 23       		.byte	0x23
 4069 1269 B401     		.uleb128 0xb4
 4070 126b 13       		.uleb128 0x13
 4071 126c 52060000 		.4byte	.LASF264
 4072 1270 08       		.byte	0x8
 4073 1271 390F     		.2byte	0xf39
 4074 1273 A00C0000 		.4byte	0xca0
 4075 1277 03       		.byte	0x3
 4076 1278 23       		.byte	0x23
 4077 1279 E401     		.uleb128 0xe4
 4078 127b 13       		.uleb128 0x13
 4079 127c 71000000 		.4byte	.LASF265
 4080 1280 08       		.byte	0x8
 4081 1281 3A0F     		.2byte	0xf3a
 4082 1283 A50C0000 		.4byte	0xca5
 4083 1287 03       		.byte	0x3
 4084 1288 23       		.byte	0x23
 4085 1289 E801     		.uleb128 0xe8
 4086 128b 13       		.uleb128 0x13
 4087 128c 89090000 		.4byte	.LASF210
 4088 1290 08       		.byte	0x8
 4089 1291 3B0F     		.2byte	0xf3b
 4090 1293 95130000 		.4byte	0x1395
 4091 1297 03       		.byte	0x3
 4092 1298 23       		.byte	0x23
 4093 1299 EC01     		.uleb128 0xec
 4094 129b 13       		.uleb128 0x13
 4095 129c 770B0000 		.4byte	.LASF266
 4096 12a0 08       		.byte	0x8
 4097 12a1 3C0F     		.2byte	0xf3c
 4098 12a3 A00C0000 		.4byte	0xca0
 4099 12a7 03       		.byte	0x3
 4100 12a8 23       		.byte	0x23
 4101 12a9 8002     		.uleb128 0x100
 4102 12ab 13       		.uleb128 0x13
 4103 12ac 01060000 		.4byte	.LASF267
 4104 12b0 08       		.byte	0x8
 4105 12b1 3D0F     		.2byte	0xf3d
 4106 12b3 A00C0000 		.4byte	0xca0
ARM GAS  /tmp/ccCX0vdB.s 			page 109


 4107 12b7 03       		.byte	0x3
 4108 12b8 23       		.byte	0x23
 4109 12b9 8402     		.uleb128 0x104
 4110 12bb 13       		.uleb128 0x13
 4111 12bc D6030000 		.4byte	.LASF268
 4112 12c0 08       		.byte	0x8
 4113 12c1 3E0F     		.2byte	0xf3e
 4114 12c3 A00C0000 		.4byte	0xca0
 4115 12c7 03       		.byte	0x3
 4116 12c8 23       		.byte	0x23
 4117 12c9 8802     		.uleb128 0x108
 4118 12cb 13       		.uleb128 0x13
 4119 12cc C5000000 		.4byte	.LASF269
 4120 12d0 08       		.byte	0x8
 4121 12d1 3F0F     		.2byte	0xf3f
 4122 12d3 A00C0000 		.4byte	0xca0
 4123 12d7 03       		.byte	0x3
 4124 12d8 23       		.byte	0x23
 4125 12d9 8C02     		.uleb128 0x10c
 4126 12db 13       		.uleb128 0x13
 4127 12dc 21000000 		.4byte	.LASF270
 4128 12e0 08       		.byte	0x8
 4129 12e1 400F     		.2byte	0xf40
 4130 12e3 A00C0000 		.4byte	0xca0
 4131 12e7 03       		.byte	0x3
 4132 12e8 23       		.byte	0x23
 4133 12e9 9002     		.uleb128 0x110
 4134 12eb 13       		.uleb128 0x13
 4135 12ec 33010000 		.4byte	.LASF271
 4136 12f0 08       		.byte	0x8
 4137 12f1 410F     		.2byte	0xf41
 4138 12f3 A00C0000 		.4byte	0xca0
 4139 12f7 03       		.byte	0x3
 4140 12f8 23       		.byte	0x23
 4141 12f9 9402     		.uleb128 0x114
 4142 12fb 13       		.uleb128 0x13
 4143 12fc 5F030000 		.4byte	.LASF272
 4144 1300 08       		.byte	0x8
 4145 1301 420F     		.2byte	0xf42
 4146 1303 A00C0000 		.4byte	0xca0
 4147 1307 03       		.byte	0x3
 4148 1308 23       		.byte	0x23
 4149 1309 9802     		.uleb128 0x118
 4150 130b 13       		.uleb128 0x13
 4151 130c 31050000 		.4byte	.LASF273
 4152 1310 08       		.byte	0x8
 4153 1311 430F     		.2byte	0xf43
 4154 1313 A00C0000 		.4byte	0xca0
 4155 1317 03       		.byte	0x3
 4156 1318 23       		.byte	0x23
 4157 1319 9C02     		.uleb128 0x11c
 4158 131b 13       		.uleb128 0x13
 4159 131c BD090000 		.4byte	.LASF274
 4160 1320 08       		.byte	0x8
 4161 1321 440F     		.2byte	0xf44
 4162 1323 A00C0000 		.4byte	0xca0
 4163 1327 03       		.byte	0x3
ARM GAS  /tmp/ccCX0vdB.s 			page 110


 4164 1328 23       		.byte	0x23
 4165 1329 A002     		.uleb128 0x120
 4166 132b 13       		.uleb128 0x13
 4167 132c AD030000 		.4byte	.LASF275
 4168 1330 08       		.byte	0x8
 4169 1331 450F     		.2byte	0xf45
 4170 1333 A50C0000 		.4byte	0xca5
 4171 1337 03       		.byte	0x3
 4172 1338 23       		.byte	0x23
 4173 1339 A402     		.uleb128 0x124
 4174 133b 13       		.uleb128 0x13
 4175 133c 93090000 		.4byte	.LASF276
 4176 1340 08       		.byte	0x8
 4177 1341 460F     		.2byte	0xf46
 4178 1343 9A130000 		.4byte	0x139a
 4179 1347 03       		.byte	0x3
 4180 1348 23       		.byte	0x23
 4181 1349 A802     		.uleb128 0x128
 4182 134b 13       		.uleb128 0x13
 4183 134c 140A0000 		.4byte	.LASF277
 4184 1350 08       		.byte	0x8
 4185 1351 470F     		.2byte	0xf47
 4186 1353 9F130000 		.4byte	0x139f
 4187 1357 03       		.byte	0x3
 4188 1358 23       		.byte	0x23
 4189 1359 B002     		.uleb128 0x130
 4190 135b 13       		.uleb128 0x13
 4191 135c F2000000 		.4byte	.LASF278
 4192 1360 08       		.byte	0x8
 4193 1361 480F     		.2byte	0xf48
 4194 1363 BF130000 		.4byte	0x13bf
 4195 1367 03       		.byte	0x3
 4196 1368 23       		.byte	0x23
 4197 1369 B003     		.uleb128 0x1b0
 4198 136b 13       		.uleb128 0x13
 4199 136c 5B060000 		.4byte	.LASF279
 4200 1370 08       		.byte	0x8
 4201 1371 490F     		.2byte	0xf49
 4202 1373 C4130000 		.4byte	0x13c4
 4203 1377 03       		.byte	0x3
 4204 1378 23       		.byte	0x23
 4205 1379 8004     		.uleb128 0x200
 4206 137b 00       		.byte	0
 4207 137c 19       		.uleb128 0x19
 4208 137d E00E0000 		.4byte	0xee0
 4209 1381 19       		.uleb128 0x19
 4210 1382 7F0F0000 		.4byte	0xf7f
 4211 1386 19       		.uleb128 0x19
 4212 1387 F50E0000 		.4byte	0xef5
 4213 138b 19       		.uleb128 0x19
 4214 138c 6F0F0000 		.4byte	0xf6f
 4215 1390 19       		.uleb128 0x19
 4216 1391 5F0F0000 		.4byte	0xf5f
 4217 1395 19       		.uleb128 0x19
 4218 1396 2E0F0000 		.4byte	0xf2e
 4219 139a 19       		.uleb128 0x19
 4220 139b F50E0000 		.4byte	0xef5
ARM GAS  /tmp/ccCX0vdB.s 			page 111


 4221 139f 08       		.uleb128 0x8
 4222 13a0 63100000 		.4byte	0x1063
 4223 13a4 AF130000 		.4byte	0x13af
 4224 13a8 09       		.uleb128 0x9
 4225 13a9 4C000000 		.4byte	0x4c
 4226 13ad 07       		.byte	0x7
 4227 13ae 00       		.byte	0
 4228 13af 08       		.uleb128 0x8
 4229 13b0 01010000 		.4byte	0x101
 4230 13b4 BF130000 		.4byte	0x13bf
 4231 13b8 09       		.uleb128 0x9
 4232 13b9 4C000000 		.4byte	0x4c
 4233 13bd 13       		.byte	0x13
 4234 13be 00       		.byte	0
 4235 13bf 19       		.uleb128 0x19
 4236 13c0 AF130000 		.4byte	0x13af
 4237 13c4 08       		.uleb128 0x8
 4238 13c5 11100000 		.4byte	0x1011
 4239 13c9 D4130000 		.4byte	0x13d4
 4240 13cd 09       		.uleb128 0x9
 4241 13ce 4C000000 		.4byte	0x4c
 4242 13d2 03       		.byte	0x3
 4243 13d3 00       		.byte	0
 4244 13d4 1E       		.uleb128 0x1e
 4245 13d5 50776D00 		.ascii	"Pwm\000"
 4246 13d9 08       		.byte	0x8
 4247 13da 4A0F     		.2byte	0xf4a
 4248 13dc 6F100000 		.4byte	0x106f
 4249 13e0 1F       		.uleb128 0x1f
 4250 13e1 40       		.byte	0x40
 4251 13e2 08       		.byte	0x8
 4252 13e3 4B15     		.2byte	0x154b
 4253 13e5 AD140000 		.4byte	0x14ad
 4254 13e9 13       		.uleb128 0x13
 4255 13ea 95010000 		.4byte	.LASF280
 4256 13ee 08       		.byte	0x8
 4257 13ef 4C15     		.2byte	0x154c
 4258 13f1 A00C0000 		.4byte	0xca0
 4259 13f5 02       		.byte	0x2
 4260 13f6 23       		.byte	0x23
 4261 13f7 00       		.uleb128 0
 4262 13f8 13       		.uleb128 0x13
 4263 13f9 D8050000 		.4byte	.LASF281
 4264 13fd 08       		.byte	0x8
 4265 13fe 4D15     		.2byte	0x154d
 4266 1400 A00C0000 		.4byte	0xca0
 4267 1404 02       		.byte	0x2
 4268 1405 23       		.byte	0x23
 4269 1406 04       		.uleb128 0x4
 4270 1407 13       		.uleb128 0x13
 4271 1408 660B0000 		.4byte	.LASF282
 4272 140c 08       		.byte	0x8
 4273 140d 4E15     		.2byte	0x154e
 4274 140f A00C0000 		.4byte	0xca0
 4275 1413 02       		.byte	0x2
 4276 1414 23       		.byte	0x23
 4277 1415 08       		.uleb128 0x8
ARM GAS  /tmp/ccCX0vdB.s 			page 112


 4278 1416 13       		.uleb128 0x13
 4279 1417 66090000 		.4byte	.LASF192
 4280 141b 08       		.byte	0x8
 4281 141c 4F15     		.2byte	0x154f
 4282 141e AD140000 		.4byte	0x14ad
 4283 1422 02       		.byte	0x2
 4284 1423 23       		.byte	0x23
 4285 1424 0C       		.uleb128 0xc
 4286 1425 13       		.uleb128 0x13
 4287 1426 B7090000 		.4byte	.LASF283
 4288 142a 08       		.byte	0x8
 4289 142b 5015     		.2byte	0x1550
 4290 142d A00C0000 		.4byte	0xca0
 4291 1431 02       		.byte	0x2
 4292 1432 23       		.byte	0x23
 4293 1433 10       		.uleb128 0x10
 4294 1434 13       		.uleb128 0x13
 4295 1435 17030000 		.4byte	.LASF284
 4296 1439 08       		.byte	0x8
 4297 143a 5115     		.2byte	0x1551
 4298 143c A00C0000 		.4byte	0xca0
 4299 1440 02       		.byte	0x2
 4300 1441 23       		.byte	0x23
 4301 1442 14       		.uleb128 0x14
 4302 1443 13       		.uleb128 0x13
 4303 1444 1D030000 		.4byte	.LASF285
 4304 1448 08       		.byte	0x8
 4305 1449 5215     		.2byte	0x1552
 4306 144b A00C0000 		.4byte	0xca0
 4307 144f 02       		.byte	0x2
 4308 1450 23       		.byte	0x23
 4309 1451 18       		.uleb128 0x18
 4310 1452 13       		.uleb128 0x13
 4311 1453 23030000 		.4byte	.LASF286
 4312 1457 08       		.byte	0x8
 4313 1458 5315     		.2byte	0x1553
 4314 145a A00C0000 		.4byte	0xca0
 4315 145e 02       		.byte	0x2
 4316 145f 23       		.byte	0x23
 4317 1460 1C       		.uleb128 0x1c
 4318 1461 13       		.uleb128 0x13
 4319 1462 A7030000 		.4byte	.LASF287
 4320 1466 08       		.byte	0x8
 4321 1467 5415     		.2byte	0x1554
 4322 1469 A00C0000 		.4byte	0xca0
 4323 146d 02       		.byte	0x2
 4324 146e 23       		.byte	0x23
 4325 146f 20       		.uleb128 0x20
 4326 1470 13       		.uleb128 0x13
 4327 1471 0F050000 		.4byte	.LASF288
 4328 1475 08       		.byte	0x8
 4329 1476 5515     		.2byte	0x1555
 4330 1478 A00C0000 		.4byte	0xca0
 4331 147c 02       		.byte	0x2
 4332 147d 23       		.byte	0x23
 4333 147e 24       		.uleb128 0x24
 4334 147f 13       		.uleb128 0x13
ARM GAS  /tmp/ccCX0vdB.s 			page 113


 4335 1480 52040000 		.4byte	.LASF289
 4336 1484 08       		.byte	0x8
 4337 1485 5615     		.2byte	0x1556
 4338 1487 A00C0000 		.4byte	0xca0
 4339 148b 02       		.byte	0x2
 4340 148c 23       		.byte	0x23
 4341 148d 28       		.uleb128 0x28
 4342 148e 13       		.uleb128 0x13
 4343 148f 12080000 		.4byte	.LASF290
 4344 1493 08       		.byte	0x8
 4345 1494 5715     		.2byte	0x1557
 4346 1496 A00C0000 		.4byte	0xca0
 4347 149a 02       		.byte	0x2
 4348 149b 23       		.byte	0x23
 4349 149c 2C       		.uleb128 0x2c
 4350 149d 13       		.uleb128 0x13
 4351 149e 70090000 		.4byte	.LASF198
 4352 14a2 08       		.byte	0x8
 4353 14a3 5815     		.2byte	0x1558
 4354 14a5 B2140000 		.4byte	0x14b2
 4355 14a9 02       		.byte	0x2
 4356 14aa 23       		.byte	0x23
 4357 14ab 30       		.uleb128 0x30
 4358 14ac 00       		.byte	0
 4359 14ad 19       		.uleb128 0x19
 4360 14ae E00E0000 		.4byte	0xee0
 4361 14b2 19       		.uleb128 0x19
 4362 14b3 4F0F0000 		.4byte	0xf4f
 4363 14b7 05       		.uleb128 0x5
 4364 14b8 77020000 		.4byte	.LASF291
 4365 14bc 08       		.byte	0x8
 4366 14bd 5915     		.2byte	0x1559
 4367 14bf E0130000 		.4byte	0x13e0
 4368 14c3 1F       		.uleb128 0x1f
 4369 14c4 E8       		.byte	0xe8
 4370 14c5 08       		.byte	0x8
 4371 14c6 5B15     		.2byte	0x155b
 4372 14c8 6C150000 		.4byte	0x156c
 4373 14cc 13       		.uleb128 0x13
 4374 14cd 42010000 		.4byte	.LASF292
 4375 14d1 08       		.byte	0x8
 4376 14d2 5C15     		.2byte	0x155c
 4377 14d4 6C150000 		.4byte	0x156c
 4378 14d8 02       		.byte	0x2
 4379 14d9 23       		.byte	0x23
 4380 14da 00       		.uleb128 0
 4381 14db 13       		.uleb128 0x13
 4382 14dc C70B0000 		.4byte	.LASF293
 4383 14e0 08       		.byte	0x8
 4384 14e1 5D15     		.2byte	0x155d
 4385 14e3 A00C0000 		.4byte	0xca0
 4386 14e7 03       		.byte	0x3
 4387 14e8 23       		.byte	0x23
 4388 14e9 C001     		.uleb128 0xc0
 4389 14eb 13       		.uleb128 0x13
 4390 14ec 43030000 		.4byte	.LASF294
 4391 14f0 08       		.byte	0x8
ARM GAS  /tmp/ccCX0vdB.s 			page 114


 4392 14f1 5E15     		.2byte	0x155e
 4393 14f3 A00C0000 		.4byte	0xca0
 4394 14f7 03       		.byte	0x3
 4395 14f8 23       		.byte	0x23
 4396 14f9 C401     		.uleb128 0xc4
 4397 14fb 13       		.uleb128 0x13
 4398 14fc 620A0000 		.4byte	.LASF295
 4399 1500 08       		.byte	0x8
 4400 1501 5F15     		.2byte	0x155f
 4401 1503 A00C0000 		.4byte	0xca0
 4402 1507 03       		.byte	0x3
 4403 1508 23       		.byte	0x23
 4404 1509 C801     		.uleb128 0xc8
 4405 150b 13       		.uleb128 0x13
 4406 150c 0C0A0000 		.4byte	.LASF296
 4407 1510 08       		.byte	0x8
 4408 1511 6015     		.2byte	0x1560
 4409 1513 A00C0000 		.4byte	0xca0
 4410 1517 03       		.byte	0x3
 4411 1518 23       		.byte	0x23
 4412 1519 CC01     		.uleb128 0xcc
 4413 151b 13       		.uleb128 0x13
 4414 151c 22010000 		.4byte	.LASF297
 4415 1520 08       		.byte	0x8
 4416 1521 6115     		.2byte	0x1561
 4417 1523 A50C0000 		.4byte	0xca5
 4418 1527 03       		.byte	0x3
 4419 1528 23       		.byte	0x23
 4420 1529 D001     		.uleb128 0xd0
 4421 152b 13       		.uleb128 0x13
 4422 152c 70030000 		.4byte	.LASF298
 4423 1530 08       		.byte	0x8
 4424 1531 6215     		.2byte	0x1562
 4425 1533 A50C0000 		.4byte	0xca5
 4426 1537 03       		.byte	0x3
 4427 1538 23       		.byte	0x23
 4428 1539 D401     		.uleb128 0xd4
 4429 153b 13       		.uleb128 0x13
 4430 153c E1000000 		.4byte	.LASF299
 4431 1540 08       		.byte	0x8
 4432 1541 6315     		.2byte	0x1563
 4433 1543 A00C0000 		.4byte	0xca0
 4434 1547 03       		.byte	0x3
 4435 1548 23       		.byte	0x23
 4436 1549 D801     		.uleb128 0xd8
 4437 154b 13       		.uleb128 0x13
 4438 154c 66090000 		.4byte	.LASF192
 4439 1550 08       		.byte	0x8
 4440 1551 6415     		.2byte	0x1564
 4441 1553 7C150000 		.4byte	0x157c
 4442 1557 03       		.byte	0x3
 4443 1558 23       		.byte	0x23
 4444 1559 DC01     		.uleb128 0xdc
 4445 155b 13       		.uleb128 0x13
 4446 155c C70A0000 		.4byte	.LASF300
 4447 1560 08       		.byte	0x8
 4448 1561 6515     		.2byte	0x1565
ARM GAS  /tmp/ccCX0vdB.s 			page 115


 4449 1563 A00C0000 		.4byte	0xca0
 4450 1567 03       		.byte	0x3
 4451 1568 23       		.byte	0x23
 4452 1569 E401     		.uleb128 0xe4
 4453 156b 00       		.byte	0
 4454 156c 08       		.uleb128 0x8
 4455 156d B7140000 		.4byte	0x14b7
 4456 1571 7C150000 		.4byte	0x157c
 4457 1575 09       		.uleb128 0x9
 4458 1576 4C000000 		.4byte	0x4c
 4459 157a 02       		.byte	0x2
 4460 157b 00       		.byte	0
 4461 157c 19       		.uleb128 0x19
 4462 157d F50E0000 		.4byte	0xef5
 4463 1581 1E       		.uleb128 0x1e
 4464 1582 546300   		.ascii	"Tc\000"
 4465 1585 08       		.byte	0x8
 4466 1586 6615     		.2byte	0x1566
 4467 1588 C3140000 		.4byte	0x14c3
 4468 158c 1F       		.uleb128 0x1f
 4469 158d 0C       		.byte	0xc
 4470 158e 08       		.byte	0x8
 4471 158f 7C19     		.2byte	0x197c
 4472 1591 C3150000 		.4byte	0x15c3
 4473 1595 13       		.uleb128 0x13
 4474 1596 F6020000 		.4byte	.LASF301
 4475 159a 08       		.byte	0x8
 4476 159b 7D19     		.2byte	0x197d
 4477 159d A00C0000 		.4byte	0xca0
 4478 15a1 02       		.byte	0x2
 4479 15a2 23       		.byte	0x23
 4480 15a3 00       		.uleb128 0
 4481 15a4 13       		.uleb128 0x13
 4482 15a5 19070000 		.4byte	.LASF302
 4483 15a9 08       		.byte	0x8
 4484 15aa 7E19     		.2byte	0x197e
 4485 15ac A00C0000 		.4byte	0xca0
 4486 15b0 02       		.byte	0x2
 4487 15b1 23       		.byte	0x23
 4488 15b2 04       		.uleb128 0x4
 4489 15b3 13       		.uleb128 0x13
 4490 15b4 A6090000 		.4byte	.LASF303
 4491 15b8 08       		.byte	0x8
 4492 15b9 7F19     		.2byte	0x197f
 4493 15bb A50C0000 		.4byte	0xca5
 4494 15bf 02       		.byte	0x2
 4495 15c0 23       		.byte	0x23
 4496 15c1 08       		.uleb128 0x8
 4497 15c2 00       		.byte	0
 4498 15c3 1E       		.uleb128 0x1e
 4499 15c4 57647400 		.ascii	"Wdt\000"
 4500 15c8 08       		.byte	0x8
 4501 15c9 8019     		.2byte	0x1980
 4502 15cb 8C150000 		.4byte	0x158c
 4503 15cf 04       		.uleb128 0x4
 4504 15d0 8B050000 		.4byte	.LASF304
 4505 15d4 09       		.byte	0x9
ARM GAS  /tmp/ccCX0vdB.s 			page 116


 4506 15d5 10       		.byte	0x10
 4507 15d6 AE080000 		.4byte	0x8ae
 4508 15da 21       		.uleb128 0x21
 4509 15db 01       		.byte	0x1
 4510 15dc 09       		.byte	0x9
 4511 15dd 12       		.byte	0x12
 4512 15de FB150000 		.4byte	0x15fb
 4513 15e2 22       		.uleb128 0x22
 4514 15e3 4F464600 		.ascii	"OFF\000"
 4515 15e7 00       		.sleb128 0
 4516 15e8 1B       		.uleb128 0x1b
 4517 15e9 9B070000 		.4byte	.LASF305
 4518 15ed 01       		.sleb128 1
 4519 15ee 1B       		.uleb128 0x1b
 4520 15ef 90010000 		.4byte	.LASF306
 4521 15f3 02       		.sleb128 2
 4522 15f4 1B       		.uleb128 0x1b
 4523 15f5 E3060000 		.4byte	.LASF307
 4524 15f9 03       		.sleb128 3
 4525 15fa 00       		.byte	0
 4526 15fb 04       		.uleb128 0x4
 4527 15fc 88060000 		.4byte	.LASF308
 4528 1600 09       		.byte	0x9
 4529 1601 12       		.byte	0x12
 4530 1602 DA150000 		.4byte	0x15da
 4531 1606 0D       		.uleb128 0xd
 4532 1607 D5020000 		.4byte	.LASF309
 4533 160b 2C       		.byte	0x2c
 4534 160c 09       		.byte	0x9
 4535 160d 15       		.byte	0x15
 4536 160e D1160000 		.4byte	0x16d1
 4537 1612 0B       		.uleb128 0xb
 4538 1613 4C0A0000 		.4byte	.LASF310
 4539 1617 09       		.byte	0x9
 4540 1618 16       		.byte	0x16
 4541 1619 FB150000 		.4byte	0x15fb
 4542 161d 02       		.byte	0x2
 4543 161e 23       		.byte	0x23
 4544 161f 00       		.uleb128 0
 4545 1620 0E       		.uleb128 0xe
 4546 1621 535000   		.ascii	"SP\000"
 4547 1624 09       		.byte	0x9
 4548 1625 17       		.byte	0x17
 4549 1626 CF150000 		.4byte	0x15cf
 4550 162a 02       		.byte	0x2
 4551 162b 23       		.byte	0x23
 4552 162c 02       		.uleb128 0x2
 4553 162d 0E       		.uleb128 0xe
 4554 162e 72535000 		.ascii	"rSP\000"
 4555 1632 09       		.byte	0x9
 4556 1633 18       		.byte	0x18
 4557 1634 CF150000 		.4byte	0x15cf
 4558 1638 02       		.byte	0x2
 4559 1639 23       		.byte	0x23
 4560 163a 04       		.uleb128 0x4
 4561 163b 0B       		.uleb128 0xb
 4562 163c 89030000 		.4byte	.LASF311
ARM GAS  /tmp/ccCX0vdB.s 			page 117


 4563 1640 09       		.byte	0x9
 4564 1641 19       		.byte	0x19
 4565 1642 45000000 		.4byte	0x45
 4566 1646 02       		.byte	0x2
 4567 1647 23       		.byte	0x23
 4568 1648 08       		.uleb128 0x8
 4569 1649 0E       		.uleb128 0xe
 4570 164a 4B7000   		.ascii	"Kp\000"
 4571 164d 09       		.byte	0x9
 4572 164e 1B       		.byte	0x1b
 4573 164f CF150000 		.4byte	0x15cf
 4574 1653 02       		.byte	0x2
 4575 1654 23       		.byte	0x23
 4576 1655 0C       		.uleb128 0xc
 4577 1656 0E       		.uleb128 0xe
 4578 1657 4B6900   		.ascii	"Ki\000"
 4579 165a 09       		.byte	0x9
 4580 165b 1C       		.byte	0x1c
 4581 165c CF150000 		.4byte	0x15cf
 4582 1660 02       		.byte	0x2
 4583 1661 23       		.byte	0x23
 4584 1662 0E       		.uleb128 0xe
 4585 1663 0E       		.uleb128 0xe
 4586 1664 4B6400   		.ascii	"Kd\000"
 4587 1667 09       		.byte	0x9
 4588 1668 1D       		.byte	0x1d
 4589 1669 CF150000 		.4byte	0x15cf
 4590 166d 02       		.byte	0x2
 4591 166e 23       		.byte	0x23
 4592 166f 10       		.uleb128 0x10
 4593 1670 0E       		.uleb128 0xe
 4594 1671 5F6500   		.ascii	"_e\000"
 4595 1674 09       		.byte	0x9
 4596 1675 1F       		.byte	0x1f
 4597 1676 45000000 		.4byte	0x45
 4598 167a 02       		.byte	0x2
 4599 167b 23       		.byte	0x23
 4600 167c 14       		.uleb128 0x14
 4601 167d 0E       		.uleb128 0xe
 4602 167e 5F647800 		.ascii	"_dx\000"
 4603 1682 09       		.byte	0x9
 4604 1683 20       		.byte	0x20
 4605 1684 45000000 		.4byte	0x45
 4606 1688 02       		.byte	0x2
 4607 1689 23       		.byte	0x23
 4608 168a 18       		.uleb128 0x18
 4609 168b 0E       		.uleb128 0xe
 4610 168c 5F646500 		.ascii	"_de\000"
 4611 1690 09       		.byte	0x9
 4612 1691 21       		.byte	0x21
 4613 1692 45000000 		.4byte	0x45
 4614 1696 02       		.byte	0x2
 4615 1697 23       		.byte	0x23
 4616 1698 1C       		.uleb128 0x1c
 4617 1699 0B       		.uleb128 0xb
 4618 169a DE060000 		.4byte	.LASF312
 4619 169e 09       		.byte	0x9
ARM GAS  /tmp/ccCX0vdB.s 			page 118


 4620 169f 22       		.byte	0x22
 4621 16a0 45000000 		.4byte	0x45
 4622 16a4 02       		.byte	0x2
 4623 16a5 23       		.byte	0x23
 4624 16a6 20       		.uleb128 0x20
 4625 16a7 0E       		.uleb128 0xe
 4626 16a8 5F7800   		.ascii	"_x\000"
 4627 16ab 09       		.byte	0x9
 4628 16ac 23       		.byte	0x23
 4629 16ad CF150000 		.4byte	0x15cf
 4630 16b1 02       		.byte	0x2
 4631 16b2 23       		.byte	0x23
 4632 16b3 24       		.uleb128 0x24
 4633 16b4 0B       		.uleb128 0xb
 4634 16b5 33030000 		.4byte	.LASF313
 4635 16b9 09       		.byte	0x9
 4636 16ba 25       		.byte	0x25
 4637 16bb 37000000 		.4byte	0x37
 4638 16bf 02       		.byte	0x2
 4639 16c0 23       		.byte	0x23
 4640 16c1 26       		.uleb128 0x26
 4641 16c2 0B       		.uleb128 0xb
 4642 16c3 70010000 		.4byte	.LASF314
 4643 16c7 09       		.byte	0x9
 4644 16c8 27       		.byte	0x27
 4645 16c9 15170000 		.4byte	0x1715
 4646 16cd 02       		.byte	0x2
 4647 16ce 23       		.byte	0x23
 4648 16cf 28       		.uleb128 0x28
 4649 16d0 00       		.byte	0
 4650 16d1 0D       		.uleb128 0xd
 4651 16d2 76050000 		.4byte	.LASF315
 4652 16d6 10       		.byte	0x10
 4653 16d7 09       		.byte	0x9
 4654 16d8 2B       		.byte	0x2b
 4655 16d9 15170000 		.4byte	0x1715
 4656 16dd 0B       		.uleb128 0xb
 4657 16de DE030000 		.4byte	.LASF316
 4658 16e2 09       		.byte	0x9
 4659 16e3 2C       		.byte	0x2c
 4660 16e4 1B170000 		.4byte	0x171b
 4661 16e8 02       		.byte	0x2
 4662 16e9 23       		.byte	0x23
 4663 16ea 00       		.uleb128 0
 4664 16eb 0B       		.uleb128 0xb
 4665 16ec 33030000 		.4byte	.LASF313
 4666 16f0 09       		.byte	0x9
 4667 16f1 2D       		.byte	0x2d
 4668 16f2 45000000 		.4byte	0x45
 4669 16f6 02       		.byte	0x2
 4670 16f7 23       		.byte	0x23
 4671 16f8 04       		.uleb128 0x4
 4672 16f9 0E       		.uleb128 0xe
 4673 16fa 6F6E00   		.ascii	"on\000"
 4674 16fd 09       		.byte	0x9
 4675 16fe 2E       		.byte	0x2e
 4676 16ff 45000000 		.4byte	0x45
ARM GAS  /tmp/ccCX0vdB.s 			page 119


 4677 1703 02       		.byte	0x2
 4678 1704 23       		.byte	0x23
 4679 1705 08       		.uleb128 0x8
 4680 1706 0E       		.uleb128 0xe
 4681 1707 6F666600 		.ascii	"off\000"
 4682 170b 09       		.byte	0x9
 4683 170c 2F       		.byte	0x2f
 4684 170d 45000000 		.4byte	0x45
 4685 1711 02       		.byte	0x2
 4686 1712 23       		.byte	0x23
 4687 1713 0C       		.uleb128 0xc
 4688 1714 00       		.byte	0
 4689 1715 0F       		.uleb128 0xf
 4690 1716 04       		.byte	0x4
 4691 1717 D1160000 		.4byte	0x16d1
 4692 171b 0F       		.uleb128 0xf
 4693 171c 04       		.byte	0x4
 4694 171d 45000000 		.4byte	0x45
 4695 1721 23       		.uleb128 0x23
 4696 1722 09000000 		.4byte	.LASF317
 4697 1726 01       		.byte	0x1
 4698 1727 DE05     		.2byte	0x5de
 4699 1729 01       		.byte	0x1
 4700 172a 00000000 		.4byte	.LFB14
 4701 172e 36000000 		.4byte	.LFE14
 4702 1732 00000000 		.4byte	.LLST0
 4703 1736 4A170000 		.4byte	0x174a
 4704 173a 24       		.uleb128 0x24
 4705 173b FA010000 		.4byte	.LASF319
 4706 173f 01       		.byte	0x1
 4707 1740 DE05     		.2byte	0x5de
 4708 1742 D0090000 		.4byte	0x9d0
 4709 1746 02       		.byte	0x2
 4710 1747 91       		.byte	0x91
 4711 1748 77       		.sleb128 -9
 4712 1749 00       		.byte	0
 4713 174a 23       		.uleb128 0x23
 4714 174b 11020000 		.4byte	.LASF318
 4715 174f 01       		.byte	0x1
 4716 1750 3206     		.2byte	0x632
 4717 1752 01       		.byte	0x1
 4718 1753 00000000 		.4byte	.LFB20
 4719 1757 5C000000 		.4byte	.LFE20
 4720 175b 38000000 		.4byte	.LLST1
 4721 175f 82170000 		.4byte	0x1782
 4722 1763 24       		.uleb128 0x24
 4723 1764 FA010000 		.4byte	.LASF319
 4724 1768 01       		.byte	0x1
 4725 1769 3206     		.2byte	0x632
 4726 176b D0090000 		.4byte	0x9d0
 4727 176f 02       		.byte	0x2
 4728 1770 91       		.byte	0x91
 4729 1771 77       		.sleb128 -9
 4730 1772 24       		.uleb128 0x24
 4731 1773 510A0000 		.4byte	.LASF320
 4732 1777 01       		.byte	0x1
 4733 1778 3206     		.2byte	0x632
ARM GAS  /tmp/ccCX0vdB.s 			page 120


 4734 177a B9080000 		.4byte	0x8b9
 4735 177e 02       		.byte	0x2
 4736 177f 91       		.byte	0x91
 4737 1780 70       		.sleb128 -16
 4738 1781 00       		.byte	0
 4739 1782 25       		.uleb128 0x25
 4740 1783 55090000 		.4byte	.LASF342
 4741 1787 02       		.byte	0x2
 4742 1788 20       		.byte	0x20
 4743 1789 00000000 		.4byte	.LFB35
 4744 178d 4C020000 		.4byte	.LFE35
 4745 1791 70000000 		.4byte	.LLST2
 4746 1795 C0170000 		.4byte	0x17c0
 4747 1799 26       		.uleb128 0x26
 4748 179a 64697600 		.ascii	"div\000"
 4749 179e 02       		.byte	0x2
 4750 179f 22       		.byte	0x22
 4751 17a0 B9080000 		.4byte	0x8b9
 4752 17a4 02       		.byte	0x2
 4753 17a5 91       		.byte	0x91
 4754 17a6 6C       		.sleb128 -20
 4755 17a7 27       		.uleb128 0x27
 4756 17a8 E8080000 		.4byte	.LASF321
 4757 17ac 02       		.byte	0x2
 4758 17ad 23       		.byte	0x23
 4759 17ae B9080000 		.4byte	0x8b9
 4760 17b2 02       		.byte	0x2
 4761 17b3 91       		.byte	0x91
 4762 17b4 68       		.sleb128 -24
 4763 17b5 28       		.uleb128 0x28
 4764 17b6 DA020000 		.4byte	.LASF343
 4765 17ba D0170000 		.4byte	0x17d0
 4766 17be 01       		.byte	0x1
 4767 17bf 00       		.byte	0
 4768 17c0 08       		.uleb128 0x8
 4769 17c1 F9050000 		.4byte	0x5f9
 4770 17c5 D0170000 		.4byte	0x17d0
 4771 17c9 09       		.uleb128 0x9
 4772 17ca 4C000000 		.4byte	0x4c
 4773 17ce 04       		.byte	0x4
 4774 17cf 00       		.byte	0
 4775 17d0 17       		.uleb128 0x17
 4776 17d1 C0170000 		.4byte	0x17c0
 4777 17d5 29       		.uleb128 0x29
 4778 17d6 01       		.byte	0x1
 4779 17d7 CD000000 		.4byte	.LASF325
 4780 17db 02       		.byte	0x2
 4781 17dc 5B       		.byte	0x5b
 4782 17dd 01       		.byte	0x1
 4783 17de 00000000 		.4byte	.LFB36
 4784 17e2 AA010000 		.4byte	.LFE36
 4785 17e6 A8000000 		.4byte	.LLST3
 4786 17ea FD170000 		.4byte	0x17fd
 4787 17ee 2A       		.uleb128 0x2a
 4788 17ef 6E657700 		.ascii	"new\000"
 4789 17f3 02       		.byte	0x2
 4790 17f4 5B       		.byte	0x5b
ARM GAS  /tmp/ccCX0vdB.s 			page 121


 4791 17f5 98080000 		.4byte	0x898
 4792 17f9 02       		.byte	0x2
 4793 17fa 91       		.byte	0x91
 4794 17fb 77       		.sleb128 -9
 4795 17fc 00       		.byte	0
 4796 17fd 2B       		.uleb128 0x2b
 4797 17fe 01       		.byte	0x1
 4798 17ff 636C6900 		.ascii	"cli\000"
 4799 1803 02       		.byte	0x2
 4800 1804 7C       		.byte	0x7c
 4801 1805 00000000 		.4byte	.LFB37
 4802 1809 28040000 		.4byte	.LFE37
 4803 180d E0000000 		.4byte	.LLST4
 4804 1811 4F180000 		.4byte	0x184f
 4805 1815 27       		.uleb128 0x27
 4806 1816 9D050000 		.4byte	.LASF322
 4807 181a 02       		.byte	0x2
 4808 181b 7E       		.byte	0x7e
 4809 181c 45000000 		.4byte	0x45
 4810 1820 02       		.byte	0x2
 4811 1821 91       		.byte	0x91
 4812 1822 6C       		.sleb128 -20
 4813 1823 27       		.uleb128 0x27
 4814 1824 BB050000 		.4byte	.LASF323
 4815 1828 02       		.byte	0x2
 4816 1829 7F       		.byte	0x7f
 4817 182a 4F180000 		.4byte	0x184f
 4818 182e 02       		.byte	0x2
 4819 182f 91       		.byte	0x91
 4820 1830 60       		.sleb128 -32
 4821 1831 27       		.uleb128 0x27
 4822 1832 44050000 		.4byte	.LASF324
 4823 1836 02       		.byte	0x2
 4824 1837 80       		.byte	0x80
 4825 1838 5F180000 		.4byte	0x185f
 4826 183c 02       		.byte	0x2
 4827 183d 91       		.byte	0x91
 4828 183e 40       		.sleb128 -64
 4829 183f 26       		.uleb128 0x26
 4830 1840 636D6400 		.ascii	"cmd\000"
 4831 1844 02       		.byte	0x2
 4832 1845 81       		.byte	0x81
 4833 1846 F9050000 		.4byte	0x5f9
 4834 184a 03       		.byte	0x3
 4835 184b 91       		.byte	0x91
 4836 184c BF7F     		.sleb128 -65
 4837 184e 00       		.byte	0
 4838 184f 08       		.uleb128 0x8
 4839 1850 45000000 		.4byte	0x45
 4840 1854 5F180000 		.4byte	0x185f
 4841 1858 09       		.uleb128 0x9
 4842 1859 4C000000 		.4byte	0x4c
 4843 185d 02       		.byte	0x2
 4844 185e 00       		.byte	0
 4845 185f 08       		.uleb128 0x8
 4846 1860 F9050000 		.4byte	0x5f9
 4847 1864 6F180000 		.4byte	0x186f
ARM GAS  /tmp/ccCX0vdB.s 			page 122


 4848 1868 09       		.uleb128 0x9
 4849 1869 4C000000 		.4byte	0x4c
 4850 186d 1F       		.byte	0x1f
 4851 186e 00       		.byte	0
 4852 186f 2C       		.uleb128 0x2c
 4853 1870 01       		.byte	0x1
 4854 1871 F5010000 		.4byte	.LASF326
 4855 1875 02       		.byte	0x2
 4856 1876 E3       		.byte	0xe3
 4857 1877 45000000 		.4byte	0x45
 4858 187b 00000000 		.4byte	.LFB38
 4859 187f 5C020000 		.4byte	.LFE38
 4860 1883 1A010000 		.4byte	.LLST5
 4861 1887 9A180000 		.4byte	0x189a
 4862 188b 27       		.uleb128 0x27
 4863 188c 6D020000 		.4byte	.LASF327
 4864 1890 02       		.byte	0x2
 4865 1891 E5       		.byte	0xe5
 4866 1892 B9080000 		.4byte	0x8b9
 4867 1896 02       		.byte	0x2
 4868 1897 91       		.byte	0x91
 4869 1898 74       		.sleb128 -12
 4870 1899 00       		.byte	0
 4871 189a 2D       		.uleb128 0x2d
 4872 189b 01       		.byte	0x1
 4873 189c 94080000 		.4byte	.LASF344
 4874 18a0 02       		.byte	0x2
 4875 18a1 2301     		.2byte	0x123
 4876 18a3 01       		.byte	0x1
 4877 18a4 00000000 		.4byte	.LFB39
 4878 18a8 2C000000 		.4byte	.LFE39
 4879 18ac 52010000 		.4byte	.LLST6
 4880 18b0 2E       		.uleb128 0x2e
 4881 18b1 01       		.byte	0x1
 4882 18b2 6C040000 		.4byte	.LASF328
 4883 18b6 02       		.byte	0x2
 4884 18b7 2901     		.2byte	0x129
 4885 18b9 01       		.byte	0x1
 4886 18ba 00000000 		.4byte	.LFB40
 4887 18be 42010000 		.4byte	.LFE40
 4888 18c2 7E010000 		.4byte	.LLST7
 4889 18c6 E9180000 		.4byte	0x18e9
 4890 18ca 2F       		.uleb128 0x2f
 4891 18cb 120B0000 		.4byte	.LASF329
 4892 18cf 02       		.byte	0x2
 4893 18d0 2B01     		.2byte	0x12b
 4894 18d2 B9080000 		.4byte	0x8b9
 4895 18d6 02       		.byte	0x2
 4896 18d7 91       		.byte	0x91
 4897 18d8 70       		.sleb128 -16
 4898 18d9 2F       		.uleb128 0x2f
 4899 18da 37000000 		.4byte	.LASF330
 4900 18de 02       		.byte	0x2
 4901 18df 2C01     		.2byte	0x12c
 4902 18e1 B9080000 		.4byte	0x8b9
 4903 18e5 02       		.byte	0x2
 4904 18e6 91       		.byte	0x91
ARM GAS  /tmp/ccCX0vdB.s 			page 123


 4905 18e7 74       		.sleb128 -12
 4906 18e8 00       		.byte	0
 4907 18e9 30       		.uleb128 0x30
 4908 18ea B3010000 		.4byte	.LASF331
 4909 18ee 06       		.byte	0x6
 4910 18ef 4803     		.2byte	0x348
 4911 18f1 74040000 		.4byte	0x474
 4912 18f5 01       		.byte	0x1
 4913 18f6 01       		.byte	0x1
 4914 18f7 30       		.uleb128 0x30
 4915 18f8 CB060000 		.4byte	.LASF332
 4916 18fc 01       		.byte	0x1
 4917 18fd CE06     		.2byte	0x6ce
 4918 18ff 05190000 		.4byte	0x1905
 4919 1903 01       		.byte	0x1
 4920 1904 01       		.byte	0x1
 4921 1905 19       		.uleb128 0x19
 4922 1906 45000000 		.4byte	0x45
 4923 190a 08       		.uleb128 0x8
 4924 190b CF150000 		.4byte	0x15cf
 4925 190f 1A190000 		.4byte	0x191a
 4926 1913 09       		.uleb128 0x9
 4927 1914 4C000000 		.4byte	0x4c
 4928 1918 01       		.byte	0x1
 4929 1919 00       		.byte	0
 4930 191a 31       		.uleb128 0x31
 4931 191b DE030000 		.4byte	.LASF316
 4932 191f 02       		.byte	0x2
 4933 1920 16       		.byte	0x16
 4934 1921 0A190000 		.4byte	0x190a
 4935 1925 01       		.byte	0x1
 4936 1926 01       		.byte	0x1
 4937 1927 31       		.uleb128 0x31
 4938 1928 8A000000 		.4byte	.LASF333
 4939 192c 02       		.byte	0x2
 4940 192d 17       		.byte	0x17
 4941 192e 98080000 		.4byte	0x898
 4942 1932 01       		.byte	0x1
 4943 1933 01       		.byte	0x1
 4944 1934 31       		.uleb128 0x31
 4945 1935 C6090000 		.4byte	.LASF334
 4946 1939 02       		.byte	0x2
 4947 193a 19       		.byte	0x19
 4948 193b 06160000 		.4byte	0x1606
 4949 193f 01       		.byte	0x1
 4950 1940 01       		.byte	0x1
 4951 1941 31       		.uleb128 0x31
 4952 1942 CD070000 		.4byte	.LASF335
 4953 1946 02       		.byte	0x2
 4954 1947 1A       		.byte	0x1a
 4955 1948 D1160000 		.4byte	0x16d1
 4956 194c 01       		.byte	0x1
 4957 194d 01       		.byte	0x1
 4958 194e 31       		.uleb128 0x31
 4959 194f 90030000 		.4byte	.LASF336
 4960 1953 02       		.byte	0x2
 4961 1954 1B       		.byte	0x1b
ARM GAS  /tmp/ccCX0vdB.s 			page 124


 4962 1955 D1160000 		.4byte	0x16d1
 4963 1959 01       		.byte	0x1
 4964 195a 01       		.byte	0x1
 4965 195b 31       		.uleb128 0x31
 4966 195c 79010000 		.4byte	.LASF337
 4967 1960 02       		.byte	0x2
 4968 1961 1D       		.byte	0x1d
 4969 1962 B9080000 		.4byte	0x8b9
 4970 1966 01       		.byte	0x1
 4971 1967 01       		.byte	0x1
 4972 1968 31       		.uleb128 0x31
 4973 1969 290A0000 		.4byte	.LASF338
 4974 196d 02       		.byte	0x2
 4975 196e 1E       		.byte	0x1e
 4976 196f B9080000 		.4byte	0x8b9
 4977 1973 01       		.byte	0x1
 4978 1974 01       		.byte	0x1
 4979 1975 30       		.uleb128 0x30
 4980 1976 B3010000 		.4byte	.LASF331
 4981 197a 06       		.byte	0x6
 4982 197b 4803     		.2byte	0x348
 4983 197d 74040000 		.4byte	0x474
 4984 1981 01       		.byte	0x1
 4985 1982 01       		.byte	0x1
 4986 1983 30       		.uleb128 0x30
 4987 1984 CB060000 		.4byte	.LASF332
 4988 1988 01       		.byte	0x1
 4989 1989 CE06     		.2byte	0x6ce
 4990 198b 05190000 		.4byte	0x1905
 4991 198f 01       		.byte	0x1
 4992 1990 01       		.byte	0x1
 4993 1991 32       		.uleb128 0x32
 4994 1992 DE030000 		.4byte	.LASF316
 4995 1996 02       		.byte	0x2
 4996 1997 16       		.byte	0x16
 4997 1998 0A190000 		.4byte	0x190a
 4998 199c 01       		.byte	0x1
 4999 199d 05       		.byte	0x5
 5000 199e 03       		.byte	0x3
 5001 199f 00000000 		.4byte	input
 5002 19a3 32       		.uleb128 0x32
 5003 19a4 8A000000 		.4byte	.LASF333
 5004 19a8 02       		.byte	0x2
 5005 19a9 17       		.byte	0x17
 5006 19aa 98080000 		.4byte	0x898
 5007 19ae 01       		.byte	0x1
 5008 19af 05       		.byte	0x5
 5009 19b0 03       		.byte	0x3
 5010 19b1 00000000 		.4byte	_state
 5011 19b5 32       		.uleb128 0x32
 5012 19b6 C6090000 		.4byte	.LASF334
 5013 19ba 02       		.byte	0x2
 5014 19bb 19       		.byte	0x19
 5015 19bc 06160000 		.4byte	0x1606
 5016 19c0 01       		.byte	0x1
 5017 19c1 05       		.byte	0x5
 5018 19c2 03       		.byte	0x3
ARM GAS  /tmp/ccCX0vdB.s 			page 125


 5019 19c3 00000000 		.4byte	loop
 5020 19c7 32       		.uleb128 0x32
 5021 19c8 CD070000 		.4byte	.LASF335
 5022 19cc 02       		.byte	0x2
 5023 19cd 1A       		.byte	0x1a
 5024 19ce D1160000 		.4byte	0x16d1
 5025 19d2 01       		.byte	0x1
 5026 19d3 05       		.byte	0x5
 5027 19d4 03       		.byte	0x3
 5028 19d5 00000000 		.4byte	ntrip
 5029 19d9 32       		.uleb128 0x32
 5030 19da 90030000 		.4byte	.LASF336
 5031 19de 02       		.byte	0x2
 5032 19df 1B       		.byte	0x1b
 5033 19e0 D1160000 		.4byte	0x16d1
 5034 19e4 01       		.byte	0x1
 5035 19e5 05       		.byte	0x5
 5036 19e6 03       		.byte	0x3
 5037 19e7 00000000 		.4byte	rtrip
 5038 19eb 32       		.uleb128 0x32
 5039 19ec 79010000 		.4byte	.LASF337
 5040 19f0 02       		.byte	0x2
 5041 19f1 1D       		.byte	0x1d
 5042 19f2 B9080000 		.4byte	0x8b9
 5043 19f6 01       		.byte	0x1
 5044 19f7 05       		.byte	0x5
 5045 19f8 03       		.byte	0x3
 5046 19f9 00000000 		.4byte	releasetime
 5047 19fd 32       		.uleb128 0x32
 5048 19fe 290A0000 		.4byte	.LASF338
 5049 1a02 02       		.byte	0x2
 5050 1a03 1E       		.byte	0x1e
 5051 1a04 B9080000 		.4byte	0x8b9
 5052 1a08 01       		.byte	0x1
 5053 1a09 05       		.byte	0x5
 5054 1a0a 03       		.byte	0x3
 5055 1a0b 00000000 		.4byte	dxmax
 5056 1a0f 00       		.byte	0
 5057              		.section	.debug_abbrev,"",%progbits
 5058              	.Ldebug_abbrev0:
 5059 0000 01       		.uleb128 0x1
 5060 0001 11       		.uleb128 0x11
 5061 0002 01       		.byte	0x1
 5062 0003 25       		.uleb128 0x25
 5063 0004 0E       		.uleb128 0xe
 5064 0005 13       		.uleb128 0x13
 5065 0006 0B       		.uleb128 0xb
 5066 0007 03       		.uleb128 0x3
 5067 0008 0E       		.uleb128 0xe
 5068 0009 1B       		.uleb128 0x1b
 5069 000a 0E       		.uleb128 0xe
 5070 000b 11       		.uleb128 0x11
 5071 000c 01       		.uleb128 0x1
 5072 000d 52       		.uleb128 0x52
 5073 000e 01       		.uleb128 0x1
 5074 000f 55       		.uleb128 0x55
 5075 0010 06       		.uleb128 0x6
ARM GAS  /tmp/ccCX0vdB.s 			page 126


 5076 0011 10       		.uleb128 0x10
 5077 0012 06       		.uleb128 0x6
 5078 0013 00       		.byte	0
 5079 0014 00       		.byte	0
 5080 0015 02       		.uleb128 0x2
 5081 0016 24       		.uleb128 0x24
 5082 0017 00       		.byte	0
 5083 0018 0B       		.uleb128 0xb
 5084 0019 0B       		.uleb128 0xb
 5085 001a 3E       		.uleb128 0x3e
 5086 001b 0B       		.uleb128 0xb
 5087 001c 03       		.uleb128 0x3
 5088 001d 0E       		.uleb128 0xe
 5089 001e 00       		.byte	0
 5090 001f 00       		.byte	0
 5091 0020 03       		.uleb128 0x3
 5092 0021 24       		.uleb128 0x24
 5093 0022 00       		.byte	0
 5094 0023 0B       		.uleb128 0xb
 5095 0024 0B       		.uleb128 0xb
 5096 0025 3E       		.uleb128 0x3e
 5097 0026 0B       		.uleb128 0xb
 5098 0027 03       		.uleb128 0x3
 5099 0028 08       		.uleb128 0x8
 5100 0029 00       		.byte	0
 5101 002a 00       		.byte	0
 5102 002b 04       		.uleb128 0x4
 5103 002c 16       		.uleb128 0x16
 5104 002d 00       		.byte	0
 5105 002e 03       		.uleb128 0x3
 5106 002f 0E       		.uleb128 0xe
 5107 0030 3A       		.uleb128 0x3a
 5108 0031 0B       		.uleb128 0xb
 5109 0032 3B       		.uleb128 0x3b
 5110 0033 0B       		.uleb128 0xb
 5111 0034 49       		.uleb128 0x49
 5112 0035 13       		.uleb128 0x13
 5113 0036 00       		.byte	0
 5114 0037 00       		.byte	0
 5115 0038 05       		.uleb128 0x5
 5116 0039 16       		.uleb128 0x16
 5117 003a 00       		.byte	0
 5118 003b 03       		.uleb128 0x3
 5119 003c 0E       		.uleb128 0xe
 5120 003d 3A       		.uleb128 0x3a
 5121 003e 0B       		.uleb128 0xb
 5122 003f 3B       		.uleb128 0x3b
 5123 0040 05       		.uleb128 0x5
 5124 0041 49       		.uleb128 0x49
 5125 0042 13       		.uleb128 0x13
 5126 0043 00       		.byte	0
 5127 0044 00       		.byte	0
 5128 0045 06       		.uleb128 0x6
 5129 0046 17       		.uleb128 0x17
 5130 0047 01       		.byte	0x1
 5131 0048 0B       		.uleb128 0xb
 5132 0049 0B       		.uleb128 0xb
ARM GAS  /tmp/ccCX0vdB.s 			page 127


 5133 004a 3A       		.uleb128 0x3a
 5134 004b 0B       		.uleb128 0xb
 5135 004c 3B       		.uleb128 0x3b
 5136 004d 0B       		.uleb128 0xb
 5137 004e 01       		.uleb128 0x1
 5138 004f 13       		.uleb128 0x13
 5139 0050 00       		.byte	0
 5140 0051 00       		.byte	0
 5141 0052 07       		.uleb128 0x7
 5142 0053 0D       		.uleb128 0xd
 5143 0054 00       		.byte	0
 5144 0055 03       		.uleb128 0x3
 5145 0056 0E       		.uleb128 0xe
 5146 0057 3A       		.uleb128 0x3a
 5147 0058 0B       		.uleb128 0xb
 5148 0059 3B       		.uleb128 0x3b
 5149 005a 0B       		.uleb128 0xb
 5150 005b 49       		.uleb128 0x49
 5151 005c 13       		.uleb128 0x13
 5152 005d 00       		.byte	0
 5153 005e 00       		.byte	0
 5154 005f 08       		.uleb128 0x8
 5155 0060 01       		.uleb128 0x1
 5156 0061 01       		.byte	0x1
 5157 0062 49       		.uleb128 0x49
 5158 0063 13       		.uleb128 0x13
 5159 0064 01       		.uleb128 0x1
 5160 0065 13       		.uleb128 0x13
 5161 0066 00       		.byte	0
 5162 0067 00       		.byte	0
 5163 0068 09       		.uleb128 0x9
 5164 0069 21       		.uleb128 0x21
 5165 006a 00       		.byte	0
 5166 006b 49       		.uleb128 0x49
 5167 006c 13       		.uleb128 0x13
 5168 006d 2F       		.uleb128 0x2f
 5169 006e 0B       		.uleb128 0xb
 5170 006f 00       		.byte	0
 5171 0070 00       		.byte	0
 5172 0071 0A       		.uleb128 0xa
 5173 0072 13       		.uleb128 0x13
 5174 0073 01       		.byte	0x1
 5175 0074 0B       		.uleb128 0xb
 5176 0075 0B       		.uleb128 0xb
 5177 0076 3A       		.uleb128 0x3a
 5178 0077 0B       		.uleb128 0xb
 5179 0078 3B       		.uleb128 0x3b
 5180 0079 0B       		.uleb128 0xb
 5181 007a 01       		.uleb128 0x1
 5182 007b 13       		.uleb128 0x13
 5183 007c 00       		.byte	0
 5184 007d 00       		.byte	0
 5185 007e 0B       		.uleb128 0xb
 5186 007f 0D       		.uleb128 0xd
 5187 0080 00       		.byte	0
 5188 0081 03       		.uleb128 0x3
 5189 0082 0E       		.uleb128 0xe
ARM GAS  /tmp/ccCX0vdB.s 			page 128


 5190 0083 3A       		.uleb128 0x3a
 5191 0084 0B       		.uleb128 0xb
 5192 0085 3B       		.uleb128 0x3b
 5193 0086 0B       		.uleb128 0xb
 5194 0087 49       		.uleb128 0x49
 5195 0088 13       		.uleb128 0x13
 5196 0089 38       		.uleb128 0x38
 5197 008a 0A       		.uleb128 0xa
 5198 008b 00       		.byte	0
 5199 008c 00       		.byte	0
 5200 008d 0C       		.uleb128 0xc
 5201 008e 0F       		.uleb128 0xf
 5202 008f 00       		.byte	0
 5203 0090 0B       		.uleb128 0xb
 5204 0091 0B       		.uleb128 0xb
 5205 0092 00       		.byte	0
 5206 0093 00       		.byte	0
 5207 0094 0D       		.uleb128 0xd
 5208 0095 13       		.uleb128 0x13
 5209 0096 01       		.byte	0x1
 5210 0097 03       		.uleb128 0x3
 5211 0098 0E       		.uleb128 0xe
 5212 0099 0B       		.uleb128 0xb
 5213 009a 0B       		.uleb128 0xb
 5214 009b 3A       		.uleb128 0x3a
 5215 009c 0B       		.uleb128 0xb
 5216 009d 3B       		.uleb128 0x3b
 5217 009e 0B       		.uleb128 0xb
 5218 009f 01       		.uleb128 0x1
 5219 00a0 13       		.uleb128 0x13
 5220 00a1 00       		.byte	0
 5221 00a2 00       		.byte	0
 5222 00a3 0E       		.uleb128 0xe
 5223 00a4 0D       		.uleb128 0xd
 5224 00a5 00       		.byte	0
 5225 00a6 03       		.uleb128 0x3
 5226 00a7 08       		.uleb128 0x8
 5227 00a8 3A       		.uleb128 0x3a
 5228 00a9 0B       		.uleb128 0xb
 5229 00aa 3B       		.uleb128 0x3b
 5230 00ab 0B       		.uleb128 0xb
 5231 00ac 49       		.uleb128 0x49
 5232 00ad 13       		.uleb128 0x13
 5233 00ae 38       		.uleb128 0x38
 5234 00af 0A       		.uleb128 0xa
 5235 00b0 00       		.byte	0
 5236 00b1 00       		.byte	0
 5237 00b2 0F       		.uleb128 0xf
 5238 00b3 0F       		.uleb128 0xf
 5239 00b4 00       		.byte	0
 5240 00b5 0B       		.uleb128 0xb
 5241 00b6 0B       		.uleb128 0xb
 5242 00b7 49       		.uleb128 0x49
 5243 00b8 13       		.uleb128 0x13
 5244 00b9 00       		.byte	0
 5245 00ba 00       		.byte	0
 5246 00bb 10       		.uleb128 0x10
ARM GAS  /tmp/ccCX0vdB.s 			page 129


 5247 00bc 13       		.uleb128 0x13
 5248 00bd 01       		.byte	0x1
 5249 00be 03       		.uleb128 0x3
 5250 00bf 0E       		.uleb128 0xe
 5251 00c0 0B       		.uleb128 0xb
 5252 00c1 05       		.uleb128 0x5
 5253 00c2 3A       		.uleb128 0x3a
 5254 00c3 0B       		.uleb128 0xb
 5255 00c4 3B       		.uleb128 0x3b
 5256 00c5 0B       		.uleb128 0xb
 5257 00c6 01       		.uleb128 0x1
 5258 00c7 13       		.uleb128 0x13
 5259 00c8 00       		.byte	0
 5260 00c9 00       		.byte	0
 5261 00ca 11       		.uleb128 0x11
 5262 00cb 15       		.uleb128 0x15
 5263 00cc 00       		.byte	0
 5264 00cd 27       		.uleb128 0x27
 5265 00ce 0C       		.uleb128 0xc
 5266 00cf 00       		.byte	0
 5267 00d0 00       		.byte	0
 5268 00d1 12       		.uleb128 0x12
 5269 00d2 13       		.uleb128 0x13
 5270 00d3 01       		.byte	0x1
 5271 00d4 03       		.uleb128 0x3
 5272 00d5 0E       		.uleb128 0xe
 5273 00d6 0B       		.uleb128 0xb
 5274 00d7 0B       		.uleb128 0xb
 5275 00d8 3A       		.uleb128 0x3a
 5276 00d9 0B       		.uleb128 0xb
 5277 00da 3B       		.uleb128 0x3b
 5278 00db 05       		.uleb128 0x5
 5279 00dc 01       		.uleb128 0x1
 5280 00dd 13       		.uleb128 0x13
 5281 00de 00       		.byte	0
 5282 00df 00       		.byte	0
 5283 00e0 13       		.uleb128 0x13
 5284 00e1 0D       		.uleb128 0xd
 5285 00e2 00       		.byte	0
 5286 00e3 03       		.uleb128 0x3
 5287 00e4 0E       		.uleb128 0xe
 5288 00e5 3A       		.uleb128 0x3a
 5289 00e6 0B       		.uleb128 0xb
 5290 00e7 3B       		.uleb128 0x3b
 5291 00e8 05       		.uleb128 0x5
 5292 00e9 49       		.uleb128 0x49
 5293 00ea 13       		.uleb128 0x13
 5294 00eb 38       		.uleb128 0x38
 5295 00ec 0A       		.uleb128 0xa
 5296 00ed 00       		.byte	0
 5297 00ee 00       		.byte	0
 5298 00ef 14       		.uleb128 0x14
 5299 00f0 0D       		.uleb128 0xd
 5300 00f1 00       		.byte	0
 5301 00f2 03       		.uleb128 0x3
 5302 00f3 08       		.uleb128 0x8
 5303 00f4 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccCX0vdB.s 			page 130


 5304 00f5 0B       		.uleb128 0xb
 5305 00f6 3B       		.uleb128 0x3b
 5306 00f7 05       		.uleb128 0x5
 5307 00f8 49       		.uleb128 0x49
 5308 00f9 13       		.uleb128 0x13
 5309 00fa 38       		.uleb128 0x38
 5310 00fb 0A       		.uleb128 0xa
 5311 00fc 00       		.byte	0
 5312 00fd 00       		.byte	0
 5313 00fe 15       		.uleb128 0x15
 5314 00ff 15       		.uleb128 0x15
 5315 0100 01       		.byte	0x1
 5316 0101 27       		.uleb128 0x27
 5317 0102 0C       		.uleb128 0xc
 5318 0103 49       		.uleb128 0x49
 5319 0104 13       		.uleb128 0x13
 5320 0105 01       		.uleb128 0x1
 5321 0106 13       		.uleb128 0x13
 5322 0107 00       		.byte	0
 5323 0108 00       		.byte	0
 5324 0109 16       		.uleb128 0x16
 5325 010a 05       		.uleb128 0x5
 5326 010b 00       		.byte	0
 5327 010c 49       		.uleb128 0x49
 5328 010d 13       		.uleb128 0x13
 5329 010e 00       		.byte	0
 5330 010f 00       		.byte	0
 5331 0110 17       		.uleb128 0x17
 5332 0111 26       		.uleb128 0x26
 5333 0112 00       		.byte	0
 5334 0113 49       		.uleb128 0x49
 5335 0114 13       		.uleb128 0x13
 5336 0115 00       		.byte	0
 5337 0116 00       		.byte	0
 5338 0117 18       		.uleb128 0x18
 5339 0118 15       		.uleb128 0x15
 5340 0119 01       		.byte	0x1
 5341 011a 27       		.uleb128 0x27
 5342 011b 0C       		.uleb128 0xc
 5343 011c 01       		.uleb128 0x1
 5344 011d 13       		.uleb128 0x13
 5345 011e 00       		.byte	0
 5346 011f 00       		.byte	0
 5347 0120 19       		.uleb128 0x19
 5348 0121 35       		.uleb128 0x35
 5349 0122 00       		.byte	0
 5350 0123 49       		.uleb128 0x49
 5351 0124 13       		.uleb128 0x13
 5352 0125 00       		.byte	0
 5353 0126 00       		.byte	0
 5354 0127 1A       		.uleb128 0x1a
 5355 0128 04       		.uleb128 0x4
 5356 0129 01       		.byte	0x1
 5357 012a 03       		.uleb128 0x3
 5358 012b 0E       		.uleb128 0xe
 5359 012c 0B       		.uleb128 0xb
 5360 012d 0B       		.uleb128 0xb
ARM GAS  /tmp/ccCX0vdB.s 			page 131


 5361 012e 3A       		.uleb128 0x3a
 5362 012f 0B       		.uleb128 0xb
 5363 0130 3B       		.uleb128 0x3b
 5364 0131 0B       		.uleb128 0xb
 5365 0132 01       		.uleb128 0x1
 5366 0133 13       		.uleb128 0x13
 5367 0134 00       		.byte	0
 5368 0135 00       		.byte	0
 5369 0136 1B       		.uleb128 0x1b
 5370 0137 28       		.uleb128 0x28
 5371 0138 00       		.byte	0
 5372 0139 03       		.uleb128 0x3
 5373 013a 0E       		.uleb128 0xe
 5374 013b 1C       		.uleb128 0x1c
 5375 013c 0D       		.uleb128 0xd
 5376 013d 00       		.byte	0
 5377 013e 00       		.byte	0
 5378 013f 1C       		.uleb128 0x1c
 5379 0140 13       		.uleb128 0x13
 5380 0141 01       		.byte	0x1
 5381 0142 0B       		.uleb128 0xb
 5382 0143 05       		.uleb128 0x5
 5383 0144 3A       		.uleb128 0x3a
 5384 0145 0B       		.uleb128 0xb
 5385 0146 3B       		.uleb128 0x3b
 5386 0147 0B       		.uleb128 0xb
 5387 0148 01       		.uleb128 0x1
 5388 0149 13       		.uleb128 0x13
 5389 014a 00       		.byte	0
 5390 014b 00       		.byte	0
 5391 014c 1D       		.uleb128 0x1d
 5392 014d 21       		.uleb128 0x21
 5393 014e 00       		.byte	0
 5394 014f 49       		.uleb128 0x49
 5395 0150 13       		.uleb128 0x13
 5396 0151 2F       		.uleb128 0x2f
 5397 0152 05       		.uleb128 0x5
 5398 0153 00       		.byte	0
 5399 0154 00       		.byte	0
 5400 0155 1E       		.uleb128 0x1e
 5401 0156 16       		.uleb128 0x16
 5402 0157 00       		.byte	0
 5403 0158 03       		.uleb128 0x3
 5404 0159 08       		.uleb128 0x8
 5405 015a 3A       		.uleb128 0x3a
 5406 015b 0B       		.uleb128 0xb
 5407 015c 3B       		.uleb128 0x3b
 5408 015d 05       		.uleb128 0x5
 5409 015e 49       		.uleb128 0x49
 5410 015f 13       		.uleb128 0x13
 5411 0160 00       		.byte	0
 5412 0161 00       		.byte	0
 5413 0162 1F       		.uleb128 0x1f
 5414 0163 13       		.uleb128 0x13
 5415 0164 01       		.byte	0x1
 5416 0165 0B       		.uleb128 0xb
 5417 0166 0B       		.uleb128 0xb
ARM GAS  /tmp/ccCX0vdB.s 			page 132


 5418 0167 3A       		.uleb128 0x3a
 5419 0168 0B       		.uleb128 0xb
 5420 0169 3B       		.uleb128 0x3b
 5421 016a 05       		.uleb128 0x5
 5422 016b 01       		.uleb128 0x1
 5423 016c 13       		.uleb128 0x13
 5424 016d 00       		.byte	0
 5425 016e 00       		.byte	0
 5426 016f 20       		.uleb128 0x20
 5427 0170 13       		.uleb128 0x13
 5428 0171 01       		.byte	0x1
 5429 0172 0B       		.uleb128 0xb
 5430 0173 05       		.uleb128 0x5
 5431 0174 3A       		.uleb128 0x3a
 5432 0175 0B       		.uleb128 0xb
 5433 0176 3B       		.uleb128 0x3b
 5434 0177 05       		.uleb128 0x5
 5435 0178 01       		.uleb128 0x1
 5436 0179 13       		.uleb128 0x13
 5437 017a 00       		.byte	0
 5438 017b 00       		.byte	0
 5439 017c 21       		.uleb128 0x21
 5440 017d 04       		.uleb128 0x4
 5441 017e 01       		.byte	0x1
 5442 017f 0B       		.uleb128 0xb
 5443 0180 0B       		.uleb128 0xb
 5444 0181 3A       		.uleb128 0x3a
 5445 0182 0B       		.uleb128 0xb
 5446 0183 3B       		.uleb128 0x3b
 5447 0184 0B       		.uleb128 0xb
 5448 0185 01       		.uleb128 0x1
 5449 0186 13       		.uleb128 0x13
 5450 0187 00       		.byte	0
 5451 0188 00       		.byte	0
 5452 0189 22       		.uleb128 0x22
 5453 018a 28       		.uleb128 0x28
 5454 018b 00       		.byte	0
 5455 018c 03       		.uleb128 0x3
 5456 018d 08       		.uleb128 0x8
 5457 018e 1C       		.uleb128 0x1c
 5458 018f 0D       		.uleb128 0xd
 5459 0190 00       		.byte	0
 5460 0191 00       		.byte	0
 5461 0192 23       		.uleb128 0x23
 5462 0193 2E       		.uleb128 0x2e
 5463 0194 01       		.byte	0x1
 5464 0195 03       		.uleb128 0x3
 5465 0196 0E       		.uleb128 0xe
 5466 0197 3A       		.uleb128 0x3a
 5467 0198 0B       		.uleb128 0xb
 5468 0199 3B       		.uleb128 0x3b
 5469 019a 05       		.uleb128 0x5
 5470 019b 27       		.uleb128 0x27
 5471 019c 0C       		.uleb128 0xc
 5472 019d 11       		.uleb128 0x11
 5473 019e 01       		.uleb128 0x1
 5474 019f 12       		.uleb128 0x12
ARM GAS  /tmp/ccCX0vdB.s 			page 133


 5475 01a0 01       		.uleb128 0x1
 5476 01a1 40       		.uleb128 0x40
 5477 01a2 06       		.uleb128 0x6
 5478 01a3 01       		.uleb128 0x1
 5479 01a4 13       		.uleb128 0x13
 5480 01a5 00       		.byte	0
 5481 01a6 00       		.byte	0
 5482 01a7 24       		.uleb128 0x24
 5483 01a8 05       		.uleb128 0x5
 5484 01a9 00       		.byte	0
 5485 01aa 03       		.uleb128 0x3
 5486 01ab 0E       		.uleb128 0xe
 5487 01ac 3A       		.uleb128 0x3a
 5488 01ad 0B       		.uleb128 0xb
 5489 01ae 3B       		.uleb128 0x3b
 5490 01af 05       		.uleb128 0x5
 5491 01b0 49       		.uleb128 0x49
 5492 01b1 13       		.uleb128 0x13
 5493 01b2 02       		.uleb128 0x2
 5494 01b3 0A       		.uleb128 0xa
 5495 01b4 00       		.byte	0
 5496 01b5 00       		.byte	0
 5497 01b6 25       		.uleb128 0x25
 5498 01b7 2E       		.uleb128 0x2e
 5499 01b8 01       		.byte	0x1
 5500 01b9 03       		.uleb128 0x3
 5501 01ba 0E       		.uleb128 0xe
 5502 01bb 3A       		.uleb128 0x3a
 5503 01bc 0B       		.uleb128 0xb
 5504 01bd 3B       		.uleb128 0x3b
 5505 01be 0B       		.uleb128 0xb
 5506 01bf 11       		.uleb128 0x11
 5507 01c0 01       		.uleb128 0x1
 5508 01c1 12       		.uleb128 0x12
 5509 01c2 01       		.uleb128 0x1
 5510 01c3 40       		.uleb128 0x40
 5511 01c4 06       		.uleb128 0x6
 5512 01c5 01       		.uleb128 0x1
 5513 01c6 13       		.uleb128 0x13
 5514 01c7 00       		.byte	0
 5515 01c8 00       		.byte	0
 5516 01c9 26       		.uleb128 0x26
 5517 01ca 34       		.uleb128 0x34
 5518 01cb 00       		.byte	0
 5519 01cc 03       		.uleb128 0x3
 5520 01cd 08       		.uleb128 0x8
 5521 01ce 3A       		.uleb128 0x3a
 5522 01cf 0B       		.uleb128 0xb
 5523 01d0 3B       		.uleb128 0x3b
 5524 01d1 0B       		.uleb128 0xb
 5525 01d2 49       		.uleb128 0x49
 5526 01d3 13       		.uleb128 0x13
 5527 01d4 02       		.uleb128 0x2
 5528 01d5 0A       		.uleb128 0xa
 5529 01d6 00       		.byte	0
 5530 01d7 00       		.byte	0
 5531 01d8 27       		.uleb128 0x27
ARM GAS  /tmp/ccCX0vdB.s 			page 134


 5532 01d9 34       		.uleb128 0x34
 5533 01da 00       		.byte	0
 5534 01db 03       		.uleb128 0x3
 5535 01dc 0E       		.uleb128 0xe
 5536 01dd 3A       		.uleb128 0x3a
 5537 01de 0B       		.uleb128 0xb
 5538 01df 3B       		.uleb128 0x3b
 5539 01e0 0B       		.uleb128 0xb
 5540 01e1 49       		.uleb128 0x49
 5541 01e2 13       		.uleb128 0x13
 5542 01e3 02       		.uleb128 0x2
 5543 01e4 0A       		.uleb128 0xa
 5544 01e5 00       		.byte	0
 5545 01e6 00       		.byte	0
 5546 01e7 28       		.uleb128 0x28
 5547 01e8 34       		.uleb128 0x34
 5548 01e9 00       		.byte	0
 5549 01ea 03       		.uleb128 0x3
 5550 01eb 0E       		.uleb128 0xe
 5551 01ec 49       		.uleb128 0x49
 5552 01ed 13       		.uleb128 0x13
 5553 01ee 34       		.uleb128 0x34
 5554 01ef 0C       		.uleb128 0xc
 5555 01f0 00       		.byte	0
 5556 01f1 00       		.byte	0
 5557 01f2 29       		.uleb128 0x29
 5558 01f3 2E       		.uleb128 0x2e
 5559 01f4 01       		.byte	0x1
 5560 01f5 3F       		.uleb128 0x3f
 5561 01f6 0C       		.uleb128 0xc
 5562 01f7 03       		.uleb128 0x3
 5563 01f8 0E       		.uleb128 0xe
 5564 01f9 3A       		.uleb128 0x3a
 5565 01fa 0B       		.uleb128 0xb
 5566 01fb 3B       		.uleb128 0x3b
 5567 01fc 0B       		.uleb128 0xb
 5568 01fd 27       		.uleb128 0x27
 5569 01fe 0C       		.uleb128 0xc
 5570 01ff 11       		.uleb128 0x11
 5571 0200 01       		.uleb128 0x1
 5572 0201 12       		.uleb128 0x12
 5573 0202 01       		.uleb128 0x1
 5574 0203 40       		.uleb128 0x40
 5575 0204 06       		.uleb128 0x6
 5576 0205 01       		.uleb128 0x1
 5577 0206 13       		.uleb128 0x13
 5578 0207 00       		.byte	0
 5579 0208 00       		.byte	0
 5580 0209 2A       		.uleb128 0x2a
 5581 020a 05       		.uleb128 0x5
 5582 020b 00       		.byte	0
 5583 020c 03       		.uleb128 0x3
 5584 020d 08       		.uleb128 0x8
 5585 020e 3A       		.uleb128 0x3a
 5586 020f 0B       		.uleb128 0xb
 5587 0210 3B       		.uleb128 0x3b
 5588 0211 0B       		.uleb128 0xb
ARM GAS  /tmp/ccCX0vdB.s 			page 135


 5589 0212 49       		.uleb128 0x49
 5590 0213 13       		.uleb128 0x13
 5591 0214 02       		.uleb128 0x2
 5592 0215 0A       		.uleb128 0xa
 5593 0216 00       		.byte	0
 5594 0217 00       		.byte	0
 5595 0218 2B       		.uleb128 0x2b
 5596 0219 2E       		.uleb128 0x2e
 5597 021a 01       		.byte	0x1
 5598 021b 3F       		.uleb128 0x3f
 5599 021c 0C       		.uleb128 0xc
 5600 021d 03       		.uleb128 0x3
 5601 021e 08       		.uleb128 0x8
 5602 021f 3A       		.uleb128 0x3a
 5603 0220 0B       		.uleb128 0xb
 5604 0221 3B       		.uleb128 0x3b
 5605 0222 0B       		.uleb128 0xb
 5606 0223 11       		.uleb128 0x11
 5607 0224 01       		.uleb128 0x1
 5608 0225 12       		.uleb128 0x12
 5609 0226 01       		.uleb128 0x1
 5610 0227 40       		.uleb128 0x40
 5611 0228 06       		.uleb128 0x6
 5612 0229 01       		.uleb128 0x1
 5613 022a 13       		.uleb128 0x13
 5614 022b 00       		.byte	0
 5615 022c 00       		.byte	0
 5616 022d 2C       		.uleb128 0x2c
 5617 022e 2E       		.uleb128 0x2e
 5618 022f 01       		.byte	0x1
 5619 0230 3F       		.uleb128 0x3f
 5620 0231 0C       		.uleb128 0xc
 5621 0232 03       		.uleb128 0x3
 5622 0233 0E       		.uleb128 0xe
 5623 0234 3A       		.uleb128 0x3a
 5624 0235 0B       		.uleb128 0xb
 5625 0236 3B       		.uleb128 0x3b
 5626 0237 0B       		.uleb128 0xb
 5627 0238 49       		.uleb128 0x49
 5628 0239 13       		.uleb128 0x13
 5629 023a 11       		.uleb128 0x11
 5630 023b 01       		.uleb128 0x1
 5631 023c 12       		.uleb128 0x12
 5632 023d 01       		.uleb128 0x1
 5633 023e 40       		.uleb128 0x40
 5634 023f 06       		.uleb128 0x6
 5635 0240 01       		.uleb128 0x1
 5636 0241 13       		.uleb128 0x13
 5637 0242 00       		.byte	0
 5638 0243 00       		.byte	0
 5639 0244 2D       		.uleb128 0x2d
 5640 0245 2E       		.uleb128 0x2e
 5641 0246 00       		.byte	0
 5642 0247 3F       		.uleb128 0x3f
 5643 0248 0C       		.uleb128 0xc
 5644 0249 03       		.uleb128 0x3
 5645 024a 0E       		.uleb128 0xe
ARM GAS  /tmp/ccCX0vdB.s 			page 136


 5646 024b 3A       		.uleb128 0x3a
 5647 024c 0B       		.uleb128 0xb
 5648 024d 3B       		.uleb128 0x3b
 5649 024e 05       		.uleb128 0x5
 5650 024f 27       		.uleb128 0x27
 5651 0250 0C       		.uleb128 0xc
 5652 0251 11       		.uleb128 0x11
 5653 0252 01       		.uleb128 0x1
 5654 0253 12       		.uleb128 0x12
 5655 0254 01       		.uleb128 0x1
 5656 0255 40       		.uleb128 0x40
 5657 0256 06       		.uleb128 0x6
 5658 0257 00       		.byte	0
 5659 0258 00       		.byte	0
 5660 0259 2E       		.uleb128 0x2e
 5661 025a 2E       		.uleb128 0x2e
 5662 025b 01       		.byte	0x1
 5663 025c 3F       		.uleb128 0x3f
 5664 025d 0C       		.uleb128 0xc
 5665 025e 03       		.uleb128 0x3
 5666 025f 0E       		.uleb128 0xe
 5667 0260 3A       		.uleb128 0x3a
 5668 0261 0B       		.uleb128 0xb
 5669 0262 3B       		.uleb128 0x3b
 5670 0263 05       		.uleb128 0x5
 5671 0264 27       		.uleb128 0x27
 5672 0265 0C       		.uleb128 0xc
 5673 0266 11       		.uleb128 0x11
 5674 0267 01       		.uleb128 0x1
 5675 0268 12       		.uleb128 0x12
 5676 0269 01       		.uleb128 0x1
 5677 026a 40       		.uleb128 0x40
 5678 026b 06       		.uleb128 0x6
 5679 026c 01       		.uleb128 0x1
 5680 026d 13       		.uleb128 0x13
 5681 026e 00       		.byte	0
 5682 026f 00       		.byte	0
 5683 0270 2F       		.uleb128 0x2f
 5684 0271 34       		.uleb128 0x34
 5685 0272 00       		.byte	0
 5686 0273 03       		.uleb128 0x3
 5687 0274 0E       		.uleb128 0xe
 5688 0275 3A       		.uleb128 0x3a
 5689 0276 0B       		.uleb128 0xb
 5690 0277 3B       		.uleb128 0x3b
 5691 0278 05       		.uleb128 0x5
 5692 0279 49       		.uleb128 0x49
 5693 027a 13       		.uleb128 0x13
 5694 027b 02       		.uleb128 0x2
 5695 027c 0A       		.uleb128 0xa
 5696 027d 00       		.byte	0
 5697 027e 00       		.byte	0
 5698 027f 30       		.uleb128 0x30
 5699 0280 34       		.uleb128 0x34
 5700 0281 00       		.byte	0
 5701 0282 03       		.uleb128 0x3
 5702 0283 0E       		.uleb128 0xe
ARM GAS  /tmp/ccCX0vdB.s 			page 137


 5703 0284 3A       		.uleb128 0x3a
 5704 0285 0B       		.uleb128 0xb
 5705 0286 3B       		.uleb128 0x3b
 5706 0287 05       		.uleb128 0x5
 5707 0288 49       		.uleb128 0x49
 5708 0289 13       		.uleb128 0x13
 5709 028a 3F       		.uleb128 0x3f
 5710 028b 0C       		.uleb128 0xc
 5711 028c 3C       		.uleb128 0x3c
 5712 028d 0C       		.uleb128 0xc
 5713 028e 00       		.byte	0
 5714 028f 00       		.byte	0
 5715 0290 31       		.uleb128 0x31
 5716 0291 34       		.uleb128 0x34
 5717 0292 00       		.byte	0
 5718 0293 03       		.uleb128 0x3
 5719 0294 0E       		.uleb128 0xe
 5720 0295 3A       		.uleb128 0x3a
 5721 0296 0B       		.uleb128 0xb
 5722 0297 3B       		.uleb128 0x3b
 5723 0298 0B       		.uleb128 0xb
 5724 0299 49       		.uleb128 0x49
 5725 029a 13       		.uleb128 0x13
 5726 029b 3F       		.uleb128 0x3f
 5727 029c 0C       		.uleb128 0xc
 5728 029d 3C       		.uleb128 0x3c
 5729 029e 0C       		.uleb128 0xc
 5730 029f 00       		.byte	0
 5731 02a0 00       		.byte	0
 5732 02a1 32       		.uleb128 0x32
 5733 02a2 34       		.uleb128 0x34
 5734 02a3 00       		.byte	0
 5735 02a4 03       		.uleb128 0x3
 5736 02a5 0E       		.uleb128 0xe
 5737 02a6 3A       		.uleb128 0x3a
 5738 02a7 0B       		.uleb128 0xb
 5739 02a8 3B       		.uleb128 0x3b
 5740 02a9 0B       		.uleb128 0xb
 5741 02aa 49       		.uleb128 0x49
 5742 02ab 13       		.uleb128 0x13
 5743 02ac 3F       		.uleb128 0x3f
 5744 02ad 0C       		.uleb128 0xc
 5745 02ae 02       		.uleb128 0x2
 5746 02af 0A       		.uleb128 0xa
 5747 02b0 00       		.byte	0
 5748 02b1 00       		.byte	0
 5749 02b2 00       		.byte	0
 5750              		.section	.debug_loc,"",%progbits
 5751              	.Ldebug_loc0:
 5752              	.LLST0:
 5753 0000 00000000 		.4byte	.LFB14
 5754 0004 02000000 		.4byte	.LCFI0
 5755 0008 0200     		.2byte	0x2
 5756 000a 7D       		.byte	0x7d
 5757 000b 00       		.sleb128 0
 5758 000c 02000000 		.4byte	.LCFI0
 5759 0010 04000000 		.4byte	.LCFI1
ARM GAS  /tmp/ccCX0vdB.s 			page 138


 5760 0014 0200     		.2byte	0x2
 5761 0016 7D       		.byte	0x7d
 5762 0017 04       		.sleb128 4
 5763 0018 04000000 		.4byte	.LCFI1
 5764 001c 06000000 		.4byte	.LCFI2
 5765 0020 0200     		.2byte	0x2
 5766 0022 7D       		.byte	0x7d
 5767 0023 10       		.sleb128 16
 5768 0024 06000000 		.4byte	.LCFI2
 5769 0028 36000000 		.4byte	.LFE14
 5770 002c 0200     		.2byte	0x2
 5771 002e 77       		.byte	0x77
 5772 002f 10       		.sleb128 16
 5773 0030 00000000 		.4byte	0
 5774 0034 00000000 		.4byte	0
 5775              	.LLST1:
 5776 0038 00000000 		.4byte	.LFB20
 5777 003c 02000000 		.4byte	.LCFI3
 5778 0040 0200     		.2byte	0x2
 5779 0042 7D       		.byte	0x7d
 5780 0043 00       		.sleb128 0
 5781 0044 02000000 		.4byte	.LCFI3
 5782 0048 04000000 		.4byte	.LCFI4
 5783 004c 0200     		.2byte	0x2
 5784 004e 7D       		.byte	0x7d
 5785 004f 04       		.sleb128 4
 5786 0050 04000000 		.4byte	.LCFI4
 5787 0054 06000000 		.4byte	.LCFI5
 5788 0058 0200     		.2byte	0x2
 5789 005a 7D       		.byte	0x7d
 5790 005b 10       		.sleb128 16
 5791 005c 06000000 		.4byte	.LCFI5
 5792 0060 5C000000 		.4byte	.LFE20
 5793 0064 0200     		.2byte	0x2
 5794 0066 77       		.byte	0x77
 5795 0067 10       		.sleb128 16
 5796 0068 00000000 		.4byte	0
 5797 006c 00000000 		.4byte	0
 5798              	.LLST2:
 5799 0070 00000000 		.4byte	.LFB35
 5800 0074 02000000 		.4byte	.LCFI6
 5801 0078 0200     		.2byte	0x2
 5802 007a 7D       		.byte	0x7d
 5803 007b 00       		.sleb128 0
 5804 007c 02000000 		.4byte	.LCFI6
 5805 0080 04000000 		.4byte	.LCFI7
 5806 0084 0200     		.2byte	0x2
 5807 0086 7D       		.byte	0x7d
 5808 0087 0C       		.sleb128 12
 5809 0088 04000000 		.4byte	.LCFI7
 5810 008c 06000000 		.4byte	.LCFI8
 5811 0090 0200     		.2byte	0x2
 5812 0092 7D       		.byte	0x7d
 5813 0093 30       		.sleb128 48
 5814 0094 06000000 		.4byte	.LCFI8
 5815 0098 4C020000 		.4byte	.LFE35
 5816 009c 0200     		.2byte	0x2
ARM GAS  /tmp/ccCX0vdB.s 			page 139


 5817 009e 77       		.byte	0x77
 5818 009f 18       		.sleb128 24
 5819 00a0 00000000 		.4byte	0
 5820 00a4 00000000 		.4byte	0
 5821              	.LLST3:
 5822 00a8 00000000 		.4byte	.LFB36
 5823 00ac 02000000 		.4byte	.LCFI9
 5824 00b0 0200     		.2byte	0x2
 5825 00b2 7D       		.byte	0x7d
 5826 00b3 00       		.sleb128 0
 5827 00b4 02000000 		.4byte	.LCFI9
 5828 00b8 04000000 		.4byte	.LCFI10
 5829 00bc 0200     		.2byte	0x2
 5830 00be 7D       		.byte	0x7d
 5831 00bf 08       		.sleb128 8
 5832 00c0 04000000 		.4byte	.LCFI10
 5833 00c4 06000000 		.4byte	.LCFI11
 5834 00c8 0200     		.2byte	0x2
 5835 00ca 7D       		.byte	0x7d
 5836 00cb 10       		.sleb128 16
 5837 00cc 06000000 		.4byte	.LCFI11
 5838 00d0 AA010000 		.4byte	.LFE36
 5839 00d4 0200     		.2byte	0x2
 5840 00d6 77       		.byte	0x77
 5841 00d7 10       		.sleb128 16
 5842 00d8 00000000 		.4byte	0
 5843 00dc 00000000 		.4byte	0
 5844              	.LLST4:
 5845 00e0 00000000 		.4byte	.LFB37
 5846 00e4 02000000 		.4byte	.LCFI12
 5847 00e8 0200     		.2byte	0x2
 5848 00ea 7D       		.byte	0x7d
 5849 00eb 00       		.sleb128 0
 5850 00ec 02000000 		.4byte	.LCFI12
 5851 00f0 04000000 		.4byte	.LCFI13
 5852 00f4 0200     		.2byte	0x2
 5853 00f6 7D       		.byte	0x7d
 5854 00f7 0C       		.sleb128 12
 5855 00f8 04000000 		.4byte	.LCFI13
 5856 00fc 06000000 		.4byte	.LCFI14
 5857 0100 0300     		.2byte	0x3
 5858 0102 7D       		.byte	0x7d
 5859 0103 D000     		.sleb128 80
 5860 0105 06000000 		.4byte	.LCFI14
 5861 0109 28040000 		.4byte	.LFE37
 5862 010d 0300     		.2byte	0x3
 5863 010f 77       		.byte	0x77
 5864 0110 C800     		.sleb128 72
 5865 0112 00000000 		.4byte	0
 5866 0116 00000000 		.4byte	0
 5867              	.LLST5:
 5868 011a 00000000 		.4byte	.LFB38
 5869 011e 02000000 		.4byte	.LCFI15
 5870 0122 0200     		.2byte	0x2
 5871 0124 7D       		.byte	0x7d
 5872 0125 00       		.sleb128 0
 5873 0126 02000000 		.4byte	.LCFI15
ARM GAS  /tmp/ccCX0vdB.s 			page 140


 5874 012a 04000000 		.4byte	.LCFI16
 5875 012e 0200     		.2byte	0x2
 5876 0130 7D       		.byte	0x7d
 5877 0131 08       		.sleb128 8
 5878 0132 04000000 		.4byte	.LCFI16
 5879 0136 06000000 		.4byte	.LCFI17
 5880 013a 0200     		.2byte	0x2
 5881 013c 7D       		.byte	0x7d
 5882 013d 10       		.sleb128 16
 5883 013e 06000000 		.4byte	.LCFI17
 5884 0142 5C020000 		.4byte	.LFE38
 5885 0146 0200     		.2byte	0x2
 5886 0148 77       		.byte	0x77
 5887 0149 10       		.sleb128 16
 5888 014a 00000000 		.4byte	0
 5889 014e 00000000 		.4byte	0
 5890              	.LLST6:
 5891 0152 00000000 		.4byte	.LFB39
 5892 0156 02000000 		.4byte	.LCFI18
 5893 015a 0200     		.2byte	0x2
 5894 015c 7D       		.byte	0x7d
 5895 015d 00       		.sleb128 0
 5896 015e 02000000 		.4byte	.LCFI18
 5897 0162 04000000 		.4byte	.LCFI19
 5898 0166 0200     		.2byte	0x2
 5899 0168 7D       		.byte	0x7d
 5900 0169 08       		.sleb128 8
 5901 016a 04000000 		.4byte	.LCFI19
 5902 016e 2C000000 		.4byte	.LFE39
 5903 0172 0200     		.2byte	0x2
 5904 0174 77       		.byte	0x77
 5905 0175 08       		.sleb128 8
 5906 0176 00000000 		.4byte	0
 5907 017a 00000000 		.4byte	0
 5908              	.LLST7:
 5909 017e 00000000 		.4byte	.LFB40
 5910 0182 02000000 		.4byte	.LCFI20
 5911 0186 0200     		.2byte	0x2
 5912 0188 7D       		.byte	0x7d
 5913 0189 00       		.sleb128 0
 5914 018a 02000000 		.4byte	.LCFI20
 5915 018e 04000000 		.4byte	.LCFI21
 5916 0192 0200     		.2byte	0x2
 5917 0194 7D       		.byte	0x7d
 5918 0195 08       		.sleb128 8
 5919 0196 04000000 		.4byte	.LCFI21
 5920 019a 06000000 		.4byte	.LCFI22
 5921 019e 0200     		.2byte	0x2
 5922 01a0 7D       		.byte	0x7d
 5923 01a1 10       		.sleb128 16
 5924 01a2 06000000 		.4byte	.LCFI22
 5925 01a6 42010000 		.4byte	.LFE40
 5926 01aa 0200     		.2byte	0x2
 5927 01ac 77       		.byte	0x77
 5928 01ad 10       		.sleb128 16
 5929 01ae 00000000 		.4byte	0
 5930 01b2 00000000 		.4byte	0
ARM GAS  /tmp/ccCX0vdB.s 			page 141


 5931              		.section	.debug_aranges,"",%progbits
 5932 0000 54000000 		.4byte	0x54
 5933 0004 0200     		.2byte	0x2
 5934 0006 00000000 		.4byte	.Ldebug_info0
 5935 000a 04       		.byte	0x4
 5936 000b 00       		.byte	0
 5937 000c 0000     		.2byte	0
 5938 000e 0000     		.2byte	0
 5939 0010 00000000 		.4byte	.LFB14
 5940 0014 36000000 		.4byte	.LFE14-.LFB14
 5941 0018 00000000 		.4byte	.LFB20
 5942 001c 5C000000 		.4byte	.LFE20-.LFB20
 5943 0020 00000000 		.4byte	.LFB35
 5944 0024 4C020000 		.4byte	.LFE35-.LFB35
 5945 0028 00000000 		.4byte	.LFB36
 5946 002c AA010000 		.4byte	.LFE36-.LFB36
 5947 0030 00000000 		.4byte	.LFB37
 5948 0034 28040000 		.4byte	.LFE37-.LFB37
 5949 0038 00000000 		.4byte	.LFB38
 5950 003c 5C020000 		.4byte	.LFE38-.LFB38
 5951 0040 00000000 		.4byte	.LFB39
 5952 0044 2C000000 		.4byte	.LFE39-.LFB39
 5953 0048 00000000 		.4byte	.LFB40
 5954 004c 42010000 		.4byte	.LFE40-.LFB40
 5955 0050 00000000 		.4byte	0
 5956 0054 00000000 		.4byte	0
 5957              		.section	.debug_ranges,"",%progbits
 5958              	.Ldebug_ranges0:
 5959 0000 00000000 		.4byte	.LFB14
 5960 0004 36000000 		.4byte	.LFE14
 5961 0008 00000000 		.4byte	.LFB20
 5962 000c 5C000000 		.4byte	.LFE20
 5963 0010 00000000 		.4byte	.LFB35
 5964 0014 4C020000 		.4byte	.LFE35
 5965 0018 00000000 		.4byte	.LFB36
 5966 001c AA010000 		.4byte	.LFE36
 5967 0020 00000000 		.4byte	.LFB37
 5968 0024 28040000 		.4byte	.LFE37
 5969 0028 00000000 		.4byte	.LFB38
 5970 002c 5C020000 		.4byte	.LFE38
 5971 0030 00000000 		.4byte	.LFB39
 5972 0034 2C000000 		.4byte	.LFE39
 5973 0038 00000000 		.4byte	.LFB40
 5974 003c 42010000 		.4byte	.LFE40
 5975 0040 00000000 		.4byte	0
 5976 0044 00000000 		.4byte	0
 5977              		.section	.debug_line,"",%progbits
 5978              	.Ldebug_line0:
 5979 0000 6D030000 		.section	.debug_str,"MS",%progbits,1
 5979      02009201 
 5979      00000201 
 5979      FB0E0D00 
 5979      01010101 
 5980              	.LASF161:
 5981 0000 52534552 		.ascii	"RSERVED1\000"
 5981      56454431 
 5981      00
ARM GAS  /tmp/ccCX0vdB.s 			page 142


 5982              	.LASF317:
 5983 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 5983      5F456E61 
 5983      626C6549 
 5983      525100
 5984              	.LASF147:
 5985 0018 5443325F 		.ascii	"TC2_IRQn\000"
 5985      4952516E 
 5985      00
 5986              	.LASF270:
 5987 0021 50574D5F 		.ascii	"PWM_RNPR\000"
 5987      524E5052 
 5987      00
 5988              	.LASF14:
 5989 002a 5F5F7661 		.ascii	"__value\000"
 5989      6C756500 
 5990              	.LASF66:
 5991 0032 5F5F7366 		.ascii	"__sf\000"
 5991      00
 5992              	.LASF330:
 5993 0037 64757479 		.ascii	"duty\000"
 5993      00
 5994              	.LASF75:
 5995 003c 5F726561 		.ascii	"_read\000"
 5995      6400
 5996              	.LASF170:
 5997 0042 4E564943 		.ascii	"NVIC_Type\000"
 5997      5F547970 
 5997      6500
 5998              	.LASF239:
 5999 004c 50574D5F 		.ascii	"PWM_IER1\000"
 5999      49455231 
 5999      00
 6000              	.LASF76:
 6001 0055 5F777269 		.ascii	"_write\000"
 6001      746500
 6002              	.LASF62:
 6003 005c 5F617363 		.ascii	"_asctime_buf\000"
 6003      74696D65 
 6003      5F627566 
 6003      00
 6004              	.LASF58:
 6005 0069 5F637674 		.ascii	"_cvtlen\000"
 6005      6C656E00 
 6006              	.LASF265:
 6007 0071 50574D5F 		.ascii	"PWM_WPSR\000"
 6007      57505352 
 6007      00
 6008              	.LASF200:
 6009 007a 4144435F 		.ascii	"ADC_EMR\000"
 6009      454D5200 
 6010              	.LASF197:
 6011 0082 4144435F 		.ascii	"ADC_ISR\000"
 6011      49535200 
 6012              	.LASF333:
 6013 008a 5F737461 		.ascii	"_state\000"
 6013      746500
ARM GAS  /tmp/ccCX0vdB.s 			page 143


 6014              	.LASF24:
 6015 0091 5F5F746D 		.ascii	"__tm\000"
 6015      00
 6016              	.LASF112:
 6017 0096 5F776373 		.ascii	"_wcsrtombs_state\000"
 6017      72746F6D 
 6017      62735F73 
 6017      74617465 
 6017      00
 6018              	.LASF80:
 6019 00a7 5F6E6275 		.ascii	"_nbuf\000"
 6019      6600
 6020              	.LASF25:
 6021 00ad 5F5F746D 		.ascii	"__tm_sec\000"
 6021      5F736563 
 6021      00
 6022              	.LASF106:
 6023 00b6 5F6C3634 		.ascii	"_l64a_buf\000"
 6023      615F6275 
 6023      6600
 6024              	.LASF173:
 6025 00c0 56544F52 		.ascii	"VTOR\000"
 6025      00
 6026              	.LASF269:
 6027 00c5 50574D5F 		.ascii	"PWM_TCR\000"
 6027      54435200 
 6028              	.LASF325:
 6029 00cd 73746174 		.ascii	"state\000"
 6029      6500
 6030              	.LASF83:
 6031 00d3 5F6C6F63 		.ascii	"_lock\000"
 6031      6B00
 6032              	.LASF259:
 6033 00d9 50574D5F 		.ascii	"PWM_FCR\000"
 6033      46435200 
 6034              	.LASF299:
 6035 00e1 54435F46 		.ascii	"TC_FMR\000"
 6035      4D5200
 6036              	.LASF205:
 6037 00e8 52657365 		.ascii	"Reserved3\000"
 6037      72766564 
 6037      3300
 6038              	.LASF278:
 6039 00f2 52657365 		.ascii	"Reserved7\000"
 6039      72766564 
 6039      3700
 6040              	.LASF93:
 6041 00fc 5F6D756C 		.ascii	"_mult\000"
 6041      7400
 6042              	.LASF211:
 6043 0102 4144435F 		.ascii	"ADC_RPR\000"
 6043      52505200 
 6044              	.LASF126:
 6045 010a 52535443 		.ascii	"RSTC_IRQn\000"
 6045      5F495251 
 6045      6E00
 6046              	.LASF215:
ARM GAS  /tmp/ccCX0vdB.s 			page 144


 6047 0114 4144435F 		.ascii	"ADC_RNPR\000"
 6047      524E5052 
 6047      00
 6048              	.LASF164:
 6049 011d 49435052 		.ascii	"ICPR\000"
 6049      00
 6050              	.LASF297:
 6051 0122 54435F51 		.ascii	"TC_QIMR\000"
 6051      494D5200 
 6052              	.LASF217:
 6053 012a 4144435F 		.ascii	"ADC_TNPR\000"
 6053      544E5052 
 6053      00
 6054              	.LASF271:
 6055 0133 50574D5F 		.ascii	"PWM_RNCR\000"
 6055      524E4352 
 6055      00
 6056              	.LASF11:
 6057 013c 5F5F7763 		.ascii	"__wch\000"
 6057      6800
 6058              	.LASF292:
 6059 0142 54435F43 		.ascii	"TC_CHANNEL\000"
 6059      48414E4E 
 6059      454C00
 6060              	.LASF209:
 6061 014d 4144435F 		.ascii	"ADC_WPSR\000"
 6061      57505352 
 6061      00
 6062              	.LASF71:
 6063 0156 5F66696C 		.ascii	"_file\000"
 6063      6500
 6064              	.LASF34:
 6065 015c 5F6F6E5F 		.ascii	"_on_exit_args\000"
 6065      65786974 
 6065      5F617267 
 6065      7300
 6066              	.LASF174:
 6067 016a 41495243 		.ascii	"AIRCR\000"
 6067      5200
 6068              	.LASF314:
 6069 0170 74726973 		.ascii	"tristate\000"
 6069      74617465 
 6069      00
 6070              	.LASF337:
 6071 0179 72656C65 		.ascii	"releasetime\000"
 6071      61736574 
 6071      696D6500 
 6072              	.LASF154:
 6073 0185 43524343 		.ascii	"CRCCU_IRQn\000"
 6073      555F4952 
 6073      516E00
 6074              	.LASF306:
 6075 0190 52414D50 		.ascii	"RAMP\000"
 6075      00
 6076              	.LASF280:
 6077 0195 54435F43 		.ascii	"TC_CCR\000"
 6077      435200
ARM GAS  /tmp/ccCX0vdB.s 			page 145


 6078              	.LASF108:
 6079 019c 5F6D6272 		.ascii	"_mbrlen_state\000"
 6079      6C656E5F 
 6079      73746174 
 6079      6500
 6080              	.LASF7:
 6081 01aa 6C6F6E67 		.ascii	"long int\000"
 6081      20696E74 
 6081      00
 6082              	.LASF331:
 6083 01b3 5F696D70 		.ascii	"_impure_ptr\000"
 6083      7572655F 
 6083      70747200 
 6084              	.LASF98:
 6085 01bf 5F726573 		.ascii	"_result_k\000"
 6085      756C745F 
 6085      6B00
 6086              	.LASF226:
 6087 01c9 50574D5F 		.ascii	"PWM_CCNT\000"
 6087      43434E54 
 6087      00
 6088              	.LASF45:
 6089 01d2 5F73697A 		.ascii	"_size\000"
 6089      6500
 6090              	.LASF171:
 6091 01d8 43505549 		.ascii	"CPUID\000"
 6091      4400
 6092              	.LASF61:
 6093 01de 5F6C6F63 		.ascii	"_localtime_buf\000"
 6093      616C7469 
 6093      6D655F62 
 6093      756600
 6094              	.LASF213:
 6095 01ed 4144435F 		.ascii	"ADC_TPR\000"
 6095      54505200 
 6096              	.LASF326:
 6097 01f5 6D61696E 		.ascii	"main\000"
 6097      00
 6098              	.LASF319:
 6099 01fa 4952516E 		.ascii	"IRQn\000"
 6099      00
 6100              	.LASF150:
 6101 01ff 5443355F 		.ascii	"TC5_IRQn\000"
 6101      4952516E 
 6101      00
 6102              	.LASF29:
 6103 0208 5F5F746D 		.ascii	"__tm_mon\000"
 6103      5F6D6F6E 
 6103      00
 6104              	.LASF318:
 6105 0211 4E564943 		.ascii	"NVIC_SetPriority\000"
 6105      5F536574 
 6105      5072696F 
 6105      72697479 
 6105      00
 6106              	.LASF101:
 6107 0222 5F6D6973 		.ascii	"_misc_reent\000"
ARM GAS  /tmp/ccCX0vdB.s 			page 146


 6107      635F7265 
 6107      656E7400 
 6108              	.LASF124:
 6109 022e 53797354 		.ascii	"SysTick_IRQn\000"
 6109      69636B5F 
 6109      4952516E 
 6109      00
 6110              	.LASF54:
 6111 023b 5F637572 		.ascii	"_current_category\000"
 6111      72656E74 
 6111      5F636174 
 6111      65676F72 
 6111      7900
 6112              	.LASF172:
 6113 024d 49435352 		.ascii	"ICSR\000"
 6113      00
 6114              	.LASF0:
 6115 0252 7369676E 		.ascii	"signed char\000"
 6115      65642063 
 6115      68617200 
 6116              	.LASF113:
 6117 025e 75696E74 		.ascii	"uint8_t\000"
 6117      385F7400 
 6118              	.LASF252:
 6119 0266 50574D5F 		.ascii	"PWM_OS\000"
 6119      4F5300
 6120              	.LASF327:
 6121 026d 74696D65 		.ascii	"timestamp\000"
 6121      7374616D 
 6121      7000
 6122              	.LASF291:
 6123 0277 54634368 		.ascii	"TcChannel\000"
 6123      616E6E65 
 6123      6C00
 6124              	.LASF263:
 6125 0281 50574D5F 		.ascii	"PWM_SMMR\000"
 6125      534D4D52 
 6125      00
 6126              	.LASF159:
 6127 028a 52455345 		.ascii	"RESERVED0\000"
 6127      52564544 
 6127      3000
 6128              	.LASF1:
 6129 0294 756E7369 		.ascii	"unsigned char\000"
 6129      676E6564 
 6129      20636861 
 6129      7200
 6130              	.LASF165:
 6131 02a2 52455345 		.ascii	"RESERVED3\000"
 6131      52564544 
 6131      3300
 6132              	.LASF167:
 6133 02ac 52455345 		.ascii	"RESERVED4\000"
 6133      52564544 
 6133      3400
 6134              	.LASF168:
 6135 02b6 52455345 		.ascii	"RESERVED5\000"
ARM GAS  /tmp/ccCX0vdB.s 			page 147


 6135      52564544 
 6135      3500
 6136              	.LASF261:
 6137 02c0 50574D5F 		.ascii	"PWM_FPE\000"
 6137      46504500 
 6138              	.LASF236:
 6139 02c8 50574D5F 		.ascii	"PWM_ENA\000"
 6139      454E4100 
 6140              	.LASF166:
 6141 02d0 49414252 		.ascii	"IABR\000"
 6141      00
 6142              	.LASF309:
 6143 02d5 6374726C 		.ascii	"ctrl\000"
 6143      00
 6144              	.LASF343:
 6145 02da 5F5F4655 		.ascii	"__FUNCTION__\000"
 6145      4E435449 
 6145      4F4E5F5F 
 6145      00
 6146              	.LASF46:
 6147 02e7 5F726565 		.ascii	"_reent\000"
 6147      6E7400
 6148              	.LASF260:
 6149 02ee 50574D5F 		.ascii	"PWM_FPV\000"
 6149      46505600 
 6150              	.LASF301:
 6151 02f6 5744545F 		.ascii	"WDT_CR\000"
 6151      435200
 6152              	.LASF163:
 6153 02fd 52455345 		.ascii	"RESERVED2\000"
 6153      52564544 
 6153      3200
 6154              	.LASF120:
 6155 0307 55736167 		.ascii	"UsageFault_IRQn\000"
 6155      65466175 
 6155      6C745F49 
 6155      52516E00 
 6156              	.LASF284:
 6157 0317 54435F52 		.ascii	"TC_RA\000"
 6157      4100
 6158              	.LASF285:
 6159 031d 54435F52 		.ascii	"TC_RB\000"
 6159      4200
 6160              	.LASF286:
 6161 0323 54435F52 		.ascii	"TC_RC\000"
 6161      4300
 6162              	.LASF86:
 6163 0329 63686172 		.ascii	"char\000"
 6163      00
 6164              	.LASF41:
 6165 032e 5F666E73 		.ascii	"_fns\000"
 6165      00
 6166              	.LASF313:
 6167 0333 6F757470 		.ascii	"output\000"
 6167      757400
 6168              	.LASF184:
 6169 033a 5343425F 		.ascii	"SCB_Type\000"
ARM GAS  /tmp/ccCX0vdB.s 			page 148


 6169      54797065 
 6169      00
 6170              	.LASF294:
 6171 0343 54435F42 		.ascii	"TC_BMR\000"
 6171      4D5200
 6172              	.LASF78:
 6173 034a 5F636C6F 		.ascii	"_close\000"
 6173      736500
 6174              	.LASF178:
 6175 0351 44465352 		.ascii	"DFSR\000"
 6175      00
 6176              	.LASF134:
 6177 0356 534D435F 		.ascii	"SMC_IRQn\000"
 6177      4952516E 
 6177      00
 6178              	.LASF272:
 6179 035f 50574D5F 		.ascii	"PWM_TNPR\000"
 6179      544E5052 
 6179      00
 6180              	.LASF251:
 6181 0368 50574D5F 		.ascii	"PWM_OOV\000"
 6181      4F4F5600 
 6182              	.LASF298:
 6183 0370 54435F51 		.ascii	"TC_QISR\000"
 6183      49535200 
 6184              	.LASF229:
 6185 0378 50776D43 		.ascii	"PwmCh_num\000"
 6185      685F6E75 
 6185      6D00
 6186              	.LASF48:
 6187 0382 5F737464 		.ascii	"_stdin\000"
 6187      696E00
 6188              	.LASF311:
 6189 0389 72536C6F 		.ascii	"rSlope\000"
 6189      706500
 6190              	.LASF336:
 6191 0390 72747269 		.ascii	"rtrip\000"
 6191      7000
 6192              	.LASF177:
 6193 0396 48465352 		.ascii	"HFSR\000"
 6193      00
 6194              	.LASF246:
 6195 039b 50574D5F 		.ascii	"PWM_SCUPUPD\000"
 6195      53435550 
 6195      55504400 
 6196              	.LASF287:
 6197 03a7 54435F53 		.ascii	"TC_SR\000"
 6197      5200
 6198              	.LASF275:
 6199 03ad 50574D5F 		.ascii	"PWM_PTSR\000"
 6199      50545352 
 6199      00
 6200              	.LASF241:
 6201 03b6 50574D5F 		.ascii	"PWM_IMR1\000"
 6201      494D5231 
 6201      00
 6202              	.LASF249:
ARM GAS  /tmp/ccCX0vdB.s 			page 149


 6203 03bf 50574D5F 		.ascii	"PWM_IMR2\000"
 6203      494D5232 
 6203      00
 6204              	.LASF153:
 6205 03c8 50574D5F 		.ascii	"PWM_IRQn\000"
 6205      4952516E 
 6205      00
 6206              	.LASF162:
 6207 03d1 49535052 		.ascii	"ISPR\000"
 6207      00
 6208              	.LASF268:
 6209 03d6 50574D5F 		.ascii	"PWM_TPR\000"
 6209      54505200 
 6210              	.LASF316:
 6211 03de 696E7075 		.ascii	"input\000"
 6211      7400
 6212              	.LASF212:
 6213 03e4 4144435F 		.ascii	"ADC_RCR\000"
 6213      52435200 
 6214              	.LASF238:
 6215 03ec 50574D5F 		.ascii	"PWM_SR\000"
 6215      535200
 6216              	.LASF175:
 6217 03f3 53484353 		.ascii	"SHCSR\000"
 6217      5200
 6218              	.LASF204:
 6219 03f9 4144435F 		.ascii	"ADC_CDR\000"
 6219      43445200 
 6220              	.LASF169:
 6221 0401 53544952 		.ascii	"STIR\000"
 6221      00
 6222              	.LASF155:
 6223 0406 4143435F 		.ascii	"ACC_IRQn\000"
 6223      4952516E 
 6223      00
 6224              	.LASF74:
 6225 040f 5F636F6F 		.ascii	"_cookie\000"
 6225      6B696500 
 6226              	.LASF22:
 6227 0417 5F776473 		.ascii	"_wds\000"
 6227      00
 6228              	.LASF130:
 6229 041c 504D435F 		.ascii	"PMC_IRQn\000"
 6229      4952516E 
 6229      00
 6230              	.LASF131:
 6231 0425 4546435F 		.ascii	"EFC_IRQn\000"
 6231      4952516E 
 6231      00
 6232              	.LASF63:
 6233 042e 5F736967 		.ascii	"_sig_func\000"
 6233      5F66756E 
 6233      6300
 6234              	.LASF82:
 6235 0438 5F6F6666 		.ascii	"_offset\000"
 6235      73657400 
 6236              	.LASF59:
ARM GAS  /tmp/ccCX0vdB.s 			page 150


 6237 0440 5F637674 		.ascii	"_cvtbuf\000"
 6237      62756600 
 6238              	.LASF125:
 6239 0448 53555043 		.ascii	"SUPC_IRQn\000"
 6239      5F495251 
 6239      6E00
 6240              	.LASF289:
 6241 0452 54435F49 		.ascii	"TC_IDR\000"
 6241      445200
 6242              	.LASF146:
 6243 0459 5443315F 		.ascii	"TC1_IRQn\000"
 6243      4952516E 
 6243      00
 6244              	.LASF137:
 6245 0462 50494F43 		.ascii	"PIOC_IRQn\000"
 6245      5F495251 
 6245      6E00
 6246              	.LASF328:
 6247 046c 4144435F 		.ascii	"ADC_IrqHandler\000"
 6247      49727148 
 6247      616E646C 
 6247      657200
 6248              	.LASF220:
 6249 047b 4144435F 		.ascii	"ADC_PTSR\000"
 6249      50545352 
 6249      00
 6250              	.LASF128:
 6251 0484 5254545F 		.ascii	"RTT_IRQn\000"
 6251      4952516E 
 6251      00
 6252              	.LASF156:
 6253 048d 5544505F 		.ascii	"UDP_IRQn\000"
 6253      4952516E 
 6253      00
 6254              	.LASF152:
 6255 0496 44414343 		.ascii	"DACC_IRQn\000"
 6255      5F495251 
 6255      6E00
 6256              	.LASF117:
 6257 04a0 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6257      61736B61 
 6257      626C6549 
 6257      6E745F49 
 6257      52516E00 
 6258              	.LASF257:
 6259 04b4 50574D5F 		.ascii	"PWM_FMR\000"
 6259      464D5200 
 6260              	.LASF254:
 6261 04bc 50574D5F 		.ascii	"PWM_OSC\000"
 6261      4F534300 
 6262              	.LASF191:
 6263 04c4 4144435F 		.ascii	"ADC_CHSR\000"
 6263      43485352 
 6263      00
 6264              	.LASF99:
 6265 04cd 5F703573 		.ascii	"_p5s\000"
 6265      00
ARM GAS  /tmp/ccCX0vdB.s 			page 151


 6266              	.LASF18:
 6267 04d2 6C6F6E67 		.ascii	"long unsigned int\000"
 6267      20756E73 
 6267      69676E65 
 6267      6420696E 
 6267      7400
 6268              	.LASF253:
 6269 04e4 50574D5F 		.ascii	"PWM_OSS\000"
 6269      4F535300 
 6270              	.LASF231:
 6271 04ec 50574D5F 		.ascii	"PWM_CMPxVUPD\000"
 6271      434D5078 
 6271      56555044 
 6271      00
 6272              	.LASF118:
 6273 04f9 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 6273      72794D61 
 6273      6E616765 
 6273      6D656E74 
 6273      5F495251 
 6274              	.LASF288:
 6275 050f 54435F49 		.ascii	"TC_IER\000"
 6275      455200
 6276              	.LASF69:
 6277 0516 5F5F7346 		.ascii	"__sFILE\000"
 6277      494C4500 
 6278              	.LASF53:
 6279 051e 5F5F7364 		.ascii	"__sdidinit\000"
 6279      6964696E 
 6279      697400
 6280              	.LASF85:
 6281 0529 5F666C61 		.ascii	"_flags2\000"
 6281      67733200 
 6282              	.LASF273:
 6283 0531 50574D5F 		.ascii	"PWM_TNCR\000"
 6283      544E4352 
 6283      00
 6284              	.LASF157:
 6285 053a 4952516E 		.ascii	"IRQn_Type\000"
 6285      5F547970 
 6285      6500
 6286              	.LASF324:
 6287 0544 6C696E65 		.ascii	"line\000"
 6287      00
 6288              	.LASF8:
 6289 0549 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 6289      4B5F5245 
 6289      43555253 
 6289      4956455F 
 6289      5400
 6290              	.LASF47:
 6291 055b 5F657272 		.ascii	"_errno\000"
 6291      6E6F00
 6292              	.LASF202:
 6293 0562 4144435F 		.ascii	"ADC_CGR\000"
 6293      43475200 
 6294              	.LASF68:
ARM GAS  /tmp/ccCX0vdB.s 			page 152


 6295 056a 5F736967 		.ascii	"_signal_buf\000"
 6295      6E616C5F 
 6295      62756600 
 6296              	.LASF315:
 6297 0576 74726970 		.ascii	"trip\000"
 6297      00
 6298              	.LASF186:
 6299 057b 4144435F 		.ascii	"ADC_MR\000"
 6299      4D5200
 6300              	.LASF193:
 6301 0582 4144435F 		.ascii	"ADC_LCDR\000"
 6301      4C434452 
 6301      00
 6302              	.LASF304:
 6303 058b 6374726C 		.ascii	"ctrlio_t\000"
 6303      696F5F74 
 6303      00
 6304              	.LASF129:
 6305 0594 5744545F 		.ascii	"WDT_IRQn\000"
 6305      4952516E 
 6305      00
 6306              	.LASF322:
 6307 059d 61726763 		.ascii	"argc\000"
 6307      00
 6308              	.LASF23:
 6309 05a2 5F426967 		.ascii	"_Bigint\000"
 6309      696E7400 
 6310              	.LASF245:
 6311 05aa 50574D5F 		.ascii	"PWM_SCUP\000"
 6311      53435550 
 6311      00
 6312              	.LASF20:
 6313 05b3 5F6D6178 		.ascii	"_maxwds\000"
 6313      77647300 
 6314              	.LASF323:
 6315 05bb 61726776 		.ascii	"argv\000"
 6315      00
 6316              	.LASF56:
 6317 05c0 5F5F636C 		.ascii	"__cleanup\000"
 6317      65616E75 
 6317      7000
 6318              	.LASF119:
 6319 05ca 42757346 		.ascii	"BusFault_IRQn\000"
 6319      61756C74 
 6319      5F495251 
 6319      6E00
 6320              	.LASF281:
 6321 05d8 54435F43 		.ascii	"TC_CMR\000"
 6321      4D5200
 6322              	.LASF64:
 6323 05df 5F617465 		.ascii	"_atexit0\000"
 6323      78697430 
 6323      00
 6324              	.LASF52:
 6325 05e8 5F656D65 		.ascii	"_emergency\000"
 6325      7267656E 
 6325      637900
ARM GAS  /tmp/ccCX0vdB.s 			page 153


 6326              	.LASF5:
 6327 05f3 6C6F6E67 		.ascii	"long long int\000"
 6327      206C6F6E 
 6327      6720696E 
 6327      7400
 6328              	.LASF267:
 6329 0601 50574D5F 		.ascii	"PWM_RCR\000"
 6329      52435200 
 6330              	.LASF42:
 6331 0609 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 6331      65786974 
 6331      5F617267 
 6331      735F7074 
 6331      7200
 6332              	.LASF240:
 6333 061b 50574D5F 		.ascii	"PWM_IDR1\000"
 6333      49445231 
 6333      00
 6334              	.LASF248:
 6335 0624 50574D5F 		.ascii	"PWM_IDR2\000"
 6335      49445232 
 6335      00
 6336              	.LASF223:
 6337 062d 50574D5F 		.ascii	"PWM_CDTYUPD\000"
 6337      43445459 
 6337      55504400 
 6338              	.LASF89:
 6339 0639 5F6E696F 		.ascii	"_niobs\000"
 6339      627300
 6340              	.LASF142:
 6341 0640 54574931 		.ascii	"TWI1_IRQn\000"
 6341      5F495251 
 6341      6E00
 6342              	.LASF65:
 6343 064a 5F5F7367 		.ascii	"__sglue\000"
 6343      6C756500 
 6344              	.LASF264:
 6345 0652 50574D5F 		.ascii	"PWM_WPCR\000"
 6345      57504352 
 6345      00
 6346              	.LASF279:
 6347 065b 50574D5F 		.ascii	"PWM_CH_NUM\000"
 6347      43485F4E 
 6347      554D00
 6348              	.LASF340:
 6349 0666 6D61696E 		.ascii	"main.c\000"
 6349      2E6300
 6350              	.LASF121:
 6351 066d 53564361 		.ascii	"SVCall_IRQn\000"
 6351      6C6C5F49 
 6351      52516E00 
 6352              	.LASF57:
 6353 0679 5F67616D 		.ascii	"_gamma_signgam\000"
 6353      6D615F73 
 6353      69676E67 
 6353      616D00
 6354              	.LASF308:
ARM GAS  /tmp/ccCX0vdB.s 			page 154


 6355 0688 6374726C 		.ascii	"ctrlmode_t\000"
 6355      6D6F6465 
 6355      5F7400
 6356              	.LASF242:
 6357 0693 50574D5F 		.ascii	"PWM_ISR1\000"
 6357      49535231 
 6357      00
 6358              	.LASF250:
 6359 069c 50574D5F 		.ascii	"PWM_ISR2\000"
 6359      49535232 
 6359      00
 6360              	.LASF55:
 6361 06a5 5F637572 		.ascii	"_current_locale\000"
 6361      72656E74 
 6361      5F6C6F63 
 6361      616C6500 
 6362              	.LASF100:
 6363 06b5 5F667265 		.ascii	"_freelist\000"
 6363      656C6973 
 6363      7400
 6364              	.LASF90:
 6365 06bf 5F696F62 		.ascii	"_iobs\000"
 6365      7300
 6366              	.LASF88:
 6367 06c5 5F676C75 		.ascii	"_glue\000"
 6367      6500
 6368              	.LASF332:
 6369 06cb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6369      52784275 
 6369      66666572 
 6369      00
 6370              	.LASF21:
 6371 06d8 5F736967 		.ascii	"_sign\000"
 6371      6E00
 6372              	.LASF312:
 6373 06de 5F646478 		.ascii	"_ddx\000"
 6373      00
 6374              	.LASF307:
 6375 06e3 53544F50 		.ascii	"STOP\000"
 6375      00
 6376              	.LASF195:
 6377 06e8 4144435F 		.ascii	"ADC_IDR\000"
 6377      49445200 
 6378              	.LASF222:
 6379 06f0 50574D5F 		.ascii	"PWM_CDTY\000"
 6379      43445459 
 6379      00
 6380              	.LASF4:
 6381 06f9 756E7369 		.ascii	"unsigned int\000"
 6381      676E6564 
 6381      20696E74 
 6381      00
 6382              	.LASF149:
 6383 0706 5443345F 		.ascii	"TC4_IRQn\000"
 6383      4952516E 
 6383      00
 6384              	.LASF141:
ARM GAS  /tmp/ccCX0vdB.s 			page 155


 6385 070f 54574930 		.ascii	"TWI0_IRQn\000"
 6385      5F495251 
 6385      6E00
 6386              	.LASF302:
 6387 0719 5744545F 		.ascii	"WDT_MR\000"
 6387      4D5200
 6388              	.LASF111:
 6389 0720 5F776372 		.ascii	"_wcrtomb_state\000"
 6389      746F6D62 
 6389      5F737461 
 6389      746500
 6390              	.LASF28:
 6391 072f 5F5F746D 		.ascii	"__tm_mday\000"
 6391      5F6D6461 
 6391      7900
 6392              	.LASF194:
 6393 0739 4144435F 		.ascii	"ADC_IER\000"
 6393      49455200 
 6394              	.LASF79:
 6395 0741 5F756275 		.ascii	"_ubuf\000"
 6395      6600
 6396              	.LASF256:
 6397 0747 50574D5F 		.ascii	"PWM_OSCUPD\000"
 6397      4F534355 
 6397      504400
 6398              	.LASF50:
 6399 0752 5F737464 		.ascii	"_stderr\000"
 6399      65727200 
 6400              	.LASF104:
 6401 075a 5F776374 		.ascii	"_wctomb_state\000"
 6401      6F6D625F 
 6401      73746174 
 6401      6500
 6402              	.LASF84:
 6403 0768 5F6D6273 		.ascii	"_mbstate\000"
 6403      74617465 
 6403      00
 6404              	.LASF95:
 6405 0771 5F72616E 		.ascii	"_rand_next\000"
 6405      645F6E65 
 6405      787400
 6406              	.LASF70:
 6407 077c 5F666C61 		.ascii	"_flags\000"
 6407      677300
 6408              	.LASF258:
 6409 0783 50574D5F 		.ascii	"PWM_FSR\000"
 6409      46535200 
 6410              	.LASF39:
 6411 078b 5F617465 		.ascii	"_atexit\000"
 6411      78697400 
 6412              	.LASF13:
 6413 0793 5F5F636F 		.ascii	"__count\000"
 6413      756E7400 
 6414              	.LASF305:
 6415 079b 4E4F524D 		.ascii	"NORMAL\000"
 6415      414C00
 6416              	.LASF31:
ARM GAS  /tmp/ccCX0vdB.s 			page 156


 6417 07a2 5F5F746D 		.ascii	"__tm_wday\000"
 6417      5F776461 
 6417      7900
 6418              	.LASF32:
 6419 07ac 5F5F746D 		.ascii	"__tm_yday\000"
 6419      5F796461 
 6419      7900
 6420              	.LASF92:
 6421 07b6 5F736565 		.ascii	"_seed\000"
 6421      6400
 6422              	.LASF77:
 6423 07bc 5F736565 		.ascii	"_seek\000"
 6423      6B00
 6424              	.LASF133:
 6425 07c2 55415254 		.ascii	"UART1_IRQn\000"
 6425      315F4952 
 6425      516E00
 6426              	.LASF335:
 6427 07cd 6E747269 		.ascii	"ntrip\000"
 6427      7000
 6428              	.LASF9:
 6429 07d3 5F66706F 		.ascii	"_fpos_t\000"
 6429      735F7400 
 6430              	.LASF12:
 6431 07db 5F5F7763 		.ascii	"__wchb\000"
 6431      686200
 6432              	.LASF216:
 6433 07e2 4144435F 		.ascii	"ADC_RNCR\000"
 6433      524E4352 
 6433      00
 6434              	.LASF255:
 6435 07eb 50574D5F 		.ascii	"PWM_OSSUPD\000"
 6435      4F535355 
 6435      504400
 6436              	.LASF180:
 6437 07f6 42464152 		.ascii	"BFAR\000"
 6437      00
 6438              	.LASF105:
 6439 07fb 5F6D6274 		.ascii	"_mbtowc_state\000"
 6439      6F77635F 
 6439      73746174 
 6439      6500
 6440              	.LASF218:
 6441 0809 4144435F 		.ascii	"ADC_TNCR\000"
 6441      544E4352 
 6441      00
 6442              	.LASF290:
 6443 0812 54435F49 		.ascii	"TC_IMR\000"
 6443      4D5200
 6444              	.LASF6:
 6445 0819 6C6F6E67 		.ascii	"long long unsigned int\000"
 6445      206C6F6E 
 6445      6720756E 
 6445      7369676E 
 6445      65642069 
 6446              	.LASF243:
 6447 0830 50574D5F 		.ascii	"PWM_SCM\000"
ARM GAS  /tmp/ccCX0vdB.s 			page 157


 6447      53434D00 
 6448              	.LASF115:
 6449 0838 75696E74 		.ascii	"uint16_t\000"
 6449      31365F74 
 6449      00
 6450              	.LASF36:
 6451 0841 5F64736F 		.ascii	"_dso_handle\000"
 6451      5F68616E 
 6451      646C6500 
 6452              	.LASF247:
 6453 084d 50574D5F 		.ascii	"PWM_IER2\000"
 6453      49455232 
 6453      00
 6454              	.LASF91:
 6455 0856 5F72616E 		.ascii	"_rand48\000"
 6455      64343800 
 6456              	.LASF203:
 6457 085e 4144435F 		.ascii	"ADC_COR\000"
 6457      434F5200 
 6458              	.LASF140:
 6459 0866 48534D43 		.ascii	"HSMCI_IRQn\000"
 6459      495F4952 
 6459      516E00
 6460              	.LASF49:
 6461 0871 5F737464 		.ascii	"_stdout\000"
 6461      6F757400 
 6462              	.LASF139:
 6463 0879 55534152 		.ascii	"USART1_IRQn\000"
 6463      54315F49 
 6463      52516E00 
 6464              	.LASF81:
 6465 0885 5F626C6B 		.ascii	"_blksize\000"
 6465      73697A65 
 6465      00
 6466              	.LASF44:
 6467 088e 5F626173 		.ascii	"_base\000"
 6467      6500
 6468              	.LASF344:
 6469 0894 5443315F 		.ascii	"TC1_IrqHandler\000"
 6469      49727148 
 6469      616E646C 
 6469      657200
 6470              	.LASF102:
 6471 08a3 5F737472 		.ascii	"_strtok_last\000"
 6471      746F6B5F 
 6471      6C617374 
 6471      00
 6472              	.LASF151:
 6473 08b0 4144435F 		.ascii	"ADC_IRQn\000"
 6473      4952516E 
 6473      00
 6474              	.LASF109:
 6475 08b9 5F6D6272 		.ascii	"_mbrtowc_state\000"
 6475      746F7763 
 6475      5F737461 
 6475      746500
 6476              	.LASF262:
ARM GAS  /tmp/ccCX0vdB.s 			page 158


 6477 08c8 50574D5F 		.ascii	"PWM_ELxMR\000"
 6477      454C784D 
 6477      5200
 6478              	.LASF214:
 6479 08d2 4144435F 		.ascii	"ADC_TCR\000"
 6479      54435200 
 6480              	.LASF160:
 6481 08da 49434552 		.ascii	"ICER\000"
 6481      00
 6482              	.LASF16:
 6483 08df 5F666C6F 		.ascii	"_flock_t\000"
 6483      636B5F74 
 6483      00
 6484              	.LASF321:
 6485 08e8 7463636C 		.ascii	"tcclks\000"
 6485      6B7300
 6486              	.LASF87:
 6487 08ef 5F5F4649 		.ascii	"__FILE\000"
 6487      4C4500
 6488              	.LASF15:
 6489 08f6 5F6D6273 		.ascii	"_mbstate_t\000"
 6489      74617465 
 6489      5F7400
 6490              	.LASF132:
 6491 0901 55415254 		.ascii	"UART0_IRQn\000"
 6491      305F4952 
 6491      516E00
 6492              	.LASF60:
 6493 090c 5F723438 		.ascii	"_r48\000"
 6493      00
 6494              	.LASF235:
 6495 0911 50574D5F 		.ascii	"PWM_CLK\000"
 6495      434C4B00 
 6496              	.LASF10:
 6497 0919 77696E74 		.ascii	"wint_t\000"
 6497      5F7400
 6498              	.LASF181:
 6499 0920 41465352 		.ascii	"AFSR\000"
 6499      00
 6500              	.LASF187:
 6501 0925 4144435F 		.ascii	"ADC_SEQR1\000"
 6501      53455152 
 6501      3100
 6502              	.LASF188:
 6503 092f 4144435F 		.ascii	"ADC_SEQR2\000"
 6503      53455152 
 6503      3200
 6504              	.LASF19:
 6505 0939 5F6E6578 		.ascii	"_next\000"
 6505      7400
 6506              	.LASF73:
 6507 093f 5F646174 		.ascii	"_data\000"
 6507      6100
 6508              	.LASF234:
 6509 0945 50776D43 		.ascii	"PwmCmp\000"
 6509      6D7000
 6510              	.LASF143:
ARM GAS  /tmp/ccCX0vdB.s 			page 159


 6511 094c 5350495F 		.ascii	"SPI_IRQn\000"
 6511      4952516E 
 6511      00
 6512              	.LASF342:
 6513 0955 696E6974 		.ascii	"init\000"
 6513      00
 6514              	.LASF138:
 6515 095a 55534152 		.ascii	"USART0_IRQn\000"
 6515      54305F49 
 6515      52516E00 
 6516              	.LASF192:
 6517 0966 52657365 		.ascii	"Reserved1\000"
 6517      72766564 
 6517      3100
 6518              	.LASF198:
 6519 0970 52657365 		.ascii	"Reserved2\000"
 6519      72766564 
 6519      3200
 6520              	.LASF176:
 6521 097a 43465352 		.ascii	"CFSR\000"
 6521      00
 6522              	.LASF207:
 6523 097f 52657365 		.ascii	"Reserved4\000"
 6523      72766564 
 6523      3400
 6524              	.LASF210:
 6525 0989 52657365 		.ascii	"Reserved5\000"
 6525      72766564 
 6525      3500
 6526              	.LASF276:
 6527 0993 52657365 		.ascii	"Reserved6\000"
 6527      72766564 
 6527      3600
 6528              	.LASF145:
 6529 099d 5443305F 		.ascii	"TC0_IRQn\000"
 6529      4952516E 
 6529      00
 6530              	.LASF303:
 6531 09a6 5744545F 		.ascii	"WDT_SR\000"
 6531      535200
 6532              	.LASF136:
 6533 09ad 50494F42 		.ascii	"PIOB_IRQn\000"
 6533      5F495251 
 6533      6E00
 6534              	.LASF283:
 6535 09b7 54435F43 		.ascii	"TC_CV\000"
 6535      5600
 6536              	.LASF274:
 6537 09bd 50574D5F 		.ascii	"PWM_PTCR\000"
 6537      50544352 
 6537      00
 6538              	.LASF334:
 6539 09c6 6C6F6F70 		.ascii	"loop\000"
 6539      00
 6540              	.LASF122:
 6541 09cb 44656275 		.ascii	"DebugMonitor_IRQn\000"
 6541      674D6F6E 
ARM GAS  /tmp/ccCX0vdB.s 			page 160


 6541      69746F72 
 6541      5F495251 
 6541      6E00
 6542              	.LASF341:
 6543 09dd 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 6543      652F6D6F 
 6543      2F646F63 
 6543      2F737475 
 6543      6469756D 
 6544              	.LASF296:
 6545 0a0c 54435F51 		.ascii	"TC_QIDR\000"
 6545      49445200 
 6546              	.LASF277:
 6547 0a14 50574D5F 		.ascii	"PWM_CMP\000"
 6547      434D5000 
 6548              	.LASF221:
 6549 0a1c 50574D5F 		.ascii	"PWM_CMR\000"
 6549      434D5200 
 6550              	.LASF182:
 6551 0a24 4D4D4652 		.ascii	"MMFR\000"
 6551      00
 6552              	.LASF338:
 6553 0a29 64786D61 		.ascii	"dxmax\000"
 6553      7800
 6554              	.LASF179:
 6555 0a2f 4D4D4641 		.ascii	"MMFAR\000"
 6555      5200
 6556              	.LASF103:
 6557 0a35 5F6D626C 		.ascii	"_mblen_state\000"
 6557      656E5F73 
 6557      74617465 
 6557      00
 6558              	.LASF2:
 6559 0a42 73686F72 		.ascii	"short int\000"
 6559      7420696E 
 6559      7400
 6560              	.LASF310:
 6561 0a4c 6D6F6465 		.ascii	"mode\000"
 6561      00
 6562              	.LASF320:
 6563 0a51 7072696F 		.ascii	"priority\000"
 6563      72697479 
 6563      00
 6564              	.LASF114:
 6565 0a5a 696E7431 		.ascii	"int16_t\000"
 6565      365F7400 
 6566              	.LASF295:
 6567 0a62 54435F51 		.ascii	"TC_QIER\000"
 6567      49455200 
 6568              	.LASF183:
 6569 0a6a 49534152 		.ascii	"ISAR\000"
 6569      00
 6570              	.LASF199:
 6571 0a6f 4144435F 		.ascii	"ADC_OVER\000"
 6571      4F564552 
 6571      00
 6572              	.LASF37:
ARM GAS  /tmp/ccCX0vdB.s 			page 161


 6573 0a78 5F666E74 		.ascii	"_fntypes\000"
 6573      79706573 
 6573      00
 6574              	.LASF135:
 6575 0a81 50494F41 		.ascii	"PIOA_IRQn\000"
 6575      5F495251 
 6575      6E00
 6576              	.LASF227:
 6577 0a8b 50574D5F 		.ascii	"PWM_DT\000"
 6577      445400
 6578              	.LASF30:
 6579 0a92 5F5F746D 		.ascii	"__tm_year\000"
 6579      5F796561 
 6579      7200
 6580              	.LASF196:
 6581 0a9c 4144435F 		.ascii	"ADC_IMR\000"
 6581      494D5200 
 6582              	.LASF185:
 6583 0aa4 4144435F 		.ascii	"ADC_CR\000"
 6583      435200
 6584              	.LASF72:
 6585 0aab 5F6C6266 		.ascii	"_lbfsize\000"
 6585      73697A65 
 6585      00
 6586              	.LASF51:
 6587 0ab4 5F696E63 		.ascii	"_inc\000"
 6587      00
 6588              	.LASF40:
 6589 0ab9 5F696E64 		.ascii	"_ind\000"
 6589      00
 6590              	.LASF219:
 6591 0abe 4144435F 		.ascii	"ADC_PTCR\000"
 6591      50544352 
 6591      00
 6592              	.LASF300:
 6593 0ac7 54435F57 		.ascii	"TC_WPMR\000"
 6593      504D5200 
 6594              	.LASF237:
 6595 0acf 50574D5F 		.ascii	"PWM_DIS\000"
 6595      44495300 
 6596              	.LASF233:
 6597 0ad7 50574D5F 		.ascii	"PWM_CMPxMUPD\000"
 6597      434D5078 
 6597      4D555044 
 6597      00
 6598              	.LASF43:
 6599 0ae4 5F5F7362 		.ascii	"__sbuf\000"
 6599      756600
 6600              	.LASF38:
 6601 0aeb 5F69735F 		.ascii	"_is_cxa\000"
 6601      63786100 
 6602              	.LASF225:
 6603 0af3 50574D5F 		.ascii	"PWM_CPRDUPD\000"
 6603      43505244 
 6603      55504400 
 6604              	.LASF339:
 6605 0aff 474E5520 		.ascii	"GNU C 4.6.1\000"
ARM GAS  /tmp/ccCX0vdB.s 			page 162


 6605      4320342E 
 6605      362E3100 
 6606              	.LASF96:
 6607 0b0b 5F6D7072 		.ascii	"_mprec\000"
 6607      656300
 6608              	.LASF329:
 6609 0b12 73746174 		.ascii	"status\000"
 6609      757300
 6610              	.LASF67:
 6611 0b19 5F6D6973 		.ascii	"_misc\000"
 6611      6300
 6612              	.LASF17:
 6613 0b1f 5F5F554C 		.ascii	"__ULong\000"
 6613      6F6E6700 
 6614              	.LASF224:
 6615 0b27 50574D5F 		.ascii	"PWM_CPRD\000"
 6615      43505244 
 6615      00
 6616              	.LASF144:
 6617 0b30 5353435F 		.ascii	"SSC_IRQn\000"
 6617      4952516E 
 6617      00
 6618              	.LASF232:
 6619 0b39 50574D5F 		.ascii	"PWM_CMPxM\000"
 6619      434D5078 
 6619      4D00
 6620              	.LASF116:
 6621 0b43 75696E74 		.ascii	"uint32_t\000"
 6621      33325F74 
 6621      00
 6622              	.LASF230:
 6623 0b4c 50574D5F 		.ascii	"PWM_CMPxV\000"
 6623      434D5078 
 6623      5600
 6624              	.LASF97:
 6625 0b56 5F726573 		.ascii	"_result\000"
 6625      756C7400 
 6626              	.LASF206:
 6627 0b5e 4144435F 		.ascii	"ADC_ACR\000"
 6627      41435200 
 6628              	.LASF282:
 6629 0b66 54435F53 		.ascii	"TC_SMMR\000"
 6629      4D4D5200 
 6630              	.LASF190:
 6631 0b6e 4144435F 		.ascii	"ADC_CHDR\000"
 6631      43484452 
 6631      00
 6632              	.LASF266:
 6633 0b77 50574D5F 		.ascii	"PWM_RPR\000"
 6633      52505200 
 6634              	.LASF94:
 6635 0b7f 5F616464 		.ascii	"_add\000"
 6635      00
 6636              	.LASF3:
 6637 0b84 73686F72 		.ascii	"short unsigned int\000"
 6637      7420756E 
 6637      7369676E 
ARM GAS  /tmp/ccCX0vdB.s 			page 163


 6637      65642069 
 6637      6E7400
 6638              	.LASF208:
 6639 0b97 4144435F 		.ascii	"ADC_WPMR\000"
 6639      57504D52 
 6639      00
 6640              	.LASF27:
 6641 0ba0 5F5F746D 		.ascii	"__tm_hour\000"
 6641      5F686F75 
 6641      7200
 6642              	.LASF123:
 6643 0baa 50656E64 		.ascii	"PendSV_IRQn\000"
 6643      53565F49 
 6643      52516E00 
 6644              	.LASF110:
 6645 0bb6 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 6645      72746F77 
 6645      63735F73 
 6645      74617465 
 6645      00
 6646              	.LASF293:
 6647 0bc7 54435F42 		.ascii	"TC_BCR\000"
 6647      435200
 6648              	.LASF148:
 6649 0bce 5443335F 		.ascii	"TC3_IRQn\000"
 6649      4952516E 
 6649      00
 6650              	.LASF189:
 6651 0bd7 4144435F 		.ascii	"ADC_CHER\000"
 6651      43484552 
 6651      00
 6652              	.LASF158:
 6653 0be0 49534552 		.ascii	"ISER\000"
 6653      00
 6654              	.LASF35:
 6655 0be5 5F666E61 		.ascii	"_fnargs\000"
 6655      72677300 
 6656              	.LASF201:
 6657 0bed 4144435F 		.ascii	"ADC_CWR\000"
 6657      43575200 
 6658              	.LASF33:
 6659 0bf5 5F5F746D 		.ascii	"__tm_isdst\000"
 6659      5F697364 
 6659      737400
 6660              	.LASF228:
 6661 0c00 50574D5F 		.ascii	"PWM_DTUPD\000"
 6661      44545550 
 6661      4400
 6662              	.LASF26:
 6663 0c0a 5F5F746D 		.ascii	"__tm_min\000"
 6663      5F6D696E 
 6663      00
 6664              	.LASF244:
 6665 0c13 50574D5F 		.ascii	"PWM_SCUC\000"
 6665      53435543 
 6665      00
 6666              	.LASF107:
ARM GAS  /tmp/ccCX0vdB.s 			page 164


 6667 0c1c 5F676574 		.ascii	"_getdate_err\000"
 6667      64617465 
 6667      5F657272 
 6667      00
 6668              	.LASF127:
 6669 0c29 5254435F 		.ascii	"RTC_IRQn\000"
 6669      4952516E 
 6669      00
 6670              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/ccCX0vdB.s 			page 165


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccCX0vdB.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/ccCX0vdB.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/ccCX0vdB.s:62     .text.NVIC_SetPriority:00000000 $t
     /tmp/ccCX0vdB.s:66     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
     /tmp/ccCX0vdB.s:128    .bss:00000000 input
     /tmp/ccCX0vdB.s:125    .bss:00000000 $d
     /tmp/ccCX0vdB.s:134    .data:00000000 _state
     /tmp/ccCX0vdB.s:141    .bss:00000004 loop
     /tmp/ccCX0vdB.s:148    .data:00000004 ntrip
     /tmp/ccCX0vdB.s:145    .data:00000001 $d
     /tmp/ccCX0vdB.s:157    .data:00000014 rtrip
     /tmp/ccCX0vdB.s:166    .data:00000024 releasetime
     /tmp/ccCX0vdB.s:172    .data:00000028 dxmax
     /tmp/ccCX0vdB.s:175    .text.init:00000000 $t
     /tmp/ccCX0vdB.s:179    .text.init:00000000 init
     /tmp/ccCX0vdB.s:393    .rodata:00000000 $d
     /tmp/ccCX0vdB.s:394    .rodata:00000000 .LC0
     /tmp/ccCX0vdB.s:397    .rodata:00000018 .LC1
     /tmp/ccCX0vdB.s:400    .rodata:0000002c .LC2
     /tmp/ccCX0vdB.s:403    .rodata:00000040 .LC3
     /tmp/ccCX0vdB.s:406    .rodata:00000058 .LC4
     /tmp/ccCX0vdB.s:409    .text.state:00000000 $t
     /tmp/ccCX0vdB.s:414    .text.state:00000000 state
     /tmp/ccCX0vdB.s:442    .text.state:0000001c $d
     /tmp/ccCX0vdB.s:452    .text.state:0000003c $t
     /tmp/ccCX0vdB.s:589    .rodata:00000070 .LC5
     /tmp/ccCX0vdB.s:592    .rodata:0000007c .LC6
     /tmp/ccCX0vdB.s:595    .rodata:00000094 .LC7
     /tmp/ccCX0vdB.s:598    .rodata:000000b4 .LC8
     /tmp/ccCX0vdB.s:601    .rodata:000000b8 .LC9
     /tmp/ccCX0vdB.s:604    .rodata:000000d4 .LC10
     /tmp/ccCX0vdB.s:607    .rodata:000000d8 .LC11
     /tmp/ccCX0vdB.s:610    .rodata:000000fc .LC12
     /tmp/ccCX0vdB.s:613    .rodata:00000108 .LC13
     /tmp/ccCX0vdB.s:616    .rodata:00000124 .LC14
     /tmp/ccCX0vdB.s:619    .rodata:0000013c .LC15
     /tmp/ccCX0vdB.s:622    .rodata:00000144 .LC16
     /tmp/ccCX0vdB.s:625    .rodata:00000148 .LC17
     /tmp/ccCX0vdB.s:628    .rodata:00000150 .LC18
     /tmp/ccCX0vdB.s:631    .rodata:00000168 .LC19
     /tmp/ccCX0vdB.s:634    .text.cli:00000000 $t
     /tmp/ccCX0vdB.s:639    .text.cli:00000000 cli
     /tmp/ccCX0vdB.s:708    .text.cli:00000090 $d
     /tmp/ccCX0vdB.s:718    .text.cli:000000b0 $t
     /tmp/ccCX0vdB.s:1153   .rodata:00000170 .LC20
     /tmp/ccCX0vdB.s:1156   .rodata:00000188 .LC21
     /tmp/ccCX0vdB.s:1159   .rodata:000001b4 .LC22
     /tmp/ccCX0vdB.s:1162   .text.main:00000000 $t
     /tmp/ccCX0vdB.s:1167   .text.main:00000000 main
     /tmp/ccCX0vdB.s:1278   .text.main:000000fc $d
     /tmp/ccCX0vdB.s:1288   .text.main:0000011c $t
     /tmp/ccCX0vdB.s:1434   .text.TC1_IrqHandler:00000000 $t
     /tmp/ccCX0vdB.s:1439   .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/ccCX0vdB.s:1471   .text.ADC_IrqHandler:00000000 $t
     /tmp/ccCX0vdB.s:1476   .text.ADC_IrqHandler:00000000 ADC_IrqHandler
ARM GAS  /tmp/ccCX0vdB.s 			page 166


                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PMC_EnablePeripheral
TC_FindMckDivisor
TC_Configure
TC_Start
ADC_Initialize
ADC_cfgFrequency
ADC_ReadBuffer
PWMC_ConfigureClocks
PWMC_ConfigureChannelExt
PWMC_SetPeriod
PWMC_SetDutyCycle
PWMC_ConfigureSyncChannel
PWMC_SetSyncChannelUpdatePeriod
TimeTick_Configure
LEDs_configure
LED_clr
USBC_Configure
mode
_impure_ptr
fiprintf
USBC_hasData
gets
siscanf
iprintf
puts
USBC_isConfigured
LED_blink
setbuf
GetTickCount
control
