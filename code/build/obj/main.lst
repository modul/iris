ARM GAS  /tmp/ccogXpQB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"main.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 79020000 		.text
  20      02006101 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  24              		.align	2
  25              		.thumb
  26              		.thumb_func
  27              		.type	NVIC_EnableIRQ, %function
  28              	NVIC_EnableIRQ:
  29              	.LFB14:
  30              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccogXpQB.s 			page 2


  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
ARM GAS  /tmp/ccogXpQB.s 			page 3


  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
ARM GAS  /tmp/ccogXpQB.s 			page 4


 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccogXpQB.s 			page 5


 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
ARM GAS  /tmp/ccogXpQB.s 			page 6


 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
ARM GAS  /tmp/ccogXpQB.s 			page 7


 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
ARM GAS  /tmp/ccogXpQB.s 			page 8


 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
ARM GAS  /tmp/ccogXpQB.s 			page 9


 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
ARM GAS  /tmp/ccogXpQB.s 			page 10


 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccogXpQB.s 			page 11


 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccogXpQB.s 			page 12


 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
ARM GAS  /tmp/ccogXpQB.s 			page 13


 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
ARM GAS  /tmp/ccogXpQB.s 			page 14


 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccogXpQB.s 			page 15


 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
ARM GAS  /tmp/ccogXpQB.s 			page 16


 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccogXpQB.s 			page 17


 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
ARM GAS  /tmp/ccogXpQB.s 			page 18


 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccogXpQB.s 			page 19


 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
ARM GAS  /tmp/ccogXpQB.s 			page 20


1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccogXpQB.s 			page 21


1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
ARM GAS  /tmp/ccogXpQB.s 			page 22


1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccogXpQB.s 			page 23


1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccogXpQB.s 			page 24


1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
ARM GAS  /tmp/ccogXpQB.s 			page 25


1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccogXpQB.s 			page 26


1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
ARM GAS  /tmp/ccogXpQB.s 			page 27


1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  31              		.loc 1 1503 0
  32              		.cfi_startproc
ARM GAS  /tmp/ccogXpQB.s 			page 28


  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36 0000 80B4     		push	{r7}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 00AF     		add	r7, sp, #0
  43              		.cfi_offset 7, -4
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 0346     		mov	r3, r0
  47 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  48              		.loc 1 1504 0
  49 000a 4FF46143 		mov	r3, #57600
  50 000e CEF20003 		movt	r3, 57344
  51 0012 97F90720 		ldrsb	r2, [r7, #7]
  52 0016 4FEA5212 		lsr	r2, r2, #5
  53 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  54 001c 01F01F01 		and	r1, r1, #31
  55 0020 4FF00100 		mov	r0, #1
  56 0024 00FA01F1 		lsl	r1, r0, r1
  57 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  58              		.loc 1 1505 0
  59 002c 07F10C07 		add	r7, r7, #12
  60 0030 BD46     		mov	sp, r7
  61 0032 80BC     		pop	{r7}
  62 0034 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE14:
  65              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  66 0036 00BF     		.section	.text.NVIC_SetPriority,"ax",%progbits
  67              		.align	2
  68              		.thumb
  69              		.thumb_func
  70              		.type	NVIC_SetPriority, %function
  71              	NVIC_SetPriority:
  72              	.LFB20:
1506:libchip/cmsis/core_cm3.h **** 
1507:libchip/cmsis/core_cm3.h **** /**
1508:libchip/cmsis/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:libchip/cmsis/core_cm3.h ****  *
1510:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:libchip/cmsis/core_cm3.h ****  *
1512:libchip/cmsis/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:libchip/cmsis/core_cm3.h ****  */
1515:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:libchip/cmsis/core_cm3.h **** {
1517:libchip/cmsis/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:libchip/cmsis/core_cm3.h **** }
1519:libchip/cmsis/core_cm3.h **** 
1520:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccogXpQB.s 			page 29


1521:libchip/cmsis/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:libchip/cmsis/core_cm3.h ****  *
1523:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:libchip/cmsis/core_cm3.h ****  *
1526:libchip/cmsis/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending,
1527:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0
1528:libchip/cmsis/core_cm3.h ****  */
1529:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1530:libchip/cmsis/core_cm3.h **** {
1531:libchip/cmsis/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:libchip/cmsis/core_cm3.h **** }
1533:libchip/cmsis/core_cm3.h **** 
1534:libchip/cmsis/core_cm3.h **** /**
1535:libchip/cmsis/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:libchip/cmsis/core_cm3.h ****  *
1537:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:libchip/cmsis/core_cm3.h ****  *
1539:libchip/cmsis/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:libchip/cmsis/core_cm3.h ****  */
1542:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:libchip/cmsis/core_cm3.h **** {
1544:libchip/cmsis/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:libchip/cmsis/core_cm3.h **** }
1546:libchip/cmsis/core_cm3.h **** 
1547:libchip/cmsis/core_cm3.h **** /**
1548:libchip/cmsis/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:libchip/cmsis/core_cm3.h ****  *
1550:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:libchip/cmsis/core_cm3.h ****  *
1552:libchip/cmsis/core_cm3.h ****  * Clear the pending bit for the specified interrupt.
1553:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:libchip/cmsis/core_cm3.h ****  */
1555:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:libchip/cmsis/core_cm3.h **** {
1557:libchip/cmsis/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:libchip/cmsis/core_cm3.h **** }
1559:libchip/cmsis/core_cm3.h **** 
1560:libchip/cmsis/core_cm3.h **** /**
1561:libchip/cmsis/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:libchip/cmsis/core_cm3.h ****  *
1563:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:libchip/cmsis/core_cm3.h ****  *
1566:libchip/cmsis/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active,
1567:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0.
1568:libchip/cmsis/core_cm3.h ****  */
1569:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:libchip/cmsis/core_cm3.h **** {
1571:libchip/cmsis/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:libchip/cmsis/core_cm3.h **** }
1573:libchip/cmsis/core_cm3.h **** 
1574:libchip/cmsis/core_cm3.h **** /**
1575:libchip/cmsis/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:libchip/cmsis/core_cm3.h ****  *
1577:libchip/cmsis/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
ARM GAS  /tmp/ccogXpQB.s 			page 30


1578:libchip/cmsis/core_cm3.h ****  * @param  priority  The priority to set
1579:libchip/cmsis/core_cm3.h ****  *
1580:libchip/cmsis/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt
1581:libchip/cmsis/core_cm3.h ****  * number can be positive to specify an external (device specific)
1582:libchip/cmsis/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:libchip/cmsis/core_cm3.h ****  *
1584:libchip/cmsis/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:libchip/cmsis/core_cm3.h ****  */
1586:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1587:libchip/cmsis/core_cm3.h **** {
  73              		.loc 1 1587 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 8
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78 0000 80B4     		push	{r7}
  79              	.LCFI3:
  80              		.cfi_def_cfa_offset 4
  81 0002 83B0     		sub	sp, sp, #12
  82              	.LCFI4:
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_offset 7, -4
  86              	.LCFI5:
  87              		.cfi_def_cfa_register 7
  88 0006 0346     		mov	r3, r0
  89 0008 3960     		str	r1, [r7, #0]
  90 000a FB71     		strb	r3, [r7, #7]
1588:libchip/cmsis/core_cm3.h ****   if(IRQn < 0) {
  91              		.loc 1 1588 0
  92 000c 97F90730 		ldrsb	r3, [r7, #7]
  93 0010 002B     		cmp	r3, #0
  94 0012 10DA     		bge	.L3
1589:libchip/cmsis/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  95              		.loc 1 1589 0
  96 0014 4FF46D43 		mov	r3, #60672
  97 0018 CEF20003 		movt	r3, 57344
  98 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  99 001e 02F00F02 		and	r2, r2, #15
 100 0022 A2F10401 		sub	r1, r2, #4
 101 0026 3A68     		ldr	r2, [r7, #0]
 102 0028 D2B2     		uxtb	r2, r2
 103 002a 4FEA0212 		lsl	r2, r2, #4
 104 002e D2B2     		uxtb	r2, r2
 105 0030 5B18     		adds	r3, r3, r1
 106 0032 1A76     		strb	r2, [r3, #24]
 107 0034 0DE0     		b	.L2
 108              	.L3:
1590:libchip/cmsis/core_cm3.h ****   else {
1591:libchip/cmsis/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 109              		.loc 1 1591 0
 110 0036 4FF46143 		mov	r3, #57600
 111 003a CEF20003 		movt	r3, 57344
 112 003e 97F90710 		ldrsb	r1, [r7, #7]
 113 0042 3A68     		ldr	r2, [r7, #0]
 114 0044 D2B2     		uxtb	r2, r2
 115 0046 4FEA0212 		lsl	r2, r2, #4
ARM GAS  /tmp/ccogXpQB.s 			page 31


 116 004a D2B2     		uxtb	r2, r2
 117 004c 5B18     		adds	r3, r3, r1
 118 004e 83F80023 		strb	r2, [r3, #768]
 119              	.L2:
1592:libchip/cmsis/core_cm3.h **** }
 120              		.loc 1 1592 0
 121 0052 07F10C07 		add	r7, r7, #12
 122 0056 BD46     		mov	sp, r7
 123 0058 80BC     		pop	{r7}
 124 005a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE20:
 127              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 128              		.global	current
 129              		.bss
 130              		.align	2
 131              		.type	current, %object
 132              		.size	current, 6
 133              	current:
 134 0000 00000000 		.space	6
 134      0000
 135              		.global	previous
 136 0006 0000     		.align	2
 137              		.type	previous, %object
 138              		.size	previous, 6
 139              	previous:
 140 0008 00000000 		.space	6
 140      0000
 141              		.global	next
 142 000e 0000     		.align	2
 143              		.type	next, %object
 144              		.size	next, 6
 145              	next:
 146 0010 00000000 		.space	6
 146      0000
 147              		.global	_state
 148              		.type	_state, %object
 149              		.size	_state, 1
 150              	_state:
 151 0016 00       		.space	1
 152              		.section	.rodata
 153              		.align	2
 154              		.type	vpins, %object
 155              		.size	vpins, 24
 156              	vpins:
 157 0000 04000000 		.word	4
 158 0004 000E0E40 		.word	1074662912
 159 0008 0B       		.byte	11
 160 0009 05       		.byte	5
 161 000a 00       		.byte	0
 162 000b 00       		.space	1
 163 000c 08000000 		.word	8
 164 0010 000E0E40 		.word	1074662912
 165 0014 0B       		.byte	11
 166 0015 05       		.byte	5
 167 0016 00       		.byte	0
 168 0017 00       		.space	1
ARM GAS  /tmp/ccogXpQB.s 			page 32


 169              		.align	2
 170              	.LC0:
 171 0018 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
 171      52756E6E 
 171      696E6720 
 171      61742025 
 171      69204D48 
 172              		.section	.text.main,"ax",%progbits
 173              		.align	2
 174              		.global	main
 175              		.thumb
 176              		.thumb_func
 177              		.type	main, %function
 178              	main:
 179              	.LFB35:
 180              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "conf.h"
   3:main.c        **** 
   4:main.c        **** // Timer must fire once for each conversion
   5:main.c        **** #define TIMER_FREQ (NUM_AIN * SAMPLING_FREQ)
   6:main.c        **** 
   7:main.c        **** #define READY 0
   8:main.c        **** #define SET     1
   9:main.c        **** #define GO    2
  10:main.c        **** #define FINISH 3
  11:main.c        **** 
  12:main.c        **** //TODO config struct
  13:main.c        **** #define MINv 0
  14:main.c        **** #define MAXv MAX
  15:main.c        **** 
  16:main.c        **** uint16_t current[NUM_AIN] = {0};
  17:main.c        **** uint16_t previous[NUM_AIN] = {0};
  18:main.c        **** uint16_t next[NUM_AIN] = {0};
  19:main.c        **** 
  20:main.c        **** uint8_t _state = READY;
  21:main.c        **** 
  22:main.c        **** static const Pin vpins[] = {PINS_VAL};
  23:main.c        **** 
  24:main.c        **** #define PRESS() PIO_Clear(vpins+VAL_vent); PIO_Set(vpins+VAL_press)
  25:main.c        **** #define VENT() PIO_Clear(vpins+VAL_press); PIO_Set(vpins+VAL_vent)
  26:main.c        **** #define VOLT(b) ((b*VREF)>>RESOLUTION)
  27:main.c        **** 
  28:main.c        **** static void init();
  29:main.c        **** static void state(uint8_t new);
  30:main.c        **** static void cli();
  31:main.c        **** 
  32:main.c        **** int main() 
  33:main.c        **** {
 181              		.loc 2 33 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 8
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185 0000 80B5     		push	{r7, lr}
 186              	.LCFI6:
 187              		.cfi_def_cfa_offset 8
 188 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccogXpQB.s 			page 33


 189              	.LCFI7:
 190              		.cfi_def_cfa_offset 16
 191 0004 00AF     		add	r7, sp, #0
 192              		.cfi_offset 14, -4
 193              		.cfi_offset 7, -8
 194              	.LCFI8:
 195              		.cfi_def_cfa_register 7
  34:main.c        **** 	uint32_t t = 0;
 196              		.loc 2 34 0
 197 0006 4FF00003 		mov	r3, #0
 198 000a 7B60     		str	r3, [r7, #4]
  35:main.c        **** 
  36:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 199              		.loc 2 36 0
 200 000c 40F20003 		movw	r3, #:lower16:_impure_ptr
 201 0010 C0F20003 		movt	r3, #:upper16:_impure_ptr
 202 0014 1B68     		ldr	r3, [r3, #0]
 203 0016 DB68     		ldr	r3, [r3, #12]
 204 0018 1846     		mov	r0, r3
 205 001a 40F20001 		movw	r1, #:lower16:.LC0
 206 001e C0F20001 		movt	r1, #:upper16:.LC0
 207 0022 4FF03002 		mov	r2, #48
 208 0026 FFF7FEFF 		bl	fiprintf
  37:main.c        **** 
  38:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 209              		.loc 2 38 0
 210 002a 41F25043 		movw	r3, #5200
 211 002e C4F20E03 		movt	r3, 16398
 212 0032 4FF40042 		mov	r2, #32768
 213 0036 5A60     		str	r2, [r3, #4]
  39:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 214              		.loc 2 39 0
 215 0038 4FF4D840 		mov	r0, #27648
 216 003c C0F2DC20 		movt	r0, 732
 217 0040 FFF7FEFF 		bl	TimeTick_Configure
  40:main.c        **** 	LEDs_configure();
 218              		.loc 2 40 0
 219 0044 FFF7FEFF 		bl	LEDs_configure
  41:main.c        **** 
  42:main.c        **** 	/* configure hardware */
  43:main.c        **** 	LED_blink(STATUS, FOREVER);
 220              		.loc 2 43 0
 221 0048 4FF00000 		mov	r0, #0
 222 004c 4FF0FF31 		mov	r1, #-1
 223 0050 FFF7FEFF 		bl	LED_blink
  44:main.c        **** 	init();
 224              		.loc 2 44 0
 225 0054 FFF7FEFF 		bl	init
  45:main.c        **** 	LED_blinkstop(STATUS);
 226              		.loc 2 45 0
 227 0058 4FF00000 		mov	r0, #0
 228 005c FFF7FEFF 		bl	LED_blinkstop
  46:main.c        **** 
  47:main.c        **** 	state(READY);
 229              		.loc 2 47 0
 230 0060 4FF00000 		mov	r0, #0
 231 0064 FFF7FEFF 		bl	state
ARM GAS  /tmp/ccogXpQB.s 			page 34


 232 0068 02E0     		b	.L7
 233              	.L8:
  48:main.c        **** 
  49:main.c        **** 	while (1) {
  50:main.c        **** 		cli();
  51:main.c        **** 		if ((t=GetTickCount()) % 1000 == 0 && !LED_blinking(STATUS)) 
  52:main.c        **** 			LED_blink(STATUS, _state);
  53:main.c        **** 	}
 234              		.loc 2 53 0
 235 006a 00BF     		nop
 236 006c 00E0     		b	.L7
 237              	.L9:
 238 006e 00BF     		nop
 239              	.L7:
  50:main.c        **** 		cli();
 240              		.loc 2 50 0
 241 0070 FFF7FEFF 		bl	cli
  51:main.c        **** 		if ((t=GetTickCount()) % 1000 == 0 && !LED_blinking(STATUS)) 
 242              		.loc 2 51 0
 243 0074 FFF7FEFF 		bl	GetTickCount
 244 0078 7860     		str	r0, [r7, #4]
 245 007a 7A68     		ldr	r2, [r7, #4]
 246 007c 44F6D353 		movw	r3, #19923
 247 0080 C1F26203 		movt	r3, 4194
 248 0084 A3FB0213 		umull	r1, r3, r3, r2
 249 0088 4FEA9313 		lsr	r3, r3, #6
 250 008c 4FF47A71 		mov	r1, #1000
 251 0090 01FB03F3 		mul	r3, r1, r3
 252 0094 D31A     		subs	r3, r2, r3
 253 0096 002B     		cmp	r3, #0
 254 0098 E7D1     		bne	.L8
  51:main.c        **** 		if ((t=GetTickCount()) % 1000 == 0 && !LED_blinking(STATUS)) 
 255              		.loc 2 51 0 is_stmt 0 discriminator 1
 256 009a 4FF00000 		mov	r0, #0
 257 009e FFF7FEFF 		bl	LED_blinking
 258 00a2 0346     		mov	r3, r0
 259 00a4 002B     		cmp	r3, #0
 260 00a6 E2D1     		bne	.L9
  52:main.c        **** 			LED_blink(STATUS, _state);
 261              		.loc 2 52 0 is_stmt 1
 262 00a8 40F20003 		movw	r3, #:lower16:_state
 263 00ac C0F20003 		movt	r3, #:upper16:_state
 264 00b0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 265 00b2 4FF00000 		mov	r0, #0
 266 00b6 1946     		mov	r1, r3
 267 00b8 FFF7FEFF 		bl	LED_blink
 268              		.loc 2 53 0
 269 00bc D8E7     		b	.L7
 270              		.cfi_endproc
 271              	.LFE35:
 272              		.size	main, .-main
 273 00be 00BF     		.section	.text.TC0_IrqHandler,"ax",%progbits
 274              		.align	2
 275              		.global	TC0_IrqHandler
 276              		.thumb
 277              		.thumb_func
 278              		.type	TC0_IrqHandler, %function
ARM GAS  /tmp/ccogXpQB.s 			page 35


 279              	TC0_IrqHandler:
 280              	.LFB36:
  54:main.c        **** 	return 0;
  55:main.c        **** }
  56:main.c        **** 
  57:main.c        **** void TC0_IrqHandler()
  58:main.c        **** {
 281              		.loc 2 58 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 80B4     		push	{r7}
 287              	.LCFI9:
 288              		.cfi_def_cfa_offset 4
 289 0002 83B0     		sub	sp, sp, #12
 290              	.LCFI10:
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_offset 7, -4
 294              	.LCFI11:
 295              		.cfi_def_cfa_register 7
  59:main.c        **** 	uint32_t status = TC0->TC_CHANNEL[0].TC_SR;
 296              		.loc 2 59 0
 297 0006 4FF00003 		mov	r3, #0
 298 000a C4F20103 		movt	r3, 16385
 299 000e 1B6A     		ldr	r3, [r3, #32]
 300 0010 7B60     		str	r3, [r7, #4]
  60:main.c        **** 	status = status;
  61:main.c        **** 
  62:main.c        **** 	ADC_StartConversion(ADC);
 301              		.loc 2 62 0
 302 0012 4FF40043 		mov	r3, #32768
 303 0016 C4F20303 		movt	r3, 16387
 304 001a 4FF00202 		mov	r2, #2
 305 001e 1A60     		str	r2, [r3, #0]
  63:main.c        **** }
 306              		.loc 2 63 0
 307 0020 07F10C07 		add	r7, r7, #12
 308 0024 BD46     		mov	sp, r7
 309 0026 80BC     		pop	{r7}
 310 0028 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE36:
 313              		.size	TC0_IrqHandler, .-TC0_IrqHandler
 314 002a 00BF     		.section	.rodata
 315 002f 00       		.align	2
 316              	.LC1:
 317 0030 2D442D20 		.ascii	"-D- [%u] Got samples. 0: %umV, 1: %umV, 2: %umV\012"
 317      5B25755D 
 317      20476F74 
 317      2073616D 
 317      706C6573 
 318 0060 00       		.ascii	"\000"
 319              		.section	.text.ADC_IrqHandler,"ax",%progbits
 320              		.align	2
 321              		.global	ADC_IrqHandler
ARM GAS  /tmp/ccogXpQB.s 			page 36


 322              		.thumb
 323              		.thumb_func
 324              		.type	ADC_IrqHandler, %function
 325              	ADC_IrqHandler:
 326              	.LFB37:
  64:main.c        **** 
  65:main.c        **** void ADC_IrqHandler()
  66:main.c        **** {
 327              		.loc 2 66 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 8
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 0000 B0B5     		push	{r4, r5, r7, lr}
 332              	.LCFI12:
 333              		.cfi_def_cfa_offset 16
 334 0002 84B0     		sub	sp, sp, #16
 335              	.LCFI13:
 336              		.cfi_def_cfa_offset 32
 337 0004 02AF     		add	r7, sp, #8
 338              		.cfi_offset 14, -4
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 5, -12
 341              		.cfi_offset 4, -16
 342              	.LCFI14:
 343              		.cfi_def_cfa 7, 24
  67:main.c        **** 	uint8_t i;
  68:main.c        ****     uint32_t status;
  69:main.c        **** 	static uint32_t timestamp = 0;
  70:main.c        **** 
  71:main.c        ****     status = ADC_GetStatus(ADC);
 344              		.loc 2 71 0
 345 0006 4FF40043 		mov	r3, #32768
 346 000a C4F20303 		movt	r3, 16387
 347 000e 1B6B     		ldr	r3, [r3, #48]
 348 0010 3B60     		str	r3, [r7, #0]
  72:main.c        **** 
  73:main.c        **** 	if ((status & ADC_ISR_RXBUFF) == ADC_ISR_RXBUFF) {
 349              		.loc 2 73 0
 350 0012 3B68     		ldr	r3, [r7, #0]
 351 0014 03F08053 		and	r3, r3, #268435456
 352 0018 002B     		cmp	r3, #0
 353 001a 75D0     		beq	.L11
  74:main.c        **** 
  75:main.c        **** 		for (i=0; i<NUM_AIN; i++) {
 354              		.loc 2 75 0
 355 001c 4FF00003 		mov	r3, #0
 356 0020 FB71     		strb	r3, [r7, #7]
 357 0022 1FE0     		b	.L13
 358              	.L14:
  76:main.c        **** 			previous[i] = current[i];
 359              		.loc 2 76 0 discriminator 2
 360 0024 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 361 0026 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 362 0028 40F20003 		movw	r3, #:lower16:current
 363 002c C0F20003 		movt	r3, #:upper16:current
 364 0030 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 365 0034 40F20003 		movw	r3, #:lower16:previous
ARM GAS  /tmp/ccogXpQB.s 			page 37


 366 0038 C0F20003 		movt	r3, #:upper16:previous
 367 003c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
  77:main.c        **** 			current[i] = next[i];
 368              		.loc 2 77 0 discriminator 2
 369 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 370 0042 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 371 0044 40F20003 		movw	r3, #:lower16:next
 372 0048 C0F20003 		movt	r3, #:upper16:next
 373 004c 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 374 0050 40F20003 		movw	r3, #:lower16:current
 375 0054 C0F20003 		movt	r3, #:upper16:current
 376 0058 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
  75:main.c        **** 		for (i=0; i<NUM_AIN; i++) {
 377              		.loc 2 75 0 discriminator 2
 378 005c FB79     		ldrb	r3, [r7, #7]
 379 005e 03F10103 		add	r3, r3, #1
 380 0062 FB71     		strb	r3, [r7, #7]
 381              	.L13:
  75:main.c        **** 		for (i=0; i<NUM_AIN; i++) {
 382              		.loc 2 75 0 is_stmt 0 discriminator 1
 383 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 384 0066 022B     		cmp	r3, #2
 385 0068 DCD9     		bls	.L14
  78:main.c        **** 		}
  79:main.c        **** 
  80:main.c        **** 		TRACE_DEBUG("[%u] Got samples. 0: %umV, 1: %umV, 2: %umV\n", GetTickCount()-timestamp, VOLT(curre
 386              		.loc 2 80 0 is_stmt 1
 387 006a 40F20003 		movw	r3, #:lower16:_impure_ptr
 388 006e C0F20003 		movt	r3, #:upper16:_impure_ptr
 389 0072 1B68     		ldr	r3, [r3, #0]
 390 0074 DD68     		ldr	r5, [r3, #12]
 391 0076 FFF7FEFF 		bl	GetTickCount
 392 007a 0246     		mov	r2, r0
 393 007c 40F20003 		movw	r3, #:lower16:timestamp.4845
 394 0080 C0F20003 		movt	r3, #:upper16:timestamp.4845
 395 0084 1B68     		ldr	r3, [r3, #0]
 396 0086 D21A     		subs	r2, r2, r3
 397 0088 40F20003 		movw	r3, #:lower16:current
 398 008c C0F20003 		movt	r3, #:upper16:current
 399 0090 1B88     		ldrh	r3, [r3, #0]
 400 0092 40F6E441 		movw	r1, #3300
 401 0096 01FB03F3 		mul	r3, r1, r3
 402 009a 4FEA2334 		asr	r4, r3, #12
 403 009e 40F20003 		movw	r3, #:lower16:current
 404 00a2 C0F20003 		movt	r3, #:upper16:current
 405 00a6 5B88     		ldrh	r3, [r3, #2]
 406 00a8 40F6E441 		movw	r1, #3300
 407 00ac 01FB03F3 		mul	r3, r1, r3
 408 00b0 4FEA2331 		asr	r1, r3, #12
 409 00b4 40F20003 		movw	r3, #:lower16:current
 410 00b8 C0F20003 		movt	r3, #:upper16:current
 411 00bc 9B88     		ldrh	r3, [r3, #4]
 412 00be 40F6E440 		movw	r0, #3300
 413 00c2 00FB03F3 		mul	r3, r0, r3
 414 00c6 4FEA2333 		asr	r3, r3, #12
 415 00ca 0091     		str	r1, [sp, #0]
 416 00cc 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccogXpQB.s 			page 38


 417 00ce 2846     		mov	r0, r5
 418 00d0 40F20001 		movw	r1, #:lower16:.LC1
 419 00d4 C0F20001 		movt	r1, #:upper16:.LC1
 420 00d8 2346     		mov	r3, r4
 421 00da FFF7FEFF 		bl	fiprintf
  81:main.c        **** 		timestamp = GetTickCount();
 422              		.loc 2 81 0
 423 00de FFF7FEFF 		bl	GetTickCount
 424 00e2 0246     		mov	r2, r0
 425 00e4 40F20003 		movw	r3, #:lower16:timestamp.4845
 426 00e8 C0F20003 		movt	r3, #:upper16:timestamp.4845
 427 00ec 1A60     		str	r2, [r3, #0]
  82:main.c        **** 
  83:main.c        **** 		ADC_ReadBuffer(ADC, (int16_t*) next, NUM_AIN);
 428              		.loc 2 83 0
 429 00ee 40F20003 		movw	r3, #:lower16:next
 430 00f2 C0F20003 		movt	r3, #:upper16:next
 431 00f6 4FF40040 		mov	r0, #32768
 432 00fa C4F20300 		movt	r0, 16387
 433 00fe 1946     		mov	r1, r3
 434 0100 4FF00302 		mov	r2, #3
 435 0104 FFF7FEFF 		bl	ADC_ReadBuffer
 436              	.L11:
  84:main.c        **** 	}
  85:main.c        **** }
 437              		.loc 2 85 0
 438 0108 07F10807 		add	r7, r7, #8
 439 010c BD46     		mov	sp, r7
 440 010e B0BD     		pop	{r4, r5, r7, pc}
 441              		.cfi_endproc
 442              	.LFE37:
 443              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 444              		.section	.rodata
 445 0061 000000   		.align	2
 446              	.LC2:
 447 0064 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
 447      77616974 
 447      696E6720 
 447      756E7469 
 447      6C205553 
 448 008f 00       		.align	2
 449              	.LC3:
 450 0090 2D492D20 		.ascii	"-I- configured\012\000"
 450      636F6E66 
 450      69677572 
 450      65640A00 
 451              		.section	.text.init,"ax",%progbits
 452              		.align	2
 453              		.thumb
 454              		.thumb_func
 455              		.type	init, %function
 456              	init:
 457              	.LFB38:
  86:main.c        **** 
  87:main.c        **** static void init()
  88:main.c        **** {
 458              		.loc 2 88 0
ARM GAS  /tmp/ccogXpQB.s 			page 39


 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 72
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 B0B5     		push	{r4, r5, r7, lr}
 463              	.LCFI15:
 464              		.cfi_def_cfa_offset 16
 465 0002 94B0     		sub	sp, sp, #80
 466              	.LCFI16:
 467              		.cfi_def_cfa_offset 96
 468 0004 02AF     		add	r7, sp, #8
 469              		.cfi_offset 14, -4
 470              		.cfi_offset 7, -8
 471              		.cfi_offset 5, -12
 472              		.cfi_offset 4, -16
 473              	.LCFI17:
 474              		.cfi_def_cfa 7, 88
  89:main.c        ****     uint32_t div;
  90:main.c        ****     uint32_t tcclks;
  91:main.c        **** 	const Pin pins[] = {PINS_VAL, PINS_ADCIN};
 475              		.loc 2 91 0
 476 0006 40F20003 		movw	r3, #:lower16:C.7.6315
 477 000a C0F20003 		movt	r3, #:upper16:C.7.6315
 478 000e 07F10404 		add	r4, r7, #4
 479 0012 1D46     		mov	r5, r3
 480 0014 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 481 0016 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 482 0018 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 483 001a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 484 001c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 485 001e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 486 0020 95E80700 		ldmia	r5, {r0, r1, r2}
 487 0024 84E80700 		stmia	r4, {r0, r1, r2}
  92:main.c        **** 
  93:main.c        **** 	/* PIO Configure */
  94:main.c        **** 	PIO_Configure(pins, PIO_LISTSIZE(pins));
 488              		.loc 2 94 0
 489 0028 07F10403 		add	r3, r7, #4
 490 002c 1846     		mov	r0, r3
 491 002e 4FF00501 		mov	r1, #5
 492 0032 FFF7FEFF 		bl	PIO_Configure
  95:main.c        **** 
  96:main.c        ****     /* Enable peripheral clocks */
  97:main.c        ****     PMC_EnablePeripheral(ID_TC0);
 493              		.loc 2 97 0
 494 0036 4FF01700 		mov	r0, #23
 495 003a FFF7FEFF 		bl	PMC_EnablePeripheral
  98:main.c        ****     PMC_EnablePeripheral(ID_ADC);
 496              		.loc 2 98 0
 497 003e 4FF01D00 		mov	r0, #29
 498 0042 FFF7FEFF 		bl	PMC_EnablePeripheral
  99:main.c        **** 
 100:main.c        ****     /* Configure TC */
 101:main.c        ****     TC_FindMckDivisor(TIMER_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 499              		.loc 2 101 0
 500 0046 07F14402 		add	r2, r7, #68
 501 004a 07F14004 		add	r4, r7, #64
 502 004e 4FF4D843 		mov	r3, #27648
ARM GAS  /tmp/ccogXpQB.s 			page 40


 503 0052 C0F2DC23 		movt	r3, 732
 504 0056 0093     		str	r3, [sp, #0]
 505 0058 4FF00600 		mov	r0, #6
 506 005c 4FF4D841 		mov	r1, #27648
 507 0060 C0F2DC21 		movt	r1, 732
 508 0064 2346     		mov	r3, r4
 509 0066 FFF7FEFF 		bl	TC_FindMckDivisor
 102:main.c        ****     TC_Configure(TC0, 0, tcclks | TC_CMR_CPCTRG);
 510              		.loc 2 102 0
 511 006a 3B6C     		ldr	r3, [r7, #64]
 512 006c 43F48043 		orr	r3, r3, #16384
 513 0070 4FF00000 		mov	r0, #0
 514 0074 C4F20100 		movt	r0, 16385
 515 0078 4FF00001 		mov	r1, #0
 516 007c 1A46     		mov	r2, r3
 517 007e FFF7FEFF 		bl	TC_Configure
 103:main.c        ****     TC0->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / TIMER_FREQ;
 518              		.loc 2 103 0
 519 0082 4FF00003 		mov	r3, #0
 520 0086 C4F20103 		movt	r3, 16385
 521 008a 796C     		ldr	r1, [r7, #68]
 522 008c 4FF49052 		mov	r2, #4608
 523 0090 C0F27A02 		movt	r2, 122
 524 0094 B2FBF1F2 		udiv	r2, r2, r1
 525 0098 DA61     		str	r2, [r3, #28]
 104:main.c        ****     TC0->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 526              		.loc 2 104 0
 527 009a 4FF00003 		mov	r3, #0
 528 009e C4F20103 		movt	r3, 16385
 529 00a2 4FF01002 		mov	r2, #16
 530 00a6 5A62     		str	r2, [r3, #36]
 105:main.c        **** 	TC_Start(TC0, 0);
 531              		.loc 2 105 0
 532 00a8 4FF00000 		mov	r0, #0
 533 00ac C4F20100 		movt	r0, 16385
 534 00b0 4FF00001 		mov	r1, #0
 535 00b4 FFF7FEFF 		bl	TC_Start
 106:main.c        **** 
 107:main.c        ****     /* Initialize ADC */
 108:main.c        ****     ADC_Initialize(ADC, ID_ADC);
 536              		.loc 2 108 0
 537 00b8 4FF40040 		mov	r0, #32768
 538 00bc C4F20300 		movt	r0, 16387
 539 00c0 4FF01D01 		mov	r1, #29
 540 00c4 FFF7FEFF 		bl	ADC_Initialize
 109:main.c        ****     ADC_cfgFrequency(ADC, 4, 1 ); // startup = 64 ADC periods, prescal = 1, ADC clock = 12 MHz
 541              		.loc 2 109 0
 542 00c8 4FF40040 		mov	r0, #32768
 543 00cc C4F20300 		movt	r0, 16387
 544 00d0 4FF00401 		mov	r1, #4
 545 00d4 4FF00102 		mov	r2, #1
 546 00d8 FFF7FEFF 		bl	ADC_cfgFrequency
 110:main.c        **** 	ADC->ADC_CHER = (1<<AIN0)|(1<<AIN1)|(1<<AIN2);
 547              		.loc 2 110 0
 548 00dc 4FF40043 		mov	r3, #32768
 549 00e0 C4F20303 		movt	r3, 16387
 550 00e4 4FF00702 		mov	r2, #7
ARM GAS  /tmp/ccogXpQB.s 			page 41


 551 00e8 1A61     		str	r2, [r3, #16]
 111:main.c        ****     ADC->ADC_IER  = ADC_IER_RXBUFF;
 552              		.loc 2 111 0
 553 00ea 4FF40043 		mov	r3, #32768
 554 00ee C4F20303 		movt	r3, 16387
 555 00f2 4FF08052 		mov	r2, #268435456
 556 00f6 5A62     		str	r2, [r3, #36]
 112:main.c        **** 
 113:main.c        **** 	/* Enable Interrupts */
 114:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
 557              		.loc 2 114 0
 558 00f8 4FF01D00 		mov	r0, #29
 559 00fc FFF7FEFF 		bl	NVIC_EnableIRQ
 115:main.c        **** 	NVIC_SetPriority(ADC_IRQn, 0);
 560              		.loc 2 115 0
 561 0100 4FF01D00 		mov	r0, #29
 562 0104 4FF00001 		mov	r1, #0
 563 0108 FFF7FEFF 		bl	NVIC_SetPriority
 116:main.c        ****     NVIC_EnableIRQ(TC0_IRQn);
 564              		.loc 2 116 0
 565 010c 4FF01700 		mov	r0, #23
 566 0110 FFF7FEFF 		bl	NVIC_EnableIRQ
 117:main.c        ****     NVIC_SetPriority(TC0_IRQn, 1);
 567              		.loc 2 117 0
 568 0114 4FF01700 		mov	r0, #23
 569 0118 4FF00101 		mov	r1, #1
 570 011c FFF7FEFF 		bl	NVIC_SetPriority
 118:main.c        **** 
 119:main.c        **** 	/* USB Console Configuration */
 120:main.c        **** 	USBC_Configure();
 571              		.loc 2 120 0
 572 0120 FFF7FEFF 		bl	USBC_Configure
 121:main.c        **** 
 122:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 573              		.loc 2 122 0
 574 0124 40F20003 		movw	r3, #:lower16:_impure_ptr
 575 0128 C0F20003 		movt	r3, #:upper16:_impure_ptr
 576 012c 1B68     		ldr	r3, [r3, #0]
 577 012e DB68     		ldr	r3, [r3, #12]
 578 0130 1846     		mov	r0, r3
 579 0132 40F20001 		movw	r1, #:lower16:.LC2
 580 0136 C0F20001 		movt	r1, #:upper16:.LC2
 581 013a FFF7FEFF 		bl	fiprintf
 123:main.c        **** 	while (!USBC_isConfigured());
 582              		.loc 2 123 0
 583 013e 00BF     		nop
 584              	.L16:
 585              		.loc 2 123 0 is_stmt 0 discriminator 1
 586 0140 FFF7FEFF 		bl	USBC_isConfigured
 587 0144 0346     		mov	r3, r0
 588 0146 002B     		cmp	r3, #0
 589 0148 FAD0     		beq	.L16
 124:main.c        **** 	setbuf(stdout, NULL);
 590              		.loc 2 124 0 is_stmt 1
 591 014a 40F20003 		movw	r3, #:lower16:_impure_ptr
 592 014e C0F20003 		movt	r3, #:upper16:_impure_ptr
 593 0152 1B68     		ldr	r3, [r3, #0]
ARM GAS  /tmp/ccogXpQB.s 			page 42


 594 0154 9B68     		ldr	r3, [r3, #8]
 595 0156 1846     		mov	r0, r3
 596 0158 4FF00001 		mov	r1, #0
 597 015c FFF7FEFF 		bl	setbuf
 125:main.c        **** 
 126:main.c        **** 	TRACE_INFO("configured\n");
 598              		.loc 2 126 0
 599 0160 40F20003 		movw	r3, #:lower16:_impure_ptr
 600 0164 C0F20003 		movt	r3, #:upper16:_impure_ptr
 601 0168 1B68     		ldr	r3, [r3, #0]
 602 016a DB68     		ldr	r3, [r3, #12]
 603 016c 1846     		mov	r0, r3
 604 016e 40F20001 		movw	r1, #:lower16:.LC3
 605 0172 C0F20001 		movt	r1, #:upper16:.LC3
 606 0176 FFF7FEFF 		bl	fiprintf
 127:main.c        **** }
 607              		.loc 2 127 0
 608 017a 07F14807 		add	r7, r7, #72
 609 017e BD46     		mov	sp, r7
 610 0180 B0BD     		pop	{r4, r5, r7, pc}
 611              		.cfi_endproc
 612              	.LFE38:
 613              		.size	init, .-init
 614 0182 00BF     		.section	.rodata
 615              		.align	2
 616              	.LC4:
 617 00a0 2D442D20 		.ascii	"-D- set state READY\012\000"
 617      73657420 
 617      73746174 
 617      65205245 
 617      4144590A 
 618 00b5 000000   		.align	2
 619              	.LC5:
 620 00b8 2D442D20 		.ascii	"-D- set state SET\012\000"
 620      73657420 
 620      73746174 
 620      65205345 
 620      540A00
 621 00cb 00       		.align	2
 622              	.LC6:
 623 00cc 2D442D20 		.ascii	"-D- set state GO\012\000"
 623      73657420 
 623      73746174 
 623      6520474F 
 623      0A00
 624 00de 0000     		.align	2
 625              	.LC7:
 626 00e0 2D442D20 		.ascii	"-D- set state FINISH\012\000"
 626      73657420 
 626      73746174 
 626      65204649 
 626      4E495348 
 627 00f6 0000     		.align	2
 628              	.LC8:
 629 00f8 2D442D20 		.ascii	"-D- got invalid state\012\000"
 629      676F7420 
 629      696E7661 
ARM GAS  /tmp/ccogXpQB.s 			page 43


 629      6C696420 
 629      73746174 
 630              		.section	.text.state,"ax",%progbits
 631              		.align	2
 632              		.thumb
 633              		.thumb_func
 634              		.type	state, %function
 635              	state:
 636              	.LFB39:
 128:main.c        **** 
 129:main.c        **** static void state(uint8_t new) 
 130:main.c        **** {
 637              		.loc 2 130 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 8
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641 0000 80B5     		push	{r7, lr}
 642              	.LCFI18:
 643              		.cfi_def_cfa_offset 8
 644 0002 82B0     		sub	sp, sp, #8
 645              	.LCFI19:
 646              		.cfi_def_cfa_offset 16
 647 0004 00AF     		add	r7, sp, #0
 648              		.cfi_offset 14, -4
 649              		.cfi_offset 7, -8
 650              	.LCFI20:
 651              		.cfi_def_cfa_register 7
 652 0006 0346     		mov	r3, r0
 653 0008 FB71     		strb	r3, [r7, #7]
 131:main.c        **** 	LED_blinkstop(STATUS);
 654              		.loc 2 131 0
 655 000a 4FF00000 		mov	r0, #0
 656 000e FFF7FEFF 		bl	LED_blinkstop
 132:main.c        **** 	LED_clr(STATUS);
 657              		.loc 2 132 0
 658 0012 4FF00000 		mov	r0, #0
 659 0016 FFF7FEFF 		bl	LED_clr
 133:main.c        **** 	switch (new) {
 660              		.loc 2 133 0
 661 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 662 001c 032B     		cmp	r3, #3
 663 001e 43D8     		bhi	.L18
 664 0020 01A2     		adr	r2, .L23
 665 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 666 0026 00BF     		.align	2
 667              	.L23:
 668 0028 39000000 		.word	.L19+1
 669 002c 55000000 		.word	.L20+1
 670 0030 71000000 		.word	.L21+1
 671 0034 8D000000 		.word	.L22+1
 672              	.L19:
 134:main.c        **** 		case READY:
 135:main.c        **** 			TRACE_DEBUG("set state READY\n");
 673              		.loc 2 135 0
 674 0038 40F20003 		movw	r3, #:lower16:_impure_ptr
 675 003c C0F20003 		movt	r3, #:upper16:_impure_ptr
 676 0040 1B68     		ldr	r3, [r3, #0]
ARM GAS  /tmp/ccogXpQB.s 			page 44


 677 0042 DB68     		ldr	r3, [r3, #12]
 678 0044 1846     		mov	r0, r3
 679 0046 40F20001 		movw	r1, #:lower16:.LC4
 680 004a C0F20001 		movt	r1, #:upper16:.LC4
 681 004e FFF7FEFF 		bl	fiprintf
 136:main.c        **** 			break;
 682              		.loc 2 136 0
 683 0052 3BE0     		b	.L24
 684              	.L20:
 137:main.c        **** 		case SET:
 138:main.c        **** 			TRACE_DEBUG("set state SET\n");
 685              		.loc 2 138 0
 686 0054 40F20003 		movw	r3, #:lower16:_impure_ptr
 687 0058 C0F20003 		movt	r3, #:upper16:_impure_ptr
 688 005c 1B68     		ldr	r3, [r3, #0]
 689 005e DB68     		ldr	r3, [r3, #12]
 690 0060 1846     		mov	r0, r3
 691 0062 40F20001 		movw	r1, #:lower16:.LC5
 692 0066 C0F20001 		movt	r1, #:upper16:.LC5
 693 006a FFF7FEFF 		bl	fiprintf
 139:main.c        **** 			break;
 694              		.loc 2 139 0
 695 006e 2DE0     		b	.L24
 696              	.L21:
 140:main.c        **** 		case GO:
 141:main.c        **** 			TRACE_DEBUG("set state GO\n");
 697              		.loc 2 141 0
 698 0070 40F20003 		movw	r3, #:lower16:_impure_ptr
 699 0074 C0F20003 		movt	r3, #:upper16:_impure_ptr
 700 0078 1B68     		ldr	r3, [r3, #0]
 701 007a DB68     		ldr	r3, [r3, #12]
 702 007c 1846     		mov	r0, r3
 703 007e 40F20001 		movw	r1, #:lower16:.LC6
 704 0082 C0F20001 		movt	r1, #:upper16:.LC6
 705 0086 FFF7FEFF 		bl	fiprintf
 142:main.c        **** 			break;
 706              		.loc 2 142 0
 707 008a 1FE0     		b	.L24
 708              	.L22:
 143:main.c        **** 		case FINISH:
 144:main.c        **** 			TRACE_DEBUG("set state FINISH\n");
 709              		.loc 2 144 0
 710 008c 40F20003 		movw	r3, #:lower16:_impure_ptr
 711 0090 C0F20003 		movt	r3, #:upper16:_impure_ptr
 712 0094 1B68     		ldr	r3, [r3, #0]
 713 0096 DB68     		ldr	r3, [r3, #12]
 714 0098 1846     		mov	r0, r3
 715 009a 40F20001 		movw	r1, #:lower16:.LC7
 716 009e C0F20001 		movt	r1, #:upper16:.LC7
 717 00a2 FFF7FEFF 		bl	fiprintf
 145:main.c        **** 			break;
 718              		.loc 2 145 0
 719 00a6 11E0     		b	.L24
 720              	.L18:
 146:main.c        **** 		default:
 147:main.c        **** 			TRACE_DEBUG("got invalid state\n");
 721              		.loc 2 147 0
ARM GAS  /tmp/ccogXpQB.s 			page 45


 722 00a8 40F20003 		movw	r3, #:lower16:_impure_ptr
 723 00ac C0F20003 		movt	r3, #:upper16:_impure_ptr
 724 00b0 1B68     		ldr	r3, [r3, #0]
 725 00b2 DB68     		ldr	r3, [r3, #12]
 726 00b4 1846     		mov	r0, r3
 727 00b6 40F20001 		movw	r1, #:lower16:.LC8
 728 00ba C0F20001 		movt	r1, #:upper16:.LC8
 729 00be FFF7FEFF 		bl	fiprintf
 148:main.c        **** 			state(READY);
 730              		.loc 2 148 0
 731 00c2 4FF00000 		mov	r0, #0
 732 00c6 FFF79BFF 		bl	state
 149:main.c        **** 			return;
 733              		.loc 2 149 0
 734 00ca 05E0     		b	.L17
 735              	.L24:
 150:main.c        **** 	}
 151:main.c        **** 	_state = new;
 736              		.loc 2 151 0
 737 00cc 40F20003 		movw	r3, #:lower16:_state
 738 00d0 C0F20003 		movt	r3, #:upper16:_state
 739 00d4 FA79     		ldrb	r2, [r7, #7]
 740 00d6 1A70     		strb	r2, [r3, #0]
 741              	.L17:
 152:main.c        **** }
 742              		.loc 2 152 0
 743 00d8 07F10807 		add	r7, r7, #8
 744 00dc BD46     		mov	sp, r7
 745 00de 80BD     		pop	{r7, pc}
 746              		.cfi_endproc
 747              	.LFE39:
 748              		.size	state, .-state
 749              		.section	.rodata
 750 010f 00       		.align	2
 751              	.LC9:
 752 0110 25632025 		.ascii	"%c %u %u %u\000"
 752      75202575 
 752      20257500 
 753              		.align	2
 754              	.LC10:
 755 011c 2D442D20 		.ascii	"-D- got %i arguments\012\000"
 755      676F7420 
 755      25692061 
 755      7267756D 
 755      656E7473 
 756              		.section	.text.cli,"ax",%progbits
 757              		.align	2
 758              		.thumb
 759              		.thumb_func
 760              		.type	cli, %function
 761              	cli:
 762              	.LFB40:
 153:main.c        **** 
 154:main.c        **** static void cli()
 155:main.c        **** {
 763              		.loc 2 155 0
 764              		.cfi_startproc
ARM GAS  /tmp/ccogXpQB.s 			page 46


 765              		@ args = 0, pretend = 0, frame = 56
 766              		@ frame_needed = 1, uses_anonymous_args = 0
 767 0000 80B5     		push	{r7, lr}
 768              	.LCFI21:
 769              		.cfi_def_cfa_offset 8
 770 0002 90B0     		sub	sp, sp, #64
 771              	.LCFI22:
 772              		.cfi_def_cfa_offset 72
 773 0004 02AF     		add	r7, sp, #8
 774              		.cfi_offset 14, -4
 775              		.cfi_offset 7, -8
 776              	.LCFI23:
 777              		.cfi_def_cfa 7, 64
 156:main.c        **** 	int argc;
 157:main.c        **** 	int argv[3];
 158:main.c        **** 	char line[32];
 159:main.c        **** 	char cmd = 0;
 778              		.loc 2 159 0
 779 0006 4FF00003 		mov	r3, #0
 780 000a FB71     		strb	r3, [r7, #7]
 160:main.c        **** 
 161:main.c        **** 	if (!USBC_hasData())
 781              		.loc 2 161 0
 782 000c FFF7FEFF 		bl	USBC_hasData
 783 0010 0346     		mov	r3, r0
 784 0012 002B     		cmp	r3, #0
 785 0014 41D0     		beq	.L32
 786              	.L27:
 162:main.c        **** 		return;
 163:main.c        **** 
 164:main.c        **** 	gets(line);
 787              		.loc 2 164 0
 788 0016 07F10803 		add	r3, r7, #8
 789 001a 1846     		mov	r0, r3
 790 001c FFF7FEFF 		bl	gets
 165:main.c        **** 	if (*line == 0 || *line == 10)
 791              		.loc 2 165 0
 792 0020 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 793 0022 002B     		cmp	r3, #0
 794 0024 3BD0     		beq	.L33
 795              		.loc 2 165 0 is_stmt 0 discriminator 1
 796 0026 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 797 0028 0A2B     		cmp	r3, #10
 798 002a 3AD0     		beq	.L34
 799              	.L30:
 166:main.c        **** 		return;
 167:main.c        **** 
 168:main.c        **** 	argc = sscanf(line, "%c %u %u %u", &cmd, argv, argv+1, argv+2) - 1;
 800              		.loc 2 168 0 is_stmt 1
 801 002c 07F10801 		add	r1, r7, #8
 802 0030 07F10702 		add	r2, r7, #7
 803 0034 07F12803 		add	r3, r7, #40
 804 0038 07F12800 		add	r0, r7, #40
 805 003c 00F10400 		add	r0, r0, #4
 806 0040 0090     		str	r0, [sp, #0]
 807 0042 07F12800 		add	r0, r7, #40
 808 0046 00F10800 		add	r0, r0, #8
ARM GAS  /tmp/ccogXpQB.s 			page 47


 809 004a 0190     		str	r0, [sp, #4]
 810 004c 0846     		mov	r0, r1
 811 004e 40F20001 		movw	r1, #:lower16:.LC9
 812 0052 C0F20001 		movt	r1, #:upper16:.LC9
 813 0056 FFF7FEFF 		bl	siscanf
 814 005a 0346     		mov	r3, r0
 815 005c 03F1FF33 		add	r3, r3, #-1
 816 0060 7B63     		str	r3, [r7, #52]
 169:main.c        **** 	if (argc > 0)
 817              		.loc 2 169 0
 818 0062 7B6B     		ldr	r3, [r7, #52]
 819 0064 002B     		cmp	r3, #0
 820 0066 0DDD     		ble	.L31
 170:main.c        **** 		TRACE_DEBUG("got %i arguments\n", argc);
 821              		.loc 2 170 0
 822 0068 40F20003 		movw	r3, #:lower16:_impure_ptr
 823 006c C0F20003 		movt	r3, #:upper16:_impure_ptr
 824 0070 1B68     		ldr	r3, [r3, #0]
 825 0072 DB68     		ldr	r3, [r3, #12]
 826 0074 1846     		mov	r0, r3
 827 0076 40F20001 		movw	r1, #:lower16:.LC10
 828 007a C0F20001 		movt	r1, #:upper16:.LC10
 829 007e 7A6B     		ldr	r2, [r7, #52]
 830 0080 FFF7FEFF 		bl	fiprintf
 831              	.L31:
 171:main.c        **** 
 172:main.c        **** 	// just for testing
 173:main.c        **** 	if (argc == 0)
 832              		.loc 2 173 0
 833 0084 7B6B     		ldr	r3, [r7, #52]
 834 0086 002B     		cmp	r3, #0
 835 0088 0CD1     		bne	.L26
 174:main.c        **** 		state(cmd-'0');
 836              		.loc 2 174 0
 837 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 838 008c A3F13003 		sub	r3, r3, #48
 839 0090 DBB2     		uxtb	r3, r3
 840 0092 1846     		mov	r0, r3
 841 0094 FFF7FEFF 		bl	state
 842 0098 04E0     		b	.L26
 843              	.L32:
 162:main.c        **** 		return;
 844              		.loc 2 162 0
 845 009a 00BF     		nop
 846 009c 02E0     		b	.L26
 847              	.L33:
 166:main.c        **** 		return;
 848              		.loc 2 166 0
 849 009e 00BF     		nop
 850 00a0 00E0     		b	.L26
 851              	.L34:
 852 00a2 00BF     		nop
 853              	.L26:
 175:main.c        **** }
 854              		.loc 2 175 0
 855 00a4 07F13807 		add	r7, r7, #56
 856 00a8 BD46     		mov	sp, r7
ARM GAS  /tmp/ccogXpQB.s 			page 48


 857 00aa 80BD     		pop	{r7, pc}
 858              		.cfi_endproc
 859              	.LFE40:
 860              		.size	cli, .-cli
 861              		.section	.rodata
 862 0132 0000     		.align	2
 863              		.type	C.7.6315, %object
 864              		.size	C.7.6315, 60
 865              	C.7.6315:
 866 0134 04000000 		.word	4
 867 0138 000E0E40 		.word	1074662912
 868 013c 0B       		.byte	11
 869 013d 05       		.byte	5
 870 013e 00       		.byte	0
 871 013f 00       		.space	1
 872 0140 08000000 		.word	8
 873 0144 000E0E40 		.word	1074662912
 874 0148 0B       		.byte	11
 875 0149 05       		.byte	5
 876 014a 00       		.byte	0
 877 014b 00       		.space	1
 878 014c 00000200 		.word	131072
 879 0150 000E0E40 		.word	1074662912
 880 0154 0B       		.byte	11
 881 0155 04       		.byte	4
 882 0156 00       		.byte	0
 883 0157 00       		.space	1
 884 0158 00000400 		.word	262144
 885 015c 000E0E40 		.word	1074662912
 886 0160 0B       		.byte	11
 887 0161 04       		.byte	4
 888 0162 00       		.byte	0
 889 0163 00       		.space	1
 890 0164 00000800 		.word	524288
 891 0168 000E0E40 		.word	1074662912
 892 016c 0B       		.byte	11
 893 016d 04       		.byte	4
 894 016e 00       		.byte	0
 895 016f 00       		.space	1
 896              		.bss
 897 0017 00       		.align	2
 898              	timestamp.4845:
 899 0018 00000000 		.space	4
 900              		.text
 901              	.Letext0:
 902              		.section	.debug_loc,"",%progbits
 903              	.Ldebug_loc0:
 904              	.LLST0:
 905 0000 00000000 		.4byte	.LFB14
 906 0004 02000000 		.4byte	.LCFI0
 907 0008 0200     		.2byte	0x2
 908 000a 7D       		.byte	0x7d
 909 000b 00       		.sleb128 0
 910 000c 02000000 		.4byte	.LCFI0
 911 0010 04000000 		.4byte	.LCFI1
 912 0014 0200     		.2byte	0x2
 913 0016 7D       		.byte	0x7d
ARM GAS  /tmp/ccogXpQB.s 			page 49


 914 0017 04       		.sleb128 4
 915 0018 04000000 		.4byte	.LCFI1
 916 001c 06000000 		.4byte	.LCFI2
 917 0020 0200     		.2byte	0x2
 918 0022 7D       		.byte	0x7d
 919 0023 10       		.sleb128 16
 920 0024 06000000 		.4byte	.LCFI2
 921 0028 36000000 		.4byte	.LFE14
 922 002c 0200     		.2byte	0x2
 923 002e 77       		.byte	0x77
 924 002f 10       		.sleb128 16
 925 0030 00000000 		.4byte	0x0
 926 0034 00000000 		.4byte	0x0
 927              	.LLST1:
 928 0038 00000000 		.4byte	.LFB20
 929 003c 02000000 		.4byte	.LCFI3
 930 0040 0200     		.2byte	0x2
 931 0042 7D       		.byte	0x7d
 932 0043 00       		.sleb128 0
 933 0044 02000000 		.4byte	.LCFI3
 934 0048 04000000 		.4byte	.LCFI4
 935 004c 0200     		.2byte	0x2
 936 004e 7D       		.byte	0x7d
 937 004f 04       		.sleb128 4
 938 0050 04000000 		.4byte	.LCFI4
 939 0054 06000000 		.4byte	.LCFI5
 940 0058 0200     		.2byte	0x2
 941 005a 7D       		.byte	0x7d
 942 005b 10       		.sleb128 16
 943 005c 06000000 		.4byte	.LCFI5
 944 0060 5C000000 		.4byte	.LFE20
 945 0064 0200     		.2byte	0x2
 946 0066 77       		.byte	0x77
 947 0067 10       		.sleb128 16
 948 0068 00000000 		.4byte	0x0
 949 006c 00000000 		.4byte	0x0
 950              	.LLST2:
 951 0070 00000000 		.4byte	.LFB35
 952 0074 02000000 		.4byte	.LCFI6
 953 0078 0200     		.2byte	0x2
 954 007a 7D       		.byte	0x7d
 955 007b 00       		.sleb128 0
 956 007c 02000000 		.4byte	.LCFI6
 957 0080 04000000 		.4byte	.LCFI7
 958 0084 0200     		.2byte	0x2
 959 0086 7D       		.byte	0x7d
 960 0087 08       		.sleb128 8
 961 0088 04000000 		.4byte	.LCFI7
 962 008c 06000000 		.4byte	.LCFI8
 963 0090 0200     		.2byte	0x2
 964 0092 7D       		.byte	0x7d
 965 0093 10       		.sleb128 16
 966 0094 06000000 		.4byte	.LCFI8
 967 0098 BE000000 		.4byte	.LFE35
 968 009c 0200     		.2byte	0x2
 969 009e 77       		.byte	0x77
 970 009f 10       		.sleb128 16
ARM GAS  /tmp/ccogXpQB.s 			page 50


 971 00a0 00000000 		.4byte	0x0
 972 00a4 00000000 		.4byte	0x0
 973              	.LLST3:
 974 00a8 00000000 		.4byte	.LFB36
 975 00ac 02000000 		.4byte	.LCFI9
 976 00b0 0200     		.2byte	0x2
 977 00b2 7D       		.byte	0x7d
 978 00b3 00       		.sleb128 0
 979 00b4 02000000 		.4byte	.LCFI9
 980 00b8 04000000 		.4byte	.LCFI10
 981 00bc 0200     		.2byte	0x2
 982 00be 7D       		.byte	0x7d
 983 00bf 04       		.sleb128 4
 984 00c0 04000000 		.4byte	.LCFI10
 985 00c4 06000000 		.4byte	.LCFI11
 986 00c8 0200     		.2byte	0x2
 987 00ca 7D       		.byte	0x7d
 988 00cb 10       		.sleb128 16
 989 00cc 06000000 		.4byte	.LCFI11
 990 00d0 2A000000 		.4byte	.LFE36
 991 00d4 0200     		.2byte	0x2
 992 00d6 77       		.byte	0x77
 993 00d7 10       		.sleb128 16
 994 00d8 00000000 		.4byte	0x0
 995 00dc 00000000 		.4byte	0x0
 996              	.LLST4:
 997 00e0 00000000 		.4byte	.LFB37
 998 00e4 02000000 		.4byte	.LCFI12
 999 00e8 0200     		.2byte	0x2
 1000 00ea 7D       		.byte	0x7d
 1001 00eb 00       		.sleb128 0
 1002 00ec 02000000 		.4byte	.LCFI12
 1003 00f0 04000000 		.4byte	.LCFI13
 1004 00f4 0200     		.2byte	0x2
 1005 00f6 7D       		.byte	0x7d
 1006 00f7 10       		.sleb128 16
 1007 00f8 04000000 		.4byte	.LCFI13
 1008 00fc 06000000 		.4byte	.LCFI14
 1009 0100 0200     		.2byte	0x2
 1010 0102 7D       		.byte	0x7d
 1011 0103 20       		.sleb128 32
 1012 0104 06000000 		.4byte	.LCFI14
 1013 0108 10010000 		.4byte	.LFE37
 1014 010c 0200     		.2byte	0x2
 1015 010e 77       		.byte	0x77
 1016 010f 18       		.sleb128 24
 1017 0110 00000000 		.4byte	0x0
 1018 0114 00000000 		.4byte	0x0
 1019              	.LLST5:
 1020 0118 00000000 		.4byte	.LFB38
 1021 011c 02000000 		.4byte	.LCFI15
 1022 0120 0200     		.2byte	0x2
 1023 0122 7D       		.byte	0x7d
 1024 0123 00       		.sleb128 0
 1025 0124 02000000 		.4byte	.LCFI15
 1026 0128 04000000 		.4byte	.LCFI16
 1027 012c 0200     		.2byte	0x2
ARM GAS  /tmp/ccogXpQB.s 			page 51


 1028 012e 7D       		.byte	0x7d
 1029 012f 10       		.sleb128 16
 1030 0130 04000000 		.4byte	.LCFI16
 1031 0134 06000000 		.4byte	.LCFI17
 1032 0138 0300     		.2byte	0x3
 1033 013a 7D       		.byte	0x7d
 1034 013b E000     		.sleb128 96
 1035 013d 06000000 		.4byte	.LCFI17
 1036 0141 82010000 		.4byte	.LFE38
 1037 0145 0300     		.2byte	0x3
 1038 0147 77       		.byte	0x77
 1039 0148 D800     		.sleb128 88
 1040 014a 00000000 		.4byte	0x0
 1041 014e 00000000 		.4byte	0x0
 1042              	.LLST6:
 1043 0152 00000000 		.4byte	.LFB39
 1044 0156 02000000 		.4byte	.LCFI18
 1045 015a 0200     		.2byte	0x2
 1046 015c 7D       		.byte	0x7d
 1047 015d 00       		.sleb128 0
 1048 015e 02000000 		.4byte	.LCFI18
 1049 0162 04000000 		.4byte	.LCFI19
 1050 0166 0200     		.2byte	0x2
 1051 0168 7D       		.byte	0x7d
 1052 0169 08       		.sleb128 8
 1053 016a 04000000 		.4byte	.LCFI19
 1054 016e 06000000 		.4byte	.LCFI20
 1055 0172 0200     		.2byte	0x2
 1056 0174 7D       		.byte	0x7d
 1057 0175 10       		.sleb128 16
 1058 0176 06000000 		.4byte	.LCFI20
 1059 017a E0000000 		.4byte	.LFE39
 1060 017e 0200     		.2byte	0x2
 1061 0180 77       		.byte	0x77
 1062 0181 10       		.sleb128 16
 1063 0182 00000000 		.4byte	0x0
 1064 0186 00000000 		.4byte	0x0
 1065              	.LLST7:
 1066 018a 00000000 		.4byte	.LFB40
 1067 018e 02000000 		.4byte	.LCFI21
 1068 0192 0200     		.2byte	0x2
 1069 0194 7D       		.byte	0x7d
 1070 0195 00       		.sleb128 0
 1071 0196 02000000 		.4byte	.LCFI21
 1072 019a 04000000 		.4byte	.LCFI22
 1073 019e 0200     		.2byte	0x2
 1074 01a0 7D       		.byte	0x7d
 1075 01a1 08       		.sleb128 8
 1076 01a2 04000000 		.4byte	.LCFI22
 1077 01a6 06000000 		.4byte	.LCFI23
 1078 01aa 0300     		.2byte	0x3
 1079 01ac 7D       		.byte	0x7d
 1080 01ad C800     		.sleb128 72
 1081 01af 06000000 		.4byte	.LCFI23
 1082 01b3 AC000000 		.4byte	.LFE40
 1083 01b7 0300     		.2byte	0x3
 1084 01b9 77       		.byte	0x77
ARM GAS  /tmp/ccogXpQB.s 			page 52


 1085 01ba C000     		.sleb128 64
 1086 01bc 00000000 		.4byte	0x0
 1087 01c0 00000000 		.4byte	0x0
 1088              		.file 3 "/usr/local/lib64/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/sys/lock.h"
 1089              		.file 4 "/usr/local/lib64/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/sys/_types.h"
 1090              		.file 5 "/usr/local/lib64/gcc/arm-none-eabi/4.5.2/include/stddef.h"
 1091              		.file 6 "/usr/local/lib64/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/sys/reent.h"
 1092              		.file 7 "/usr/local/lib64/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/include/stdint.h"
 1093              		.file 8 "libchip/include/SAM3S.h"
 1094              		.file 9 "libchip/include/pio.h"
 1095              		.section	.debug_info
 1096 0000 171A0000 		.4byte	0x1a17
 1097 0004 0200     		.2byte	0x2
 1098 0006 00000000 		.4byte	.Ldebug_abbrev0
 1099 000a 04       		.byte	0x4
 1100 000b 01       		.uleb128 0x1
 1101 000c 32080000 		.4byte	.LASF345
 1102 0010 01       		.byte	0x1
 1103 0011 46060000 		.4byte	.LASF346
 1104 0015 350A0000 		.4byte	.LASF347
 1105 0019 00000000 		.4byte	0x0
 1106 001d 00000000 		.4byte	0x0
 1107 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1108 0025 00000000 		.4byte	.Ldebug_line0
 1109 0029 02       		.uleb128 0x2
 1110 002a 01       		.byte	0x1
 1111 002b 06       		.byte	0x6
 1112 002c 79020000 		.4byte	.LASF0
 1113 0030 02       		.uleb128 0x2
 1114 0031 01       		.byte	0x1
 1115 0032 08       		.byte	0x8
 1116 0033 BF020000 		.4byte	.LASF1
 1117 0037 02       		.uleb128 0x2
 1118 0038 02       		.byte	0x2
 1119 0039 05       		.byte	0x5
 1120 003a A90A0000 		.4byte	.LASF2
 1121 003e 02       		.uleb128 0x2
 1122 003f 02       		.byte	0x2
 1123 0040 07       		.byte	0x7
 1124 0041 9B0B0000 		.4byte	.LASF3
 1125 0045 03       		.uleb128 0x3
 1126 0046 04       		.byte	0x4
 1127 0047 05       		.byte	0x5
 1128 0048 696E7400 		.ascii	"int\000"
 1129 004c 02       		.uleb128 0x2
 1130 004d 04       		.byte	0x4
 1131 004e 07       		.byte	0x7
 1132 004f E7060000 		.4byte	.LASF4
 1133 0053 02       		.uleb128 0x2
 1134 0054 08       		.byte	0x8
 1135 0055 05       		.byte	0x5
 1136 0056 16060000 		.4byte	.LASF5
 1137 005a 02       		.uleb128 0x2
 1138 005b 08       		.byte	0x8
 1139 005c 07       		.byte	0x7
 1140 005d 3E080000 		.4byte	.LASF6
 1141 0061 04       		.uleb128 0x4
ARM GAS  /tmp/ccogXpQB.s 			page 53


 1142 0062 6D050000 		.4byte	.LASF8
 1143 0066 03       		.byte	0x3
 1144 0067 07       		.byte	0x7
 1145 0068 45000000 		.4byte	0x45
 1146 006c 02       		.uleb128 0x2
 1147 006d 04       		.byte	0x4
 1148 006e 05       		.byte	0x5
 1149 006f A4010000 		.4byte	.LASF7
 1150 0073 04       		.uleb128 0x4
 1151 0074 EF070000 		.4byte	.LASF9
 1152 0078 04       		.byte	0x4
 1153 0079 2C       		.byte	0x2c
 1154 007a 6C000000 		.4byte	0x6c
 1155 007e 05       		.uleb128 0x5
 1156 007f 55090000 		.4byte	.LASF10
 1157 0083 05       		.byte	0x5
 1158 0084 6001     		.2byte	0x160
 1159 0086 4C000000 		.4byte	0x4c
 1160 008a 06       		.uleb128 0x6
 1161 008b 04       		.byte	0x4
 1162 008c 04       		.byte	0x4
 1163 008d 46       		.byte	0x46
 1164 008e A9000000 		.4byte	0xa9
 1165 0092 07       		.uleb128 0x7
 1166 0093 46010000 		.4byte	.LASF11
 1167 0097 04       		.byte	0x4
 1168 0098 48       		.byte	0x48
 1169 0099 7E000000 		.4byte	0x7e
 1170 009d 07       		.uleb128 0x7
 1171 009e F7070000 		.4byte	.LASF12
 1172 00a2 04       		.byte	0x4
 1173 00a3 49       		.byte	0x49
 1174 00a4 A9000000 		.4byte	0xa9
 1175 00a8 00       		.byte	0x0
 1176 00a9 08       		.uleb128 0x8
 1177 00aa 30000000 		.4byte	0x30
 1178 00ae B9000000 		.4byte	0xb9
 1179 00b2 09       		.uleb128 0x9
 1180 00b3 4C000000 		.4byte	0x4c
 1181 00b7 03       		.byte	0x3
 1182 00b8 00       		.byte	0x0
 1183 00b9 0A       		.uleb128 0xa
 1184 00ba 08       		.byte	0x8
 1185 00bb 04       		.byte	0x4
 1186 00bc 43       		.byte	0x43
 1187 00bd DE000000 		.4byte	0xde
 1188 00c1 0B       		.uleb128 0xb
 1189 00c2 A9070000 		.4byte	.LASF13
 1190 00c6 04       		.byte	0x4
 1191 00c7 45       		.byte	0x45
 1192 00c8 45000000 		.4byte	0x45
 1193 00cc 02       		.byte	0x2
 1194 00cd 23       		.byte	0x23
 1195 00ce 00       		.uleb128 0x0
 1196 00cf 0B       		.uleb128 0xb
 1197 00d0 27000000 		.4byte	.LASF14
 1198 00d4 04       		.byte	0x4
ARM GAS  /tmp/ccogXpQB.s 			page 54


 1199 00d5 4A       		.byte	0x4a
 1200 00d6 8A000000 		.4byte	0x8a
 1201 00da 02       		.byte	0x2
 1202 00db 23       		.byte	0x23
 1203 00dc 04       		.uleb128 0x4
 1204 00dd 00       		.byte	0x0
 1205 00de 04       		.uleb128 0x4
 1206 00df 3A090000 		.4byte	.LASF15
 1207 00e3 04       		.byte	0x4
 1208 00e4 4B       		.byte	0x4b
 1209 00e5 B9000000 		.4byte	0xb9
 1210 00e9 04       		.uleb128 0x4
 1211 00ea 19090000 		.4byte	.LASF16
 1212 00ee 04       		.byte	0x4
 1213 00ef 4F       		.byte	0x4f
 1214 00f0 61000000 		.4byte	0x61
 1215 00f4 0C       		.uleb128 0xc
 1216 00f5 04       		.byte	0x4
 1217 00f6 04       		.uleb128 0x4
 1218 00f7 470B0000 		.4byte	.LASF17
 1219 00fb 06       		.byte	0x6
 1220 00fc 15       		.byte	0x15
 1221 00fd 01010000 		.4byte	0x101
 1222 0101 02       		.uleb128 0x2
 1223 0102 04       		.byte	0x4
 1224 0103 07       		.byte	0x7
 1225 0104 05050000 		.4byte	.LASF18
 1226 0108 0D       		.uleb128 0xd
 1227 0109 C6050000 		.4byte	.LASF23
 1228 010d 18       		.byte	0x18
 1229 010e 06       		.byte	0x6
 1230 010f 2C       		.byte	0x2c
 1231 0110 67010000 		.4byte	0x167
 1232 0114 0B       		.uleb128 0xb
 1233 0115 75090000 		.4byte	.LASF19
 1234 0119 06       		.byte	0x6
 1235 011a 2E       		.byte	0x2e
 1236 011b 67010000 		.4byte	0x167
 1237 011f 02       		.byte	0x2
 1238 0120 23       		.byte	0x23
 1239 0121 00       		.uleb128 0x0
 1240 0122 0E       		.uleb128 0xe
 1241 0123 5F6B00   		.ascii	"_k\000"
 1242 0126 06       		.byte	0x6
 1243 0127 2F       		.byte	0x2f
 1244 0128 45000000 		.4byte	0x45
 1245 012c 02       		.byte	0x2
 1246 012d 23       		.byte	0x23
 1247 012e 04       		.uleb128 0x4
 1248 012f 0B       		.uleb128 0xb
 1249 0130 CE050000 		.4byte	.LASF20
 1250 0134 06       		.byte	0x6
 1251 0135 2F       		.byte	0x2f
 1252 0136 45000000 		.4byte	0x45
 1253 013a 02       		.byte	0x2
 1254 013b 23       		.byte	0x23
 1255 013c 08       		.uleb128 0x8
ARM GAS  /tmp/ccogXpQB.s 			page 55


 1256 013d 0B       		.uleb128 0xb
 1257 013e C5060000 		.4byte	.LASF21
 1258 0142 06       		.byte	0x6
 1259 0143 2F       		.byte	0x2f
 1260 0144 45000000 		.4byte	0x45
 1261 0148 02       		.byte	0x2
 1262 0149 23       		.byte	0x23
 1263 014a 0C       		.uleb128 0xc
 1264 014b 0B       		.uleb128 0xb
 1265 014c 49040000 		.4byte	.LASF22
 1266 0150 06       		.byte	0x6
 1267 0151 2F       		.byte	0x2f
 1268 0152 45000000 		.4byte	0x45
 1269 0156 02       		.byte	0x2
 1270 0157 23       		.byte	0x23
 1271 0158 10       		.uleb128 0x10
 1272 0159 0E       		.uleb128 0xe
 1273 015a 5F7800   		.ascii	"_x\000"
 1274 015d 06       		.byte	0x6
 1275 015e 30       		.byte	0x30
 1276 015f 6D010000 		.4byte	0x16d
 1277 0163 02       		.byte	0x2
 1278 0164 23       		.byte	0x23
 1279 0165 14       		.uleb128 0x14
 1280 0166 00       		.byte	0x0
 1281 0167 0F       		.uleb128 0xf
 1282 0168 04       		.byte	0x4
 1283 0169 08010000 		.4byte	0x108
 1284 016d 08       		.uleb128 0x8
 1285 016e F6000000 		.4byte	0xf6
 1286 0172 7D010000 		.4byte	0x17d
 1287 0176 09       		.uleb128 0x9
 1288 0177 4C000000 		.4byte	0x4c
 1289 017b 00       		.byte	0x0
 1290 017c 00       		.byte	0x0
 1291 017d 0D       		.uleb128 0xd
 1292 017e 89000000 		.4byte	.LASF24
 1293 0182 24       		.byte	0x24
 1294 0183 06       		.byte	0x6
 1295 0184 34       		.byte	0x34
 1296 0185 08020000 		.4byte	0x208
 1297 0189 0B       		.uleb128 0xb
 1298 018a A5000000 		.4byte	.LASF25
 1299 018e 06       		.byte	0x6
 1300 018f 36       		.byte	0x36
 1301 0190 45000000 		.4byte	0x45
 1302 0194 02       		.byte	0x2
 1303 0195 23       		.byte	0x23
 1304 0196 00       		.uleb128 0x0
 1305 0197 0B       		.uleb128 0xb
 1306 0198 290C0000 		.4byte	.LASF26
 1307 019c 06       		.byte	0x6
 1308 019d 37       		.byte	0x37
 1309 019e 45000000 		.4byte	0x45
 1310 01a2 02       		.byte	0x2
 1311 01a3 23       		.byte	0x23
 1312 01a4 04       		.uleb128 0x4
ARM GAS  /tmp/ccogXpQB.s 			page 56


 1313 01a5 0B       		.uleb128 0xb
 1314 01a6 B70B0000 		.4byte	.LASF27
 1315 01aa 06       		.byte	0x6
 1316 01ab 38       		.byte	0x38
 1317 01ac 45000000 		.4byte	0x45
 1318 01b0 02       		.byte	0x2
 1319 01b1 23       		.byte	0x23
 1320 01b2 08       		.uleb128 0x8
 1321 01b3 0B       		.uleb128 0xb
 1322 01b4 30070000 		.4byte	.LASF28
 1323 01b8 06       		.byte	0x6
 1324 01b9 39       		.byte	0x39
 1325 01ba 45000000 		.4byte	0x45
 1326 01be 02       		.byte	0x2
 1327 01bf 23       		.byte	0x23
 1328 01c0 0C       		.uleb128 0xc
 1329 01c1 0B       		.uleb128 0xb
 1330 01c2 26020000 		.4byte	.LASF29
 1331 01c6 06       		.byte	0x6
 1332 01c7 3A       		.byte	0x3a
 1333 01c8 45000000 		.4byte	0x45
 1334 01cc 02       		.byte	0x2
 1335 01cd 23       		.byte	0x23
 1336 01ce 10       		.uleb128 0x10
 1337 01cf 0B       		.uleb128 0xb
 1338 01d0 ED0A0000 		.4byte	.LASF30
 1339 01d4 06       		.byte	0x6
 1340 01d5 3B       		.byte	0x3b
 1341 01d6 45000000 		.4byte	0x45
 1342 01da 02       		.byte	0x2
 1343 01db 23       		.byte	0x23
 1344 01dc 14       		.uleb128 0x14
 1345 01dd 0B       		.uleb128 0xb
 1346 01de BB070000 		.4byte	.LASF31
 1347 01e2 06       		.byte	0x6
 1348 01e3 3C       		.byte	0x3c
 1349 01e4 45000000 		.4byte	0x45
 1350 01e8 02       		.byte	0x2
 1351 01e9 23       		.byte	0x23
 1352 01ea 18       		.uleb128 0x18
 1353 01eb 0B       		.uleb128 0xb
 1354 01ec CE070000 		.4byte	.LASF32
 1355 01f0 06       		.byte	0x6
 1356 01f1 3D       		.byte	0x3d
 1357 01f2 45000000 		.4byte	0x45
 1358 01f6 02       		.byte	0x2
 1359 01f7 23       		.byte	0x23
 1360 01f8 1C       		.uleb128 0x1c
 1361 01f9 0B       		.uleb128 0xb
 1362 01fa 190C0000 		.4byte	.LASF33
 1363 01fe 06       		.byte	0x6
 1364 01ff 3E       		.byte	0x3e
 1365 0200 45000000 		.4byte	0x45
 1366 0204 02       		.byte	0x2
 1367 0205 23       		.byte	0x23
 1368 0206 20       		.uleb128 0x20
 1369 0207 00       		.byte	0x0
ARM GAS  /tmp/ccogXpQB.s 			page 57


 1370 0208 10       		.uleb128 0x10
 1371 0209 66010000 		.4byte	.LASF34
 1372 020d 0801     		.2byte	0x108
 1373 020f 06       		.byte	0x6
 1374 0210 47       		.byte	0x47
 1375 0211 51020000 		.4byte	0x251
 1376 0215 0B       		.uleb128 0xb
 1377 0216 090C0000 		.4byte	.LASF35
 1378 021a 06       		.byte	0x6
 1379 021b 48       		.byte	0x48
 1380 021c 51020000 		.4byte	0x251
 1381 0220 02       		.byte	0x2
 1382 0221 23       		.byte	0x23
 1383 0222 00       		.uleb128 0x0
 1384 0223 0B       		.uleb128 0xb
 1385 0224 78080000 		.4byte	.LASF36
 1386 0228 06       		.byte	0x6
 1387 0229 49       		.byte	0x49
 1388 022a 51020000 		.4byte	0x251
 1389 022e 03       		.byte	0x3
 1390 022f 23       		.byte	0x23
 1391 0230 8001     		.uleb128 0x80
 1392 0232 0B       		.uleb128 0xb
 1393 0233 DA0A0000 		.4byte	.LASF37
 1394 0237 06       		.byte	0x6
 1395 0238 4B       		.byte	0x4b
 1396 0239 F6000000 		.4byte	0xf6
 1397 023d 03       		.byte	0x3
 1398 023e 23       		.byte	0x23
 1399 023f 8002     		.uleb128 0x100
 1400 0241 0B       		.uleb128 0xb
 1401 0242 310B0000 		.4byte	.LASF38
 1402 0246 06       		.byte	0x6
 1403 0247 4E       		.byte	0x4e
 1404 0248 F6000000 		.4byte	0xf6
 1405 024c 03       		.byte	0x3
 1406 024d 23       		.byte	0x23
 1407 024e 8402     		.uleb128 0x104
 1408 0250 00       		.byte	0x0
 1409 0251 08       		.uleb128 0x8
 1410 0252 F4000000 		.4byte	0xf4
 1411 0256 61020000 		.4byte	0x261
 1412 025a 09       		.uleb128 0x9
 1413 025b 4C000000 		.4byte	0x4c
 1414 025f 1F       		.byte	0x1f
 1415 0260 00       		.byte	0x0
 1416 0261 10       		.uleb128 0x10
 1417 0262 8E070000 		.4byte	.LASF39
 1418 0266 9001     		.2byte	0x190
 1419 0268 06       		.byte	0x6
 1420 0269 59       		.byte	0x59
 1421 026a A8020000 		.4byte	0x2a8
 1422 026e 0B       		.uleb128 0xb
 1423 026f 75090000 		.4byte	.LASF19
 1424 0273 06       		.byte	0x6
 1425 0274 5A       		.byte	0x5a
 1426 0275 A8020000 		.4byte	0x2a8
ARM GAS  /tmp/ccogXpQB.s 			page 58


 1427 0279 02       		.byte	0x2
 1428 027a 23       		.byte	0x23
 1429 027b 00       		.uleb128 0x0
 1430 027c 0B       		.uleb128 0xb
 1431 027d 140B0000 		.4byte	.LASF40
 1432 0281 06       		.byte	0x6
 1433 0282 5B       		.byte	0x5b
 1434 0283 45000000 		.4byte	0x45
 1435 0287 02       		.byte	0x2
 1436 0288 23       		.byte	0x23
 1437 0289 04       		.uleb128 0x4
 1438 028a 0B       		.uleb128 0xb
 1439 028b 4A030000 		.4byte	.LASF41
 1440 028f 06       		.byte	0x6
 1441 0290 5D       		.byte	0x5d
 1442 0291 AE020000 		.4byte	0x2ae
 1443 0295 02       		.byte	0x2
 1444 0296 23       		.byte	0x23
 1445 0297 08       		.uleb128 0x8
 1446 0298 0B       		.uleb128 0xb
 1447 0299 66010000 		.4byte	.LASF34
 1448 029d 06       		.byte	0x6
 1449 029e 5E       		.byte	0x5e
 1450 029f 08020000 		.4byte	0x208
 1451 02a3 03       		.byte	0x3
 1452 02a4 23       		.byte	0x23
 1453 02a5 8801     		.uleb128 0x88
 1454 02a7 00       		.byte	0x0
 1455 02a8 0F       		.uleb128 0xf
 1456 02a9 04       		.byte	0x4
 1457 02aa 61020000 		.4byte	0x261
 1458 02ae 08       		.uleb128 0x8
 1459 02af C0020000 		.4byte	0x2c0
 1460 02b3 BE020000 		.4byte	0x2be
 1461 02b7 09       		.uleb128 0x9
 1462 02b8 4C000000 		.4byte	0x4c
 1463 02bc 1F       		.byte	0x1f
 1464 02bd 00       		.byte	0x0
 1465 02be 11       		.uleb128 0x11
 1466 02bf 01       		.byte	0x1
 1467 02c0 0F       		.uleb128 0xf
 1468 02c1 04       		.byte	0x4
 1469 02c2 BE020000 		.4byte	0x2be
 1470 02c6 0D       		.uleb128 0xd
 1471 02c7 2A0B0000 		.4byte	.LASF42
 1472 02cb 08       		.byte	0x8
 1473 02cc 06       		.byte	0x6
 1474 02cd 69       		.byte	0x69
 1475 02ce EF020000 		.4byte	0x2ef
 1476 02d2 0B       		.uleb128 0xb
 1477 02d3 D9080000 		.4byte	.LASF43
 1478 02d7 06       		.byte	0x6
 1479 02d8 6A       		.byte	0x6a
 1480 02d9 EF020000 		.4byte	0x2ef
 1481 02dd 02       		.byte	0x2
 1482 02de 23       		.byte	0x23
 1483 02df 00       		.uleb128 0x0
ARM GAS  /tmp/ccogXpQB.s 			page 59


 1484 02e0 0B       		.uleb128 0xb
 1485 02e1 C3010000 		.4byte	.LASF44
 1486 02e5 06       		.byte	0x6
 1487 02e6 6B       		.byte	0x6b
 1488 02e7 45000000 		.4byte	0x45
 1489 02eb 02       		.byte	0x2
 1490 02ec 23       		.byte	0x23
 1491 02ed 04       		.uleb128 0x4
 1492 02ee 00       		.byte	0x0
 1493 02ef 0F       		.uleb128 0xf
 1494 02f0 04       		.byte	0x4
 1495 02f1 30000000 		.4byte	0x30
 1496 02f5 0D       		.uleb128 0xd
 1497 02f6 34050000 		.4byte	.LASF45
 1498 02fa 68       		.byte	0x68
 1499 02fb 06       		.byte	0x6
 1500 02fc A9       		.byte	0xa9
 1501 02fd 4F040000 		.4byte	0x44f
 1502 0301 0E       		.uleb128 0xe
 1503 0302 5F7000   		.ascii	"_p\000"
 1504 0305 06       		.byte	0x6
 1505 0306 AA       		.byte	0xaa
 1506 0307 EF020000 		.4byte	0x2ef
 1507 030b 02       		.byte	0x2
 1508 030c 23       		.byte	0x23
 1509 030d 00       		.uleb128 0x0
 1510 030e 0E       		.uleb128 0xe
 1511 030f 5F7200   		.ascii	"_r\000"
 1512 0312 06       		.byte	0x6
 1513 0313 AB       		.byte	0xab
 1514 0314 45000000 		.4byte	0x45
 1515 0318 02       		.byte	0x2
 1516 0319 23       		.byte	0x23
 1517 031a 04       		.uleb128 0x4
 1518 031b 0E       		.uleb128 0xe
 1519 031c 5F7700   		.ascii	"_w\000"
 1520 031f 06       		.byte	0x6
 1521 0320 AC       		.byte	0xac
 1522 0321 45000000 		.4byte	0x45
 1523 0325 02       		.byte	0x2
 1524 0326 23       		.byte	0x23
 1525 0327 08       		.uleb128 0x8
 1526 0328 0B       		.uleb128 0xb
 1527 0329 87070000 		.4byte	.LASF46
 1528 032d 06       		.byte	0x6
 1529 032e AD       		.byte	0xad
 1530 032f 37000000 		.4byte	0x37
 1531 0333 02       		.byte	0x2
 1532 0334 23       		.byte	0x23
 1533 0335 0C       		.uleb128 0xc
 1534 0336 0B       		.uleb128 0xb
 1535 0337 60010000 		.4byte	.LASF47
 1536 033b 06       		.byte	0x6
 1537 033c AE       		.byte	0xae
 1538 033d 37000000 		.4byte	0x37
 1539 0341 02       		.byte	0x2
 1540 0342 23       		.byte	0x23
ARM GAS  /tmp/ccogXpQB.s 			page 60


 1541 0343 0E       		.uleb128 0xe
 1542 0344 0E       		.uleb128 0xe
 1543 0345 5F626600 		.ascii	"_bf\000"
 1544 0349 06       		.byte	0x6
 1545 034a AF       		.byte	0xaf
 1546 034b C6020000 		.4byte	0x2c6
 1547 034f 02       		.byte	0x2
 1548 0350 23       		.byte	0x23
 1549 0351 10       		.uleb128 0x10
 1550 0352 0B       		.uleb128 0xb
 1551 0353 060B0000 		.4byte	.LASF48
 1552 0357 06       		.byte	0x6
 1553 0358 B0       		.byte	0xb0
 1554 0359 45000000 		.4byte	0x45
 1555 035d 02       		.byte	0x2
 1556 035e 23       		.byte	0x23
 1557 035f 18       		.uleb128 0x18
 1558 0360 0B       		.uleb128 0xb
 1559 0361 41040000 		.4byte	.LASF49
 1560 0365 06       		.byte	0x6
 1561 0366 B7       		.byte	0xb7
 1562 0367 F4000000 		.4byte	0xf4
 1563 036b 02       		.byte	0x2
 1564 036c 23       		.byte	0x23
 1565 036d 1C       		.uleb128 0x1c
 1566 036e 0B       		.uleb128 0xb
 1567 036f 34000000 		.4byte	.LASF50
 1568 0373 06       		.byte	0x6
 1569 0374 B9       		.byte	0xb9
 1570 0375 DF050000 		.4byte	0x5df
 1571 0379 02       		.byte	0x2
 1572 037a 23       		.byte	0x23
 1573 037b 20       		.uleb128 0x20
 1574 037c 0B       		.uleb128 0xb
 1575 037d 44000000 		.4byte	.LASF51
 1576 0381 06       		.byte	0x6
 1577 0382 BB       		.byte	0xbb
 1578 0383 0F060000 		.4byte	0x60f
 1579 0387 02       		.byte	0x2
 1580 0388 23       		.byte	0x23
 1581 0389 24       		.uleb128 0x24
 1582 038a 0B       		.uleb128 0xb
 1583 038b DE070000 		.4byte	.LASF52
 1584 038f 06       		.byte	0x6
 1585 0390 BD       		.byte	0xbd
 1586 0391 34060000 		.4byte	0x634
 1587 0395 02       		.byte	0x2
 1588 0396 23       		.byte	0x23
 1589 0397 28       		.uleb128 0x28
 1590 0398 0B       		.uleb128 0xb
 1591 0399 67030000 		.4byte	.LASF53
 1592 039d 06       		.byte	0x6
 1593 039e BE       		.byte	0xbe
 1594 039f 4F060000 		.4byte	0x64f
 1595 03a3 02       		.byte	0x2
 1596 03a4 23       		.byte	0x23
 1597 03a5 2C       		.uleb128 0x2c
ARM GAS  /tmp/ccogXpQB.s 			page 61


 1598 03a6 0E       		.uleb128 0xe
 1599 03a7 5F756200 		.ascii	"_ub\000"
 1600 03ab 06       		.byte	0x6
 1601 03ac C1       		.byte	0xc1
 1602 03ad C6020000 		.4byte	0x2c6
 1603 03b1 02       		.byte	0x2
 1604 03b2 23       		.byte	0x23
 1605 03b3 30       		.uleb128 0x30
 1606 03b4 0E       		.uleb128 0xe
 1607 03b5 5F757000 		.ascii	"_up\000"
 1608 03b9 06       		.byte	0x6
 1609 03ba C2       		.byte	0xc2
 1610 03bb EF020000 		.4byte	0x2ef
 1611 03bf 02       		.byte	0x2
 1612 03c0 23       		.byte	0x23
 1613 03c1 38       		.uleb128 0x38
 1614 03c2 0E       		.uleb128 0xe
 1615 03c3 5F757200 		.ascii	"_ur\000"
 1616 03c7 06       		.byte	0x6
 1617 03c8 C3       		.byte	0xc3
 1618 03c9 45000000 		.4byte	0x45
 1619 03cd 02       		.byte	0x2
 1620 03ce 23       		.byte	0x23
 1621 03cf 3C       		.uleb128 0x3c
 1622 03d0 0B       		.uleb128 0xb
 1623 03d1 4F070000 		.4byte	.LASF54
 1624 03d5 06       		.byte	0x6
 1625 03d6 C6       		.byte	0xc6
 1626 03d7 55060000 		.4byte	0x655
 1627 03db 02       		.byte	0x2
 1628 03dc 23       		.byte	0x23
 1629 03dd 40       		.uleb128 0x40
 1630 03de 0B       		.uleb128 0xb
 1631 03df 9F000000 		.4byte	.LASF55
 1632 03e3 06       		.byte	0x6
 1633 03e4 C7       		.byte	0xc7
 1634 03e5 65060000 		.4byte	0x665
 1635 03e9 02       		.byte	0x2
 1636 03ea 23       		.byte	0x23
 1637 03eb 43       		.uleb128 0x43
 1638 03ec 0E       		.uleb128 0xe
 1639 03ed 5F6C6200 		.ascii	"_lb\000"
 1640 03f1 06       		.byte	0x6
 1641 03f2 CA       		.byte	0xca
 1642 03f3 C6020000 		.4byte	0x2c6
 1643 03f7 02       		.byte	0x2
 1644 03f8 23       		.byte	0x23
 1645 03f9 44       		.uleb128 0x44
 1646 03fa 0B       		.uleb128 0xb
 1647 03fb BC080000 		.4byte	.LASF56
 1648 03ff 06       		.byte	0x6
 1649 0400 CD       		.byte	0xcd
 1650 0401 45000000 		.4byte	0x45
 1651 0405 02       		.byte	0x2
 1652 0406 23       		.byte	0x23
 1653 0407 4C       		.uleb128 0x4c
 1654 0408 0B       		.uleb128 0xb
ARM GAS  /tmp/ccogXpQB.s 			page 62


 1655 0409 6A040000 		.4byte	.LASF57
 1656 040d 06       		.byte	0x6
 1657 040e CE       		.byte	0xce
 1658 040f 45000000 		.4byte	0x45
 1659 0413 02       		.byte	0x2
 1660 0414 23       		.byte	0x23
 1661 0415 50       		.uleb128 0x50
 1662 0416 0B       		.uleb128 0xb
 1663 0417 7B090000 		.4byte	.LASF58
 1664 041b 06       		.byte	0x6
 1665 041c D1       		.byte	0xd1
 1666 041d 6E040000 		.4byte	0x46e
 1667 0421 02       		.byte	0x2
 1668 0422 23       		.byte	0x23
 1669 0423 54       		.uleb128 0x54
 1670 0424 0B       		.uleb128 0xb
 1671 0425 C3000000 		.4byte	.LASF59
 1672 0429 06       		.byte	0x6
 1673 042a D5       		.byte	0xd5
 1674 042b E9000000 		.4byte	0xe9
 1675 042f 02       		.byte	0x2
 1676 0430 23       		.byte	0x23
 1677 0431 58       		.uleb128 0x58
 1678 0432 0B       		.uleb128 0xb
 1679 0433 6B070000 		.4byte	.LASF60
 1680 0437 06       		.byte	0x6
 1681 0438 D7       		.byte	0xd7
 1682 0439 DE000000 		.4byte	0xde
 1683 043d 02       		.byte	0x2
 1684 043e 23       		.byte	0x23
 1685 043f 5C       		.uleb128 0x5c
 1686 0440 0B       		.uleb128 0xb
 1687 0441 47050000 		.4byte	.LASF61
 1688 0445 06       		.byte	0x6
 1689 0446 D8       		.byte	0xd8
 1690 0447 45000000 		.4byte	0x45
 1691 044b 02       		.byte	0x2
 1692 044c 23       		.byte	0x23
 1693 044d 64       		.uleb128 0x64
 1694 044e 00       		.byte	0x0
 1695 044f 12       		.uleb128 0x12
 1696 0450 01       		.byte	0x1
 1697 0451 45000000 		.4byte	0x45
 1698 0455 6E040000 		.4byte	0x46e
 1699 0459 13       		.uleb128 0x13
 1700 045a 6E040000 		.4byte	0x46e
 1701 045e 13       		.uleb128 0x13
 1702 045f F4000000 		.4byte	0xf4
 1703 0463 13       		.uleb128 0x13
 1704 0464 D2050000 		.4byte	0x5d2
 1705 0468 13       		.uleb128 0x13
 1706 0469 45000000 		.4byte	0x45
 1707 046d 00       		.byte	0x0
 1708 046e 0F       		.uleb128 0xf
 1709 046f 04       		.byte	0x4
 1710 0470 74040000 		.4byte	0x474
 1711 0474 14       		.uleb128 0x14
ARM GAS  /tmp/ccogXpQB.s 			page 63


 1712 0475 02030000 		.4byte	.LASF62
 1713 0479 2804     		.2byte	0x428
 1714 047b 06       		.byte	0x6
 1715 047c 4402     		.2byte	0x244
 1716 047e D2050000 		.4byte	0x5d2
 1717 0482 15       		.uleb128 0x15
 1718 0483 7F050000 		.4byte	.LASF63
 1719 0487 06       		.byte	0x6
 1720 0488 4602     		.2byte	0x246
 1721 048a 45000000 		.4byte	0x45
 1722 048e 02       		.byte	0x2
 1723 048f 23       		.byte	0x23
 1724 0490 00       		.uleb128 0x0
 1725 0491 15       		.uleb128 0x15
 1726 0492 B9030000 		.4byte	.LASF64
 1727 0496 06       		.byte	0x6
 1728 0497 4B02     		.2byte	0x24b
 1729 0499 C2060000 		.4byte	0x6c2
 1730 049d 02       		.byte	0x2
 1731 049e 23       		.byte	0x23
 1732 049f 04       		.uleb128 0x4
 1733 04a0 15       		.uleb128 0x15
 1734 04a1 A8080000 		.4byte	.LASF65
 1735 04a5 06       		.byte	0x6
 1736 04a6 4B02     		.2byte	0x24b
 1737 04a8 C2060000 		.4byte	0x6c2
 1738 04ac 02       		.byte	0x2
 1739 04ad 23       		.byte	0x23
 1740 04ae 08       		.uleb128 0x8
 1741 04af 15       		.uleb128 0x15
 1742 04b0 55070000 		.4byte	.LASF66
 1743 04b4 06       		.byte	0x6
 1744 04b5 4B02     		.2byte	0x24b
 1745 04b7 C2060000 		.4byte	0x6c2
 1746 04bb 02       		.byte	0x2
 1747 04bc 23       		.byte	0x23
 1748 04bd 0C       		.uleb128 0xc
 1749 04be 15       		.uleb128 0x15
 1750 04bf 0F0B0000 		.4byte	.LASF67
 1751 04c3 06       		.byte	0x6
 1752 04c4 4D02     		.2byte	0x24d
 1753 04c6 45000000 		.4byte	0x45
 1754 04ca 02       		.byte	0x2
 1755 04cb 23       		.byte	0x23
 1756 04cc 10       		.uleb128 0x10
 1757 04cd 15       		.uleb128 0x15
 1758 04ce 0B060000 		.4byte	.LASF68
 1759 04d2 06       		.byte	0x6
 1760 04d3 4E02     		.2byte	0x24e
 1761 04d5 DD080000 		.4byte	0x8dd
 1762 04d9 02       		.byte	0x2
 1763 04da 23       		.byte	0x23
 1764 04db 14       		.uleb128 0x14
 1765 04dc 15       		.uleb128 0x15
 1766 04dd 55020000 		.4byte	.LASF69
 1767 04e1 06       		.byte	0x6
 1768 04e2 5002     		.2byte	0x250
ARM GAS  /tmp/ccogXpQB.s 			page 64


 1769 04e4 45000000 		.4byte	0x45
 1770 04e8 02       		.byte	0x2
 1771 04e9 23       		.byte	0x23
 1772 04ea 30       		.uleb128 0x30
 1773 04eb 15       		.uleb128 0x15
 1774 04ec 88060000 		.4byte	.LASF70
 1775 04f0 06       		.byte	0x6
 1776 04f1 5102     		.2byte	0x251
 1777 04f3 04060000 		.4byte	0x604
 1778 04f7 02       		.byte	0x2
 1779 04f8 23       		.byte	0x23
 1780 04f9 34       		.uleb128 0x34
 1781 04fa 15       		.uleb128 0x15
 1782 04fb 3C050000 		.4byte	.LASF71
 1783 04ff 06       		.byte	0x6
 1784 0500 5302     		.2byte	0x253
 1785 0502 45000000 		.4byte	0x45
 1786 0506 02       		.byte	0x2
 1787 0507 23       		.byte	0x23
 1788 0508 38       		.uleb128 0x38
 1789 0509 15       		.uleb128 0x15
 1790 050a DB050000 		.4byte	.LASF72
 1791 050e 06       		.byte	0x6
 1792 050f 5502     		.2byte	0x255
 1793 0511 F9080000 		.4byte	0x8f9
 1794 0515 02       		.byte	0x2
 1795 0516 23       		.byte	0x23
 1796 0517 3C       		.uleb128 0x3c
 1797 0518 15       		.uleb128 0x15
 1798 0519 6A0B0000 		.4byte	.LASF73
 1799 051d 06       		.byte	0x6
 1800 051e 5802     		.2byte	0x258
 1801 0520 67010000 		.4byte	0x167
 1802 0524 02       		.byte	0x2
 1803 0525 23       		.byte	0x23
 1804 0526 40       		.uleb128 0x40
 1805 0527 15       		.uleb128 0x15
 1806 0528 B9010000 		.4byte	.LASF74
 1807 052c 06       		.byte	0x6
 1808 052d 5902     		.2byte	0x259
 1809 052f 45000000 		.4byte	0x45
 1810 0533 02       		.byte	0x2
 1811 0534 23       		.byte	0x23
 1812 0535 44       		.uleb128 0x44
 1813 0536 15       		.uleb128 0x15
 1814 0537 00050000 		.4byte	.LASF75
 1815 053b 06       		.byte	0x6
 1816 053c 5A02     		.2byte	0x25a
 1817 053e 67010000 		.4byte	0x167
 1818 0542 02       		.byte	0x2
 1819 0543 23       		.byte	0x23
 1820 0544 48       		.uleb128 0x48
 1821 0545 15       		.uleb128 0x15
 1822 0546 98060000 		.4byte	.LASF76
 1823 054a 06       		.byte	0x6
 1824 054b 5B02     		.2byte	0x25b
 1825 054d FF080000 		.4byte	0x8ff
ARM GAS  /tmp/ccogXpQB.s 			page 65


 1826 0551 02       		.byte	0x2
 1827 0552 23       		.byte	0x23
 1828 0553 4C       		.uleb128 0x4c
 1829 0554 15       		.uleb128 0x15
 1830 0555 58000000 		.4byte	.LASF77
 1831 0559 06       		.byte	0x6
 1832 055a 5E02     		.2byte	0x25e
 1833 055c 45000000 		.4byte	0x45
 1834 0560 02       		.byte	0x2
 1835 0561 23       		.byte	0x23
 1836 0562 50       		.uleb128 0x50
 1837 0563 15       		.uleb128 0x15
 1838 0564 72040000 		.4byte	.LASF78
 1839 0568 06       		.byte	0x6
 1840 0569 5F02     		.2byte	0x25f
 1841 056b D2050000 		.4byte	0x5d2
 1842 056f 02       		.byte	0x2
 1843 0570 23       		.byte	0x23
 1844 0571 54       		.uleb128 0x54
 1845 0572 15       		.uleb128 0x15
 1846 0573 4A070000 		.4byte	.LASF79
 1847 0577 06       		.byte	0x6
 1848 0578 8202     		.2byte	0x282
 1849 057a BB080000 		.4byte	0x8bb
 1850 057e 02       		.byte	0x2
 1851 057f 23       		.byte	0x23
 1852 0580 58       		.uleb128 0x58
 1853 0581 15       		.uleb128 0x15
 1854 0582 8E070000 		.4byte	.LASF39
 1855 0586 06       		.byte	0x6
 1856 0587 8502     		.2byte	0x285
 1857 0589 A8020000 		.4byte	0x2a8
 1858 058d 03       		.byte	0x3
 1859 058e 23       		.byte	0x23
 1860 058f C802     		.uleb128 0x148
 1861 0591 15       		.uleb128 0x15
 1862 0592 FA050000 		.4byte	.LASF80
 1863 0596 06       		.byte	0x6
 1864 0597 8602     		.2byte	0x286
 1865 0599 61020000 		.4byte	0x261
 1866 059d 03       		.byte	0x3
 1867 059e 23       		.byte	0x23
 1868 059f CC02     		.uleb128 0x14c
 1869 05a1 15       		.uleb128 0x15
 1870 05a2 60040000 		.4byte	.LASF81
 1871 05a6 06       		.byte	0x6
 1872 05a7 8902     		.2byte	0x289
 1873 05a9 11090000 		.4byte	0x911
 1874 05ad 03       		.byte	0x3
 1875 05ae 23       		.byte	0x23
 1876 05af DC05     		.uleb128 0x2dc
 1877 05b1 15       		.uleb128 0x15
 1878 05b2 35060000 		.4byte	.LASF82
 1879 05b6 06       		.byte	0x6
 1880 05b7 8E02     		.2byte	0x28e
 1881 05b9 81060000 		.4byte	0x681
 1882 05bd 03       		.byte	0x3
ARM GAS  /tmp/ccogXpQB.s 			page 66


 1883 05be 23       		.byte	0x23
 1884 05bf E005     		.uleb128 0x2e0
 1885 05c1 15       		.uleb128 0x15
 1886 05c2 2F000000 		.4byte	.LASF83
 1887 05c6 06       		.byte	0x6
 1888 05c7 8F02     		.2byte	0x28f
 1889 05c9 1D090000 		.4byte	0x91d
 1890 05cd 03       		.byte	0x3
 1891 05ce 23       		.byte	0x23
 1892 05cf EC05     		.uleb128 0x2ec
 1893 05d1 00       		.byte	0x0
 1894 05d2 0F       		.uleb128 0xf
 1895 05d3 04       		.byte	0x4
 1896 05d4 D8050000 		.4byte	0x5d8
 1897 05d8 02       		.uleb128 0x2
 1898 05d9 01       		.byte	0x1
 1899 05da 08       		.byte	0x8
 1900 05db 45030000 		.4byte	.LASF84
 1901 05df 0F       		.uleb128 0xf
 1902 05e0 04       		.byte	0x4
 1903 05e1 4F040000 		.4byte	0x44f
 1904 05e5 12       		.uleb128 0x12
 1905 05e6 01       		.byte	0x1
 1906 05e7 45000000 		.4byte	0x45
 1907 05eb 04060000 		.4byte	0x604
 1908 05ef 13       		.uleb128 0x13
 1909 05f0 6E040000 		.4byte	0x46e
 1910 05f4 13       		.uleb128 0x13
 1911 05f5 F4000000 		.4byte	0xf4
 1912 05f9 13       		.uleb128 0x13
 1913 05fa 04060000 		.4byte	0x604
 1914 05fe 13       		.uleb128 0x13
 1915 05ff 45000000 		.4byte	0x45
 1916 0603 00       		.byte	0x0
 1917 0604 0F       		.uleb128 0xf
 1918 0605 04       		.byte	0x4
 1919 0606 0A060000 		.4byte	0x60a
 1920 060a 16       		.uleb128 0x16
 1921 060b D8050000 		.4byte	0x5d8
 1922 060f 0F       		.uleb128 0xf
 1923 0610 04       		.byte	0x4
 1924 0611 E5050000 		.4byte	0x5e5
 1925 0615 12       		.uleb128 0x12
 1926 0616 01       		.byte	0x1
 1927 0617 73000000 		.4byte	0x73
 1928 061b 34060000 		.4byte	0x634
 1929 061f 13       		.uleb128 0x13
 1930 0620 6E040000 		.4byte	0x46e
 1931 0624 13       		.uleb128 0x13
 1932 0625 F4000000 		.4byte	0xf4
 1933 0629 13       		.uleb128 0x13
 1934 062a 73000000 		.4byte	0x73
 1935 062e 13       		.uleb128 0x13
 1936 062f 45000000 		.4byte	0x45
 1937 0633 00       		.byte	0x0
 1938 0634 0F       		.uleb128 0xf
 1939 0635 04       		.byte	0x4
ARM GAS  /tmp/ccogXpQB.s 			page 67


 1940 0636 15060000 		.4byte	0x615
 1941 063a 12       		.uleb128 0x12
 1942 063b 01       		.byte	0x1
 1943 063c 45000000 		.4byte	0x45
 1944 0640 4F060000 		.4byte	0x64f
 1945 0644 13       		.uleb128 0x13
 1946 0645 6E040000 		.4byte	0x46e
 1947 0649 13       		.uleb128 0x13
 1948 064a F4000000 		.4byte	0xf4
 1949 064e 00       		.byte	0x0
 1950 064f 0F       		.uleb128 0xf
 1951 0650 04       		.byte	0x4
 1952 0651 3A060000 		.4byte	0x63a
 1953 0655 08       		.uleb128 0x8
 1954 0656 30000000 		.4byte	0x30
 1955 065a 65060000 		.4byte	0x665
 1956 065e 09       		.uleb128 0x9
 1957 065f 4C000000 		.4byte	0x4c
 1958 0663 02       		.byte	0x2
 1959 0664 00       		.byte	0x0
 1960 0665 08       		.uleb128 0x8
 1961 0666 30000000 		.4byte	0x30
 1962 066a 75060000 		.4byte	0x675
 1963 066e 09       		.uleb128 0x9
 1964 066f 4C000000 		.4byte	0x4c
 1965 0673 00       		.byte	0x0
 1966 0674 00       		.byte	0x0
 1967 0675 05       		.uleb128 0x5
 1968 0676 29090000 		.4byte	.LASF85
 1969 067a 06       		.byte	0x6
 1970 067b 1101     		.2byte	0x111
 1971 067d F5020000 		.4byte	0x2f5
 1972 0681 17       		.uleb128 0x17
 1973 0682 B2060000 		.4byte	.LASF86
 1974 0686 0C       		.byte	0xc
 1975 0687 06       		.byte	0x6
 1976 0688 1501     		.2byte	0x115
 1977 068a BC060000 		.4byte	0x6bc
 1978 068e 15       		.uleb128 0x15
 1979 068f 75090000 		.4byte	.LASF19
 1980 0693 06       		.byte	0x6
 1981 0694 1701     		.2byte	0x117
 1982 0696 BC060000 		.4byte	0x6bc
 1983 069a 02       		.byte	0x2
 1984 069b 23       		.byte	0x23
 1985 069c 00       		.uleb128 0x0
 1986 069d 15       		.uleb128 0x15
 1987 069e 24060000 		.4byte	.LASF87
 1988 06a2 06       		.byte	0x6
 1989 06a3 1801     		.2byte	0x118
 1990 06a5 45000000 		.4byte	0x45
 1991 06a9 02       		.byte	0x2
 1992 06aa 23       		.byte	0x23
 1993 06ab 04       		.uleb128 0x4
 1994 06ac 15       		.uleb128 0x15
 1995 06ad AC060000 		.4byte	.LASF88
 1996 06b1 06       		.byte	0x6
ARM GAS  /tmp/ccogXpQB.s 			page 68


 1997 06b2 1901     		.2byte	0x119
 1998 06b4 C2060000 		.4byte	0x6c2
 1999 06b8 02       		.byte	0x2
 2000 06b9 23       		.byte	0x23
 2001 06ba 08       		.uleb128 0x8
 2002 06bb 00       		.byte	0x0
 2003 06bc 0F       		.uleb128 0xf
 2004 06bd 04       		.byte	0x4
 2005 06be 81060000 		.4byte	0x681
 2006 06c2 0F       		.uleb128 0xf
 2007 06c3 04       		.byte	0x4
 2008 06c4 75060000 		.4byte	0x675
 2009 06c8 17       		.uleb128 0x17
 2010 06c9 8D080000 		.4byte	.LASF89
 2011 06cd 0E       		.byte	0xe
 2012 06ce 06       		.byte	0x6
 2013 06cf 3101     		.2byte	0x131
 2014 06d1 03070000 		.4byte	0x703
 2015 06d5 15       		.uleb128 0x15
 2016 06d6 D8070000 		.4byte	.LASF90
 2017 06da 06       		.byte	0x6
 2018 06db 3201     		.2byte	0x132
 2019 06dd 03070000 		.4byte	0x703
 2020 06e1 02       		.byte	0x2
 2021 06e2 23       		.byte	0x23
 2022 06e3 00       		.uleb128 0x0
 2023 06e4 15       		.uleb128 0x15
 2024 06e5 F3000000 		.4byte	.LASF91
 2025 06e9 06       		.byte	0x6
 2026 06ea 3301     		.2byte	0x133
 2027 06ec 03070000 		.4byte	0x703
 2028 06f0 02       		.byte	0x2
 2029 06f1 23       		.byte	0x23
 2030 06f2 06       		.uleb128 0x6
 2031 06f3 15       		.uleb128 0x15
 2032 06f4 960B0000 		.4byte	.LASF92
 2033 06f8 06       		.byte	0x6
 2034 06f9 3401     		.2byte	0x134
 2035 06fb 3E000000 		.4byte	0x3e
 2036 06ff 02       		.byte	0x2
 2037 0700 23       		.byte	0x23
 2038 0701 0C       		.uleb128 0xc
 2039 0702 00       		.byte	0x0
 2040 0703 08       		.uleb128 0x8
 2041 0704 3E000000 		.4byte	0x3e
 2042 0708 13070000 		.4byte	0x713
 2043 070c 09       		.uleb128 0x9
 2044 070d 4C000000 		.4byte	0x4c
 2045 0711 02       		.byte	0x2
 2046 0712 00       		.byte	0x0
 2047 0713 18       		.uleb128 0x18
 2048 0714 D0       		.byte	0xd0
 2049 0715 06       		.byte	0x6
 2050 0716 6302     		.2byte	0x263
 2051 0718 43080000 		.4byte	0x843
 2052 071c 15       		.uleb128 0x15
 2053 071d 6C020000 		.4byte	.LASF93
ARM GAS  /tmp/ccogXpQB.s 			page 69


 2054 0721 06       		.byte	0x6
 2055 0722 6502     		.2byte	0x265
 2056 0724 4C000000 		.4byte	0x4c
 2057 0728 02       		.byte	0x2
 2058 0729 23       		.byte	0x23
 2059 072a 00       		.uleb128 0x0
 2060 072b 15       		.uleb128 0x15
 2061 072c DF080000 		.4byte	.LASF94
 2062 0730 06       		.byte	0x6
 2063 0731 6602     		.2byte	0x266
 2064 0733 D2050000 		.4byte	0x5d2
 2065 0737 02       		.byte	0x2
 2066 0738 23       		.byte	0x23
 2067 0739 04       		.uleb128 0x4
 2068 073a 15       		.uleb128 0x15
 2069 073b 4B000000 		.4byte	.LASF95
 2070 073f 06       		.byte	0x6
 2071 0740 6702     		.2byte	0x267
 2072 0742 43080000 		.4byte	0x843
 2073 0746 02       		.byte	0x2
 2074 0747 23       		.byte	0x23
 2075 0748 08       		.uleb128 0x8
 2076 0749 15       		.uleb128 0x15
 2077 074a D8010000 		.4byte	.LASF96
 2078 074e 06       		.byte	0x6
 2079 074f 6802     		.2byte	0x268
 2080 0751 7D010000 		.4byte	0x17d
 2081 0755 02       		.byte	0x2
 2082 0756 23       		.byte	0x23
 2083 0757 24       		.uleb128 0x24
 2084 0758 15       		.uleb128 0x15
 2085 0759 59060000 		.4byte	.LASF97
 2086 075d 06       		.byte	0x6
 2087 075e 6902     		.2byte	0x269
 2088 0760 45000000 		.4byte	0x45
 2089 0764 02       		.byte	0x2
 2090 0765 23       		.byte	0x23
 2091 0766 48       		.uleb128 0x48
 2092 0767 15       		.uleb128 0x15
 2093 0768 7C070000 		.4byte	.LASF98
 2094 076c 06       		.byte	0x6
 2095 076d 6A02     		.2byte	0x26a
 2096 076f 5A000000 		.4byte	0x5a
 2097 0773 02       		.byte	0x2
 2098 0774 23       		.byte	0x23
 2099 0775 50       		.uleb128 0x50
 2100 0776 15       		.uleb128 0x15
 2101 0777 50090000 		.4byte	.LASF99
 2102 077b 06       		.byte	0x6
 2103 077c 6B02     		.2byte	0x26b
 2104 077e C8060000 		.4byte	0x6c8
 2105 0782 02       		.byte	0x2
 2106 0783 23       		.byte	0x23
 2107 0784 58       		.uleb128 0x58
 2108 0785 15       		.uleb128 0x15
 2109 0786 900A0000 		.4byte	.LASF100
 2110 078a 06       		.byte	0x6
ARM GAS  /tmp/ccogXpQB.s 			page 70


 2111 078b 6C02     		.2byte	0x26c
 2112 078d DE000000 		.4byte	0xde
 2113 0791 02       		.byte	0x2
 2114 0792 23       		.byte	0x23
 2115 0793 68       		.uleb128 0x68
 2116 0794 15       		.uleb128 0x15
 2117 0795 14080000 		.4byte	.LASF101
 2118 0799 06       		.byte	0x6
 2119 079a 6D02     		.2byte	0x26d
 2120 079c DE000000 		.4byte	0xde
 2121 07a0 02       		.byte	0x2
 2122 07a1 23       		.byte	0x23
 2123 07a2 70       		.uleb128 0x70
 2124 07a3 15       		.uleb128 0x15
 2125 07a4 5D070000 		.4byte	.LASF102
 2126 07a8 06       		.byte	0x6
 2127 07a9 6E02     		.2byte	0x26e
 2128 07ab DE000000 		.4byte	0xde
 2129 07af 02       		.byte	0x2
 2130 07b0 23       		.byte	0x23
 2131 07b1 78       		.uleb128 0x78
 2132 07b2 15       		.uleb128 0x15
 2133 07b3 AE000000 		.4byte	.LASF103
 2134 07b7 06       		.byte	0x6
 2135 07b8 6F02     		.2byte	0x26f
 2136 07ba 53080000 		.4byte	0x853
 2137 07be 03       		.byte	0x3
 2138 07bf 23       		.byte	0x23
 2139 07c0 8001     		.uleb128 0x80
 2140 07c2 15       		.uleb128 0x15
 2141 07c3 8E050000 		.4byte	.LASF104
 2142 07c7 06       		.byte	0x6
 2143 07c8 7002     		.2byte	0x270
 2144 07ca 63080000 		.4byte	0x863
 2145 07ce 03       		.byte	0x3
 2146 07cf 23       		.byte	0x23
 2147 07d0 8801     		.uleb128 0x88
 2148 07d2 15       		.uleb128 0x15
 2149 07d3 430C0000 		.4byte	.LASF105
 2150 07d7 06       		.byte	0x6
 2151 07d8 7102     		.2byte	0x271
 2152 07da 45000000 		.4byte	0x45
 2153 07de 03       		.byte	0x3
 2154 07df 23       		.byte	0x23
 2155 07e0 A001     		.uleb128 0xa0
 2156 07e2 15       		.uleb128 0x15
 2157 07e3 96010000 		.4byte	.LASF106
 2158 07e7 06       		.byte	0x6
 2159 07e8 7202     		.2byte	0x272
 2160 07ea DE000000 		.4byte	0xde
 2161 07ee 03       		.byte	0x3
 2162 07ef 23       		.byte	0x23
 2163 07f0 A401     		.uleb128 0xa4
 2164 07f2 15       		.uleb128 0x15
 2165 07f3 FD080000 		.4byte	.LASF107
 2166 07f7 06       		.byte	0x6
 2167 07f8 7302     		.2byte	0x273
ARM GAS  /tmp/ccogXpQB.s 			page 71


 2168 07fa DE000000 		.4byte	0xde
 2169 07fe 03       		.byte	0x3
 2170 07ff 23       		.byte	0x23
 2171 0800 AC01     		.uleb128 0xac
 2172 0802 15       		.uleb128 0x15
 2173 0803 D50B0000 		.4byte	.LASF108
 2174 0807 06       		.byte	0x6
 2175 0808 7402     		.2byte	0x274
 2176 080a DE000000 		.4byte	0xde
 2177 080e 03       		.byte	0x3
 2178 080f 23       		.byte	0x23
 2179 0810 B401     		.uleb128 0xb4
 2180 0812 15       		.uleb128 0x15
 2181 0813 17070000 		.4byte	.LASF109
 2182 0817 06       		.byte	0x6
 2183 0818 7502     		.2byte	0x275
 2184 081a DE000000 		.4byte	0xde
 2185 081e 03       		.byte	0x3
 2186 081f 23       		.byte	0x23
 2187 0820 BC01     		.uleb128 0xbc
 2188 0822 15       		.uleb128 0x15
 2189 0823 8E000000 		.4byte	.LASF110
 2190 0827 06       		.byte	0x6
 2191 0828 7602     		.2byte	0x276
 2192 082a DE000000 		.4byte	0xde
 2193 082e 03       		.byte	0x3
 2194 082f 23       		.byte	0x23
 2195 0830 C401     		.uleb128 0xc4
 2196 0832 15       		.uleb128 0x15
 2197 0833 FD060000 		.4byte	.LASF111
 2198 0837 06       		.byte	0x6
 2199 0838 7702     		.2byte	0x277
 2200 083a 45000000 		.4byte	0x45
 2201 083e 03       		.byte	0x3
 2202 083f 23       		.byte	0x23
 2203 0840 CC01     		.uleb128 0xcc
 2204 0842 00       		.byte	0x0
 2205 0843 08       		.uleb128 0x8
 2206 0844 D8050000 		.4byte	0x5d8
 2207 0848 53080000 		.4byte	0x853
 2208 084c 09       		.uleb128 0x9
 2209 084d 4C000000 		.4byte	0x4c
 2210 0851 19       		.byte	0x19
 2211 0852 00       		.byte	0x0
 2212 0853 08       		.uleb128 0x8
 2213 0854 D8050000 		.4byte	0x5d8
 2214 0858 63080000 		.4byte	0x863
 2215 085c 09       		.uleb128 0x9
 2216 085d 4C000000 		.4byte	0x4c
 2217 0861 07       		.byte	0x7
 2218 0862 00       		.byte	0x0
 2219 0863 08       		.uleb128 0x8
 2220 0864 D8050000 		.4byte	0x5d8
 2221 0868 73080000 		.4byte	0x873
 2222 086c 09       		.uleb128 0x9
 2223 086d 4C000000 		.4byte	0x4c
 2224 0871 17       		.byte	0x17
ARM GAS  /tmp/ccogXpQB.s 			page 72


 2225 0872 00       		.byte	0x0
 2226 0873 18       		.uleb128 0x18
 2227 0874 F0       		.byte	0xf0
 2228 0875 06       		.byte	0x6
 2229 0876 7C02     		.2byte	0x27c
 2230 0878 9B080000 		.4byte	0x89b
 2231 087c 15       		.uleb128 0x15
 2232 087d 390B0000 		.4byte	.LASF112
 2233 0881 06       		.byte	0x6
 2234 0882 7F02     		.2byte	0x27f
 2235 0884 9B080000 		.4byte	0x89b
 2236 0888 02       		.byte	0x2
 2237 0889 23       		.byte	0x23
 2238 088a 00       		.uleb128 0x0
 2239 088b 15       		.uleb128 0x15
 2240 088c 3D060000 		.4byte	.LASF113
 2241 0890 06       		.byte	0x6
 2242 0891 8002     		.2byte	0x280
 2243 0893 AB080000 		.4byte	0x8ab
 2244 0897 02       		.byte	0x2
 2245 0898 23       		.byte	0x23
 2246 0899 78       		.uleb128 0x78
 2247 089a 00       		.byte	0x0
 2248 089b 08       		.uleb128 0x8
 2249 089c EF020000 		.4byte	0x2ef
 2250 08a0 AB080000 		.4byte	0x8ab
 2251 08a4 09       		.uleb128 0x9
 2252 08a5 4C000000 		.4byte	0x4c
 2253 08a9 1D       		.byte	0x1d
 2254 08aa 00       		.byte	0x0
 2255 08ab 08       		.uleb128 0x8
 2256 08ac 4C000000 		.4byte	0x4c
 2257 08b0 BB080000 		.4byte	0x8bb
 2258 08b4 09       		.uleb128 0x9
 2259 08b5 4C000000 		.4byte	0x4c
 2260 08b9 1D       		.byte	0x1d
 2261 08ba 00       		.byte	0x0
 2262 08bb 19       		.uleb128 0x19
 2263 08bc F0       		.byte	0xf0
 2264 08bd 06       		.byte	0x6
 2265 08be 6102     		.2byte	0x261
 2266 08c0 DD080000 		.4byte	0x8dd
 2267 08c4 1A       		.uleb128 0x1a
 2268 08c5 02030000 		.4byte	.LASF62
 2269 08c9 06       		.byte	0x6
 2270 08ca 7802     		.2byte	0x278
 2271 08cc 13070000 		.4byte	0x713
 2272 08d0 1A       		.uleb128 0x1a
 2273 08d1 81000000 		.4byte	.LASF114
 2274 08d5 06       		.byte	0x6
 2275 08d6 8102     		.2byte	0x281
 2276 08d8 73080000 		.4byte	0x873
 2277 08dc 00       		.byte	0x0
 2278 08dd 08       		.uleb128 0x8
 2279 08de D8050000 		.4byte	0x5d8
 2280 08e2 ED080000 		.4byte	0x8ed
 2281 08e6 09       		.uleb128 0x9
ARM GAS  /tmp/ccogXpQB.s 			page 73


 2282 08e7 4C000000 		.4byte	0x4c
 2283 08eb 18       		.byte	0x18
 2284 08ec 00       		.byte	0x0
 2285 08ed 1B       		.uleb128 0x1b
 2286 08ee 01       		.byte	0x1
 2287 08ef F9080000 		.4byte	0x8f9
 2288 08f3 13       		.uleb128 0x13
 2289 08f4 6E040000 		.4byte	0x46e
 2290 08f8 00       		.byte	0x0
 2291 08f9 0F       		.uleb128 0xf
 2292 08fa 04       		.byte	0x4
 2293 08fb ED080000 		.4byte	0x8ed
 2294 08ff 0F       		.uleb128 0xf
 2295 0900 04       		.byte	0x4
 2296 0901 67010000 		.4byte	0x167
 2297 0905 1B       		.uleb128 0x1b
 2298 0906 01       		.byte	0x1
 2299 0907 11090000 		.4byte	0x911
 2300 090b 13       		.uleb128 0x13
 2301 090c 45000000 		.4byte	0x45
 2302 0910 00       		.byte	0x0
 2303 0911 0F       		.uleb128 0xf
 2304 0912 04       		.byte	0x4
 2305 0913 17090000 		.4byte	0x917
 2306 0917 0F       		.uleb128 0xf
 2307 0918 04       		.byte	0x4
 2308 0919 05090000 		.4byte	0x905
 2309 091d 08       		.uleb128 0x8
 2310 091e 75060000 		.4byte	0x675
 2311 0922 2D090000 		.4byte	0x92d
 2312 0926 09       		.uleb128 0x9
 2313 0927 4C000000 		.4byte	0x4c
 2314 092b 02       		.byte	0x2
 2315 092c 00       		.byte	0x0
 2316 092d 04       		.uleb128 0x4
 2317 092e 85020000 		.4byte	.LASF115
 2318 0932 07       		.byte	0x7
 2319 0933 2A       		.byte	0x2a
 2320 0934 30000000 		.4byte	0x30
 2321 0938 04       		.uleb128 0x4
 2322 0939 BC0A0000 		.4byte	.LASF116
 2323 093d 07       		.byte	0x7
 2324 093e 35       		.byte	0x35
 2325 093f 37000000 		.4byte	0x37
 2326 0943 04       		.uleb128 0x4
 2327 0944 55080000 		.4byte	.LASF117
 2328 0948 07       		.byte	0x7
 2329 0949 36       		.byte	0x36
 2330 094a 3E000000 		.4byte	0x3e
 2331 094e 04       		.uleb128 0x4
 2332 094f 610B0000 		.4byte	.LASF118
 2333 0953 07       		.byte	0x7
 2334 0954 50       		.byte	0x50
 2335 0955 01010000 		.4byte	0x101
 2336 0959 16       		.uleb128 0x16
 2337 095a 5E090000 		.4byte	0x95e
 2338 095e 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccogXpQB.s 			page 74


 2339 095f 4E090000 		.4byte	0x94e
 2340 0963 1C       		.uleb128 0x1c
 2341 0964 4E090000 		.4byte	0x94e
 2342 0968 1D       		.uleb128 0x1d
 2343 0969 06020000 		.4byte	.LASF324
 2344 096d 01       		.byte	0x1
 2345 096e 08       		.byte	0x8
 2346 096f 49       		.byte	0x49
 2347 0970 650A0000 		.4byte	0xa65
 2348 0974 1E       		.uleb128 0x1e
 2349 0975 E3040000 		.4byte	.LASF119
 2350 0979 72       		.sleb128 -14
 2351 097a 1E       		.uleb128 0x1e
 2352 097b 17050000 		.4byte	.LASF120
 2353 097f 74       		.sleb128 -12
 2354 0980 1E       		.uleb128 0x1e
 2355 0981 E5050000 		.4byte	.LASF121
 2356 0985 75       		.sleb128 -11
 2357 0986 1E       		.uleb128 0x1e
 2358 0987 23030000 		.4byte	.LASF122
 2359 098b 76       		.sleb128 -10
 2360 098c 1E       		.uleb128 0x1e
 2361 098d 4D060000 		.4byte	.LASF123
 2362 0991 7B       		.sleb128 -5
 2363 0992 1E       		.uleb128 0x1e
 2364 0993 1A0A0000 		.4byte	.LASF124
 2365 0997 7C       		.sleb128 -4
 2366 0998 1E       		.uleb128 0x1e
 2367 0999 C90B0000 		.4byte	.LASF125
 2368 099d 7E       		.sleb128 -2
 2369 099e 1E       		.uleb128 0x1e
 2370 099f 48020000 		.4byte	.LASF126
 2371 09a3 7F       		.sleb128 -1
 2372 09a4 1E       		.uleb128 0x1e
 2373 09a5 7A040000 		.4byte	.LASF127
 2374 09a9 00       		.sleb128 0
 2375 09aa 1E       		.uleb128 0x1e
 2376 09ab 01010000 		.4byte	.LASF128
 2377 09af 01       		.sleb128 1
 2378 09b0 1E       		.uleb128 0x1e
 2379 09b1 590C0000 		.4byte	.LASF129
 2380 09b5 02       		.sleb128 2
 2381 09b6 1E       		.uleb128 0x1e
 2382 09b7 BE040000 		.4byte	.LASF130
 2383 09bb 03       		.sleb128 3
 2384 09bc 1E       		.uleb128 0x1e
 2385 09bd B3050000 		.4byte	.LASF131
 2386 09c1 04       		.sleb128 4
 2387 09c2 1E       		.uleb128 0x1e
 2388 09c3 4E040000 		.4byte	.LASF132
 2389 09c7 05       		.sleb128 5
 2390 09c8 1E       		.uleb128 0x1e
 2391 09c9 57040000 		.4byte	.LASF133
 2392 09cd 06       		.sleb128 6
 2393 09ce 1E       		.uleb128 0x1e
 2394 09cf 45090000 		.4byte	.LASF134
 2395 09d3 08       		.sleb128 8
ARM GAS  /tmp/ccogXpQB.s 			page 75


 2396 09d4 1E       		.uleb128 0x1e
 2397 09d5 E4070000 		.4byte	.LASF135
 2398 09d9 09       		.sleb128 9
 2399 09da 1E       		.uleb128 0x1e
 2400 09db 73030000 		.4byte	.LASF136
 2401 09df 0A       		.sleb128 10
 2402 09e0 1E       		.uleb128 0x1e
 2403 09e1 E30A0000 		.4byte	.LASF137
 2404 09e5 0B       		.sleb128 11
 2405 09e6 1E       		.uleb128 0x1e
 2406 09e7 EF090000 		.4byte	.LASF138
 2407 09eb 0C       		.sleb128 12
 2408 09ec 1E       		.uleb128 0x1e
 2409 09ed 94040000 		.4byte	.LASF139
 2410 09f1 0D       		.sleb128 13
 2411 09f2 1E       		.uleb128 0x1e
 2412 09f3 8F090000 		.4byte	.LASF140
 2413 09f7 0E       		.sleb128 14
 2414 09f8 1E       		.uleb128 0x1e
 2415 09f9 B0080000 		.4byte	.LASF141
 2416 09fd 0F       		.sleb128 15
 2417 09fe 1E       		.uleb128 0x1e
 2418 09ff 9D080000 		.4byte	.LASF142
 2419 0a03 12       		.sleb128 18
 2420 0a04 1E       		.uleb128 0x1e
 2421 0a05 06070000 		.4byte	.LASF143
 2422 0a09 13       		.sleb128 19
 2423 0a0a 1E       		.uleb128 0x1e
 2424 0a0b 2B060000 		.4byte	.LASF144
 2425 0a0f 14       		.sleb128 20
 2426 0a10 1E       		.uleb128 0x1e
 2427 0a11 81090000 		.4byte	.LASF145
 2428 0a15 15       		.sleb128 21
 2429 0a16 1E       		.uleb128 0x1e
 2430 0a17 580B0000 		.4byte	.LASF146
 2431 0a1b 16       		.sleb128 22
 2432 0a1c 1E       		.uleb128 0x1e
 2433 0a1d D2090000 		.4byte	.LASF147
 2434 0a21 17       		.sleb128 23
 2435 0a22 1E       		.uleb128 0x1e
 2436 0a23 8B040000 		.4byte	.LASF148
 2437 0a27 18       		.sleb128 24
 2438 0a28 1E       		.uleb128 0x1e
 2439 0a29 18000000 		.4byte	.LASF149
 2440 0a2d 19       		.sleb128 25
 2441 0a2e 1E       		.uleb128 0x1e
 2442 0a2f ED0B0000 		.4byte	.LASF150
 2443 0a33 1A       		.sleb128 26
 2444 0a34 1E       		.uleb128 0x1e
 2445 0a35 F4060000 		.4byte	.LASF151
 2446 0a39 1B       		.sleb128 27
 2447 0a3a 1E       		.uleb128 0x1e
 2448 0a3b 1D020000 		.4byte	.LASF152
 2449 0a3f 1C       		.sleb128 28
 2450 0a40 1E       		.uleb128 0x1e
 2451 0a41 EC080000 		.4byte	.LASF153
 2452 0a45 1D       		.sleb128 29
ARM GAS  /tmp/ccogXpQB.s 			page 76


 2453 0a46 1E       		.uleb128 0x1e
 2454 0a47 D9040000 		.4byte	.LASF154
 2455 0a4b 1E       		.sleb128 30
 2456 0a4c 1E       		.uleb128 0x1e
 2457 0a4d F5030000 		.4byte	.LASF155
 2458 0a51 1F       		.sleb128 31
 2459 0a52 1E       		.uleb128 0x1e
 2460 0a53 7A010000 		.4byte	.LASF156
 2461 0a57 20       		.sleb128 32
 2462 0a58 1E       		.uleb128 0x1e
 2463 0a59 38040000 		.4byte	.LASF157
 2464 0a5d 21       		.sleb128 33
 2465 0a5e 1E       		.uleb128 0x1e
 2466 0a5f D0040000 		.4byte	.LASF158
 2467 0a63 22       		.sleb128 34
 2468 0a64 00       		.byte	0x0
 2469 0a65 04       		.uleb128 0x4
 2470 0a66 4F050000 		.4byte	.LASF159
 2471 0a6a 08       		.byte	0x8
 2472 0a6b 76       		.byte	0x76
 2473 0a6c 68090000 		.4byte	0x968
 2474 0a70 1F       		.uleb128 0x1f
 2475 0a71 040E     		.2byte	0xe04
 2476 0a73 01       		.byte	0x1
 2477 0a74 84       		.byte	0x84
 2478 0a75 3A0B0000 		.4byte	0xb3a
 2479 0a79 0B       		.uleb128 0xb
 2480 0a7a 040C0000 		.4byte	.LASF160
 2481 0a7e 01       		.byte	0x1
 2482 0a7f 86       		.byte	0x86
 2483 0a80 4A0B0000 		.4byte	0xb4a
 2484 0a84 02       		.byte	0x2
 2485 0a85 23       		.byte	0x23
 2486 0a86 00       		.uleb128 0x0
 2487 0a87 0B       		.uleb128 0xb
 2488 0a88 B5020000 		.4byte	.LASF161
 2489 0a8c 01       		.byte	0x1
 2490 0a8d 87       		.byte	0x87
 2491 0a8e 4F0B0000 		.4byte	0xb4f
 2492 0a92 02       		.byte	0x2
 2493 0a93 23       		.byte	0x23
 2494 0a94 20       		.uleb128 0x20
 2495 0a95 0B       		.uleb128 0xb
 2496 0a96 14090000 		.4byte	.LASF162
 2497 0a9a 01       		.byte	0x1
 2498 0a9b 88       		.byte	0x88
 2499 0a9c 5F0B0000 		.4byte	0xb5f
 2500 0aa0 03       		.byte	0x3
 2501 0aa1 23       		.byte	0x23
 2502 0aa2 8001     		.uleb128 0x80
 2503 0aa4 0B       		.uleb128 0xb
 2504 0aa5 00000000 		.4byte	.LASF163
 2505 0aa9 01       		.byte	0x1
 2506 0aaa 89       		.byte	0x89
 2507 0aab 4F0B0000 		.4byte	0xb4f
 2508 0aaf 03       		.byte	0x3
 2509 0ab0 23       		.byte	0x23
ARM GAS  /tmp/ccogXpQB.s 			page 77


 2510 0ab1 A001     		.uleb128 0xa0
 2511 0ab3 0B       		.uleb128 0xb
 2512 0ab4 07040000 		.4byte	.LASF164
 2513 0ab8 01       		.byte	0x1
 2514 0ab9 8A       		.byte	0x8a
 2515 0aba 640B0000 		.4byte	0xb64
 2516 0abe 03       		.byte	0x3
 2517 0abf 23       		.byte	0x23
 2518 0ac0 8002     		.uleb128 0x100
 2519 0ac2 0B       		.uleb128 0xb
 2520 0ac3 19030000 		.4byte	.LASF165
 2521 0ac7 01       		.byte	0x1
 2522 0ac8 8B       		.byte	0x8b
 2523 0ac9 4F0B0000 		.4byte	0xb4f
 2524 0acd 03       		.byte	0x3
 2525 0ace 23       		.byte	0x23
 2526 0acf A002     		.uleb128 0x120
 2527 0ad1 0B       		.uleb128 0xb
 2528 0ad2 14010000 		.4byte	.LASF166
 2529 0ad6 01       		.byte	0x1
 2530 0ad7 8C       		.byte	0x8c
 2531 0ad8 690B0000 		.4byte	0xb69
 2532 0adc 03       		.byte	0x3
 2533 0add 23       		.byte	0x23
 2534 0ade 8003     		.uleb128 0x180
 2535 0ae0 0B       		.uleb128 0xb
 2536 0ae1 CD020000 		.4byte	.LASF167
 2537 0ae5 01       		.byte	0x1
 2538 0ae6 8D       		.byte	0x8d
 2539 0ae7 4F0B0000 		.4byte	0xb4f
 2540 0aeb 03       		.byte	0x3
 2541 0aec 23       		.byte	0x23
 2542 0aed A003     		.uleb128 0x1a0
 2543 0aef 0B       		.uleb128 0xb
 2544 0af0 FD020000 		.4byte	.LASF168
 2545 0af4 01       		.byte	0x1
 2546 0af5 8E       		.byte	0x8e
 2547 0af6 6E0B0000 		.4byte	0xb6e
 2548 0afa 03       		.byte	0x3
 2549 0afb 23       		.byte	0x23
 2550 0afc 8004     		.uleb128 0x200
 2551 0afe 0B       		.uleb128 0xb
 2552 0aff D7020000 		.4byte	.LASF169
 2553 0b03 01       		.byte	0x1
 2554 0b04 8F       		.byte	0x8f
 2555 0b05 730B0000 		.4byte	0xb73
 2556 0b09 03       		.byte	0x3
 2557 0b0a 23       		.byte	0x23
 2558 0b0b A004     		.uleb128 0x220
 2559 0b0d 0E       		.uleb128 0xe
 2560 0b0e 495000   		.ascii	"IP\000"
 2561 0b11 01       		.byte	0x1
 2562 0b12 90       		.byte	0x90
 2563 0b13 930B0000 		.4byte	0xb93
 2564 0b17 03       		.byte	0x3
 2565 0b18 23       		.byte	0x23
 2566 0b19 8006     		.uleb128 0x300
ARM GAS  /tmp/ccogXpQB.s 			page 78


 2567 0b1b 0B       		.uleb128 0xb
 2568 0b1c E1020000 		.4byte	.LASF170
 2569 0b20 01       		.byte	0x1
 2570 0b21 91       		.byte	0x91
 2571 0b22 980B0000 		.4byte	0xb98
 2572 0b26 03       		.byte	0x3
 2573 0b27 23       		.byte	0x23
 2574 0b28 F007     		.uleb128 0x3f0
 2575 0b2a 0B       		.uleb128 0xb
 2576 0b2b 2A040000 		.4byte	.LASF171
 2577 0b2f 01       		.byte	0x1
 2578 0b30 92       		.byte	0x92
 2579 0b31 63090000 		.4byte	0x963
 2580 0b35 03       		.byte	0x3
 2581 0b36 23       		.byte	0x23
 2582 0b37 801C     		.uleb128 0xe00
 2583 0b39 00       		.byte	0x0
 2584 0b3a 08       		.uleb128 0x8
 2585 0b3b 4E090000 		.4byte	0x94e
 2586 0b3f 4A0B0000 		.4byte	0xb4a
 2587 0b43 09       		.uleb128 0x9
 2588 0b44 4C000000 		.4byte	0x4c
 2589 0b48 07       		.byte	0x7
 2590 0b49 00       		.byte	0x0
 2591 0b4a 1C       		.uleb128 0x1c
 2592 0b4b 3A0B0000 		.4byte	0xb3a
 2593 0b4f 08       		.uleb128 0x8
 2594 0b50 4E090000 		.4byte	0x94e
 2595 0b54 5F0B0000 		.4byte	0xb5f
 2596 0b58 09       		.uleb128 0x9
 2597 0b59 4C000000 		.4byte	0x4c
 2598 0b5d 17       		.byte	0x17
 2599 0b5e 00       		.byte	0x0
 2600 0b5f 1C       		.uleb128 0x1c
 2601 0b60 3A0B0000 		.4byte	0xb3a
 2602 0b64 1C       		.uleb128 0x1c
 2603 0b65 3A0B0000 		.4byte	0xb3a
 2604 0b69 1C       		.uleb128 0x1c
 2605 0b6a 3A0B0000 		.4byte	0xb3a
 2606 0b6e 1C       		.uleb128 0x1c
 2607 0b6f 3A0B0000 		.4byte	0xb3a
 2608 0b73 08       		.uleb128 0x8
 2609 0b74 4E090000 		.4byte	0x94e
 2610 0b78 830B0000 		.4byte	0xb83
 2611 0b7c 09       		.uleb128 0x9
 2612 0b7d 4C000000 		.4byte	0x4c
 2613 0b81 37       		.byte	0x37
 2614 0b82 00       		.byte	0x0
 2615 0b83 08       		.uleb128 0x8
 2616 0b84 2D090000 		.4byte	0x92d
 2617 0b88 930B0000 		.4byte	0xb93
 2618 0b8c 09       		.uleb128 0x9
 2619 0b8d 4C000000 		.4byte	0x4c
 2620 0b91 EF       		.byte	0xef
 2621 0b92 00       		.byte	0x0
 2622 0b93 1C       		.uleb128 0x1c
 2623 0b94 830B0000 		.4byte	0xb83
ARM GAS  /tmp/ccogXpQB.s 			page 79


 2624 0b98 08       		.uleb128 0x8
 2625 0b99 4E090000 		.4byte	0x94e
 2626 0b9d A90B0000 		.4byte	0xba9
 2627 0ba1 20       		.uleb128 0x20
 2628 0ba2 4C000000 		.4byte	0x4c
 2629 0ba6 8302     		.2byte	0x283
 2630 0ba8 00       		.byte	0x0
 2631 0ba9 04       		.uleb128 0x4
 2632 0baa 3A000000 		.4byte	.LASF172
 2633 0bae 01       		.byte	0x1
 2634 0baf 93       		.byte	0x93
 2635 0bb0 700A0000 		.4byte	0xa70
 2636 0bb4 0A       		.uleb128 0xa
 2637 0bb5 74       		.byte	0x74
 2638 0bb6 01       		.byte	0x1
 2639 0bb7 9B       		.byte	0x9b
 2640 0bb8 C70C0000 		.4byte	0xcc7
 2641 0bbc 0B       		.uleb128 0xb
 2642 0bbd C9010000 		.4byte	.LASF173
 2643 0bc1 01       		.byte	0x1
 2644 0bc2 9D       		.byte	0x9d
 2645 0bc3 59090000 		.4byte	0x959
 2646 0bc7 02       		.byte	0x2
 2647 0bc8 23       		.byte	0x23
 2648 0bc9 00       		.uleb128 0x0
 2649 0bca 0B       		.uleb128 0xb
 2650 0bcb 67020000 		.4byte	.LASF174
 2651 0bcf 01       		.byte	0x1
 2652 0bd0 9E       		.byte	0x9e
 2653 0bd1 63090000 		.4byte	0x963
 2654 0bd5 02       		.byte	0x2
 2655 0bd6 23       		.byte	0x23
 2656 0bd7 04       		.uleb128 0x4
 2657 0bd8 0B       		.uleb128 0xb
 2658 0bd9 B8000000 		.4byte	.LASF175
 2659 0bdd 01       		.byte	0x1
 2660 0bde 9F       		.byte	0x9f
 2661 0bdf 63090000 		.4byte	0x963
 2662 0be3 02       		.byte	0x2
 2663 0be4 23       		.byte	0x23
 2664 0be5 08       		.uleb128 0x8
 2665 0be6 0B       		.uleb128 0xb
 2666 0be7 74010000 		.4byte	.LASF176
 2667 0beb 01       		.byte	0x1
 2668 0bec A0       		.byte	0xa0
 2669 0bed 63090000 		.4byte	0x963
 2670 0bf1 02       		.byte	0x2
 2671 0bf2 23       		.byte	0x23
 2672 0bf3 0C       		.uleb128 0xc
 2673 0bf4 0E       		.uleb128 0xe
 2674 0bf5 53435200 		.ascii	"SCR\000"
 2675 0bf9 01       		.byte	0x1
 2676 0bfa A1       		.byte	0xa1
 2677 0bfb 63090000 		.4byte	0x963
 2678 0bff 02       		.byte	0x2
 2679 0c00 23       		.byte	0x23
 2680 0c01 10       		.uleb128 0x10
ARM GAS  /tmp/ccogXpQB.s 			page 80


 2681 0c02 0E       		.uleb128 0xe
 2682 0c03 43435200 		.ascii	"CCR\000"
 2683 0c07 01       		.byte	0x1
 2684 0c08 A2       		.byte	0xa2
 2685 0c09 63090000 		.4byte	0x963
 2686 0c0d 02       		.byte	0x2
 2687 0c0e 23       		.byte	0x23
 2688 0c0f 14       		.uleb128 0x14
 2689 0c10 0E       		.uleb128 0xe
 2690 0c11 53485000 		.ascii	"SHP\000"
 2691 0c15 01       		.byte	0x1
 2692 0c16 A3       		.byte	0xa3
 2693 0c17 D70C0000 		.4byte	0xcd7
 2694 0c1b 02       		.byte	0x2
 2695 0c1c 23       		.byte	0x23
 2696 0c1d 18       		.uleb128 0x18
 2697 0c1e 0B       		.uleb128 0xb
 2698 0c1f 1C040000 		.4byte	.LASF177
 2699 0c23 01       		.byte	0x1
 2700 0c24 A4       		.byte	0xa4
 2701 0c25 63090000 		.4byte	0x963
 2702 0c29 02       		.byte	0x2
 2703 0c2a 23       		.byte	0x23
 2704 0c2b 24       		.uleb128 0x24
 2705 0c2c 0B       		.uleb128 0xb
 2706 0c2d AF090000 		.4byte	.LASF178
 2707 0c31 01       		.byte	0x1
 2708 0c32 A5       		.byte	0xa5
 2709 0c33 63090000 		.4byte	0x963
 2710 0c37 02       		.byte	0x2
 2711 0c38 23       		.byte	0x23
 2712 0c39 28       		.uleb128 0x28
 2713 0c3a 0B       		.uleb128 0xb
 2714 0c3b C9030000 		.4byte	.LASF179
 2715 0c3f 01       		.byte	0x1
 2716 0c40 A6       		.byte	0xa6
 2717 0c41 63090000 		.4byte	0x963
 2718 0c45 02       		.byte	0x2
 2719 0c46 23       		.byte	0x23
 2720 0c47 2C       		.uleb128 0x2c
 2721 0c48 0B       		.uleb128 0xb
 2722 0c49 6E030000 		.4byte	.LASF180
 2723 0c4d 01       		.byte	0x1
 2724 0c4e A7       		.byte	0xa7
 2725 0c4f 63090000 		.4byte	0x963
 2726 0c53 02       		.byte	0x2
 2727 0c54 23       		.byte	0x23
 2728 0c55 30       		.uleb128 0x30
 2729 0c56 0B       		.uleb128 0xb
 2730 0c57 8A0A0000 		.4byte	.LASF181
 2731 0c5b 01       		.byte	0x1
 2732 0c5c A8       		.byte	0xa8
 2733 0c5d 63090000 		.4byte	0x963
 2734 0c61 02       		.byte	0x2
 2735 0c62 23       		.byte	0x23
 2736 0c63 34       		.uleb128 0x34
 2737 0c64 0B       		.uleb128 0xb
ARM GAS  /tmp/ccogXpQB.s 			page 81


 2738 0c65 0F080000 		.4byte	.LASF182
 2739 0c69 01       		.byte	0x1
 2740 0c6a A9       		.byte	0xa9
 2741 0c6b 63090000 		.4byte	0x963
 2742 0c6f 02       		.byte	0x2
 2743 0c70 23       		.byte	0x23
 2744 0c71 38       		.uleb128 0x38
 2745 0c72 0B       		.uleb128 0xb
 2746 0c73 5C090000 		.4byte	.LASF183
 2747 0c77 01       		.byte	0x1
 2748 0c78 AA       		.byte	0xaa
 2749 0c79 63090000 		.4byte	0x963
 2750 0c7d 02       		.byte	0x2
 2751 0c7e 23       		.byte	0x23
 2752 0c7f 3C       		.uleb128 0x3c
 2753 0c80 0E       		.uleb128 0xe
 2754 0c81 50465200 		.ascii	"PFR\000"
 2755 0c85 01       		.byte	0x1
 2756 0c86 AB       		.byte	0xab
 2757 0c87 EC0C0000 		.4byte	0xcec
 2758 0c8b 02       		.byte	0x2
 2759 0c8c 23       		.byte	0x23
 2760 0c8d 40       		.uleb128 0x40
 2761 0c8e 0E       		.uleb128 0xe
 2762 0c8f 44465200 		.ascii	"DFR\000"
 2763 0c93 01       		.byte	0x1
 2764 0c94 AC       		.byte	0xac
 2765 0c95 59090000 		.4byte	0x959
 2766 0c99 02       		.byte	0x2
 2767 0c9a 23       		.byte	0x23
 2768 0c9b 48       		.uleb128 0x48
 2769 0c9c 0E       		.uleb128 0xe
 2770 0c9d 41445200 		.ascii	"ADR\000"
 2771 0ca1 01       		.byte	0x1
 2772 0ca2 AD       		.byte	0xad
 2773 0ca3 59090000 		.4byte	0x959
 2774 0ca7 02       		.byte	0x2
 2775 0ca8 23       		.byte	0x23
 2776 0ca9 4C       		.uleb128 0x4c
 2777 0caa 0B       		.uleb128 0xb
 2778 0cab 7E0A0000 		.4byte	.LASF184
 2779 0caf 01       		.byte	0x1
 2780 0cb0 AE       		.byte	0xae
 2781 0cb1 060D0000 		.4byte	0xd06
 2782 0cb5 02       		.byte	0x2
 2783 0cb6 23       		.byte	0x23
 2784 0cb7 50       		.uleb128 0x50
 2785 0cb8 0B       		.uleb128 0xb
 2786 0cb9 CC0A0000 		.4byte	.LASF185
 2787 0cbd 01       		.byte	0x1
 2788 0cbe AF       		.byte	0xaf
 2789 0cbf 200D0000 		.4byte	0xd20
 2790 0cc3 02       		.byte	0x2
 2791 0cc4 23       		.byte	0x23
 2792 0cc5 60       		.uleb128 0x60
 2793 0cc6 00       		.byte	0x0
 2794 0cc7 08       		.uleb128 0x8
ARM GAS  /tmp/ccogXpQB.s 			page 82


 2795 0cc8 2D090000 		.4byte	0x92d
 2796 0ccc D70C0000 		.4byte	0xcd7
 2797 0cd0 09       		.uleb128 0x9
 2798 0cd1 4C000000 		.4byte	0x4c
 2799 0cd5 0B       		.byte	0xb
 2800 0cd6 00       		.byte	0x0
 2801 0cd7 1C       		.uleb128 0x1c
 2802 0cd8 C70C0000 		.4byte	0xcc7
 2803 0cdc 08       		.uleb128 0x8
 2804 0cdd 4E090000 		.4byte	0x94e
 2805 0ce1 EC0C0000 		.4byte	0xcec
 2806 0ce5 09       		.uleb128 0x9
 2807 0ce6 4C000000 		.4byte	0x4c
 2808 0cea 01       		.byte	0x1
 2809 0ceb 00       		.byte	0x0
 2810 0cec 16       		.uleb128 0x16
 2811 0ced F10C0000 		.4byte	0xcf1
 2812 0cf1 1C       		.uleb128 0x1c
 2813 0cf2 DC0C0000 		.4byte	0xcdc
 2814 0cf6 08       		.uleb128 0x8
 2815 0cf7 4E090000 		.4byte	0x94e
 2816 0cfb 060D0000 		.4byte	0xd06
 2817 0cff 09       		.uleb128 0x9
 2818 0d00 4C000000 		.4byte	0x4c
 2819 0d04 03       		.byte	0x3
 2820 0d05 00       		.byte	0x0
 2821 0d06 16       		.uleb128 0x16
 2822 0d07 0B0D0000 		.4byte	0xd0b
 2823 0d0b 1C       		.uleb128 0x1c
 2824 0d0c F60C0000 		.4byte	0xcf6
 2825 0d10 08       		.uleb128 0x8
 2826 0d11 4E090000 		.4byte	0x94e
 2827 0d15 200D0000 		.4byte	0xd20
 2828 0d19 09       		.uleb128 0x9
 2829 0d1a 4C000000 		.4byte	0x4c
 2830 0d1e 04       		.byte	0x4
 2831 0d1f 00       		.byte	0x0
 2832 0d20 16       		.uleb128 0x16
 2833 0d21 250D0000 		.4byte	0xd25
 2834 0d25 1C       		.uleb128 0x1c
 2835 0d26 100D0000 		.4byte	0xd10
 2836 0d2a 04       		.uleb128 0x4
 2837 0d2b 57030000 		.4byte	.LASF186
 2838 0d2f 01       		.byte	0x1
 2839 0d30 B0       		.byte	0xb0
 2840 0d31 B40B0000 		.4byte	0xbb4
 2841 0d35 1C       		.uleb128 0x1c
 2842 0d36 01010000 		.4byte	0x101
 2843 0d3a 16       		.uleb128 0x16
 2844 0d3b 350D0000 		.4byte	0xd35
 2845 0d3f 08       		.uleb128 0x8
 2846 0d40 01010000 		.4byte	0x101
 2847 0d44 4F0D0000 		.4byte	0xd4f
 2848 0d48 09       		.uleb128 0x9
 2849 0d49 4C000000 		.4byte	0x4c
 2850 0d4d 12       		.byte	0x12
 2851 0d4e 00       		.byte	0x0
ARM GAS  /tmp/ccogXpQB.s 			page 83


 2852 0d4f 1F       		.uleb128 0x1f
 2853 0d50 2801     		.2byte	0x128
 2854 0d52 08       		.byte	0x8
 2855 0d53 EF       		.byte	0xef
 2856 0d54 750F0000 		.4byte	0xf75
 2857 0d58 0B       		.uleb128 0xb
 2858 0d59 FF0A0000 		.4byte	.LASF187
 2859 0d5d 08       		.byte	0x8
 2860 0d5e F0       		.byte	0xf0
 2861 0d5f 350D0000 		.4byte	0xd35
 2862 0d63 02       		.byte	0x2
 2863 0d64 23       		.byte	0x23
 2864 0d65 00       		.uleb128 0x0
 2865 0d66 0B       		.uleb128 0xb
 2866 0d67 A3050000 		.4byte	.LASF188
 2867 0d6b 08       		.byte	0x8
 2868 0d6c F1       		.byte	0xf1
 2869 0d6d 350D0000 		.4byte	0xd35
 2870 0d71 02       		.byte	0x2
 2871 0d72 23       		.byte	0x23
 2872 0d73 04       		.uleb128 0x4
 2873 0d74 0B       		.uleb128 0xb
 2874 0d75 61090000 		.4byte	.LASF189
 2875 0d79 08       		.byte	0x8
 2876 0d7a F2       		.byte	0xf2
 2877 0d7b 350D0000 		.4byte	0xd35
 2878 0d7f 02       		.byte	0x2
 2879 0d80 23       		.byte	0x23
 2880 0d81 08       		.uleb128 0x8
 2881 0d82 0B       		.uleb128 0xb
 2882 0d83 6B090000 		.4byte	.LASF190
 2883 0d87 08       		.byte	0x8
 2884 0d88 F3       		.byte	0xf3
 2885 0d89 350D0000 		.4byte	0xd35
 2886 0d8d 02       		.byte	0x2
 2887 0d8e 23       		.byte	0x23
 2888 0d8f 0C       		.uleb128 0xc
 2889 0d90 0B       		.uleb128 0xb
 2890 0d91 FB0B0000 		.4byte	.LASF191
 2891 0d95 08       		.byte	0x8
 2892 0d96 F4       		.byte	0xf4
 2893 0d97 350D0000 		.4byte	0xd35
 2894 0d9b 02       		.byte	0x2
 2895 0d9c 23       		.byte	0x23
 2896 0d9d 10       		.uleb128 0x10
 2897 0d9e 0B       		.uleb128 0xb
 2898 0d9f 820B0000 		.4byte	.LASF192
 2899 0da3 08       		.byte	0x8
 2900 0da4 F5       		.byte	0xf5
 2901 0da5 350D0000 		.4byte	0xd35
 2902 0da9 02       		.byte	0x2
 2903 0daa 23       		.byte	0x23
 2904 0dab 14       		.uleb128 0x14
 2905 0dac 0B       		.uleb128 0xb
 2906 0dad F7040000 		.4byte	.LASF193
 2907 0db1 08       		.byte	0x8
 2908 0db2 F6       		.byte	0xf6
ARM GAS  /tmp/ccogXpQB.s 			page 84


 2909 0db3 3A0D0000 		.4byte	0xd3a
 2910 0db7 02       		.byte	0x2
 2911 0db8 23       		.byte	0x23
 2912 0db9 18       		.uleb128 0x18
 2913 0dba 0B       		.uleb128 0xb
 2914 0dbb 9B090000 		.4byte	.LASF194
 2915 0dbf 08       		.byte	0x8
 2916 0dc0 F7       		.byte	0xf7
 2917 0dc1 850F0000 		.4byte	0xf85
 2918 0dc5 02       		.byte	0x2
 2919 0dc6 23       		.byte	0x23
 2920 0dc7 1C       		.uleb128 0x1c
 2921 0dc8 0B       		.uleb128 0xb
 2922 0dc9 AA050000 		.4byte	.LASF195
 2923 0dcd 08       		.byte	0x8
 2924 0dce F8       		.byte	0xf8
 2925 0dcf 3A0D0000 		.4byte	0xd3a
 2926 0dd3 02       		.byte	0x2
 2927 0dd4 23       		.byte	0x23
 2928 0dd5 20       		.uleb128 0x20
 2929 0dd6 0B       		.uleb128 0xb
 2930 0dd7 3A070000 		.4byte	.LASF196
 2931 0ddb 08       		.byte	0x8
 2932 0ddc F9       		.byte	0xf9
 2933 0ddd 350D0000 		.4byte	0xd35
 2934 0de1 02       		.byte	0x2
 2935 0de2 23       		.byte	0x23
 2936 0de3 24       		.uleb128 0x24
 2937 0de4 0B       		.uleb128 0xb
 2938 0de5 DF060000 		.4byte	.LASF197
 2939 0de9 08       		.byte	0x8
 2940 0dea FA       		.byte	0xfa
 2941 0deb 350D0000 		.4byte	0xd35
 2942 0def 02       		.byte	0x2
 2943 0df0 23       		.byte	0x23
 2944 0df1 28       		.uleb128 0x28
 2945 0df2 0B       		.uleb128 0xb
 2946 0df3 F70A0000 		.4byte	.LASF198
 2947 0df7 08       		.byte	0x8
 2948 0df8 FB       		.byte	0xfb
 2949 0df9 3A0D0000 		.4byte	0xd3a
 2950 0dfd 02       		.byte	0x2
 2951 0dfe 23       		.byte	0x23
 2952 0dff 2C       		.uleb128 0x2c
 2953 0e00 0B       		.uleb128 0xb
 2954 0e01 72000000 		.4byte	.LASF199
 2955 0e05 08       		.byte	0x8
 2956 0e06 FC       		.byte	0xfc
 2957 0e07 3A0D0000 		.4byte	0xd3a
 2958 0e0b 02       		.byte	0x2
 2959 0e0c 23       		.byte	0x23
 2960 0e0d 30       		.uleb128 0x30
 2961 0e0e 0B       		.uleb128 0xb
 2962 0e0f A5090000 		.4byte	.LASF200
 2963 0e13 08       		.byte	0x8
 2964 0e14 FD       		.byte	0xfd
 2965 0e15 9A0F0000 		.4byte	0xf9a
ARM GAS  /tmp/ccogXpQB.s 			page 85


 2966 0e19 02       		.byte	0x2
 2967 0e1a 23       		.byte	0x23
 2968 0e1b 34       		.uleb128 0x34
 2969 0e1c 0B       		.uleb128 0xb
 2970 0e1d D10A0000 		.4byte	.LASF201
 2971 0e21 08       		.byte	0x8
 2972 0e22 FE       		.byte	0xfe
 2973 0e23 3A0D0000 		.4byte	0xd3a
 2974 0e27 02       		.byte	0x2
 2975 0e28 23       		.byte	0x23
 2976 0e29 3C       		.uleb128 0x3c
 2977 0e2a 0B       		.uleb128 0xb
 2978 0e2b 6A000000 		.4byte	.LASF202
 2979 0e2f 08       		.byte	0x8
 2980 0e30 FF       		.byte	0xff
 2981 0e31 350D0000 		.4byte	0xd35
 2982 0e35 02       		.byte	0x2
 2983 0e36 23       		.byte	0x23
 2984 0e37 40       		.uleb128 0x40
 2985 0e38 15       		.uleb128 0x15
 2986 0e39 110C0000 		.4byte	.LASF203
 2987 0e3d 08       		.byte	0x8
 2988 0e3e 0001     		.2byte	0x100
 2989 0e40 350D0000 		.4byte	0xd35
 2990 0e44 02       		.byte	0x2
 2991 0e45 23       		.byte	0x23
 2992 0e46 44       		.uleb128 0x44
 2993 0e47 15       		.uleb128 0x15
 2994 0e48 86050000 		.4byte	.LASF204
 2995 0e4c 08       		.byte	0x8
 2996 0e4d 0101     		.2byte	0x101
 2997 0e4f 350D0000 		.4byte	0xd35
 2998 0e53 02       		.byte	0x2
 2999 0e54 23       		.byte	0x23
 3000 0e55 48       		.uleb128 0x48
 3001 0e56 15       		.uleb128 0x15
 3002 0e57 95080000 		.4byte	.LASF205
 3003 0e5b 08       		.byte	0x8
 3004 0e5c 0201     		.2byte	0x102
 3005 0e5e 350D0000 		.4byte	0xd35
 3006 0e62 02       		.byte	0x2
 3007 0e63 23       		.byte	0x23
 3008 0e64 4C       		.uleb128 0x4c
 3009 0e65 15       		.uleb128 0x15
 3010 0e66 22040000 		.4byte	.LASF206
 3011 0e6a 08       		.byte	0x8
 3012 0e6b 0301     		.2byte	0x103
 3013 0e6d AF0F0000 		.4byte	0xfaf
 3014 0e71 02       		.byte	0x2
 3015 0e72 23       		.byte	0x23
 3016 0e73 50       		.uleb128 0x50
 3017 0e74 15       		.uleb128 0x15
 3018 0e75 DA000000 		.4byte	.LASF207
 3019 0e79 08       		.byte	0x8
 3020 0e7a 0401     		.2byte	0x104
 3021 0e7c B90F0000 		.4byte	0xfb9
 3022 0e80 03       		.byte	0x3
ARM GAS  /tmp/ccogXpQB.s 			page 86


 3023 0e81 23       		.byte	0x23
 3024 0e82 9001     		.uleb128 0x90
 3025 0e84 15       		.uleb128 0x15
 3026 0e85 720B0000 		.4byte	.LASF208
 3027 0e89 08       		.byte	0x8
 3028 0e8a 0501     		.2byte	0x105
 3029 0e8c 350D0000 		.4byte	0xd35
 3030 0e90 03       		.byte	0x3
 3031 0e91 23       		.byte	0x23
 3032 0e92 9401     		.uleb128 0x94
 3033 0e94 15       		.uleb128 0x15
 3034 0e95 B4090000 		.4byte	.LASF209
 3035 0e99 08       		.byte	0x8
 3036 0e9a 0601     		.2byte	0x106
 3037 0e9c BE0F0000 		.4byte	0xfbe
 3038 0ea0 03       		.byte	0x3
 3039 0ea1 23       		.byte	0x23
 3040 0ea2 9801     		.uleb128 0x98
 3041 0ea4 15       		.uleb128 0x15
 3042 0ea5 AE0B0000 		.4byte	.LASF210
 3043 0ea9 08       		.byte	0x8
 3044 0eaa 0701     		.2byte	0x107
 3045 0eac 350D0000 		.4byte	0xd35
 3046 0eb0 03       		.byte	0x3
 3047 0eb1 23       		.byte	0x23
 3048 0eb2 E401     		.uleb128 0xe4
 3049 0eb4 15       		.uleb128 0x15
 3050 0eb5 57010000 		.4byte	.LASF211
 3051 0eb9 08       		.byte	0x8
 3052 0eba 0801     		.2byte	0x108
 3053 0ebc 3A0D0000 		.4byte	0xd3a
 3054 0ec0 03       		.byte	0x3
 3055 0ec1 23       		.byte	0x23
 3056 0ec2 E801     		.uleb128 0xe8
 3057 0ec4 15       		.uleb128 0x15
 3058 0ec5 BE090000 		.4byte	.LASF212
 3059 0ec9 08       		.byte	0x8
 3060 0eca 0901     		.2byte	0x109
 3061 0ecc D30F0000 		.4byte	0xfd3
 3062 0ed0 03       		.byte	0x3
 3063 0ed1 23       		.byte	0x23
 3064 0ed2 EC01     		.uleb128 0xec
 3065 0ed4 15       		.uleb128 0x15
 3066 0ed5 F9000000 		.4byte	.LASF213
 3067 0ed9 08       		.byte	0x8
 3068 0eda 0A01     		.2byte	0x10a
 3069 0edc 350D0000 		.4byte	0xd35
 3070 0ee0 03       		.byte	0x3
 3071 0ee1 23       		.byte	0x23
 3072 0ee2 8002     		.uleb128 0x100
 3073 0ee4 15       		.uleb128 0x15
 3074 0ee5 14040000 		.4byte	.LASF214
 3075 0ee9 08       		.byte	0x8
 3076 0eea 0B01     		.2byte	0x10b
 3077 0eec 350D0000 		.4byte	0xd35
 3078 0ef0 03       		.byte	0x3
 3079 0ef1 23       		.byte	0x23
ARM GAS  /tmp/ccogXpQB.s 			page 87


 3080 0ef2 8402     		.uleb128 0x104
 3081 0ef4 15       		.uleb128 0x15
 3082 0ef5 F0010000 		.4byte	.LASF215
 3083 0ef9 08       		.byte	0x8
 3084 0efa 0C01     		.2byte	0x10c
 3085 0efc 350D0000 		.4byte	0xd35
 3086 0f00 03       		.byte	0x3
 3087 0f01 23       		.byte	0x23
 3088 0f02 8802     		.uleb128 0x108
 3089 0f04 15       		.uleb128 0x15
 3090 0f05 0C090000 		.4byte	.LASF216
 3091 0f09 08       		.byte	0x8
 3092 0f0a 0D01     		.2byte	0x10d
 3093 0f0c 350D0000 		.4byte	0xd35
 3094 0f10 03       		.byte	0x3
 3095 0f11 23       		.byte	0x23
 3096 0f12 8C02     		.uleb128 0x10c
 3097 0f14 15       		.uleb128 0x15
 3098 0f15 0B010000 		.4byte	.LASF217
 3099 0f19 08       		.byte	0x8
 3100 0f1a 0E01     		.2byte	0x10e
 3101 0f1c 350D0000 		.4byte	0xd35
 3102 0f20 03       		.byte	0x3
 3103 0f21 23       		.byte	0x23
 3104 0f22 9002     		.uleb128 0x110
 3105 0f24 15       		.uleb128 0x15
 3106 0f25 FE070000 		.4byte	.LASF218
 3107 0f29 08       		.byte	0x8
 3108 0f2a 0F01     		.2byte	0x10f
 3109 0f2c 350D0000 		.4byte	0xd35
 3110 0f30 03       		.byte	0x3
 3111 0f31 23       		.byte	0x23
 3112 0f32 9402     		.uleb128 0x114
 3113 0f34 15       		.uleb128 0x15
 3114 0f35 29010000 		.4byte	.LASF219
 3115 0f39 08       		.byte	0x8
 3116 0f3a 1001     		.2byte	0x110
 3117 0f3c 350D0000 		.4byte	0xd35
 3118 0f40 03       		.byte	0x3
 3119 0f41 23       		.byte	0x23
 3120 0f42 9802     		.uleb128 0x118
 3121 0f44 15       		.uleb128 0x15
 3122 0f45 22080000 		.4byte	.LASF220
 3123 0f49 08       		.byte	0x8
 3124 0f4a 1101     		.2byte	0x111
 3125 0f4c 350D0000 		.4byte	0xd35
 3126 0f50 03       		.byte	0x3
 3127 0f51 23       		.byte	0x23
 3128 0f52 9C02     		.uleb128 0x11c
 3129 0f54 15       		.uleb128 0x15
 3130 0f55 190B0000 		.4byte	.LASF221
 3131 0f59 08       		.byte	0x8
 3132 0f5a 1201     		.2byte	0x112
 3133 0f5c 350D0000 		.4byte	0xd35
 3134 0f60 03       		.byte	0x3
 3135 0f61 23       		.byte	0x23
 3136 0f62 A002     		.uleb128 0x120
ARM GAS  /tmp/ccogXpQB.s 			page 88


 3137 0f64 15       		.uleb128 0x15
 3138 0f65 B5040000 		.4byte	.LASF222
 3139 0f69 08       		.byte	0x8
 3140 0f6a 1301     		.2byte	0x113
 3141 0f6c 3A0D0000 		.4byte	0xd3a
 3142 0f70 03       		.byte	0x3
 3143 0f71 23       		.byte	0x23
 3144 0f72 A402     		.uleb128 0x124
 3145 0f74 00       		.byte	0x0
 3146 0f75 08       		.uleb128 0x8
 3147 0f76 01010000 		.4byte	0x101
 3148 0f7a 850F0000 		.4byte	0xf85
 3149 0f7e 09       		.uleb128 0x9
 3150 0f7f 4C000000 		.4byte	0x4c
 3151 0f83 00       		.byte	0x0
 3152 0f84 00       		.byte	0x0
 3153 0f85 1C       		.uleb128 0x1c
 3154 0f86 750F0000 		.4byte	0xf75
 3155 0f8a 08       		.uleb128 0x8
 3156 0f8b 01010000 		.4byte	0x101
 3157 0f8f 9A0F0000 		.4byte	0xf9a
 3158 0f93 09       		.uleb128 0x9
 3159 0f94 4C000000 		.4byte	0x4c
 3160 0f98 01       		.byte	0x1
 3161 0f99 00       		.byte	0x0
 3162 0f9a 1C       		.uleb128 0x1c
 3163 0f9b 8A0F0000 		.4byte	0xf8a
 3164 0f9f 08       		.uleb128 0x8
 3165 0fa0 01010000 		.4byte	0x101
 3166 0fa4 AF0F0000 		.4byte	0xfaf
 3167 0fa8 09       		.uleb128 0x9
 3168 0fa9 4C000000 		.4byte	0x4c
 3169 0fad 0F       		.byte	0xf
 3170 0fae 00       		.byte	0x0
 3171 0faf 16       		.uleb128 0x16
 3172 0fb0 B40F0000 		.4byte	0xfb4
 3173 0fb4 1C       		.uleb128 0x1c
 3174 0fb5 9F0F0000 		.4byte	0xf9f
 3175 0fb9 1C       		.uleb128 0x1c
 3176 0fba 750F0000 		.4byte	0xf75
 3177 0fbe 1C       		.uleb128 0x1c
 3178 0fbf 3F0D0000 		.4byte	0xd3f
 3179 0fc3 08       		.uleb128 0x8
 3180 0fc4 01010000 		.4byte	0x101
 3181 0fc8 D30F0000 		.4byte	0xfd3
 3182 0fcc 09       		.uleb128 0x9
 3183 0fcd 4C000000 		.4byte	0x4c
 3184 0fd1 04       		.byte	0x4
 3185 0fd2 00       		.byte	0x0
 3186 0fd3 1C       		.uleb128 0x1c
 3187 0fd4 C30F0000 		.4byte	0xfc3
 3188 0fd8 21       		.uleb128 0x21
 3189 0fd9 41646300 		.ascii	"Adc\000"
 3190 0fdd 08       		.byte	0x8
 3191 0fde 1401     		.2byte	0x114
 3192 0fe0 4F0D0000 		.4byte	0xd4f
 3193 0fe4 08       		.uleb128 0x8
ARM GAS  /tmp/ccogXpQB.s 			page 89


 3194 0fe5 01010000 		.4byte	0x101
 3195 0fe9 F40F0000 		.4byte	0xff4
 3196 0fed 09       		.uleb128 0x9
 3197 0fee 4C000000 		.4byte	0x4c
 3198 0ff2 03       		.byte	0x3
 3199 0ff3 00       		.byte	0x0
 3200 0ff4 22       		.uleb128 0x22
 3201 0ff5 9001     		.2byte	0x190
 3202 0ff7 08       		.byte	0x8
 3203 0ff8 E006     		.2byte	0x6e0
 3204 0ffa A1140000 		.4byte	0x14a1
 3205 0ffe 15       		.uleb128 0x15
 3206 0fff C10B0000 		.4byte	.LASF223
 3207 1003 08       		.byte	0x8
 3208 1004 E106     		.2byte	0x6e1
 3209 1006 350D0000 		.4byte	0xd35
 3210 100a 02       		.byte	0x2
 3211 100b 23       		.byte	0x23
 3212 100c 00       		.uleb128 0x0
 3213 100d 15       		.uleb128 0x15
 3214 100e 0C040000 		.4byte	.LASF224
 3215 1012 08       		.byte	0x8
 3216 1013 E206     		.2byte	0x6e2
 3217 1015 350D0000 		.4byte	0xd35
 3218 1019 02       		.byte	0x2
 3219 101a 23       		.byte	0x23
 3220 101b 04       		.uleb128 0x4
 3221 101c 15       		.uleb128 0x15
 3222 101d 9E040000 		.4byte	.LASF225
 3223 1021 08       		.byte	0x8
 3224 1022 E306     		.2byte	0x6e3
 3225 1024 3A0D0000 		.4byte	0xd3a
 3226 1028 02       		.byte	0x2
 3227 1029 23       		.byte	0x23
 3228 102a 08       		.uleb128 0x8
 3229 102b 15       		.uleb128 0x15
 3230 102c 9B090000 		.4byte	.LASF194
 3231 1030 08       		.byte	0x8
 3232 1031 E406     		.2byte	0x6e4
 3233 1033 A1140000 		.4byte	0x14a1
 3234 1037 02       		.byte	0x2
 3235 1038 23       		.byte	0x23
 3236 1039 0C       		.uleb128 0xc
 3237 103a 15       		.uleb128 0x15
 3238 103b F5080000 		.4byte	.LASF226
 3239 103f 08       		.byte	0x8
 3240 1040 E506     		.2byte	0x6e5
 3241 1042 350D0000 		.4byte	0xd35
 3242 1046 02       		.byte	0x2
 3243 1047 23       		.byte	0x23
 3244 1048 10       		.uleb128 0x10
 3245 1049 15       		.uleb128 0x15
 3246 104a 70080000 		.4byte	.LASF227
 3247 104e 08       		.byte	0x8
 3248 104f E606     		.2byte	0x6e6
 3249 1051 350D0000 		.4byte	0xd35
 3250 1055 02       		.byte	0x2
ARM GAS  /tmp/ccogXpQB.s 			page 90


 3251 1056 23       		.byte	0x23
 3252 1057 14       		.uleb128 0x14
 3253 1058 15       		.uleb128 0x15
 3254 1059 40020000 		.4byte	.LASF228
 3255 105d 08       		.byte	0x8
 3256 105e E706     		.2byte	0x6e7
 3257 1060 3A0D0000 		.4byte	0xd3a
 3258 1064 02       		.byte	0x2
 3259 1065 23       		.byte	0x23
 3260 1066 18       		.uleb128 0x18
 3261 1067 15       		.uleb128 0x15
 3262 1068 A5090000 		.4byte	.LASF200
 3263 106c 08       		.byte	0x8
 3264 106d E806     		.2byte	0x6e8
 3265 106f A6140000 		.4byte	0x14a6
 3266 1073 02       		.byte	0x2
 3267 1074 23       		.byte	0x23
 3268 1075 1C       		.uleb128 0x1c
 3269 1076 15       		.uleb128 0x15
 3270 1077 84080000 		.4byte	.LASF229
 3271 107b 08       		.byte	0x8
 3272 107c E906     		.2byte	0x6e9
 3273 107e 350D0000 		.4byte	0xd35
 3274 1082 02       		.byte	0x2
 3275 1083 23       		.byte	0x23
 3276 1084 20       		.uleb128 0x20
 3277 1085 15       		.uleb128 0x15
 3278 1086 FD010000 		.4byte	.LASF230
 3279 108a 08       		.byte	0x8
 3280 108b EA06     		.2byte	0x6ea
 3281 108d 350D0000 		.4byte	0xd35
 3282 1091 02       		.byte	0x2
 3283 1092 23       		.byte	0x23
 3284 1093 24       		.uleb128 0x24
 3285 1094 15       		.uleb128 0x15
 3286 1095 E7010000 		.4byte	.LASF231
 3287 1099 08       		.byte	0x8
 3288 109a EB06     		.2byte	0x6eb
 3289 109c 3A0D0000 		.4byte	0xd3a
 3290 10a0 02       		.byte	0x2
 3291 10a1 23       		.byte	0x23
 3292 10a2 28       		.uleb128 0x28
 3293 10a3 15       		.uleb128 0x15
 3294 10a4 DA000000 		.4byte	.LASF207
 3295 10a8 08       		.byte	0x8
 3296 10a9 EC06     		.2byte	0x6ec
 3297 10ab AB140000 		.4byte	0x14ab
 3298 10af 02       		.byte	0x2
 3299 10b0 23       		.byte	0x23
 3300 10b1 2C       		.uleb128 0x2c
 3301 10b2 15       		.uleb128 0x15
 3302 10b3 CB060000 		.4byte	.LASF232
 3303 10b7 08       		.byte	0x8
 3304 10b8 ED06     		.2byte	0x6ed
 3305 10ba 350D0000 		.4byte	0xd35
 3306 10be 02       		.byte	0x2
 3307 10bf 23       		.byte	0x23
ARM GAS  /tmp/ccogXpQB.s 			page 91


 3308 10c0 30       		.uleb128 0x30
 3309 10c1 15       		.uleb128 0x15
 3310 10c2 9A050000 		.4byte	.LASF233
 3311 10c6 08       		.byte	0x8
 3312 10c7 EE06     		.2byte	0x6ee
 3313 10c9 350D0000 		.4byte	0xd35
 3314 10cd 02       		.byte	0x2
 3315 10ce 23       		.byte	0x23
 3316 10cf 34       		.uleb128 0x34
 3317 10d0 15       		.uleb128 0x15
 3318 10d1 2C0A0000 		.4byte	.LASF234
 3319 10d5 08       		.byte	0x8
 3320 10d6 EF06     		.2byte	0x6ef
 3321 10d8 350D0000 		.4byte	0xd35
 3322 10dc 02       		.byte	0x2
 3323 10dd 23       		.byte	0x23
 3324 10de 38       		.uleb128 0x38
 3325 10df 15       		.uleb128 0x15
 3326 10e0 C0030000 		.4byte	.LASF235
 3327 10e4 08       		.byte	0x8
 3328 10e5 F006     		.2byte	0x6f0
 3329 10e7 3A0D0000 		.4byte	0xd3a
 3330 10eb 02       		.byte	0x2
 3331 10ec 23       		.byte	0x23
 3332 10ed 3C       		.uleb128 0x3c
 3333 10ee 15       		.uleb128 0x15
 3334 10ef 7B060000 		.4byte	.LASF236
 3335 10f3 08       		.byte	0x8
 3336 10f4 F106     		.2byte	0x6f1
 3337 10f6 350D0000 		.4byte	0xd35
 3338 10fa 02       		.byte	0x2
 3339 10fb 23       		.byte	0x23
 3340 10fc 40       		.uleb128 0x40
 3341 10fd 15       		.uleb128 0x15
 3342 10fe 03060000 		.4byte	.LASF237
 3343 1102 08       		.byte	0x8
 3344 1103 F206     		.2byte	0x6f2
 3345 1105 350D0000 		.4byte	0xd35
 3346 1109 02       		.byte	0x2
 3347 110a 23       		.byte	0x23
 3348 110b 44       		.uleb128 0x44
 3349 110c 15       		.uleb128 0x15
 3350 110d 120A0000 		.4byte	.LASF238
 3351 1111 08       		.byte	0x8
 3352 1112 F306     		.2byte	0x6f3
 3353 1114 3A0D0000 		.4byte	0xd3a
 3354 1118 02       		.byte	0x2
 3355 1119 23       		.byte	0x23
 3356 111a 48       		.uleb128 0x48
 3357 111b 15       		.uleb128 0x15
 3358 111c 320C0000 		.4byte	.LASF239
 3359 1120 08       		.byte	0x8
 3360 1121 F406     		.2byte	0x6f4
 3361 1123 3A0D0000 		.4byte	0xd3a
 3362 1127 02       		.byte	0x2
 3363 1128 23       		.byte	0x23
 3364 1129 4C       		.uleb128 0x4c
ARM GAS  /tmp/ccogXpQB.s 			page 92


 3365 112a 15       		.uleb128 0x15
 3366 112b FE030000 		.4byte	.LASF240
 3367 112f 08       		.byte	0x8
 3368 1130 F506     		.2byte	0x6f5
 3369 1132 350D0000 		.4byte	0xd35
 3370 1136 02       		.byte	0x2
 3371 1137 23       		.byte	0x23
 3372 1138 50       		.uleb128 0x50
 3373 1139 15       		.uleb128 0x15
 3374 113a A8030000 		.4byte	.LASF241
 3375 113e 08       		.byte	0x8
 3376 113f F606     		.2byte	0x6f6
 3377 1141 350D0000 		.4byte	0xd35
 3378 1145 02       		.byte	0x2
 3379 1146 23       		.byte	0x23
 3380 1147 54       		.uleb128 0x54
 3381 1148 15       		.uleb128 0x15
 3382 1149 030A0000 		.4byte	.LASF242
 3383 114d 08       		.byte	0x8
 3384 114e F706     		.2byte	0x6f7
 3385 1150 3A0D0000 		.4byte	0xd3a
 3386 1154 02       		.byte	0x2
 3387 1155 23       		.byte	0x23
 3388 1156 58       		.uleb128 0x58
 3389 1157 15       		.uleb128 0x15
 3390 1158 B4090000 		.4byte	.LASF209
 3391 115c 08       		.byte	0x8
 3392 115d F806     		.2byte	0x6f8
 3393 115f B0140000 		.4byte	0x14b0
 3394 1163 02       		.byte	0x2
 3395 1164 23       		.byte	0x23
 3396 1165 5C       		.uleb128 0x5c
 3397 1166 15       		.uleb128 0x15
 3398 1167 EB020000 		.4byte	.LASF243
 3399 116b 08       		.byte	0x8
 3400 116c F906     		.2byte	0x6f9
 3401 116e 350D0000 		.4byte	0xd35
 3402 1172 02       		.byte	0x2
 3403 1173 23       		.byte	0x23
 3404 1174 60       		.uleb128 0x60
 3405 1175 15       		.uleb128 0x15
 3406 1176 C7040000 		.4byte	.LASF244
 3407 117a 08       		.byte	0x8
 3408 117b FA06     		.2byte	0x6fa
 3409 117d 350D0000 		.4byte	0xd35
 3410 1181 02       		.byte	0x2
 3411 1182 23       		.byte	0x23
 3412 1183 64       		.uleb128 0x64
 3413 1184 15       		.uleb128 0x15
 3414 1185 D0080000 		.4byte	.LASF245
 3415 1189 08       		.byte	0x8
 3416 118a FB06     		.2byte	0x6fb
 3417 118c 3A0D0000 		.4byte	0xd3a
 3418 1190 02       		.byte	0x2
 3419 1191 23       		.byte	0x23
 3420 1192 68       		.uleb128 0x68
 3421 1193 15       		.uleb128 0x15
ARM GAS  /tmp/ccogXpQB.s 			page 93


 3422 1194 BE090000 		.4byte	.LASF212
 3423 1198 08       		.byte	0x8
 3424 1199 FC06     		.2byte	0x6fc
 3425 119b B5140000 		.4byte	0x14b5
 3426 119f 02       		.byte	0x2
 3427 11a0 23       		.byte	0x23
 3428 11a1 6C       		.uleb128 0x6c
 3429 11a2 15       		.uleb128 0x15
 3430 11a3 A1020000 		.4byte	.LASF246
 3431 11a7 08       		.byte	0x8
 3432 11a8 FD06     		.2byte	0x6fd
 3433 11aa BA140000 		.4byte	0x14ba
 3434 11ae 02       		.byte	0x2
 3435 11af 23       		.byte	0x23
 3436 11b0 70       		.uleb128 0x70
 3437 11b1 15       		.uleb128 0x15
 3438 11b2 C8090000 		.4byte	.LASF247
 3439 11b6 08       		.byte	0x8
 3440 11b7 FE06     		.2byte	0x6fe
 3441 11b9 BF140000 		.4byte	0x14bf
 3442 11bd 02       		.byte	0x2
 3443 11be 23       		.byte	0x23
 3444 11bf 78       		.uleb128 0x78
 3445 11c0 15       		.uleb128 0x15
 3446 11c1 C5080000 		.4byte	.LASF248
 3447 11c5 08       		.byte	0x8
 3448 11c6 FF06     		.2byte	0x6ff
 3449 11c8 350D0000 		.4byte	0xd35
 3450 11cc 03       		.byte	0x3
 3451 11cd 23       		.byte	0x23
 3452 11ce 8001     		.uleb128 0x80
 3453 11d0 15       		.uleb128 0x15
 3454 11d1 D4060000 		.4byte	.LASF249
 3455 11d5 08       		.byte	0x8
 3456 11d6 0007     		.2byte	0x700
 3457 11d8 350D0000 		.4byte	0xd35
 3458 11dc 03       		.byte	0x3
 3459 11dd 23       		.byte	0x23
 3460 11de 8401     		.uleb128 0x84
 3461 11e0 15       		.uleb128 0x15
 3462 11e1 3B010000 		.4byte	.LASF250
 3463 11e5 08       		.byte	0x8
 3464 11e6 0107     		.2byte	0x701
 3465 11e8 3A0D0000 		.4byte	0xd3a
 3466 11ec 03       		.byte	0x3
 3467 11ed 23       		.byte	0x23
 3468 11ee 8801     		.uleb128 0x88
 3469 11f0 15       		.uleb128 0x15
 3470 11f1 32010000 		.4byte	.LASF251
 3471 11f5 08       		.byte	0x8
 3472 11f6 0207     		.2byte	0x702
 3473 11f8 350D0000 		.4byte	0xd35
 3474 11fc 03       		.byte	0x3
 3475 11fd 23       		.byte	0x23
 3476 11fe 8C01     		.uleb128 0x8c
 3477 1200 15       		.uleb128 0x15
 3478 1201 85010000 		.4byte	.LASF252
ARM GAS  /tmp/ccogXpQB.s 			page 94


 3479 1205 08       		.byte	0x8
 3480 1206 0307     		.2byte	0x703
 3481 1208 350D0000 		.4byte	0xd35
 3482 120c 03       		.byte	0x3
 3483 120d 23       		.byte	0x23
 3484 120e 9001     		.uleb128 0x90
 3485 1210 15       		.uleb128 0x15
 3486 1211 0B020000 		.4byte	.LASF253
 3487 1215 08       		.byte	0x8
 3488 1216 0407     		.2byte	0x704
 3489 1218 350D0000 		.4byte	0xd35
 3490 121c 03       		.byte	0x3
 3491 121d 23       		.byte	0x23
 3492 121e 9401     		.uleb128 0x94
 3493 1220 15       		.uleb128 0x15
 3494 1221 B1070000 		.4byte	.LASF254
 3495 1225 08       		.byte	0x8
 3496 1226 0507     		.2byte	0x705
 3497 1228 3A0D0000 		.4byte	0xd3a
 3498 122c 03       		.byte	0x3
 3499 122d 23       		.byte	0x23
 3500 122e 9801     		.uleb128 0x98
 3501 1230 15       		.uleb128 0x15
 3502 1231 E4000000 		.4byte	.LASF255
 3503 1235 08       		.byte	0x8
 3504 1236 0607     		.2byte	0x706
 3505 1238 C4140000 		.4byte	0x14c4
 3506 123c 03       		.byte	0x3
 3507 123d 23       		.byte	0x23
 3508 123e 9C01     		.uleb128 0x9c
 3509 1240 15       		.uleb128 0x15
 3510 1241 CF010000 		.4byte	.LASF256
 3511 1245 08       		.byte	0x8
 3512 1246 0707     		.2byte	0x707
 3513 1248 350D0000 		.4byte	0xd35
 3514 124c 03       		.byte	0x3
 3515 124d 23       		.byte	0x23
 3516 124e A001     		.uleb128 0xa0
 3517 1250 15       		.uleb128 0x15
 3518 1251 500C0000 		.4byte	.LASF257
 3519 1255 08       		.byte	0x8
 3520 1256 0807     		.2byte	0x708
 3521 1258 350D0000 		.4byte	0xd35
 3522 125c 03       		.byte	0x3
 3523 125d 23       		.byte	0x23
 3524 125e A401     		.uleb128 0xa4
 3525 1260 15       		.uleb128 0x15
 3526 1261 A0070000 		.4byte	.LASF258
 3527 1265 08       		.byte	0x8
 3528 1266 0907     		.2byte	0x709
 3529 1268 3A0D0000 		.4byte	0xd3a
 3530 126c 03       		.byte	0x3
 3531 126d 23       		.byte	0x23
 3532 126e A801     		.uleb128 0xa8
 3533 1270 15       		.uleb128 0x15
 3534 1271 DB090000 		.4byte	.LASF259
 3535 1275 08       		.byte	0x8
ARM GAS  /tmp/ccogXpQB.s 			page 95


 3536 1276 0A07     		.2byte	0x70a
 3537 1278 C9140000 		.4byte	0x14c9
 3538 127c 03       		.byte	0x3
 3539 127d 23       		.byte	0x23
 3540 127e AC01     		.uleb128 0xac
 3541 1280 15       		.uleb128 0x15
 3542 1281 F9090000 		.4byte	.LASF260
 3543 1285 08       		.byte	0x8
 3544 1286 0B07     		.2byte	0x70b
 3545 1288 350D0000 		.4byte	0xd35
 3546 128c 03       		.byte	0x3
 3547 128d 23       		.byte	0x23
 3548 128e B001     		.uleb128 0xb0
 3549 1290 15       		.uleb128 0x15
 3550 1291 30090000 		.4byte	.LASF261
 3551 1295 08       		.byte	0x8
 3552 1296 0C07     		.2byte	0x70c
 3553 1298 350D0000 		.4byte	0xd35
 3554 129c 03       		.byte	0x3
 3555 129d 23       		.byte	0x23
 3556 129e B401     		.uleb128 0xb4
 3557 12a0 15       		.uleb128 0x15
 3558 12a1 60000000 		.4byte	.LASF262
 3559 12a5 08       		.byte	0x8
 3560 12a6 0D07     		.2byte	0x70d
 3561 12a8 3A0D0000 		.4byte	0xd3a
 3562 12ac 03       		.byte	0x3
 3563 12ad 23       		.byte	0x23
 3564 12ae B801     		.uleb128 0xb8
 3565 12b0 15       		.uleb128 0x15
 3566 12b1 E5090000 		.4byte	.LASF263
 3567 12b5 08       		.byte	0x8
 3568 12b6 0E07     		.2byte	0x70e
 3569 12b8 CE140000 		.4byte	0x14ce
 3570 12bc 03       		.byte	0x3
 3571 12bd 23       		.byte	0x23
 3572 12be BC01     		.uleb128 0xbc
 3573 12c0 15       		.uleb128 0x15
 3574 12c1 15020000 		.4byte	.LASF264
 3575 12c5 08       		.byte	0x8
 3576 12c6 0F07     		.2byte	0x70f
 3577 12c8 350D0000 		.4byte	0xd35
 3578 12cc 03       		.byte	0x3
 3579 12cd 23       		.byte	0x23
 3580 12ce C001     		.uleb128 0xc0
 3581 12d0 15       		.uleb128 0x15
 3582 12d1 42070000 		.4byte	.LASF265
 3583 12d5 08       		.byte	0x8
 3584 12d6 1007     		.2byte	0x710
 3585 12d8 350D0000 		.4byte	0xd35
 3586 12dc 03       		.byte	0x3
 3587 12dd 23       		.byte	0x23
 3588 12de C401     		.uleb128 0xc4
 3589 12e0 15       		.uleb128 0x15
 3590 12e1 2F040000 		.4byte	.LASF266
 3591 12e5 08       		.byte	0x8
 3592 12e6 1107     		.2byte	0x711
ARM GAS  /tmp/ccogXpQB.s 			page 96


 3593 12e8 3A0D0000 		.4byte	0xd3a
 3594 12ec 03       		.byte	0x3
 3595 12ed 23       		.byte	0x23
 3596 12ee C801     		.uleb128 0xc8
 3597 12f0 15       		.uleb128 0x15
 3598 12f1 7C030000 		.4byte	.LASF267
 3599 12f5 08       		.byte	0x8
 3600 12f6 1207     		.2byte	0x712
 3601 12f8 D3140000 		.4byte	0x14d3
 3602 12fc 03       		.byte	0x3
 3603 12fd 23       		.byte	0x23
 3604 12fe CC01     		.uleb128 0xcc
 3605 1300 15       		.uleb128 0x15
 3606 1301 EA030000 		.4byte	.LASF268
 3607 1305 08       		.byte	0x8
 3608 1306 1307     		.2byte	0x713
 3609 1308 350D0000 		.4byte	0xd35
 3610 130c 03       		.byte	0x3
 3611 130d 23       		.byte	0x23
 3612 130e D001     		.uleb128 0xd0
 3613 1310 15       		.uleb128 0x15
 3614 1311 8B0B0000 		.4byte	.LASF269
 3615 1315 08       		.byte	0x8
 3616 1316 1407     		.2byte	0x714
 3617 1318 350D0000 		.4byte	0xd35
 3618 131c 03       		.byte	0x3
 3619 131d 23       		.byte	0x23
 3620 131e D401     		.uleb128 0xd4
 3621 1320 15       		.uleb128 0x15
 3622 1321 CE030000 		.4byte	.LASF270
 3623 1325 08       		.byte	0x8
 3624 1326 1507     		.2byte	0x715
 3625 1328 3A0D0000 		.4byte	0xd3a
 3626 132c 03       		.byte	0x3
 3627 132d 23       		.byte	0x23
 3628 132e D801     		.uleb128 0xd8
 3629 1330 15       		.uleb128 0x15
 3630 1331 87030000 		.4byte	.LASF271
 3631 1335 08       		.byte	0x8
 3632 1336 1607     		.2byte	0x716
 3633 1338 D8140000 		.4byte	0x14d8
 3634 133c 03       		.byte	0x3
 3635 133d 23       		.byte	0x23
 3636 133e DC01     		.uleb128 0xdc
 3637 1340 15       		.uleb128 0x15
 3638 1341 DF030000 		.4byte	.LASF272
 3639 1345 08       		.byte	0x8
 3640 1346 1707     		.2byte	0x717
 3641 1348 3A0D0000 		.4byte	0xd3a
 3642 134c 03       		.byte	0x3
 3643 134d 23       		.byte	0x23
 3644 134e E001     		.uleb128 0xe0
 3645 1350 15       		.uleb128 0x15
 3646 1351 3A0C0000 		.4byte	.LASF273
 3647 1355 08       		.byte	0x8
 3648 1356 1807     		.2byte	0x718
 3649 1358 350D0000 		.4byte	0xd35
ARM GAS  /tmp/ccogXpQB.s 			page 97


 3650 135c 03       		.byte	0x3
 3651 135d 23       		.byte	0x23
 3652 135e E401     		.uleb128 0xe4
 3653 1360 15       		.uleb128 0x15
 3654 1361 10030000 		.4byte	.LASF274
 3655 1365 08       		.byte	0x8
 3656 1366 1907     		.2byte	0x719
 3657 1368 3A0D0000 		.4byte	0xd3a
 3658 136c 03       		.byte	0x3
 3659 136d 23       		.byte	0x23
 3660 136e E801     		.uleb128 0xe8
 3661 1370 15       		.uleb128 0x15
 3662 1371 92030000 		.4byte	.LASF275
 3663 1375 08       		.byte	0x8
 3664 1376 1A07     		.2byte	0x71a
 3665 1378 DD140000 		.4byte	0x14dd
 3666 137c 03       		.byte	0x3
 3667 137d 23       		.byte	0x23
 3668 137e EC01     		.uleb128 0xec
 3669 1380 15       		.uleb128 0x15
 3670 1381 9D0A0000 		.4byte	.LASF276
 3671 1385 08       		.byte	0x8
 3672 1386 1B07     		.2byte	0x71b
 3673 1388 350D0000 		.4byte	0xd35
 3674 138c 03       		.byte	0x3
 3675 138d 23       		.byte	0x23
 3676 138e 8002     		.uleb128 0x100
 3677 1390 15       		.uleb128 0x15
 3678 1391 9D030000 		.4byte	.LASF277
 3679 1395 08       		.byte	0x8
 3680 1396 1C07     		.2byte	0x71c
 3681 1398 E2140000 		.4byte	0x14e2
 3682 139c 03       		.byte	0x3
 3683 139d 23       		.byte	0x23
 3684 139e 8402     		.uleb128 0x104
 3685 13a0 15       		.uleb128 0x15
 3686 13a1 4F0B0000 		.4byte	.LASF278
 3687 13a5 08       		.byte	0x8
 3688 13a6 1D07     		.2byte	0x71d
 3689 13a8 350D0000 		.4byte	0xd35
 3690 13ac 03       		.byte	0x3
 3691 13ad 23       		.byte	0x23
 3692 13ae D002     		.uleb128 0x150
 3693 13b0 15       		.uleb128 0x15
 3694 13b1 96070000 		.4byte	.LASF279
 3695 13b5 08       		.byte	0x8
 3696 13b6 1E07     		.2byte	0x71e
 3697 13b8 350D0000 		.4byte	0xd35
 3698 13bc 03       		.byte	0x3
 3699 13bd 23       		.byte	0x23
 3700 13be D402     		.uleb128 0x154
 3701 13c0 15       		.uleb128 0x15
 3702 13c1 26070000 		.4byte	.LASF280
 3703 13c5 08       		.byte	0x8
 3704 13c6 1F07     		.2byte	0x71f
 3705 13c8 350D0000 		.4byte	0xd35
 3706 13cc 03       		.byte	0x3
ARM GAS  /tmp/ccogXpQB.s 			page 98


 3707 13cd 23       		.byte	0x23
 3708 13ce D802     		.uleb128 0x158
 3709 13d0 15       		.uleb128 0x15
 3710 13d1 71060000 		.4byte	.LASF281
 3711 13d5 08       		.byte	0x8
 3712 13d6 2007     		.2byte	0x720
 3713 13d8 3A0D0000 		.4byte	0xd3a
 3714 13dc 03       		.byte	0x3
 3715 13dd 23       		.byte	0x23
 3716 13de DC02     		.uleb128 0x15c
 3717 13e0 15       		.uleb128 0x15
 3718 13e1 C9000000 		.4byte	.LASF282
 3719 13e5 08       		.byte	0x8
 3720 13e6 2107     		.2byte	0x721
 3721 13e8 3A0D0000 		.4byte	0xd3a
 3722 13ec 03       		.byte	0x3
 3723 13ed 23       		.byte	0x23
 3724 13ee E002     		.uleb128 0x160
 3725 13f0 15       		.uleb128 0x15
 3726 13f1 A2060000 		.4byte	.LASF283
 3727 13f5 08       		.byte	0x8
 3728 13f6 2207     		.2byte	0x722
 3729 13f8 3A0D0000 		.4byte	0xd3a
 3730 13fc 03       		.byte	0x3
 3731 13fd 23       		.byte	0x23
 3732 13fe E402     		.uleb128 0x164
 3733 1400 15       		.uleb128 0x15
 3734 1401 68080000 		.4byte	.LASF284
 3735 1405 08       		.byte	0x8
 3736 1406 2307     		.2byte	0x723
 3737 1408 350D0000 		.4byte	0xd35
 3738 140c 03       		.byte	0x3
 3739 140d 23       		.byte	0x23
 3740 140e E802     		.uleb128 0x168
 3741 1410 15       		.uleb128 0x15
 3742 1411 4F030000 		.4byte	.LASF285
 3743 1415 08       		.byte	0x8
 3744 1416 2407     		.2byte	0x724
 3745 1418 350D0000 		.4byte	0xd35
 3746 141c 03       		.byte	0x3
 3747 141d 23       		.byte	0x23
 3748 141e EC02     		.uleb128 0x16c
 3749 1420 15       		.uleb128 0x15
 3750 1421 19010000 		.4byte	.LASF286
 3751 1425 08       		.byte	0x8
 3752 1426 2507     		.2byte	0x725
 3753 1428 350D0000 		.4byte	0xd35
 3754 142c 03       		.byte	0x3
 3755 142d 23       		.byte	0x23
 3756 142e F002     		.uleb128 0x170
 3757 1430 15       		.uleb128 0x15
 3758 1431 07080000 		.4byte	.LASF287
 3759 1435 08       		.byte	0x8
 3760 1436 2607     		.2byte	0x726
 3761 1438 350D0000 		.4byte	0xd35
 3762 143c 03       		.byte	0x3
 3763 143d 23       		.byte	0x23
ARM GAS  /tmp/ccogXpQB.s 			page 99


 3764 143e F402     		.uleb128 0x174
 3765 1440 15       		.uleb128 0x15
 3766 1441 AC020000 		.4byte	.LASF288
 3767 1445 08       		.byte	0x8
 3768 1446 2707     		.2byte	0x727
 3769 1448 350D0000 		.4byte	0xd35
 3770 144c 03       		.byte	0x3
 3771 144d 23       		.byte	0x23
 3772 144e F802     		.uleb128 0x178
 3773 1450 15       		.uleb128 0x15
 3774 1451 640A0000 		.4byte	.LASF289
 3775 1455 08       		.byte	0x8
 3776 1456 2807     		.2byte	0x728
 3777 1458 350D0000 		.4byte	0xd35
 3778 145c 03       		.byte	0x3
 3779 145d 23       		.byte	0x23
 3780 145e FC02     		.uleb128 0x17c
 3781 1460 15       		.uleb128 0x15
 3782 1461 F4020000 		.4byte	.LASF290
 3783 1465 08       		.byte	0x8
 3784 1466 2907     		.2byte	0x729
 3785 1468 350D0000 		.4byte	0xd35
 3786 146c 03       		.byte	0x3
 3787 146d 23       		.byte	0x23
 3788 146e 8003     		.uleb128 0x180
 3789 1470 15       		.uleb128 0x15
 3790 1471 750A0000 		.4byte	.LASF291
 3791 1475 08       		.byte	0x8
 3792 1476 2A07     		.2byte	0x72a
 3793 1478 350D0000 		.4byte	0xd35
 3794 147c 03       		.byte	0x3
 3795 147d 23       		.byte	0x23
 3796 147e 8403     		.uleb128 0x184
 3797 1480 15       		.uleb128 0x15
 3798 1481 620C0000 		.4byte	.LASF292
 3799 1485 08       		.byte	0x8
 3800 1486 2B07     		.2byte	0x72b
 3801 1488 350D0000 		.4byte	0xd35
 3802 148c 03       		.byte	0x3
 3803 148d 23       		.byte	0x23
 3804 148e 8803     		.uleb128 0x188
 3805 1490 15       		.uleb128 0x15
 3806 1491 68060000 		.4byte	.LASF293
 3807 1495 08       		.byte	0x8
 3808 1496 2C07     		.2byte	0x72c
 3809 1498 3A0D0000 		.4byte	0xd3a
 3810 149c 03       		.byte	0x3
 3811 149d 23       		.byte	0x23
 3812 149e 8C03     		.uleb128 0x18c
 3813 14a0 00       		.byte	0x0
 3814 14a1 1C       		.uleb128 0x1c
 3815 14a2 750F0000 		.4byte	0xf75
 3816 14a6 1C       		.uleb128 0x1c
 3817 14a7 750F0000 		.4byte	0xf75
 3818 14ab 1C       		.uleb128 0x1c
 3819 14ac 750F0000 		.4byte	0xf75
 3820 14b0 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccogXpQB.s 			page 100


 3821 14b1 750F0000 		.4byte	0xf75
 3822 14b5 1C       		.uleb128 0x1c
 3823 14b6 750F0000 		.4byte	0xf75
 3824 14ba 1C       		.uleb128 0x1c
 3825 14bb 8A0F0000 		.4byte	0xf8a
 3826 14bf 1C       		.uleb128 0x1c
 3827 14c0 8A0F0000 		.4byte	0xf8a
 3828 14c4 1C       		.uleb128 0x1c
 3829 14c5 750F0000 		.4byte	0xf75
 3830 14c9 1C       		.uleb128 0x1c
 3831 14ca 750F0000 		.4byte	0xf75
 3832 14ce 1C       		.uleb128 0x1c
 3833 14cf 750F0000 		.4byte	0xf75
 3834 14d3 1C       		.uleb128 0x1c
 3835 14d4 750F0000 		.4byte	0xf75
 3836 14d8 1C       		.uleb128 0x1c
 3837 14d9 750F0000 		.4byte	0xf75
 3838 14dd 1C       		.uleb128 0x1c
 3839 14de C30F0000 		.4byte	0xfc3
 3840 14e2 1C       		.uleb128 0x1c
 3841 14e3 3F0D0000 		.4byte	0xd3f
 3842 14e7 21       		.uleb128 0x21
 3843 14e8 50696F00 		.ascii	"Pio\000"
 3844 14ec 08       		.byte	0x8
 3845 14ed 2D07     		.2byte	0x72d
 3846 14ef F40F0000 		.4byte	0xff4
 3847 14f3 18       		.uleb128 0x18
 3848 14f4 40       		.byte	0x40
 3849 14f5 08       		.byte	0x8
 3850 14f6 4B15     		.2byte	0x154b
 3851 14f8 C0150000 		.4byte	0x15c0
 3852 14fc 15       		.uleb128 0x15
 3853 14fd 8F010000 		.4byte	.LASF294
 3854 1501 08       		.byte	0x8
 3855 1502 4C15     		.2byte	0x154c
 3856 1504 350D0000 		.4byte	0xd35
 3857 1508 02       		.byte	0x2
 3858 1509 23       		.byte	0x23
 3859 150a 00       		.uleb128 0x0
 3860 150b 15       		.uleb128 0x15
 3861 150c F3050000 		.4byte	.LASF295
 3862 1510 08       		.byte	0x8
 3863 1511 4D15     		.2byte	0x154d
 3864 1513 350D0000 		.4byte	0xd35
 3865 1517 02       		.byte	0x2
 3866 1518 23       		.byte	0x23
 3867 1519 04       		.uleb128 0x4
 3868 151a 15       		.uleb128 0x15
 3869 151b 7A0B0000 		.4byte	.LASF296
 3870 151f 08       		.byte	0x8
 3871 1520 4E15     		.2byte	0x154e
 3872 1522 350D0000 		.4byte	0xd35
 3873 1526 02       		.byte	0x2
 3874 1527 23       		.byte	0x23
 3875 1528 08       		.uleb128 0x8
 3876 1529 15       		.uleb128 0x15
 3877 152a 9B090000 		.4byte	.LASF194
ARM GAS  /tmp/ccogXpQB.s 			page 101


 3878 152e 08       		.byte	0x8
 3879 152f 4F15     		.2byte	0x154f
 3880 1531 C0150000 		.4byte	0x15c0
 3881 1535 02       		.byte	0x2
 3882 1536 23       		.byte	0x23
 3883 1537 0C       		.uleb128 0xc
 3884 1538 15       		.uleb128 0x15
 3885 1539 0C0A0000 		.4byte	.LASF297
 3886 153d 08       		.byte	0x8
 3887 153e 5015     		.2byte	0x1550
 3888 1540 350D0000 		.4byte	0xd35
 3889 1544 02       		.byte	0x2
 3890 1545 23       		.byte	0x23
 3891 1546 10       		.uleb128 0x10
 3892 1547 15       		.uleb128 0x15
 3893 1548 33030000 		.4byte	.LASF298
 3894 154c 08       		.byte	0x8
 3895 154d 5115     		.2byte	0x1551
 3896 154f 350D0000 		.4byte	0xd35
 3897 1553 02       		.byte	0x2
 3898 1554 23       		.byte	0x23
 3899 1555 14       		.uleb128 0x14
 3900 1556 15       		.uleb128 0x15
 3901 1557 39030000 		.4byte	.LASF299
 3902 155b 08       		.byte	0x8
 3903 155c 5215     		.2byte	0x1552
 3904 155e 350D0000 		.4byte	0xd35
 3905 1562 02       		.byte	0x2
 3906 1563 23       		.byte	0x23
 3907 1564 18       		.uleb128 0x18
 3908 1565 15       		.uleb128 0x15
 3909 1566 3F030000 		.4byte	.LASF300
 3910 156a 08       		.byte	0x8
 3911 156b 5315     		.2byte	0x1553
 3912 156d 350D0000 		.4byte	0xd35
 3913 1571 02       		.byte	0x2
 3914 1572 23       		.byte	0x23
 3915 1573 1C       		.uleb128 0x1c
 3916 1574 15       		.uleb128 0x15
 3917 1575 D9030000 		.4byte	.LASF301
 3918 1579 08       		.byte	0x8
 3919 157a 5415     		.2byte	0x1554
 3920 157c 350D0000 		.4byte	0xd35
 3921 1580 02       		.byte	0x2
 3922 1581 23       		.byte	0x23
 3923 1582 20       		.uleb128 0x20
 3924 1583 15       		.uleb128 0x15
 3925 1584 2D050000 		.4byte	.LASF302
 3926 1588 08       		.byte	0x8
 3927 1589 5515     		.2byte	0x1555
 3928 158b 350D0000 		.4byte	0xd35
 3929 158f 02       		.byte	0x2
 3930 1590 23       		.byte	0x23
 3931 1591 24       		.uleb128 0x24
 3932 1592 15       		.uleb128 0x15
 3933 1593 84040000 		.4byte	.LASF303
 3934 1597 08       		.byte	0x8
ARM GAS  /tmp/ccogXpQB.s 			page 102


 3935 1598 5615     		.2byte	0x1556
 3936 159a 350D0000 		.4byte	0xd35
 3937 159e 02       		.byte	0x2
 3938 159f 23       		.byte	0x23
 3939 15a0 28       		.uleb128 0x28
 3940 15a1 15       		.uleb128 0x15
 3941 15a2 2B080000 		.4byte	.LASF304
 3942 15a6 08       		.byte	0x8
 3943 15a7 5715     		.2byte	0x1557
 3944 15a9 350D0000 		.4byte	0xd35
 3945 15ad 02       		.byte	0x2
 3946 15ae 23       		.byte	0x23
 3947 15af 2C       		.uleb128 0x2c
 3948 15b0 15       		.uleb128 0x15
 3949 15b1 A5090000 		.4byte	.LASF200
 3950 15b5 08       		.byte	0x8
 3951 15b6 5815     		.2byte	0x1558
 3952 15b8 C5150000 		.4byte	0x15c5
 3953 15bc 02       		.byte	0x2
 3954 15bd 23       		.byte	0x23
 3955 15be 30       		.uleb128 0x30
 3956 15bf 00       		.byte	0x0
 3957 15c0 1C       		.uleb128 0x1c
 3958 15c1 750F0000 		.4byte	0xf75
 3959 15c5 1C       		.uleb128 0x1c
 3960 15c6 E40F0000 		.4byte	0xfe4
 3961 15ca 05       		.uleb128 0x5
 3962 15cb 97020000 		.4byte	.LASF305
 3963 15cf 08       		.byte	0x8
 3964 15d0 5915     		.2byte	0x1559
 3965 15d2 F3140000 		.4byte	0x14f3
 3966 15d6 18       		.uleb128 0x18
 3967 15d7 E8       		.byte	0xe8
 3968 15d8 08       		.byte	0x8
 3969 15d9 5B15     		.2byte	0x155b
 3970 15db 7F160000 		.4byte	0x167f
 3971 15df 15       		.uleb128 0x15
 3972 15e0 4C010000 		.4byte	.LASF306
 3973 15e4 08       		.byte	0x8
 3974 15e5 5C15     		.2byte	0x155c
 3975 15e7 7F160000 		.4byte	0x167f
 3976 15eb 02       		.byte	0x2
 3977 15ec 23       		.byte	0x23
 3978 15ed 00       		.uleb128 0x0
 3979 15ee 15       		.uleb128 0x15
 3980 15ef E60B0000 		.4byte	.LASF307
 3981 15f3 08       		.byte	0x8
 3982 15f4 5D15     		.2byte	0x155d
 3983 15f6 350D0000 		.4byte	0xd35
 3984 15fa 03       		.byte	0x3
 3985 15fb 23       		.byte	0x23
 3986 15fc C001     		.uleb128 0xc0
 3987 15fe 15       		.uleb128 0x15
 3988 15ff 60030000 		.4byte	.LASF308
 3989 1603 08       		.byte	0x8
 3990 1604 5E15     		.2byte	0x155e
 3991 1606 350D0000 		.4byte	0xd35
ARM GAS  /tmp/ccogXpQB.s 			page 103


 3992 160a 03       		.byte	0x3
 3993 160b 23       		.byte	0x23
 3994 160c C401     		.uleb128 0xc4
 3995 160e 15       		.uleb128 0x15
 3996 160f C40A0000 		.4byte	.LASF309
 3997 1613 08       		.byte	0x8
 3998 1614 5F15     		.2byte	0x155f
 3999 1616 350D0000 		.4byte	0xd35
 4000 161a 03       		.byte	0x3
 4001 161b 23       		.byte	0x23
 4002 161c C801     		.uleb128 0xc8
 4003 161e 15       		.uleb128 0x15
 4004 161f 6D0A0000 		.4byte	.LASF310
 4005 1623 08       		.byte	0x8
 4006 1624 6015     		.2byte	0x1560
 4007 1626 350D0000 		.4byte	0xd35
 4008 162a 03       		.byte	0x3
 4009 162b 23       		.byte	0x23
 4010 162c CC01     		.uleb128 0xcc
 4011 162e 15       		.uleb128 0x15
 4012 162f 21010000 		.4byte	.LASF311
 4013 1633 08       		.byte	0x8
 4014 1634 6115     		.2byte	0x1561
 4015 1636 3A0D0000 		.4byte	0xd3a
 4016 163a 03       		.byte	0x3
 4017 163b 23       		.byte	0x23
 4018 163c D001     		.uleb128 0xd0
 4019 163e 15       		.uleb128 0x15
 4020 163f B1030000 		.4byte	.LASF312
 4021 1643 08       		.byte	0x8
 4022 1644 6215     		.2byte	0x1562
 4023 1646 3A0D0000 		.4byte	0xd3a
 4024 164a 03       		.byte	0x3
 4025 164b 23       		.byte	0x23
 4026 164c D401     		.uleb128 0xd4
 4027 164e 15       		.uleb128 0x15
 4028 164f D3000000 		.4byte	.LASF313
 4029 1653 08       		.byte	0x8
 4030 1654 6315     		.2byte	0x1563
 4031 1656 350D0000 		.4byte	0xd35
 4032 165a 03       		.byte	0x3
 4033 165b 23       		.byte	0x23
 4034 165c D801     		.uleb128 0xd8
 4035 165e 15       		.uleb128 0x15
 4036 165f 9B090000 		.4byte	.LASF194
 4037 1663 08       		.byte	0x8
 4038 1664 6415     		.2byte	0x1564
 4039 1666 8F160000 		.4byte	0x168f
 4040 166a 03       		.byte	0x3
 4041 166b 23       		.byte	0x23
 4042 166c DC01     		.uleb128 0xdc
 4043 166e 15       		.uleb128 0x15
 4044 166f 220B0000 		.4byte	.LASF314
 4045 1673 08       		.byte	0x8
 4046 1674 6515     		.2byte	0x1565
 4047 1676 350D0000 		.4byte	0xd35
 4048 167a 03       		.byte	0x3
ARM GAS  /tmp/ccogXpQB.s 			page 104


 4049 167b 23       		.byte	0x23
 4050 167c E401     		.uleb128 0xe4
 4051 167e 00       		.byte	0x0
 4052 167f 08       		.uleb128 0x8
 4053 1680 CA150000 		.4byte	0x15ca
 4054 1684 8F160000 		.4byte	0x168f
 4055 1688 09       		.uleb128 0x9
 4056 1689 4C000000 		.4byte	0x4c
 4057 168d 02       		.byte	0x2
 4058 168e 00       		.byte	0x0
 4059 168f 1C       		.uleb128 0x1c
 4060 1690 8A0F0000 		.4byte	0xf8a
 4061 1694 21       		.uleb128 0x21
 4062 1695 546300   		.ascii	"Tc\000"
 4063 1698 08       		.byte	0x8
 4064 1699 6615     		.2byte	0x1566
 4065 169b D6150000 		.4byte	0x15d6
 4066 169f 18       		.uleb128 0x18
 4067 16a0 0C       		.byte	0xc
 4068 16a1 08       		.byte	0x8
 4069 16a2 7C19     		.2byte	0x197c
 4070 16a4 D6160000 		.4byte	0x16d6
 4071 16a8 15       		.uleb128 0x15
 4072 16a9 09030000 		.4byte	.LASF315
 4073 16ad 08       		.byte	0x8
 4074 16ae 7D19     		.2byte	0x197d
 4075 16b0 350D0000 		.4byte	0xd35
 4076 16b4 02       		.byte	0x2
 4077 16b5 23       		.byte	0x23
 4078 16b6 00       		.uleb128 0x0
 4079 16b7 15       		.uleb128 0x15
 4080 16b8 10070000 		.4byte	.LASF316
 4081 16bc 08       		.byte	0x8
 4082 16bd 7E19     		.2byte	0x197e
 4083 16bf 350D0000 		.4byte	0xd35
 4084 16c3 02       		.byte	0x2
 4085 16c4 23       		.byte	0x23
 4086 16c5 04       		.uleb128 0x4
 4087 16c6 15       		.uleb128 0x15
 4088 16c7 830A0000 		.4byte	.LASF317
 4089 16cb 08       		.byte	0x8
 4090 16cc 7F19     		.2byte	0x197f
 4091 16ce 3A0D0000 		.4byte	0xd3a
 4092 16d2 02       		.byte	0x2
 4093 16d3 23       		.byte	0x23
 4094 16d4 08       		.uleb128 0x8
 4095 16d5 00       		.byte	0x0
 4096 16d6 21       		.uleb128 0x21
 4097 16d7 57647400 		.ascii	"Wdt\000"
 4098 16db 08       		.byte	0x8
 4099 16dc 8019     		.2byte	0x1980
 4100 16de 9F160000 		.4byte	0x169f
 4101 16e2 0D       		.uleb128 0xd
 4102 16e3 F60B0000 		.4byte	.LASF318
 4103 16e7 0C       		.byte	0xc
 4104 16e8 09       		.byte	0x9
 4105 16e9 A7       		.byte	0xa7
ARM GAS  /tmp/ccogXpQB.s 			page 105


 4106 16ea 34170000 		.4byte	0x1734
 4107 16ee 0B       		.uleb128 0xb
 4108 16ef 83060000 		.4byte	.LASF319
 4109 16f3 09       		.byte	0x9
 4110 16f4 AA       		.byte	0xaa
 4111 16f5 4E090000 		.4byte	0x94e
 4112 16f9 02       		.byte	0x2
 4113 16fa 23       		.byte	0x23
 4114 16fb 00       		.uleb128 0x0
 4115 16fc 0E       		.uleb128 0xe
 4116 16fd 70696F00 		.ascii	"pio\000"
 4117 1701 09       		.byte	0x9
 4118 1702 AC       		.byte	0xac
 4119 1703 34170000 		.4byte	0x1734
 4120 1707 02       		.byte	0x2
 4121 1708 23       		.byte	0x23
 4122 1709 04       		.uleb128 0x4
 4123 170a 0E       		.uleb128 0xe
 4124 170b 696400   		.ascii	"id\000"
 4125 170e 09       		.byte	0x9
 4126 170f AE       		.byte	0xae
 4127 1710 2D090000 		.4byte	0x92d
 4128 1714 02       		.byte	0x2
 4129 1715 23       		.byte	0x23
 4130 1716 08       		.uleb128 0x8
 4131 1717 0B       		.uleb128 0xb
 4132 1718 EE000000 		.4byte	.LASF320
 4133 171c 09       		.byte	0x9
 4134 171d B0       		.byte	0xb0
 4135 171e 2D090000 		.4byte	0x92d
 4136 1722 02       		.byte	0x2
 4137 1723 23       		.byte	0x23
 4138 1724 09       		.uleb128 0x9
 4139 1725 0B       		.uleb128 0xb
 4140 1726 5E080000 		.4byte	.LASF321
 4141 172a 09       		.byte	0x9
 4142 172b B2       		.byte	0xb2
 4143 172c 2D090000 		.4byte	0x92d
 4144 1730 02       		.byte	0x2
 4145 1731 23       		.byte	0x23
 4146 1732 0A       		.uleb128 0xa
 4147 1733 00       		.byte	0x0
 4148 1734 0F       		.uleb128 0xf
 4149 1735 04       		.byte	0x4
 4150 1736 E7140000 		.4byte	0x14e7
 4151 173a 23       		.uleb128 0x23
 4152 173b 50696E00 		.ascii	"Pin\000"
 4153 173f 09       		.byte	0x9
 4154 1740 B3       		.byte	0xb3
 4155 1741 E2160000 		.4byte	0x16e2
 4156 1745 24       		.uleb128 0x24
 4157 1746 09000000 		.4byte	.LASF322
 4158 174a 01       		.byte	0x1
 4159 174b DE05     		.2byte	0x5de
 4160 174d 01       		.byte	0x1
 4161 174e 00000000 		.4byte	.LFB14
 4162 1752 36000000 		.4byte	.LFE14
ARM GAS  /tmp/ccogXpQB.s 			page 106


 4163 1756 00000000 		.4byte	.LLST0
 4164 175a 6E170000 		.4byte	0x176e
 4165 175e 25       		.uleb128 0x25
 4166 175f 06020000 		.4byte	.LASF324
 4167 1763 01       		.byte	0x1
 4168 1764 DE05     		.2byte	0x5de
 4169 1766 650A0000 		.4byte	0xa65
 4170 176a 02       		.byte	0x2
 4171 176b 91       		.byte	0x91
 4172 176c 77       		.sleb128 -9
 4173 176d 00       		.byte	0x0
 4174 176e 24       		.uleb128 0x24
 4175 176f 2F020000 		.4byte	.LASF323
 4176 1773 01       		.byte	0x1
 4177 1774 3206     		.2byte	0x632
 4178 1776 01       		.byte	0x1
 4179 1777 00000000 		.4byte	.LFB20
 4180 177b 5C000000 		.4byte	.LFE20
 4181 177f 38000000 		.4byte	.LLST1
 4182 1783 A6170000 		.4byte	0x17a6
 4183 1787 25       		.uleb128 0x25
 4184 1788 06020000 		.4byte	.LASF324
 4185 178c 01       		.byte	0x1
 4186 178d 3206     		.2byte	0x632
 4187 178f 650A0000 		.4byte	0xa65
 4188 1793 02       		.byte	0x2
 4189 1794 91       		.byte	0x91
 4190 1795 77       		.sleb128 -9
 4191 1796 25       		.uleb128 0x25
 4192 1797 B30A0000 		.4byte	.LASF325
 4193 179b 01       		.byte	0x1
 4194 179c 3206     		.2byte	0x632
 4195 179e 4E090000 		.4byte	0x94e
 4196 17a2 02       		.byte	0x2
 4197 17a3 91       		.byte	0x91
 4198 17a4 70       		.sleb128 -16
 4199 17a5 00       		.byte	0x0
 4200 17a6 26       		.uleb128 0x26
 4201 17a7 01       		.byte	0x1
 4202 17a8 F8010000 		.4byte	.LASF326
 4203 17ac 02       		.byte	0x2
 4204 17ad 20       		.byte	0x20
 4205 17ae 45000000 		.4byte	0x45
 4206 17b2 00000000 		.4byte	.LFB35
 4207 17b6 BE000000 		.4byte	.LFE35
 4208 17ba 70000000 		.4byte	.LLST2
 4209 17be CF170000 		.4byte	0x17cf
 4210 17c2 27       		.uleb128 0x27
 4211 17c3 7400     		.ascii	"t\000"
 4212 17c5 02       		.byte	0x2
 4213 17c6 22       		.byte	0x22
 4214 17c7 4E090000 		.4byte	0x94e
 4215 17cb 02       		.byte	0x2
 4216 17cc 91       		.byte	0x91
 4217 17cd 74       		.sleb128 -12
 4218 17ce 00       		.byte	0x0
 4219 17cf 28       		.uleb128 0x28
ARM GAS  /tmp/ccogXpQB.s 			page 107


 4220 17d0 01       		.byte	0x1
 4221 17d1 59050000 		.4byte	.LASF327
 4222 17d5 02       		.byte	0x2
 4223 17d6 39       		.byte	0x39
 4224 17d7 01       		.byte	0x1
 4225 17d8 00000000 		.4byte	.LFB36
 4226 17dc 2A000000 		.4byte	.LFE36
 4227 17e0 A8000000 		.4byte	.LLST3
 4228 17e4 F7170000 		.4byte	0x17f7
 4229 17e8 29       		.uleb128 0x29
 4230 17e9 400B0000 		.4byte	.LASF328
 4231 17ed 02       		.byte	0x2
 4232 17ee 3B       		.byte	0x3b
 4233 17ef 4E090000 		.4byte	0x94e
 4234 17f3 02       		.byte	0x2
 4235 17f4 91       		.byte	0x91
 4236 17f5 74       		.sleb128 -12
 4237 17f6 00       		.byte	0x0
 4238 17f7 28       		.uleb128 0x28
 4239 17f8 01       		.byte	0x1
 4240 17f9 A6040000 		.4byte	.LASF329
 4241 17fd 02       		.byte	0x2
 4242 17fe 41       		.byte	0x41
 4243 17ff 01       		.byte	0x1
 4244 1800 00000000 		.4byte	.LFB37
 4245 1804 10010000 		.4byte	.LFE37
 4246 1808 E0000000 		.4byte	.LLST4
 4247 180c 3C180000 		.4byte	0x183c
 4248 1810 27       		.uleb128 0x27
 4249 1811 6900     		.ascii	"i\000"
 4250 1813 02       		.byte	0x2
 4251 1814 43       		.byte	0x43
 4252 1815 2D090000 		.4byte	0x92d
 4253 1819 02       		.byte	0x2
 4254 181a 91       		.byte	0x91
 4255 181b 6F       		.sleb128 -17
 4256 181c 29       		.uleb128 0x29
 4257 181d 400B0000 		.4byte	.LASF328
 4258 1821 02       		.byte	0x2
 4259 1822 44       		.byte	0x44
 4260 1823 4E090000 		.4byte	0x94e
 4261 1827 02       		.byte	0x2
 4262 1828 91       		.byte	0x91
 4263 1829 68       		.sleb128 -24
 4264 182a 29       		.uleb128 0x29
 4265 182b 8D020000 		.4byte	.LASF330
 4266 182f 02       		.byte	0x2
 4267 1830 45       		.byte	0x45
 4268 1831 4E090000 		.4byte	0x94e
 4269 1835 05       		.byte	0x5
 4270 1836 03       		.byte	0x3
 4271 1837 18000000 		.4byte	timestamp.4845
 4272 183b 00       		.byte	0x0
 4273 183c 2A       		.uleb128 0x2a
 4274 183d 8A090000 		.4byte	.LASF334
 4275 1841 02       		.byte	0x2
 4276 1842 57       		.byte	0x57
ARM GAS  /tmp/ccogXpQB.s 			page 108


 4277 1843 00000000 		.4byte	.LFB38
 4278 1847 82010000 		.4byte	.LFE38
 4279 184b 18010000 		.4byte	.LLST5
 4280 184f 7F180000 		.4byte	0x187f
 4281 1853 27       		.uleb128 0x27
 4282 1854 64697600 		.ascii	"div\000"
 4283 1858 02       		.byte	0x2
 4284 1859 59       		.byte	0x59
 4285 185a 4E090000 		.4byte	0x94e
 4286 185e 02       		.byte	0x2
 4287 185f 91       		.byte	0x91
 4288 1860 6C       		.sleb128 -20
 4289 1861 29       		.uleb128 0x29
 4290 1862 22090000 		.4byte	.LASF331
 4291 1866 02       		.byte	0x2
 4292 1867 5A       		.byte	0x5a
 4293 1868 4E090000 		.4byte	0x94e
 4294 186c 02       		.byte	0x2
 4295 186d 91       		.byte	0x91
 4296 186e 68       		.sleb128 -24
 4297 186f 29       		.uleb128 0x29
 4298 1870 C1050000 		.4byte	.LASF332
 4299 1874 02       		.byte	0x2
 4300 1875 5B       		.byte	0x5b
 4301 1876 8F180000 		.4byte	0x188f
 4302 187a 03       		.byte	0x3
 4303 187b 91       		.byte	0x91
 4304 187c AC7F     		.sleb128 -84
 4305 187e 00       		.byte	0x0
 4306 187f 08       		.uleb128 0x8
 4307 1880 3A170000 		.4byte	0x173a
 4308 1884 8F180000 		.4byte	0x188f
 4309 1888 09       		.uleb128 0x9
 4310 1889 4C000000 		.4byte	0x4c
 4311 188d 04       		.byte	0x4
 4312 188e 00       		.byte	0x0
 4313 188f 16       		.uleb128 0x16
 4314 1890 7F180000 		.4byte	0x187f
 4315 1894 2B       		.uleb128 0x2b
 4316 1895 BD000000 		.4byte	.LASF333
 4317 1899 02       		.byte	0x2
 4318 189a 81       		.byte	0x81
 4319 189b 01       		.byte	0x1
 4320 189c 00000000 		.4byte	.LFB39
 4321 18a0 E0000000 		.4byte	.LFE39
 4322 18a4 52010000 		.4byte	.LLST6
 4323 18a8 BB180000 		.4byte	0x18bb
 4324 18ac 2C       		.uleb128 0x2c
 4325 18ad 6E657700 		.ascii	"new\000"
 4326 18b1 02       		.byte	0x2
 4327 18b2 81       		.byte	0x81
 4328 18b3 2D090000 		.4byte	0x92d
 4329 18b7 02       		.byte	0x2
 4330 18b8 91       		.byte	0x91
 4331 18b9 77       		.sleb128 -9
 4332 18ba 00       		.byte	0x0
 4333 18bb 2D       		.uleb128 0x2d
ARM GAS  /tmp/ccogXpQB.s 			page 109


 4334 18bc 636C6900 		.ascii	"cli\000"
 4335 18c0 02       		.byte	0x2
 4336 18c1 9A       		.byte	0x9a
 4337 18c2 00000000 		.4byte	.LFB40
 4338 18c6 AC000000 		.4byte	.LFE40
 4339 18ca 8A010000 		.4byte	.LLST7
 4340 18ce 0B190000 		.4byte	0x190b
 4341 18d2 29       		.uleb128 0x29
 4342 18d3 BC050000 		.4byte	.LASF335
 4343 18d7 02       		.byte	0x2
 4344 18d8 9C       		.byte	0x9c
 4345 18d9 45000000 		.4byte	0x45
 4346 18dd 02       		.byte	0x2
 4347 18de 91       		.byte	0x91
 4348 18df 74       		.sleb128 -12
 4349 18e0 29       		.uleb128 0x29
 4350 18e1 D6050000 		.4byte	.LASF336
 4351 18e5 02       		.byte	0x2
 4352 18e6 9D       		.byte	0x9d
 4353 18e7 0B190000 		.4byte	0x190b
 4354 18eb 02       		.byte	0x2
 4355 18ec 91       		.byte	0x91
 4356 18ed 68       		.sleb128 -24
 4357 18ee 29       		.uleb128 0x29
 4358 18ef 68050000 		.4byte	.LASF337
 4359 18f3 02       		.byte	0x2
 4360 18f4 9E       		.byte	0x9e
 4361 18f5 1B190000 		.4byte	0x191b
 4362 18f9 02       		.byte	0x2
 4363 18fa 91       		.byte	0x91
 4364 18fb 48       		.sleb128 -56
 4365 18fc 27       		.uleb128 0x27
 4366 18fd 636D6400 		.ascii	"cmd\000"
 4367 1901 02       		.byte	0x2
 4368 1902 9F       		.byte	0x9f
 4369 1903 D8050000 		.4byte	0x5d8
 4370 1907 02       		.byte	0x2
 4371 1908 91       		.byte	0x91
 4372 1909 47       		.sleb128 -57
 4373 190a 00       		.byte	0x0
 4374 190b 08       		.uleb128 0x8
 4375 190c 45000000 		.4byte	0x45
 4376 1910 1B190000 		.4byte	0x191b
 4377 1914 09       		.uleb128 0x9
 4378 1915 4C000000 		.4byte	0x4c
 4379 1919 02       		.byte	0x2
 4380 191a 00       		.byte	0x0
 4381 191b 08       		.uleb128 0x8
 4382 191c D8050000 		.4byte	0x5d8
 4383 1920 2B190000 		.4byte	0x192b
 4384 1924 09       		.uleb128 0x9
 4385 1925 4C000000 		.4byte	0x4c
 4386 1929 1F       		.byte	0x1f
 4387 192a 00       		.byte	0x0
 4388 192b 2E       		.uleb128 0x2e
 4389 192c AD010000 		.4byte	.LASF338
 4390 1930 06       		.byte	0x6
ARM GAS  /tmp/ccogXpQB.s 			page 110


 4391 1931 3203     		.2byte	0x332
 4392 1933 6E040000 		.4byte	0x46e
 4393 1937 01       		.byte	0x1
 4394 1938 01       		.byte	0x1
 4395 1939 2E       		.uleb128 0x2e
 4396 193a B8060000 		.4byte	.LASF339
 4397 193e 01       		.byte	0x1
 4398 193f CE06     		.2byte	0x6ce
 4399 1941 47190000 		.4byte	0x1947
 4400 1945 01       		.byte	0x1
 4401 1946 01       		.byte	0x1
 4402 1947 1C       		.uleb128 0x1c
 4403 1948 45000000 		.4byte	0x45
 4404 194c 08       		.uleb128 0x8
 4405 194d 43090000 		.4byte	0x943
 4406 1951 5C190000 		.4byte	0x195c
 4407 1955 09       		.uleb128 0x9
 4408 1956 4C000000 		.4byte	0x4c
 4409 195a 02       		.byte	0x2
 4410 195b 00       		.byte	0x0
 4411 195c 2F       		.uleb128 0x2f
 4412 195d 74070000 		.4byte	.LASF340
 4413 1961 02       		.byte	0x2
 4414 1962 10       		.byte	0x10
 4415 1963 4C190000 		.4byte	0x194c
 4416 1967 01       		.byte	0x1
 4417 1968 01       		.byte	0x1
 4418 1969 2F       		.uleb128 0x2f
 4419 196a C5070000 		.4byte	.LASF341
 4420 196e 02       		.byte	0x2
 4421 196f 11       		.byte	0x11
 4422 1970 4C190000 		.4byte	0x194c
 4423 1974 01       		.byte	0x1
 4424 1975 01       		.byte	0x1
 4425 1976 2F       		.uleb128 0x2f
 4426 1977 240C0000 		.4byte	.LASF342
 4427 197b 02       		.byte	0x2
 4428 197c 12       		.byte	0x12
 4429 197d 4C190000 		.4byte	0x194c
 4430 1981 01       		.byte	0x1
 4431 1982 01       		.byte	0x1
 4432 1983 2F       		.uleb128 0x2f
 4433 1984 7A000000 		.4byte	.LASF343
 4434 1988 02       		.byte	0x2
 4435 1989 14       		.byte	0x14
 4436 198a 2D090000 		.4byte	0x92d
 4437 198e 01       		.byte	0x1
 4438 198f 01       		.byte	0x1
 4439 1990 08       		.uleb128 0x8
 4440 1991 3A170000 		.4byte	0x173a
 4441 1995 A0190000 		.4byte	0x19a0
 4442 1999 09       		.uleb128 0x9
 4443 199a 4C000000 		.4byte	0x4c
 4444 199e 01       		.byte	0x1
 4445 199f 00       		.byte	0x0
 4446 19a0 29       		.uleb128 0x29
 4447 19a1 21000000 		.4byte	.LASF344
ARM GAS  /tmp/ccogXpQB.s 			page 111


 4448 19a5 02       		.byte	0x2
 4449 19a6 16       		.byte	0x16
 4450 19a7 B1190000 		.4byte	0x19b1
 4451 19ab 05       		.byte	0x5
 4452 19ac 03       		.byte	0x3
 4453 19ad 00000000 		.4byte	vpins
 4454 19b1 16       		.uleb128 0x16
 4455 19b2 90190000 		.4byte	0x1990
 4456 19b6 2E       		.uleb128 0x2e
 4457 19b7 AD010000 		.4byte	.LASF338
 4458 19bb 06       		.byte	0x6
 4459 19bc 3203     		.2byte	0x332
 4460 19be 6E040000 		.4byte	0x46e
 4461 19c2 01       		.byte	0x1
 4462 19c3 01       		.byte	0x1
 4463 19c4 2E       		.uleb128 0x2e
 4464 19c5 B8060000 		.4byte	.LASF339
 4465 19c9 01       		.byte	0x1
 4466 19ca CE06     		.2byte	0x6ce
 4467 19cc 47190000 		.4byte	0x1947
 4468 19d0 01       		.byte	0x1
 4469 19d1 01       		.byte	0x1
 4470 19d2 30       		.uleb128 0x30
 4471 19d3 74070000 		.4byte	.LASF340
 4472 19d7 02       		.byte	0x2
 4473 19d8 10       		.byte	0x10
 4474 19d9 4C190000 		.4byte	0x194c
 4475 19dd 01       		.byte	0x1
 4476 19de 05       		.byte	0x5
 4477 19df 03       		.byte	0x3
 4478 19e0 00000000 		.4byte	current
 4479 19e4 30       		.uleb128 0x30
 4480 19e5 C5070000 		.4byte	.LASF341
 4481 19e9 02       		.byte	0x2
 4482 19ea 11       		.byte	0x11
 4483 19eb 4C190000 		.4byte	0x194c
 4484 19ef 01       		.byte	0x1
 4485 19f0 05       		.byte	0x5
 4486 19f1 03       		.byte	0x3
 4487 19f2 00000000 		.4byte	previous
 4488 19f6 30       		.uleb128 0x30
 4489 19f7 240C0000 		.4byte	.LASF342
 4490 19fb 02       		.byte	0x2
 4491 19fc 12       		.byte	0x12
 4492 19fd 4C190000 		.4byte	0x194c
 4493 1a01 01       		.byte	0x1
 4494 1a02 05       		.byte	0x5
 4495 1a03 03       		.byte	0x3
 4496 1a04 00000000 		.4byte	next
 4497 1a08 30       		.uleb128 0x30
 4498 1a09 7A000000 		.4byte	.LASF343
 4499 1a0d 02       		.byte	0x2
 4500 1a0e 14       		.byte	0x14
 4501 1a0f 2D090000 		.4byte	0x92d
 4502 1a13 01       		.byte	0x1
 4503 1a14 05       		.byte	0x5
 4504 1a15 03       		.byte	0x3
ARM GAS  /tmp/ccogXpQB.s 			page 112


 4505 1a16 00000000 		.4byte	_state
 4506 1a1a 00       		.byte	0x0
 4507              		.section	.debug_abbrev
 4508 0000 01       		.uleb128 0x1
 4509 0001 11       		.uleb128 0x11
 4510 0002 01       		.byte	0x1
 4511 0003 25       		.uleb128 0x25
 4512 0004 0E       		.uleb128 0xe
 4513 0005 13       		.uleb128 0x13
 4514 0006 0B       		.uleb128 0xb
 4515 0007 03       		.uleb128 0x3
 4516 0008 0E       		.uleb128 0xe
 4517 0009 1B       		.uleb128 0x1b
 4518 000a 0E       		.uleb128 0xe
 4519 000b 11       		.uleb128 0x11
 4520 000c 01       		.uleb128 0x1
 4521 000d 52       		.uleb128 0x52
 4522 000e 01       		.uleb128 0x1
 4523 000f 55       		.uleb128 0x55
 4524 0010 06       		.uleb128 0x6
 4525 0011 10       		.uleb128 0x10
 4526 0012 06       		.uleb128 0x6
 4527 0013 00       		.byte	0x0
 4528 0014 00       		.byte	0x0
 4529 0015 02       		.uleb128 0x2
 4530 0016 24       		.uleb128 0x24
 4531 0017 00       		.byte	0x0
 4532 0018 0B       		.uleb128 0xb
 4533 0019 0B       		.uleb128 0xb
 4534 001a 3E       		.uleb128 0x3e
 4535 001b 0B       		.uleb128 0xb
 4536 001c 03       		.uleb128 0x3
 4537 001d 0E       		.uleb128 0xe
 4538 001e 00       		.byte	0x0
 4539 001f 00       		.byte	0x0
 4540 0020 03       		.uleb128 0x3
 4541 0021 24       		.uleb128 0x24
 4542 0022 00       		.byte	0x0
 4543 0023 0B       		.uleb128 0xb
 4544 0024 0B       		.uleb128 0xb
 4545 0025 3E       		.uleb128 0x3e
 4546 0026 0B       		.uleb128 0xb
 4547 0027 03       		.uleb128 0x3
 4548 0028 08       		.uleb128 0x8
 4549 0029 00       		.byte	0x0
 4550 002a 00       		.byte	0x0
 4551 002b 04       		.uleb128 0x4
 4552 002c 16       		.uleb128 0x16
 4553 002d 00       		.byte	0x0
 4554 002e 03       		.uleb128 0x3
 4555 002f 0E       		.uleb128 0xe
 4556 0030 3A       		.uleb128 0x3a
 4557 0031 0B       		.uleb128 0xb
 4558 0032 3B       		.uleb128 0x3b
 4559 0033 0B       		.uleb128 0xb
 4560 0034 49       		.uleb128 0x49
 4561 0035 13       		.uleb128 0x13
ARM GAS  /tmp/ccogXpQB.s 			page 113


 4562 0036 00       		.byte	0x0
 4563 0037 00       		.byte	0x0
 4564 0038 05       		.uleb128 0x5
 4565 0039 16       		.uleb128 0x16
 4566 003a 00       		.byte	0x0
 4567 003b 03       		.uleb128 0x3
 4568 003c 0E       		.uleb128 0xe
 4569 003d 3A       		.uleb128 0x3a
 4570 003e 0B       		.uleb128 0xb
 4571 003f 3B       		.uleb128 0x3b
 4572 0040 05       		.uleb128 0x5
 4573 0041 49       		.uleb128 0x49
 4574 0042 13       		.uleb128 0x13
 4575 0043 00       		.byte	0x0
 4576 0044 00       		.byte	0x0
 4577 0045 06       		.uleb128 0x6
 4578 0046 17       		.uleb128 0x17
 4579 0047 01       		.byte	0x1
 4580 0048 0B       		.uleb128 0xb
 4581 0049 0B       		.uleb128 0xb
 4582 004a 3A       		.uleb128 0x3a
 4583 004b 0B       		.uleb128 0xb
 4584 004c 3B       		.uleb128 0x3b
 4585 004d 0B       		.uleb128 0xb
 4586 004e 01       		.uleb128 0x1
 4587 004f 13       		.uleb128 0x13
 4588 0050 00       		.byte	0x0
 4589 0051 00       		.byte	0x0
 4590 0052 07       		.uleb128 0x7
 4591 0053 0D       		.uleb128 0xd
 4592 0054 00       		.byte	0x0
 4593 0055 03       		.uleb128 0x3
 4594 0056 0E       		.uleb128 0xe
 4595 0057 3A       		.uleb128 0x3a
 4596 0058 0B       		.uleb128 0xb
 4597 0059 3B       		.uleb128 0x3b
 4598 005a 0B       		.uleb128 0xb
 4599 005b 49       		.uleb128 0x49
 4600 005c 13       		.uleb128 0x13
 4601 005d 00       		.byte	0x0
 4602 005e 00       		.byte	0x0
 4603 005f 08       		.uleb128 0x8
 4604 0060 01       		.uleb128 0x1
 4605 0061 01       		.byte	0x1
 4606 0062 49       		.uleb128 0x49
 4607 0063 13       		.uleb128 0x13
 4608 0064 01       		.uleb128 0x1
 4609 0065 13       		.uleb128 0x13
 4610 0066 00       		.byte	0x0
 4611 0067 00       		.byte	0x0
 4612 0068 09       		.uleb128 0x9
 4613 0069 21       		.uleb128 0x21
 4614 006a 00       		.byte	0x0
 4615 006b 49       		.uleb128 0x49
 4616 006c 13       		.uleb128 0x13
 4617 006d 2F       		.uleb128 0x2f
 4618 006e 0B       		.uleb128 0xb
ARM GAS  /tmp/ccogXpQB.s 			page 114


 4619 006f 00       		.byte	0x0
 4620 0070 00       		.byte	0x0
 4621 0071 0A       		.uleb128 0xa
 4622 0072 13       		.uleb128 0x13
 4623 0073 01       		.byte	0x1
 4624 0074 0B       		.uleb128 0xb
 4625 0075 0B       		.uleb128 0xb
 4626 0076 3A       		.uleb128 0x3a
 4627 0077 0B       		.uleb128 0xb
 4628 0078 3B       		.uleb128 0x3b
 4629 0079 0B       		.uleb128 0xb
 4630 007a 01       		.uleb128 0x1
 4631 007b 13       		.uleb128 0x13
 4632 007c 00       		.byte	0x0
 4633 007d 00       		.byte	0x0
 4634 007e 0B       		.uleb128 0xb
 4635 007f 0D       		.uleb128 0xd
 4636 0080 00       		.byte	0x0
 4637 0081 03       		.uleb128 0x3
 4638 0082 0E       		.uleb128 0xe
 4639 0083 3A       		.uleb128 0x3a
 4640 0084 0B       		.uleb128 0xb
 4641 0085 3B       		.uleb128 0x3b
 4642 0086 0B       		.uleb128 0xb
 4643 0087 49       		.uleb128 0x49
 4644 0088 13       		.uleb128 0x13
 4645 0089 38       		.uleb128 0x38
 4646 008a 0A       		.uleb128 0xa
 4647 008b 00       		.byte	0x0
 4648 008c 00       		.byte	0x0
 4649 008d 0C       		.uleb128 0xc
 4650 008e 0F       		.uleb128 0xf
 4651 008f 00       		.byte	0x0
 4652 0090 0B       		.uleb128 0xb
 4653 0091 0B       		.uleb128 0xb
 4654 0092 00       		.byte	0x0
 4655 0093 00       		.byte	0x0
 4656 0094 0D       		.uleb128 0xd
 4657 0095 13       		.uleb128 0x13
 4658 0096 01       		.byte	0x1
 4659 0097 03       		.uleb128 0x3
 4660 0098 0E       		.uleb128 0xe
 4661 0099 0B       		.uleb128 0xb
 4662 009a 0B       		.uleb128 0xb
 4663 009b 3A       		.uleb128 0x3a
 4664 009c 0B       		.uleb128 0xb
 4665 009d 3B       		.uleb128 0x3b
 4666 009e 0B       		.uleb128 0xb
 4667 009f 01       		.uleb128 0x1
 4668 00a0 13       		.uleb128 0x13
 4669 00a1 00       		.byte	0x0
 4670 00a2 00       		.byte	0x0
 4671 00a3 0E       		.uleb128 0xe
 4672 00a4 0D       		.uleb128 0xd
 4673 00a5 00       		.byte	0x0
 4674 00a6 03       		.uleb128 0x3
 4675 00a7 08       		.uleb128 0x8
ARM GAS  /tmp/ccogXpQB.s 			page 115


 4676 00a8 3A       		.uleb128 0x3a
 4677 00a9 0B       		.uleb128 0xb
 4678 00aa 3B       		.uleb128 0x3b
 4679 00ab 0B       		.uleb128 0xb
 4680 00ac 49       		.uleb128 0x49
 4681 00ad 13       		.uleb128 0x13
 4682 00ae 38       		.uleb128 0x38
 4683 00af 0A       		.uleb128 0xa
 4684 00b0 00       		.byte	0x0
 4685 00b1 00       		.byte	0x0
 4686 00b2 0F       		.uleb128 0xf
 4687 00b3 0F       		.uleb128 0xf
 4688 00b4 00       		.byte	0x0
 4689 00b5 0B       		.uleb128 0xb
 4690 00b6 0B       		.uleb128 0xb
 4691 00b7 49       		.uleb128 0x49
 4692 00b8 13       		.uleb128 0x13
 4693 00b9 00       		.byte	0x0
 4694 00ba 00       		.byte	0x0
 4695 00bb 10       		.uleb128 0x10
 4696 00bc 13       		.uleb128 0x13
 4697 00bd 01       		.byte	0x1
 4698 00be 03       		.uleb128 0x3
 4699 00bf 0E       		.uleb128 0xe
 4700 00c0 0B       		.uleb128 0xb
 4701 00c1 05       		.uleb128 0x5
 4702 00c2 3A       		.uleb128 0x3a
 4703 00c3 0B       		.uleb128 0xb
 4704 00c4 3B       		.uleb128 0x3b
 4705 00c5 0B       		.uleb128 0xb
 4706 00c6 01       		.uleb128 0x1
 4707 00c7 13       		.uleb128 0x13
 4708 00c8 00       		.byte	0x0
 4709 00c9 00       		.byte	0x0
 4710 00ca 11       		.uleb128 0x11
 4711 00cb 15       		.uleb128 0x15
 4712 00cc 00       		.byte	0x0
 4713 00cd 27       		.uleb128 0x27
 4714 00ce 0C       		.uleb128 0xc
 4715 00cf 00       		.byte	0x0
 4716 00d0 00       		.byte	0x0
 4717 00d1 12       		.uleb128 0x12
 4718 00d2 15       		.uleb128 0x15
 4719 00d3 01       		.byte	0x1
 4720 00d4 27       		.uleb128 0x27
 4721 00d5 0C       		.uleb128 0xc
 4722 00d6 49       		.uleb128 0x49
 4723 00d7 13       		.uleb128 0x13
 4724 00d8 01       		.uleb128 0x1
 4725 00d9 13       		.uleb128 0x13
 4726 00da 00       		.byte	0x0
 4727 00db 00       		.byte	0x0
 4728 00dc 13       		.uleb128 0x13
 4729 00dd 05       		.uleb128 0x5
 4730 00de 00       		.byte	0x0
 4731 00df 49       		.uleb128 0x49
 4732 00e0 13       		.uleb128 0x13
ARM GAS  /tmp/ccogXpQB.s 			page 116


 4733 00e1 00       		.byte	0x0
 4734 00e2 00       		.byte	0x0
 4735 00e3 14       		.uleb128 0x14
 4736 00e4 13       		.uleb128 0x13
 4737 00e5 01       		.byte	0x1
 4738 00e6 03       		.uleb128 0x3
 4739 00e7 0E       		.uleb128 0xe
 4740 00e8 0B       		.uleb128 0xb
 4741 00e9 05       		.uleb128 0x5
 4742 00ea 3A       		.uleb128 0x3a
 4743 00eb 0B       		.uleb128 0xb
 4744 00ec 3B       		.uleb128 0x3b
 4745 00ed 05       		.uleb128 0x5
 4746 00ee 01       		.uleb128 0x1
 4747 00ef 13       		.uleb128 0x13
 4748 00f0 00       		.byte	0x0
 4749 00f1 00       		.byte	0x0
 4750 00f2 15       		.uleb128 0x15
 4751 00f3 0D       		.uleb128 0xd
 4752 00f4 00       		.byte	0x0
 4753 00f5 03       		.uleb128 0x3
 4754 00f6 0E       		.uleb128 0xe
 4755 00f7 3A       		.uleb128 0x3a
 4756 00f8 0B       		.uleb128 0xb
 4757 00f9 3B       		.uleb128 0x3b
 4758 00fa 05       		.uleb128 0x5
 4759 00fb 49       		.uleb128 0x49
 4760 00fc 13       		.uleb128 0x13
 4761 00fd 38       		.uleb128 0x38
 4762 00fe 0A       		.uleb128 0xa
 4763 00ff 00       		.byte	0x0
 4764 0100 00       		.byte	0x0
 4765 0101 16       		.uleb128 0x16
 4766 0102 26       		.uleb128 0x26
 4767 0103 00       		.byte	0x0
 4768 0104 49       		.uleb128 0x49
 4769 0105 13       		.uleb128 0x13
 4770 0106 00       		.byte	0x0
 4771 0107 00       		.byte	0x0
 4772 0108 17       		.uleb128 0x17
 4773 0109 13       		.uleb128 0x13
 4774 010a 01       		.byte	0x1
 4775 010b 03       		.uleb128 0x3
 4776 010c 0E       		.uleb128 0xe
 4777 010d 0B       		.uleb128 0xb
 4778 010e 0B       		.uleb128 0xb
 4779 010f 3A       		.uleb128 0x3a
 4780 0110 0B       		.uleb128 0xb
 4781 0111 3B       		.uleb128 0x3b
 4782 0112 05       		.uleb128 0x5
 4783 0113 01       		.uleb128 0x1
 4784 0114 13       		.uleb128 0x13
 4785 0115 00       		.byte	0x0
 4786 0116 00       		.byte	0x0
 4787 0117 18       		.uleb128 0x18
 4788 0118 13       		.uleb128 0x13
 4789 0119 01       		.byte	0x1
ARM GAS  /tmp/ccogXpQB.s 			page 117


 4790 011a 0B       		.uleb128 0xb
 4791 011b 0B       		.uleb128 0xb
 4792 011c 3A       		.uleb128 0x3a
 4793 011d 0B       		.uleb128 0xb
 4794 011e 3B       		.uleb128 0x3b
 4795 011f 05       		.uleb128 0x5
 4796 0120 01       		.uleb128 0x1
 4797 0121 13       		.uleb128 0x13
 4798 0122 00       		.byte	0x0
 4799 0123 00       		.byte	0x0
 4800 0124 19       		.uleb128 0x19
 4801 0125 17       		.uleb128 0x17
 4802 0126 01       		.byte	0x1
 4803 0127 0B       		.uleb128 0xb
 4804 0128 0B       		.uleb128 0xb
 4805 0129 3A       		.uleb128 0x3a
 4806 012a 0B       		.uleb128 0xb
 4807 012b 3B       		.uleb128 0x3b
 4808 012c 05       		.uleb128 0x5
 4809 012d 01       		.uleb128 0x1
 4810 012e 13       		.uleb128 0x13
 4811 012f 00       		.byte	0x0
 4812 0130 00       		.byte	0x0
 4813 0131 1A       		.uleb128 0x1a
 4814 0132 0D       		.uleb128 0xd
 4815 0133 00       		.byte	0x0
 4816 0134 03       		.uleb128 0x3
 4817 0135 0E       		.uleb128 0xe
 4818 0136 3A       		.uleb128 0x3a
 4819 0137 0B       		.uleb128 0xb
 4820 0138 3B       		.uleb128 0x3b
 4821 0139 05       		.uleb128 0x5
 4822 013a 49       		.uleb128 0x49
 4823 013b 13       		.uleb128 0x13
 4824 013c 00       		.byte	0x0
 4825 013d 00       		.byte	0x0
 4826 013e 1B       		.uleb128 0x1b
 4827 013f 15       		.uleb128 0x15
 4828 0140 01       		.byte	0x1
 4829 0141 27       		.uleb128 0x27
 4830 0142 0C       		.uleb128 0xc
 4831 0143 01       		.uleb128 0x1
 4832 0144 13       		.uleb128 0x13
 4833 0145 00       		.byte	0x0
 4834 0146 00       		.byte	0x0
 4835 0147 1C       		.uleb128 0x1c
 4836 0148 35       		.uleb128 0x35
 4837 0149 00       		.byte	0x0
 4838 014a 49       		.uleb128 0x49
 4839 014b 13       		.uleb128 0x13
 4840 014c 00       		.byte	0x0
 4841 014d 00       		.byte	0x0
 4842 014e 1D       		.uleb128 0x1d
 4843 014f 04       		.uleb128 0x4
 4844 0150 01       		.byte	0x1
 4845 0151 03       		.uleb128 0x3
 4846 0152 0E       		.uleb128 0xe
ARM GAS  /tmp/ccogXpQB.s 			page 118


 4847 0153 0B       		.uleb128 0xb
 4848 0154 0B       		.uleb128 0xb
 4849 0155 3A       		.uleb128 0x3a
 4850 0156 0B       		.uleb128 0xb
 4851 0157 3B       		.uleb128 0x3b
 4852 0158 0B       		.uleb128 0xb
 4853 0159 01       		.uleb128 0x1
 4854 015a 13       		.uleb128 0x13
 4855 015b 00       		.byte	0x0
 4856 015c 00       		.byte	0x0
 4857 015d 1E       		.uleb128 0x1e
 4858 015e 28       		.uleb128 0x28
 4859 015f 00       		.byte	0x0
 4860 0160 03       		.uleb128 0x3
 4861 0161 0E       		.uleb128 0xe
 4862 0162 1C       		.uleb128 0x1c
 4863 0163 0D       		.uleb128 0xd
 4864 0164 00       		.byte	0x0
 4865 0165 00       		.byte	0x0
 4866 0166 1F       		.uleb128 0x1f
 4867 0167 13       		.uleb128 0x13
 4868 0168 01       		.byte	0x1
 4869 0169 0B       		.uleb128 0xb
 4870 016a 05       		.uleb128 0x5
 4871 016b 3A       		.uleb128 0x3a
 4872 016c 0B       		.uleb128 0xb
 4873 016d 3B       		.uleb128 0x3b
 4874 016e 0B       		.uleb128 0xb
 4875 016f 01       		.uleb128 0x1
 4876 0170 13       		.uleb128 0x13
 4877 0171 00       		.byte	0x0
 4878 0172 00       		.byte	0x0
 4879 0173 20       		.uleb128 0x20
 4880 0174 21       		.uleb128 0x21
 4881 0175 00       		.byte	0x0
 4882 0176 49       		.uleb128 0x49
 4883 0177 13       		.uleb128 0x13
 4884 0178 2F       		.uleb128 0x2f
 4885 0179 05       		.uleb128 0x5
 4886 017a 00       		.byte	0x0
 4887 017b 00       		.byte	0x0
 4888 017c 21       		.uleb128 0x21
 4889 017d 16       		.uleb128 0x16
 4890 017e 00       		.byte	0x0
 4891 017f 03       		.uleb128 0x3
 4892 0180 08       		.uleb128 0x8
 4893 0181 3A       		.uleb128 0x3a
 4894 0182 0B       		.uleb128 0xb
 4895 0183 3B       		.uleb128 0x3b
 4896 0184 05       		.uleb128 0x5
 4897 0185 49       		.uleb128 0x49
 4898 0186 13       		.uleb128 0x13
 4899 0187 00       		.byte	0x0
 4900 0188 00       		.byte	0x0
 4901 0189 22       		.uleb128 0x22
 4902 018a 13       		.uleb128 0x13
 4903 018b 01       		.byte	0x1
ARM GAS  /tmp/ccogXpQB.s 			page 119


 4904 018c 0B       		.uleb128 0xb
 4905 018d 05       		.uleb128 0x5
 4906 018e 3A       		.uleb128 0x3a
 4907 018f 0B       		.uleb128 0xb
 4908 0190 3B       		.uleb128 0x3b
 4909 0191 05       		.uleb128 0x5
 4910 0192 01       		.uleb128 0x1
 4911 0193 13       		.uleb128 0x13
 4912 0194 00       		.byte	0x0
 4913 0195 00       		.byte	0x0
 4914 0196 23       		.uleb128 0x23
 4915 0197 16       		.uleb128 0x16
 4916 0198 00       		.byte	0x0
 4917 0199 03       		.uleb128 0x3
 4918 019a 08       		.uleb128 0x8
 4919 019b 3A       		.uleb128 0x3a
 4920 019c 0B       		.uleb128 0xb
 4921 019d 3B       		.uleb128 0x3b
 4922 019e 0B       		.uleb128 0xb
 4923 019f 49       		.uleb128 0x49
 4924 01a0 13       		.uleb128 0x13
 4925 01a1 00       		.byte	0x0
 4926 01a2 00       		.byte	0x0
 4927 01a3 24       		.uleb128 0x24
 4928 01a4 2E       		.uleb128 0x2e
 4929 01a5 01       		.byte	0x1
 4930 01a6 03       		.uleb128 0x3
 4931 01a7 0E       		.uleb128 0xe
 4932 01a8 3A       		.uleb128 0x3a
 4933 01a9 0B       		.uleb128 0xb
 4934 01aa 3B       		.uleb128 0x3b
 4935 01ab 05       		.uleb128 0x5
 4936 01ac 27       		.uleb128 0x27
 4937 01ad 0C       		.uleb128 0xc
 4938 01ae 11       		.uleb128 0x11
 4939 01af 01       		.uleb128 0x1
 4940 01b0 12       		.uleb128 0x12
 4941 01b1 01       		.uleb128 0x1
 4942 01b2 40       		.uleb128 0x40
 4943 01b3 06       		.uleb128 0x6
 4944 01b4 01       		.uleb128 0x1
 4945 01b5 13       		.uleb128 0x13
 4946 01b6 00       		.byte	0x0
 4947 01b7 00       		.byte	0x0
 4948 01b8 25       		.uleb128 0x25
 4949 01b9 05       		.uleb128 0x5
 4950 01ba 00       		.byte	0x0
 4951 01bb 03       		.uleb128 0x3
 4952 01bc 0E       		.uleb128 0xe
 4953 01bd 3A       		.uleb128 0x3a
 4954 01be 0B       		.uleb128 0xb
 4955 01bf 3B       		.uleb128 0x3b
 4956 01c0 05       		.uleb128 0x5
 4957 01c1 49       		.uleb128 0x49
 4958 01c2 13       		.uleb128 0x13
 4959 01c3 02       		.uleb128 0x2
 4960 01c4 0A       		.uleb128 0xa
ARM GAS  /tmp/ccogXpQB.s 			page 120


 4961 01c5 00       		.byte	0x0
 4962 01c6 00       		.byte	0x0
 4963 01c7 26       		.uleb128 0x26
 4964 01c8 2E       		.uleb128 0x2e
 4965 01c9 01       		.byte	0x1
 4966 01ca 3F       		.uleb128 0x3f
 4967 01cb 0C       		.uleb128 0xc
 4968 01cc 03       		.uleb128 0x3
 4969 01cd 0E       		.uleb128 0xe
 4970 01ce 3A       		.uleb128 0x3a
 4971 01cf 0B       		.uleb128 0xb
 4972 01d0 3B       		.uleb128 0x3b
 4973 01d1 0B       		.uleb128 0xb
 4974 01d2 49       		.uleb128 0x49
 4975 01d3 13       		.uleb128 0x13
 4976 01d4 11       		.uleb128 0x11
 4977 01d5 01       		.uleb128 0x1
 4978 01d6 12       		.uleb128 0x12
 4979 01d7 01       		.uleb128 0x1
 4980 01d8 40       		.uleb128 0x40
 4981 01d9 06       		.uleb128 0x6
 4982 01da 01       		.uleb128 0x1
 4983 01db 13       		.uleb128 0x13
 4984 01dc 00       		.byte	0x0
 4985 01dd 00       		.byte	0x0
 4986 01de 27       		.uleb128 0x27
 4987 01df 34       		.uleb128 0x34
 4988 01e0 00       		.byte	0x0
 4989 01e1 03       		.uleb128 0x3
 4990 01e2 08       		.uleb128 0x8
 4991 01e3 3A       		.uleb128 0x3a
 4992 01e4 0B       		.uleb128 0xb
 4993 01e5 3B       		.uleb128 0x3b
 4994 01e6 0B       		.uleb128 0xb
 4995 01e7 49       		.uleb128 0x49
 4996 01e8 13       		.uleb128 0x13
 4997 01e9 02       		.uleb128 0x2
 4998 01ea 0A       		.uleb128 0xa
 4999 01eb 00       		.byte	0x0
 5000 01ec 00       		.byte	0x0
 5001 01ed 28       		.uleb128 0x28
 5002 01ee 2E       		.uleb128 0x2e
 5003 01ef 01       		.byte	0x1
 5004 01f0 3F       		.uleb128 0x3f
 5005 01f1 0C       		.uleb128 0xc
 5006 01f2 03       		.uleb128 0x3
 5007 01f3 0E       		.uleb128 0xe
 5008 01f4 3A       		.uleb128 0x3a
 5009 01f5 0B       		.uleb128 0xb
 5010 01f6 3B       		.uleb128 0x3b
 5011 01f7 0B       		.uleb128 0xb
 5012 01f8 27       		.uleb128 0x27
 5013 01f9 0C       		.uleb128 0xc
 5014 01fa 11       		.uleb128 0x11
 5015 01fb 01       		.uleb128 0x1
 5016 01fc 12       		.uleb128 0x12
 5017 01fd 01       		.uleb128 0x1
ARM GAS  /tmp/ccogXpQB.s 			page 121


 5018 01fe 40       		.uleb128 0x40
 5019 01ff 06       		.uleb128 0x6
 5020 0200 01       		.uleb128 0x1
 5021 0201 13       		.uleb128 0x13
 5022 0202 00       		.byte	0x0
 5023 0203 00       		.byte	0x0
 5024 0204 29       		.uleb128 0x29
 5025 0205 34       		.uleb128 0x34
 5026 0206 00       		.byte	0x0
 5027 0207 03       		.uleb128 0x3
 5028 0208 0E       		.uleb128 0xe
 5029 0209 3A       		.uleb128 0x3a
 5030 020a 0B       		.uleb128 0xb
 5031 020b 3B       		.uleb128 0x3b
 5032 020c 0B       		.uleb128 0xb
 5033 020d 49       		.uleb128 0x49
 5034 020e 13       		.uleb128 0x13
 5035 020f 02       		.uleb128 0x2
 5036 0210 0A       		.uleb128 0xa
 5037 0211 00       		.byte	0x0
 5038 0212 00       		.byte	0x0
 5039 0213 2A       		.uleb128 0x2a
 5040 0214 2E       		.uleb128 0x2e
 5041 0215 01       		.byte	0x1
 5042 0216 03       		.uleb128 0x3
 5043 0217 0E       		.uleb128 0xe
 5044 0218 3A       		.uleb128 0x3a
 5045 0219 0B       		.uleb128 0xb
 5046 021a 3B       		.uleb128 0x3b
 5047 021b 0B       		.uleb128 0xb
 5048 021c 11       		.uleb128 0x11
 5049 021d 01       		.uleb128 0x1
 5050 021e 12       		.uleb128 0x12
 5051 021f 01       		.uleb128 0x1
 5052 0220 40       		.uleb128 0x40
 5053 0221 06       		.uleb128 0x6
 5054 0222 01       		.uleb128 0x1
 5055 0223 13       		.uleb128 0x13
 5056 0224 00       		.byte	0x0
 5057 0225 00       		.byte	0x0
 5058 0226 2B       		.uleb128 0x2b
 5059 0227 2E       		.uleb128 0x2e
 5060 0228 01       		.byte	0x1
 5061 0229 03       		.uleb128 0x3
 5062 022a 0E       		.uleb128 0xe
 5063 022b 3A       		.uleb128 0x3a
 5064 022c 0B       		.uleb128 0xb
 5065 022d 3B       		.uleb128 0x3b
 5066 022e 0B       		.uleb128 0xb
 5067 022f 27       		.uleb128 0x27
 5068 0230 0C       		.uleb128 0xc
 5069 0231 11       		.uleb128 0x11
 5070 0232 01       		.uleb128 0x1
 5071 0233 12       		.uleb128 0x12
 5072 0234 01       		.uleb128 0x1
 5073 0235 40       		.uleb128 0x40
 5074 0236 06       		.uleb128 0x6
ARM GAS  /tmp/ccogXpQB.s 			page 122


 5075 0237 01       		.uleb128 0x1
 5076 0238 13       		.uleb128 0x13
 5077 0239 00       		.byte	0x0
 5078 023a 00       		.byte	0x0
 5079 023b 2C       		.uleb128 0x2c
 5080 023c 05       		.uleb128 0x5
 5081 023d 00       		.byte	0x0
 5082 023e 03       		.uleb128 0x3
 5083 023f 08       		.uleb128 0x8
 5084 0240 3A       		.uleb128 0x3a
 5085 0241 0B       		.uleb128 0xb
 5086 0242 3B       		.uleb128 0x3b
 5087 0243 0B       		.uleb128 0xb
 5088 0244 49       		.uleb128 0x49
 5089 0245 13       		.uleb128 0x13
 5090 0246 02       		.uleb128 0x2
 5091 0247 0A       		.uleb128 0xa
 5092 0248 00       		.byte	0x0
 5093 0249 00       		.byte	0x0
 5094 024a 2D       		.uleb128 0x2d
 5095 024b 2E       		.uleb128 0x2e
 5096 024c 01       		.byte	0x1
 5097 024d 03       		.uleb128 0x3
 5098 024e 08       		.uleb128 0x8
 5099 024f 3A       		.uleb128 0x3a
 5100 0250 0B       		.uleb128 0xb
 5101 0251 3B       		.uleb128 0x3b
 5102 0252 0B       		.uleb128 0xb
 5103 0253 11       		.uleb128 0x11
 5104 0254 01       		.uleb128 0x1
 5105 0255 12       		.uleb128 0x12
 5106 0256 01       		.uleb128 0x1
 5107 0257 40       		.uleb128 0x40
 5108 0258 06       		.uleb128 0x6
 5109 0259 01       		.uleb128 0x1
 5110 025a 13       		.uleb128 0x13
 5111 025b 00       		.byte	0x0
 5112 025c 00       		.byte	0x0
 5113 025d 2E       		.uleb128 0x2e
 5114 025e 34       		.uleb128 0x34
 5115 025f 00       		.byte	0x0
 5116 0260 03       		.uleb128 0x3
 5117 0261 0E       		.uleb128 0xe
 5118 0262 3A       		.uleb128 0x3a
 5119 0263 0B       		.uleb128 0xb
 5120 0264 3B       		.uleb128 0x3b
 5121 0265 05       		.uleb128 0x5
 5122 0266 49       		.uleb128 0x49
 5123 0267 13       		.uleb128 0x13
 5124 0268 3F       		.uleb128 0x3f
 5125 0269 0C       		.uleb128 0xc
 5126 026a 3C       		.uleb128 0x3c
 5127 026b 0C       		.uleb128 0xc
 5128 026c 00       		.byte	0x0
 5129 026d 00       		.byte	0x0
 5130 026e 2F       		.uleb128 0x2f
 5131 026f 34       		.uleb128 0x34
ARM GAS  /tmp/ccogXpQB.s 			page 123


 5132 0270 00       		.byte	0x0
 5133 0271 03       		.uleb128 0x3
 5134 0272 0E       		.uleb128 0xe
 5135 0273 3A       		.uleb128 0x3a
 5136 0274 0B       		.uleb128 0xb
 5137 0275 3B       		.uleb128 0x3b
 5138 0276 0B       		.uleb128 0xb
 5139 0277 49       		.uleb128 0x49
 5140 0278 13       		.uleb128 0x13
 5141 0279 3F       		.uleb128 0x3f
 5142 027a 0C       		.uleb128 0xc
 5143 027b 3C       		.uleb128 0x3c
 5144 027c 0C       		.uleb128 0xc
 5145 027d 00       		.byte	0x0
 5146 027e 00       		.byte	0x0
 5147 027f 30       		.uleb128 0x30
 5148 0280 34       		.uleb128 0x34
 5149 0281 00       		.byte	0x0
 5150 0282 03       		.uleb128 0x3
 5151 0283 0E       		.uleb128 0xe
 5152 0284 3A       		.uleb128 0x3a
 5153 0285 0B       		.uleb128 0xb
 5154 0286 3B       		.uleb128 0x3b
 5155 0287 0B       		.uleb128 0xb
 5156 0288 49       		.uleb128 0x49
 5157 0289 13       		.uleb128 0x13
 5158 028a 3F       		.uleb128 0x3f
 5159 028b 0C       		.uleb128 0xc
 5160 028c 02       		.uleb128 0x2
 5161 028d 0A       		.uleb128 0xa
 5162 028e 00       		.byte	0x0
 5163 028f 00       		.byte	0x0
 5164 0290 00       		.byte	0x0
 5165              		.section	.debug_pubnames,"",%progbits
 5166 0000 6A000000 		.4byte	0x6a
 5167 0004 0200     		.2byte	0x2
 5168 0006 00000000 		.4byte	.Ldebug_info0
 5169 000a 1B1A0000 		.4byte	0x1a1b
 5170 000e A6170000 		.4byte	0x17a6
 5171 0012 6D61696E 		.ascii	"main\000"
 5171      00
 5172 0017 CF170000 		.4byte	0x17cf
 5173 001b 5443305F 		.ascii	"TC0_IrqHandler\000"
 5173      49727148 
 5173      616E646C 
 5173      657200
 5174 002a F7170000 		.4byte	0x17f7
 5175 002e 4144435F 		.ascii	"ADC_IrqHandler\000"
 5175      49727148 
 5175      616E646C 
 5175      657200
 5176 003d D2190000 		.4byte	0x19d2
 5177 0041 63757272 		.ascii	"current\000"
 5177      656E7400 
 5178 0049 E4190000 		.4byte	0x19e4
 5179 004d 70726576 		.ascii	"previous\000"
 5179      696F7573 
ARM GAS  /tmp/ccogXpQB.s 			page 124


 5179      00
 5180 0056 F6190000 		.4byte	0x19f6
 5181 005a 6E657874 		.ascii	"next\000"
 5181      00
 5182 005f 081A0000 		.4byte	0x1a08
 5183 0063 5F737461 		.ascii	"_state\000"
 5183      746500
 5184 006a 00000000 		.4byte	0x0
 5185              		.section	.debug_pubtypes,"",%progbits
 5186 0000 7B010000 		.4byte	0x17b
 5187 0004 0200     		.2byte	0x2
 5188 0006 00000000 		.4byte	.Ldebug_info0
 5189 000a 1B1A0000 		.4byte	0x1a1b
 5190 000e 61000000 		.4byte	0x61
 5191 0012 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 5191      4B5F5245 
 5191      43555253 
 5191      4956455F 
 5191      5400
 5192 0024 73000000 		.4byte	0x73
 5193 0028 5F66706F 		.ascii	"_fpos_t\000"
 5193      735F7400 
 5194 0030 7E000000 		.4byte	0x7e
 5195 0034 77696E74 		.ascii	"wint_t\000"
 5195      5F7400
 5196 003b DE000000 		.4byte	0xde
 5197 003f 5F6D6273 		.ascii	"_mbstate_t\000"
 5197      74617465 
 5197      5F7400
 5198 004a E9000000 		.4byte	0xe9
 5199 004e 5F666C6F 		.ascii	"_flock_t\000"
 5199      636B5F74 
 5199      00
 5200 0057 F6000000 		.4byte	0xf6
 5201 005b 5F5F554C 		.ascii	"__ULong\000"
 5201      6F6E6700 
 5202 0063 08010000 		.4byte	0x108
 5203 0067 5F426967 		.ascii	"_Bigint\000"
 5203      696E7400 
 5204 006f 7D010000 		.4byte	0x17d
 5205 0073 5F5F746D 		.ascii	"__tm\000"
 5205      00
 5206 0078 08020000 		.4byte	0x208
 5207 007c 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5207      65786974 
 5207      5F617267 
 5207      7300
 5208 008a 61020000 		.4byte	0x261
 5209 008e 5F617465 		.ascii	"_atexit\000"
 5209      78697400 
 5210 0096 C6020000 		.4byte	0x2c6
 5211 009a 5F5F7362 		.ascii	"__sbuf\000"
 5211      756600
 5212 00a1 F5020000 		.4byte	0x2f5
 5213 00a5 5F5F7346 		.ascii	"__sFILE\000"
 5213      494C4500 
 5214 00ad 75060000 		.4byte	0x675
ARM GAS  /tmp/ccogXpQB.s 			page 125


 5215 00b1 5F5F4649 		.ascii	"__FILE\000"
 5215      4C4500
 5216 00b8 81060000 		.4byte	0x681
 5217 00bc 5F676C75 		.ascii	"_glue\000"
 5217      6500
 5218 00c2 C8060000 		.4byte	0x6c8
 5219 00c6 5F72616E 		.ascii	"_rand48\000"
 5219      64343800 
 5220 00ce 74040000 		.4byte	0x474
 5221 00d2 5F726565 		.ascii	"_reent\000"
 5221      6E7400
 5222 00d9 2D090000 		.4byte	0x92d
 5223 00dd 75696E74 		.ascii	"uint8_t\000"
 5223      385F7400 
 5224 00e5 38090000 		.4byte	0x938
 5225 00e9 696E7431 		.ascii	"int16_t\000"
 5225      365F7400 
 5226 00f1 43090000 		.4byte	0x943
 5227 00f5 75696E74 		.ascii	"uint16_t\000"
 5227      31365F74 
 5227      00
 5228 00fe 4E090000 		.4byte	0x94e
 5229 0102 75696E74 		.ascii	"uint32_t\000"
 5229      33325F74 
 5229      00
 5230 010b 68090000 		.4byte	0x968
 5231 010f 4952516E 		.ascii	"IRQn\000"
 5231      00
 5232 0114 650A0000 		.4byte	0xa65
 5233 0118 4952516E 		.ascii	"IRQn_Type\000"
 5233      5F547970 
 5233      6500
 5234 0122 A90B0000 		.4byte	0xba9
 5235 0126 4E564943 		.ascii	"NVIC_Type\000"
 5235      5F547970 
 5235      6500
 5236 0130 2A0D0000 		.4byte	0xd2a
 5237 0134 5343425F 		.ascii	"SCB_Type\000"
 5237      54797065 
 5237      00
 5238 013d D80F0000 		.4byte	0xfd8
 5239 0141 41646300 		.ascii	"Adc\000"
 5240 0145 E7140000 		.4byte	0x14e7
 5241 0149 50696F00 		.ascii	"Pio\000"
 5242 014d CA150000 		.4byte	0x15ca
 5243 0151 54634368 		.ascii	"TcChannel\000"
 5243      616E6E65 
 5243      6C00
 5244 015b 94160000 		.4byte	0x1694
 5245 015f 546300   		.ascii	"Tc\000"
 5246 0162 D6160000 		.4byte	0x16d6
 5247 0166 57647400 		.ascii	"Wdt\000"
 5248 016a E2160000 		.4byte	0x16e2
 5249 016e 5F50696E 		.ascii	"_Pin\000"
 5249      00
 5250 0173 3A170000 		.4byte	0x173a
 5251 0177 50696E00 		.ascii	"Pin\000"
ARM GAS  /tmp/ccogXpQB.s 			page 126


 5252 017b 00000000 		.4byte	0x0
 5253              		.section	.debug_aranges,"",%progbits
 5254 0000 54000000 		.4byte	0x54
 5255 0004 0200     		.2byte	0x2
 5256 0006 00000000 		.4byte	.Ldebug_info0
 5257 000a 04       		.byte	0x4
 5258 000b 00       		.byte	0x0
 5259 000c 0000     		.2byte	0x0
 5260 000e 0000     		.2byte	0x0
 5261 0010 00000000 		.4byte	.LFB14
 5262 0014 36000000 		.4byte	.LFE14-.LFB14
 5263 0018 00000000 		.4byte	.LFB20
 5264 001c 5C000000 		.4byte	.LFE20-.LFB20
 5265 0020 00000000 		.4byte	.LFB35
 5266 0024 BE000000 		.4byte	.LFE35-.LFB35
 5267 0028 00000000 		.4byte	.LFB36
 5268 002c 2A000000 		.4byte	.LFE36-.LFB36
 5269 0030 00000000 		.4byte	.LFB37
 5270 0034 10010000 		.4byte	.LFE37-.LFB37
 5271 0038 00000000 		.4byte	.LFB38
 5272 003c 82010000 		.4byte	.LFE38-.LFB38
 5273 0040 00000000 		.4byte	.LFB39
 5274 0044 E0000000 		.4byte	.LFE39-.LFB39
 5275 0048 00000000 		.4byte	.LFB40
 5276 004c AC000000 		.4byte	.LFE40-.LFB40
 5277 0050 00000000 		.4byte	0x0
 5278 0054 00000000 		.4byte	0x0
 5279              		.section	.debug_ranges,"",%progbits
 5280              	.Ldebug_ranges0:
 5281 0000 00000000 		.4byte	.LFB14
 5282 0004 36000000 		.4byte	.LFE14
 5283 0008 00000000 		.4byte	.LFB20
 5284 000c 5C000000 		.4byte	.LFE20
 5285 0010 00000000 		.4byte	.LFB35
 5286 0014 BE000000 		.4byte	.LFE35
 5287 0018 00000000 		.4byte	.LFB36
 5288 001c 2A000000 		.4byte	.LFE36
 5289 0020 00000000 		.4byte	.LFB37
 5290 0024 10010000 		.4byte	.LFE37
 5291 0028 00000000 		.4byte	.LFB38
 5292 002c 82010000 		.4byte	.LFE38
 5293 0030 00000000 		.4byte	.LFB39
 5294 0034 E0000000 		.4byte	.LFE39
 5295 0038 00000000 		.4byte	.LFB40
 5296 003c AC000000 		.4byte	.LFE40
 5297 0040 00000000 		.4byte	0x0
 5298 0044 00000000 		.4byte	0x0
 5299              		.section	.debug_str,"MS",%progbits,1
 5300              	.LASF163:
 5301 0000 52534552 		.ascii	"RSERVED1\000"
 5301      56454431 
 5301      00
 5302              	.LASF322:
 5303 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 5303      5F456E61 
 5303      626C6549 
 5303      525100
ARM GAS  /tmp/ccogXpQB.s 			page 127


 5304              	.LASF149:
 5305 0018 5443325F 		.ascii	"TC2_IRQn\000"
 5305      4952516E 
 5305      00
 5306              	.LASF344:
 5307 0021 7670696E 		.ascii	"vpins\000"
 5307      7300
 5308              	.LASF14:
 5309 0027 5F5F7661 		.ascii	"__value\000"
 5309      6C756500 
 5310              	.LASF83:
 5311 002f 5F5F7366 		.ascii	"__sf\000"
 5311      00
 5312              	.LASF50:
 5313 0034 5F726561 		.ascii	"_read\000"
 5313      6400
 5314              	.LASF172:
 5315 003a 4E564943 		.ascii	"NVIC_Type\000"
 5315      5F547970 
 5315      6500
 5316              	.LASF51:
 5317 0044 5F777269 		.ascii	"_write\000"
 5317      746500
 5318              	.LASF95:
 5319 004b 5F617363 		.ascii	"_asctime_buf\000"
 5319      74696D65 
 5319      5F627566 
 5319      00
 5320              	.LASF77:
 5321 0058 5F637674 		.ascii	"_cvtlen\000"
 5321      6C656E00 
 5322              	.LASF262:
 5323 0060 50494F5F 		.ascii	"PIO_AIMMR\000"
 5323      41494D4D 
 5323      5200
 5324              	.LASF202:
 5325 006a 4144435F 		.ascii	"ADC_EMR\000"
 5325      454D5200 
 5326              	.LASF199:
 5327 0072 4144435F 		.ascii	"ADC_ISR\000"
 5327      49535200 
 5328              	.LASF343:
 5329 007a 5F737461 		.ascii	"_state\000"
 5329      746500
 5330              	.LASF114:
 5331 0081 5F756E75 		.ascii	"_unused\000"
 5331      73656400 
 5332              	.LASF24:
 5333 0089 5F5F746D 		.ascii	"__tm\000"
 5333      00
 5334              	.LASF110:
 5335 008e 5F776373 		.ascii	"_wcsrtombs_state\000"
 5335      72746F6D 
 5335      62735F73 
 5335      74617465 
 5335      00
 5336              	.LASF55:
ARM GAS  /tmp/ccogXpQB.s 			page 128


 5337 009f 5F6E6275 		.ascii	"_nbuf\000"
 5337      6600
 5338              	.LASF25:
 5339 00a5 5F5F746D 		.ascii	"__tm_sec\000"
 5339      5F736563 
 5339      00
 5340              	.LASF103:
 5341 00ae 5F6C3634 		.ascii	"_l64a_buf\000"
 5341      615F6275 
 5341      6600
 5342              	.LASF175:
 5343 00b8 56544F52 		.ascii	"VTOR\000"
 5343      00
 5344              	.LASF333:
 5345 00bd 73746174 		.ascii	"state\000"
 5345      6500
 5346              	.LASF59:
 5347 00c3 5F6C6F63 		.ascii	"_lock\000"
 5347      6B00
 5348              	.LASF282:
 5349 00c9 50494F5F 		.ascii	"PIO_PCISR\000"
 5349      50434953 
 5349      5200
 5350              	.LASF313:
 5351 00d3 54435F46 		.ascii	"TC_FMR\000"
 5351      4D5200
 5352              	.LASF207:
 5353 00da 52657365 		.ascii	"Reserved3\000"
 5353      72766564 
 5353      3300
 5354              	.LASF255:
 5355 00e4 52657365 		.ascii	"Reserved7\000"
 5355      72766564 
 5355      3700
 5356              	.LASF320:
 5357 00ee 74797065 		.ascii	"type\000"
 5357      00
 5358              	.LASF91:
 5359 00f3 5F6D756C 		.ascii	"_mult\000"
 5359      7400
 5360              	.LASF213:
 5361 00f9 4144435F 		.ascii	"ADC_RPR\000"
 5361      52505200 
 5362              	.LASF128:
 5363 0101 52535443 		.ascii	"RSTC_IRQn\000"
 5363      5F495251 
 5363      6E00
 5364              	.LASF217:
 5365 010b 4144435F 		.ascii	"ADC_RNPR\000"
 5365      524E5052 
 5365      00
 5366              	.LASF166:
 5367 0114 49435052 		.ascii	"ICPR\000"
 5367      00
 5368              	.LASF286:
 5369 0119 50494F5F 		.ascii	"PIO_TPR\000"
 5369      54505200 
ARM GAS  /tmp/ccogXpQB.s 			page 129


 5370              	.LASF311:
 5371 0121 54435F51 		.ascii	"TC_QIMR\000"
 5371      494D5200 
 5372              	.LASF219:
 5373 0129 4144435F 		.ascii	"ADC_TNPR\000"
 5373      544E5052 
 5373      00
 5374              	.LASF251:
 5375 0132 50494F5F 		.ascii	"PIO_SCDR\000"
 5375      53434452 
 5375      00
 5376              	.LASF250:
 5377 013b 50494F5F 		.ascii	"PIO_IFSCSR\000"
 5377      49465343 
 5377      535200
 5378              	.LASF11:
 5379 0146 5F5F7763 		.ascii	"__wch\000"
 5379      6800
 5380              	.LASF306:
 5381 014c 54435F43 		.ascii	"TC_CHANNEL\000"
 5381      48414E4E 
 5381      454C00
 5382              	.LASF211:
 5383 0157 4144435F 		.ascii	"ADC_WPSR\000"
 5383      57505352 
 5383      00
 5384              	.LASF47:
 5385 0160 5F66696C 		.ascii	"_file\000"
 5385      6500
 5386              	.LASF34:
 5387 0166 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5387      65786974 
 5387      5F617267 
 5387      7300
 5388              	.LASF176:
 5389 0174 41495243 		.ascii	"AIRCR\000"
 5389      5200
 5390              	.LASF156:
 5391 017a 43524343 		.ascii	"CRCCU_IRQn\000"
 5391      555F4952 
 5391      516E00
 5392              	.LASF252:
 5393 0185 50494F5F 		.ascii	"PIO_PPDDR\000"
 5393      50504444 
 5393      5200
 5394              	.LASF294:
 5395 018f 54435F43 		.ascii	"TC_CCR\000"
 5395      435200
 5396              	.LASF106:
 5397 0196 5F6D6272 		.ascii	"_mbrlen_state\000"
 5397      6C656E5F 
 5397      73746174 
 5397      6500
 5398              	.LASF7:
 5399 01a4 6C6F6E67 		.ascii	"long int\000"
 5399      20696E74 
 5399      00
ARM GAS  /tmp/ccogXpQB.s 			page 130


 5400              	.LASF338:
 5401 01ad 5F696D70 		.ascii	"_impure_ptr\000"
 5401      7572655F 
 5401      70747200 
 5402              	.LASF74:
 5403 01b9 5F726573 		.ascii	"_result_k\000"
 5403      756C745F 
 5403      6B00
 5404              	.LASF44:
 5405 01c3 5F73697A 		.ascii	"_size\000"
 5405      6500
 5406              	.LASF173:
 5407 01c9 43505549 		.ascii	"CPUID\000"
 5407      4400
 5408              	.LASF256:
 5409 01cf 50494F5F 		.ascii	"PIO_OWER\000"
 5409      4F574552 
 5409      00
 5410              	.LASF96:
 5411 01d8 5F6C6F63 		.ascii	"_localtime_buf\000"
 5411      616C7469 
 5411      6D655F62 
 5411      756600
 5412              	.LASF231:
 5413 01e7 50494F5F 		.ascii	"PIO_IFSR\000"
 5413      49465352 
 5413      00
 5414              	.LASF215:
 5415 01f0 4144435F 		.ascii	"ADC_TPR\000"
 5415      54505200 
 5416              	.LASF326:
 5417 01f8 6D61696E 		.ascii	"main\000"
 5417      00
 5418              	.LASF230:
 5419 01fd 50494F5F 		.ascii	"PIO_IFDR\000"
 5419      49464452 
 5419      00
 5420              	.LASF324:
 5421 0206 4952516E 		.ascii	"IRQn\000"
 5421      00
 5422              	.LASF253:
 5423 020b 50494F5F 		.ascii	"PIO_PPDER\000"
 5423      50504445 
 5423      5200
 5424              	.LASF264:
 5425 0215 50494F5F 		.ascii	"PIO_ESR\000"
 5425      45535200 
 5426              	.LASF152:
 5427 021d 5443355F 		.ascii	"TC5_IRQn\000"
 5427      4952516E 
 5427      00
 5428              	.LASF29:
 5429 0226 5F5F746D 		.ascii	"__tm_mon\000"
 5429      5F6D6F6E 
 5429      00
 5430              	.LASF323:
 5431 022f 4E564943 		.ascii	"NVIC_SetPriority\000"
ARM GAS  /tmp/ccogXpQB.s 			page 131


 5431      5F536574 
 5431      5072696F 
 5431      72697479 
 5431      00
 5432              	.LASF228:
 5433 0240 50494F5F 		.ascii	"PIO_OSR\000"
 5433      4F535200 
 5434              	.LASF126:
 5435 0248 53797354 		.ascii	"SysTick_IRQn\000"
 5435      69636B5F 
 5435      4952516E 
 5435      00
 5436              	.LASF69:
 5437 0255 5F637572 		.ascii	"_current_category\000"
 5437      72656E74 
 5437      5F636174 
 5437      65676F72 
 5437      7900
 5438              	.LASF174:
 5439 0267 49435352 		.ascii	"ICSR\000"
 5439      00
 5440              	.LASF93:
 5441 026c 5F756E75 		.ascii	"_unused_rand\000"
 5441      7365645F 
 5441      72616E64 
 5441      00
 5442              	.LASF0:
 5443 0279 7369676E 		.ascii	"signed char\000"
 5443      65642063 
 5443      68617200 
 5444              	.LASF115:
 5445 0285 75696E74 		.ascii	"uint8_t\000"
 5445      385F7400 
 5446              	.LASF330:
 5447 028d 74696D65 		.ascii	"timestamp\000"
 5447      7374616D 
 5447      7000
 5448              	.LASF305:
 5449 0297 54634368 		.ascii	"TcChannel\000"
 5449      616E6E65 
 5449      6C00
 5450              	.LASF246:
 5451 02a1 50494F5F 		.ascii	"PIO_ABCDSR\000"
 5451      41424344 
 5451      535200
 5452              	.LASF288:
 5453 02ac 50494F5F 		.ascii	"PIO_RNPR\000"
 5453      524E5052 
 5453      00
 5454              	.LASF161:
 5455 02b5 52455345 		.ascii	"RESERVED0\000"
 5455      52564544 
 5455      3000
 5456              	.LASF1:
 5457 02bf 756E7369 		.ascii	"unsigned char\000"
 5457      676E6564 
 5457      20636861 
ARM GAS  /tmp/ccogXpQB.s 			page 132


 5457      7200
 5458              	.LASF167:
 5459 02cd 52455345 		.ascii	"RESERVED3\000"
 5459      52564544 
 5459      3300
 5460              	.LASF169:
 5461 02d7 52455345 		.ascii	"RESERVED4\000"
 5461      52564544 
 5461      3400
 5462              	.LASF170:
 5463 02e1 52455345 		.ascii	"RESERVED5\000"
 5463      52564544 
 5463      3500
 5464              	.LASF243:
 5465 02eb 50494F5F 		.ascii	"PIO_PUDR\000"
 5465      50554452 
 5465      00
 5466              	.LASF290:
 5467 02f4 50494F5F 		.ascii	"PIO_TNPR\000"
 5467      544E5052 
 5467      00
 5468              	.LASF168:
 5469 02fd 49414252 		.ascii	"IABR\000"
 5469      00
 5470              	.LASF62:
 5471 0302 5F726565 		.ascii	"_reent\000"
 5471      6E7400
 5472              	.LASF315:
 5473 0309 5744545F 		.ascii	"WDT_CR\000"
 5473      435200
 5474              	.LASF274:
 5475 0310 50494F5F 		.ascii	"PIO_WPSR\000"
 5475      57505352 
 5475      00
 5476              	.LASF165:
 5477 0319 52455345 		.ascii	"RESERVED2\000"
 5477      52564544 
 5477      3200
 5478              	.LASF122:
 5479 0323 55736167 		.ascii	"UsageFault_IRQn\000"
 5479      65466175 
 5479      6C745F49 
 5479      52516E00 
 5480              	.LASF298:
 5481 0333 54435F52 		.ascii	"TC_RA\000"
 5481      4100
 5482              	.LASF299:
 5483 0339 54435F52 		.ascii	"TC_RB\000"
 5483      4200
 5484              	.LASF300:
 5485 033f 54435F52 		.ascii	"TC_RC\000"
 5485      4300
 5486              	.LASF84:
 5487 0345 63686172 		.ascii	"char\000"
 5487      00
 5488              	.LASF41:
 5489 034a 5F666E73 		.ascii	"_fns\000"
ARM GAS  /tmp/ccogXpQB.s 			page 133


 5489      00
 5490              	.LASF285:
 5491 034f 50494F5F 		.ascii	"PIO_RCR\000"
 5491      52435200 
 5492              	.LASF186:
 5493 0357 5343425F 		.ascii	"SCB_Type\000"
 5493      54797065 
 5493      00
 5494              	.LASF308:
 5495 0360 54435F42 		.ascii	"TC_BMR\000"
 5495      4D5200
 5496              	.LASF53:
 5497 0367 5F636C6F 		.ascii	"_close\000"
 5497      736500
 5498              	.LASF180:
 5499 036e 44465352 		.ascii	"DFSR\000"
 5499      00
 5500              	.LASF136:
 5501 0373 534D435F 		.ascii	"SMC_IRQn\000"
 5501      4952516E 
 5501      00
 5502              	.LASF267:
 5503 037c 52657365 		.ascii	"Reserved10\000"
 5503      72766564 
 5503      313000
 5504              	.LASF271:
 5505 0387 52657365 		.ascii	"Reserved11\000"
 5505      72766564 
 5505      313100
 5506              	.LASF275:
 5507 0392 52657365 		.ascii	"Reserved12\000"
 5507      72766564 
 5507      313200
 5508              	.LASF277:
 5509 039d 52657365 		.ascii	"Reserved13\000"
 5509      72766564 
 5509      313300
 5510              	.LASF241:
 5511 03a8 50494F5F 		.ascii	"PIO_MDDR\000"
 5511      4D444452 
 5511      00
 5512              	.LASF312:
 5513 03b1 54435F51 		.ascii	"TC_QISR\000"
 5513      49535200 
 5514              	.LASF64:
 5515 03b9 5F737464 		.ascii	"_stdin\000"
 5515      696E00
 5516              	.LASF235:
 5517 03c0 50494F5F 		.ascii	"PIO_PDSR\000"
 5517      50445352 
 5517      00
 5518              	.LASF179:
 5519 03c9 48465352 		.ascii	"HFSR\000"
 5519      00
 5520              	.LASF270:
 5521 03ce 50494F5F 		.ascii	"PIO_FRLHSR\000"
 5521      46524C48 
ARM GAS  /tmp/ccogXpQB.s 			page 134


 5521      535200
 5522              	.LASF301:
 5523 03d9 54435F53 		.ascii	"TC_SR\000"
 5523      5200
 5524              	.LASF272:
 5525 03df 50494F5F 		.ascii	"PIO_LOCKSR\000"
 5525      4C4F434B 
 5525      535200
 5526              	.LASF268:
 5527 03ea 50494F5F 		.ascii	"PIO_FELLSR\000"
 5527      46454C4C 
 5527      535200
 5528              	.LASF155:
 5529 03f5 50574D5F 		.ascii	"PWM_IRQn\000"
 5529      4952516E 
 5529      00
 5530              	.LASF240:
 5531 03fe 50494F5F 		.ascii	"PIO_MDER\000"
 5531      4D444552 
 5531      00
 5532              	.LASF164:
 5533 0407 49535052 		.ascii	"ISPR\000"
 5533      00
 5534              	.LASF224:
 5535 040c 50494F5F 		.ascii	"PIO_PDR\000"
 5535      50445200 
 5536              	.LASF214:
 5537 0414 4144435F 		.ascii	"ADC_RCR\000"
 5537      52435200 
 5538              	.LASF177:
 5539 041c 53484353 		.ascii	"SHCSR\000"
 5539      5200
 5540              	.LASF206:
 5541 0422 4144435F 		.ascii	"ADC_CDR\000"
 5541      43445200 
 5542              	.LASF171:
 5543 042a 53544952 		.ascii	"STIR\000"
 5543      00
 5544              	.LASF266:
 5545 042f 50494F5F 		.ascii	"PIO_ELSR\000"
 5545      454C5352 
 5545      00
 5546              	.LASF157:
 5547 0438 4143435F 		.ascii	"ACC_IRQn\000"
 5547      4952516E 
 5547      00
 5548              	.LASF49:
 5549 0441 5F636F6F 		.ascii	"_cookie\000"
 5549      6B696500 
 5550              	.LASF22:
 5551 0449 5F776473 		.ascii	"_wds\000"
 5551      00
 5552              	.LASF132:
 5553 044e 504D435F 		.ascii	"PMC_IRQn\000"
 5553      4952516E 
 5553      00
 5554              	.LASF133:
ARM GAS  /tmp/ccogXpQB.s 			page 135


 5555 0457 4546435F 		.ascii	"EFC_IRQn\000"
 5555      4952516E 
 5555      00
 5556              	.LASF81:
 5557 0460 5F736967 		.ascii	"_sig_func\000"
 5557      5F66756E 
 5557      6300
 5558              	.LASF57:
 5559 046a 5F6F6666 		.ascii	"_offset\000"
 5559      73657400 
 5560              	.LASF78:
 5561 0472 5F637674 		.ascii	"_cvtbuf\000"
 5561      62756600 
 5562              	.LASF127:
 5563 047a 53555043 		.ascii	"SUPC_IRQn\000"
 5563      5F495251 
 5563      6E00
 5564              	.LASF303:
 5565 0484 54435F49 		.ascii	"TC_IDR\000"
 5565      445200
 5566              	.LASF148:
 5567 048b 5443315F 		.ascii	"TC1_IRQn\000"
 5567      4952516E 
 5567      00
 5568              	.LASF139:
 5569 0494 50494F43 		.ascii	"PIOC_IRQn\000"
 5569      5F495251 
 5569      6E00
 5570              	.LASF225:
 5571 049e 50494F5F 		.ascii	"PIO_PSR\000"
 5571      50535200 
 5572              	.LASF329:
 5573 04a6 4144435F 		.ascii	"ADC_IrqHandler\000"
 5573      49727148 
 5573      616E646C 
 5573      657200
 5574              	.LASF222:
 5575 04b5 4144435F 		.ascii	"ADC_PTSR\000"
 5575      50545352 
 5575      00
 5576              	.LASF130:
 5577 04be 5254545F 		.ascii	"RTT_IRQn\000"
 5577      4952516E 
 5577      00
 5578              	.LASF244:
 5579 04c7 50494F5F 		.ascii	"PIO_PUER\000"
 5579      50554552 
 5579      00
 5580              	.LASF158:
 5581 04d0 5544505F 		.ascii	"UDP_IRQn\000"
 5581      4952516E 
 5581      00
 5582              	.LASF154:
 5583 04d9 44414343 		.ascii	"DACC_IRQn\000"
 5583      5F495251 
 5583      6E00
 5584              	.LASF119:
ARM GAS  /tmp/ccogXpQB.s 			page 136


 5585 04e3 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 5585      61736B61 
 5585      626C6549 
 5585      6E745F49 
 5585      52516E00 
 5586              	.LASF193:
 5587 04f7 4144435F 		.ascii	"ADC_CHSR\000"
 5587      43485352 
 5587      00
 5588              	.LASF75:
 5589 0500 5F703573 		.ascii	"_p5s\000"
 5589      00
 5590              	.LASF18:
 5591 0505 6C6F6E67 		.ascii	"long unsigned int\000"
 5591      20756E73 
 5591      69676E65 
 5591      6420696E 
 5591      7400
 5592              	.LASF120:
 5593 0517 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 5593      72794D61 
 5593      6E616765 
 5593      6D656E74 
 5593      5F495251 
 5594              	.LASF302:
 5595 052d 54435F49 		.ascii	"TC_IER\000"
 5595      455200
 5596              	.LASF45:
 5597 0534 5F5F7346 		.ascii	"__sFILE\000"
 5597      494C4500 
 5598              	.LASF71:
 5599 053c 5F5F7364 		.ascii	"__sdidinit\000"
 5599      6964696E 
 5599      697400
 5600              	.LASF61:
 5601 0547 5F666C61 		.ascii	"_flags2\000"
 5601      67733200 
 5602              	.LASF159:
 5603 054f 4952516E 		.ascii	"IRQn_Type\000"
 5603      5F547970 
 5603      6500
 5604              	.LASF327:
 5605 0559 5443305F 		.ascii	"TC0_IrqHandler\000"
 5605      49727148 
 5605      616E646C 
 5605      657200
 5606              	.LASF337:
 5607 0568 6C696E65 		.ascii	"line\000"
 5607      00
 5608              	.LASF8:
 5609 056d 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 5609      4B5F5245 
 5609      43555253 
 5609      4956455F 
 5609      5400
 5610              	.LASF63:
 5611 057f 5F657272 		.ascii	"_errno\000"
ARM GAS  /tmp/ccogXpQB.s 			page 137


 5611      6E6F00
 5612              	.LASF204:
 5613 0586 4144435F 		.ascii	"ADC_CGR\000"
 5613      43475200 
 5614              	.LASF104:
 5615 058e 5F736967 		.ascii	"_signal_buf\000"
 5615      6E616C5F 
 5615      62756600 
 5616              	.LASF233:
 5617 059a 50494F5F 		.ascii	"PIO_CODR\000"
 5617      434F4452 
 5617      00
 5618              	.LASF188:
 5619 05a3 4144435F 		.ascii	"ADC_MR\000"
 5619      4D5200
 5620              	.LASF195:
 5621 05aa 4144435F 		.ascii	"ADC_LCDR\000"
 5621      4C434452 
 5621      00
 5622              	.LASF131:
 5623 05b3 5744545F 		.ascii	"WDT_IRQn\000"
 5623      4952516E 
 5623      00
 5624              	.LASF335:
 5625 05bc 61726763 		.ascii	"argc\000"
 5625      00
 5626              	.LASF332:
 5627 05c1 70696E73 		.ascii	"pins\000"
 5627      00
 5628              	.LASF23:
 5629 05c6 5F426967 		.ascii	"_Bigint\000"
 5629      696E7400 
 5630              	.LASF20:
 5631 05ce 5F6D6178 		.ascii	"_maxwds\000"
 5631      77647300 
 5632              	.LASF336:
 5633 05d6 61726776 		.ascii	"argv\000"
 5633      00
 5634              	.LASF72:
 5635 05db 5F5F636C 		.ascii	"__cleanup\000"
 5635      65616E75 
 5635      7000
 5636              	.LASF121:
 5637 05e5 42757346 		.ascii	"BusFault_IRQn\000"
 5637      61756C74 
 5637      5F495251 
 5637      6E00
 5638              	.LASF295:
 5639 05f3 54435F43 		.ascii	"TC_CMR\000"
 5639      4D5200
 5640              	.LASF80:
 5641 05fa 5F617465 		.ascii	"_atexit0\000"
 5641      78697430 
 5641      00
 5642              	.LASF237:
 5643 0603 50494F5F 		.ascii	"PIO_IDR\000"
 5643      49445200 
ARM GAS  /tmp/ccogXpQB.s 			page 138


 5644              	.LASF68:
 5645 060b 5F656D65 		.ascii	"_emergency\000"
 5645      7267656E 
 5645      637900
 5646              	.LASF5:
 5647 0616 6C6F6E67 		.ascii	"long long int\000"
 5647      206C6F6E 
 5647      6720696E 
 5647      7400
 5648              	.LASF87:
 5649 0624 5F6E696F 		.ascii	"_niobs\000"
 5649      627300
 5650              	.LASF144:
 5651 062b 54574931 		.ascii	"TWI1_IRQn\000"
 5651      5F495251 
 5651      6E00
 5652              	.LASF82:
 5653 0635 5F5F7367 		.ascii	"__sglue\000"
 5653      6C756500 
 5654              	.LASF113:
 5655 063d 5F6E6D61 		.ascii	"_nmalloc\000"
 5655      6C6C6F63 
 5655      00
 5656              	.LASF346:
 5657 0646 6D61696E 		.ascii	"main.c\000"
 5657      2E6300
 5658              	.LASF123:
 5659 064d 53564361 		.ascii	"SVCall_IRQn\000"
 5659      6C6C5F49 
 5659      52516E00 
 5660              	.LASF97:
 5661 0659 5F67616D 		.ascii	"_gamma_signgam\000"
 5661      6D615F73 
 5661      69676E67 
 5661      616D00
 5662              	.LASF293:
 5663 0668 50494F5F 		.ascii	"PIO_PTSR\000"
 5663      50545352 
 5663      00
 5664              	.LASF281:
 5665 0671 50494F5F 		.ascii	"PIO_PCIMR\000"
 5665      5043494D 
 5665      5200
 5666              	.LASF236:
 5667 067b 50494F5F 		.ascii	"PIO_IER\000"
 5667      49455200 
 5668              	.LASF319:
 5669 0683 6D61736B 		.ascii	"mask\000"
 5669      00
 5670              	.LASF70:
 5671 0688 5F637572 		.ascii	"_current_locale\000"
 5671      72656E74 
 5671      5F6C6F63 
 5671      616C6500 
 5672              	.LASF76:
 5673 0698 5F667265 		.ascii	"_freelist\000"
 5673      656C6973 
ARM GAS  /tmp/ccogXpQB.s 			page 139


 5673      7400
 5674              	.LASF283:
 5675 06a2 50494F5F 		.ascii	"PIO_PCRHR\000"
 5675      50435248 
 5675      5200
 5676              	.LASF88:
 5677 06ac 5F696F62 		.ascii	"_iobs\000"
 5677      7300
 5678              	.LASF86:
 5679 06b2 5F676C75 		.ascii	"_glue\000"
 5679      6500
 5680              	.LASF339:
 5681 06b8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5681      52784275 
 5681      66666572 
 5681      00
 5682              	.LASF21:
 5683 06c5 5F736967 		.ascii	"_sign\000"
 5683      6E00
 5684              	.LASF232:
 5685 06cb 50494F5F 		.ascii	"PIO_SODR\000"
 5685      534F4452 
 5685      00
 5686              	.LASF249:
 5687 06d4 50494F5F 		.ascii	"PIO_IFSCER\000"
 5687      49465343 
 5687      455200
 5688              	.LASF197:
 5689 06df 4144435F 		.ascii	"ADC_IDR\000"
 5689      49445200 
 5690              	.LASF4:
 5691 06e7 756E7369 		.ascii	"unsigned int\000"
 5691      676E6564 
 5691      20696E74 
 5691      00
 5692              	.LASF151:
 5693 06f4 5443345F 		.ascii	"TC4_IRQn\000"
 5693      4952516E 
 5693      00
 5694              	.LASF111:
 5695 06fd 5F685F65 		.ascii	"_h_errno\000"
 5695      72726E6F 
 5695      00
 5696              	.LASF143:
 5697 0706 54574930 		.ascii	"TWI0_IRQn\000"
 5697      5F495251 
 5697      6E00
 5698              	.LASF316:
 5699 0710 5744545F 		.ascii	"WDT_MR\000"
 5699      4D5200
 5700              	.LASF109:
 5701 0717 5F776372 		.ascii	"_wcrtomb_state\000"
 5701      746F6D62 
 5701      5F737461 
 5701      746500
 5702              	.LASF280:
 5703 0726 50494F5F 		.ascii	"PIO_PCIDR\000"
ARM GAS  /tmp/ccogXpQB.s 			page 140


 5703      50434944 
 5703      5200
 5704              	.LASF28:
 5705 0730 5F5F746D 		.ascii	"__tm_mday\000"
 5705      5F6D6461 
 5705      7900
 5706              	.LASF196:
 5707 073a 4144435F 		.ascii	"ADC_IER\000"
 5707      49455200 
 5708              	.LASF265:
 5709 0742 50494F5F 		.ascii	"PIO_LSR\000"
 5709      4C535200 
 5710              	.LASF79:
 5711 074a 5F6E6577 		.ascii	"_new\000"
 5711      00
 5712              	.LASF54:
 5713 074f 5F756275 		.ascii	"_ubuf\000"
 5713      6600
 5714              	.LASF66:
 5715 0755 5F737464 		.ascii	"_stderr\000"
 5715      65727200 
 5716              	.LASF102:
 5717 075d 5F776374 		.ascii	"_wctomb_state\000"
 5717      6F6D625F 
 5717      73746174 
 5717      6500
 5718              	.LASF60:
 5719 076b 5F6D6273 		.ascii	"_mbstate\000"
 5719      74617465 
 5719      00
 5720              	.LASF340:
 5721 0774 63757272 		.ascii	"current\000"
 5721      656E7400 
 5722              	.LASF98:
 5723 077c 5F72616E 		.ascii	"_rand_next\000"
 5723      645F6E65 
 5723      787400
 5724              	.LASF46:
 5725 0787 5F666C61 		.ascii	"_flags\000"
 5725      677300
 5726              	.LASF39:
 5727 078e 5F617465 		.ascii	"_atexit\000"
 5727      78697400 
 5728              	.LASF279:
 5729 0796 50494F5F 		.ascii	"PIO_PCIER\000"
 5729      50434945 
 5729      5200
 5730              	.LASF258:
 5731 07a0 50494F5F 		.ascii	"PIO_OWSR\000"
 5731      4F575352 
 5731      00
 5732              	.LASF13:
 5733 07a9 5F5F636F 		.ascii	"__count\000"
 5733      756E7400 
 5734              	.LASF254:
 5735 07b1 50494F5F 		.ascii	"PIO_PPDSR\000"
 5735      50504453 
ARM GAS  /tmp/ccogXpQB.s 			page 141


 5735      5200
 5736              	.LASF31:
 5737 07bb 5F5F746D 		.ascii	"__tm_wday\000"
 5737      5F776461 
 5737      7900
 5738              	.LASF341:
 5739 07c5 70726576 		.ascii	"previous\000"
 5739      696F7573 
 5739      00
 5740              	.LASF32:
 5741 07ce 5F5F746D 		.ascii	"__tm_yday\000"
 5741      5F796461 
 5741      7900
 5742              	.LASF90:
 5743 07d8 5F736565 		.ascii	"_seed\000"
 5743      6400
 5744              	.LASF52:
 5745 07de 5F736565 		.ascii	"_seek\000"
 5745      6B00
 5746              	.LASF135:
 5747 07e4 55415254 		.ascii	"UART1_IRQn\000"
 5747      315F4952 
 5747      516E00
 5748              	.LASF9:
 5749 07ef 5F66706F 		.ascii	"_fpos_t\000"
 5749      735F7400 
 5750              	.LASF12:
 5751 07f7 5F5F7763 		.ascii	"__wchb\000"
 5751      686200
 5752              	.LASF218:
 5753 07fe 4144435F 		.ascii	"ADC_RNCR\000"
 5753      524E4352 
 5753      00
 5754              	.LASF287:
 5755 0807 50494F5F 		.ascii	"PIO_TCR\000"
 5755      54435200 
 5756              	.LASF182:
 5757 080f 42464152 		.ascii	"BFAR\000"
 5757      00
 5758              	.LASF101:
 5759 0814 5F6D6274 		.ascii	"_mbtowc_state\000"
 5759      6F77635F 
 5759      73746174 
 5759      6500
 5760              	.LASF220:
 5761 0822 4144435F 		.ascii	"ADC_TNCR\000"
 5761      544E4352 
 5761      00
 5762              	.LASF304:
 5763 082b 54435F49 		.ascii	"TC_IMR\000"
 5763      4D5200
 5764              	.LASF345:
 5765 0832 474E5520 		.ascii	"GNU C 4.5.2\000"
 5765      4320342E 
 5765      352E3200 
 5766              	.LASF6:
 5767 083e 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  /tmp/ccogXpQB.s 			page 142


 5767      206C6F6E 
 5767      6720756E 
 5767      7369676E 
 5767      65642069 
 5768              	.LASF117:
 5769 0855 75696E74 		.ascii	"uint16_t\000"
 5769      31365F74 
 5769      00
 5770              	.LASF321:
 5771 085e 61747472 		.ascii	"attribute\000"
 5771      69627574 
 5771      6500
 5772              	.LASF284:
 5773 0868 50494F5F 		.ascii	"PIO_RPR\000"
 5773      52505200 
 5774              	.LASF227:
 5775 0870 50494F5F 		.ascii	"PIO_ODR\000"
 5775      4F445200 
 5776              	.LASF36:
 5777 0878 5F64736F 		.ascii	"_dso_handle\000"
 5777      5F68616E 
 5777      646C6500 
 5778              	.LASF229:
 5779 0884 50494F5F 		.ascii	"PIO_IFER\000"
 5779      49464552 
 5779      00
 5780              	.LASF89:
 5781 088d 5F72616E 		.ascii	"_rand48\000"
 5781      64343800 
 5782              	.LASF205:
 5783 0895 4144435F 		.ascii	"ADC_COR\000"
 5783      434F5200 
 5784              	.LASF142:
 5785 089d 48534D43 		.ascii	"HSMCI_IRQn\000"
 5785      495F4952 
 5785      516E00
 5786              	.LASF65:
 5787 08a8 5F737464 		.ascii	"_stdout\000"
 5787      6F757400 
 5788              	.LASF141:
 5789 08b0 55534152 		.ascii	"USART1_IRQn\000"
 5789      54315F49 
 5789      52516E00 
 5790              	.LASF56:
 5791 08bc 5F626C6B 		.ascii	"_blksize\000"
 5791      73697A65 
 5791      00
 5792              	.LASF248:
 5793 08c5 50494F5F 		.ascii	"PIO_IFSCDR\000"
 5793      49465343 
 5793      445200
 5794              	.LASF245:
 5795 08d0 50494F5F 		.ascii	"PIO_PUSR\000"
 5795      50555352 
 5795      00
 5796              	.LASF43:
 5797 08d9 5F626173 		.ascii	"_base\000"
ARM GAS  /tmp/ccogXpQB.s 			page 143


 5797      6500
 5798              	.LASF94:
 5799 08df 5F737472 		.ascii	"_strtok_last\000"
 5799      746F6B5F 
 5799      6C617374 
 5799      00
 5800              	.LASF153:
 5801 08ec 4144435F 		.ascii	"ADC_IRQn\000"
 5801      4952516E 
 5801      00
 5802              	.LASF226:
 5803 08f5 50494F5F 		.ascii	"PIO_OER\000"
 5803      4F455200 
 5804              	.LASF107:
 5805 08fd 5F6D6272 		.ascii	"_mbrtowc_state\000"
 5805      746F7763 
 5805      5F737461 
 5805      746500
 5806              	.LASF216:
 5807 090c 4144435F 		.ascii	"ADC_TCR\000"
 5807      54435200 
 5808              	.LASF162:
 5809 0914 49434552 		.ascii	"ICER\000"
 5809      00
 5810              	.LASF16:
 5811 0919 5F666C6F 		.ascii	"_flock_t\000"
 5811      636B5F74 
 5811      00
 5812              	.LASF331:
 5813 0922 7463636C 		.ascii	"tcclks\000"
 5813      6B7300
 5814              	.LASF85:
 5815 0929 5F5F4649 		.ascii	"__FILE\000"
 5815      4C4500
 5816              	.LASF261:
 5817 0930 50494F5F 		.ascii	"PIO_AIMDR\000"
 5817      41494D44 
 5817      5200
 5818              	.LASF15:
 5819 093a 5F6D6273 		.ascii	"_mbstate_t\000"
 5819      74617465 
 5819      5F7400
 5820              	.LASF134:
 5821 0945 55415254 		.ascii	"UART0_IRQn\000"
 5821      305F4952 
 5821      516E00
 5822              	.LASF99:
 5823 0950 5F723438 		.ascii	"_r48\000"
 5823      00
 5824              	.LASF10:
 5825 0955 77696E74 		.ascii	"wint_t\000"
 5825      5F7400
 5826              	.LASF183:
 5827 095c 41465352 		.ascii	"AFSR\000"
 5827      00
 5828              	.LASF189:
 5829 0961 4144435F 		.ascii	"ADC_SEQR1\000"
ARM GAS  /tmp/ccogXpQB.s 			page 144


 5829      53455152 
 5829      3100
 5830              	.LASF190:
 5831 096b 4144435F 		.ascii	"ADC_SEQR2\000"
 5831      53455152 
 5831      3200
 5832              	.LASF19:
 5833 0975 5F6E6578 		.ascii	"_next\000"
 5833      7400
 5834              	.LASF58:
 5835 097b 5F646174 		.ascii	"_data\000"
 5835      6100
 5836              	.LASF145:
 5837 0981 5350495F 		.ascii	"SPI_IRQn\000"
 5837      4952516E 
 5837      00
 5838              	.LASF334:
 5839 098a 696E6974 		.ascii	"init\000"
 5839      00
 5840              	.LASF140:
 5841 098f 55534152 		.ascii	"USART0_IRQn\000"
 5841      54305F49 
 5841      52516E00 
 5842              	.LASF194:
 5843 099b 52657365 		.ascii	"Reserved1\000"
 5843      72766564 
 5843      3100
 5844              	.LASF200:
 5845 09a5 52657365 		.ascii	"Reserved2\000"
 5845      72766564 
 5845      3200
 5846              	.LASF178:
 5847 09af 43465352 		.ascii	"CFSR\000"
 5847      00
 5848              	.LASF209:
 5849 09b4 52657365 		.ascii	"Reserved4\000"
 5849      72766564 
 5849      3400
 5850              	.LASF212:
 5851 09be 52657365 		.ascii	"Reserved5\000"
 5851      72766564 
 5851      3500
 5852              	.LASF247:
 5853 09c8 52657365 		.ascii	"Reserved6\000"
 5853      72766564 
 5853      3600
 5854              	.LASF147:
 5855 09d2 5443305F 		.ascii	"TC0_IRQn\000"
 5855      4952516E 
 5855      00
 5856              	.LASF259:
 5857 09db 52657365 		.ascii	"Reserved8\000"
 5857      72766564 
 5857      3800
 5858              	.LASF263:
 5859 09e5 52657365 		.ascii	"Reserved9\000"
 5859      72766564 
ARM GAS  /tmp/ccogXpQB.s 			page 145


 5859      3900
 5860              	.LASF138:
 5861 09ef 50494F42 		.ascii	"PIOB_IRQn\000"
 5861      5F495251 
 5861      6E00
 5862              	.LASF260:
 5863 09f9 50494F5F 		.ascii	"PIO_AIMER\000"
 5863      41494D45 
 5863      5200
 5864              	.LASF242:
 5865 0a03 50494F5F 		.ascii	"PIO_MDSR\000"
 5865      4D445352 
 5865      00
 5866              	.LASF297:
 5867 0a0c 54435F43 		.ascii	"TC_CV\000"
 5867      5600
 5868              	.LASF238:
 5869 0a12 50494F5F 		.ascii	"PIO_IMR\000"
 5869      494D5200 
 5870              	.LASF124:
 5871 0a1a 44656275 		.ascii	"DebugMonitor_IRQn\000"
 5871      674D6F6E 
 5871      69746F72 
 5871      5F495251 
 5871      6E00
 5872              	.LASF234:
 5873 0a2c 50494F5F 		.ascii	"PIO_ODSR\000"
 5873      4F445352 
 5873      00
 5874              	.LASF347:
 5875 0a35 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 5875      652F6D6F 
 5875      2F646F63 
 5875      2F737475 
 5875      6469756D 
 5876              	.LASF289:
 5877 0a64 50494F5F 		.ascii	"PIO_RNCR\000"
 5877      524E4352 
 5877      00
 5878              	.LASF310:
 5879 0a6d 54435F51 		.ascii	"TC_QIDR\000"
 5879      49445200 
 5880              	.LASF291:
 5881 0a75 50494F5F 		.ascii	"PIO_TNCR\000"
 5881      544E4352 
 5881      00
 5882              	.LASF184:
 5883 0a7e 4D4D4652 		.ascii	"MMFR\000"
 5883      00
 5884              	.LASF317:
 5885 0a83 5744545F 		.ascii	"WDT_SR\000"
 5885      535200
 5886              	.LASF181:
 5887 0a8a 4D4D4641 		.ascii	"MMFAR\000"
 5887      5200
 5888              	.LASF100:
 5889 0a90 5F6D626C 		.ascii	"_mblen_state\000"
ARM GAS  /tmp/ccogXpQB.s 			page 146


 5889      656E5F73 
 5889      74617465 
 5889      00
 5890              	.LASF276:
 5891 0a9d 50494F5F 		.ascii	"PIO_SCHMITT\000"
 5891      5343484D 
 5891      49545400 
 5892              	.LASF2:
 5893 0aa9 73686F72 		.ascii	"short int\000"
 5893      7420696E 
 5893      7400
 5894              	.LASF325:
 5895 0ab3 7072696F 		.ascii	"priority\000"
 5895      72697479 
 5895      00
 5896              	.LASF116:
 5897 0abc 696E7431 		.ascii	"int16_t\000"
 5897      365F7400 
 5898              	.LASF309:
 5899 0ac4 54435F51 		.ascii	"TC_QIER\000"
 5899      49455200 
 5900              	.LASF185:
 5901 0acc 49534152 		.ascii	"ISAR\000"
 5901      00
 5902              	.LASF201:
 5903 0ad1 4144435F 		.ascii	"ADC_OVER\000"
 5903      4F564552 
 5903      00
 5904              	.LASF37:
 5905 0ada 5F666E74 		.ascii	"_fntypes\000"
 5905      79706573 
 5905      00
 5906              	.LASF137:
 5907 0ae3 50494F41 		.ascii	"PIOA_IRQn\000"
 5907      5F495251 
 5907      6E00
 5908              	.LASF30:
 5909 0aed 5F5F746D 		.ascii	"__tm_year\000"
 5909      5F796561 
 5909      7200
 5910              	.LASF198:
 5911 0af7 4144435F 		.ascii	"ADC_IMR\000"
 5911      494D5200 
 5912              	.LASF187:
 5913 0aff 4144435F 		.ascii	"ADC_CR\000"
 5913      435200
 5914              	.LASF48:
 5915 0b06 5F6C6266 		.ascii	"_lbfsize\000"
 5915      73697A65 
 5915      00
 5916              	.LASF67:
 5917 0b0f 5F696E63 		.ascii	"_inc\000"
 5917      00
 5918              	.LASF40:
 5919 0b14 5F696E64 		.ascii	"_ind\000"
 5919      00
 5920              	.LASF221:
ARM GAS  /tmp/ccogXpQB.s 			page 147


 5921 0b19 4144435F 		.ascii	"ADC_PTCR\000"
 5921      50544352 
 5921      00
 5922              	.LASF314:
 5923 0b22 54435F57 		.ascii	"TC_WPMR\000"
 5923      504D5200 
 5924              	.LASF42:
 5925 0b2a 5F5F7362 		.ascii	"__sbuf\000"
 5925      756600
 5926              	.LASF38:
 5927 0b31 5F69735F 		.ascii	"_is_cxa\000"
 5927      63786100 
 5928              	.LASF112:
 5929 0b39 5F6E6578 		.ascii	"_nextf\000"
 5929      746600
 5930              	.LASF328:
 5931 0b40 73746174 		.ascii	"status\000"
 5931      757300
 5932              	.LASF17:
 5933 0b47 5F5F554C 		.ascii	"__ULong\000"
 5933      6F6E6700 
 5934              	.LASF278:
 5935 0b4f 50494F5F 		.ascii	"PIO_PCMR\000"
 5935      50434D52 
 5935      00
 5936              	.LASF146:
 5937 0b58 5353435F 		.ascii	"SSC_IRQn\000"
 5937      4952516E 
 5937      00
 5938              	.LASF118:
 5939 0b61 75696E74 		.ascii	"uint32_t\000"
 5939      33325F74 
 5939      00
 5940              	.LASF73:
 5941 0b6a 5F726573 		.ascii	"_result\000"
 5941      756C7400 
 5942              	.LASF208:
 5943 0b72 4144435F 		.ascii	"ADC_ACR\000"
 5943      41435200 
 5944              	.LASF296:
 5945 0b7a 54435F53 		.ascii	"TC_SMMR\000"
 5945      4D4D5200 
 5946              	.LASF192:
 5947 0b82 4144435F 		.ascii	"ADC_CHDR\000"
 5947      43484452 
 5947      00
 5948              	.LASF269:
 5949 0b8b 50494F5F 		.ascii	"PIO_REHLSR\000"
 5949      5245484C 
 5949      535200
 5950              	.LASF92:
 5951 0b96 5F616464 		.ascii	"_add\000"
 5951      00
 5952              	.LASF3:
 5953 0b9b 73686F72 		.ascii	"short unsigned int\000"
 5953      7420756E 
 5953      7369676E 
ARM GAS  /tmp/ccogXpQB.s 			page 148


 5953      65642069 
 5953      6E7400
 5954              	.LASF210:
 5955 0bae 4144435F 		.ascii	"ADC_WPMR\000"
 5955      57504D52 
 5955      00
 5956              	.LASF27:
 5957 0bb7 5F5F746D 		.ascii	"__tm_hour\000"
 5957      5F686F75 
 5957      7200
 5958              	.LASF223:
 5959 0bc1 50494F5F 		.ascii	"PIO_PER\000"
 5959      50455200 
 5960              	.LASF125:
 5961 0bc9 50656E64 		.ascii	"PendSV_IRQn\000"
 5961      53565F49 
 5961      52516E00 
 5962              	.LASF108:
 5963 0bd5 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5963      72746F77 
 5963      63735F73 
 5963      74617465 
 5963      00
 5964              	.LASF307:
 5965 0be6 54435F42 		.ascii	"TC_BCR\000"
 5965      435200
 5966              	.LASF150:
 5967 0bed 5443335F 		.ascii	"TC3_IRQn\000"
 5967      4952516E 
 5967      00
 5968              	.LASF318:
 5969 0bf6 5F50696E 		.ascii	"_Pin\000"
 5969      00
 5970              	.LASF191:
 5971 0bfb 4144435F 		.ascii	"ADC_CHER\000"
 5971      43484552 
 5971      00
 5972              	.LASF160:
 5973 0c04 49534552 		.ascii	"ISER\000"
 5973      00
 5974              	.LASF35:
 5975 0c09 5F666E61 		.ascii	"_fnargs\000"
 5975      72677300 
 5976              	.LASF203:
 5977 0c11 4144435F 		.ascii	"ADC_CWR\000"
 5977      43575200 
 5978              	.LASF33:
 5979 0c19 5F5F746D 		.ascii	"__tm_isdst\000"
 5979      5F697364 
 5979      737400
 5980              	.LASF342:
 5981 0c24 6E657874 		.ascii	"next\000"
 5981      00
 5982              	.LASF26:
 5983 0c29 5F5F746D 		.ascii	"__tm_min\000"
 5983      5F6D696E 
 5983      00
ARM GAS  /tmp/ccogXpQB.s 			page 149


 5984              	.LASF239:
 5985 0c32 50494F5F 		.ascii	"PIO_ISR\000"
 5985      49535200 
 5986              	.LASF273:
 5987 0c3a 50494F5F 		.ascii	"PIO_WPMR\000"
 5987      57504D52 
 5987      00
 5988              	.LASF105:
 5989 0c43 5F676574 		.ascii	"_getdate_err\000"
 5989      64617465 
 5989      5F657272 
 5989      00
 5990              	.LASF257:
 5991 0c50 50494F5F 		.ascii	"PIO_OWDR\000"
 5991      4F574452 
 5991      00
 5992              	.LASF129:
 5993 0c59 5254435F 		.ascii	"RTC_IRQn\000"
 5993      4952516E 
 5993      00
 5994              	.LASF292:
 5995 0c62 50494F5F 		.ascii	"PIO_PTCR\000"
 5995      50544352 
 5995      00
 5996              		.ident	"GCC: (Linaro GCC 4.5-2011.02-0) 4.5.2"
ARM GAS  /tmp/ccogXpQB.s 			page 150


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccogXpQB.s:24     .text.NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccogXpQB.s:28     .text.NVIC_EnableIRQ:0000000000000000 NVIC_EnableIRQ
     /tmp/ccogXpQB.s:67     .text.NVIC_SetPriority:0000000000000000 $t
     /tmp/ccogXpQB.s:71     .text.NVIC_SetPriority:0000000000000000 NVIC_SetPriority
     /tmp/ccogXpQB.s:133    .bss:0000000000000000 current
     /tmp/ccogXpQB.s:130    .bss:0000000000000000 $d
     /tmp/ccogXpQB.s:139    .bss:0000000000000008 previous
     /tmp/ccogXpQB.s:145    .bss:0000000000000010 next
     /tmp/ccogXpQB.s:150    .bss:0000000000000016 _state
     /tmp/ccogXpQB.s:153    .rodata:0000000000000000 $d
     /tmp/ccogXpQB.s:156    .rodata:0000000000000000 vpins
     /tmp/ccogXpQB.s:170    .rodata:0000000000000018 .LC0
     /tmp/ccogXpQB.s:173    .text.main:0000000000000000 $t
     /tmp/ccogXpQB.s:178    .text.main:0000000000000000 main
     /tmp/ccogXpQB.s:456    .text.init:0000000000000000 init
     /tmp/ccogXpQB.s:635    .text.state:0000000000000000 state
     /tmp/ccogXpQB.s:761    .text.cli:0000000000000000 cli
     /tmp/ccogXpQB.s:274    .text.TC0_IrqHandler:0000000000000000 $t
     /tmp/ccogXpQB.s:279    .text.TC0_IrqHandler:0000000000000000 TC0_IrqHandler
     /tmp/ccogXpQB.s:316    .rodata:0000000000000030 .LC1
     /tmp/ccogXpQB.s:320    .text.ADC_IrqHandler:0000000000000000 $t
     /tmp/ccogXpQB.s:325    .text.ADC_IrqHandler:0000000000000000 ADC_IrqHandler
     /tmp/ccogXpQB.s:898    .bss:0000000000000018 timestamp.4845
     /tmp/ccogXpQB.s:446    .rodata:0000000000000064 .LC2
     /tmp/ccogXpQB.s:449    .rodata:0000000000000090 .LC3
     /tmp/ccogXpQB.s:452    .text.init:0000000000000000 $t
     /tmp/ccogXpQB.s:865    .rodata:0000000000000134 C.7.6315
     /tmp/ccogXpQB.s:616    .rodata:00000000000000a0 .LC4
     /tmp/ccogXpQB.s:619    .rodata:00000000000000b8 .LC5
     /tmp/ccogXpQB.s:622    .rodata:00000000000000cc .LC6
     /tmp/ccogXpQB.s:625    .rodata:00000000000000e0 .LC7
     /tmp/ccogXpQB.s:628    .rodata:00000000000000f8 .LC8
     /tmp/ccogXpQB.s:631    .text.state:0000000000000000 $t
     /tmp/ccogXpQB.s:668    .text.state:0000000000000028 $d
     /tmp/ccogXpQB.s:674    .text.state:0000000000000038 $t
     /tmp/ccogXpQB.s:751    .rodata:0000000000000110 .LC9
     /tmp/ccogXpQB.s:754    .rodata:000000000000011c .LC10
     /tmp/ccogXpQB.s:757    .text.cli:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
_impure_ptr
fiprintf
TimeTick_Configure
LEDs_configure
LED_blink
LED_blinkstop
GetTickCount
LED_blinking
ADC_ReadBuffer
PIO_Configure
PMC_EnablePeripheral
TC_FindMckDivisor
TC_Configure
TC_Start
ARM GAS  /tmp/ccogXpQB.s 			page 151


ADC_Initialize
ADC_cfgFrequency
USBC_Configure
USBC_isConfigured
setbuf
LED_clr
USBC_hasData
gets
siscanf
