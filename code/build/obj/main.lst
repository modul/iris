ARM GAS  /tmp/ccsPeR2V.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/ccsPeR2V.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccsPeR2V.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/ccsPeR2V.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccsPeR2V.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccsPeR2V.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/ccsPeR2V.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/ccsPeR2V.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/ccsPeR2V.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/ccsPeR2V.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/ccsPeR2V.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccsPeR2V.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/ccsPeR2V.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/ccsPeR2V.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/ccsPeR2V.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccsPeR2V.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccsPeR2V.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/ccsPeR2V.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccsPeR2V.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/ccsPeR2V.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccsPeR2V.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccsPeR2V.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccsPeR2V.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccsPeR2V.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccsPeR2V.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccsPeR2V.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccsPeR2V.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/ccsPeR2V.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.section	.text.NVIC_SetPriority,"ax",%progbits
  62              		.align	2
  63              		.thumb
  64              		.thumb_func
  65              		.type	NVIC_SetPriority, %function
  66              	NVIC_SetPriority:
  67              	.LFB20:
1506:libchip/cmsis/core_cm3.h **** 
1507:libchip/cmsis/core_cm3.h **** /**
1508:libchip/cmsis/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:libchip/cmsis/core_cm3.h ****  *
1510:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:libchip/cmsis/core_cm3.h ****  *
1512:libchip/cmsis/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:libchip/cmsis/core_cm3.h ****  */
1515:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:libchip/cmsis/core_cm3.h **** {
1517:libchip/cmsis/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:libchip/cmsis/core_cm3.h **** }
1519:libchip/cmsis/core_cm3.h **** 
1520:libchip/cmsis/core_cm3.h **** /**
1521:libchip/cmsis/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:libchip/cmsis/core_cm3.h ****  *
1523:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:libchip/cmsis/core_cm3.h ****  *
1526:libchip/cmsis/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending,
1527:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0
1528:libchip/cmsis/core_cm3.h ****  */
1529:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/ccsPeR2V.s 			page 29


1530:libchip/cmsis/core_cm3.h **** {
1531:libchip/cmsis/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:libchip/cmsis/core_cm3.h **** }
1533:libchip/cmsis/core_cm3.h **** 
1534:libchip/cmsis/core_cm3.h **** /**
1535:libchip/cmsis/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:libchip/cmsis/core_cm3.h ****  *
1537:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:libchip/cmsis/core_cm3.h ****  *
1539:libchip/cmsis/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:libchip/cmsis/core_cm3.h ****  */
1542:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:libchip/cmsis/core_cm3.h **** {
1544:libchip/cmsis/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:libchip/cmsis/core_cm3.h **** }
1546:libchip/cmsis/core_cm3.h **** 
1547:libchip/cmsis/core_cm3.h **** /**
1548:libchip/cmsis/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:libchip/cmsis/core_cm3.h ****  *
1550:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:libchip/cmsis/core_cm3.h ****  *
1552:libchip/cmsis/core_cm3.h ****  * Clear the pending bit for the specified interrupt.
1553:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:libchip/cmsis/core_cm3.h ****  */
1555:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:libchip/cmsis/core_cm3.h **** {
1557:libchip/cmsis/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:libchip/cmsis/core_cm3.h **** }
1559:libchip/cmsis/core_cm3.h **** 
1560:libchip/cmsis/core_cm3.h **** /**
1561:libchip/cmsis/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:libchip/cmsis/core_cm3.h ****  *
1563:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:libchip/cmsis/core_cm3.h ****  *
1566:libchip/cmsis/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active,
1567:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0.
1568:libchip/cmsis/core_cm3.h ****  */
1569:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:libchip/cmsis/core_cm3.h **** {
1571:libchip/cmsis/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:libchip/cmsis/core_cm3.h **** }
1573:libchip/cmsis/core_cm3.h **** 
1574:libchip/cmsis/core_cm3.h **** /**
1575:libchip/cmsis/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:libchip/cmsis/core_cm3.h ****  *
1577:libchip/cmsis/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:libchip/cmsis/core_cm3.h ****  * @param  priority  The priority to set
1579:libchip/cmsis/core_cm3.h ****  *
1580:libchip/cmsis/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt
1581:libchip/cmsis/core_cm3.h ****  * number can be positive to specify an external (device specific)
1582:libchip/cmsis/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:libchip/cmsis/core_cm3.h ****  *
1584:libchip/cmsis/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:libchip/cmsis/core_cm3.h ****  */
1586:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
ARM GAS  /tmp/ccsPeR2V.s 			page 30


1587:libchip/cmsis/core_cm3.h **** {
  68              		.loc 1 1587 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI5:
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 3960     		str	r1, [r7, #0]
  85 000a FB71     		strb	r3, [r7, #7]
1588:libchip/cmsis/core_cm3.h ****   if(IRQn < 0) {
  86              		.loc 1 1588 0
  87 000c 97F90730 		ldrsb	r3, [r7, #7]
  88 0010 002B     		cmp	r3, #0
  89 0012 10DA     		bge	.L3
1589:libchip/cmsis/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  90              		.loc 1 1589 0
  91 0014 4FF46D43 		mov	r3, #60672
  92 0018 CEF20003 		movt	r3, 57344
  93 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  94 001e 02F00F02 		and	r2, r2, #15
  95 0022 A2F10401 		sub	r1, r2, #4
  96 0026 3A68     		ldr	r2, [r7, #0]
  97 0028 D2B2     		uxtb	r2, r2
  98 002a 4FEA0212 		lsl	r2, r2, #4
  99 002e D2B2     		uxtb	r2, r2
 100 0030 5B18     		adds	r3, r3, r1
 101 0032 1A76     		strb	r2, [r3, #24]
 102 0034 0DE0     		b	.L2
 103              	.L3:
1590:libchip/cmsis/core_cm3.h ****   else {
1591:libchip/cmsis/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 104              		.loc 1 1591 0
 105 0036 4FF46143 		mov	r3, #57600
 106 003a CEF20003 		movt	r3, 57344
 107 003e 97F90710 		ldrsb	r1, [r7, #7]
 108 0042 3A68     		ldr	r2, [r7, #0]
 109 0044 D2B2     		uxtb	r2, r2
 110 0046 4FEA0212 		lsl	r2, r2, #4
 111 004a D2B2     		uxtb	r2, r2
 112 004c 5B18     		adds	r3, r3, r1
 113 004e 83F80023 		strb	r2, [r3, #768]
 114              	.L2:
1592:libchip/cmsis/core_cm3.h **** }
 115              		.loc 1 1592 0
 116 0052 07F10C07 		add	r7, r7, #12
 117 0056 BD46     		mov	sp, r7
 118 0058 80BC     		pop	{r7}
ARM GAS  /tmp/ccsPeR2V.s 			page 31


 119 005a 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE20:
 122              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 123              		.global	input
 124              		.bss
 125              		.align	2
 126              		.type	input, %object
 127              		.size	input, 4
 128              	input:
 129 0000 00000000 		.space	4
 130              		.global	_state
 131              		.data
 132              		.type	_state, %object
 133              		.size	_state, 1
 134              	_state:
 135 0000 01       		.byte	1
 136              		.global	loop
 137              		.bss
 138              		.align	2
 139              		.type	loop, %object
 140              		.size	loop, 44
 141              	loop:
 142 0004 00000000 		.space	44
 142      00000000 
 142      00000000 
 142      00000000 
 142      00000000 
 143              		.global	ntrip
 144              		.data
 145 0001 000000   		.align	2
 146              		.type	ntrip, %object
 147              		.size	ntrip, 16
 148              	ntrip:
 149 0004 14000000 		.word	loop+20
 150 0008 00000000 		.word	0
 151 000c 64000000 		.word	100
 152 0010 0A000000 		.word	10
 153              		.global	rtrip
 154              		.align	2
 155              		.type	rtrip, %object
 156              		.size	rtrip, 16
 157              	rtrip:
 158 0014 14000000 		.word	loop+20
 159 0018 00000000 		.word	0
 160 001c 0C000000 		.word	12
 161 0020 00000000 		.word	0
 162              		.global	releasetime
 163              		.bss
 164              		.align	2
 165              		.type	releasetime, %object
 166              		.size	releasetime, 4
 167              	releasetime:
 168 0030 00000000 		.space	4
 169              		.section	.text.init,"ax",%progbits
 170              		.align	2
 171              		.thumb
ARM GAS  /tmp/ccsPeR2V.s 			page 32


 172              		.thumb_func
 173              		.type	init, %function
 174              	init:
 175              	.LFB35:
 176              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "board.h"
   3:main.c        **** #include "controller.h"
   4:main.c        **** 
   5:main.c        **** #define STOPPED  (1 << 0)
   6:main.c        **** #define RUN     (1 << 1)
   7:main.c        **** #define HOLD    (1 << 2)
   8:main.c        **** #define RELEASE (1 << 3)
   9:main.c        **** 
  10:main.c        **** #define MINv 0
  11:main.c        **** #define MAXv MAX
  12:main.c        **** 
  13:main.c        **** #define ADC0 0
  14:main.c        **** #define ADC1 1
  15:main.c        **** #define BUFFER_SIZE 2
  16:main.c        **** 
  17:main.c        **** #define PWM0 0
  18:main.c        **** #define PWM1 1
  19:main.c        **** #define PWM_FREQ   20
  20:main.c        **** #define PWM_PERIOD 100
  21:main.c        **** 
  22:main.c        **** ctrlio_t input[BUFFER_SIZE] = {0};
  23:main.c        **** uint8_t _state = STOPPED;
  24:main.c        **** 
  25:main.c        **** struct ctrl loop = CTRL_INIT;	
  26:main.c        **** struct trip ntrip = {&loop._e, 0, 100, 10};
  27:main.c        **** struct trip rtrip = {&loop._e, 0, 12, 0};
  28:main.c        **** uint32_t releasetime = 0;
  29:main.c        **** 
  30:main.c        **** static void init()
  31:main.c        **** {
 177              		.loc 2 31 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0000 90B5     		push	{r4, r7, lr}
 182              	.LCFI6:
 183              		.cfi_def_cfa_offset 12
 184              		.cfi_offset 14, -4
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 4, -12
 187 0002 89B0     		sub	sp, sp, #36
 188              	.LCFI7:
 189              		.cfi_def_cfa_offset 48
 190 0004 06AF     		add	r7, sp, #24
 191              	.LCFI8:
 192              		.cfi_def_cfa 7, 24
  32:main.c        ****     uint32_t div;
  33:main.c        ****     uint32_t tcclks;
  34:main.c        **** 
  35:main.c        **** 	//TODO PIO Configure 
  36:main.c        **** 
ARM GAS  /tmp/ccsPeR2V.s 			page 33


  37:main.c        ****     /* Enable peripheral clocks */
  38:main.c        ****     PMC_EnablePeripheral(ID_TC1);
 193              		.loc 2 38 0
 194 0006 4FF01800 		mov	r0, #24
 195 000a FFF7FEFF 		bl	PMC_EnablePeripheral
  39:main.c        ****     PMC_EnablePeripheral(ID_ADC);
 196              		.loc 2 39 0
 197 000e 4FF01D00 		mov	r0, #29
 198 0012 FFF7FEFF 		bl	PMC_EnablePeripheral
  40:main.c        ****     PMC_EnablePeripheral(ID_PWM);
 199              		.loc 2 40 0
 200 0016 4FF01F00 		mov	r0, #31
 201 001a FFF7FEFF 		bl	PMC_EnablePeripheral
  41:main.c        **** 
  42:main.c        ****     /* Configure TC */
  43:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 202              		.loc 2 43 0
 203 001e 07F10402 		add	r2, r7, #4
 204 0022 3C46     		mov	r4, r7
 205 0024 4FF4D843 		mov	r3, #27648
 206 0028 C0F2DC23 		movt	r3, 732
 207 002c 0093     		str	r3, [sp, #0]
 208 002e 4FF00400 		mov	r0, #4
 209 0032 4FF4D841 		mov	r1, #27648
 210 0036 C0F2DC21 		movt	r1, 732
 211 003a 2346     		mov	r3, r4
 212 003c FFF7FEFF 		bl	TC_FindMckDivisor
  44:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 213              		.loc 2 44 0
 214 0040 3B68     		ldr	r3, [r7, #0]
 215 0042 43F48043 		orr	r3, r3, #16384
 216 0046 4FF48040 		mov	r0, #16384
 217 004a C4F20100 		movt	r0, 16385
 218 004e 4FF00001 		mov	r1, #0
 219 0052 1A46     		mov	r2, r3
 220 0054 FFF7FEFF 		bl	TC_Configure
  45:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
 221              		.loc 2 45 0
 222 0058 4FF48043 		mov	r3, #16384
 223 005c C4F20103 		movt	r3, 16385
 224 0060 7968     		ldr	r1, [r7, #4]
 225 0062 4FF4D852 		mov	r2, #6912
 226 0066 C0F2B702 		movt	r2, 183
 227 006a B2FBF1F2 		udiv	r2, r2, r1
 228 006e DA61     		str	r2, [r3, #28]
  46:main.c        **** 	TC_Start(TC1, 0);
 229              		.loc 2 46 0
 230 0070 4FF48040 		mov	r0, #16384
 231 0074 C4F20100 		movt	r0, 16385
 232 0078 4FF00001 		mov	r1, #0
 233 007c FFF7FEFF 		bl	TC_Start
  47:main.c        **** 
  48:main.c        ****     NVIC_EnableIRQ(TC1_IRQn);
 234              		.loc 2 48 0
 235 0080 4FF01800 		mov	r0, #24
 236 0084 FFF7FEFF 		bl	NVIC_EnableIRQ
  49:main.c        ****     NVIC_SetPriority(TC1_IRQn, 1);
ARM GAS  /tmp/ccsPeR2V.s 			page 34


 237              		.loc 2 49 0
 238 0088 4FF01800 		mov	r0, #24
 239 008c 4FF00101 		mov	r1, #1
 240 0090 FFF7FEFF 		bl	NVIC_SetPriority
  50:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 241              		.loc 2 50 0
 242 0094 4FF48043 		mov	r3, #16384
 243 0098 C4F20103 		movt	r3, 16385
 244 009c 4FF01002 		mov	r2, #16
 245 00a0 5A62     		str	r2, [r3, #36]
  51:main.c        **** 
  52:main.c        ****     /* Initialize ADC */
  53:main.c        ****     ADC_Initialize(ADC, ID_ADC);
 246              		.loc 2 53 0
 247 00a2 4FF40040 		mov	r0, #32768
 248 00a6 C4F20300 		movt	r0, 16387
 249 00aa 4FF01D01 		mov	r1, #29
 250 00ae FFF7FEFF 		bl	ADC_Initialize
  54:main.c        ****     ADC_cfgFrequency(ADC, 15, 4 ); // startup = 15, prescal = 4, ADC clock = 6.4 MHz
 251              		.loc 2 54 0
 252 00b2 4FF40040 		mov	r0, #32768
 253 00b6 C4F20300 		movt	r0, 16387
 254 00ba 4FF00F01 		mov	r1, #15
 255 00be 4FF00402 		mov	r2, #4
 256 00c2 FFF7FEFF 		bl	ADC_cfgFrequency
  55:main.c        **** 
  56:main.c        ****     ADC_EnableChannel(ADC, ADC0);
 257              		.loc 2 56 0
 258 00c6 4FF40043 		mov	r3, #32768
 259 00ca C4F20303 		movt	r3, 16387
 260 00ce 4FF00102 		mov	r2, #1
 261 00d2 1A61     		str	r2, [r3, #16]
  57:main.c        ****     ADC_EnableChannel(ADC, ADC1);
 262              		.loc 2 57 0
 263 00d4 4FF40043 		mov	r3, #32768
 264 00d8 C4F20303 		movt	r3, 16387
 265 00dc 4FF00202 		mov	r2, #2
 266 00e0 1A61     		str	r2, [r3, #16]
  58:main.c        **** 	ADC_StartConversion(ADC);
 267              		.loc 2 58 0
 268 00e2 4FF40043 		mov	r3, #32768
 269 00e6 C4F20303 		movt	r3, 16387
 270 00ea 4FF00202 		mov	r2, #2
 271 00ee 1A60     		str	r2, [r3, #0]
  59:main.c        ****     ADC_ReadBuffer(ADC, (int16_t*) input, BUFFER_SIZE);
 272              		.loc 2 59 0
 273 00f0 4FF40040 		mov	r0, #32768
 274 00f4 C4F20300 		movt	r0, 16387
 275 00f8 40F20001 		movw	r1, #:lower16:input
 276 00fc C0F20001 		movt	r1, #:upper16:input
 277 0100 4FF00202 		mov	r2, #2
 278 0104 FFF7FEFF 		bl	ADC_ReadBuffer
  60:main.c        **** 
  61:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
 279              		.loc 2 61 0
 280 0108 4FF01D00 		mov	r0, #29
 281 010c FFF7FEFF 		bl	NVIC_EnableIRQ
ARM GAS  /tmp/ccsPeR2V.s 			page 35


  62:main.c        **** 	NVIC_SetPriority(ADC_IRQn, 0);
 282              		.loc 2 62 0
 283 0110 4FF01D00 		mov	r0, #29
 284 0114 4FF00001 		mov	r1, #0
 285 0118 FFF7FEFF 		bl	NVIC_SetPriority
  63:main.c        ****     ADC_EnableIt(ADC,ADC_IER_RXBUFF);
 286              		.loc 2 63 0
 287 011c 4FF40043 		mov	r3, #32768
 288 0120 C4F20303 		movt	r3, 16387
 289 0124 4FF08052 		mov	r2, #268435456
 290 0128 5A62     		str	r2, [r3, #36]
  64:main.c        **** 
  65:main.c        ****     /* Configure PWMC channels */
  66:main.c        ****     PWMC_ConfigureClocks(PWM_FREQ * PWM_PERIOD, 0, BOARD_MCK);
 291              		.loc 2 66 0
 292 012a 4FF4FA60 		mov	r0, #2000
 293 012e 4FF00001 		mov	r1, #0
 294 0132 4FF4D842 		mov	r2, #27648
 295 0136 C0F2DC22 		movt	r2, 732
 296 013a FFF7FEFF 		bl	PWMC_ConfigureClocks
  67:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWM0, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 297              		.loc 2 67 0
 298 013e 4FF00103 		mov	r3, #1
 299 0142 0093     		str	r3, [sp, #0]
 300 0144 4FF00003 		mov	r3, #0
 301 0148 0193     		str	r3, [sp, #4]
 302 014a 4FF00003 		mov	r3, #0
 303 014e 0293     		str	r3, [sp, #8]
 304 0150 4FF00003 		mov	r3, #0
 305 0154 0393     		str	r3, [sp, #12]
 306 0156 4FF00003 		mov	r3, #0
 307 015a 0493     		str	r3, [sp, #16]
 308 015c 4FF00000 		mov	r0, #0
 309 0160 C4F20200 		movt	r0, 16386
 310 0164 4FF00001 		mov	r1, #0
 311 0168 4FF00B02 		mov	r2, #11
 312 016c 4FF00003 		mov	r3, #0
 313 0170 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
  68:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWM1, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 314              		.loc 2 68 0
 315 0174 4FF00103 		mov	r3, #1
 316 0178 0093     		str	r3, [sp, #0]
 317 017a 4FF00003 		mov	r3, #0
 318 017e 0193     		str	r3, [sp, #4]
 319 0180 4FF00003 		mov	r3, #0
 320 0184 0293     		str	r3, [sp, #8]
 321 0186 4FF00003 		mov	r3, #0
 322 018a 0393     		str	r3, [sp, #12]
 323 018c 4FF00003 		mov	r3, #0
 324 0190 0493     		str	r3, [sp, #16]
 325 0192 4FF00000 		mov	r0, #0
 326 0196 C4F20200 		movt	r0, 16386
 327 019a 4FF00101 		mov	r1, #1
 328 019e 4FF00B02 		mov	r2, #11
 329 01a2 4FF00003 		mov	r3, #0
 330 01a6 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
  69:main.c        **** 
ARM GAS  /tmp/ccsPeR2V.s 			page 36


  70:main.c        ****     PWMC_SetPeriod(PWM, PWM0, PWM_PERIOD);
 331              		.loc 2 70 0
 332 01aa 4FF00000 		mov	r0, #0
 333 01ae C4F20200 		movt	r0, 16386
 334 01b2 4FF00001 		mov	r1, #0
 335 01b6 4FF06402 		mov	r2, #100
 336 01ba FFF7FEFF 		bl	PWMC_SetPeriod
  71:main.c        ****     PWMC_SetDutyCycle(PWM, PWM0, 0);
 337              		.loc 2 71 0
 338 01be 4FF00000 		mov	r0, #0
 339 01c2 C4F20200 		movt	r0, 16386
 340 01c6 4FF00001 		mov	r1, #0
 341 01ca 4FF00002 		mov	r2, #0
 342 01ce FFF7FEFF 		bl	PWMC_SetDutyCycle
  72:main.c        ****     PWMC_SetPeriod(PWM, PWM1, PWM_PERIOD);
 343              		.loc 2 72 0
 344 01d2 4FF00000 		mov	r0, #0
 345 01d6 C4F20200 		movt	r0, 16386
 346 01da 4FF00101 		mov	r1, #1
 347 01de 4FF06402 		mov	r2, #100
 348 01e2 FFF7FEFF 		bl	PWMC_SetPeriod
  73:main.c        ****     PWMC_SetDutyCycle(PWM, PWM1, 0);
 349              		.loc 2 73 0
 350 01e6 4FF00000 		mov	r0, #0
 351 01ea C4F20200 		movt	r0, 16386
 352 01ee 4FF00101 		mov	r1, #1
 353 01f2 4FF00002 		mov	r2, #0
 354 01f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
  74:main.c        **** 
  75:main.c        ****     PWMC_ConfigureSyncChannel(PWM, (1 << PWM0)|(1 << PWM1), PWM_SCM_UPDM_MODE1, 0, 0);
 355              		.loc 2 75 0
 356 01fa 4FF00003 		mov	r3, #0
 357 01fe 0093     		str	r3, [sp, #0]
 358 0200 4FF00000 		mov	r0, #0
 359 0204 C4F20200 		movt	r0, 16386
 360 0208 4FF00301 		mov	r1, #3
 361 020c 4FF48032 		mov	r2, #65536
 362 0210 4FF00003 		mov	r3, #0
 363 0214 FFF7FEFF 		bl	PWMC_ConfigureSyncChannel
  76:main.c        ****     PWMC_SetSyncChannelUpdatePeriod(PWM, PWM_SCUP_UPR(1));
 364              		.loc 2 76 0
 365 0218 4FF00000 		mov	r0, #0
 366 021c C4F20200 		movt	r0, 16386
 367 0220 4FF00101 		mov	r1, #1
 368 0224 FFF7FEFF 		bl	PWMC_SetSyncChannelUpdatePeriod
  77:main.c        **** 
  78:main.c        **** 	/* Tick Config */
  79:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 369              		.loc 2 79 0
 370 0228 4FF4D840 		mov	r0, #27648
 371 022c C0F2DC20 		movt	r0, 732
 372 0230 FFF7FEFF 		bl	TimeTick_Configure
  80:main.c        **** 
  81:main.c        **** 	/* LED PIO Config */
  82:main.c        **** 	LEDs_configure();
 373              		.loc 2 82 0
 374 0234 FFF7FEFF 		bl	LEDs_configure
ARM GAS  /tmp/ccsPeR2V.s 			page 37


  83:main.c        **** 	LED_clr(statusled);
 375              		.loc 2 83 0
 376 0238 4FF00000 		mov	r0, #0
 377 023c FFF7FEFF 		bl	LED_clr
  84:main.c        **** 
  85:main.c        **** 	/* USB Console Config */
  86:main.c        **** 	USBC_Configure();
 378              		.loc 2 86 0
 379 0240 FFF7FEFF 		bl	USBC_Configure
  87:main.c        **** }
 380              		.loc 2 87 0
 381 0244 07F10C07 		add	r7, r7, #12
 382 0248 BD46     		mov	sp, r7
 383 024a 90BD     		pop	{r4, r7, pc}
 384              		.cfi_endproc
 385              	.LFE35:
 386              		.size	init, .-init
 387              		.section	.rodata
 388              		.align	2
 389              	.LC0:
 390 0000 2D442D20 		.ascii	"-D- set state STOPPED\012\000"
 390      73657420 
 390      73746174 
 390      65205354 
 390      4F505045 
 391 0017 00       		.align	2
 392              	.LC1:
 393 0018 2D442D20 		.ascii	"-D- set state RUN\012\000"
 393      73657420 
 393      73746174 
 393      65205255 
 393      4E0A00
 394 002b 00       		.align	2
 395              	.LC2:
 396 002c 2D442D20 		.ascii	"-D- set state HOLD\012\000"
 396      73657420 
 396      73746174 
 396      6520484F 
 396      4C440A00 
 397              		.align	2
 398              	.LC3:
 399 0040 2D442D20 		.ascii	"-D- set state RELEASE\012\000"
 399      73657420 
 399      73746174 
 399      65205245 
 399      4C454153 
 400 0057 00       		.align	2
 401              	.LC4:
 402 0058 2D442D20 		.ascii	"-D- got invalid state\012\000"
 402      676F7420 
 402      696E7661 
 402      6C696420 
 402      73746174 
 403              		.section	.text.state,"ax",%progbits
 404              		.align	2
 405              		.global	state
 406              		.thumb
ARM GAS  /tmp/ccsPeR2V.s 			page 38


 407              		.thumb_func
 408              		.type	state, %function
 409              	state:
 410              	.LFB36:
  88:main.c        **** 
  89:main.c        **** void state(uint8_t new) 
  90:main.c        **** {
 411              		.loc 2 90 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              	.LCFI9:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 14, -4
 419              		.cfi_offset 7, -8
 420 0002 82B0     		sub	sp, sp, #8
 421              	.LCFI10:
 422              		.cfi_def_cfa_offset 16
 423 0004 00AF     		add	r7, sp, #0
 424              	.LCFI11:
 425              		.cfi_def_cfa_register 7
 426 0006 0346     		mov	r3, r0
 427 0008 FB71     		strb	r3, [r7, #7]
  91:main.c        **** 	switch (new) {
 428              		.loc 2 91 0
 429 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 430 000c 03F1FF33 		add	r3, r3, #-1
 431 0010 072B     		cmp	r3, #7
 432 0012 00F2AF80 		bhi	.L7
 433 0016 01A2     		adr	r2, .L12
 434 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 435              		.align	2
 436              	.L12:
 437 001c 3D000000 		.word	.L8+1
 438 0020 91000000 		.word	.L9+1
 439 0024 75010000 		.word	.L7+1
 440 0028 CF000000 		.word	.L10+1
 441 002c 75010000 		.word	.L7+1
 442 0030 75010000 		.word	.L7+1
 443 0034 75010000 		.word	.L7+1
 444 0038 21010000 		.word	.L11+1
 445              	.L8:
  92:main.c        **** 		case STOPPED:
  93:main.c        **** 			mode(STOP, &loop);
 446              		.loc 2 93 0
 447 003c 4FF00300 		mov	r0, #3
 448 0040 40F20001 		movw	r1, #:lower16:loop
 449 0044 C0F20001 		movt	r1, #:upper16:loop
 450 0048 FFF7FEFF 		bl	mode
  94:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM0, 0);
 451              		.loc 2 94 0
 452 004c 4FF00000 		mov	r0, #0
 453 0050 C4F20200 		movt	r0, 16386
 454 0054 4FF00001 		mov	r1, #0
 455 0058 4FF00002 		mov	r2, #0
 456 005c FFF7FEFF 		bl	PWMC_SetDutyCycle
ARM GAS  /tmp/ccsPeR2V.s 			page 39


  95:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM1, 0);
 457              		.loc 2 95 0
 458 0060 4FF00000 		mov	r0, #0
 459 0064 C4F20200 		movt	r0, 16386
 460 0068 4FF00101 		mov	r1, #1
 461 006c 4FF00002 		mov	r2, #0
 462 0070 FFF7FEFF 		bl	PWMC_SetDutyCycle
  96:main.c        **** 			TRACE_DEBUG("set state STOPPED\n");
 463              		.loc 2 96 0
 464 0074 40F20003 		movw	r3, #:lower16:_impure_ptr
 465 0078 C0F20003 		movt	r3, #:upper16:_impure_ptr
 466 007c 1B68     		ldr	r3, [r3, #0]
 467 007e DB68     		ldr	r3, [r3, #12]
 468 0080 1846     		mov	r0, r3
 469 0082 40F20001 		movw	r1, #:lower16:.LC0
 470 0086 C0F20001 		movt	r1, #:upper16:.LC0
 471 008a FFF7FEFF 		bl	fiprintf
  97:main.c        **** 			break;
 472              		.loc 2 97 0
 473 008e 82E0     		b	.L13
 474              	.L9:
  98:main.c        **** 		case RUN:
  99:main.c        **** 			loop.tristate = &rtrip;
 475              		.loc 2 99 0
 476 0090 40F20003 		movw	r3, #:lower16:loop
 477 0094 C0F20003 		movt	r3, #:upper16:loop
 478 0098 40F20002 		movw	r2, #:lower16:rtrip
 479 009c C0F20002 		movt	r2, #:upper16:rtrip
 480 00a0 9A62     		str	r2, [r3, #40]
 100:main.c        **** 			mode(RAMP, &loop);
 481              		.loc 2 100 0
 482 00a2 4FF00200 		mov	r0, #2
 483 00a6 40F20001 		movw	r1, #:lower16:loop
 484 00aa C0F20001 		movt	r1, #:upper16:loop
 485 00ae FFF7FEFF 		bl	mode
 101:main.c        **** 			TRACE_DEBUG("set state RUN\n");
 486              		.loc 2 101 0
 487 00b2 40F20003 		movw	r3, #:lower16:_impure_ptr
 488 00b6 C0F20003 		movt	r3, #:upper16:_impure_ptr
 489 00ba 1B68     		ldr	r3, [r3, #0]
 490 00bc DB68     		ldr	r3, [r3, #12]
 491 00be 1846     		mov	r0, r3
 492 00c0 40F20001 		movw	r1, #:lower16:.LC1
 493 00c4 C0F20001 		movt	r1, #:upper16:.LC1
 494 00c8 FFF7FEFF 		bl	fiprintf
 102:main.c        **** 			break;
 495              		.loc 2 102 0
 496 00cc 63E0     		b	.L13
 497              	.L10:
 103:main.c        **** 		case HOLD:
 104:main.c        **** 			loop.tristate = &ntrip;
 498              		.loc 2 104 0
 499 00ce 40F20003 		movw	r3, #:lower16:loop
 500 00d2 C0F20003 		movt	r3, #:upper16:loop
 501 00d6 40F20002 		movw	r2, #:lower16:ntrip
 502 00da C0F20002 		movt	r2, #:upper16:ntrip
 503 00de 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccsPeR2V.s 			page 40


 105:main.c        **** 			loop.SP = loop._x;
 504              		.loc 2 105 0
 505 00e0 40F20003 		movw	r3, #:lower16:loop
 506 00e4 C0F20003 		movt	r3, #:upper16:loop
 507 00e8 9A8C     		ldrh	r2, [r3, #36]
 508 00ea 40F20003 		movw	r3, #:lower16:loop
 509 00ee C0F20003 		movt	r3, #:upper16:loop
 510 00f2 5A80     		strh	r2, [r3, #2]	@ movhi
 106:main.c        **** 			mode(NORMAL, &loop);
 511              		.loc 2 106 0
 512 00f4 4FF00100 		mov	r0, #1
 513 00f8 40F20001 		movw	r1, #:lower16:loop
 514 00fc C0F20001 		movt	r1, #:upper16:loop
 515 0100 FFF7FEFF 		bl	mode
 107:main.c        **** 			TRACE_DEBUG("set state HOLD\n");
 516              		.loc 2 107 0
 517 0104 40F20003 		movw	r3, #:lower16:_impure_ptr
 518 0108 C0F20003 		movt	r3, #:upper16:_impure_ptr
 519 010c 1B68     		ldr	r3, [r3, #0]
 520 010e DB68     		ldr	r3, [r3, #12]
 521 0110 1846     		mov	r0, r3
 522 0112 40F20001 		movw	r1, #:lower16:.LC2
 523 0116 C0F20001 		movt	r1, #:upper16:.LC2
 524 011a FFF7FEFF 		bl	fiprintf
 108:main.c        **** 			break;
 525              		.loc 2 108 0
 526 011e 3AE0     		b	.L13
 527              	.L11:
 109:main.c        **** 		case RELEASE:
 110:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM0, 0); // down -> 0
 528              		.loc 2 110 0
 529 0120 4FF00000 		mov	r0, #0
 530 0124 C4F20200 		movt	r0, 16386
 531 0128 4FF00001 		mov	r1, #0
 532 012c 4FF00002 		mov	r2, #0
 533 0130 FFF7FEFF 		bl	PWMC_SetDutyCycle
 111:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM1, 0); // up -> full
 534              		.loc 2 111 0
 535 0134 4FF00000 		mov	r0, #0
 536 0138 C4F20200 		movt	r0, 16386
 537 013c 4FF00101 		mov	r1, #1
 538 0140 4FF00002 		mov	r2, #0
 539 0144 FFF7FEFF 		bl	PWMC_SetDutyCycle
 112:main.c        **** 			mode(STOP, &loop);
 540              		.loc 2 112 0
 541 0148 4FF00300 		mov	r0, #3
 542 014c 40F20001 		movw	r1, #:lower16:loop
 543 0150 C0F20001 		movt	r1, #:upper16:loop
 544 0154 FFF7FEFF 		bl	mode
 113:main.c        **** 			TRACE_DEBUG("set state RELEASE\n");
 545              		.loc 2 113 0
 546 0158 40F20003 		movw	r3, #:lower16:_impure_ptr
 547 015c C0F20003 		movt	r3, #:upper16:_impure_ptr
 548 0160 1B68     		ldr	r3, [r3, #0]
 549 0162 DB68     		ldr	r3, [r3, #12]
 550 0164 1846     		mov	r0, r3
 551 0166 40F20001 		movw	r1, #:lower16:.LC3
ARM GAS  /tmp/ccsPeR2V.s 			page 41


 552 016a C0F20001 		movt	r1, #:upper16:.LC3
 553 016e FFF7FEFF 		bl	fiprintf
 114:main.c        **** 			break;
 554              		.loc 2 114 0
 555 0172 10E0     		b	.L13
 556              	.L7:
 115:main.c        **** 		default:
 116:main.c        **** 			TRACE_DEBUG("got invalid state\n");
 557              		.loc 2 116 0
 558 0174 40F20003 		movw	r3, #:lower16:_impure_ptr
 559 0178 C0F20003 		movt	r3, #:upper16:_impure_ptr
 560 017c 1B68     		ldr	r3, [r3, #0]
 561 017e DB68     		ldr	r3, [r3, #12]
 562 0180 1846     		mov	r0, r3
 563 0182 40F20001 		movw	r1, #:lower16:.LC4
 564 0186 C0F20001 		movt	r1, #:upper16:.LC4
 565 018a FFF7FEFF 		bl	fiprintf
 117:main.c        **** 			state(STOPPED);
 566              		.loc 2 117 0
 567 018e 4FF00100 		mov	r0, #1
 568 0192 FFF7FEFF 		bl	state
 569              	.L13:
 118:main.c        **** 	}
 119:main.c        **** 	_state = new;
 570              		.loc 2 119 0
 571 0196 40F20003 		movw	r3, #:lower16:_state
 572 019a C0F20003 		movt	r3, #:upper16:_state
 573 019e FA79     		ldrb	r2, [r7, #7]
 574 01a0 1A70     		strb	r2, [r3, #0]
 120:main.c        **** }
 575              		.loc 2 120 0
 576 01a2 07F10807 		add	r7, r7, #8
 577 01a6 BD46     		mov	sp, r7
 578 01a8 80BD     		pop	{r7, pc}
 579              		.cfi_endproc
 580              	.LFE36:
 581              		.size	state, .-state
 582 01aa 00BF     		.section	.rodata
 583 006f 00       		.align	2
 584              	.LC5:
 585 0070 0000     		.ascii	"\000\000"
 586 0072 0000     		.align	2
 587              	.LC6:
 588 0074 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
 588      52756E6E 
 588      696E6720 
 588      61742025 
 588      69204D48 
 589 008b 00       		.align	2
 590              	.LC7:
 591 008c 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
 591      77616974 
 591      696E6720 
 591      756E7469 
 591      6C205553 
 592 00b7 00       		.align	2
 593              	.LC8:
ARM GAS  /tmp/ccsPeR2V.s 			page 42


 594 00b8 257500   		.ascii	"%u\000"
 595 00bb 00       		.align	2
 596              	.LC9:
 597 00bc 2D492D20 		.ascii	"-I- set setpoint to %u\012\000"
 597      73657420 
 597      73657470 
 597      6F696E74 
 597      20746F20 
 598              		.align	2
 599              	.LC10:
 600 00d4 25750A00 		.ascii	"%u\012\000"
 601              		.align	2
 602              	.LC11:
 603 00d8 2D492D20 		.ascii	"-I- set ramp endpoint to %u\012\000"
 603      73657420 
 603      72616D70 
 603      20656E64 
 603      706F696E 
 604 00f5 000000   		.align	2
 605              	.LC12:
 606 00f8 256900   		.ascii	"%i\000"
 607 00fb 00       		.align	2
 608              	.LC13:
 609 00fc 2D492D20 		.ascii	"-I- set ramp slope to %i\012\000"
 609      73657420 
 609      72616D70 
 609      20736C6F 
 609      70652074 
 610 0116 0000     		.align	2
 611              	.LC14:
 612 0118 25690A00 		.ascii	"%i\012\000"
 613              		.align	2
 614              	.LC15:
 615 011c 25752575 		.ascii	"%u%u%u\000"
 615      257500
 616 0123 00       		.align	2
 617              	.LC16:
 618 0124 2D492D20 		.ascii	"-I- set PID factors to %u, %u, %u\012\000"
 618      73657420 
 618      50494420 
 618      66616374 
 618      6F727320 
 619 0147 00       		.align	2
 620              	.LC17:
 621 0148 25752025 		.ascii	"%u %u %u\012\000"
 621      75202575 
 621      0A00
 622 0152 0000     		.align	2
 623              	.LC18:
 624 0154 2D492D20 		.ascii	"-I- set releasetime to %u\012\000"
 624      73657420 
 624      72656C65 
 624      61736574 
 624      696D6520 
 625 016f 00       		.align	2
 626              	.LC19:
 627 0170 636F6E66 		.ascii	"config\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 43


 627      696700
 628 0177 00       		.align	2
 629              	.LC20:
 630 0178 686F6C64 		.ascii	"hold\000"
 630      00
 631 017d 000000   		.align	2
 632              	.LC21:
 633 0180 2D442D20 		.ascii	"-D- releasetime elapsed\012\000"
 633      72656C65 
 633      61736574 
 633      696D6520 
 633      656C6170 
 634 0199 000000   		.align	2
 635              	.LC22:
 636 019c 72656C65 		.ascii	"release\000"
 636      61736500 
 637              		.align	2
 638              	.LC23:
 639 01a4 72756E00 		.ascii	"run\000"
 640              		.section	.text.main,"ax",%progbits
 641              		.align	2
 642              		.global	main
 643              		.thumb
 644              		.thumb_func
 645              		.type	main, %function
 646              	main:
 647              	.LFB37:
 121:main.c        **** 
 122:main.c        **** int main() 
 123:main.c        **** {
 648              		.loc 2 123 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 24
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652 0000 90B5     		push	{r4, r7, lr}
 653              	.LCFI12:
 654              		.cfi_def_cfa_offset 12
 655              		.cfi_offset 14, -4
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 4, -12
 658 0002 89B0     		sub	sp, sp, #36
 659              	.LCFI13:
 660              		.cfi_def_cfa_offset 48
 661 0004 02AF     		add	r7, sp, #8
 662              	.LCFI14:
 663              		.cfi_def_cfa 7, 40
 124:main.c        **** 	int argv[3];
 125:main.c        **** 	char *line = "\0";
 664              		.loc 2 125 0
 665 0006 40F20003 		movw	r3, #:lower16:.LC5
 666 000a C0F20003 		movt	r3, #:upper16:.LC5
 667 000e FB60     		str	r3, [r7, #12]
 126:main.c        **** 	char cmd = 0;
 668              		.loc 2 126 0
 669 0010 4FF00003 		mov	r3, #0
 670 0014 FB75     		strb	r3, [r7, #23]
 127:main.c        **** 	uint32_t timestamp = 0;
ARM GAS  /tmp/ccsPeR2V.s 			page 44


 671              		.loc 2 127 0
 672 0016 4FF00003 		mov	r3, #0
 673 001a 3B61     		str	r3, [r7, #16]
 128:main.c        **** 
 129:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 674              		.loc 2 129 0
 675 001c 40F20003 		movw	r3, #:lower16:_impure_ptr
 676 0020 C0F20003 		movt	r3, #:upper16:_impure_ptr
 677 0024 1B68     		ldr	r3, [r3, #0]
 678 0026 DB68     		ldr	r3, [r3, #12]
 679 0028 1846     		mov	r0, r3
 680 002a 40F20001 		movw	r1, #:lower16:.LC6
 681 002e C0F20001 		movt	r1, #:upper16:.LC6
 682 0032 4FF03002 		mov	r2, #48
 683 0036 FFF7FEFF 		bl	fiprintf
 130:main.c        **** 
 131:main.c        **** 	/* WDT off */
 132:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 684              		.loc 2 132 0
 685 003a 41F25043 		movw	r3, #5200
 686 003e C4F20E03 		movt	r3, 16398
 687 0042 4FF40042 		mov	r2, #32768
 688 0046 5A60     		str	r2, [r3, #4]
 133:main.c        **** 
 134:main.c        **** 	/* configure hardware */
 135:main.c        **** 	init();
 689              		.loc 2 135 0
 690 0048 FFF7FEFF 		bl	init
 136:main.c        **** 
 137:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 691              		.loc 2 137 0
 692 004c 40F20003 		movw	r3, #:lower16:_impure_ptr
 693 0050 C0F20003 		movt	r3, #:upper16:_impure_ptr
 694 0054 1B68     		ldr	r3, [r3, #0]
 695 0056 DB68     		ldr	r3, [r3, #12]
 696 0058 1846     		mov	r0, r3
 697 005a 40F20001 		movw	r1, #:lower16:.LC7
 698 005e C0F20001 		movt	r1, #:upper16:.LC7
 699 0062 FFF7FEFF 		bl	fiprintf
 138:main.c        **** 	while (!USBC_isConfigured());
 700              		.loc 2 138 0
 701 0066 00BF     		nop
 702              	.L15:
 703              		.loc 2 138 0 is_stmt 0 discriminator 1
 704 0068 FFF7FEFF 		bl	USBC_isConfigured
 705 006c 0346     		mov	r3, r0
 706 006e 002B     		cmp	r3, #0
 707 0070 FAD0     		beq	.L15
 139:main.c        **** 
 140:main.c        **** 	loop.Kp = SCALE(3);
 708              		.loc 2 140 0 is_stmt 1
 709 0072 40F20003 		movw	r3, #:lower16:loop
 710 0076 C0F20003 		movt	r3, #:upper16:loop
 711 007a 4FF4C072 		mov	r2, #384
 712 007e 9A81     		strh	r2, [r3, #12]	@ movhi
 141:main.c        **** 	loop.Ki = SCALE(2);
 713              		.loc 2 141 0
ARM GAS  /tmp/ccsPeR2V.s 			page 45


 714 0080 40F20003 		movw	r3, #:lower16:loop
 715 0084 C0F20003 		movt	r3, #:upper16:loop
 716 0088 4FF48072 		mov	r2, #256
 717 008c DA81     		strh	r2, [r3, #14]	@ movhi
 142:main.c        **** 	loop.Kd = SCALE(0);
 718              		.loc 2 142 0
 719 008e 40F20003 		movw	r3, #:lower16:loop
 720 0092 C0F20003 		movt	r3, #:upper16:loop
 721 0096 4FF00002 		mov	r2, #0
 722 009a 1A82     		strh	r2, [r3, #16]	@ movhi
 143:main.c        **** 	loop.rSlope = 16;
 723              		.loc 2 143 0
 724 009c 40F20003 		movw	r3, #:lower16:loop
 725 00a0 C0F20003 		movt	r3, #:upper16:loop
 726 00a4 4FF01002 		mov	r2, #16
 727 00a8 9A60     		str	r2, [r3, #8]
 144:main.c        **** 	loop.rSP = MAXv;
 728              		.loc 2 144 0
 729 00aa 40F20003 		movw	r3, #:lower16:loop
 730 00ae C0F20003 		movt	r3, #:upper16:loop
 731 00b2 40F6FF72 		movw	r2, #4095
 732 00b6 9A80     		strh	r2, [r3, #4]	@ movhi
 145:main.c        **** 	loop.tristate = &rtrip;
 733              		.loc 2 145 0
 734 00b8 40F20003 		movw	r3, #:lower16:loop
 735 00bc C0F20003 		movt	r3, #:upper16:loop
 736 00c0 40F20002 		movw	r2, #:lower16:rtrip
 737 00c4 C0F20002 		movt	r2, #:upper16:rtrip
 738 00c8 9A62     		str	r2, [r3, #40]
 146:main.c        **** 
 147:main.c        **** 	LED_blink(statusled, 5);
 739              		.loc 2 147 0
 740 00ca 4FF00000 		mov	r0, #0
 741 00ce 4FF00501 		mov	r1, #5
 742 00d2 FFF7FEFF 		bl	LED_blink
 148:main.c        **** 
 149:main.c        **** 	setbuf(stdout, NULL);
 743              		.loc 2 149 0
 744 00d6 40F20003 		movw	r3, #:lower16:_impure_ptr
 745 00da C0F20003 		movt	r3, #:upper16:_impure_ptr
 746 00de 1B68     		ldr	r3, [r3, #0]
 747 00e0 9B68     		ldr	r3, [r3, #8]
 748 00e2 1846     		mov	r0, r3
 749 00e4 4FF00001 		mov	r1, #0
 750 00e8 FFF7FEFF 		bl	setbuf
 751              	.L59:
 150:main.c        **** 
 151:main.c        **** 	while (1) {
 152:main.c        **** 		if(USBC_hasData()) {
 752              		.loc 2 152 0
 753 00ec FFF7FEFF 		bl	USBC_hasData
 754 00f0 0346     		mov	r3, r0
 755 00f2 002B     		cmp	r3, #0
 756 00f4 06D0     		beq	.L16
 153:main.c        **** 			gets(line);
 757              		.loc 2 153 0
 758 00f6 F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/ccsPeR2V.s 			page 46


 759 00f8 FFF7FEFF 		bl	gets
 154:main.c        **** #ifdef ECHO
 155:main.c        **** 			puts(line);
 156:main.c        **** #endif
 157:main.c        **** 			cmd = *line;
 760              		.loc 2 157 0
 761 00fc FB68     		ldr	r3, [r7, #12]
 762 00fe 1B78     		ldrb	r3, [r3, #0]
 763 0100 FB75     		strb	r3, [r7, #23]
 764 0102 02E0     		b	.L17
 765              	.L16:
 158:main.c        **** 		}
 159:main.c        **** 		else {
 160:main.c        **** 			cmd = 0;
 766              		.loc 2 160 0
 767 0104 4FF00003 		mov	r3, #0
 768 0108 FB75     		strb	r3, [r7, #23]
 769              	.L17:
 161:main.c        **** 		}
 162:main.c        **** 
 163:main.c        **** 		switch (_state) {
 770              		.loc 2 163 0
 771 010a 40F20003 		movw	r3, #:lower16:_state
 772 010e C0F20003 		movt	r3, #:upper16:_state
 773 0112 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 774 0114 03F1FF33 		add	r3, r3, #-1
 775 0118 072B     		cmp	r3, #7
 776 011a 00F28782 		bhi	.L18
 777 011e 01A1     		adr	r1, .L23
 778 0120 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 779              		.align	2
 780              	.L23:
 781 0124 45010000 		.word	.L19+1
 782 0128 C9050000 		.word	.L20+1
 783 012c 2D060000 		.word	.L18+1
 784 0130 47040000 		.word	.L21+1
 785 0134 2D060000 		.word	.L18+1
 786 0138 2D060000 		.word	.L18+1
 787 013c 2D060000 		.word	.L18+1
 788 0140 25050000 		.word	.L22+1
 789              	.L19:
 164:main.c        **** 			case STOPPED:
 165:main.c        **** 				if (cmd == 'g') {
 790              		.loc 2 165 0
 791 0144 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 792 0146 672B     		cmp	r3, #103
 793 0148 04D1     		bne	.L24
 166:main.c        **** 					state(RUN);
 794              		.loc 2 166 0
 795 014a 4FF00200 		mov	r0, #2
 796 014e FFF7FEFF 		bl	state
 167:main.c        **** 				}
 168:main.c        **** 				else if (cmd == 'h') {
 169:main.c        **** 					state(HOLD);
 170:main.c        **** 				}
 171:main.c        **** 				else if (cmd == 'r') {
 172:main.c        **** 					state(RELEASE);
ARM GAS  /tmp/ccsPeR2V.s 			page 47


 173:main.c        **** 				}
 174:main.c        **** 				else if (cmd == 'w') {
 175:main.c        **** 					if (sscanf(line+1, "%u", argv) == 1) {
 176:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 177:main.c        **** 						TRACE_INFO("set setpoint to %u\n", loop.SP);
 178:main.c        **** 					}
 179:main.c        **** 					printf("%u\n", loop.SP);
 180:main.c        **** 				}
 181:main.c        **** 				else if (cmd == 'e') {
 182:main.c        **** 					if (sscanf(line+1, "%u", argv) == 1) {
 183:main.c        **** 						loop.rSP = LIMIT(*argv, MINv, MAXv);
 184:main.c        **** 						TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 185:main.c        **** 					}
 186:main.c        **** 					printf("%u\n", loop.rSP);
 187:main.c        **** 				}
 188:main.c        **** 				else if (cmd == 's') {
 189:main.c        **** 					if (sscanf(line+1, "%i", argv) == 1) {
 190:main.c        **** 						loop.rSlope = *argv;
 191:main.c        **** 						TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 192:main.c        **** 					}
 193:main.c        **** 					printf("%i\n", loop.rSlope);
 194:main.c        **** 				}
 195:main.c        **** 				else if (cmd == 'k') {
 196:main.c        **** 					if (sscanf(line+1, "%u%u%u", argv, argv+1, argv+2) == 3) {
 197:main.c        **** 						loop.Kp = argv[0];
 198:main.c        **** 						loop.Ki = argv[1];
 199:main.c        **** 						loop.Kd = argv[2];
 200:main.c        **** 						TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 201:main.c        **** 					}
 202:main.c        **** 					printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 203:main.c        **** 				}
 204:main.c        **** 				else if (cmd == 't') {
 205:main.c        **** 					if (sscanf(line+1, "%u", argv) == 1) {
 206:main.c        **** 						releasetime = *argv;
 207:main.c        **** 						TRACE_INFO("set releasetime to %u\n", releasetime);
 208:main.c        **** 					}
 209:main.c        **** 					printf("%u\n", releasetime);
 210:main.c        **** 				}
 211:main.c        **** 				else if (cmd == '?') {
 212:main.c        **** 					puts("config");
 213:main.c        **** 				}
 214:main.c        **** 				break;
 797              		.loc 2 214 0
 798 0152 70E2     		b	.L60
 799              	.L24:
 168:main.c        **** 				else if (cmd == 'h') {
 800              		.loc 2 168 0
 801 0154 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 802 0156 682B     		cmp	r3, #104
 803 0158 04D1     		bne	.L26
 169:main.c        **** 					state(HOLD);
 804              		.loc 2 169 0
 805 015a 4FF00400 		mov	r0, #4
 806 015e FFF7FEFF 		bl	state
 807              		.loc 2 214 0
 808 0162 68E2     		b	.L60
 809              	.L26:
ARM GAS  /tmp/ccsPeR2V.s 			page 48


 171:main.c        **** 				else if (cmd == 'r') {
 810              		.loc 2 171 0
 811 0164 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 812 0166 722B     		cmp	r3, #114
 813 0168 04D1     		bne	.L27
 172:main.c        **** 					state(RELEASE);
 814              		.loc 2 172 0
 815 016a 4FF00800 		mov	r0, #8
 816 016e FFF7FEFF 		bl	state
 817              		.loc 2 214 0
 818 0172 60E2     		b	.L60
 819              	.L27:
 174:main.c        **** 				else if (cmd == 'w') {
 820              		.loc 2 174 0
 821 0174 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 822 0176 772B     		cmp	r3, #119
 823 0178 40D1     		bne	.L28
 175:main.c        **** 					if (sscanf(line+1, "%u", argv) == 1) {
 824              		.loc 2 175 0
 825 017a FB68     		ldr	r3, [r7, #12]
 826 017c 03F10102 		add	r2, r3, #1
 827 0180 3B46     		mov	r3, r7
 828 0182 1046     		mov	r0, r2
 829 0184 40F20001 		movw	r1, #:lower16:.LC8
 830 0188 C0F20001 		movt	r1, #:upper16:.LC8
 831 018c 1A46     		mov	r2, r3
 832 018e FFF7FEFF 		bl	siscanf
 833 0192 0346     		mov	r3, r0
 834 0194 012B     		cmp	r3, #1
 835 0196 24D1     		bne	.L29
 176:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 836              		.loc 2 176 0
 837 0198 3B68     		ldr	r3, [r7, #0]
 838 019a 002B     		cmp	r3, #0
 839 019c 07DB     		blt	.L30
 176:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 840              		.loc 2 176 0 is_stmt 0 discriminator 1
 841 019e 3A68     		ldr	r2, [r7, #0]
 842 01a0 40F6FF73 		movw	r3, #4095
 843 01a4 9A42     		cmp	r2, r3
 844 01a6 B8BF     		it	lt
 845 01a8 1346     		movlt	r3, r2
 846 01aa 9AB2     		uxth	r2, r3
 847 01ac 01E0     		b	.L31
 848              	.L30:
 176:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 849              		.loc 2 176 0 discriminator 2
 850 01ae 4FF00002 		mov	r2, #0
 851              	.L31:
 176:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 852              		.loc 2 176 0 discriminator 3
 853 01b2 40F20003 		movw	r3, #:lower16:loop
 854 01b6 C0F20003 		movt	r3, #:upper16:loop
 855 01ba 5A80     		strh	r2, [r3, #2]	@ movhi
 177:main.c        **** 						TRACE_INFO("set setpoint to %u\n", loop.SP);
 856              		.loc 2 177 0 is_stmt 1 discriminator 3
 857 01bc 40F20003 		movw	r3, #:lower16:_impure_ptr
ARM GAS  /tmp/ccsPeR2V.s 			page 49


 858 01c0 C0F20003 		movt	r3, #:upper16:_impure_ptr
 859 01c4 1B68     		ldr	r3, [r3, #0]
 860 01c6 DA68     		ldr	r2, [r3, #12]
 861 01c8 40F20003 		movw	r3, #:lower16:loop
 862 01cc C0F20003 		movt	r3, #:upper16:loop
 863 01d0 5B88     		ldrh	r3, [r3, #2]
 864 01d2 1046     		mov	r0, r2
 865 01d4 40F20001 		movw	r1, #:lower16:.LC9
 866 01d8 C0F20001 		movt	r1, #:upper16:.LC9
 867 01dc 1A46     		mov	r2, r3
 868 01de FFF7FEFF 		bl	fiprintf
 869              	.L29:
 179:main.c        **** 					printf("%u\n", loop.SP);
 870              		.loc 2 179 0
 871 01e2 40F20003 		movw	r3, #:lower16:loop
 872 01e6 C0F20003 		movt	r3, #:upper16:loop
 873 01ea 5B88     		ldrh	r3, [r3, #2]
 874 01ec 40F20000 		movw	r0, #:lower16:.LC10
 875 01f0 C0F20000 		movt	r0, #:upper16:.LC10
 876 01f4 1946     		mov	r1, r3
 877 01f6 FFF7FEFF 		bl	iprintf
 878              		.loc 2 214 0
 879 01fa 1CE2     		b	.L60
 880              	.L28:
 181:main.c        **** 				else if (cmd == 'e') {
 881              		.loc 2 181 0
 882 01fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 883 01fe 652B     		cmp	r3, #101
 884 0200 40D1     		bne	.L32
 182:main.c        **** 					if (sscanf(line+1, "%u", argv) == 1) {
 885              		.loc 2 182 0
 886 0202 FB68     		ldr	r3, [r7, #12]
 887 0204 03F10102 		add	r2, r3, #1
 888 0208 3B46     		mov	r3, r7
 889 020a 1046     		mov	r0, r2
 890 020c 40F20001 		movw	r1, #:lower16:.LC8
 891 0210 C0F20001 		movt	r1, #:upper16:.LC8
 892 0214 1A46     		mov	r2, r3
 893 0216 FFF7FEFF 		bl	siscanf
 894 021a 0346     		mov	r3, r0
 895 021c 012B     		cmp	r3, #1
 896 021e 24D1     		bne	.L33
 183:main.c        **** 						loop.rSP = LIMIT(*argv, MINv, MAXv);
 897              		.loc 2 183 0
 898 0220 3B68     		ldr	r3, [r7, #0]
 899 0222 002B     		cmp	r3, #0
 900 0224 07DB     		blt	.L34
 183:main.c        **** 						loop.rSP = LIMIT(*argv, MINv, MAXv);
 901              		.loc 2 183 0 is_stmt 0 discriminator 1
 902 0226 3A68     		ldr	r2, [r7, #0]
 903 0228 40F6FF73 		movw	r3, #4095
 904 022c 9A42     		cmp	r2, r3
 905 022e B8BF     		it	lt
 906 0230 1346     		movlt	r3, r2
 907 0232 9AB2     		uxth	r2, r3
 908 0234 01E0     		b	.L35
 909              	.L34:
ARM GAS  /tmp/ccsPeR2V.s 			page 50


 183:main.c        **** 						loop.rSP = LIMIT(*argv, MINv, MAXv);
 910              		.loc 2 183 0 discriminator 2
 911 0236 4FF00002 		mov	r2, #0
 912              	.L35:
 183:main.c        **** 						loop.rSP = LIMIT(*argv, MINv, MAXv);
 913              		.loc 2 183 0 discriminator 3
 914 023a 40F20003 		movw	r3, #:lower16:loop
 915 023e C0F20003 		movt	r3, #:upper16:loop
 916 0242 9A80     		strh	r2, [r3, #4]	@ movhi
 184:main.c        **** 						TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 917              		.loc 2 184 0 is_stmt 1 discriminator 3
 918 0244 40F20003 		movw	r3, #:lower16:_impure_ptr
 919 0248 C0F20003 		movt	r3, #:upper16:_impure_ptr
 920 024c 1B68     		ldr	r3, [r3, #0]
 921 024e DA68     		ldr	r2, [r3, #12]
 922 0250 40F20003 		movw	r3, #:lower16:loop
 923 0254 C0F20003 		movt	r3, #:upper16:loop
 924 0258 9B88     		ldrh	r3, [r3, #4]
 925 025a 1046     		mov	r0, r2
 926 025c 40F20001 		movw	r1, #:lower16:.LC11
 927 0260 C0F20001 		movt	r1, #:upper16:.LC11
 928 0264 1A46     		mov	r2, r3
 929 0266 FFF7FEFF 		bl	fiprintf
 930              	.L33:
 186:main.c        **** 					printf("%u\n", loop.rSP);
 931              		.loc 2 186 0
 932 026a 40F20003 		movw	r3, #:lower16:loop
 933 026e C0F20003 		movt	r3, #:upper16:loop
 934 0272 9B88     		ldrh	r3, [r3, #4]
 935 0274 40F20000 		movw	r0, #:lower16:.LC10
 936 0278 C0F20000 		movt	r0, #:upper16:.LC10
 937 027c 1946     		mov	r1, r3
 938 027e FFF7FEFF 		bl	iprintf
 939              		.loc 2 214 0
 940 0282 D8E1     		b	.L60
 941              	.L32:
 188:main.c        **** 				else if (cmd == 's') {
 942              		.loc 2 188 0
 943 0284 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 944 0286 732B     		cmp	r3, #115
 945 0288 34D1     		bne	.L36
 189:main.c        **** 					if (sscanf(line+1, "%i", argv) == 1) {
 946              		.loc 2 189 0
 947 028a FB68     		ldr	r3, [r7, #12]
 948 028c 03F10102 		add	r2, r3, #1
 949 0290 3B46     		mov	r3, r7
 950 0292 1046     		mov	r0, r2
 951 0294 40F20001 		movw	r1, #:lower16:.LC12
 952 0298 C0F20001 		movt	r1, #:upper16:.LC12
 953 029c 1A46     		mov	r2, r3
 954 029e FFF7FEFF 		bl	siscanf
 955 02a2 0346     		mov	r3, r0
 956 02a4 012B     		cmp	r3, #1
 957 02a6 18D1     		bne	.L37
 190:main.c        **** 						loop.rSlope = *argv;
 958              		.loc 2 190 0
 959 02a8 3A68     		ldr	r2, [r7, #0]
ARM GAS  /tmp/ccsPeR2V.s 			page 51


 960 02aa 40F20003 		movw	r3, #:lower16:loop
 961 02ae C0F20003 		movt	r3, #:upper16:loop
 962 02b2 9A60     		str	r2, [r3, #8]
 191:main.c        **** 						TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 963              		.loc 2 191 0
 964 02b4 40F20003 		movw	r3, #:lower16:_impure_ptr
 965 02b8 C0F20003 		movt	r3, #:upper16:_impure_ptr
 966 02bc 1B68     		ldr	r3, [r3, #0]
 967 02be DA68     		ldr	r2, [r3, #12]
 968 02c0 40F20003 		movw	r3, #:lower16:loop
 969 02c4 C0F20003 		movt	r3, #:upper16:loop
 970 02c8 9B68     		ldr	r3, [r3, #8]
 971 02ca 1046     		mov	r0, r2
 972 02cc 40F20001 		movw	r1, #:lower16:.LC13
 973 02d0 C0F20001 		movt	r1, #:upper16:.LC13
 974 02d4 1A46     		mov	r2, r3
 975 02d6 FFF7FEFF 		bl	fiprintf
 976              	.L37:
 193:main.c        **** 					printf("%i\n", loop.rSlope);
 977              		.loc 2 193 0
 978 02da 40F20003 		movw	r3, #:lower16:loop
 979 02de C0F20003 		movt	r3, #:upper16:loop
 980 02e2 9B68     		ldr	r3, [r3, #8]
 981 02e4 40F20000 		movw	r0, #:lower16:.LC14
 982 02e8 C0F20000 		movt	r0, #:upper16:.LC14
 983 02ec 1946     		mov	r1, r3
 984 02ee FFF7FEFF 		bl	iprintf
 985              		.loc 2 214 0
 986 02f2 A0E1     		b	.L60
 987              	.L36:
 195:main.c        **** 				else if (cmd == 'k') {
 988              		.loc 2 195 0
 989 02f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 990 02f6 6B2B     		cmp	r3, #107
 991 02f8 61D1     		bne	.L38
 196:main.c        **** 					if (sscanf(line+1, "%u%u%u", argv, argv+1, argv+2) == 3) {
 992              		.loc 2 196 0
 993 02fa FB68     		ldr	r3, [r7, #12]
 994 02fc 03F10101 		add	r1, r3, #1
 995 0300 3A46     		mov	r2, r7
 996 0302 3B46     		mov	r3, r7
 997 0304 03F10403 		add	r3, r3, #4
 998 0308 3846     		mov	r0, r7
 999 030a 00F10800 		add	r0, r0, #8
 1000 030e 0090     		str	r0, [sp, #0]
 1001 0310 0846     		mov	r0, r1
 1002 0312 40F20001 		movw	r1, #:lower16:.LC15
 1003 0316 C0F20001 		movt	r1, #:upper16:.LC15
 1004 031a FFF7FEFF 		bl	siscanf
 1005 031e 0346     		mov	r3, r0
 1006 0320 032B     		cmp	r3, #3
 1007 0322 34D1     		bne	.L39
 197:main.c        **** 						loop.Kp = argv[0];
 1008              		.loc 2 197 0
 1009 0324 3B68     		ldr	r3, [r7, #0]
 1010 0326 9AB2     		uxth	r2, r3
 1011 0328 40F20003 		movw	r3, #:lower16:loop
ARM GAS  /tmp/ccsPeR2V.s 			page 52


 1012 032c C0F20003 		movt	r3, #:upper16:loop
 1013 0330 9A81     		strh	r2, [r3, #12]	@ movhi
 198:main.c        **** 						loop.Ki = argv[1];
 1014              		.loc 2 198 0
 1015 0332 7B68     		ldr	r3, [r7, #4]
 1016 0334 9AB2     		uxth	r2, r3
 1017 0336 40F20003 		movw	r3, #:lower16:loop
 1018 033a C0F20003 		movt	r3, #:upper16:loop
 1019 033e DA81     		strh	r2, [r3, #14]	@ movhi
 199:main.c        **** 						loop.Kd = argv[2];
 1020              		.loc 2 199 0
 1021 0340 BB68     		ldr	r3, [r7, #8]
 1022 0342 9AB2     		uxth	r2, r3
 1023 0344 40F20003 		movw	r3, #:lower16:loop
 1024 0348 C0F20003 		movt	r3, #:upper16:loop
 1025 034c 1A82     		strh	r2, [r3, #16]	@ movhi
 200:main.c        **** 						TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 1026              		.loc 2 200 0
 1027 034e 40F20003 		movw	r3, #:lower16:_impure_ptr
 1028 0352 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1029 0356 1B68     		ldr	r3, [r3, #0]
 1030 0358 D968     		ldr	r1, [r3, #12]
 1031 035a 40F20003 		movw	r3, #:lower16:loop
 1032 035e C0F20003 		movt	r3, #:upper16:loop
 1033 0362 9B89     		ldrh	r3, [r3, #12]
 1034 0364 1A46     		mov	r2, r3
 1035 0366 40F20003 		movw	r3, #:lower16:loop
 1036 036a C0F20003 		movt	r3, #:upper16:loop
 1037 036e DB89     		ldrh	r3, [r3, #14]
 1038 0370 1C46     		mov	r4, r3
 1039 0372 40F20003 		movw	r3, #:lower16:loop
 1040 0376 C0F20003 		movt	r3, #:upper16:loop
 1041 037a 1B8A     		ldrh	r3, [r3, #16]
 1042 037c 0093     		str	r3, [sp, #0]
 1043 037e 0846     		mov	r0, r1
 1044 0380 40F20001 		movw	r1, #:lower16:.LC16
 1045 0384 C0F20001 		movt	r1, #:upper16:.LC16
 1046 0388 2346     		mov	r3, r4
 1047 038a FFF7FEFF 		bl	fiprintf
 1048              	.L39:
 202:main.c        **** 					printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 1049              		.loc 2 202 0
 1050 038e 40F20003 		movw	r3, #:lower16:loop
 1051 0392 C0F20003 		movt	r3, #:upper16:loop
 1052 0396 9B89     		ldrh	r3, [r3, #12]
 1053 0398 1946     		mov	r1, r3
 1054 039a 40F20003 		movw	r3, #:lower16:loop
 1055 039e C0F20003 		movt	r3, #:upper16:loop
 1056 03a2 DB89     		ldrh	r3, [r3, #14]
 1057 03a4 1A46     		mov	r2, r3
 1058 03a6 40F20003 		movw	r3, #:lower16:loop
 1059 03aa C0F20003 		movt	r3, #:upper16:loop
 1060 03ae 1B8A     		ldrh	r3, [r3, #16]
 1061 03b0 40F20000 		movw	r0, #:lower16:.LC17
 1062 03b4 C0F20000 		movt	r0, #:upper16:.LC17
 1063 03b8 FFF7FEFF 		bl	iprintf
 1064              		.loc 2 214 0
ARM GAS  /tmp/ccsPeR2V.s 			page 53


 1065 03bc 3BE1     		b	.L60
 1066              	.L38:
 204:main.c        **** 				else if (cmd == 't') {
 1067              		.loc 2 204 0
 1068 03be FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1069 03c0 742B     		cmp	r3, #116
 1070 03c2 35D1     		bne	.L40
 205:main.c        **** 					if (sscanf(line+1, "%u", argv) == 1) {
 1071              		.loc 2 205 0
 1072 03c4 FB68     		ldr	r3, [r7, #12]
 1073 03c6 03F10102 		add	r2, r3, #1
 1074 03ca 3B46     		mov	r3, r7
 1075 03cc 1046     		mov	r0, r2
 1076 03ce 40F20001 		movw	r1, #:lower16:.LC8
 1077 03d2 C0F20001 		movt	r1, #:upper16:.LC8
 1078 03d6 1A46     		mov	r2, r3
 1079 03d8 FFF7FEFF 		bl	siscanf
 1080 03dc 0346     		mov	r3, r0
 1081 03de 012B     		cmp	r3, #1
 1082 03e0 19D1     		bne	.L41
 206:main.c        **** 						releasetime = *argv;
 1083              		.loc 2 206 0
 1084 03e2 3B68     		ldr	r3, [r7, #0]
 1085 03e4 1A46     		mov	r2, r3
 1086 03e6 40F20003 		movw	r3, #:lower16:releasetime
 1087 03ea C0F20003 		movt	r3, #:upper16:releasetime
 1088 03ee 1A60     		str	r2, [r3, #0]
 207:main.c        **** 						TRACE_INFO("set releasetime to %u\n", releasetime);
 1089              		.loc 2 207 0
 1090 03f0 40F20003 		movw	r3, #:lower16:_impure_ptr
 1091 03f4 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1092 03f8 1B68     		ldr	r3, [r3, #0]
 1093 03fa DA68     		ldr	r2, [r3, #12]
 1094 03fc 40F20003 		movw	r3, #:lower16:releasetime
 1095 0400 C0F20003 		movt	r3, #:upper16:releasetime
 1096 0404 1B68     		ldr	r3, [r3, #0]
 1097 0406 1046     		mov	r0, r2
 1098 0408 40F20001 		movw	r1, #:lower16:.LC18
 1099 040c C0F20001 		movt	r1, #:upper16:.LC18
 1100 0410 1A46     		mov	r2, r3
 1101 0412 FFF7FEFF 		bl	fiprintf
 1102              	.L41:
 209:main.c        **** 					printf("%u\n", releasetime);
 1103              		.loc 2 209 0
 1104 0416 40F20003 		movw	r3, #:lower16:releasetime
 1105 041a C0F20003 		movt	r3, #:upper16:releasetime
 1106 041e 1B68     		ldr	r3, [r3, #0]
 1107 0420 40F20000 		movw	r0, #:lower16:.LC10
 1108 0424 C0F20000 		movt	r0, #:upper16:.LC10
 1109 0428 1946     		mov	r1, r3
 1110 042a FFF7FEFF 		bl	iprintf
 1111              		.loc 2 214 0
 1112 042e 02E1     		b	.L60
 1113              	.L40:
 211:main.c        **** 				else if (cmd == '?') {
 1114              		.loc 2 211 0
 1115 0430 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccsPeR2V.s 			page 54


 1116 0432 3F2B     		cmp	r3, #63
 1117 0434 40F0FF80 		bne	.L60
 212:main.c        **** 					puts("config");
 1118              		.loc 2 212 0
 1119 0438 40F20000 		movw	r0, #:lower16:.LC19
 1120 043c C0F20000 		movt	r0, #:upper16:.LC19
 1121 0440 FFF7FEFF 		bl	puts
 1122              		.loc 2 214 0
 1123 0444 F7E0     		b	.L60
 1124              	.L21:
 215:main.c        **** 
 216:main.c        **** 			case HOLD:
 217:main.c        **** 				if (GetTickCount() % 1000)
 1125              		.loc 2 217 0
 1126 0446 FFF7FEFF 		bl	GetTickCount
 1127 044a 0246     		mov	r2, r0
 1128 044c 44F6D353 		movw	r3, #19923
 1129 0450 C1F26203 		movt	r3, 4194
 1130 0454 A3FB0213 		umull	r1, r3, r3, r2
 1131 0458 4FEA9313 		lsr	r3, r3, #6
 1132 045c 4FF47A71 		mov	r1, #1000
 1133 0460 01FB03F3 		mul	r3, r1, r3
 1134 0464 D31A     		subs	r3, r2, r3
 1135 0466 002B     		cmp	r3, #0
 1136 0468 05D0     		beq	.L43
 218:main.c        **** 					LED_blink(statusled, 1);
 1137              		.loc 2 218 0
 1138 046a 4FF00000 		mov	r0, #0
 1139 046e 4FF00101 		mov	r1, #1
 1140 0472 FFF7FEFF 		bl	LED_blink
 1141              	.L43:
 219:main.c        **** 
 220:main.c        **** 				if (cmd == '?')
 1142              		.loc 2 220 0
 1143 0476 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1144 0478 3F2B     		cmp	r3, #63
 1145 047a 06D1     		bne	.L44
 221:main.c        **** 					puts("hold");
 1146              		.loc 2 221 0
 1147 047c 40F20000 		movw	r0, #:lower16:.LC20
 1148 0480 C0F20000 		movt	r0, #:upper16:.LC20
 1149 0484 FFF7FEFF 		bl	puts
 222:main.c        **** 				else if (cmd == 's')
 223:main.c        **** 					state(STOPPED);
 224:main.c        **** 				else if (cmd == 'w') {
 225:main.c        **** 					if (sscanf(line+1, "%u", argv) == 1) {
 226:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 227:main.c        **** 						TRACE_INFO("set setpoint to %u\n", loop.SP);
 228:main.c        **** 					}
 229:main.c        **** 					printf("%u\n", loop.SP);
 230:main.c        **** 				}
 231:main.c        **** 				break;
 1150              		.loc 2 231 0
 1151 0488 D7E0     		b	.L61
 1152              	.L44:
 222:main.c        **** 				else if (cmd == 's')
 1153              		.loc 2 222 0
ARM GAS  /tmp/ccsPeR2V.s 			page 55


 1154 048a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1155 048c 732B     		cmp	r3, #115
 1156 048e 04D1     		bne	.L46
 223:main.c        **** 					state(STOPPED);
 1157              		.loc 2 223 0
 1158 0490 4FF00100 		mov	r0, #1
 1159 0494 FFF7FEFF 		bl	state
 1160              		.loc 2 231 0
 1161 0498 CFE0     		b	.L61
 1162              	.L46:
 224:main.c        **** 				else if (cmd == 'w') {
 1163              		.loc 2 224 0
 1164 049a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1165 049c 772B     		cmp	r3, #119
 1166 049e 40F0CC80 		bne	.L61
 225:main.c        **** 					if (sscanf(line+1, "%u", argv) == 1) {
 1167              		.loc 2 225 0
 1168 04a2 FB68     		ldr	r3, [r7, #12]
 1169 04a4 03F10102 		add	r2, r3, #1
 1170 04a8 3B46     		mov	r3, r7
 1171 04aa 1046     		mov	r0, r2
 1172 04ac 40F20001 		movw	r1, #:lower16:.LC8
 1173 04b0 C0F20001 		movt	r1, #:upper16:.LC8
 1174 04b4 1A46     		mov	r2, r3
 1175 04b6 FFF7FEFF 		bl	siscanf
 1176 04ba 0346     		mov	r3, r0
 1177 04bc 012B     		cmp	r3, #1
 1178 04be 24D1     		bne	.L47
 226:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 1179              		.loc 2 226 0
 1180 04c0 3B68     		ldr	r3, [r7, #0]
 1181 04c2 002B     		cmp	r3, #0
 1182 04c4 07DB     		blt	.L48
 226:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 1183              		.loc 2 226 0 is_stmt 0 discriminator 1
 1184 04c6 3A68     		ldr	r2, [r7, #0]
 1185 04c8 40F6FF73 		movw	r3, #4095
 1186 04cc 9A42     		cmp	r2, r3
 1187 04ce B8BF     		it	lt
 1188 04d0 1346     		movlt	r3, r2
 1189 04d2 9AB2     		uxth	r2, r3
 1190 04d4 01E0     		b	.L49
 1191              	.L48:
 226:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 1192              		.loc 2 226 0 discriminator 2
 1193 04d6 4FF00002 		mov	r2, #0
 1194              	.L49:
 226:main.c        **** 						loop.SP = LIMIT(*argv, MINv, MAXv);
 1195              		.loc 2 226 0 discriminator 3
 1196 04da 40F20003 		movw	r3, #:lower16:loop
 1197 04de C0F20003 		movt	r3, #:upper16:loop
 1198 04e2 5A80     		strh	r2, [r3, #2]	@ movhi
 227:main.c        **** 						TRACE_INFO("set setpoint to %u\n", loop.SP);
 1199              		.loc 2 227 0 is_stmt 1 discriminator 3
 1200 04e4 40F20003 		movw	r3, #:lower16:_impure_ptr
 1201 04e8 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1202 04ec 1B68     		ldr	r3, [r3, #0]
ARM GAS  /tmp/ccsPeR2V.s 			page 56


 1203 04ee DA68     		ldr	r2, [r3, #12]
 1204 04f0 40F20003 		movw	r3, #:lower16:loop
 1205 04f4 C0F20003 		movt	r3, #:upper16:loop
 1206 04f8 5B88     		ldrh	r3, [r3, #2]
 1207 04fa 1046     		mov	r0, r2
 1208 04fc 40F20001 		movw	r1, #:lower16:.LC9
 1209 0500 C0F20001 		movt	r1, #:upper16:.LC9
 1210 0504 1A46     		mov	r2, r3
 1211 0506 FFF7FEFF 		bl	fiprintf
 1212              	.L47:
 229:main.c        **** 					printf("%u\n", loop.SP);
 1213              		.loc 2 229 0
 1214 050a 40F20003 		movw	r3, #:lower16:loop
 1215 050e C0F20003 		movt	r3, #:upper16:loop
 1216 0512 5B88     		ldrh	r3, [r3, #2]
 1217 0514 40F20000 		movw	r0, #:lower16:.LC10
 1218 0518 C0F20000 		movt	r0, #:upper16:.LC10
 1219 051c 1946     		mov	r1, r3
 1220 051e FFF7FEFF 		bl	iprintf
 1221              		.loc 2 231 0
 1222 0522 8AE0     		b	.L61
 1223              	.L22:
 232:main.c        **** 
 233:main.c        **** 			case RELEASE:
 234:main.c        **** 				if (GetTickCount() % 1000)
 1224              		.loc 2 234 0
 1225 0524 FFF7FEFF 		bl	GetTickCount
 1226 0528 0246     		mov	r2, r0
 1227 052a 44F6D353 		movw	r3, #19923
 1228 052e C1F26203 		movt	r3, 4194
 1229 0532 A3FB0213 		umull	r1, r3, r3, r2
 1230 0536 4FEA9313 		lsr	r3, r3, #6
 1231 053a 4FF47A71 		mov	r1, #1000
 1232 053e 01FB03F3 		mul	r3, r1, r3
 1233 0542 D31A     		subs	r3, r2, r3
 1234 0544 002B     		cmp	r3, #0
 1235 0546 05D0     		beq	.L50
 235:main.c        **** 					LED_blink(statusled, 2);
 1236              		.loc 2 235 0
 1237 0548 4FF00000 		mov	r0, #0
 1238 054c 4FF00201 		mov	r1, #2
 1239 0550 FFF7FEFF 		bl	LED_blink
 1240              	.L50:
 236:main.c        **** 
 237:main.c        **** 				if (timestamp == 0)
 1241              		.loc 2 237 0
 1242 0554 3B69     		ldr	r3, [r7, #16]
 1243 0556 002B     		cmp	r3, #0
 1244 0558 0AD1     		bne	.L51
 238:main.c        **** 					timestamp = GetTickCount() + releasetime;
 1245              		.loc 2 238 0
 1246 055a FFF7FEFF 		bl	GetTickCount
 1247 055e 0246     		mov	r2, r0
 1248 0560 40F20003 		movw	r3, #:lower16:releasetime
 1249 0564 C0F20003 		movt	r3, #:upper16:releasetime
 1250 0568 1B68     		ldr	r3, [r3, #0]
 1251 056a D318     		adds	r3, r2, r3
ARM GAS  /tmp/ccsPeR2V.s 			page 57


 1252 056c 3B61     		str	r3, [r7, #16]
 1253 056e 19E0     		b	.L52
 1254              	.L51:
 239:main.c        **** 				else if (GetTickCount() >= timestamp) {
 1255              		.loc 2 239 0
 1256 0570 FFF7FEFF 		bl	GetTickCount
 1257 0574 0246     		mov	r2, r0
 1258 0576 3B69     		ldr	r3, [r7, #16]
 1259 0578 9A42     		cmp	r2, r3
 1260 057a 13D3     		bcc	.L52
 240:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
 1261              		.loc 2 240 0
 1262 057c 40F20003 		movw	r3, #:lower16:_impure_ptr
 1263 0580 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1264 0584 1B68     		ldr	r3, [r3, #0]
 1265 0586 DB68     		ldr	r3, [r3, #12]
 1266 0588 1846     		mov	r0, r3
 1267 058a 40F20001 		movw	r1, #:lower16:.LC21
 1268 058e C0F20001 		movt	r1, #:upper16:.LC21
 1269 0592 FFF7FEFF 		bl	fiprintf
 241:main.c        **** 					timestamp = 0;
 1270              		.loc 2 241 0
 1271 0596 4FF00003 		mov	r3, #0
 1272 059a 3B61     		str	r3, [r7, #16]
 242:main.c        **** 					state(STOPPED);
 1273              		.loc 2 242 0
 1274 059c 4FF00100 		mov	r0, #1
 1275 05a0 FFF7FEFF 		bl	state
 1276              	.L52:
 243:main.c        **** 				}
 244:main.c        **** 
 245:main.c        **** 				if (cmd == '?')
 1277              		.loc 2 245 0
 1278 05a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1279 05a6 3F2B     		cmp	r3, #63
 1280 05a8 06D1     		bne	.L53
 246:main.c        **** 					puts("release");
 1281              		.loc 2 246 0
 1282 05aa 40F20000 		movw	r0, #:lower16:.LC22
 1283 05ae C0F20000 		movt	r0, #:upper16:.LC22
 1284 05b2 FFF7FEFF 		bl	puts
 247:main.c        **** 				else if (cmd == 's')
 248:main.c        **** 					state(STOPPED);
 249:main.c        **** 				break;
 1285              		.loc 2 249 0
 1286 05b6 42E0     		b	.L62
 1287              	.L53:
 247:main.c        **** 				else if (cmd == 's')
 1288              		.loc 2 247 0
 1289 05b8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1290 05ba 732B     		cmp	r3, #115
 1291 05bc 3FD1     		bne	.L62
 248:main.c        **** 					state(STOPPED);
 1292              		.loc 2 248 0
 1293 05be 4FF00100 		mov	r0, #1
 1294 05c2 FFF7FEFF 		bl	state
 1295              		.loc 2 249 0
ARM GAS  /tmp/ccsPeR2V.s 			page 58


 1296 05c6 3AE0     		b	.L62
 1297              	.L20:
 250:main.c        **** 
 251:main.c        **** 			case RUN:
 252:main.c        **** 				if (GetTickCount() % 1000)
 1298              		.loc 2 252 0
 1299 05c8 FFF7FEFF 		bl	GetTickCount
 1300 05cc 0246     		mov	r2, r0
 1301 05ce 44F6D353 		movw	r3, #19923
 1302 05d2 C1F26203 		movt	r3, 4194
 1303 05d6 A3FB0213 		umull	r1, r3, r3, r2
 1304 05da 4FEA9313 		lsr	r3, r3, #6
 1305 05de 4FF47A71 		mov	r1, #1000
 1306 05e2 01FB03F3 		mul	r3, r1, r3
 1307 05e6 D31A     		subs	r3, r2, r3
 1308 05e8 002B     		cmp	r3, #0
 1309 05ea 05D0     		beq	.L55
 253:main.c        **** 					LED_blink(statusled, 3);
 1310              		.loc 2 253 0
 1311 05ec 4FF00000 		mov	r0, #0
 1312 05f0 4FF00301 		mov	r1, #3
 1313 05f4 FFF7FEFF 		bl	LED_blink
 1314              	.L55:
 254:main.c        **** 
 255:main.c        **** 				if (cmd == '?')
 1315              		.loc 2 255 0
 1316 05f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1317 05fa 3F2B     		cmp	r3, #63
 1318 05fc 06D1     		bne	.L56
 256:main.c        **** 					puts("run");
 1319              		.loc 2 256 0
 1320 05fe 40F20000 		movw	r0, #:lower16:.LC23
 1321 0602 C0F20000 		movt	r0, #:upper16:.LC23
 1322 0606 FFF7FEFF 		bl	puts
 257:main.c        **** 				else if (cmd == 's')
 258:main.c        **** 					state(STOPPED);
 259:main.c        **** 				else if (cmd == 'r')
 260:main.c        **** 					state(RELEASE);
 261:main.c        **** 				break;
 1323              		.loc 2 261 0
 1324 060a 1AE0     		b	.L63
 1325              	.L56:
 257:main.c        **** 				else if (cmd == 's')
 1326              		.loc 2 257 0
 1327 060c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1328 060e 732B     		cmp	r3, #115
 1329 0610 04D1     		bne	.L58
 258:main.c        **** 					state(STOPPED);
 1330              		.loc 2 258 0
 1331 0612 4FF00100 		mov	r0, #1
 1332 0616 FFF7FEFF 		bl	state
 1333              		.loc 2 261 0
 1334 061a 12E0     		b	.L63
 1335              	.L58:
 259:main.c        **** 				else if (cmd == 'r')
 1336              		.loc 2 259 0
 1337 061c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccsPeR2V.s 			page 59


 1338 061e 722B     		cmp	r3, #114
 1339 0620 0FD1     		bne	.L63
 260:main.c        **** 					state(RELEASE);
 1340              		.loc 2 260 0
 1341 0622 4FF00800 		mov	r0, #8
 1342 0626 FFF7FEFF 		bl	state
 1343              		.loc 2 261 0
 1344 062a 0AE0     		b	.L63
 1345              	.L18:
 262:main.c        **** 
 263:main.c        **** 			default:
 264:main.c        **** 				state(STOPPED);
 1346              		.loc 2 264 0
 1347 062c 4FF00100 		mov	r0, #1
 1348 0630 FFF7FEFF 		bl	state
 265:main.c        **** 		}
 266:main.c        **** 	}
 1349              		.loc 2 266 0
 1350 0634 5AE5     		b	.L59
 1351              	.L60:
 214:main.c        **** 				break;
 1352              		.loc 2 214 0
 1353 0636 00BF     		nop
 1354 0638 04E0     		b	.L42
 1355              	.L61:
 231:main.c        **** 				break;
 1356              		.loc 2 231 0
 1357 063a 00BF     		nop
 1358 063c 02E0     		b	.L42
 1359              	.L62:
 249:main.c        **** 				break;
 1360              		.loc 2 249 0
 1361 063e 00BF     		nop
 1362 0640 00E0     		b	.L42
 1363              	.L63:
 261:main.c        **** 				break;
 1364              		.loc 2 261 0
 1365 0642 00BF     		nop
 1366              	.L42:
 1367              		.loc 2 266 0
 1368 0644 52E5     		b	.L59
 1369              		.cfi_endproc
 1370              	.LFE37:
 1371              		.size	main, .-main
 1372 0646 00BF     		.section	.text.TC1_IrqHandler,"ax",%progbits
 1373              		.align	2
 1374              		.global	TC1_IrqHandler
 1375              		.thumb
 1376              		.thumb_func
 1377              		.type	TC1_IrqHandler, %function
 1378              	TC1_IrqHandler:
 1379              	.LFB38:
 267:main.c        **** 	return 0;
 268:main.c        **** }
 269:main.c        **** 
 270:main.c        **** void TC1_IrqHandler()
 271:main.c        **** {
ARM GAS  /tmp/ccsPeR2V.s 			page 60


 1380              		.loc 2 271 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384 0000 80B5     		push	{r7, lr}
 1385              	.LCFI15:
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 14, -4
 1388              		.cfi_offset 7, -8
 1389 0002 00AF     		add	r7, sp, #0
 1390              	.LCFI16:
 1391              		.cfi_def_cfa_register 7
 272:main.c        **** 	ADC_StartConversion(ADC);
 1392              		.loc 2 272 0
 1393 0004 4FF40043 		mov	r3, #32768
 1394 0008 C4F20303 		movt	r3, 16387
 1395 000c 4FF00202 		mov	r2, #2
 1396 0010 1A60     		str	r2, [r3, #0]
 273:main.c        **** 	ADC_ReadBuffer(ADC, (int16_t*) input, BUFFER_SIZE);
 1397              		.loc 2 273 0
 1398 0012 4FF40040 		mov	r0, #32768
 1399 0016 C4F20300 		movt	r0, 16387
 1400 001a 40F20001 		movw	r1, #:lower16:input
 1401 001e C0F20001 		movt	r1, #:upper16:input
 1402 0022 4FF00202 		mov	r2, #2
 1403 0026 FFF7FEFF 		bl	ADC_ReadBuffer
 274:main.c        **** }
 1404              		.loc 2 274 0
 1405 002a 80BD     		pop	{r7, pc}
 1406              		.cfi_endproc
 1407              	.LFE38:
 1408              		.size	TC1_IrqHandler, .-TC1_IrqHandler
 1409              		.section	.text.ADC_IrqHandler,"ax",%progbits
 1410              		.align	2
 1411              		.global	ADC_IrqHandler
 1412              		.thumb
 1413              		.thumb_func
 1414              		.type	ADC_IrqHandler, %function
 1415              	ADC_IrqHandler:
 1416              	.LFB39:
 275:main.c        **** 
 276:main.c        **** void ADC_IrqHandler(void)
 277:main.c        **** {
 1417              		.loc 2 277 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 8
 1420              		@ frame_needed = 1, uses_anonymous_args = 0
 1421 0000 80B5     		push	{r7, lr}
 1422              	.LCFI17:
 1423              		.cfi_def_cfa_offset 8
 1424              		.cfi_offset 14, -4
 1425              		.cfi_offset 7, -8
 1426 0002 82B0     		sub	sp, sp, #8
 1427              	.LCFI18:
 1428              		.cfi_def_cfa_offset 16
 1429 0004 00AF     		add	r7, sp, #0
 1430              	.LCFI19:
ARM GAS  /tmp/ccsPeR2V.s 			page 61


 1431              		.cfi_def_cfa_register 7
 278:main.c        ****     uint32_t status;
 279:main.c        **** 	uint32_t duty = 0;
 1432              		.loc 2 279 0
 1433 0006 4FF00003 		mov	r3, #0
 1434 000a 7B60     		str	r3, [r7, #4]
 280:main.c        **** 
 281:main.c        ****     status = ADC_GetStatus(ADC);
 1435              		.loc 2 281 0
 1436 000c 4FF40043 		mov	r3, #32768
 1437 0010 C4F20303 		movt	r3, 16387
 1438 0014 1B6B     		ldr	r3, [r3, #48]
 1439 0016 3B60     		str	r3, [r7, #0]
 282:main.c        **** 
 283:main.c        **** 	if ((status & ADC_ISR_RXBUFF) == ADC_ISR_RXBUFF) {
 1440              		.loc 2 283 0
 1441 0018 3B68     		ldr	r3, [r7, #0]
 1442 001a 03F08053 		and	r3, r3, #268435456
 1443 001e 002B     		cmp	r3, #0
 1444 0020 00F08B80 		beq	.L65
 284:main.c        **** 		if (_state & (RUN|HOLD)) {
 1445              		.loc 2 284 0
 1446 0024 40F20003 		movw	r3, #:lower16:_state
 1447 0028 C0F20003 		movt	r3, #:upper16:_state
 1448 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1449 002e 03F00603 		and	r3, r3, #6
 1450 0032 002B     		cmp	r3, #0
 1451 0034 00F08180 		beq	.L65
 285:main.c        **** 			control(LIMIT(input[0], MINv, MAXv), &loop);
 1452              		.loc 2 285 0
 1453 0038 40F20003 		movw	r3, #:lower16:input
 1454 003c C0F20003 		movt	r3, #:upper16:input
 1455 0040 1A88     		ldrh	r2, [r3, #0]
 1456 0042 40F6FF73 		movw	r3, #4095
 1457 0046 9A42     		cmp	r2, r3
 1458 0048 38BF     		it	cc
 1459 004a 1346     		movcc	r3, r2
 1460 004c 9BB2     		uxth	r3, r3
 1461 004e 1846     		mov	r0, r3
 1462 0050 40F20001 		movw	r1, #:lower16:loop
 1463 0054 C0F20001 		movt	r1, #:upper16:loop
 1464 0058 FFF7FEFF 		bl	control
 286:main.c        **** 			duty = loop.tristate->output * ((loop.output * PWM_PERIOD) / MAX);
 1465              		.loc 2 286 0
 1466 005c 40F20003 		movw	r3, #:lower16:loop
 1467 0060 C0F20003 		movt	r3, #:upper16:loop
 1468 0064 9B6A     		ldr	r3, [r3, #40]
 1469 0066 5968     		ldr	r1, [r3, #4]
 1470 0068 40F20003 		movw	r3, #:lower16:loop
 1471 006c C0F20003 		movt	r3, #:upper16:loop
 1472 0070 DB8C     		ldrh	r3, [r3, #38]
 1473 0072 1BB2     		sxth	r3, r3
 1474 0074 4FF06402 		mov	r2, #100
 1475 0078 02FB03F3 		mul	r3, r2, r3
 1476 007c 03F57E62 		add	r2, r3, #4064
 1477 0080 02F11F02 		add	r2, r2, #31
 1478 0084 002B     		cmp	r3, #0
ARM GAS  /tmp/ccsPeR2V.s 			page 62


 1479 0086 B8BF     		it	lt
 1480 0088 1346     		movlt	r3, r2
 1481 008a 4FEA2333 		asr	r3, r3, #12
 1482 008e 03F1FF33 		add	r3, r3, #-1
 1483 0092 03FB01F3 		mul	r3, r3, r1
 1484 0096 7B60     		str	r3, [r7, #4]
 287:main.c        **** 			if (loop.tristate->output == 1) {
 1485              		.loc 2 287 0
 1486 0098 40F20003 		movw	r3, #:lower16:loop
 1487 009c C0F20003 		movt	r3, #:upper16:loop
 1488 00a0 9B6A     		ldr	r3, [r3, #40]
 1489 00a2 5B68     		ldr	r3, [r3, #4]
 1490 00a4 012B     		cmp	r3, #1
 1491 00a6 15D1     		bne	.L67
 288:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM0, duty);
 1492              		.loc 2 288 0
 1493 00a8 7B68     		ldr	r3, [r7, #4]
 1494 00aa 9BB2     		uxth	r3, r3
 1495 00ac 4FF00000 		mov	r0, #0
 1496 00b0 C4F20200 		movt	r0, 16386
 1497 00b4 4FF00001 		mov	r1, #0
 1498 00b8 1A46     		mov	r2, r3
 1499 00ba FFF7FEFF 		bl	PWMC_SetDutyCycle
 289:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM1, 0);
 1500              		.loc 2 289 0
 1501 00be 4FF00000 		mov	r0, #0
 1502 00c2 C4F20200 		movt	r0, 16386
 1503 00c6 4FF00101 		mov	r1, #1
 1504 00ca 4FF00002 		mov	r2, #0
 1505 00ce FFF7FEFF 		bl	PWMC_SetDutyCycle
 1506 00d2 32E0     		b	.L65
 1507              	.L67:
 290:main.c        **** 			}
 291:main.c        **** 			else if (loop.tristate->output == -1) {
 1508              		.loc 2 291 0
 1509 00d4 40F20003 		movw	r3, #:lower16:loop
 1510 00d8 C0F20003 		movt	r3, #:upper16:loop
 1511 00dc 9B6A     		ldr	r3, [r3, #40]
 1512 00de 5B68     		ldr	r3, [r3, #4]
 1513 00e0 B3F1FF3F 		cmp	r3, #-1
 1514 00e4 15D1     		bne	.L68
 292:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM0, 0);
 1515              		.loc 2 292 0
 1516 00e6 4FF00000 		mov	r0, #0
 1517 00ea C4F20200 		movt	r0, 16386
 1518 00ee 4FF00001 		mov	r1, #0
 1519 00f2 4FF00002 		mov	r2, #0
 1520 00f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
 293:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM1, duty);
 1521              		.loc 2 293 0
 1522 00fa 7B68     		ldr	r3, [r7, #4]
 1523 00fc 9BB2     		uxth	r3, r3
 1524 00fe 4FF00000 		mov	r0, #0
 1525 0102 C4F20200 		movt	r0, 16386
 1526 0106 4FF00101 		mov	r1, #1
 1527 010a 1A46     		mov	r2, r3
 1528 010c FFF7FEFF 		bl	PWMC_SetDutyCycle
ARM GAS  /tmp/ccsPeR2V.s 			page 63


 1529 0110 13E0     		b	.L65
 1530              	.L68:
 294:main.c        **** 			}
 295:main.c        **** 			else {
 296:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM0, 0);
 1531              		.loc 2 296 0
 1532 0112 4FF00000 		mov	r0, #0
 1533 0116 C4F20200 		movt	r0, 16386
 1534 011a 4FF00001 		mov	r1, #0
 1535 011e 4FF00002 		mov	r2, #0
 1536 0122 FFF7FEFF 		bl	PWMC_SetDutyCycle
 297:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM1, 0);
 1537              		.loc 2 297 0
 1538 0126 4FF00000 		mov	r0, #0
 1539 012a C4F20200 		movt	r0, 16386
 1540 012e 4FF00101 		mov	r1, #1
 1541 0132 4FF00002 		mov	r2, #0
 1542 0136 FFF7FEFF 		bl	PWMC_SetDutyCycle
 1543              	.L65:
 298:main.c        **** 			}
 299:main.c        **** 		}
 300:main.c        **** 	}
 301:main.c        **** }
 1544              		.loc 2 301 0
 1545 013a 07F10807 		add	r7, r7, #8
 1546 013e BD46     		mov	sp, r7
 1547 0140 80BD     		pop	{r7, pc}
 1548              		.cfi_endproc
 1549              	.LFE39:
 1550              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 1551 0142 00BF     		.text
 1552              	.Letext0:
 1553              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1554              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1555              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 1556              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1557              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1558              		.file 8 "libchip/include/SAM3S.h"
 1559              		.file 9 "controller.h"
 1560              		.section	.debug_info,"",%progbits
 1561              	.Ldebug_info0:
 1562 0000 B5190000 		.4byte	0x19b5
 1563 0004 0200     		.2byte	0x2
 1564 0006 00000000 		.4byte	.Ldebug_abbrev0
 1565 000a 04       		.byte	0x4
 1566 000b 01       		.uleb128 0x1
 1567 000c F40A0000 		.4byte	.LASF337
 1568 0010 01       		.byte	0x1
 1569 0011 61060000 		.4byte	.LASF338
 1570 0015 D8090000 		.4byte	.LASF339
 1571 0019 00000000 		.4byte	0
 1572 001d 00000000 		.4byte	0
 1573 0021 00000000 		.4byte	.Ldebug_ranges0+0
 1574 0025 00000000 		.4byte	.Ldebug_line0
 1575 0029 02       		.uleb128 0x2
 1576 002a 01       		.byte	0x1
 1577 002b 06       		.byte	0x6
ARM GAS  /tmp/ccsPeR2V.s 			page 64


 1578 002c 52020000 		.4byte	.LASF0
 1579 0030 02       		.uleb128 0x2
 1580 0031 01       		.byte	0x1
 1581 0032 08       		.byte	0x8
 1582 0033 94020000 		.4byte	.LASF1
 1583 0037 02       		.uleb128 0x2
 1584 0038 02       		.byte	0x2
 1585 0039 05       		.byte	0x5
 1586 003a 370A0000 		.4byte	.LASF2
 1587 003e 02       		.uleb128 0x2
 1588 003f 02       		.byte	0x2
 1589 0040 07       		.byte	0x7
 1590 0041 790B0000 		.4byte	.LASF3
 1591 0045 03       		.uleb128 0x3
 1592 0046 04       		.byte	0x4
 1593 0047 05       		.byte	0x5
 1594 0048 696E7400 		.ascii	"int\000"
 1595 004c 02       		.uleb128 0x2
 1596 004d 04       		.byte	0x4
 1597 004e 07       		.byte	0x7
 1598 004f F4060000 		.4byte	.LASF4
 1599 0053 02       		.uleb128 0x2
 1600 0054 08       		.byte	0x8
 1601 0055 05       		.byte	0x5
 1602 0056 EE050000 		.4byte	.LASF5
 1603 005a 02       		.uleb128 0x2
 1604 005b 08       		.byte	0x8
 1605 005c 07       		.byte	0x7
 1606 005d 14080000 		.4byte	.LASF6
 1607 0061 04       		.uleb128 0x4
 1608 0062 49050000 		.4byte	.LASF8
 1609 0066 03       		.byte	0x3
 1610 0067 07       		.byte	0x7
 1611 0068 45000000 		.4byte	0x45
 1612 006c 02       		.uleb128 0x2
 1613 006d 04       		.byte	0x4
 1614 006e 05       		.byte	0x5
 1615 006f AA010000 		.4byte	.LASF7
 1616 0073 04       		.uleb128 0x4
 1617 0074 CE070000 		.4byte	.LASF9
 1618 0078 04       		.byte	0x4
 1619 0079 2C       		.byte	0x2c
 1620 007a 6C000000 		.4byte	0x6c
 1621 007e 05       		.uleb128 0x5
 1622 007f 14090000 		.4byte	.LASF10
 1623 0083 05       		.byte	0x5
 1624 0084 6101     		.2byte	0x161
 1625 0086 4C000000 		.4byte	0x4c
 1626 008a 06       		.uleb128 0x6
 1627 008b 04       		.byte	0x4
 1628 008c 04       		.byte	0x4
 1629 008d 46       		.byte	0x46
 1630 008e A9000000 		.4byte	0xa9
 1631 0092 07       		.uleb128 0x7
 1632 0093 3C010000 		.4byte	.LASF11
 1633 0097 04       		.byte	0x4
 1634 0098 48       		.byte	0x48
ARM GAS  /tmp/ccsPeR2V.s 			page 65


 1635 0099 7E000000 		.4byte	0x7e
 1636 009d 07       		.uleb128 0x7
 1637 009e D6070000 		.4byte	.LASF12
 1638 00a2 04       		.byte	0x4
 1639 00a3 49       		.byte	0x49
 1640 00a4 A9000000 		.4byte	0xa9
 1641 00a8 00       		.byte	0
 1642 00a9 08       		.uleb128 0x8
 1643 00aa 30000000 		.4byte	0x30
 1644 00ae B9000000 		.4byte	0xb9
 1645 00b2 09       		.uleb128 0x9
 1646 00b3 4C000000 		.4byte	0x4c
 1647 00b7 03       		.byte	0x3
 1648 00b8 00       		.byte	0
 1649 00b9 0A       		.uleb128 0xa
 1650 00ba 08       		.byte	0x8
 1651 00bb 04       		.byte	0x4
 1652 00bc 43       		.byte	0x43
 1653 00bd DE000000 		.4byte	0xde
 1654 00c1 0B       		.uleb128 0xb
 1655 00c2 8E070000 		.4byte	.LASF13
 1656 00c6 04       		.byte	0x4
 1657 00c7 45       		.byte	0x45
 1658 00c8 45000000 		.4byte	0x45
 1659 00cc 02       		.byte	0x2
 1660 00cd 23       		.byte	0x23
 1661 00ce 00       		.uleb128 0
 1662 00cf 0B       		.uleb128 0xb
 1663 00d0 2A000000 		.4byte	.LASF14
 1664 00d4 04       		.byte	0x4
 1665 00d5 4A       		.byte	0x4a
 1666 00d6 8A000000 		.4byte	0x8a
 1667 00da 02       		.byte	0x2
 1668 00db 23       		.byte	0x23
 1669 00dc 04       		.uleb128 0x4
 1670 00dd 00       		.byte	0
 1671 00de 04       		.uleb128 0x4
 1672 00df F1080000 		.4byte	.LASF15
 1673 00e3 04       		.byte	0x4
 1674 00e4 4B       		.byte	0x4b
 1675 00e5 B9000000 		.4byte	0xb9
 1676 00e9 04       		.uleb128 0x4
 1677 00ea DA080000 		.4byte	.LASF16
 1678 00ee 04       		.byte	0x4
 1679 00ef 4F       		.byte	0x4f
 1680 00f0 61000000 		.4byte	0x61
 1681 00f4 0C       		.uleb128 0xc
 1682 00f5 04       		.byte	0x4
 1683 00f6 04       		.uleb128 0x4
 1684 00f7 140B0000 		.4byte	.LASF17
 1685 00fb 06       		.byte	0x6
 1686 00fc 15       		.byte	0x15
 1687 00fd 01010000 		.4byte	0x101
 1688 0101 02       		.uleb128 0x2
 1689 0102 04       		.byte	0x4
 1690 0103 07       		.byte	0x7
 1691 0104 D2040000 		.4byte	.LASF18
ARM GAS  /tmp/ccsPeR2V.s 			page 66


 1692 0108 0D       		.uleb128 0xd
 1693 0109 9D050000 		.4byte	.LASF23
 1694 010d 18       		.byte	0x18
 1695 010e 06       		.byte	0x6
 1696 010f 2C       		.byte	0x2c
 1697 0110 67010000 		.4byte	0x167
 1698 0114 0B       		.uleb128 0xb
 1699 0115 34090000 		.4byte	.LASF19
 1700 0119 06       		.byte	0x6
 1701 011a 2E       		.byte	0x2e
 1702 011b 67010000 		.4byte	0x167
 1703 011f 02       		.byte	0x2
 1704 0120 23       		.byte	0x23
 1705 0121 00       		.uleb128 0
 1706 0122 0E       		.uleb128 0xe
 1707 0123 5F6B00   		.ascii	"_k\000"
 1708 0126 06       		.byte	0x6
 1709 0127 2F       		.byte	0x2f
 1710 0128 45000000 		.4byte	0x45
 1711 012c 02       		.byte	0x2
 1712 012d 23       		.byte	0x23
 1713 012e 04       		.uleb128 0x4
 1714 012f 0B       		.uleb128 0xb
 1715 0130 AE050000 		.4byte	.LASF20
 1716 0134 06       		.byte	0x6
 1717 0135 2F       		.byte	0x2f
 1718 0136 45000000 		.4byte	0x45
 1719 013a 02       		.byte	0x2
 1720 013b 23       		.byte	0x23
 1721 013c 08       		.uleb128 0x8
 1722 013d 0B       		.uleb128 0xb
 1723 013e D3060000 		.4byte	.LASF21
 1724 0142 06       		.byte	0x6
 1725 0143 2F       		.byte	0x2f
 1726 0144 45000000 		.4byte	0x45
 1727 0148 02       		.byte	0x2
 1728 0149 23       		.byte	0x23
 1729 014a 0C       		.uleb128 0xc
 1730 014b 0B       		.uleb128 0xb
 1731 014c 17040000 		.4byte	.LASF22
 1732 0150 06       		.byte	0x6
 1733 0151 2F       		.byte	0x2f
 1734 0152 45000000 		.4byte	0x45
 1735 0156 02       		.byte	0x2
 1736 0157 23       		.byte	0x23
 1737 0158 10       		.uleb128 0x10
 1738 0159 0E       		.uleb128 0xe
 1739 015a 5F7800   		.ascii	"_x\000"
 1740 015d 06       		.byte	0x6
 1741 015e 30       		.byte	0x30
 1742 015f 6D010000 		.4byte	0x16d
 1743 0163 02       		.byte	0x2
 1744 0164 23       		.byte	0x23
 1745 0165 14       		.uleb128 0x14
 1746 0166 00       		.byte	0
 1747 0167 0F       		.uleb128 0xf
 1748 0168 04       		.byte	0x4
ARM GAS  /tmp/ccsPeR2V.s 			page 67


 1749 0169 08010000 		.4byte	0x108
 1750 016d 08       		.uleb128 0x8
 1751 016e F6000000 		.4byte	0xf6
 1752 0172 7D010000 		.4byte	0x17d
 1753 0176 09       		.uleb128 0x9
 1754 0177 4C000000 		.4byte	0x4c
 1755 017b 00       		.byte	0
 1756 017c 00       		.byte	0
 1757 017d 0D       		.uleb128 0xd
 1758 017e 91000000 		.4byte	.LASF24
 1759 0182 24       		.byte	0x24
 1760 0183 06       		.byte	0x6
 1761 0184 34       		.byte	0x34
 1762 0185 08020000 		.4byte	0x208
 1763 0189 0B       		.uleb128 0xb
 1764 018a AD000000 		.4byte	.LASF25
 1765 018e 06       		.byte	0x6
 1766 018f 36       		.byte	0x36
 1767 0190 45000000 		.4byte	0x45
 1768 0194 02       		.byte	0x2
 1769 0195 23       		.byte	0x23
 1770 0196 00       		.uleb128 0
 1771 0197 0B       		.uleb128 0xb
 1772 0198 FF0B0000 		.4byte	.LASF26
 1773 019c 06       		.byte	0x6
 1774 019d 37       		.byte	0x37
 1775 019e 45000000 		.4byte	0x45
 1776 01a2 02       		.byte	0x2
 1777 01a3 23       		.byte	0x23
 1778 01a4 04       		.uleb128 0x4
 1779 01a5 0B       		.uleb128 0xb
 1780 01a6 950B0000 		.4byte	.LASF27
 1781 01aa 06       		.byte	0x6
 1782 01ab 38       		.byte	0x38
 1783 01ac 45000000 		.4byte	0x45
 1784 01b0 02       		.byte	0x2
 1785 01b1 23       		.byte	0x23
 1786 01b2 08       		.uleb128 0x8
 1787 01b3 0B       		.uleb128 0xb
 1788 01b4 2A070000 		.4byte	.LASF28
 1789 01b8 06       		.byte	0x6
 1790 01b9 39       		.byte	0x39
 1791 01ba 45000000 		.4byte	0x45
 1792 01be 02       		.byte	0x2
 1793 01bf 23       		.byte	0x23
 1794 01c0 0C       		.uleb128 0xc
 1795 01c1 0B       		.uleb128 0xb
 1796 01c2 08020000 		.4byte	.LASF29
 1797 01c6 06       		.byte	0x6
 1798 01c7 3A       		.byte	0x3a
 1799 01c8 45000000 		.4byte	0x45
 1800 01cc 02       		.byte	0x2
 1801 01cd 23       		.byte	0x23
 1802 01ce 10       		.uleb128 0x10
 1803 01cf 0B       		.uleb128 0xb
 1804 01d0 870A0000 		.4byte	.LASF30
 1805 01d4 06       		.byte	0x6
ARM GAS  /tmp/ccsPeR2V.s 			page 68


 1806 01d5 3B       		.byte	0x3b
 1807 01d6 45000000 		.4byte	0x45
 1808 01da 02       		.byte	0x2
 1809 01db 23       		.byte	0x23
 1810 01dc 14       		.uleb128 0x14
 1811 01dd 0B       		.uleb128 0xb
 1812 01de 9D070000 		.4byte	.LASF31
 1813 01e2 06       		.byte	0x6
 1814 01e3 3C       		.byte	0x3c
 1815 01e4 45000000 		.4byte	0x45
 1816 01e8 02       		.byte	0x2
 1817 01e9 23       		.byte	0x23
 1818 01ea 18       		.uleb128 0x18
 1819 01eb 0B       		.uleb128 0xb
 1820 01ec A7070000 		.4byte	.LASF32
 1821 01f0 06       		.byte	0x6
 1822 01f1 3D       		.byte	0x3d
 1823 01f2 45000000 		.4byte	0x45
 1824 01f6 02       		.byte	0x2
 1825 01f7 23       		.byte	0x23
 1826 01f8 1C       		.uleb128 0x1c
 1827 01f9 0B       		.uleb128 0xb
 1828 01fa EA0B0000 		.4byte	.LASF33
 1829 01fe 06       		.byte	0x6
 1830 01ff 3E       		.byte	0x3e
 1831 0200 45000000 		.4byte	0x45
 1832 0204 02       		.byte	0x2
 1833 0205 23       		.byte	0x23
 1834 0206 20       		.uleb128 0x20
 1835 0207 00       		.byte	0
 1836 0208 10       		.uleb128 0x10
 1837 0209 5C010000 		.4byte	.LASF34
 1838 020d 0801     		.2byte	0x108
 1839 020f 06       		.byte	0x6
 1840 0210 47       		.byte	0x47
 1841 0211 51020000 		.4byte	0x251
 1842 0215 0B       		.uleb128 0xb
 1843 0216 DA0B0000 		.4byte	.LASF35
 1844 021a 06       		.byte	0x6
 1845 021b 48       		.byte	0x48
 1846 021c 51020000 		.4byte	0x251
 1847 0220 02       		.byte	0x2
 1848 0221 23       		.byte	0x23
 1849 0222 00       		.uleb128 0
 1850 0223 0B       		.uleb128 0xb
 1851 0224 3C080000 		.4byte	.LASF36
 1852 0228 06       		.byte	0x6
 1853 0229 49       		.byte	0x49
 1854 022a 51020000 		.4byte	0x251
 1855 022e 03       		.byte	0x3
 1856 022f 23       		.byte	0x23
 1857 0230 8001     		.uleb128 0x80
 1858 0232 0B       		.uleb128 0xb
 1859 0233 6D0A0000 		.4byte	.LASF37
 1860 0237 06       		.byte	0x6
 1861 0238 4B       		.byte	0x4b
 1862 0239 F6000000 		.4byte	0xf6
ARM GAS  /tmp/ccsPeR2V.s 			page 69


 1863 023d 03       		.byte	0x3
 1864 023e 23       		.byte	0x23
 1865 023f 8002     		.uleb128 0x100
 1866 0241 0B       		.uleb128 0xb
 1867 0242 E00A0000 		.4byte	.LASF38
 1868 0246 06       		.byte	0x6
 1869 0247 4E       		.byte	0x4e
 1870 0248 F6000000 		.4byte	0xf6
 1871 024c 03       		.byte	0x3
 1872 024d 23       		.byte	0x23
 1873 024e 8402     		.uleb128 0x104
 1874 0250 00       		.byte	0
 1875 0251 08       		.uleb128 0x8
 1876 0252 F4000000 		.4byte	0xf4
 1877 0256 61020000 		.4byte	0x261
 1878 025a 09       		.uleb128 0x9
 1879 025b 4C000000 		.4byte	0x4c
 1880 025f 1F       		.byte	0x1f
 1881 0260 00       		.byte	0
 1882 0261 0D       		.uleb128 0xd
 1883 0262 86070000 		.4byte	.LASF39
 1884 0266 8C       		.byte	0x8c
 1885 0267 06       		.byte	0x6
 1886 0268 52       		.byte	0x52
 1887 0269 A7020000 		.4byte	0x2a7
 1888 026d 0B       		.uleb128 0xb
 1889 026e 34090000 		.4byte	.LASF19
 1890 0272 06       		.byte	0x6
 1891 0273 53       		.byte	0x53
 1892 0274 A7020000 		.4byte	0x2a7
 1893 0278 02       		.byte	0x2
 1894 0279 23       		.byte	0x23
 1895 027a 00       		.uleb128 0
 1896 027b 0B       		.uleb128 0xb
 1897 027c AE0A0000 		.4byte	.LASF40
 1898 0280 06       		.byte	0x6
 1899 0281 54       		.byte	0x54
 1900 0282 45000000 		.4byte	0x45
 1901 0286 02       		.byte	0x2
 1902 0287 23       		.byte	0x23
 1903 0288 04       		.uleb128 0x4
 1904 0289 0B       		.uleb128 0xb
 1905 028a 2E030000 		.4byte	.LASF41
 1906 028e 06       		.byte	0x6
 1907 028f 55       		.byte	0x55
 1908 0290 AD020000 		.4byte	0x2ad
 1909 0294 02       		.byte	0x2
 1910 0295 23       		.byte	0x23
 1911 0296 08       		.uleb128 0x8
 1912 0297 0B       		.uleb128 0xb
 1913 0298 04060000 		.4byte	.LASF42
 1914 029c 06       		.byte	0x6
 1915 029d 56       		.byte	0x56
 1916 029e C5020000 		.4byte	0x2c5
 1917 02a2 03       		.byte	0x3
 1918 02a3 23       		.byte	0x23
 1919 02a4 8801     		.uleb128 0x88
ARM GAS  /tmp/ccsPeR2V.s 			page 70


 1920 02a6 00       		.byte	0
 1921 02a7 0F       		.uleb128 0xf
 1922 02a8 04       		.byte	0x4
 1923 02a9 61020000 		.4byte	0x261
 1924 02ad 08       		.uleb128 0x8
 1925 02ae BF020000 		.4byte	0x2bf
 1926 02b2 BD020000 		.4byte	0x2bd
 1927 02b6 09       		.uleb128 0x9
 1928 02b7 4C000000 		.4byte	0x4c
 1929 02bb 1F       		.byte	0x1f
 1930 02bc 00       		.byte	0
 1931 02bd 11       		.uleb128 0x11
 1932 02be 01       		.byte	0x1
 1933 02bf 0F       		.uleb128 0xf
 1934 02c0 04       		.byte	0x4
 1935 02c1 BD020000 		.4byte	0x2bd
 1936 02c5 0F       		.uleb128 0xf
 1937 02c6 04       		.byte	0x4
 1938 02c7 08020000 		.4byte	0x208
 1939 02cb 0D       		.uleb128 0xd
 1940 02cc D90A0000 		.4byte	.LASF43
 1941 02d0 08       		.byte	0x8
 1942 02d1 06       		.byte	0x6
 1943 02d2 69       		.byte	0x69
 1944 02d3 F4020000 		.4byte	0x2f4
 1945 02d7 0B       		.uleb128 0xb
 1946 02d8 89080000 		.4byte	.LASF44
 1947 02dc 06       		.byte	0x6
 1948 02dd 6A       		.byte	0x6a
 1949 02de F4020000 		.4byte	0x2f4
 1950 02e2 02       		.byte	0x2
 1951 02e3 23       		.byte	0x23
 1952 02e4 00       		.uleb128 0
 1953 02e5 0B       		.uleb128 0xb
 1954 02e6 D2010000 		.4byte	.LASF45
 1955 02ea 06       		.byte	0x6
 1956 02eb 6B       		.byte	0x6b
 1957 02ec 45000000 		.4byte	0x45
 1958 02f0 02       		.byte	0x2
 1959 02f1 23       		.byte	0x23
 1960 02f2 04       		.uleb128 0x4
 1961 02f3 00       		.byte	0
 1962 02f4 0F       		.uleb128 0xf
 1963 02f5 04       		.byte	0x4
 1964 02f6 30000000 		.4byte	0x30
 1965 02fa 12       		.uleb128 0x12
 1966 02fb E7020000 		.4byte	.LASF46
 1967 02ff F0       		.byte	0xf0
 1968 0300 06       		.byte	0x6
 1969 0301 7B01     		.2byte	0x17b
 1970 0303 74040000 		.4byte	0x474
 1971 0307 13       		.uleb128 0x13
 1972 0308 5B050000 		.4byte	.LASF47
 1973 030c 06       		.byte	0x6
 1974 030d 7F01     		.2byte	0x17f
 1975 030f 45000000 		.4byte	0x45
 1976 0313 02       		.byte	0x2
ARM GAS  /tmp/ccsPeR2V.s 			page 71


 1977 0314 23       		.byte	0x23
 1978 0315 00       		.uleb128 0
 1979 0316 13       		.uleb128 0x13
 1980 0317 82030000 		.4byte	.LASF48
 1981 031b 06       		.byte	0x6
 1982 031c 8401     		.2byte	0x184
 1983 031e E3060000 		.4byte	0x6e3
 1984 0322 02       		.byte	0x2
 1985 0323 23       		.byte	0x23
 1986 0324 04       		.uleb128 0x4
 1987 0325 13       		.uleb128 0x13
 1988 0326 6C080000 		.4byte	.LASF49
 1989 032a 06       		.byte	0x6
 1990 032b 8401     		.2byte	0x184
 1991 032d E3060000 		.4byte	0x6e3
 1992 0331 02       		.byte	0x2
 1993 0332 23       		.byte	0x23
 1994 0333 08       		.uleb128 0x8
 1995 0334 13       		.uleb128 0x13
 1996 0335 4D070000 		.4byte	.LASF50
 1997 0339 06       		.byte	0x6
 1998 033a 8401     		.2byte	0x184
 1999 033c E3060000 		.4byte	0x6e3
 2000 0340 02       		.byte	0x2
 2001 0341 23       		.byte	0x23
 2002 0342 0C       		.uleb128 0xc
 2003 0343 13       		.uleb128 0x13
 2004 0344 A90A0000 		.4byte	.LASF51
 2005 0348 06       		.byte	0x6
 2006 0349 8601     		.2byte	0x186
 2007 034b 45000000 		.4byte	0x45
 2008 034f 02       		.byte	0x2
 2009 0350 23       		.byte	0x23
 2010 0351 10       		.uleb128 0x10
 2011 0352 13       		.uleb128 0x13
 2012 0353 E3050000 		.4byte	.LASF52
 2013 0357 06       		.byte	0x6
 2014 0358 8801     		.2byte	0x188
 2015 035a F3050000 		.4byte	0x5f3
 2016 035e 02       		.byte	0x2
 2017 035f 23       		.byte	0x23
 2018 0360 14       		.uleb128 0x14
 2019 0361 13       		.uleb128 0x13
 2020 0362 1E050000 		.4byte	.LASF53
 2021 0366 06       		.byte	0x6
 2022 0367 8A01     		.2byte	0x18a
 2023 0369 45000000 		.4byte	0x45
 2024 036d 02       		.byte	0x2
 2025 036e 23       		.byte	0x23
 2026 036f 18       		.uleb128 0x18
 2027 0370 13       		.uleb128 0x13
 2028 0371 3B020000 		.4byte	.LASF54
 2029 0375 06       		.byte	0x6
 2030 0376 8C01     		.2byte	0x18c
 2031 0378 45000000 		.4byte	0x45
 2032 037c 02       		.byte	0x2
 2033 037d 23       		.byte	0x23
ARM GAS  /tmp/ccsPeR2V.s 			page 72


 2034 037e 1C       		.uleb128 0x1c
 2035 037f 13       		.uleb128 0x13
 2036 0380 A0060000 		.4byte	.LASF55
 2037 0384 06       		.byte	0x6
 2038 0385 8D01     		.2byte	0x18d
 2039 0387 25060000 		.4byte	0x625
 2040 038b 02       		.byte	0x2
 2041 038c 23       		.byte	0x23
 2042 038d 20       		.uleb128 0x20
 2043 038e 14       		.uleb128 0x14
 2044 038f 5F6D7000 		.ascii	"_mp\000"
 2045 0393 06       		.byte	0x6
 2046 0394 8F01     		.2byte	0x18f
 2047 0396 56080000 		.4byte	0x856
 2048 039a 02       		.byte	0x2
 2049 039b 23       		.byte	0x23
 2050 039c 24       		.uleb128 0x24
 2051 039d 13       		.uleb128 0x13
 2052 039e BB050000 		.4byte	.LASF56
 2053 03a2 06       		.byte	0x6
 2054 03a3 9101     		.2byte	0x191
 2055 03a5 68080000 		.4byte	0x868
 2056 03a9 02       		.byte	0x2
 2057 03aa 23       		.byte	0x23
 2058 03ab 28       		.uleb128 0x28
 2059 03ac 13       		.uleb128 0x13
 2060 03ad 74060000 		.4byte	.LASF57
 2061 03b1 06       		.byte	0x6
 2062 03b2 9301     		.2byte	0x193
 2063 03b4 45000000 		.4byte	0x45
 2064 03b8 02       		.byte	0x2
 2065 03b9 23       		.byte	0x23
 2066 03ba 2C       		.uleb128 0x2c
 2067 03bb 13       		.uleb128 0x13
 2068 03bc 69000000 		.4byte	.LASF58
 2069 03c0 06       		.byte	0x6
 2070 03c1 9601     		.2byte	0x196
 2071 03c3 45000000 		.4byte	0x45
 2072 03c7 02       		.byte	0x2
 2073 03c8 23       		.byte	0x23
 2074 03c9 30       		.uleb128 0x30
 2075 03ca 13       		.uleb128 0x13
 2076 03cb 40040000 		.4byte	.LASF59
 2077 03cf 06       		.byte	0x6
 2078 03d0 9701     		.2byte	0x197
 2079 03d2 F3050000 		.4byte	0x5f3
 2080 03d6 02       		.byte	0x2
 2081 03d7 23       		.byte	0x23
 2082 03d8 34       		.uleb128 0x34
 2083 03d9 13       		.uleb128 0x13
 2084 03da 07090000 		.4byte	.LASF60
 2085 03de 06       		.byte	0x6
 2086 03df 9901     		.2byte	0x199
 2087 03e1 6E080000 		.4byte	0x86e
 2088 03e5 02       		.byte	0x2
 2089 03e6 23       		.byte	0x23
 2090 03e7 38       		.uleb128 0x38
ARM GAS  /tmp/ccsPeR2V.s 			page 73


 2091 03e8 13       		.uleb128 0x13
 2092 03e9 DE010000 		.4byte	.LASF61
 2093 03ed 06       		.byte	0x6
 2094 03ee 9A01     		.2byte	0x19a
 2095 03f0 74080000 		.4byte	0x874
 2096 03f4 02       		.byte	0x2
 2097 03f5 23       		.byte	0x23
 2098 03f6 3C       		.uleb128 0x3c
 2099 03f7 13       		.uleb128 0x13
 2100 03f8 5C000000 		.4byte	.LASF62
 2101 03fc 06       		.byte	0x6
 2102 03fd 9B01     		.2byte	0x19b
 2103 03ff F3050000 		.4byte	0x5f3
 2104 0403 02       		.byte	0x2
 2105 0404 23       		.byte	0x23
 2106 0405 40       		.uleb128 0x40
 2107 0406 13       		.uleb128 0x13
 2108 0407 2E040000 		.4byte	.LASF63
 2109 040b 06       		.byte	0x6
 2110 040c 9E01     		.2byte	0x19e
 2111 040e 86080000 		.4byte	0x886
 2112 0412 02       		.byte	0x2
 2113 0413 23       		.byte	0x23
 2114 0414 44       		.uleb128 0x44
 2115 0415 13       		.uleb128 0x13
 2116 0416 86070000 		.4byte	.LASF39
 2117 041a 06       		.byte	0x6
 2118 041b A101     		.2byte	0x1a1
 2119 041d A7020000 		.4byte	0x2a7
 2120 0421 02       		.byte	0x2
 2121 0422 23       		.byte	0x23
 2122 0423 48       		.uleb128 0x48
 2123 0424 13       		.uleb128 0x13
 2124 0425 DA050000 		.4byte	.LASF64
 2125 0429 06       		.byte	0x6
 2126 042a A201     		.2byte	0x1a2
 2127 042c 61020000 		.4byte	0x261
 2128 0430 02       		.byte	0x2
 2129 0431 23       		.byte	0x23
 2130 0432 4C       		.uleb128 0x4c
 2131 0433 13       		.uleb128 0x13
 2132 0434 45060000 		.4byte	.LASF65
 2133 0438 06       		.byte	0x6
 2134 0439 A401     		.2byte	0x1a4
 2135 043b A2060000 		.4byte	0x6a2
 2136 043f 03       		.byte	0x3
 2137 0440 23       		.byte	0x23
 2138 0441 D801     		.uleb128 0xd8
 2139 0443 13       		.uleb128 0x13
 2140 0444 32000000 		.4byte	.LASF66
 2141 0448 06       		.byte	0x6
 2142 0449 A501     		.2byte	0x1a5
 2143 044b E3060000 		.4byte	0x6e3
 2144 044f 03       		.byte	0x3
 2145 0450 23       		.byte	0x23
 2146 0451 E401     		.uleb128 0xe4
 2147 0453 13       		.uleb128 0x13
ARM GAS  /tmp/ccsPeR2V.s 			page 74


 2148 0454 0E0B0000 		.4byte	.LASF67
 2149 0458 06       		.byte	0x6
 2150 0459 A601     		.2byte	0x1a6
 2151 045b 92080000 		.4byte	0x892
 2152 045f 03       		.byte	0x3
 2153 0460 23       		.byte	0x23
 2154 0461 E801     		.uleb128 0xe8
 2155 0463 13       		.uleb128 0x13
 2156 0464 6A050000 		.4byte	.LASF68
 2157 0468 06       		.byte	0x6
 2158 0469 A701     		.2byte	0x1a7
 2159 046b F3050000 		.4byte	0x5f3
 2160 046f 03       		.byte	0x3
 2161 0470 23       		.byte	0x23
 2162 0471 EC01     		.uleb128 0xec
 2163 0473 00       		.byte	0
 2164 0474 0F       		.uleb128 0xf
 2165 0475 04       		.byte	0x4
 2166 0476 FA020000 		.4byte	0x2fa
 2167 047a 0D       		.uleb128 0xd
 2168 047b 16050000 		.4byte	.LASF69
 2169 047f 68       		.byte	0x68
 2170 0480 06       		.byte	0x6
 2171 0481 B3       		.byte	0xb3
 2172 0482 D4050000 		.4byte	0x5d4
 2173 0486 0E       		.uleb128 0xe
 2174 0487 5F7000   		.ascii	"_p\000"
 2175 048a 06       		.byte	0x6
 2176 048b B4       		.byte	0xb4
 2177 048c F4020000 		.4byte	0x2f4
 2178 0490 02       		.byte	0x2
 2179 0491 23       		.byte	0x23
 2180 0492 00       		.uleb128 0
 2181 0493 0E       		.uleb128 0xe
 2182 0494 5F7200   		.ascii	"_r\000"
 2183 0497 06       		.byte	0x6
 2184 0498 B5       		.byte	0xb5
 2185 0499 45000000 		.4byte	0x45
 2186 049d 02       		.byte	0x2
 2187 049e 23       		.byte	0x23
 2188 049f 04       		.uleb128 0x4
 2189 04a0 0E       		.uleb128 0xe
 2190 04a1 5F7700   		.ascii	"_w\000"
 2191 04a4 06       		.byte	0x6
 2192 04a5 B6       		.byte	0xb6
 2193 04a6 45000000 		.4byte	0x45
 2194 04aa 02       		.byte	0x2
 2195 04ab 23       		.byte	0x23
 2196 04ac 08       		.uleb128 0x8
 2197 04ad 0B       		.uleb128 0xb
 2198 04ae 77070000 		.4byte	.LASF70
 2199 04b2 06       		.byte	0x6
 2200 04b3 B7       		.byte	0xb7
 2201 04b4 37000000 		.4byte	0x37
 2202 04b8 02       		.byte	0x2
 2203 04b9 23       		.byte	0x23
 2204 04ba 0C       		.uleb128 0xc
ARM GAS  /tmp/ccsPeR2V.s 			page 75


 2205 04bb 0B       		.uleb128 0xb
 2206 04bc 56010000 		.4byte	.LASF71
 2207 04c0 06       		.byte	0x6
 2208 04c1 B8       		.byte	0xb8
 2209 04c2 37000000 		.4byte	0x37
 2210 04c6 02       		.byte	0x2
 2211 04c7 23       		.byte	0x23
 2212 04c8 0E       		.uleb128 0xe
 2213 04c9 0E       		.uleb128 0xe
 2214 04ca 5F626600 		.ascii	"_bf\000"
 2215 04ce 06       		.byte	0x6
 2216 04cf B9       		.byte	0xb9
 2217 04d0 CB020000 		.4byte	0x2cb
 2218 04d4 02       		.byte	0x2
 2219 04d5 23       		.byte	0x23
 2220 04d6 10       		.uleb128 0x10
 2221 04d7 0B       		.uleb128 0xb
 2222 04d8 A00A0000 		.4byte	.LASF72
 2223 04dc 06       		.byte	0x6
 2224 04dd BA       		.byte	0xba
 2225 04de 45000000 		.4byte	0x45
 2226 04e2 02       		.byte	0x2
 2227 04e3 23       		.byte	0x23
 2228 04e4 18       		.uleb128 0x18
 2229 04e5 0B       		.uleb128 0xb
 2230 04e6 3A090000 		.4byte	.LASF73
 2231 04ea 06       		.byte	0x6
 2232 04eb BD       		.byte	0xbd
 2233 04ec 74040000 		.4byte	0x474
 2234 04f0 02       		.byte	0x2
 2235 04f1 23       		.byte	0x23
 2236 04f2 1C       		.uleb128 0x1c
 2237 04f3 0B       		.uleb128 0xb
 2238 04f4 0F040000 		.4byte	.LASF74
 2239 04f8 06       		.byte	0x6
 2240 04f9 C1       		.byte	0xc1
 2241 04fa F4000000 		.4byte	0xf4
 2242 04fe 02       		.byte	0x2
 2243 04ff 23       		.byte	0x23
 2244 0500 20       		.uleb128 0x20
 2245 0501 0B       		.uleb128 0xb
 2246 0502 3C000000 		.4byte	.LASF75
 2247 0506 06       		.byte	0x6
 2248 0507 C3       		.byte	0xc3
 2249 0508 00060000 		.4byte	0x600
 2250 050c 02       		.byte	0x2
 2251 050d 23       		.byte	0x23
 2252 050e 24       		.uleb128 0x24
 2253 050f 0B       		.uleb128 0xb
 2254 0510 55000000 		.4byte	.LASF76
 2255 0514 06       		.byte	0x6
 2256 0515 C5       		.byte	0xc5
 2257 0516 30060000 		.4byte	0x630
 2258 051a 02       		.byte	0x2
 2259 051b 23       		.byte	0x23
 2260 051c 28       		.uleb128 0x28
 2261 051d 0B       		.uleb128 0xb
ARM GAS  /tmp/ccsPeR2V.s 			page 76


 2262 051e B7070000 		.4byte	.LASF77
 2263 0522 06       		.byte	0x6
 2264 0523 C7       		.byte	0xc7
 2265 0524 55060000 		.4byte	0x655
 2266 0528 02       		.byte	0x2
 2267 0529 23       		.byte	0x23
 2268 052a 2C       		.uleb128 0x2c
 2269 052b 0B       		.uleb128 0xb
 2270 052c 4A030000 		.4byte	.LASF78
 2271 0530 06       		.byte	0x6
 2272 0531 C8       		.byte	0xc8
 2273 0532 70060000 		.4byte	0x670
 2274 0536 02       		.byte	0x2
 2275 0537 23       		.byte	0x23
 2276 0538 30       		.uleb128 0x30
 2277 0539 0E       		.uleb128 0xe
 2278 053a 5F756200 		.ascii	"_ub\000"
 2279 053e 06       		.byte	0x6
 2280 053f CB       		.byte	0xcb
 2281 0540 CB020000 		.4byte	0x2cb
 2282 0544 02       		.byte	0x2
 2283 0545 23       		.byte	0x23
 2284 0546 34       		.uleb128 0x34
 2285 0547 0E       		.uleb128 0xe
 2286 0548 5F757000 		.ascii	"_up\000"
 2287 054c 06       		.byte	0x6
 2288 054d CC       		.byte	0xcc
 2289 054e F4020000 		.4byte	0x2f4
 2290 0552 02       		.byte	0x2
 2291 0553 23       		.byte	0x23
 2292 0554 3C       		.uleb128 0x3c
 2293 0555 0E       		.uleb128 0xe
 2294 0556 5F757200 		.ascii	"_ur\000"
 2295 055a 06       		.byte	0x6
 2296 055b CD       		.byte	0xcd
 2297 055c 45000000 		.4byte	0x45
 2298 0560 02       		.byte	0x2
 2299 0561 23       		.byte	0x23
 2300 0562 40       		.uleb128 0x40
 2301 0563 0B       		.uleb128 0xb
 2302 0564 3C070000 		.4byte	.LASF79
 2303 0568 06       		.byte	0x6
 2304 0569 D0       		.byte	0xd0
 2305 056a 76060000 		.4byte	0x676
 2306 056e 02       		.byte	0x2
 2307 056f 23       		.byte	0x23
 2308 0570 44       		.uleb128 0x44
 2309 0571 0B       		.uleb128 0xb
 2310 0572 A7000000 		.4byte	.LASF80
 2311 0576 06       		.byte	0x6
 2312 0577 D1       		.byte	0xd1
 2313 0578 86060000 		.4byte	0x686
 2314 057c 02       		.byte	0x2
 2315 057d 23       		.byte	0x23
 2316 057e 47       		.uleb128 0x47
 2317 057f 0E       		.uleb128 0xe
 2318 0580 5F6C6200 		.ascii	"_lb\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 77


 2319 0584 06       		.byte	0x6
 2320 0585 D4       		.byte	0xd4
 2321 0586 CB020000 		.4byte	0x2cb
 2322 058a 02       		.byte	0x2
 2323 058b 23       		.byte	0x23
 2324 058c 48       		.uleb128 0x48
 2325 058d 0B       		.uleb128 0xb
 2326 058e 80080000 		.4byte	.LASF81
 2327 0592 06       		.byte	0x6
 2328 0593 D7       		.byte	0xd7
 2329 0594 45000000 		.4byte	0x45
 2330 0598 02       		.byte	0x2
 2331 0599 23       		.byte	0x23
 2332 059a 50       		.uleb128 0x50
 2333 059b 0B       		.uleb128 0xb
 2334 059c 38040000 		.4byte	.LASF82
 2335 05a0 06       		.byte	0x6
 2336 05a1 D8       		.byte	0xd8
 2337 05a2 45000000 		.4byte	0x45
 2338 05a6 02       		.byte	0x2
 2339 05a7 23       		.byte	0x23
 2340 05a8 54       		.uleb128 0x54
 2341 05a9 0B       		.uleb128 0xb
 2342 05aa D3000000 		.4byte	.LASF83
 2343 05ae 06       		.byte	0x6
 2344 05af DF       		.byte	0xdf
 2345 05b0 E9000000 		.4byte	0xe9
 2346 05b4 02       		.byte	0x2
 2347 05b5 23       		.byte	0x23
 2348 05b6 58       		.uleb128 0x58
 2349 05b7 0B       		.uleb128 0xb
 2350 05b8 63070000 		.4byte	.LASF84
 2351 05bc 06       		.byte	0x6
 2352 05bd E1       		.byte	0xe1
 2353 05be DE000000 		.4byte	0xde
 2354 05c2 02       		.byte	0x2
 2355 05c3 23       		.byte	0x23
 2356 05c4 5C       		.uleb128 0x5c
 2357 05c5 0B       		.uleb128 0xb
 2358 05c6 29050000 		.4byte	.LASF85
 2359 05ca 06       		.byte	0x6
 2360 05cb E2       		.byte	0xe2
 2361 05cc 45000000 		.4byte	0x45
 2362 05d0 02       		.byte	0x2
 2363 05d1 23       		.byte	0x23
 2364 05d2 64       		.uleb128 0x64
 2365 05d3 00       		.byte	0
 2366 05d4 15       		.uleb128 0x15
 2367 05d5 01       		.byte	0x1
 2368 05d6 45000000 		.4byte	0x45
 2369 05da F3050000 		.4byte	0x5f3
 2370 05de 16       		.uleb128 0x16
 2371 05df 74040000 		.4byte	0x474
 2372 05e3 16       		.uleb128 0x16
 2373 05e4 F4000000 		.4byte	0xf4
 2374 05e8 16       		.uleb128 0x16
 2375 05e9 F3050000 		.4byte	0x5f3
ARM GAS  /tmp/ccsPeR2V.s 			page 78


 2376 05ed 16       		.uleb128 0x16
 2377 05ee 45000000 		.4byte	0x45
 2378 05f2 00       		.byte	0
 2379 05f3 0F       		.uleb128 0xf
 2380 05f4 04       		.byte	0x4
 2381 05f5 F9050000 		.4byte	0x5f9
 2382 05f9 02       		.uleb128 0x2
 2383 05fa 01       		.byte	0x1
 2384 05fb 08       		.byte	0x8
 2385 05fc 29030000 		.4byte	.LASF86
 2386 0600 0F       		.uleb128 0xf
 2387 0601 04       		.byte	0x4
 2388 0602 D4050000 		.4byte	0x5d4
 2389 0606 15       		.uleb128 0x15
 2390 0607 01       		.byte	0x1
 2391 0608 45000000 		.4byte	0x45
 2392 060c 25060000 		.4byte	0x625
 2393 0610 16       		.uleb128 0x16
 2394 0611 74040000 		.4byte	0x474
 2395 0615 16       		.uleb128 0x16
 2396 0616 F4000000 		.4byte	0xf4
 2397 061a 16       		.uleb128 0x16
 2398 061b 25060000 		.4byte	0x625
 2399 061f 16       		.uleb128 0x16
 2400 0620 45000000 		.4byte	0x45
 2401 0624 00       		.byte	0
 2402 0625 0F       		.uleb128 0xf
 2403 0626 04       		.byte	0x4
 2404 0627 2B060000 		.4byte	0x62b
 2405 062b 17       		.uleb128 0x17
 2406 062c F9050000 		.4byte	0x5f9
 2407 0630 0F       		.uleb128 0xf
 2408 0631 04       		.byte	0x4
 2409 0632 06060000 		.4byte	0x606
 2410 0636 15       		.uleb128 0x15
 2411 0637 01       		.byte	0x1
 2412 0638 73000000 		.4byte	0x73
 2413 063c 55060000 		.4byte	0x655
 2414 0640 16       		.uleb128 0x16
 2415 0641 74040000 		.4byte	0x474
 2416 0645 16       		.uleb128 0x16
 2417 0646 F4000000 		.4byte	0xf4
 2418 064a 16       		.uleb128 0x16
 2419 064b 73000000 		.4byte	0x73
 2420 064f 16       		.uleb128 0x16
 2421 0650 45000000 		.4byte	0x45
 2422 0654 00       		.byte	0
 2423 0655 0F       		.uleb128 0xf
 2424 0656 04       		.byte	0x4
 2425 0657 36060000 		.4byte	0x636
 2426 065b 15       		.uleb128 0x15
 2427 065c 01       		.byte	0x1
 2428 065d 45000000 		.4byte	0x45
 2429 0661 70060000 		.4byte	0x670
 2430 0665 16       		.uleb128 0x16
 2431 0666 74040000 		.4byte	0x474
 2432 066a 16       		.uleb128 0x16
ARM GAS  /tmp/ccsPeR2V.s 			page 79


 2433 066b F4000000 		.4byte	0xf4
 2434 066f 00       		.byte	0
 2435 0670 0F       		.uleb128 0xf
 2436 0671 04       		.byte	0x4
 2437 0672 5B060000 		.4byte	0x65b
 2438 0676 08       		.uleb128 0x8
 2439 0677 30000000 		.4byte	0x30
 2440 067b 86060000 		.4byte	0x686
 2441 067f 09       		.uleb128 0x9
 2442 0680 4C000000 		.4byte	0x4c
 2443 0684 02       		.byte	0x2
 2444 0685 00       		.byte	0
 2445 0686 08       		.uleb128 0x8
 2446 0687 30000000 		.4byte	0x30
 2447 068b 96060000 		.4byte	0x696
 2448 068f 09       		.uleb128 0x9
 2449 0690 4C000000 		.4byte	0x4c
 2450 0694 00       		.byte	0
 2451 0695 00       		.byte	0
 2452 0696 05       		.uleb128 0x5
 2453 0697 EA080000 		.4byte	.LASF87
 2454 069b 06       		.byte	0x6
 2455 069c 1E01     		.2byte	0x11e
 2456 069e 7A040000 		.4byte	0x47a
 2457 06a2 12       		.uleb128 0x12
 2458 06a3 C0060000 		.4byte	.LASF88
 2459 06a7 0C       		.byte	0xc
 2460 06a8 06       		.byte	0x6
 2461 06a9 2201     		.2byte	0x122
 2462 06ab DD060000 		.4byte	0x6dd
 2463 06af 13       		.uleb128 0x13
 2464 06b0 34090000 		.4byte	.LASF19
 2465 06b4 06       		.byte	0x6
 2466 06b5 2401     		.2byte	0x124
 2467 06b7 DD060000 		.4byte	0x6dd
 2468 06bb 02       		.byte	0x2
 2469 06bc 23       		.byte	0x23
 2470 06bd 00       		.uleb128 0
 2471 06be 13       		.uleb128 0x13
 2472 06bf 34060000 		.4byte	.LASF89
 2473 06c3 06       		.byte	0x6
 2474 06c4 2501     		.2byte	0x125
 2475 06c6 45000000 		.4byte	0x45
 2476 06ca 02       		.byte	0x2
 2477 06cb 23       		.byte	0x23
 2478 06cc 04       		.uleb128 0x4
 2479 06cd 13       		.uleb128 0x13
 2480 06ce BA060000 		.4byte	.LASF90
 2481 06d2 06       		.byte	0x6
 2482 06d3 2601     		.2byte	0x126
 2483 06d5 E3060000 		.4byte	0x6e3
 2484 06d9 02       		.byte	0x2
 2485 06da 23       		.byte	0x23
 2486 06db 08       		.uleb128 0x8
 2487 06dc 00       		.byte	0
 2488 06dd 0F       		.uleb128 0xf
 2489 06de 04       		.byte	0x4
ARM GAS  /tmp/ccsPeR2V.s 			page 80


 2490 06df A2060000 		.4byte	0x6a2
 2491 06e3 0F       		.uleb128 0xf
 2492 06e4 04       		.byte	0x4
 2493 06e5 96060000 		.4byte	0x696
 2494 06e9 12       		.uleb128 0x12
 2495 06ea 51080000 		.4byte	.LASF91
 2496 06ee 18       		.byte	0x18
 2497 06ef 06       		.byte	0x6
 2498 06f0 3E01     		.2byte	0x13e
 2499 06f2 33070000 		.4byte	0x733
 2500 06f6 13       		.uleb128 0x13
 2501 06f7 B1070000 		.4byte	.LASF92
 2502 06fb 06       		.byte	0x6
 2503 06fc 3F01     		.2byte	0x13f
 2504 06fe 33070000 		.4byte	0x733
 2505 0702 02       		.byte	0x2
 2506 0703 23       		.byte	0x23
 2507 0704 00       		.uleb128 0
 2508 0705 13       		.uleb128 0x13
 2509 0706 FC000000 		.4byte	.LASF93
 2510 070a 06       		.byte	0x6
 2511 070b 4001     		.2byte	0x140
 2512 070d 33070000 		.4byte	0x733
 2513 0711 02       		.byte	0x2
 2514 0712 23       		.byte	0x23
 2515 0713 06       		.uleb128 0x6
 2516 0714 13       		.uleb128 0x13
 2517 0715 740B0000 		.4byte	.LASF94
 2518 0719 06       		.byte	0x6
 2519 071a 4101     		.2byte	0x141
 2520 071c 3E000000 		.4byte	0x3e
 2521 0720 02       		.byte	0x2
 2522 0721 23       		.byte	0x23
 2523 0722 0C       		.uleb128 0xc
 2524 0723 13       		.uleb128 0x13
 2525 0724 6C070000 		.4byte	.LASF95
 2526 0728 06       		.byte	0x6
 2527 0729 4401     		.2byte	0x144
 2528 072b 5A000000 		.4byte	0x5a
 2529 072f 02       		.byte	0x2
 2530 0730 23       		.byte	0x23
 2531 0731 10       		.uleb128 0x10
 2532 0732 00       		.byte	0
 2533 0733 08       		.uleb128 0x8
 2534 0734 3E000000 		.4byte	0x3e
 2535 0738 43070000 		.4byte	0x743
 2536 073c 09       		.uleb128 0x9
 2537 073d 4C000000 		.4byte	0x4c
 2538 0741 02       		.byte	0x2
 2539 0742 00       		.byte	0
 2540 0743 12       		.uleb128 0x12
 2541 0744 000B0000 		.4byte	.LASF96
 2542 0748 10       		.byte	0x10
 2543 0749 06       		.byte	0x6
 2544 074a 5F01     		.2byte	0x15f
 2545 074c 8D070000 		.4byte	0x78d
 2546 0750 13       		.uleb128 0x13
ARM GAS  /tmp/ccsPeR2V.s 			page 81


 2547 0751 4B0B0000 		.4byte	.LASF97
 2548 0755 06       		.byte	0x6
 2549 0756 6201     		.2byte	0x162
 2550 0758 67010000 		.4byte	0x167
 2551 075c 02       		.byte	0x2
 2552 075d 23       		.byte	0x23
 2553 075e 00       		.uleb128 0
 2554 075f 13       		.uleb128 0x13
 2555 0760 BF010000 		.4byte	.LASF98
 2556 0764 06       		.byte	0x6
 2557 0765 6301     		.2byte	0x163
 2558 0767 45000000 		.4byte	0x45
 2559 076b 02       		.byte	0x2
 2560 076c 23       		.byte	0x23
 2561 076d 04       		.uleb128 0x4
 2562 076e 13       		.uleb128 0x13
 2563 076f CD040000 		.4byte	.LASF99
 2564 0773 06       		.byte	0x6
 2565 0774 6401     		.2byte	0x164
 2566 0776 67010000 		.4byte	0x167
 2567 077a 02       		.byte	0x2
 2568 077b 23       		.byte	0x23
 2569 077c 08       		.uleb128 0x8
 2570 077d 13       		.uleb128 0x13
 2571 077e B0060000 		.4byte	.LASF100
 2572 0782 06       		.byte	0x6
 2573 0783 6501     		.2byte	0x165
 2574 0785 8D070000 		.4byte	0x78d
 2575 0789 02       		.byte	0x2
 2576 078a 23       		.byte	0x23
 2577 078b 0C       		.uleb128 0xc
 2578 078c 00       		.byte	0
 2579 078d 0F       		.uleb128 0xf
 2580 078e 04       		.byte	0x4
 2581 078f 67010000 		.4byte	0x167
 2582 0793 12       		.uleb128 0x12
 2583 0794 22020000 		.4byte	.LASF101
 2584 0798 50       		.byte	0x50
 2585 0799 06       		.byte	0x6
 2586 079a 6901     		.2byte	0x169
 2587 079c 46080000 		.4byte	0x846
 2588 07a0 13       		.uleb128 0x13
 2589 07a1 9E080000 		.4byte	.LASF102
 2590 07a5 06       		.byte	0x6
 2591 07a6 6C01     		.2byte	0x16c
 2592 07a8 F3050000 		.4byte	0x5f3
 2593 07ac 02       		.byte	0x2
 2594 07ad 23       		.byte	0x23
 2595 07ae 00       		.uleb128 0
 2596 07af 13       		.uleb128 0x13
 2597 07b0 2A0A0000 		.4byte	.LASF103
 2598 07b4 06       		.byte	0x6
 2599 07b5 6D01     		.2byte	0x16d
 2600 07b7 DE000000 		.4byte	0xde
 2601 07bb 02       		.byte	0x2
 2602 07bc 23       		.byte	0x23
 2603 07bd 04       		.uleb128 0x4
ARM GAS  /tmp/ccsPeR2V.s 			page 82


 2604 07be 13       		.uleb128 0x13
 2605 07bf 55070000 		.4byte	.LASF104
 2606 07c3 06       		.byte	0x6
 2607 07c4 6E01     		.2byte	0x16e
 2608 07c6 DE000000 		.4byte	0xde
 2609 07ca 02       		.byte	0x2
 2610 07cb 23       		.byte	0x23
 2611 07cc 0C       		.uleb128 0xc
 2612 07cd 13       		.uleb128 0x13
 2613 07ce F6070000 		.4byte	.LASF105
 2614 07d2 06       		.byte	0x6
 2615 07d3 6F01     		.2byte	0x16f
 2616 07d5 DE000000 		.4byte	0xde
 2617 07d9 02       		.byte	0x2
 2618 07da 23       		.byte	0x23
 2619 07db 14       		.uleb128 0x14
 2620 07dc 13       		.uleb128 0x13
 2621 07dd B6000000 		.4byte	.LASF106
 2622 07e1 06       		.byte	0x6
 2623 07e2 7001     		.2byte	0x170
 2624 07e4 46080000 		.4byte	0x846
 2625 07e8 02       		.byte	0x2
 2626 07e9 23       		.byte	0x23
 2627 07ea 1C       		.uleb128 0x1c
 2628 07eb 13       		.uleb128 0x13
 2629 07ec 110C0000 		.4byte	.LASF107
 2630 07f0 06       		.byte	0x6
 2631 07f1 7101     		.2byte	0x171
 2632 07f3 45000000 		.4byte	0x45
 2633 07f7 02       		.byte	0x2
 2634 07f8 23       		.byte	0x23
 2635 07f9 24       		.uleb128 0x24
 2636 07fa 13       		.uleb128 0x13
 2637 07fb 9C010000 		.4byte	.LASF108
 2638 07ff 06       		.byte	0x6
 2639 0800 7201     		.2byte	0x172
 2640 0802 DE000000 		.4byte	0xde
 2641 0806 02       		.byte	0x2
 2642 0807 23       		.byte	0x23
 2643 0808 28       		.uleb128 0x28
 2644 0809 13       		.uleb128 0x13
 2645 080a B4080000 		.4byte	.LASF109
 2646 080e 06       		.byte	0x6
 2647 080f 7301     		.2byte	0x173
 2648 0811 DE000000 		.4byte	0xde
 2649 0815 02       		.byte	0x2
 2650 0816 23       		.byte	0x23
 2651 0817 30       		.uleb128 0x30
 2652 0818 13       		.uleb128 0x13
 2653 0819 AB0B0000 		.4byte	.LASF110
 2654 081d 06       		.byte	0x6
 2655 081e 7401     		.2byte	0x174
 2656 0820 DE000000 		.4byte	0xde
 2657 0824 02       		.byte	0x2
 2658 0825 23       		.byte	0x23
 2659 0826 38       		.uleb128 0x38
 2660 0827 13       		.uleb128 0x13
ARM GAS  /tmp/ccsPeR2V.s 			page 83


 2661 0828 1B070000 		.4byte	.LASF111
 2662 082c 06       		.byte	0x6
 2663 082d 7501     		.2byte	0x175
 2664 082f DE000000 		.4byte	0xde
 2665 0833 02       		.byte	0x2
 2666 0834 23       		.byte	0x23
 2667 0835 40       		.uleb128 0x40
 2668 0836 13       		.uleb128 0x13
 2669 0837 96000000 		.4byte	.LASF112
 2670 083b 06       		.byte	0x6
 2671 083c 7601     		.2byte	0x176
 2672 083e DE000000 		.4byte	0xde
 2673 0842 02       		.byte	0x2
 2674 0843 23       		.byte	0x23
 2675 0844 48       		.uleb128 0x48
 2676 0845 00       		.byte	0
 2677 0846 08       		.uleb128 0x8
 2678 0847 F9050000 		.4byte	0x5f9
 2679 084b 56080000 		.4byte	0x856
 2680 084f 09       		.uleb128 0x9
 2681 0850 4C000000 		.4byte	0x4c
 2682 0854 07       		.byte	0x7
 2683 0855 00       		.byte	0
 2684 0856 0F       		.uleb128 0xf
 2685 0857 04       		.byte	0x4
 2686 0858 43070000 		.4byte	0x743
 2687 085c 18       		.uleb128 0x18
 2688 085d 01       		.byte	0x1
 2689 085e 68080000 		.4byte	0x868
 2690 0862 16       		.uleb128 0x16
 2691 0863 74040000 		.4byte	0x474
 2692 0867 00       		.byte	0
 2693 0868 0F       		.uleb128 0xf
 2694 0869 04       		.byte	0x4
 2695 086a 5C080000 		.4byte	0x85c
 2696 086e 0F       		.uleb128 0xf
 2697 086f 04       		.byte	0x4
 2698 0870 E9060000 		.4byte	0x6e9
 2699 0874 0F       		.uleb128 0xf
 2700 0875 04       		.byte	0x4
 2701 0876 7D010000 		.4byte	0x17d
 2702 087a 18       		.uleb128 0x18
 2703 087b 01       		.byte	0x1
 2704 087c 86080000 		.4byte	0x886
 2705 0880 16       		.uleb128 0x16
 2706 0881 45000000 		.4byte	0x45
 2707 0885 00       		.byte	0
 2708 0886 0F       		.uleb128 0xf
 2709 0887 04       		.byte	0x4
 2710 0888 8C080000 		.4byte	0x88c
 2711 088c 0F       		.uleb128 0xf
 2712 088d 04       		.byte	0x4
 2713 088e 7A080000 		.4byte	0x87a
 2714 0892 0F       		.uleb128 0xf
 2715 0893 04       		.byte	0x4
 2716 0894 93070000 		.4byte	0x793
 2717 0898 04       		.uleb128 0x4
ARM GAS  /tmp/ccsPeR2V.s 			page 84


 2718 0899 5E020000 		.4byte	.LASF113
 2719 089d 07       		.byte	0x7
 2720 089e 2A       		.byte	0x2a
 2721 089f 30000000 		.4byte	0x30
 2722 08a3 04       		.uleb128 0x4
 2723 08a4 4F0A0000 		.4byte	.LASF114
 2724 08a8 07       		.byte	0x7
 2725 08a9 35       		.byte	0x35
 2726 08aa 37000000 		.4byte	0x37
 2727 08ae 04       		.uleb128 0x4
 2728 08af 33080000 		.4byte	.LASF115
 2729 08b3 07       		.byte	0x7
 2730 08b4 36       		.byte	0x36
 2731 08b5 3E000000 		.4byte	0x3e
 2732 08b9 04       		.uleb128 0x4
 2733 08ba 380B0000 		.4byte	.LASF116
 2734 08be 07       		.byte	0x7
 2735 08bf 50       		.byte	0x50
 2736 08c0 01010000 		.4byte	0x101
 2737 08c4 17       		.uleb128 0x17
 2738 08c5 C9080000 		.4byte	0x8c9
 2739 08c9 19       		.uleb128 0x19
 2740 08ca B9080000 		.4byte	0x8b9
 2741 08ce 19       		.uleb128 0x19
 2742 08cf B9080000 		.4byte	0x8b9
 2743 08d3 1A       		.uleb128 0x1a
 2744 08d4 FA010000 		.4byte	.LASF319
 2745 08d8 01       		.byte	0x1
 2746 08d9 08       		.byte	0x8
 2747 08da 49       		.byte	0x49
 2748 08db D0090000 		.4byte	0x9d0
 2749 08df 1B       		.uleb128 0x1b
 2750 08e0 A0040000 		.4byte	.LASF117
 2751 08e4 72       		.sleb128 -14
 2752 08e5 1B       		.uleb128 0x1b
 2753 08e6 F9040000 		.4byte	.LASF118
 2754 08ea 74       		.sleb128 -12
 2755 08eb 1B       		.uleb128 0x1b
 2756 08ec C5050000 		.4byte	.LASF119
 2757 08f0 75       		.sleb128 -11
 2758 08f1 1B       		.uleb128 0x1b
 2759 08f2 07030000 		.4byte	.LASF120
 2760 08f6 76       		.sleb128 -10
 2761 08f7 1B       		.uleb128 0x1b
 2762 08f8 68060000 		.4byte	.LASF121
 2763 08fc 7B       		.sleb128 -5
 2764 08fd 1B       		.uleb128 0x1b
 2765 08fe C6090000 		.4byte	.LASF122
 2766 0902 7C       		.sleb128 -4
 2767 0903 1B       		.uleb128 0x1b
 2768 0904 9F0B0000 		.4byte	.LASF123
 2769 0908 7E       		.sleb128 -2
 2770 0909 1B       		.uleb128 0x1b
 2771 090a 2E020000 		.4byte	.LASF124
 2772 090e 7F       		.sleb128 -1
 2773 090f 1B       		.uleb128 0x1b
 2774 0910 48040000 		.4byte	.LASF125
ARM GAS  /tmp/ccsPeR2V.s 			page 85


 2775 0914 00       		.sleb128 0
 2776 0915 1B       		.uleb128 0x1b
 2777 0916 0A010000 		.4byte	.LASF126
 2778 091a 01       		.sleb128 1
 2779 091b 1B       		.uleb128 0x1b
 2780 091c 1E0C0000 		.4byte	.LASF127
 2781 0920 02       		.sleb128 2
 2782 0921 1B       		.uleb128 0x1b
 2783 0922 84040000 		.4byte	.LASF128
 2784 0926 03       		.sleb128 3
 2785 0927 1B       		.uleb128 0x1b
 2786 0928 94050000 		.4byte	.LASF129
 2787 092c 04       		.sleb128 4
 2788 092d 1B       		.uleb128 0x1b
 2789 092e 1C040000 		.4byte	.LASF130
 2790 0932 05       		.sleb128 5
 2791 0933 1B       		.uleb128 0x1b
 2792 0934 25040000 		.4byte	.LASF131
 2793 0938 06       		.sleb128 6
 2794 0939 1B       		.uleb128 0x1b
 2795 093a FC080000 		.4byte	.LASF132
 2796 093e 08       		.sleb128 8
 2797 093f 1B       		.uleb128 0x1b
 2798 0940 BD070000 		.4byte	.LASF133
 2799 0944 09       		.sleb128 9
 2800 0945 1B       		.uleb128 0x1b
 2801 0946 56030000 		.4byte	.LASF134
 2802 094a 0A       		.sleb128 10
 2803 094b 1B       		.uleb128 0x1b
 2804 094c 760A0000 		.4byte	.LASF135
 2805 0950 0B       		.sleb128 11
 2806 0951 1B       		.uleb128 0x1b
 2807 0952 A8090000 		.4byte	.LASF136
 2808 0956 0C       		.sleb128 12
 2809 0957 1B       		.uleb128 0x1b
 2810 0958 62040000 		.4byte	.LASF137
 2811 095c 0D       		.sleb128 13
 2812 095d 1B       		.uleb128 0x1b
 2813 095e 55090000 		.4byte	.LASF138
 2814 0962 0E       		.sleb128 14
 2815 0963 1B       		.uleb128 0x1b
 2816 0964 74080000 		.4byte	.LASF139
 2817 0968 0F       		.sleb128 15
 2818 0969 1B       		.uleb128 0x1b
 2819 096a 61080000 		.4byte	.LASF140
 2820 096e 12       		.sleb128 18
 2821 096f 1B       		.uleb128 0x1b
 2822 0970 0A070000 		.4byte	.LASF141
 2823 0974 13       		.sleb128 19
 2824 0975 1B       		.uleb128 0x1b
 2825 0976 3B060000 		.4byte	.LASF142
 2826 097a 14       		.sleb128 20
 2827 097b 1B       		.uleb128 0x1b
 2828 097c 47090000 		.4byte	.LASF143
 2829 0980 15       		.sleb128 21
 2830 0981 1B       		.uleb128 0x1b
 2831 0982 250B0000 		.4byte	.LASF144
ARM GAS  /tmp/ccsPeR2V.s 			page 86


 2832 0986 16       		.sleb128 22
 2833 0987 1B       		.uleb128 0x1b
 2834 0988 98090000 		.4byte	.LASF145
 2835 098c 17       		.sleb128 23
 2836 098d 1B       		.uleb128 0x1b
 2837 098e 59040000 		.4byte	.LASF146
 2838 0992 18       		.sleb128 24
 2839 0993 1B       		.uleb128 0x1b
 2840 0994 18000000 		.4byte	.LASF147
 2841 0998 19       		.sleb128 25
 2842 0999 1B       		.uleb128 0x1b
 2843 099a C30B0000 		.4byte	.LASF148
 2844 099e 1A       		.sleb128 26
 2845 099f 1B       		.uleb128 0x1b
 2846 09a0 01070000 		.4byte	.LASF149
 2847 09a4 1B       		.sleb128 27
 2848 09a5 1B       		.uleb128 0x1b
 2849 09a6 FF010000 		.4byte	.LASF150
 2850 09aa 1C       		.sleb128 28
 2851 09ab 1B       		.uleb128 0x1b
 2852 09ac AB080000 		.4byte	.LASF151
 2853 09b0 1D       		.sleb128 29
 2854 09b1 1B       		.uleb128 0x1b
 2855 09b2 96040000 		.4byte	.LASF152
 2856 09b6 1E       		.sleb128 30
 2857 09b7 1B       		.uleb128 0x1b
 2858 09b8 C8030000 		.4byte	.LASF153
 2859 09bc 1F       		.sleb128 31
 2860 09bd 1B       		.uleb128 0x1b
 2861 09be 85010000 		.4byte	.LASF154
 2862 09c2 20       		.sleb128 32
 2863 09c3 1B       		.uleb128 0x1b
 2864 09c4 06040000 		.4byte	.LASF155
 2865 09c8 21       		.sleb128 33
 2866 09c9 1B       		.uleb128 0x1b
 2867 09ca 8D040000 		.4byte	.LASF156
 2868 09ce 22       		.sleb128 34
 2869 09cf 00       		.byte	0
 2870 09d0 04       		.uleb128 0x4
 2871 09d1 3A050000 		.4byte	.LASF157
 2872 09d5 08       		.byte	0x8
 2873 09d6 76       		.byte	0x76
 2874 09d7 D3080000 		.4byte	0x8d3
 2875 09db 1C       		.uleb128 0x1c
 2876 09dc 040E     		.2byte	0xe04
 2877 09de 01       		.byte	0x1
 2878 09df 84       		.byte	0x84
 2879 09e0 A50A0000 		.4byte	0xaa5
 2880 09e4 0B       		.uleb128 0xb
 2881 09e5 D50B0000 		.4byte	.LASF158
 2882 09e9 01       		.byte	0x1
 2883 09ea 86       		.byte	0x86
 2884 09eb B50A0000 		.4byte	0xab5
 2885 09ef 02       		.byte	0x2
 2886 09f0 23       		.byte	0x23
 2887 09f1 00       		.uleb128 0
 2888 09f2 0B       		.uleb128 0xb
ARM GAS  /tmp/ccsPeR2V.s 			page 87


 2889 09f3 8A020000 		.4byte	.LASF159
 2890 09f7 01       		.byte	0x1
 2891 09f8 87       		.byte	0x87
 2892 09f9 BA0A0000 		.4byte	0xaba
 2893 09fd 02       		.byte	0x2
 2894 09fe 23       		.byte	0x23
 2895 09ff 20       		.uleb128 0x20
 2896 0a00 0B       		.uleb128 0xb
 2897 0a01 D5080000 		.4byte	.LASF160
 2898 0a05 01       		.byte	0x1
 2899 0a06 88       		.byte	0x88
 2900 0a07 CA0A0000 		.4byte	0xaca
 2901 0a0b 03       		.byte	0x3
 2902 0a0c 23       		.byte	0x23
 2903 0a0d 8001     		.uleb128 0x80
 2904 0a0f 0B       		.uleb128 0xb
 2905 0a10 00000000 		.4byte	.LASF161
 2906 0a14 01       		.byte	0x1
 2907 0a15 89       		.byte	0x89
 2908 0a16 BA0A0000 		.4byte	0xaba
 2909 0a1a 03       		.byte	0x3
 2910 0a1b 23       		.byte	0x23
 2911 0a1c A001     		.uleb128 0xa0
 2912 0a1e 0B       		.uleb128 0xb
 2913 0a1f D1030000 		.4byte	.LASF162
 2914 0a23 01       		.byte	0x1
 2915 0a24 8A       		.byte	0x8a
 2916 0a25 CF0A0000 		.4byte	0xacf
 2917 0a29 03       		.byte	0x3
 2918 0a2a 23       		.byte	0x23
 2919 0a2b 8002     		.uleb128 0x100
 2920 0a2d 0B       		.uleb128 0xb
 2921 0a2e FD020000 		.4byte	.LASF163
 2922 0a32 01       		.byte	0x1
 2923 0a33 8B       		.byte	0x8b
 2924 0a34 BA0A0000 		.4byte	0xaba
 2925 0a38 03       		.byte	0x3
 2926 0a39 23       		.byte	0x23
 2927 0a3a A002     		.uleb128 0x120
 2928 0a3c 0B       		.uleb128 0xb
 2929 0a3d 1D010000 		.4byte	.LASF164
 2930 0a41 01       		.byte	0x1
 2931 0a42 8C       		.byte	0x8c
 2932 0a43 D40A0000 		.4byte	0xad4
 2933 0a47 03       		.byte	0x3
 2934 0a48 23       		.byte	0x23
 2935 0a49 8003     		.uleb128 0x180
 2936 0a4b 0B       		.uleb128 0xb
 2937 0a4c A2020000 		.4byte	.LASF165
 2938 0a50 01       		.byte	0x1
 2939 0a51 8D       		.byte	0x8d
 2940 0a52 BA0A0000 		.4byte	0xaba
 2941 0a56 03       		.byte	0x3
 2942 0a57 23       		.byte	0x23
 2943 0a58 A003     		.uleb128 0x1a0
 2944 0a5a 0B       		.uleb128 0xb
 2945 0a5b D0020000 		.4byte	.LASF166
ARM GAS  /tmp/ccsPeR2V.s 			page 88


 2946 0a5f 01       		.byte	0x1
 2947 0a60 8E       		.byte	0x8e
 2948 0a61 D90A0000 		.4byte	0xad9
 2949 0a65 03       		.byte	0x3
 2950 0a66 23       		.byte	0x23
 2951 0a67 8004     		.uleb128 0x200
 2952 0a69 0B       		.uleb128 0xb
 2953 0a6a AC020000 		.4byte	.LASF167
 2954 0a6e 01       		.byte	0x1
 2955 0a6f 8F       		.byte	0x8f
 2956 0a70 DE0A0000 		.4byte	0xade
 2957 0a74 03       		.byte	0x3
 2958 0a75 23       		.byte	0x23
 2959 0a76 A004     		.uleb128 0x220
 2960 0a78 0E       		.uleb128 0xe
 2961 0a79 495000   		.ascii	"IP\000"
 2962 0a7c 01       		.byte	0x1
 2963 0a7d 90       		.byte	0x90
 2964 0a7e FE0A0000 		.4byte	0xafe
 2965 0a82 03       		.byte	0x3
 2966 0a83 23       		.byte	0x23
 2967 0a84 8006     		.uleb128 0x300
 2968 0a86 0B       		.uleb128 0xb
 2969 0a87 B6020000 		.4byte	.LASF168
 2970 0a8b 01       		.byte	0x1
 2971 0a8c 91       		.byte	0x91
 2972 0a8d 030B0000 		.4byte	0xb03
 2973 0a91 03       		.byte	0x3
 2974 0a92 23       		.byte	0x23
 2975 0a93 F007     		.uleb128 0x3f0
 2976 0a95 0B       		.uleb128 0xb
 2977 0a96 01040000 		.4byte	.LASF169
 2978 0a9a 01       		.byte	0x1
 2979 0a9b 92       		.byte	0x92
 2980 0a9c CE080000 		.4byte	0x8ce
 2981 0aa0 03       		.byte	0x3
 2982 0aa1 23       		.byte	0x23
 2983 0aa2 801C     		.uleb128 0xe00
 2984 0aa4 00       		.byte	0
 2985 0aa5 08       		.uleb128 0x8
 2986 0aa6 B9080000 		.4byte	0x8b9
 2987 0aaa B50A0000 		.4byte	0xab5
 2988 0aae 09       		.uleb128 0x9
 2989 0aaf 4C000000 		.4byte	0x4c
 2990 0ab3 07       		.byte	0x7
 2991 0ab4 00       		.byte	0
 2992 0ab5 19       		.uleb128 0x19
 2993 0ab6 A50A0000 		.4byte	0xaa5
 2994 0aba 08       		.uleb128 0x8
 2995 0abb B9080000 		.4byte	0x8b9
 2996 0abf CA0A0000 		.4byte	0xaca
 2997 0ac3 09       		.uleb128 0x9
 2998 0ac4 4C000000 		.4byte	0x4c
 2999 0ac8 17       		.byte	0x17
 3000 0ac9 00       		.byte	0
 3001 0aca 19       		.uleb128 0x19
 3002 0acb A50A0000 		.4byte	0xaa5
ARM GAS  /tmp/ccsPeR2V.s 			page 89


 3003 0acf 19       		.uleb128 0x19
 3004 0ad0 A50A0000 		.4byte	0xaa5
 3005 0ad4 19       		.uleb128 0x19
 3006 0ad5 A50A0000 		.4byte	0xaa5
 3007 0ad9 19       		.uleb128 0x19
 3008 0ada A50A0000 		.4byte	0xaa5
 3009 0ade 08       		.uleb128 0x8
 3010 0adf B9080000 		.4byte	0x8b9
 3011 0ae3 EE0A0000 		.4byte	0xaee
 3012 0ae7 09       		.uleb128 0x9
 3013 0ae8 4C000000 		.4byte	0x4c
 3014 0aec 37       		.byte	0x37
 3015 0aed 00       		.byte	0
 3016 0aee 08       		.uleb128 0x8
 3017 0aef 98080000 		.4byte	0x898
 3018 0af3 FE0A0000 		.4byte	0xafe
 3019 0af7 09       		.uleb128 0x9
 3020 0af8 4C000000 		.4byte	0x4c
 3021 0afc EF       		.byte	0xef
 3022 0afd 00       		.byte	0
 3023 0afe 19       		.uleb128 0x19
 3024 0aff EE0A0000 		.4byte	0xaee
 3025 0b03 08       		.uleb128 0x8
 3026 0b04 B9080000 		.4byte	0x8b9
 3027 0b08 140B0000 		.4byte	0xb14
 3028 0b0c 1D       		.uleb128 0x1d
 3029 0b0d 4C000000 		.4byte	0x4c
 3030 0b11 8302     		.2byte	0x283
 3031 0b13 00       		.byte	0
 3032 0b14 04       		.uleb128 0x4
 3033 0b15 42000000 		.4byte	.LASF170
 3034 0b19 01       		.byte	0x1
 3035 0b1a 93       		.byte	0x93
 3036 0b1b DB090000 		.4byte	0x9db
 3037 0b1f 0A       		.uleb128 0xa
 3038 0b20 74       		.byte	0x74
 3039 0b21 01       		.byte	0x1
 3040 0b22 9B       		.byte	0x9b
 3041 0b23 320C0000 		.4byte	0xc32
 3042 0b27 0B       		.uleb128 0xb
 3043 0b28 D8010000 		.4byte	.LASF171
 3044 0b2c 01       		.byte	0x1
 3045 0b2d 9D       		.byte	0x9d
 3046 0b2e C4080000 		.4byte	0x8c4
 3047 0b32 02       		.byte	0x2
 3048 0b33 23       		.byte	0x23
 3049 0b34 00       		.uleb128 0
 3050 0b35 0B       		.uleb128 0xb
 3051 0b36 4D020000 		.4byte	.LASF172
 3052 0b3a 01       		.byte	0x1
 3053 0b3b 9E       		.byte	0x9e
 3054 0b3c CE080000 		.4byte	0x8ce
 3055 0b40 02       		.byte	0x2
 3056 0b41 23       		.byte	0x23
 3057 0b42 04       		.uleb128 0x4
 3058 0b43 0B       		.uleb128 0xb
 3059 0b44 C0000000 		.4byte	.LASF173
ARM GAS  /tmp/ccsPeR2V.s 			page 90


 3060 0b48 01       		.byte	0x1
 3061 0b49 9F       		.byte	0x9f
 3062 0b4a CE080000 		.4byte	0x8ce
 3063 0b4e 02       		.byte	0x2
 3064 0b4f 23       		.byte	0x23
 3065 0b50 08       		.uleb128 0x8
 3066 0b51 0B       		.uleb128 0xb
 3067 0b52 6A010000 		.4byte	.LASF174
 3068 0b56 01       		.byte	0x1
 3069 0b57 A0       		.byte	0xa0
 3070 0b58 CE080000 		.4byte	0x8ce
 3071 0b5c 02       		.byte	0x2
 3072 0b5d 23       		.byte	0x23
 3073 0b5e 0C       		.uleb128 0xc
 3074 0b5f 0E       		.uleb128 0xe
 3075 0b60 53435200 		.ascii	"SCR\000"
 3076 0b64 01       		.byte	0x1
 3077 0b65 A1       		.byte	0xa1
 3078 0b66 CE080000 		.4byte	0x8ce
 3079 0b6a 02       		.byte	0x2
 3080 0b6b 23       		.byte	0x23
 3081 0b6c 10       		.uleb128 0x10
 3082 0b6d 0E       		.uleb128 0xe
 3083 0b6e 43435200 		.ascii	"CCR\000"
 3084 0b72 01       		.byte	0x1
 3085 0b73 A2       		.byte	0xa2
 3086 0b74 CE080000 		.4byte	0x8ce
 3087 0b78 02       		.byte	0x2
 3088 0b79 23       		.byte	0x23
 3089 0b7a 14       		.uleb128 0x14
 3090 0b7b 0E       		.uleb128 0xe
 3091 0b7c 53485000 		.ascii	"SHP\000"
 3092 0b80 01       		.byte	0x1
 3093 0b81 A3       		.byte	0xa3
 3094 0b82 420C0000 		.4byte	0xc42
 3095 0b86 02       		.byte	0x2
 3096 0b87 23       		.byte	0x23
 3097 0b88 18       		.uleb128 0x18
 3098 0b89 0B       		.uleb128 0xb
 3099 0b8a F3030000 		.4byte	.LASF175
 3100 0b8e 01       		.byte	0x1
 3101 0b8f A4       		.byte	0xa4
 3102 0b90 CE080000 		.4byte	0x8ce
 3103 0b94 02       		.byte	0x2
 3104 0b95 23       		.byte	0x23
 3105 0b96 24       		.uleb128 0x24
 3106 0b97 0B       		.uleb128 0xb
 3107 0b98 75090000 		.4byte	.LASF176
 3108 0b9c 01       		.byte	0x1
 3109 0b9d A5       		.byte	0xa5
 3110 0b9e CE080000 		.4byte	0x8ce
 3111 0ba2 02       		.byte	0x2
 3112 0ba3 23       		.byte	0x23
 3113 0ba4 28       		.uleb128 0x28
 3114 0ba5 0B       		.uleb128 0xb
 3115 0ba6 96030000 		.4byte	.LASF177
 3116 0baa 01       		.byte	0x1
ARM GAS  /tmp/ccsPeR2V.s 			page 91


 3117 0bab A6       		.byte	0xa6
 3118 0bac CE080000 		.4byte	0x8ce
 3119 0bb0 02       		.byte	0x2
 3120 0bb1 23       		.byte	0x23
 3121 0bb2 2C       		.uleb128 0x2c
 3122 0bb3 0B       		.uleb128 0xb
 3123 0bb4 51030000 		.4byte	.LASF178
 3124 0bb8 01       		.byte	0x1
 3125 0bb9 A7       		.byte	0xa7
 3126 0bba CE080000 		.4byte	0x8ce
 3127 0bbe 02       		.byte	0x2
 3128 0bbf 23       		.byte	0x23
 3129 0bc0 30       		.uleb128 0x30
 3130 0bc1 0B       		.uleb128 0xb
 3131 0bc2 240A0000 		.4byte	.LASF179
 3132 0bc6 01       		.byte	0x1
 3133 0bc7 A8       		.byte	0xa8
 3134 0bc8 CE080000 		.4byte	0x8ce
 3135 0bcc 02       		.byte	0x2
 3136 0bcd 23       		.byte	0x23
 3137 0bce 34       		.uleb128 0x34
 3138 0bcf 0B       		.uleb128 0xb
 3139 0bd0 F1070000 		.4byte	.LASF180
 3140 0bd4 01       		.byte	0x1
 3141 0bd5 A9       		.byte	0xa9
 3142 0bd6 CE080000 		.4byte	0x8ce
 3143 0bda 02       		.byte	0x2
 3144 0bdb 23       		.byte	0x23
 3145 0bdc 38       		.uleb128 0x38
 3146 0bdd 0B       		.uleb128 0xb
 3147 0bde 1B090000 		.4byte	.LASF181
 3148 0be2 01       		.byte	0x1
 3149 0be3 AA       		.byte	0xaa
 3150 0be4 CE080000 		.4byte	0x8ce
 3151 0be8 02       		.byte	0x2
 3152 0be9 23       		.byte	0x23
 3153 0bea 3C       		.uleb128 0x3c
 3154 0beb 0E       		.uleb128 0xe
 3155 0bec 50465200 		.ascii	"PFR\000"
 3156 0bf0 01       		.byte	0x1
 3157 0bf1 AB       		.byte	0xab
 3158 0bf2 570C0000 		.4byte	0xc57
 3159 0bf6 02       		.byte	0x2
 3160 0bf7 23       		.byte	0x23
 3161 0bf8 40       		.uleb128 0x40
 3162 0bf9 0E       		.uleb128 0xe
 3163 0bfa 44465200 		.ascii	"DFR\000"
 3164 0bfe 01       		.byte	0x1
 3165 0bff AC       		.byte	0xac
 3166 0c00 C4080000 		.4byte	0x8c4
 3167 0c04 02       		.byte	0x2
 3168 0c05 23       		.byte	0x23
 3169 0c06 48       		.uleb128 0x48
 3170 0c07 0E       		.uleb128 0xe
 3171 0c08 41445200 		.ascii	"ADR\000"
 3172 0c0c 01       		.byte	0x1
 3173 0c0d AD       		.byte	0xad
ARM GAS  /tmp/ccsPeR2V.s 			page 92


 3174 0c0e C4080000 		.4byte	0x8c4
 3175 0c12 02       		.byte	0x2
 3176 0c13 23       		.byte	0x23
 3177 0c14 4C       		.uleb128 0x4c
 3178 0c15 0B       		.uleb128 0xb
 3179 0c16 1F0A0000 		.4byte	.LASF182
 3180 0c1a 01       		.byte	0x1
 3181 0c1b AE       		.byte	0xae
 3182 0c1c 710C0000 		.4byte	0xc71
 3183 0c20 02       		.byte	0x2
 3184 0c21 23       		.byte	0x23
 3185 0c22 50       		.uleb128 0x50
 3186 0c23 0B       		.uleb128 0xb
 3187 0c24 5F0A0000 		.4byte	.LASF183
 3188 0c28 01       		.byte	0x1
 3189 0c29 AF       		.byte	0xaf
 3190 0c2a 8B0C0000 		.4byte	0xc8b
 3191 0c2e 02       		.byte	0x2
 3192 0c2f 23       		.byte	0x23
 3193 0c30 60       		.uleb128 0x60
 3194 0c31 00       		.byte	0
 3195 0c32 08       		.uleb128 0x8
 3196 0c33 98080000 		.4byte	0x898
 3197 0c37 420C0000 		.4byte	0xc42
 3198 0c3b 09       		.uleb128 0x9
 3199 0c3c 4C000000 		.4byte	0x4c
 3200 0c40 0B       		.byte	0xb
 3201 0c41 00       		.byte	0
 3202 0c42 19       		.uleb128 0x19
 3203 0c43 320C0000 		.4byte	0xc32
 3204 0c47 08       		.uleb128 0x8
 3205 0c48 B9080000 		.4byte	0x8b9
 3206 0c4c 570C0000 		.4byte	0xc57
 3207 0c50 09       		.uleb128 0x9
 3208 0c51 4C000000 		.4byte	0x4c
 3209 0c55 01       		.byte	0x1
 3210 0c56 00       		.byte	0
 3211 0c57 17       		.uleb128 0x17
 3212 0c58 5C0C0000 		.4byte	0xc5c
 3213 0c5c 19       		.uleb128 0x19
 3214 0c5d 470C0000 		.4byte	0xc47
 3215 0c61 08       		.uleb128 0x8
 3216 0c62 B9080000 		.4byte	0x8b9
 3217 0c66 710C0000 		.4byte	0xc71
 3218 0c6a 09       		.uleb128 0x9
 3219 0c6b 4C000000 		.4byte	0x4c
 3220 0c6f 03       		.byte	0x3
 3221 0c70 00       		.byte	0
 3222 0c71 17       		.uleb128 0x17
 3223 0c72 760C0000 		.4byte	0xc76
 3224 0c76 19       		.uleb128 0x19
 3225 0c77 610C0000 		.4byte	0xc61
 3226 0c7b 08       		.uleb128 0x8
 3227 0c7c B9080000 		.4byte	0x8b9
 3228 0c80 8B0C0000 		.4byte	0xc8b
 3229 0c84 09       		.uleb128 0x9
 3230 0c85 4C000000 		.4byte	0x4c
ARM GAS  /tmp/ccsPeR2V.s 			page 93


 3231 0c89 04       		.byte	0x4
 3232 0c8a 00       		.byte	0
 3233 0c8b 17       		.uleb128 0x17
 3234 0c8c 900C0000 		.4byte	0xc90
 3235 0c90 19       		.uleb128 0x19
 3236 0c91 7B0C0000 		.4byte	0xc7b
 3237 0c95 04       		.uleb128 0x4
 3238 0c96 3A030000 		.4byte	.LASF184
 3239 0c9a 01       		.byte	0x1
 3240 0c9b B0       		.byte	0xb0
 3241 0c9c 1F0B0000 		.4byte	0xb1f
 3242 0ca0 19       		.uleb128 0x19
 3243 0ca1 01010000 		.4byte	0x101
 3244 0ca5 17       		.uleb128 0x17
 3245 0ca6 A00C0000 		.4byte	0xca0
 3246 0caa 08       		.uleb128 0x8
 3247 0cab 01010000 		.4byte	0x101
 3248 0caf BA0C0000 		.4byte	0xcba
 3249 0cb3 09       		.uleb128 0x9
 3250 0cb4 4C000000 		.4byte	0x4c
 3251 0cb8 12       		.byte	0x12
 3252 0cb9 00       		.byte	0
 3253 0cba 1C       		.uleb128 0x1c
 3254 0cbb 2801     		.2byte	0x128
 3255 0cbd 08       		.byte	0x8
 3256 0cbe EF       		.byte	0xef
 3257 0cbf E00E0000 		.4byte	0xee0
 3258 0cc3 0B       		.uleb128 0xb
 3259 0cc4 990A0000 		.4byte	.LASF185
 3260 0cc8 08       		.byte	0x8
 3261 0cc9 F0       		.byte	0xf0
 3262 0cca A00C0000 		.4byte	0xca0
 3263 0cce 02       		.byte	0x2
 3264 0ccf 23       		.byte	0x23
 3265 0cd0 00       		.uleb128 0
 3266 0cd1 0B       		.uleb128 0xb
 3267 0cd2 7B050000 		.4byte	.LASF186
 3268 0cd6 08       		.byte	0x8
 3269 0cd7 F1       		.byte	0xf1
 3270 0cd8 A00C0000 		.4byte	0xca0
 3271 0cdc 02       		.byte	0x2
 3272 0cdd 23       		.byte	0x23
 3273 0cde 04       		.uleb128 0x4
 3274 0cdf 0B       		.uleb128 0xb
 3275 0ce0 20090000 		.4byte	.LASF187
 3276 0ce4 08       		.byte	0x8
 3277 0ce5 F2       		.byte	0xf2
 3278 0ce6 A00C0000 		.4byte	0xca0
 3279 0cea 02       		.byte	0x2
 3280 0ceb 23       		.byte	0x23
 3281 0cec 08       		.uleb128 0x8
 3282 0ced 0B       		.uleb128 0xb
 3283 0cee 2A090000 		.4byte	.LASF188
 3284 0cf2 08       		.byte	0x8
 3285 0cf3 F3       		.byte	0xf3
 3286 0cf4 A00C0000 		.4byte	0xca0
 3287 0cf8 02       		.byte	0x2
ARM GAS  /tmp/ccsPeR2V.s 			page 94


 3288 0cf9 23       		.byte	0x23
 3289 0cfa 0C       		.uleb128 0xc
 3290 0cfb 0B       		.uleb128 0xb
 3291 0cfc CC0B0000 		.4byte	.LASF189
 3292 0d00 08       		.byte	0x8
 3293 0d01 F4       		.byte	0xf4
 3294 0d02 A00C0000 		.4byte	0xca0
 3295 0d06 02       		.byte	0x2
 3296 0d07 23       		.byte	0x23
 3297 0d08 10       		.uleb128 0x10
 3298 0d09 0B       		.uleb128 0xb
 3299 0d0a 630B0000 		.4byte	.LASF190
 3300 0d0e 08       		.byte	0x8
 3301 0d0f F5       		.byte	0xf5
 3302 0d10 A00C0000 		.4byte	0xca0
 3303 0d14 02       		.byte	0x2
 3304 0d15 23       		.byte	0x23
 3305 0d16 14       		.uleb128 0x14
 3306 0d17 0B       		.uleb128 0xb
 3307 0d18 C4040000 		.4byte	.LASF191
 3308 0d1c 08       		.byte	0x8
 3309 0d1d F6       		.byte	0xf6
 3310 0d1e A50C0000 		.4byte	0xca5
 3311 0d22 02       		.byte	0x2
 3312 0d23 23       		.byte	0x23
 3313 0d24 18       		.uleb128 0x18
 3314 0d25 0B       		.uleb128 0xb
 3315 0d26 61090000 		.4byte	.LASF192
 3316 0d2a 08       		.byte	0x8
 3317 0d2b F7       		.byte	0xf7
 3318 0d2c F00E0000 		.4byte	0xef0
 3319 0d30 02       		.byte	0x2
 3320 0d31 23       		.byte	0x23
 3321 0d32 1C       		.uleb128 0x1c
 3322 0d33 0B       		.uleb128 0xb
 3323 0d34 82050000 		.4byte	.LASF193
 3324 0d38 08       		.byte	0x8
 3325 0d39 F8       		.byte	0xf8
 3326 0d3a A50C0000 		.4byte	0xca5
 3327 0d3e 02       		.byte	0x2
 3328 0d3f 23       		.byte	0x23
 3329 0d40 20       		.uleb128 0x20
 3330 0d41 0B       		.uleb128 0xb
 3331 0d42 34070000 		.4byte	.LASF194
 3332 0d46 08       		.byte	0x8
 3333 0d47 F9       		.byte	0xf9
 3334 0d48 A00C0000 		.4byte	0xca0
 3335 0d4c 02       		.byte	0x2
 3336 0d4d 23       		.byte	0x23
 3337 0d4e 24       		.uleb128 0x24
 3338 0d4f 0B       		.uleb128 0xb
 3339 0d50 E3060000 		.4byte	.LASF195
 3340 0d54 08       		.byte	0x8
 3341 0d55 FA       		.byte	0xfa
 3342 0d56 A00C0000 		.4byte	0xca0
 3343 0d5a 02       		.byte	0x2
 3344 0d5b 23       		.byte	0x23
ARM GAS  /tmp/ccsPeR2V.s 			page 95


 3345 0d5c 28       		.uleb128 0x28
 3346 0d5d 0B       		.uleb128 0xb
 3347 0d5e 910A0000 		.4byte	.LASF196
 3348 0d62 08       		.byte	0x8
 3349 0d63 FB       		.byte	0xfb
 3350 0d64 A50C0000 		.4byte	0xca5
 3351 0d68 02       		.byte	0x2
 3352 0d69 23       		.byte	0x23
 3353 0d6a 2C       		.uleb128 0x2c
 3354 0d6b 0B       		.uleb128 0xb
 3355 0d6c 82000000 		.4byte	.LASF197
 3356 0d70 08       		.byte	0x8
 3357 0d71 FC       		.byte	0xfc
 3358 0d72 A50C0000 		.4byte	0xca5
 3359 0d76 02       		.byte	0x2
 3360 0d77 23       		.byte	0x23
 3361 0d78 30       		.uleb128 0x30
 3362 0d79 0B       		.uleb128 0xb
 3363 0d7a 6B090000 		.4byte	.LASF198
 3364 0d7e 08       		.byte	0x8
 3365 0d7f FD       		.byte	0xfd
 3366 0d80 050F0000 		.4byte	0xf05
 3367 0d84 02       		.byte	0x2
 3368 0d85 23       		.byte	0x23
 3369 0d86 34       		.uleb128 0x34
 3370 0d87 0B       		.uleb128 0xb
 3371 0d88 640A0000 		.4byte	.LASF199
 3372 0d8c 08       		.byte	0x8
 3373 0d8d FE       		.byte	0xfe
 3374 0d8e A50C0000 		.4byte	0xca5
 3375 0d92 02       		.byte	0x2
 3376 0d93 23       		.byte	0x23
 3377 0d94 3C       		.uleb128 0x3c
 3378 0d95 0B       		.uleb128 0xb
 3379 0d96 7A000000 		.4byte	.LASF200
 3380 0d9a 08       		.byte	0x8
 3381 0d9b FF       		.byte	0xff
 3382 0d9c A00C0000 		.4byte	0xca0
 3383 0da0 02       		.byte	0x2
 3384 0da1 23       		.byte	0x23
 3385 0da2 40       		.uleb128 0x40
 3386 0da3 13       		.uleb128 0x13
 3387 0da4 E20B0000 		.4byte	.LASF201
 3388 0da8 08       		.byte	0x8
 3389 0da9 0001     		.2byte	0x100
 3390 0dab A00C0000 		.4byte	0xca0
 3391 0daf 02       		.byte	0x2
 3392 0db0 23       		.byte	0x23
 3393 0db1 44       		.uleb128 0x44
 3394 0db2 13       		.uleb128 0x13
 3395 0db3 62050000 		.4byte	.LASF202
 3396 0db7 08       		.byte	0x8
 3397 0db8 0101     		.2byte	0x101
 3398 0dba A00C0000 		.4byte	0xca0
 3399 0dbe 02       		.byte	0x2
 3400 0dbf 23       		.byte	0x23
 3401 0dc0 48       		.uleb128 0x48
ARM GAS  /tmp/ccsPeR2V.s 			page 96


 3402 0dc1 13       		.uleb128 0x13
 3403 0dc2 59080000 		.4byte	.LASF203
 3404 0dc6 08       		.byte	0x8
 3405 0dc7 0201     		.2byte	0x102
 3406 0dc9 A00C0000 		.4byte	0xca0
 3407 0dcd 02       		.byte	0x2
 3408 0dce 23       		.byte	0x23
 3409 0dcf 4C       		.uleb128 0x4c
 3410 0dd0 13       		.uleb128 0x13
 3411 0dd1 F9030000 		.4byte	.LASF204
 3412 0dd5 08       		.byte	0x8
 3413 0dd6 0301     		.2byte	0x103
 3414 0dd8 1A0F0000 		.4byte	0xf1a
 3415 0ddc 02       		.byte	0x2
 3416 0ddd 23       		.byte	0x23
 3417 0dde 50       		.uleb128 0x50
 3418 0ddf 13       		.uleb128 0x13
 3419 0de0 E8000000 		.4byte	.LASF205
 3420 0de4 08       		.byte	0x8
 3421 0de5 0401     		.2byte	0x104
 3422 0de7 240F0000 		.4byte	0xf24
 3423 0deb 03       		.byte	0x3
 3424 0dec 23       		.byte	0x23
 3425 0ded 9001     		.uleb128 0x90
 3426 0def 13       		.uleb128 0x13
 3427 0df0 530B0000 		.4byte	.LASF206
 3428 0df4 08       		.byte	0x8
 3429 0df5 0501     		.2byte	0x105
 3430 0df7 A00C0000 		.4byte	0xca0
 3431 0dfb 03       		.byte	0x3
 3432 0dfc 23       		.byte	0x23
 3433 0dfd 9401     		.uleb128 0x94
 3434 0dff 13       		.uleb128 0x13
 3435 0e00 7A090000 		.4byte	.LASF207
 3436 0e04 08       		.byte	0x8
 3437 0e05 0601     		.2byte	0x106
 3438 0e07 290F0000 		.4byte	0xf29
 3439 0e0b 03       		.byte	0x3
 3440 0e0c 23       		.byte	0x23
 3441 0e0d 9801     		.uleb128 0x98
 3442 0e0f 13       		.uleb128 0x13
 3443 0e10 8C0B0000 		.4byte	.LASF208
 3444 0e14 08       		.byte	0x8
 3445 0e15 0701     		.2byte	0x107
 3446 0e17 A00C0000 		.4byte	0xca0
 3447 0e1b 03       		.byte	0x3
 3448 0e1c 23       		.byte	0x23
 3449 0e1d E401     		.uleb128 0xe4
 3450 0e1f 13       		.uleb128 0x13
 3451 0e20 4D010000 		.4byte	.LASF209
 3452 0e24 08       		.byte	0x8
 3453 0e25 0801     		.2byte	0x108
 3454 0e27 A50C0000 		.4byte	0xca5
 3455 0e2b 03       		.byte	0x3
 3456 0e2c 23       		.byte	0x23
 3457 0e2d E801     		.uleb128 0xe8
 3458 0e2f 13       		.uleb128 0x13
ARM GAS  /tmp/ccsPeR2V.s 			page 97


 3459 0e30 84090000 		.4byte	.LASF210
 3460 0e34 08       		.byte	0x8
 3461 0e35 0901     		.2byte	0x109
 3462 0e37 3E0F0000 		.4byte	0xf3e
 3463 0e3b 03       		.byte	0x3
 3464 0e3c 23       		.byte	0x23
 3465 0e3d EC01     		.uleb128 0xec
 3466 0e3f 13       		.uleb128 0x13
 3467 0e40 02010000 		.4byte	.LASF211
 3468 0e44 08       		.byte	0x8
 3469 0e45 0A01     		.2byte	0x10a
 3470 0e47 A00C0000 		.4byte	0xca0
 3471 0e4b 03       		.byte	0x3
 3472 0e4c 23       		.byte	0x23
 3473 0e4d 8002     		.uleb128 0x100
 3474 0e4f 13       		.uleb128 0x13
 3475 0e50 E4030000 		.4byte	.LASF212
 3476 0e54 08       		.byte	0x8
 3477 0e55 0B01     		.2byte	0x10b
 3478 0e57 A00C0000 		.4byte	0xca0
 3479 0e5b 03       		.byte	0x3
 3480 0e5c 23       		.byte	0x23
 3481 0e5d 8402     		.uleb128 0x104
 3482 0e5f 13       		.uleb128 0x13
 3483 0e60 ED010000 		.4byte	.LASF213
 3484 0e64 08       		.byte	0x8
 3485 0e65 0C01     		.2byte	0x10c
 3486 0e67 A00C0000 		.4byte	0xca0
 3487 0e6b 03       		.byte	0x3
 3488 0e6c 23       		.byte	0x23
 3489 0e6d 8802     		.uleb128 0x108
 3490 0e6f 13       		.uleb128 0x13
 3491 0e70 CD080000 		.4byte	.LASF214
 3492 0e74 08       		.byte	0x8
 3493 0e75 0D01     		.2byte	0x10d
 3494 0e77 A00C0000 		.4byte	0xca0
 3495 0e7b 03       		.byte	0x3
 3496 0e7c 23       		.byte	0x23
 3497 0e7d 8C02     		.uleb128 0x10c
 3498 0e7f 13       		.uleb128 0x13
 3499 0e80 14010000 		.4byte	.LASF215
 3500 0e84 08       		.byte	0x8
 3501 0e85 0E01     		.2byte	0x10e
 3502 0e87 A00C0000 		.4byte	0xca0
 3503 0e8b 03       		.byte	0x3
 3504 0e8c 23       		.byte	0x23
 3505 0e8d 9002     		.uleb128 0x110
 3506 0e8f 13       		.uleb128 0x13
 3507 0e90 DD070000 		.4byte	.LASF216
 3508 0e94 08       		.byte	0x8
 3509 0e95 0F01     		.2byte	0x10f
 3510 0e97 A00C0000 		.4byte	0xca0
 3511 0e9b 03       		.byte	0x3
 3512 0e9c 23       		.byte	0x23
 3513 0e9d 9402     		.uleb128 0x114
 3514 0e9f 13       		.uleb128 0x13
 3515 0ea0 2A010000 		.4byte	.LASF217
ARM GAS  /tmp/ccsPeR2V.s 			page 98


 3516 0ea4 08       		.byte	0x8
 3517 0ea5 1001     		.2byte	0x110
 3518 0ea7 A00C0000 		.4byte	0xca0
 3519 0eab 03       		.byte	0x3
 3520 0eac 23       		.byte	0x23
 3521 0ead 9802     		.uleb128 0x118
 3522 0eaf 13       		.uleb128 0x13
 3523 0eb0 04080000 		.4byte	.LASF218
 3524 0eb4 08       		.byte	0x8
 3525 0eb5 1101     		.2byte	0x111
 3526 0eb7 A00C0000 		.4byte	0xca0
 3527 0ebb 03       		.byte	0x3
 3528 0ebc 23       		.byte	0x23
 3529 0ebd 9C02     		.uleb128 0x11c
 3530 0ebf 13       		.uleb128 0x13
 3531 0ec0 B30A0000 		.4byte	.LASF219
 3532 0ec4 08       		.byte	0x8
 3533 0ec5 1201     		.2byte	0x112
 3534 0ec7 A00C0000 		.4byte	0xca0
 3535 0ecb 03       		.byte	0x3
 3536 0ecc 23       		.byte	0x23
 3537 0ecd A002     		.uleb128 0x120
 3538 0ecf 13       		.uleb128 0x13
 3539 0ed0 7B040000 		.4byte	.LASF220
 3540 0ed4 08       		.byte	0x8
 3541 0ed5 1301     		.2byte	0x113
 3542 0ed7 A50C0000 		.4byte	0xca5
 3543 0edb 03       		.byte	0x3
 3544 0edc 23       		.byte	0x23
 3545 0edd A402     		.uleb128 0x124
 3546 0edf 00       		.byte	0
 3547 0ee0 08       		.uleb128 0x8
 3548 0ee1 01010000 		.4byte	0x101
 3549 0ee5 F00E0000 		.4byte	0xef0
 3550 0ee9 09       		.uleb128 0x9
 3551 0eea 4C000000 		.4byte	0x4c
 3552 0eee 00       		.byte	0
 3553 0eef 00       		.byte	0
 3554 0ef0 19       		.uleb128 0x19
 3555 0ef1 E00E0000 		.4byte	0xee0
 3556 0ef5 08       		.uleb128 0x8
 3557 0ef6 01010000 		.4byte	0x101
 3558 0efa 050F0000 		.4byte	0xf05
 3559 0efe 09       		.uleb128 0x9
 3560 0eff 4C000000 		.4byte	0x4c
 3561 0f03 01       		.byte	0x1
 3562 0f04 00       		.byte	0
 3563 0f05 19       		.uleb128 0x19
 3564 0f06 F50E0000 		.4byte	0xef5
 3565 0f0a 08       		.uleb128 0x8
 3566 0f0b 01010000 		.4byte	0x101
 3567 0f0f 1A0F0000 		.4byte	0xf1a
 3568 0f13 09       		.uleb128 0x9
 3569 0f14 4C000000 		.4byte	0x4c
 3570 0f18 0F       		.byte	0xf
 3571 0f19 00       		.byte	0
 3572 0f1a 17       		.uleb128 0x17
ARM GAS  /tmp/ccsPeR2V.s 			page 99


 3573 0f1b 1F0F0000 		.4byte	0xf1f
 3574 0f1f 19       		.uleb128 0x19
 3575 0f20 0A0F0000 		.4byte	0xf0a
 3576 0f24 19       		.uleb128 0x19
 3577 0f25 E00E0000 		.4byte	0xee0
 3578 0f29 19       		.uleb128 0x19
 3579 0f2a AA0C0000 		.4byte	0xcaa
 3580 0f2e 08       		.uleb128 0x8
 3581 0f2f 01010000 		.4byte	0x101
 3582 0f33 3E0F0000 		.4byte	0xf3e
 3583 0f37 09       		.uleb128 0x9
 3584 0f38 4C000000 		.4byte	0x4c
 3585 0f3c 04       		.byte	0x4
 3586 0f3d 00       		.byte	0
 3587 0f3e 19       		.uleb128 0x19
 3588 0f3f 2E0F0000 		.4byte	0xf2e
 3589 0f43 1E       		.uleb128 0x1e
 3590 0f44 41646300 		.ascii	"Adc\000"
 3591 0f48 08       		.byte	0x8
 3592 0f49 1401     		.2byte	0x114
 3593 0f4b BA0C0000 		.4byte	0xcba
 3594 0f4f 08       		.uleb128 0x8
 3595 0f50 01010000 		.4byte	0x101
 3596 0f54 5F0F0000 		.4byte	0xf5f
 3597 0f58 09       		.uleb128 0x9
 3598 0f59 4C000000 		.4byte	0x4c
 3599 0f5d 03       		.byte	0x3
 3600 0f5e 00       		.byte	0
 3601 0f5f 08       		.uleb128 0x8
 3602 0f60 01010000 		.4byte	0x101
 3603 0f64 6F0F0000 		.4byte	0xf6f
 3604 0f68 09       		.uleb128 0x9
 3605 0f69 4C000000 		.4byte	0x4c
 3606 0f6d 0B       		.byte	0xb
 3607 0f6e 00       		.byte	0
 3608 0f6f 08       		.uleb128 0x8
 3609 0f70 01010000 		.4byte	0x101
 3610 0f74 7F0F0000 		.4byte	0xf7f
 3611 0f78 09       		.uleb128 0x9
 3612 0f79 4C000000 		.4byte	0x4c
 3613 0f7d 0A       		.byte	0xa
 3614 0f7e 00       		.byte	0
 3615 0f7f 08       		.uleb128 0x8
 3616 0f80 01010000 		.4byte	0x101
 3617 0f84 8F0F0000 		.4byte	0xf8f
 3618 0f88 09       		.uleb128 0x9
 3619 0f89 4C000000 		.4byte	0x4c
 3620 0f8d 02       		.byte	0x2
 3621 0f8e 00       		.byte	0
 3622 0f8f 1F       		.uleb128 0x1f
 3623 0f90 20       		.byte	0x20
 3624 0f91 08       		.byte	0x8
 3625 0f92 050F     		.2byte	0xf05
 3626 0f94 11100000 		.4byte	0x1011
 3627 0f98 13       		.uleb128 0x13
 3628 0f99 170A0000 		.4byte	.LASF221
 3629 0f9d 08       		.byte	0x8
ARM GAS  /tmp/ccsPeR2V.s 			page 100


 3630 0f9e 060F     		.2byte	0xf06
 3631 0fa0 A00C0000 		.4byte	0xca0
 3632 0fa4 02       		.byte	0x2
 3633 0fa5 23       		.byte	0x23
 3634 0fa6 00       		.uleb128 0
 3635 0fa7 13       		.uleb128 0x13
 3636 0fa8 EB060000 		.4byte	.LASF222
 3637 0fac 08       		.byte	0x8
 3638 0fad 070F     		.2byte	0xf07
 3639 0faf A00C0000 		.4byte	0xca0
 3640 0fb3 02       		.byte	0x2
 3641 0fb4 23       		.byte	0x23
 3642 0fb5 04       		.uleb128 0x4
 3643 0fb6 13       		.uleb128 0x13
 3644 0fb7 28060000 		.4byte	.LASF223
 3645 0fbb 08       		.byte	0x8
 3646 0fbc 080F     		.2byte	0xf08
 3647 0fbe A00C0000 		.4byte	0xca0
 3648 0fc2 02       		.byte	0x2
 3649 0fc3 23       		.byte	0x23
 3650 0fc4 08       		.uleb128 0x8
 3651 0fc5 13       		.uleb128 0x13
 3652 0fc6 1C0B0000 		.4byte	.LASF224
 3653 0fca 08       		.byte	0x8
 3654 0fcb 090F     		.2byte	0xf09
 3655 0fcd A00C0000 		.4byte	0xca0
 3656 0fd1 02       		.byte	0x2
 3657 0fd2 23       		.byte	0x23
 3658 0fd3 0C       		.uleb128 0xc
 3659 0fd4 13       		.uleb128 0x13
 3660 0fd5 E80A0000 		.4byte	.LASF225
 3661 0fd9 08       		.byte	0x8
 3662 0fda 0A0F     		.2byte	0xf0a
 3663 0fdc A00C0000 		.4byte	0xca0
 3664 0fe0 02       		.byte	0x2
 3665 0fe1 23       		.byte	0x23
 3666 0fe2 10       		.uleb128 0x10
 3667 0fe3 13       		.uleb128 0x13
 3668 0fe4 C9010000 		.4byte	.LASF226
 3669 0fe8 08       		.byte	0x8
 3670 0fe9 0B0F     		.2byte	0xf0b
 3671 0feb A00C0000 		.4byte	0xca0
 3672 0fef 02       		.byte	0x2
 3673 0ff0 23       		.byte	0x23
 3674 0ff1 14       		.uleb128 0x14
 3675 0ff2 13       		.uleb128 0x13
 3676 0ff3 800A0000 		.4byte	.LASF227
 3677 0ff7 08       		.byte	0x8
 3678 0ff8 0C0F     		.2byte	0xf0c
 3679 0ffa A00C0000 		.4byte	0xca0
 3680 0ffe 02       		.byte	0x2
 3681 0fff 23       		.byte	0x23
 3682 1000 18       		.uleb128 0x18
 3683 1001 13       		.uleb128 0x13
 3684 1002 F50B0000 		.4byte	.LASF228
 3685 1006 08       		.byte	0x8
 3686 1007 0D0F     		.2byte	0xf0d
ARM GAS  /tmp/ccsPeR2V.s 			page 101


 3687 1009 A00C0000 		.4byte	0xca0
 3688 100d 02       		.byte	0x2
 3689 100e 23       		.byte	0x23
 3690 100f 1C       		.uleb128 0x1c
 3691 1010 00       		.byte	0
 3692 1011 05       		.uleb128 0x5
 3693 1012 78030000 		.4byte	.LASF229
 3694 1016 08       		.byte	0x8
 3695 1017 0E0F     		.2byte	0xf0e
 3696 1019 8F0F0000 		.4byte	0xf8f
 3697 101d 1F       		.uleb128 0x1f
 3698 101e 10       		.byte	0x10
 3699 101f 08       		.byte	0x8
 3700 1020 100F     		.2byte	0xf10
 3701 1022 63100000 		.4byte	0x1063
 3702 1026 13       		.uleb128 0x13
 3703 1027 410B0000 		.4byte	.LASF230
 3704 102b 08       		.byte	0x8
 3705 102c 110F     		.2byte	0xf11
 3706 102e A00C0000 		.4byte	0xca0
 3707 1032 02       		.byte	0x2
 3708 1033 23       		.byte	0x23
 3709 1034 00       		.uleb128 0
 3710 1035 13       		.uleb128 0x13
 3711 1036 EC040000 		.4byte	.LASF231
 3712 103a 08       		.byte	0x8
 3713 103b 120F     		.2byte	0xf12
 3714 103d A00C0000 		.4byte	0xca0
 3715 1041 02       		.byte	0x2
 3716 1042 23       		.byte	0x23
 3717 1043 04       		.uleb128 0x4
 3718 1044 13       		.uleb128 0x13
 3719 1045 2E0B0000 		.4byte	.LASF232
 3720 1049 08       		.byte	0x8
 3721 104a 130F     		.2byte	0xf13
 3722 104c A00C0000 		.4byte	0xca0
 3723 1050 02       		.byte	0x2
 3724 1051 23       		.byte	0x23
 3725 1052 08       		.uleb128 0x8
 3726 1053 13       		.uleb128 0x13
 3727 1054 CC0A0000 		.4byte	.LASF233
 3728 1058 08       		.byte	0x8
 3729 1059 140F     		.2byte	0xf14
 3730 105b A00C0000 		.4byte	0xca0
 3731 105f 02       		.byte	0x2
 3732 1060 23       		.byte	0x23
 3733 1061 0C       		.uleb128 0xc
 3734 1062 00       		.byte	0
 3735 1063 05       		.uleb128 0x5
 3736 1064 40090000 		.4byte	.LASF234
 3737 1068 08       		.byte	0x8
 3738 1069 150F     		.2byte	0xf15
 3739 106b 1D100000 		.4byte	0x101d
 3740 106f 20       		.uleb128 0x20
 3741 1070 8002     		.2byte	0x280
 3742 1072 08       		.byte	0x8
 3743 1073 170F     		.2byte	0xf17
ARM GAS  /tmp/ccsPeR2V.s 			page 102


 3744 1075 7C130000 		.4byte	0x137c
 3745 1079 13       		.uleb128 0x13
 3746 107a 0C090000 		.4byte	.LASF235
 3747 107e 08       		.byte	0x8
 3748 107f 180F     		.2byte	0xf18
 3749 1081 A00C0000 		.4byte	0xca0
 3750 1085 02       		.byte	0x2
 3751 1086 23       		.byte	0x23
 3752 1087 00       		.uleb128 0
 3753 1088 13       		.uleb128 0x13
 3754 1089 C8020000 		.4byte	.LASF236
 3755 108d 08       		.byte	0x8
 3756 108e 190F     		.2byte	0xf19
 3757 1090 A00C0000 		.4byte	0xca0
 3758 1094 02       		.byte	0x2
 3759 1095 23       		.byte	0x23
 3760 1096 04       		.uleb128 0x4
 3761 1097 13       		.uleb128 0x13
 3762 1098 C40A0000 		.4byte	.LASF237
 3763 109c 08       		.byte	0x8
 3764 109d 1A0F     		.2byte	0xf1a
 3765 109f A00C0000 		.4byte	0xca0
 3766 10a3 02       		.byte	0x2
 3767 10a4 23       		.byte	0x23
 3768 10a5 08       		.uleb128 0x8
 3769 10a6 13       		.uleb128 0x13
 3770 10a7 EC030000 		.4byte	.LASF238
 3771 10ab 08       		.byte	0x8
 3772 10ac 1B0F     		.2byte	0xf1b
 3773 10ae A50C0000 		.4byte	0xca5
 3774 10b2 02       		.byte	0x2
 3775 10b3 23       		.byte	0x23
 3776 10b4 0C       		.uleb128 0xc
 3777 10b5 13       		.uleb128 0x13
 3778 10b6 4C000000 		.4byte	.LASF239
 3779 10ba 08       		.byte	0x8
 3780 10bb 1C0F     		.2byte	0xf1c
 3781 10bd A00C0000 		.4byte	0xca0
 3782 10c1 02       		.byte	0x2
 3783 10c2 23       		.byte	0x23
 3784 10c3 10       		.uleb128 0x10
 3785 10c4 13       		.uleb128 0x13
 3786 10c5 16060000 		.4byte	.LASF240
 3787 10c9 08       		.byte	0x8
 3788 10ca 1D0F     		.2byte	0xf1d
 3789 10cc A00C0000 		.4byte	0xca0
 3790 10d0 02       		.byte	0x2
 3791 10d1 23       		.byte	0x23
 3792 10d2 14       		.uleb128 0x14
 3793 10d3 13       		.uleb128 0x13
 3794 10d4 B6030000 		.4byte	.LASF241
 3795 10d8 08       		.byte	0x8
 3796 10d9 1E0F     		.2byte	0xf1e
 3797 10db A50C0000 		.4byte	0xca5
 3798 10df 02       		.byte	0x2
 3799 10e0 23       		.byte	0x23
 3800 10e1 18       		.uleb128 0x18
ARM GAS  /tmp/ccsPeR2V.s 			page 103


 3801 10e2 13       		.uleb128 0x13
 3802 10e3 8E060000 		.4byte	.LASF242
 3803 10e7 08       		.byte	0x8
 3804 10e8 1F0F     		.2byte	0xf1f
 3805 10ea A50C0000 		.4byte	0xca5
 3806 10ee 02       		.byte	0x2
 3807 10ef 23       		.byte	0x23
 3808 10f0 1C       		.uleb128 0x1c
 3809 10f1 13       		.uleb128 0x13
 3810 10f2 2B080000 		.4byte	.LASF243
 3811 10f6 08       		.byte	0x8
 3812 10f7 200F     		.2byte	0xf20
 3813 10f9 A00C0000 		.4byte	0xca0
 3814 10fd 02       		.byte	0x2
 3815 10fe 23       		.byte	0x23
 3816 10ff 20       		.uleb128 0x20
 3817 1100 13       		.uleb128 0x13
 3818 1101 61090000 		.4byte	.LASF192
 3819 1105 08       		.byte	0x8
 3820 1106 210F     		.2byte	0xf21
 3821 1108 7C130000 		.4byte	0x137c
 3822 110c 02       		.byte	0x2
 3823 110d 23       		.byte	0x23
 3824 110e 24       		.uleb128 0x24
 3825 110f 13       		.uleb128 0x13
 3826 1110 080C0000 		.4byte	.LASF244
 3827 1114 08       		.byte	0x8
 3828 1115 220F     		.2byte	0xf22
 3829 1117 A00C0000 		.4byte	0xca0
 3830 111b 02       		.byte	0x2
 3831 111c 23       		.byte	0x23
 3832 111d 28       		.uleb128 0x28
 3833 111e 13       		.uleb128 0x13
 3834 111f A5050000 		.4byte	.LASF245
 3835 1123 08       		.byte	0x8
 3836 1124 230F     		.2byte	0xf23
 3837 1126 A00C0000 		.4byte	0xca0
 3838 112a 02       		.byte	0x2
 3839 112b 23       		.byte	0x23
 3840 112c 2C       		.uleb128 0x2c
 3841 112d 13       		.uleb128 0x13
 3842 112e 9B030000 		.4byte	.LASF246
 3843 1132 08       		.byte	0x8
 3844 1133 240F     		.2byte	0xf24
 3845 1135 A00C0000 		.4byte	0xca0
 3846 1139 02       		.byte	0x2
 3847 113a 23       		.byte	0x23
 3848 113b 30       		.uleb128 0x30
 3849 113c 13       		.uleb128 0x13
 3850 113d 48080000 		.4byte	.LASF247
 3851 1141 08       		.byte	0x8
 3852 1142 250F     		.2byte	0xf25
 3853 1144 A00C0000 		.4byte	0xca0
 3854 1148 02       		.byte	0x2
 3855 1149 23       		.byte	0x23
 3856 114a 34       		.uleb128 0x34
 3857 114b 13       		.uleb128 0x13
ARM GAS  /tmp/ccsPeR2V.s 			page 104


 3858 114c 1F060000 		.4byte	.LASF248
 3859 1150 08       		.byte	0x8
 3860 1151 260F     		.2byte	0xf26
 3861 1153 A00C0000 		.4byte	0xca0
 3862 1157 02       		.byte	0x2
 3863 1158 23       		.byte	0x23
 3864 1159 38       		.uleb128 0x38
 3865 115a 13       		.uleb128 0x13
 3866 115b BF030000 		.4byte	.LASF249
 3867 115f 08       		.byte	0x8
 3868 1160 270F     		.2byte	0xf27
 3869 1162 A50C0000 		.4byte	0xca5
 3870 1166 02       		.byte	0x2
 3871 1167 23       		.byte	0x23
 3872 1168 3C       		.uleb128 0x3c
 3873 1169 13       		.uleb128 0x13
 3874 116a 97060000 		.4byte	.LASF250
 3875 116e 08       		.byte	0x8
 3876 116f 280F     		.2byte	0xf28
 3877 1171 A50C0000 		.4byte	0xca5
 3878 1175 02       		.byte	0x2
 3879 1176 23       		.byte	0x23
 3880 1177 40       		.uleb128 0x40
 3881 1178 13       		.uleb128 0x13
 3882 1179 68030000 		.4byte	.LASF251
 3883 117d 08       		.byte	0x8
 3884 117e 290F     		.2byte	0xf29
 3885 1180 A00C0000 		.4byte	0xca0
 3886 1184 02       		.byte	0x2
 3887 1185 23       		.byte	0x23
 3888 1186 44       		.uleb128 0x44
 3889 1187 13       		.uleb128 0x13
 3890 1188 66020000 		.4byte	.LASF252
 3891 118c 08       		.byte	0x8
 3892 118d 2A0F     		.2byte	0xf2a
 3893 118f A00C0000 		.4byte	0xca0
 3894 1193 02       		.byte	0x2
 3895 1194 23       		.byte	0x23
 3896 1195 48       		.uleb128 0x48
 3897 1196 13       		.uleb128 0x13
 3898 1197 E4040000 		.4byte	.LASF253
 3899 119b 08       		.byte	0x8
 3900 119c 2B0F     		.2byte	0xf2b
 3901 119e A00C0000 		.4byte	0xca0
 3902 11a2 02       		.byte	0x2
 3903 11a3 23       		.byte	0x23
 3904 11a4 4C       		.uleb128 0x4c
 3905 11a5 13       		.uleb128 0x13
 3906 11a6 BC040000 		.4byte	.LASF254
 3907 11aa 08       		.byte	0x8
 3908 11ab 2C0F     		.2byte	0xf2c
 3909 11ad A00C0000 		.4byte	0xca0
 3910 11b1 02       		.byte	0x2
 3911 11b2 23       		.byte	0x23
 3912 11b3 50       		.uleb128 0x50
 3913 11b4 13       		.uleb128 0x13
 3914 11b5 E6070000 		.4byte	.LASF255
ARM GAS  /tmp/ccsPeR2V.s 			page 105


 3915 11b9 08       		.byte	0x8
 3916 11ba 2D0F     		.2byte	0xf2d
 3917 11bc A00C0000 		.4byte	0xca0
 3918 11c0 02       		.byte	0x2
 3919 11c1 23       		.byte	0x23
 3920 11c2 54       		.uleb128 0x54
 3921 11c3 13       		.uleb128 0x13
 3922 11c4 42070000 		.4byte	.LASF256
 3923 11c8 08       		.byte	0x8
 3924 11c9 2E0F     		.2byte	0xf2e
 3925 11cb A00C0000 		.4byte	0xca0
 3926 11cf 02       		.byte	0x2
 3927 11d0 23       		.byte	0x23
 3928 11d1 58       		.uleb128 0x58
 3929 11d2 13       		.uleb128 0x13
 3930 11d3 B4040000 		.4byte	.LASF257
 3931 11d7 08       		.byte	0x8
 3932 11d8 2F0F     		.2byte	0xf2f
 3933 11da A00C0000 		.4byte	0xca0
 3934 11de 02       		.byte	0x2
 3935 11df 23       		.byte	0x23
 3936 11e0 5C       		.uleb128 0x5c
 3937 11e1 13       		.uleb128 0x13
 3938 11e2 7E070000 		.4byte	.LASF258
 3939 11e6 08       		.byte	0x8
 3940 11e7 300F     		.2byte	0xf30
 3941 11e9 A50C0000 		.4byte	0xca5
 3942 11ed 02       		.byte	0x2
 3943 11ee 23       		.byte	0x23
 3944 11ef 60       		.uleb128 0x60
 3945 11f0 13       		.uleb128 0x13
 3946 11f1 D9000000 		.4byte	.LASF259
 3947 11f5 08       		.byte	0x8
 3948 11f6 310F     		.2byte	0xf31
 3949 11f8 A00C0000 		.4byte	0xca0
 3950 11fc 02       		.byte	0x2
 3951 11fd 23       		.byte	0x23
 3952 11fe 64       		.uleb128 0x64
 3953 11ff 13       		.uleb128 0x13
 3954 1200 EE020000 		.4byte	.LASF260
 3955 1204 08       		.byte	0x8
 3956 1205 320F     		.2byte	0xf32
 3957 1207 A00C0000 		.4byte	0xca0
 3958 120b 02       		.byte	0x2
 3959 120c 23       		.byte	0x23
 3960 120d 68       		.uleb128 0x68
 3961 120e 13       		.uleb128 0x13
 3962 120f C0020000 		.4byte	.LASF261
 3963 1213 08       		.byte	0x8
 3964 1214 330F     		.2byte	0xf33
 3965 1216 A00C0000 		.4byte	0xca0
 3966 121a 02       		.byte	0x2
 3967 121b 23       		.byte	0x23
 3968 121c 6C       		.uleb128 0x6c
 3969 121d 13       		.uleb128 0x13
 3970 121e 6B090000 		.4byte	.LASF198
 3971 1222 08       		.byte	0x8
ARM GAS  /tmp/ccsPeR2V.s 			page 106


 3972 1223 340F     		.2byte	0xf34
 3973 1225 81130000 		.4byte	0x1381
 3974 1229 02       		.byte	0x2
 3975 122a 23       		.byte	0x23
 3976 122b 70       		.uleb128 0x70
 3977 122c 13       		.uleb128 0x13
 3978 122d C3080000 		.4byte	.LASF262
 3979 1231 08       		.byte	0x8
 3980 1232 350F     		.2byte	0xf35
 3981 1234 86130000 		.4byte	0x1386
 3982 1238 02       		.byte	0x2
 3983 1239 23       		.byte	0x23
 3984 123a 7C       		.uleb128 0x7c
 3985 123b 13       		.uleb128 0x13
 3986 123c E8000000 		.4byte	.LASF205
 3987 1240 08       		.byte	0x8
 3988 1241 360F     		.2byte	0xf36
 3989 1243 8B130000 		.4byte	0x138b
 3990 1247 03       		.byte	0x3
 3991 1248 23       		.byte	0x23
 3992 1249 8401     		.uleb128 0x84
 3993 124b 13       		.uleb128 0x13
 3994 124c 81020000 		.4byte	.LASF263
 3995 1250 08       		.byte	0x8
 3996 1251 370F     		.2byte	0xf37
 3997 1253 A00C0000 		.4byte	0xca0
 3998 1257 03       		.byte	0x3
 3999 1258 23       		.byte	0x23
 4000 1259 B001     		.uleb128 0xb0
 4001 125b 13       		.uleb128 0x13
 4002 125c 7A090000 		.4byte	.LASF207
 4003 1260 08       		.byte	0x8
 4004 1261 380F     		.2byte	0xf38
 4005 1263 90130000 		.4byte	0x1390
 4006 1267 03       		.byte	0x3
 4007 1268 23       		.byte	0x23
 4008 1269 B401     		.uleb128 0xb4
 4009 126b 13       		.uleb128 0x13
 4010 126c 4D060000 		.4byte	.LASF264
 4011 1270 08       		.byte	0x8
 4012 1271 390F     		.2byte	0xf39
 4013 1273 A00C0000 		.4byte	0xca0
 4014 1277 03       		.byte	0x3
 4015 1278 23       		.byte	0x23
 4016 1279 E401     		.uleb128 0xe4
 4017 127b 13       		.uleb128 0x13
 4018 127c 71000000 		.4byte	.LASF265
 4019 1280 08       		.byte	0x8
 4020 1281 3A0F     		.2byte	0xf3a
 4021 1283 A50C0000 		.4byte	0xca5
 4022 1287 03       		.byte	0x3
 4023 1288 23       		.byte	0x23
 4024 1289 E801     		.uleb128 0xe8
 4025 128b 13       		.uleb128 0x13
 4026 128c 84090000 		.4byte	.LASF210
 4027 1290 08       		.byte	0x8
 4028 1291 3B0F     		.2byte	0xf3b
ARM GAS  /tmp/ccsPeR2V.s 			page 107


 4029 1293 95130000 		.4byte	0x1395
 4030 1297 03       		.byte	0x3
 4031 1298 23       		.byte	0x23
 4032 1299 EC01     		.uleb128 0xec
 4033 129b 13       		.uleb128 0x13
 4034 129c 6C0B0000 		.4byte	.LASF266
 4035 12a0 08       		.byte	0x8
 4036 12a1 3C0F     		.2byte	0xf3c
 4037 12a3 A00C0000 		.4byte	0xca0
 4038 12a7 03       		.byte	0x3
 4039 12a8 23       		.byte	0x23
 4040 12a9 8002     		.uleb128 0x100
 4041 12ab 13       		.uleb128 0x13
 4042 12ac FC050000 		.4byte	.LASF267
 4043 12b0 08       		.byte	0x8
 4044 12b1 3D0F     		.2byte	0xf3d
 4045 12b3 A00C0000 		.4byte	0xca0
 4046 12b7 03       		.byte	0x3
 4047 12b8 23       		.byte	0x23
 4048 12b9 8402     		.uleb128 0x104
 4049 12bb 13       		.uleb128 0x13
 4050 12bc D6030000 		.4byte	.LASF268
 4051 12c0 08       		.byte	0x8
 4052 12c1 3E0F     		.2byte	0xf3e
 4053 12c3 A00C0000 		.4byte	0xca0
 4054 12c7 03       		.byte	0x3
 4055 12c8 23       		.byte	0x23
 4056 12c9 8802     		.uleb128 0x108
 4057 12cb 13       		.uleb128 0x13
 4058 12cc C5000000 		.4byte	.LASF269
 4059 12d0 08       		.byte	0x8
 4060 12d1 3F0F     		.2byte	0xf3f
 4061 12d3 A00C0000 		.4byte	0xca0
 4062 12d7 03       		.byte	0x3
 4063 12d8 23       		.byte	0x23
 4064 12d9 8C02     		.uleb128 0x10c
 4065 12db 13       		.uleb128 0x13
 4066 12dc 21000000 		.4byte	.LASF270
 4067 12e0 08       		.byte	0x8
 4068 12e1 400F     		.2byte	0xf40
 4069 12e3 A00C0000 		.4byte	0xca0
 4070 12e7 03       		.byte	0x3
 4071 12e8 23       		.byte	0x23
 4072 12e9 9002     		.uleb128 0x110
 4073 12eb 13       		.uleb128 0x13
 4074 12ec 33010000 		.4byte	.LASF271
 4075 12f0 08       		.byte	0x8
 4076 12f1 410F     		.2byte	0xf41
 4077 12f3 A00C0000 		.4byte	0xca0
 4078 12f7 03       		.byte	0x3
 4079 12f8 23       		.byte	0x23
 4080 12f9 9402     		.uleb128 0x114
 4081 12fb 13       		.uleb128 0x13
 4082 12fc 5F030000 		.4byte	.LASF272
 4083 1300 08       		.byte	0x8
 4084 1301 420F     		.2byte	0xf42
 4085 1303 A00C0000 		.4byte	0xca0
ARM GAS  /tmp/ccsPeR2V.s 			page 108


 4086 1307 03       		.byte	0x3
 4087 1308 23       		.byte	0x23
 4088 1309 9802     		.uleb128 0x118
 4089 130b 13       		.uleb128 0x13
 4090 130c 31050000 		.4byte	.LASF273
 4091 1310 08       		.byte	0x8
 4092 1311 430F     		.2byte	0xf43
 4093 1313 A00C0000 		.4byte	0xca0
 4094 1317 03       		.byte	0x3
 4095 1318 23       		.byte	0x23
 4096 1319 9C02     		.uleb128 0x11c
 4097 131b 13       		.uleb128 0x13
 4098 131c B8090000 		.4byte	.LASF274
 4099 1320 08       		.byte	0x8
 4100 1321 440F     		.2byte	0xf44
 4101 1323 A00C0000 		.4byte	0xca0
 4102 1327 03       		.byte	0x3
 4103 1328 23       		.byte	0x23
 4104 1329 A002     		.uleb128 0x120
 4105 132b 13       		.uleb128 0x13
 4106 132c AD030000 		.4byte	.LASF275
 4107 1330 08       		.byte	0x8
 4108 1331 450F     		.2byte	0xf45
 4109 1333 A50C0000 		.4byte	0xca5
 4110 1337 03       		.byte	0x3
 4111 1338 23       		.byte	0x23
 4112 1339 A402     		.uleb128 0x124
 4113 133b 13       		.uleb128 0x13
 4114 133c 8E090000 		.4byte	.LASF276
 4115 1340 08       		.byte	0x8
 4116 1341 460F     		.2byte	0xf46
 4117 1343 9A130000 		.4byte	0x139a
 4118 1347 03       		.byte	0x3
 4119 1348 23       		.byte	0x23
 4120 1349 A802     		.uleb128 0x128
 4121 134b 13       		.uleb128 0x13
 4122 134c 0F0A0000 		.4byte	.LASF277
 4123 1350 08       		.byte	0x8
 4124 1351 470F     		.2byte	0xf47
 4125 1353 9F130000 		.4byte	0x139f
 4126 1357 03       		.byte	0x3
 4127 1358 23       		.byte	0x23
 4128 1359 B002     		.uleb128 0x130
 4129 135b 13       		.uleb128 0x13
 4130 135c F2000000 		.4byte	.LASF278
 4131 1360 08       		.byte	0x8
 4132 1361 480F     		.2byte	0xf48
 4133 1363 BF130000 		.4byte	0x13bf
 4134 1367 03       		.byte	0x3
 4135 1368 23       		.byte	0x23
 4136 1369 B003     		.uleb128 0x1b0
 4137 136b 13       		.uleb128 0x13
 4138 136c 56060000 		.4byte	.LASF279
 4139 1370 08       		.byte	0x8
 4140 1371 490F     		.2byte	0xf49
 4141 1373 C4130000 		.4byte	0x13c4
 4142 1377 03       		.byte	0x3
ARM GAS  /tmp/ccsPeR2V.s 			page 109


 4143 1378 23       		.byte	0x23
 4144 1379 8004     		.uleb128 0x200
 4145 137b 00       		.byte	0
 4146 137c 19       		.uleb128 0x19
 4147 137d E00E0000 		.4byte	0xee0
 4148 1381 19       		.uleb128 0x19
 4149 1382 7F0F0000 		.4byte	0xf7f
 4150 1386 19       		.uleb128 0x19
 4151 1387 F50E0000 		.4byte	0xef5
 4152 138b 19       		.uleb128 0x19
 4153 138c 6F0F0000 		.4byte	0xf6f
 4154 1390 19       		.uleb128 0x19
 4155 1391 5F0F0000 		.4byte	0xf5f
 4156 1395 19       		.uleb128 0x19
 4157 1396 2E0F0000 		.4byte	0xf2e
 4158 139a 19       		.uleb128 0x19
 4159 139b F50E0000 		.4byte	0xef5
 4160 139f 08       		.uleb128 0x8
 4161 13a0 63100000 		.4byte	0x1063
 4162 13a4 AF130000 		.4byte	0x13af
 4163 13a8 09       		.uleb128 0x9
 4164 13a9 4C000000 		.4byte	0x4c
 4165 13ad 07       		.byte	0x7
 4166 13ae 00       		.byte	0
 4167 13af 08       		.uleb128 0x8
 4168 13b0 01010000 		.4byte	0x101
 4169 13b4 BF130000 		.4byte	0x13bf
 4170 13b8 09       		.uleb128 0x9
 4171 13b9 4C000000 		.4byte	0x4c
 4172 13bd 13       		.byte	0x13
 4173 13be 00       		.byte	0
 4174 13bf 19       		.uleb128 0x19
 4175 13c0 AF130000 		.4byte	0x13af
 4176 13c4 08       		.uleb128 0x8
 4177 13c5 11100000 		.4byte	0x1011
 4178 13c9 D4130000 		.4byte	0x13d4
 4179 13cd 09       		.uleb128 0x9
 4180 13ce 4C000000 		.4byte	0x4c
 4181 13d2 03       		.byte	0x3
 4182 13d3 00       		.byte	0
 4183 13d4 1E       		.uleb128 0x1e
 4184 13d5 50776D00 		.ascii	"Pwm\000"
 4185 13d9 08       		.byte	0x8
 4186 13da 4A0F     		.2byte	0xf4a
 4187 13dc 6F100000 		.4byte	0x106f
 4188 13e0 1F       		.uleb128 0x1f
 4189 13e1 40       		.byte	0x40
 4190 13e2 08       		.byte	0x8
 4191 13e3 4B15     		.2byte	0x154b
 4192 13e5 AD140000 		.4byte	0x14ad
 4193 13e9 13       		.uleb128 0x13
 4194 13ea 95010000 		.4byte	.LASF280
 4195 13ee 08       		.byte	0x8
 4196 13ef 4C15     		.2byte	0x154c
 4197 13f1 A00C0000 		.4byte	0xca0
 4198 13f5 02       		.byte	0x2
 4199 13f6 23       		.byte	0x23
ARM GAS  /tmp/ccsPeR2V.s 			page 110


 4200 13f7 00       		.uleb128 0
 4201 13f8 13       		.uleb128 0x13
 4202 13f9 D3050000 		.4byte	.LASF281
 4203 13fd 08       		.byte	0x8
 4204 13fe 4D15     		.2byte	0x154d
 4205 1400 A00C0000 		.4byte	0xca0
 4206 1404 02       		.byte	0x2
 4207 1405 23       		.byte	0x23
 4208 1406 04       		.uleb128 0x4
 4209 1407 13       		.uleb128 0x13
 4210 1408 5B0B0000 		.4byte	.LASF282
 4211 140c 08       		.byte	0x8
 4212 140d 4E15     		.2byte	0x154e
 4213 140f A00C0000 		.4byte	0xca0
 4214 1413 02       		.byte	0x2
 4215 1414 23       		.byte	0x23
 4216 1415 08       		.uleb128 0x8
 4217 1416 13       		.uleb128 0x13
 4218 1417 61090000 		.4byte	.LASF192
 4219 141b 08       		.byte	0x8
 4220 141c 4F15     		.2byte	0x154f
 4221 141e AD140000 		.4byte	0x14ad
 4222 1422 02       		.byte	0x2
 4223 1423 23       		.byte	0x23
 4224 1424 0C       		.uleb128 0xc
 4225 1425 13       		.uleb128 0x13
 4226 1426 B2090000 		.4byte	.LASF283
 4227 142a 08       		.byte	0x8
 4228 142b 5015     		.2byte	0x1550
 4229 142d A00C0000 		.4byte	0xca0
 4230 1431 02       		.byte	0x2
 4231 1432 23       		.byte	0x23
 4232 1433 10       		.uleb128 0x10
 4233 1434 13       		.uleb128 0x13
 4234 1435 17030000 		.4byte	.LASF284
 4235 1439 08       		.byte	0x8
 4236 143a 5115     		.2byte	0x1551
 4237 143c A00C0000 		.4byte	0xca0
 4238 1440 02       		.byte	0x2
 4239 1441 23       		.byte	0x23
 4240 1442 14       		.uleb128 0x14
 4241 1443 13       		.uleb128 0x13
 4242 1444 1D030000 		.4byte	.LASF285
 4243 1448 08       		.byte	0x8
 4244 1449 5215     		.2byte	0x1552
 4245 144b A00C0000 		.4byte	0xca0
 4246 144f 02       		.byte	0x2
 4247 1450 23       		.byte	0x23
 4248 1451 18       		.uleb128 0x18
 4249 1452 13       		.uleb128 0x13
 4250 1453 23030000 		.4byte	.LASF286
 4251 1457 08       		.byte	0x8
 4252 1458 5315     		.2byte	0x1553
 4253 145a A00C0000 		.4byte	0xca0
 4254 145e 02       		.byte	0x2
 4255 145f 23       		.byte	0x23
 4256 1460 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccsPeR2V.s 			page 111


 4257 1461 13       		.uleb128 0x13
 4258 1462 A7030000 		.4byte	.LASF287
 4259 1466 08       		.byte	0x8
 4260 1467 5415     		.2byte	0x1554
 4261 1469 A00C0000 		.4byte	0xca0
 4262 146d 02       		.byte	0x2
 4263 146e 23       		.byte	0x23
 4264 146f 20       		.uleb128 0x20
 4265 1470 13       		.uleb128 0x13
 4266 1471 0F050000 		.4byte	.LASF288
 4267 1475 08       		.byte	0x8
 4268 1476 5515     		.2byte	0x1555
 4269 1478 A00C0000 		.4byte	0xca0
 4270 147c 02       		.byte	0x2
 4271 147d 23       		.byte	0x23
 4272 147e 24       		.uleb128 0x24
 4273 147f 13       		.uleb128 0x13
 4274 1480 52040000 		.4byte	.LASF289
 4275 1484 08       		.byte	0x8
 4276 1485 5615     		.2byte	0x1556
 4277 1487 A00C0000 		.4byte	0xca0
 4278 148b 02       		.byte	0x2
 4279 148c 23       		.byte	0x23
 4280 148d 28       		.uleb128 0x28
 4281 148e 13       		.uleb128 0x13
 4282 148f 0D080000 		.4byte	.LASF290
 4283 1493 08       		.byte	0x8
 4284 1494 5715     		.2byte	0x1557
 4285 1496 A00C0000 		.4byte	0xca0
 4286 149a 02       		.byte	0x2
 4287 149b 23       		.byte	0x23
 4288 149c 2C       		.uleb128 0x2c
 4289 149d 13       		.uleb128 0x13
 4290 149e 6B090000 		.4byte	.LASF198
 4291 14a2 08       		.byte	0x8
 4292 14a3 5815     		.2byte	0x1558
 4293 14a5 B2140000 		.4byte	0x14b2
 4294 14a9 02       		.byte	0x2
 4295 14aa 23       		.byte	0x23
 4296 14ab 30       		.uleb128 0x30
 4297 14ac 00       		.byte	0
 4298 14ad 19       		.uleb128 0x19
 4299 14ae E00E0000 		.4byte	0xee0
 4300 14b2 19       		.uleb128 0x19
 4301 14b3 4F0F0000 		.4byte	0xf4f
 4302 14b7 05       		.uleb128 0x5
 4303 14b8 77020000 		.4byte	.LASF291
 4304 14bc 08       		.byte	0x8
 4305 14bd 5915     		.2byte	0x1559
 4306 14bf E0130000 		.4byte	0x13e0
 4307 14c3 1F       		.uleb128 0x1f
 4308 14c4 E8       		.byte	0xe8
 4309 14c5 08       		.byte	0x8
 4310 14c6 5B15     		.2byte	0x155b
 4311 14c8 6C150000 		.4byte	0x156c
 4312 14cc 13       		.uleb128 0x13
 4313 14cd 42010000 		.4byte	.LASF292
ARM GAS  /tmp/ccsPeR2V.s 			page 112


 4314 14d1 08       		.byte	0x8
 4315 14d2 5C15     		.2byte	0x155c
 4316 14d4 6C150000 		.4byte	0x156c
 4317 14d8 02       		.byte	0x2
 4318 14d9 23       		.byte	0x23
 4319 14da 00       		.uleb128 0
 4320 14db 13       		.uleb128 0x13
 4321 14dc BC0B0000 		.4byte	.LASF293
 4322 14e0 08       		.byte	0x8
 4323 14e1 5D15     		.2byte	0x155d
 4324 14e3 A00C0000 		.4byte	0xca0
 4325 14e7 03       		.byte	0x3
 4326 14e8 23       		.byte	0x23
 4327 14e9 C001     		.uleb128 0xc0
 4328 14eb 13       		.uleb128 0x13
 4329 14ec 43030000 		.4byte	.LASF294
 4330 14f0 08       		.byte	0x8
 4331 14f1 5E15     		.2byte	0x155e
 4332 14f3 A00C0000 		.4byte	0xca0
 4333 14f7 03       		.byte	0x3
 4334 14f8 23       		.byte	0x23
 4335 14f9 C401     		.uleb128 0xc4
 4336 14fb 13       		.uleb128 0x13
 4337 14fc 570A0000 		.4byte	.LASF295
 4338 1500 08       		.byte	0x8
 4339 1501 5F15     		.2byte	0x155f
 4340 1503 A00C0000 		.4byte	0xca0
 4341 1507 03       		.byte	0x3
 4342 1508 23       		.byte	0x23
 4343 1509 C801     		.uleb128 0xc8
 4344 150b 13       		.uleb128 0x13
 4345 150c 070A0000 		.4byte	.LASF296
 4346 1510 08       		.byte	0x8
 4347 1511 6015     		.2byte	0x1560
 4348 1513 A00C0000 		.4byte	0xca0
 4349 1517 03       		.byte	0x3
 4350 1518 23       		.byte	0x23
 4351 1519 CC01     		.uleb128 0xcc
 4352 151b 13       		.uleb128 0x13
 4353 151c 22010000 		.4byte	.LASF297
 4354 1520 08       		.byte	0x8
 4355 1521 6115     		.2byte	0x1561
 4356 1523 A50C0000 		.4byte	0xca5
 4357 1527 03       		.byte	0x3
 4358 1528 23       		.byte	0x23
 4359 1529 D001     		.uleb128 0xd0
 4360 152b 13       		.uleb128 0x13
 4361 152c 70030000 		.4byte	.LASF298
 4362 1530 08       		.byte	0x8
 4363 1531 6215     		.2byte	0x1562
 4364 1533 A50C0000 		.4byte	0xca5
 4365 1537 03       		.byte	0x3
 4366 1538 23       		.byte	0x23
 4367 1539 D401     		.uleb128 0xd4
 4368 153b 13       		.uleb128 0x13
 4369 153c E1000000 		.4byte	.LASF299
 4370 1540 08       		.byte	0x8
ARM GAS  /tmp/ccsPeR2V.s 			page 113


 4371 1541 6315     		.2byte	0x1563
 4372 1543 A00C0000 		.4byte	0xca0
 4373 1547 03       		.byte	0x3
 4374 1548 23       		.byte	0x23
 4375 1549 D801     		.uleb128 0xd8
 4376 154b 13       		.uleb128 0x13
 4377 154c 61090000 		.4byte	.LASF192
 4378 1550 08       		.byte	0x8
 4379 1551 6415     		.2byte	0x1564
 4380 1553 7C150000 		.4byte	0x157c
 4381 1557 03       		.byte	0x3
 4382 1558 23       		.byte	0x23
 4383 1559 DC01     		.uleb128 0xdc
 4384 155b 13       		.uleb128 0x13
 4385 155c BC0A0000 		.4byte	.LASF300
 4386 1560 08       		.byte	0x8
 4387 1561 6515     		.2byte	0x1565
 4388 1563 A00C0000 		.4byte	0xca0
 4389 1567 03       		.byte	0x3
 4390 1568 23       		.byte	0x23
 4391 1569 E401     		.uleb128 0xe4
 4392 156b 00       		.byte	0
 4393 156c 08       		.uleb128 0x8
 4394 156d B7140000 		.4byte	0x14b7
 4395 1571 7C150000 		.4byte	0x157c
 4396 1575 09       		.uleb128 0x9
 4397 1576 4C000000 		.4byte	0x4c
 4398 157a 02       		.byte	0x2
 4399 157b 00       		.byte	0
 4400 157c 19       		.uleb128 0x19
 4401 157d F50E0000 		.4byte	0xef5
 4402 1581 1E       		.uleb128 0x1e
 4403 1582 546300   		.ascii	"Tc\000"
 4404 1585 08       		.byte	0x8
 4405 1586 6615     		.2byte	0x1566
 4406 1588 C3140000 		.4byte	0x14c3
 4407 158c 1F       		.uleb128 0x1f
 4408 158d 0C       		.byte	0xc
 4409 158e 08       		.byte	0x8
 4410 158f 7C19     		.2byte	0x197c
 4411 1591 C3150000 		.4byte	0x15c3
 4412 1595 13       		.uleb128 0x13
 4413 1596 F6020000 		.4byte	.LASF301
 4414 159a 08       		.byte	0x8
 4415 159b 7D19     		.2byte	0x197d
 4416 159d A00C0000 		.4byte	0xca0
 4417 15a1 02       		.byte	0x2
 4418 15a2 23       		.byte	0x23
 4419 15a3 00       		.uleb128 0
 4420 15a4 13       		.uleb128 0x13
 4421 15a5 14070000 		.4byte	.LASF302
 4422 15a9 08       		.byte	0x8
 4423 15aa 7E19     		.2byte	0x197e
 4424 15ac A00C0000 		.4byte	0xca0
 4425 15b0 02       		.byte	0x2
 4426 15b1 23       		.byte	0x23
 4427 15b2 04       		.uleb128 0x4
ARM GAS  /tmp/ccsPeR2V.s 			page 114


 4428 15b3 13       		.uleb128 0x13
 4429 15b4 A1090000 		.4byte	.LASF303
 4430 15b8 08       		.byte	0x8
 4431 15b9 7F19     		.2byte	0x197f
 4432 15bb A50C0000 		.4byte	0xca5
 4433 15bf 02       		.byte	0x2
 4434 15c0 23       		.byte	0x23
 4435 15c1 08       		.uleb128 0x8
 4436 15c2 00       		.byte	0
 4437 15c3 1E       		.uleb128 0x1e
 4438 15c4 57647400 		.ascii	"Wdt\000"
 4439 15c8 08       		.byte	0x8
 4440 15c9 8019     		.2byte	0x1980
 4441 15cb 8C150000 		.4byte	0x158c
 4442 15cf 04       		.uleb128 0x4
 4443 15d0 8B050000 		.4byte	.LASF304
 4444 15d4 09       		.byte	0x9
 4445 15d5 10       		.byte	0x10
 4446 15d6 AE080000 		.4byte	0x8ae
 4447 15da 21       		.uleb128 0x21
 4448 15db 01       		.byte	0x1
 4449 15dc 09       		.byte	0x9
 4450 15dd 12       		.byte	0x12
 4451 15de FB150000 		.4byte	0x15fb
 4452 15e2 22       		.uleb128 0x22
 4453 15e3 4F464600 		.ascii	"OFF\000"
 4454 15e7 00       		.sleb128 0
 4455 15e8 1B       		.uleb128 0x1b
 4456 15e9 96070000 		.4byte	.LASF305
 4457 15ed 01       		.sleb128 1
 4458 15ee 1B       		.uleb128 0x1b
 4459 15ef 90010000 		.4byte	.LASF306
 4460 15f3 02       		.sleb128 2
 4461 15f4 1B       		.uleb128 0x1b
 4462 15f5 DE060000 		.4byte	.LASF307
 4463 15f9 03       		.sleb128 3
 4464 15fa 00       		.byte	0
 4465 15fb 04       		.uleb128 0x4
 4466 15fc 83060000 		.4byte	.LASF308
 4467 1600 09       		.byte	0x9
 4468 1601 12       		.byte	0x12
 4469 1602 DA150000 		.4byte	0x15da
 4470 1606 0D       		.uleb128 0xd
 4471 1607 D5020000 		.4byte	.LASF309
 4472 160b 2C       		.byte	0x2c
 4473 160c 09       		.byte	0x9
 4474 160d 15       		.byte	0x15
 4475 160e D1160000 		.4byte	0x16d1
 4476 1612 0B       		.uleb128 0xb
 4477 1613 410A0000 		.4byte	.LASF310
 4478 1617 09       		.byte	0x9
 4479 1618 16       		.byte	0x16
 4480 1619 FB150000 		.4byte	0x15fb
 4481 161d 02       		.byte	0x2
 4482 161e 23       		.byte	0x23
 4483 161f 00       		.uleb128 0
 4484 1620 0E       		.uleb128 0xe
ARM GAS  /tmp/ccsPeR2V.s 			page 115


 4485 1621 535000   		.ascii	"SP\000"
 4486 1624 09       		.byte	0x9
 4487 1625 17       		.byte	0x17
 4488 1626 CF150000 		.4byte	0x15cf
 4489 162a 02       		.byte	0x2
 4490 162b 23       		.byte	0x23
 4491 162c 02       		.uleb128 0x2
 4492 162d 0E       		.uleb128 0xe
 4493 162e 72535000 		.ascii	"rSP\000"
 4494 1632 09       		.byte	0x9
 4495 1633 18       		.byte	0x18
 4496 1634 CF150000 		.4byte	0x15cf
 4497 1638 02       		.byte	0x2
 4498 1639 23       		.byte	0x23
 4499 163a 04       		.uleb128 0x4
 4500 163b 0B       		.uleb128 0xb
 4501 163c 89030000 		.4byte	.LASF311
 4502 1640 09       		.byte	0x9
 4503 1641 19       		.byte	0x19
 4504 1642 45000000 		.4byte	0x45
 4505 1646 02       		.byte	0x2
 4506 1647 23       		.byte	0x23
 4507 1648 08       		.uleb128 0x8
 4508 1649 0E       		.uleb128 0xe
 4509 164a 4B7000   		.ascii	"Kp\000"
 4510 164d 09       		.byte	0x9
 4511 164e 1B       		.byte	0x1b
 4512 164f CF150000 		.4byte	0x15cf
 4513 1653 02       		.byte	0x2
 4514 1654 23       		.byte	0x23
 4515 1655 0C       		.uleb128 0xc
 4516 1656 0E       		.uleb128 0xe
 4517 1657 4B6900   		.ascii	"Ki\000"
 4518 165a 09       		.byte	0x9
 4519 165b 1C       		.byte	0x1c
 4520 165c CF150000 		.4byte	0x15cf
 4521 1660 02       		.byte	0x2
 4522 1661 23       		.byte	0x23
 4523 1662 0E       		.uleb128 0xe
 4524 1663 0E       		.uleb128 0xe
 4525 1664 4B6400   		.ascii	"Kd\000"
 4526 1667 09       		.byte	0x9
 4527 1668 1D       		.byte	0x1d
 4528 1669 CF150000 		.4byte	0x15cf
 4529 166d 02       		.byte	0x2
 4530 166e 23       		.byte	0x23
 4531 166f 10       		.uleb128 0x10
 4532 1670 0E       		.uleb128 0xe
 4533 1671 5F6500   		.ascii	"_e\000"
 4534 1674 09       		.byte	0x9
 4535 1675 1F       		.byte	0x1f
 4536 1676 45000000 		.4byte	0x45
 4537 167a 02       		.byte	0x2
 4538 167b 23       		.byte	0x23
 4539 167c 14       		.uleb128 0x14
 4540 167d 0E       		.uleb128 0xe
 4541 167e 5F647800 		.ascii	"_dx\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 116


 4542 1682 09       		.byte	0x9
 4543 1683 20       		.byte	0x20
 4544 1684 45000000 		.4byte	0x45
 4545 1688 02       		.byte	0x2
 4546 1689 23       		.byte	0x23
 4547 168a 18       		.uleb128 0x18
 4548 168b 0E       		.uleb128 0xe
 4549 168c 5F646500 		.ascii	"_de\000"
 4550 1690 09       		.byte	0x9
 4551 1691 21       		.byte	0x21
 4552 1692 45000000 		.4byte	0x45
 4553 1696 02       		.byte	0x2
 4554 1697 23       		.byte	0x23
 4555 1698 1C       		.uleb128 0x1c
 4556 1699 0B       		.uleb128 0xb
 4557 169a D9060000 		.4byte	.LASF312
 4558 169e 09       		.byte	0x9
 4559 169f 22       		.byte	0x22
 4560 16a0 45000000 		.4byte	0x45
 4561 16a4 02       		.byte	0x2
 4562 16a5 23       		.byte	0x23
 4563 16a6 20       		.uleb128 0x20
 4564 16a7 0E       		.uleb128 0xe
 4565 16a8 5F7800   		.ascii	"_x\000"
 4566 16ab 09       		.byte	0x9
 4567 16ac 23       		.byte	0x23
 4568 16ad CF150000 		.4byte	0x15cf
 4569 16b1 02       		.byte	0x2
 4570 16b2 23       		.byte	0x23
 4571 16b3 24       		.uleb128 0x24
 4572 16b4 0B       		.uleb128 0xb
 4573 16b5 33030000 		.4byte	.LASF313
 4574 16b9 09       		.byte	0x9
 4575 16ba 25       		.byte	0x25
 4576 16bb 37000000 		.4byte	0x37
 4577 16bf 02       		.byte	0x2
 4578 16c0 23       		.byte	0x23
 4579 16c1 26       		.uleb128 0x26
 4580 16c2 0B       		.uleb128 0xb
 4581 16c3 70010000 		.4byte	.LASF314
 4582 16c7 09       		.byte	0x9
 4583 16c8 27       		.byte	0x27
 4584 16c9 15170000 		.4byte	0x1715
 4585 16cd 02       		.byte	0x2
 4586 16ce 23       		.byte	0x23
 4587 16cf 28       		.uleb128 0x28
 4588 16d0 00       		.byte	0
 4589 16d1 0D       		.uleb128 0xd
 4590 16d2 76050000 		.4byte	.LASF315
 4591 16d6 10       		.byte	0x10
 4592 16d7 09       		.byte	0x9
 4593 16d8 2B       		.byte	0x2b
 4594 16d9 15170000 		.4byte	0x1715
 4595 16dd 0B       		.uleb128 0xb
 4596 16de DE030000 		.4byte	.LASF316
 4597 16e2 09       		.byte	0x9
 4598 16e3 2C       		.byte	0x2c
ARM GAS  /tmp/ccsPeR2V.s 			page 117


 4599 16e4 1B170000 		.4byte	0x171b
 4600 16e8 02       		.byte	0x2
 4601 16e9 23       		.byte	0x23
 4602 16ea 00       		.uleb128 0
 4603 16eb 0B       		.uleb128 0xb
 4604 16ec 33030000 		.4byte	.LASF313
 4605 16f0 09       		.byte	0x9
 4606 16f1 2D       		.byte	0x2d
 4607 16f2 45000000 		.4byte	0x45
 4608 16f6 02       		.byte	0x2
 4609 16f7 23       		.byte	0x23
 4610 16f8 04       		.uleb128 0x4
 4611 16f9 0E       		.uleb128 0xe
 4612 16fa 6F6E00   		.ascii	"on\000"
 4613 16fd 09       		.byte	0x9
 4614 16fe 2E       		.byte	0x2e
 4615 16ff 45000000 		.4byte	0x45
 4616 1703 02       		.byte	0x2
 4617 1704 23       		.byte	0x23
 4618 1705 08       		.uleb128 0x8
 4619 1706 0E       		.uleb128 0xe
 4620 1707 6F666600 		.ascii	"off\000"
 4621 170b 09       		.byte	0x9
 4622 170c 2F       		.byte	0x2f
 4623 170d 45000000 		.4byte	0x45
 4624 1711 02       		.byte	0x2
 4625 1712 23       		.byte	0x23
 4626 1713 0C       		.uleb128 0xc
 4627 1714 00       		.byte	0
 4628 1715 0F       		.uleb128 0xf
 4629 1716 04       		.byte	0x4
 4630 1717 D1160000 		.4byte	0x16d1
 4631 171b 0F       		.uleb128 0xf
 4632 171c 04       		.byte	0x4
 4633 171d 45000000 		.4byte	0x45
 4634 1721 23       		.uleb128 0x23
 4635 1722 09000000 		.4byte	.LASF317
 4636 1726 01       		.byte	0x1
 4637 1727 DE05     		.2byte	0x5de
 4638 1729 01       		.byte	0x1
 4639 172a 00000000 		.4byte	.LFB14
 4640 172e 36000000 		.4byte	.LFE14
 4641 1732 00000000 		.4byte	.LLST0
 4642 1736 4A170000 		.4byte	0x174a
 4643 173a 24       		.uleb128 0x24
 4644 173b FA010000 		.4byte	.LASF319
 4645 173f 01       		.byte	0x1
 4646 1740 DE05     		.2byte	0x5de
 4647 1742 D0090000 		.4byte	0x9d0
 4648 1746 02       		.byte	0x2
 4649 1747 91       		.byte	0x91
 4650 1748 77       		.sleb128 -9
 4651 1749 00       		.byte	0
 4652 174a 23       		.uleb128 0x23
 4653 174b 11020000 		.4byte	.LASF318
 4654 174f 01       		.byte	0x1
 4655 1750 3206     		.2byte	0x632
ARM GAS  /tmp/ccsPeR2V.s 			page 118


 4656 1752 01       		.byte	0x1
 4657 1753 00000000 		.4byte	.LFB20
 4658 1757 5C000000 		.4byte	.LFE20
 4659 175b 38000000 		.4byte	.LLST1
 4660 175f 82170000 		.4byte	0x1782
 4661 1763 24       		.uleb128 0x24
 4662 1764 FA010000 		.4byte	.LASF319
 4663 1768 01       		.byte	0x1
 4664 1769 3206     		.2byte	0x632
 4665 176b D0090000 		.4byte	0x9d0
 4666 176f 02       		.byte	0x2
 4667 1770 91       		.byte	0x91
 4668 1771 77       		.sleb128 -9
 4669 1772 24       		.uleb128 0x24
 4670 1773 460A0000 		.4byte	.LASF320
 4671 1777 01       		.byte	0x1
 4672 1778 3206     		.2byte	0x632
 4673 177a B9080000 		.4byte	0x8b9
 4674 177e 02       		.byte	0x2
 4675 177f 91       		.byte	0x91
 4676 1780 70       		.sleb128 -16
 4677 1781 00       		.byte	0
 4678 1782 25       		.uleb128 0x25
 4679 1783 50090000 		.4byte	.LASF340
 4680 1787 02       		.byte	0x2
 4681 1788 1E       		.byte	0x1e
 4682 1789 00000000 		.4byte	.LFB35
 4683 178d 4C020000 		.4byte	.LFE35
 4684 1791 70000000 		.4byte	.LLST2
 4685 1795 C0170000 		.4byte	0x17c0
 4686 1799 26       		.uleb128 0x26
 4687 179a 64697600 		.ascii	"div\000"
 4688 179e 02       		.byte	0x2
 4689 179f 20       		.byte	0x20
 4690 17a0 B9080000 		.4byte	0x8b9
 4691 17a4 02       		.byte	0x2
 4692 17a5 91       		.byte	0x91
 4693 17a6 6C       		.sleb128 -20
 4694 17a7 27       		.uleb128 0x27
 4695 17a8 E3080000 		.4byte	.LASF321
 4696 17ac 02       		.byte	0x2
 4697 17ad 21       		.byte	0x21
 4698 17ae B9080000 		.4byte	0x8b9
 4699 17b2 02       		.byte	0x2
 4700 17b3 91       		.byte	0x91
 4701 17b4 68       		.sleb128 -24
 4702 17b5 28       		.uleb128 0x28
 4703 17b6 DA020000 		.4byte	.LASF341
 4704 17ba D0170000 		.4byte	0x17d0
 4705 17be 01       		.byte	0x1
 4706 17bf 00       		.byte	0
 4707 17c0 08       		.uleb128 0x8
 4708 17c1 F9050000 		.4byte	0x5f9
 4709 17c5 D0170000 		.4byte	0x17d0
 4710 17c9 09       		.uleb128 0x9
 4711 17ca 4C000000 		.4byte	0x4c
 4712 17ce 04       		.byte	0x4
ARM GAS  /tmp/ccsPeR2V.s 			page 119


 4713 17cf 00       		.byte	0
 4714 17d0 17       		.uleb128 0x17
 4715 17d1 C0170000 		.4byte	0x17c0
 4716 17d5 29       		.uleb128 0x29
 4717 17d6 01       		.byte	0x1
 4718 17d7 CD000000 		.4byte	.LASF322
 4719 17db 02       		.byte	0x2
 4720 17dc 59       		.byte	0x59
 4721 17dd 01       		.byte	0x1
 4722 17de 00000000 		.4byte	.LFB36
 4723 17e2 AA010000 		.4byte	.LFE36
 4724 17e6 A8000000 		.4byte	.LLST3
 4725 17ea FD170000 		.4byte	0x17fd
 4726 17ee 2A       		.uleb128 0x2a
 4727 17ef 6E657700 		.ascii	"new\000"
 4728 17f3 02       		.byte	0x2
 4729 17f4 59       		.byte	0x59
 4730 17f5 98080000 		.4byte	0x898
 4731 17f9 02       		.byte	0x2
 4732 17fa 91       		.byte	0x91
 4733 17fb 77       		.sleb128 -9
 4734 17fc 00       		.byte	0
 4735 17fd 2B       		.uleb128 0x2b
 4736 17fe 01       		.byte	0x1
 4737 17ff F5010000 		.4byte	.LASF323
 4738 1803 02       		.byte	0x2
 4739 1804 7A       		.byte	0x7a
 4740 1805 45000000 		.4byte	0x45
 4741 1809 00000000 		.4byte	.LFB37
 4742 180d 46060000 		.4byte	.LFE37
 4743 1811 E0000000 		.4byte	.LLST4
 4744 1815 52180000 		.4byte	0x1852
 4745 1819 27       		.uleb128 0x27
 4746 181a B6050000 		.4byte	.LASF324
 4747 181e 02       		.byte	0x2
 4748 181f 7C       		.byte	0x7c
 4749 1820 52180000 		.4byte	0x1852
 4750 1824 02       		.byte	0x2
 4751 1825 91       		.byte	0x91
 4752 1826 58       		.sleb128 -40
 4753 1827 27       		.uleb128 0x27
 4754 1828 44050000 		.4byte	.LASF325
 4755 182c 02       		.byte	0x2
 4756 182d 7D       		.byte	0x7d
 4757 182e F3050000 		.4byte	0x5f3
 4758 1832 02       		.byte	0x2
 4759 1833 91       		.byte	0x91
 4760 1834 64       		.sleb128 -28
 4761 1835 26       		.uleb128 0x26
 4762 1836 636D6400 		.ascii	"cmd\000"
 4763 183a 02       		.byte	0x2
 4764 183b 7E       		.byte	0x7e
 4765 183c F9050000 		.4byte	0x5f9
 4766 1840 02       		.byte	0x2
 4767 1841 91       		.byte	0x91
 4768 1842 6F       		.sleb128 -17
 4769 1843 27       		.uleb128 0x27
ARM GAS  /tmp/ccsPeR2V.s 			page 120


 4770 1844 6D020000 		.4byte	.LASF326
 4771 1848 02       		.byte	0x2
 4772 1849 7F       		.byte	0x7f
 4773 184a B9080000 		.4byte	0x8b9
 4774 184e 02       		.byte	0x2
 4775 184f 91       		.byte	0x91
 4776 1850 68       		.sleb128 -24
 4777 1851 00       		.byte	0
 4778 1852 08       		.uleb128 0x8
 4779 1853 45000000 		.4byte	0x45
 4780 1857 62180000 		.4byte	0x1862
 4781 185b 09       		.uleb128 0x9
 4782 185c 4C000000 		.4byte	0x4c
 4783 1860 02       		.byte	0x2
 4784 1861 00       		.byte	0
 4785 1862 2C       		.uleb128 0x2c
 4786 1863 01       		.byte	0x1
 4787 1864 8F080000 		.4byte	.LASF342
 4788 1868 02       		.byte	0x2
 4789 1869 0E01     		.2byte	0x10e
 4790 186b 01       		.byte	0x1
 4791 186c 00000000 		.4byte	.LFB38
 4792 1870 2C000000 		.4byte	.LFE38
 4793 1874 18010000 		.4byte	.LLST5
 4794 1878 2D       		.uleb128 0x2d
 4795 1879 01       		.byte	0x1
 4796 187a 6C040000 		.4byte	.LASF327
 4797 187e 02       		.byte	0x2
 4798 187f 1401     		.2byte	0x114
 4799 1881 01       		.byte	0x1
 4800 1882 00000000 		.4byte	.LFB39
 4801 1886 42010000 		.4byte	.LFE39
 4802 188a 44010000 		.4byte	.LLST6
 4803 188e B1180000 		.4byte	0x18b1
 4804 1892 2E       		.uleb128 0x2e
 4805 1893 070B0000 		.4byte	.LASF328
 4806 1897 02       		.byte	0x2
 4807 1898 1601     		.2byte	0x116
 4808 189a B9080000 		.4byte	0x8b9
 4809 189e 02       		.byte	0x2
 4810 189f 91       		.byte	0x91
 4811 18a0 70       		.sleb128 -16
 4812 18a1 2E       		.uleb128 0x2e
 4813 18a2 37000000 		.4byte	.LASF329
 4814 18a6 02       		.byte	0x2
 4815 18a7 1701     		.2byte	0x117
 4816 18a9 B9080000 		.4byte	0x8b9
 4817 18ad 02       		.byte	0x2
 4818 18ae 91       		.byte	0x91
 4819 18af 74       		.sleb128 -12
 4820 18b0 00       		.byte	0
 4821 18b1 2F       		.uleb128 0x2f
 4822 18b2 B3010000 		.4byte	.LASF330
 4823 18b6 06       		.byte	0x6
 4824 18b7 4803     		.2byte	0x348
 4825 18b9 74040000 		.4byte	0x474
 4826 18bd 01       		.byte	0x1
ARM GAS  /tmp/ccsPeR2V.s 			page 121


 4827 18be 01       		.byte	0x1
 4828 18bf 2F       		.uleb128 0x2f
 4829 18c0 C6060000 		.4byte	.LASF331
 4830 18c4 01       		.byte	0x1
 4831 18c5 CE06     		.2byte	0x6ce
 4832 18c7 CD180000 		.4byte	0x18cd
 4833 18cb 01       		.byte	0x1
 4834 18cc 01       		.byte	0x1
 4835 18cd 19       		.uleb128 0x19
 4836 18ce 45000000 		.4byte	0x45
 4837 18d2 08       		.uleb128 0x8
 4838 18d3 CF150000 		.4byte	0x15cf
 4839 18d7 E2180000 		.4byte	0x18e2
 4840 18db 09       		.uleb128 0x9
 4841 18dc 4C000000 		.4byte	0x4c
 4842 18e0 01       		.byte	0x1
 4843 18e1 00       		.byte	0
 4844 18e2 30       		.uleb128 0x30
 4845 18e3 DE030000 		.4byte	.LASF316
 4846 18e7 02       		.byte	0x2
 4847 18e8 16       		.byte	0x16
 4848 18e9 D2180000 		.4byte	0x18d2
 4849 18ed 01       		.byte	0x1
 4850 18ee 01       		.byte	0x1
 4851 18ef 30       		.uleb128 0x30
 4852 18f0 8A000000 		.4byte	.LASF332
 4853 18f4 02       		.byte	0x2
 4854 18f5 17       		.byte	0x17
 4855 18f6 98080000 		.4byte	0x898
 4856 18fa 01       		.byte	0x1
 4857 18fb 01       		.byte	0x1
 4858 18fc 30       		.uleb128 0x30
 4859 18fd C1090000 		.4byte	.LASF333
 4860 1901 02       		.byte	0x2
 4861 1902 19       		.byte	0x19
 4862 1903 06160000 		.4byte	0x1606
 4863 1907 01       		.byte	0x1
 4864 1908 01       		.byte	0x1
 4865 1909 30       		.uleb128 0x30
 4866 190a C8070000 		.4byte	.LASF334
 4867 190e 02       		.byte	0x2
 4868 190f 1A       		.byte	0x1a
 4869 1910 D1160000 		.4byte	0x16d1
 4870 1914 01       		.byte	0x1
 4871 1915 01       		.byte	0x1
 4872 1916 30       		.uleb128 0x30
 4873 1917 90030000 		.4byte	.LASF335
 4874 191b 02       		.byte	0x2
 4875 191c 1B       		.byte	0x1b
 4876 191d D1160000 		.4byte	0x16d1
 4877 1921 01       		.byte	0x1
 4878 1922 01       		.byte	0x1
 4879 1923 30       		.uleb128 0x30
 4880 1924 79010000 		.4byte	.LASF336
 4881 1928 02       		.byte	0x2
 4882 1929 1C       		.byte	0x1c
 4883 192a B9080000 		.4byte	0x8b9
ARM GAS  /tmp/ccsPeR2V.s 			page 122


 4884 192e 01       		.byte	0x1
 4885 192f 01       		.byte	0x1
 4886 1930 2F       		.uleb128 0x2f
 4887 1931 B3010000 		.4byte	.LASF330
 4888 1935 06       		.byte	0x6
 4889 1936 4803     		.2byte	0x348
 4890 1938 74040000 		.4byte	0x474
 4891 193c 01       		.byte	0x1
 4892 193d 01       		.byte	0x1
 4893 193e 2F       		.uleb128 0x2f
 4894 193f C6060000 		.4byte	.LASF331
 4895 1943 01       		.byte	0x1
 4896 1944 CE06     		.2byte	0x6ce
 4897 1946 CD180000 		.4byte	0x18cd
 4898 194a 01       		.byte	0x1
 4899 194b 01       		.byte	0x1
 4900 194c 31       		.uleb128 0x31
 4901 194d DE030000 		.4byte	.LASF316
 4902 1951 02       		.byte	0x2
 4903 1952 16       		.byte	0x16
 4904 1953 D2180000 		.4byte	0x18d2
 4905 1957 01       		.byte	0x1
 4906 1958 05       		.byte	0x5
 4907 1959 03       		.byte	0x3
 4908 195a 00000000 		.4byte	input
 4909 195e 31       		.uleb128 0x31
 4910 195f 8A000000 		.4byte	.LASF332
 4911 1963 02       		.byte	0x2
 4912 1964 17       		.byte	0x17
 4913 1965 98080000 		.4byte	0x898
 4914 1969 01       		.byte	0x1
 4915 196a 05       		.byte	0x5
 4916 196b 03       		.byte	0x3
 4917 196c 00000000 		.4byte	_state
 4918 1970 31       		.uleb128 0x31
 4919 1971 C1090000 		.4byte	.LASF333
 4920 1975 02       		.byte	0x2
 4921 1976 19       		.byte	0x19
 4922 1977 06160000 		.4byte	0x1606
 4923 197b 01       		.byte	0x1
 4924 197c 05       		.byte	0x5
 4925 197d 03       		.byte	0x3
 4926 197e 00000000 		.4byte	loop
 4927 1982 31       		.uleb128 0x31
 4928 1983 C8070000 		.4byte	.LASF334
 4929 1987 02       		.byte	0x2
 4930 1988 1A       		.byte	0x1a
 4931 1989 D1160000 		.4byte	0x16d1
 4932 198d 01       		.byte	0x1
 4933 198e 05       		.byte	0x5
 4934 198f 03       		.byte	0x3
 4935 1990 00000000 		.4byte	ntrip
 4936 1994 31       		.uleb128 0x31
 4937 1995 90030000 		.4byte	.LASF335
 4938 1999 02       		.byte	0x2
 4939 199a 1B       		.byte	0x1b
 4940 199b D1160000 		.4byte	0x16d1
ARM GAS  /tmp/ccsPeR2V.s 			page 123


 4941 199f 01       		.byte	0x1
 4942 19a0 05       		.byte	0x5
 4943 19a1 03       		.byte	0x3
 4944 19a2 00000000 		.4byte	rtrip
 4945 19a6 31       		.uleb128 0x31
 4946 19a7 79010000 		.4byte	.LASF336
 4947 19ab 02       		.byte	0x2
 4948 19ac 1C       		.byte	0x1c
 4949 19ad B9080000 		.4byte	0x8b9
 4950 19b1 01       		.byte	0x1
 4951 19b2 05       		.byte	0x5
 4952 19b3 03       		.byte	0x3
 4953 19b4 00000000 		.4byte	releasetime
 4954 19b8 00       		.byte	0
 4955              		.section	.debug_abbrev,"",%progbits
 4956              	.Ldebug_abbrev0:
 4957 0000 01       		.uleb128 0x1
 4958 0001 11       		.uleb128 0x11
 4959 0002 01       		.byte	0x1
 4960 0003 25       		.uleb128 0x25
 4961 0004 0E       		.uleb128 0xe
 4962 0005 13       		.uleb128 0x13
 4963 0006 0B       		.uleb128 0xb
 4964 0007 03       		.uleb128 0x3
 4965 0008 0E       		.uleb128 0xe
 4966 0009 1B       		.uleb128 0x1b
 4967 000a 0E       		.uleb128 0xe
 4968 000b 11       		.uleb128 0x11
 4969 000c 01       		.uleb128 0x1
 4970 000d 52       		.uleb128 0x52
 4971 000e 01       		.uleb128 0x1
 4972 000f 55       		.uleb128 0x55
 4973 0010 06       		.uleb128 0x6
 4974 0011 10       		.uleb128 0x10
 4975 0012 06       		.uleb128 0x6
 4976 0013 00       		.byte	0
 4977 0014 00       		.byte	0
 4978 0015 02       		.uleb128 0x2
 4979 0016 24       		.uleb128 0x24
 4980 0017 00       		.byte	0
 4981 0018 0B       		.uleb128 0xb
 4982 0019 0B       		.uleb128 0xb
 4983 001a 3E       		.uleb128 0x3e
 4984 001b 0B       		.uleb128 0xb
 4985 001c 03       		.uleb128 0x3
 4986 001d 0E       		.uleb128 0xe
 4987 001e 00       		.byte	0
 4988 001f 00       		.byte	0
 4989 0020 03       		.uleb128 0x3
 4990 0021 24       		.uleb128 0x24
 4991 0022 00       		.byte	0
 4992 0023 0B       		.uleb128 0xb
 4993 0024 0B       		.uleb128 0xb
 4994 0025 3E       		.uleb128 0x3e
 4995 0026 0B       		.uleb128 0xb
 4996 0027 03       		.uleb128 0x3
 4997 0028 08       		.uleb128 0x8
ARM GAS  /tmp/ccsPeR2V.s 			page 124


 4998 0029 00       		.byte	0
 4999 002a 00       		.byte	0
 5000 002b 04       		.uleb128 0x4
 5001 002c 16       		.uleb128 0x16
 5002 002d 00       		.byte	0
 5003 002e 03       		.uleb128 0x3
 5004 002f 0E       		.uleb128 0xe
 5005 0030 3A       		.uleb128 0x3a
 5006 0031 0B       		.uleb128 0xb
 5007 0032 3B       		.uleb128 0x3b
 5008 0033 0B       		.uleb128 0xb
 5009 0034 49       		.uleb128 0x49
 5010 0035 13       		.uleb128 0x13
 5011 0036 00       		.byte	0
 5012 0037 00       		.byte	0
 5013 0038 05       		.uleb128 0x5
 5014 0039 16       		.uleb128 0x16
 5015 003a 00       		.byte	0
 5016 003b 03       		.uleb128 0x3
 5017 003c 0E       		.uleb128 0xe
 5018 003d 3A       		.uleb128 0x3a
 5019 003e 0B       		.uleb128 0xb
 5020 003f 3B       		.uleb128 0x3b
 5021 0040 05       		.uleb128 0x5
 5022 0041 49       		.uleb128 0x49
 5023 0042 13       		.uleb128 0x13
 5024 0043 00       		.byte	0
 5025 0044 00       		.byte	0
 5026 0045 06       		.uleb128 0x6
 5027 0046 17       		.uleb128 0x17
 5028 0047 01       		.byte	0x1
 5029 0048 0B       		.uleb128 0xb
 5030 0049 0B       		.uleb128 0xb
 5031 004a 3A       		.uleb128 0x3a
 5032 004b 0B       		.uleb128 0xb
 5033 004c 3B       		.uleb128 0x3b
 5034 004d 0B       		.uleb128 0xb
 5035 004e 01       		.uleb128 0x1
 5036 004f 13       		.uleb128 0x13
 5037 0050 00       		.byte	0
 5038 0051 00       		.byte	0
 5039 0052 07       		.uleb128 0x7
 5040 0053 0D       		.uleb128 0xd
 5041 0054 00       		.byte	0
 5042 0055 03       		.uleb128 0x3
 5043 0056 0E       		.uleb128 0xe
 5044 0057 3A       		.uleb128 0x3a
 5045 0058 0B       		.uleb128 0xb
 5046 0059 3B       		.uleb128 0x3b
 5047 005a 0B       		.uleb128 0xb
 5048 005b 49       		.uleb128 0x49
 5049 005c 13       		.uleb128 0x13
 5050 005d 00       		.byte	0
 5051 005e 00       		.byte	0
 5052 005f 08       		.uleb128 0x8
 5053 0060 01       		.uleb128 0x1
 5054 0061 01       		.byte	0x1
ARM GAS  /tmp/ccsPeR2V.s 			page 125


 5055 0062 49       		.uleb128 0x49
 5056 0063 13       		.uleb128 0x13
 5057 0064 01       		.uleb128 0x1
 5058 0065 13       		.uleb128 0x13
 5059 0066 00       		.byte	0
 5060 0067 00       		.byte	0
 5061 0068 09       		.uleb128 0x9
 5062 0069 21       		.uleb128 0x21
 5063 006a 00       		.byte	0
 5064 006b 49       		.uleb128 0x49
 5065 006c 13       		.uleb128 0x13
 5066 006d 2F       		.uleb128 0x2f
 5067 006e 0B       		.uleb128 0xb
 5068 006f 00       		.byte	0
 5069 0070 00       		.byte	0
 5070 0071 0A       		.uleb128 0xa
 5071 0072 13       		.uleb128 0x13
 5072 0073 01       		.byte	0x1
 5073 0074 0B       		.uleb128 0xb
 5074 0075 0B       		.uleb128 0xb
 5075 0076 3A       		.uleb128 0x3a
 5076 0077 0B       		.uleb128 0xb
 5077 0078 3B       		.uleb128 0x3b
 5078 0079 0B       		.uleb128 0xb
 5079 007a 01       		.uleb128 0x1
 5080 007b 13       		.uleb128 0x13
 5081 007c 00       		.byte	0
 5082 007d 00       		.byte	0
 5083 007e 0B       		.uleb128 0xb
 5084 007f 0D       		.uleb128 0xd
 5085 0080 00       		.byte	0
 5086 0081 03       		.uleb128 0x3
 5087 0082 0E       		.uleb128 0xe
 5088 0083 3A       		.uleb128 0x3a
 5089 0084 0B       		.uleb128 0xb
 5090 0085 3B       		.uleb128 0x3b
 5091 0086 0B       		.uleb128 0xb
 5092 0087 49       		.uleb128 0x49
 5093 0088 13       		.uleb128 0x13
 5094 0089 38       		.uleb128 0x38
 5095 008a 0A       		.uleb128 0xa
 5096 008b 00       		.byte	0
 5097 008c 00       		.byte	0
 5098 008d 0C       		.uleb128 0xc
 5099 008e 0F       		.uleb128 0xf
 5100 008f 00       		.byte	0
 5101 0090 0B       		.uleb128 0xb
 5102 0091 0B       		.uleb128 0xb
 5103 0092 00       		.byte	0
 5104 0093 00       		.byte	0
 5105 0094 0D       		.uleb128 0xd
 5106 0095 13       		.uleb128 0x13
 5107 0096 01       		.byte	0x1
 5108 0097 03       		.uleb128 0x3
 5109 0098 0E       		.uleb128 0xe
 5110 0099 0B       		.uleb128 0xb
 5111 009a 0B       		.uleb128 0xb
ARM GAS  /tmp/ccsPeR2V.s 			page 126


 5112 009b 3A       		.uleb128 0x3a
 5113 009c 0B       		.uleb128 0xb
 5114 009d 3B       		.uleb128 0x3b
 5115 009e 0B       		.uleb128 0xb
 5116 009f 01       		.uleb128 0x1
 5117 00a0 13       		.uleb128 0x13
 5118 00a1 00       		.byte	0
 5119 00a2 00       		.byte	0
 5120 00a3 0E       		.uleb128 0xe
 5121 00a4 0D       		.uleb128 0xd
 5122 00a5 00       		.byte	0
 5123 00a6 03       		.uleb128 0x3
 5124 00a7 08       		.uleb128 0x8
 5125 00a8 3A       		.uleb128 0x3a
 5126 00a9 0B       		.uleb128 0xb
 5127 00aa 3B       		.uleb128 0x3b
 5128 00ab 0B       		.uleb128 0xb
 5129 00ac 49       		.uleb128 0x49
 5130 00ad 13       		.uleb128 0x13
 5131 00ae 38       		.uleb128 0x38
 5132 00af 0A       		.uleb128 0xa
 5133 00b0 00       		.byte	0
 5134 00b1 00       		.byte	0
 5135 00b2 0F       		.uleb128 0xf
 5136 00b3 0F       		.uleb128 0xf
 5137 00b4 00       		.byte	0
 5138 00b5 0B       		.uleb128 0xb
 5139 00b6 0B       		.uleb128 0xb
 5140 00b7 49       		.uleb128 0x49
 5141 00b8 13       		.uleb128 0x13
 5142 00b9 00       		.byte	0
 5143 00ba 00       		.byte	0
 5144 00bb 10       		.uleb128 0x10
 5145 00bc 13       		.uleb128 0x13
 5146 00bd 01       		.byte	0x1
 5147 00be 03       		.uleb128 0x3
 5148 00bf 0E       		.uleb128 0xe
 5149 00c0 0B       		.uleb128 0xb
 5150 00c1 05       		.uleb128 0x5
 5151 00c2 3A       		.uleb128 0x3a
 5152 00c3 0B       		.uleb128 0xb
 5153 00c4 3B       		.uleb128 0x3b
 5154 00c5 0B       		.uleb128 0xb
 5155 00c6 01       		.uleb128 0x1
 5156 00c7 13       		.uleb128 0x13
 5157 00c8 00       		.byte	0
 5158 00c9 00       		.byte	0
 5159 00ca 11       		.uleb128 0x11
 5160 00cb 15       		.uleb128 0x15
 5161 00cc 00       		.byte	0
 5162 00cd 27       		.uleb128 0x27
 5163 00ce 0C       		.uleb128 0xc
 5164 00cf 00       		.byte	0
 5165 00d0 00       		.byte	0
 5166 00d1 12       		.uleb128 0x12
 5167 00d2 13       		.uleb128 0x13
 5168 00d3 01       		.byte	0x1
ARM GAS  /tmp/ccsPeR2V.s 			page 127


 5169 00d4 03       		.uleb128 0x3
 5170 00d5 0E       		.uleb128 0xe
 5171 00d6 0B       		.uleb128 0xb
 5172 00d7 0B       		.uleb128 0xb
 5173 00d8 3A       		.uleb128 0x3a
 5174 00d9 0B       		.uleb128 0xb
 5175 00da 3B       		.uleb128 0x3b
 5176 00db 05       		.uleb128 0x5
 5177 00dc 01       		.uleb128 0x1
 5178 00dd 13       		.uleb128 0x13
 5179 00de 00       		.byte	0
 5180 00df 00       		.byte	0
 5181 00e0 13       		.uleb128 0x13
 5182 00e1 0D       		.uleb128 0xd
 5183 00e2 00       		.byte	0
 5184 00e3 03       		.uleb128 0x3
 5185 00e4 0E       		.uleb128 0xe
 5186 00e5 3A       		.uleb128 0x3a
 5187 00e6 0B       		.uleb128 0xb
 5188 00e7 3B       		.uleb128 0x3b
 5189 00e8 05       		.uleb128 0x5
 5190 00e9 49       		.uleb128 0x49
 5191 00ea 13       		.uleb128 0x13
 5192 00eb 38       		.uleb128 0x38
 5193 00ec 0A       		.uleb128 0xa
 5194 00ed 00       		.byte	0
 5195 00ee 00       		.byte	0
 5196 00ef 14       		.uleb128 0x14
 5197 00f0 0D       		.uleb128 0xd
 5198 00f1 00       		.byte	0
 5199 00f2 03       		.uleb128 0x3
 5200 00f3 08       		.uleb128 0x8
 5201 00f4 3A       		.uleb128 0x3a
 5202 00f5 0B       		.uleb128 0xb
 5203 00f6 3B       		.uleb128 0x3b
 5204 00f7 05       		.uleb128 0x5
 5205 00f8 49       		.uleb128 0x49
 5206 00f9 13       		.uleb128 0x13
 5207 00fa 38       		.uleb128 0x38
 5208 00fb 0A       		.uleb128 0xa
 5209 00fc 00       		.byte	0
 5210 00fd 00       		.byte	0
 5211 00fe 15       		.uleb128 0x15
 5212 00ff 15       		.uleb128 0x15
 5213 0100 01       		.byte	0x1
 5214 0101 27       		.uleb128 0x27
 5215 0102 0C       		.uleb128 0xc
 5216 0103 49       		.uleb128 0x49
 5217 0104 13       		.uleb128 0x13
 5218 0105 01       		.uleb128 0x1
 5219 0106 13       		.uleb128 0x13
 5220 0107 00       		.byte	0
 5221 0108 00       		.byte	0
 5222 0109 16       		.uleb128 0x16
 5223 010a 05       		.uleb128 0x5
 5224 010b 00       		.byte	0
 5225 010c 49       		.uleb128 0x49
ARM GAS  /tmp/ccsPeR2V.s 			page 128


 5226 010d 13       		.uleb128 0x13
 5227 010e 00       		.byte	0
 5228 010f 00       		.byte	0
 5229 0110 17       		.uleb128 0x17
 5230 0111 26       		.uleb128 0x26
 5231 0112 00       		.byte	0
 5232 0113 49       		.uleb128 0x49
 5233 0114 13       		.uleb128 0x13
 5234 0115 00       		.byte	0
 5235 0116 00       		.byte	0
 5236 0117 18       		.uleb128 0x18
 5237 0118 15       		.uleb128 0x15
 5238 0119 01       		.byte	0x1
 5239 011a 27       		.uleb128 0x27
 5240 011b 0C       		.uleb128 0xc
 5241 011c 01       		.uleb128 0x1
 5242 011d 13       		.uleb128 0x13
 5243 011e 00       		.byte	0
 5244 011f 00       		.byte	0
 5245 0120 19       		.uleb128 0x19
 5246 0121 35       		.uleb128 0x35
 5247 0122 00       		.byte	0
 5248 0123 49       		.uleb128 0x49
 5249 0124 13       		.uleb128 0x13
 5250 0125 00       		.byte	0
 5251 0126 00       		.byte	0
 5252 0127 1A       		.uleb128 0x1a
 5253 0128 04       		.uleb128 0x4
 5254 0129 01       		.byte	0x1
 5255 012a 03       		.uleb128 0x3
 5256 012b 0E       		.uleb128 0xe
 5257 012c 0B       		.uleb128 0xb
 5258 012d 0B       		.uleb128 0xb
 5259 012e 3A       		.uleb128 0x3a
 5260 012f 0B       		.uleb128 0xb
 5261 0130 3B       		.uleb128 0x3b
 5262 0131 0B       		.uleb128 0xb
 5263 0132 01       		.uleb128 0x1
 5264 0133 13       		.uleb128 0x13
 5265 0134 00       		.byte	0
 5266 0135 00       		.byte	0
 5267 0136 1B       		.uleb128 0x1b
 5268 0137 28       		.uleb128 0x28
 5269 0138 00       		.byte	0
 5270 0139 03       		.uleb128 0x3
 5271 013a 0E       		.uleb128 0xe
 5272 013b 1C       		.uleb128 0x1c
 5273 013c 0D       		.uleb128 0xd
 5274 013d 00       		.byte	0
 5275 013e 00       		.byte	0
 5276 013f 1C       		.uleb128 0x1c
 5277 0140 13       		.uleb128 0x13
 5278 0141 01       		.byte	0x1
 5279 0142 0B       		.uleb128 0xb
 5280 0143 05       		.uleb128 0x5
 5281 0144 3A       		.uleb128 0x3a
 5282 0145 0B       		.uleb128 0xb
ARM GAS  /tmp/ccsPeR2V.s 			page 129


 5283 0146 3B       		.uleb128 0x3b
 5284 0147 0B       		.uleb128 0xb
 5285 0148 01       		.uleb128 0x1
 5286 0149 13       		.uleb128 0x13
 5287 014a 00       		.byte	0
 5288 014b 00       		.byte	0
 5289 014c 1D       		.uleb128 0x1d
 5290 014d 21       		.uleb128 0x21
 5291 014e 00       		.byte	0
 5292 014f 49       		.uleb128 0x49
 5293 0150 13       		.uleb128 0x13
 5294 0151 2F       		.uleb128 0x2f
 5295 0152 05       		.uleb128 0x5
 5296 0153 00       		.byte	0
 5297 0154 00       		.byte	0
 5298 0155 1E       		.uleb128 0x1e
 5299 0156 16       		.uleb128 0x16
 5300 0157 00       		.byte	0
 5301 0158 03       		.uleb128 0x3
 5302 0159 08       		.uleb128 0x8
 5303 015a 3A       		.uleb128 0x3a
 5304 015b 0B       		.uleb128 0xb
 5305 015c 3B       		.uleb128 0x3b
 5306 015d 05       		.uleb128 0x5
 5307 015e 49       		.uleb128 0x49
 5308 015f 13       		.uleb128 0x13
 5309 0160 00       		.byte	0
 5310 0161 00       		.byte	0
 5311 0162 1F       		.uleb128 0x1f
 5312 0163 13       		.uleb128 0x13
 5313 0164 01       		.byte	0x1
 5314 0165 0B       		.uleb128 0xb
 5315 0166 0B       		.uleb128 0xb
 5316 0167 3A       		.uleb128 0x3a
 5317 0168 0B       		.uleb128 0xb
 5318 0169 3B       		.uleb128 0x3b
 5319 016a 05       		.uleb128 0x5
 5320 016b 01       		.uleb128 0x1
 5321 016c 13       		.uleb128 0x13
 5322 016d 00       		.byte	0
 5323 016e 00       		.byte	0
 5324 016f 20       		.uleb128 0x20
 5325 0170 13       		.uleb128 0x13
 5326 0171 01       		.byte	0x1
 5327 0172 0B       		.uleb128 0xb
 5328 0173 05       		.uleb128 0x5
 5329 0174 3A       		.uleb128 0x3a
 5330 0175 0B       		.uleb128 0xb
 5331 0176 3B       		.uleb128 0x3b
 5332 0177 05       		.uleb128 0x5
 5333 0178 01       		.uleb128 0x1
 5334 0179 13       		.uleb128 0x13
 5335 017a 00       		.byte	0
 5336 017b 00       		.byte	0
 5337 017c 21       		.uleb128 0x21
 5338 017d 04       		.uleb128 0x4
 5339 017e 01       		.byte	0x1
ARM GAS  /tmp/ccsPeR2V.s 			page 130


 5340 017f 0B       		.uleb128 0xb
 5341 0180 0B       		.uleb128 0xb
 5342 0181 3A       		.uleb128 0x3a
 5343 0182 0B       		.uleb128 0xb
 5344 0183 3B       		.uleb128 0x3b
 5345 0184 0B       		.uleb128 0xb
 5346 0185 01       		.uleb128 0x1
 5347 0186 13       		.uleb128 0x13
 5348 0187 00       		.byte	0
 5349 0188 00       		.byte	0
 5350 0189 22       		.uleb128 0x22
 5351 018a 28       		.uleb128 0x28
 5352 018b 00       		.byte	0
 5353 018c 03       		.uleb128 0x3
 5354 018d 08       		.uleb128 0x8
 5355 018e 1C       		.uleb128 0x1c
 5356 018f 0D       		.uleb128 0xd
 5357 0190 00       		.byte	0
 5358 0191 00       		.byte	0
 5359 0192 23       		.uleb128 0x23
 5360 0193 2E       		.uleb128 0x2e
 5361 0194 01       		.byte	0x1
 5362 0195 03       		.uleb128 0x3
 5363 0196 0E       		.uleb128 0xe
 5364 0197 3A       		.uleb128 0x3a
 5365 0198 0B       		.uleb128 0xb
 5366 0199 3B       		.uleb128 0x3b
 5367 019a 05       		.uleb128 0x5
 5368 019b 27       		.uleb128 0x27
 5369 019c 0C       		.uleb128 0xc
 5370 019d 11       		.uleb128 0x11
 5371 019e 01       		.uleb128 0x1
 5372 019f 12       		.uleb128 0x12
 5373 01a0 01       		.uleb128 0x1
 5374 01a1 40       		.uleb128 0x40
 5375 01a2 06       		.uleb128 0x6
 5376 01a3 01       		.uleb128 0x1
 5377 01a4 13       		.uleb128 0x13
 5378 01a5 00       		.byte	0
 5379 01a6 00       		.byte	0
 5380 01a7 24       		.uleb128 0x24
 5381 01a8 05       		.uleb128 0x5
 5382 01a9 00       		.byte	0
 5383 01aa 03       		.uleb128 0x3
 5384 01ab 0E       		.uleb128 0xe
 5385 01ac 3A       		.uleb128 0x3a
 5386 01ad 0B       		.uleb128 0xb
 5387 01ae 3B       		.uleb128 0x3b
 5388 01af 05       		.uleb128 0x5
 5389 01b0 49       		.uleb128 0x49
 5390 01b1 13       		.uleb128 0x13
 5391 01b2 02       		.uleb128 0x2
 5392 01b3 0A       		.uleb128 0xa
 5393 01b4 00       		.byte	0
 5394 01b5 00       		.byte	0
 5395 01b6 25       		.uleb128 0x25
 5396 01b7 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccsPeR2V.s 			page 131


 5397 01b8 01       		.byte	0x1
 5398 01b9 03       		.uleb128 0x3
 5399 01ba 0E       		.uleb128 0xe
 5400 01bb 3A       		.uleb128 0x3a
 5401 01bc 0B       		.uleb128 0xb
 5402 01bd 3B       		.uleb128 0x3b
 5403 01be 0B       		.uleb128 0xb
 5404 01bf 11       		.uleb128 0x11
 5405 01c0 01       		.uleb128 0x1
 5406 01c1 12       		.uleb128 0x12
 5407 01c2 01       		.uleb128 0x1
 5408 01c3 40       		.uleb128 0x40
 5409 01c4 06       		.uleb128 0x6
 5410 01c5 01       		.uleb128 0x1
 5411 01c6 13       		.uleb128 0x13
 5412 01c7 00       		.byte	0
 5413 01c8 00       		.byte	0
 5414 01c9 26       		.uleb128 0x26
 5415 01ca 34       		.uleb128 0x34
 5416 01cb 00       		.byte	0
 5417 01cc 03       		.uleb128 0x3
 5418 01cd 08       		.uleb128 0x8
 5419 01ce 3A       		.uleb128 0x3a
 5420 01cf 0B       		.uleb128 0xb
 5421 01d0 3B       		.uleb128 0x3b
 5422 01d1 0B       		.uleb128 0xb
 5423 01d2 49       		.uleb128 0x49
 5424 01d3 13       		.uleb128 0x13
 5425 01d4 02       		.uleb128 0x2
 5426 01d5 0A       		.uleb128 0xa
 5427 01d6 00       		.byte	0
 5428 01d7 00       		.byte	0
 5429 01d8 27       		.uleb128 0x27
 5430 01d9 34       		.uleb128 0x34
 5431 01da 00       		.byte	0
 5432 01db 03       		.uleb128 0x3
 5433 01dc 0E       		.uleb128 0xe
 5434 01dd 3A       		.uleb128 0x3a
 5435 01de 0B       		.uleb128 0xb
 5436 01df 3B       		.uleb128 0x3b
 5437 01e0 0B       		.uleb128 0xb
 5438 01e1 49       		.uleb128 0x49
 5439 01e2 13       		.uleb128 0x13
 5440 01e3 02       		.uleb128 0x2
 5441 01e4 0A       		.uleb128 0xa
 5442 01e5 00       		.byte	0
 5443 01e6 00       		.byte	0
 5444 01e7 28       		.uleb128 0x28
 5445 01e8 34       		.uleb128 0x34
 5446 01e9 00       		.byte	0
 5447 01ea 03       		.uleb128 0x3
 5448 01eb 0E       		.uleb128 0xe
 5449 01ec 49       		.uleb128 0x49
 5450 01ed 13       		.uleb128 0x13
 5451 01ee 34       		.uleb128 0x34
 5452 01ef 0C       		.uleb128 0xc
 5453 01f0 00       		.byte	0
ARM GAS  /tmp/ccsPeR2V.s 			page 132


 5454 01f1 00       		.byte	0
 5455 01f2 29       		.uleb128 0x29
 5456 01f3 2E       		.uleb128 0x2e
 5457 01f4 01       		.byte	0x1
 5458 01f5 3F       		.uleb128 0x3f
 5459 01f6 0C       		.uleb128 0xc
 5460 01f7 03       		.uleb128 0x3
 5461 01f8 0E       		.uleb128 0xe
 5462 01f9 3A       		.uleb128 0x3a
 5463 01fa 0B       		.uleb128 0xb
 5464 01fb 3B       		.uleb128 0x3b
 5465 01fc 0B       		.uleb128 0xb
 5466 01fd 27       		.uleb128 0x27
 5467 01fe 0C       		.uleb128 0xc
 5468 01ff 11       		.uleb128 0x11
 5469 0200 01       		.uleb128 0x1
 5470 0201 12       		.uleb128 0x12
 5471 0202 01       		.uleb128 0x1
 5472 0203 40       		.uleb128 0x40
 5473 0204 06       		.uleb128 0x6
 5474 0205 01       		.uleb128 0x1
 5475 0206 13       		.uleb128 0x13
 5476 0207 00       		.byte	0
 5477 0208 00       		.byte	0
 5478 0209 2A       		.uleb128 0x2a
 5479 020a 05       		.uleb128 0x5
 5480 020b 00       		.byte	0
 5481 020c 03       		.uleb128 0x3
 5482 020d 08       		.uleb128 0x8
 5483 020e 3A       		.uleb128 0x3a
 5484 020f 0B       		.uleb128 0xb
 5485 0210 3B       		.uleb128 0x3b
 5486 0211 0B       		.uleb128 0xb
 5487 0212 49       		.uleb128 0x49
 5488 0213 13       		.uleb128 0x13
 5489 0214 02       		.uleb128 0x2
 5490 0215 0A       		.uleb128 0xa
 5491 0216 00       		.byte	0
 5492 0217 00       		.byte	0
 5493 0218 2B       		.uleb128 0x2b
 5494 0219 2E       		.uleb128 0x2e
 5495 021a 01       		.byte	0x1
 5496 021b 3F       		.uleb128 0x3f
 5497 021c 0C       		.uleb128 0xc
 5498 021d 03       		.uleb128 0x3
 5499 021e 0E       		.uleb128 0xe
 5500 021f 3A       		.uleb128 0x3a
 5501 0220 0B       		.uleb128 0xb
 5502 0221 3B       		.uleb128 0x3b
 5503 0222 0B       		.uleb128 0xb
 5504 0223 49       		.uleb128 0x49
 5505 0224 13       		.uleb128 0x13
 5506 0225 11       		.uleb128 0x11
 5507 0226 01       		.uleb128 0x1
 5508 0227 12       		.uleb128 0x12
 5509 0228 01       		.uleb128 0x1
 5510 0229 40       		.uleb128 0x40
ARM GAS  /tmp/ccsPeR2V.s 			page 133


 5511 022a 06       		.uleb128 0x6
 5512 022b 01       		.uleb128 0x1
 5513 022c 13       		.uleb128 0x13
 5514 022d 00       		.byte	0
 5515 022e 00       		.byte	0
 5516 022f 2C       		.uleb128 0x2c
 5517 0230 2E       		.uleb128 0x2e
 5518 0231 00       		.byte	0
 5519 0232 3F       		.uleb128 0x3f
 5520 0233 0C       		.uleb128 0xc
 5521 0234 03       		.uleb128 0x3
 5522 0235 0E       		.uleb128 0xe
 5523 0236 3A       		.uleb128 0x3a
 5524 0237 0B       		.uleb128 0xb
 5525 0238 3B       		.uleb128 0x3b
 5526 0239 05       		.uleb128 0x5
 5527 023a 27       		.uleb128 0x27
 5528 023b 0C       		.uleb128 0xc
 5529 023c 11       		.uleb128 0x11
 5530 023d 01       		.uleb128 0x1
 5531 023e 12       		.uleb128 0x12
 5532 023f 01       		.uleb128 0x1
 5533 0240 40       		.uleb128 0x40
 5534 0241 06       		.uleb128 0x6
 5535 0242 00       		.byte	0
 5536 0243 00       		.byte	0
 5537 0244 2D       		.uleb128 0x2d
 5538 0245 2E       		.uleb128 0x2e
 5539 0246 01       		.byte	0x1
 5540 0247 3F       		.uleb128 0x3f
 5541 0248 0C       		.uleb128 0xc
 5542 0249 03       		.uleb128 0x3
 5543 024a 0E       		.uleb128 0xe
 5544 024b 3A       		.uleb128 0x3a
 5545 024c 0B       		.uleb128 0xb
 5546 024d 3B       		.uleb128 0x3b
 5547 024e 05       		.uleb128 0x5
 5548 024f 27       		.uleb128 0x27
 5549 0250 0C       		.uleb128 0xc
 5550 0251 11       		.uleb128 0x11
 5551 0252 01       		.uleb128 0x1
 5552 0253 12       		.uleb128 0x12
 5553 0254 01       		.uleb128 0x1
 5554 0255 40       		.uleb128 0x40
 5555 0256 06       		.uleb128 0x6
 5556 0257 01       		.uleb128 0x1
 5557 0258 13       		.uleb128 0x13
 5558 0259 00       		.byte	0
 5559 025a 00       		.byte	0
 5560 025b 2E       		.uleb128 0x2e
 5561 025c 34       		.uleb128 0x34
 5562 025d 00       		.byte	0
 5563 025e 03       		.uleb128 0x3
 5564 025f 0E       		.uleb128 0xe
 5565 0260 3A       		.uleb128 0x3a
 5566 0261 0B       		.uleb128 0xb
 5567 0262 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccsPeR2V.s 			page 134


 5568 0263 05       		.uleb128 0x5
 5569 0264 49       		.uleb128 0x49
 5570 0265 13       		.uleb128 0x13
 5571 0266 02       		.uleb128 0x2
 5572 0267 0A       		.uleb128 0xa
 5573 0268 00       		.byte	0
 5574 0269 00       		.byte	0
 5575 026a 2F       		.uleb128 0x2f
 5576 026b 34       		.uleb128 0x34
 5577 026c 00       		.byte	0
 5578 026d 03       		.uleb128 0x3
 5579 026e 0E       		.uleb128 0xe
 5580 026f 3A       		.uleb128 0x3a
 5581 0270 0B       		.uleb128 0xb
 5582 0271 3B       		.uleb128 0x3b
 5583 0272 05       		.uleb128 0x5
 5584 0273 49       		.uleb128 0x49
 5585 0274 13       		.uleb128 0x13
 5586 0275 3F       		.uleb128 0x3f
 5587 0276 0C       		.uleb128 0xc
 5588 0277 3C       		.uleb128 0x3c
 5589 0278 0C       		.uleb128 0xc
 5590 0279 00       		.byte	0
 5591 027a 00       		.byte	0
 5592 027b 30       		.uleb128 0x30
 5593 027c 34       		.uleb128 0x34
 5594 027d 00       		.byte	0
 5595 027e 03       		.uleb128 0x3
 5596 027f 0E       		.uleb128 0xe
 5597 0280 3A       		.uleb128 0x3a
 5598 0281 0B       		.uleb128 0xb
 5599 0282 3B       		.uleb128 0x3b
 5600 0283 0B       		.uleb128 0xb
 5601 0284 49       		.uleb128 0x49
 5602 0285 13       		.uleb128 0x13
 5603 0286 3F       		.uleb128 0x3f
 5604 0287 0C       		.uleb128 0xc
 5605 0288 3C       		.uleb128 0x3c
 5606 0289 0C       		.uleb128 0xc
 5607 028a 00       		.byte	0
 5608 028b 00       		.byte	0
 5609 028c 31       		.uleb128 0x31
 5610 028d 34       		.uleb128 0x34
 5611 028e 00       		.byte	0
 5612 028f 03       		.uleb128 0x3
 5613 0290 0E       		.uleb128 0xe
 5614 0291 3A       		.uleb128 0x3a
 5615 0292 0B       		.uleb128 0xb
 5616 0293 3B       		.uleb128 0x3b
 5617 0294 0B       		.uleb128 0xb
 5618 0295 49       		.uleb128 0x49
 5619 0296 13       		.uleb128 0x13
 5620 0297 3F       		.uleb128 0x3f
 5621 0298 0C       		.uleb128 0xc
 5622 0299 02       		.uleb128 0x2
 5623 029a 0A       		.uleb128 0xa
 5624 029b 00       		.byte	0
ARM GAS  /tmp/ccsPeR2V.s 			page 135


 5625 029c 00       		.byte	0
 5626 029d 00       		.byte	0
 5627              		.section	.debug_loc,"",%progbits
 5628              	.Ldebug_loc0:
 5629              	.LLST0:
 5630 0000 00000000 		.4byte	.LFB14
 5631 0004 02000000 		.4byte	.LCFI0
 5632 0008 0200     		.2byte	0x2
 5633 000a 7D       		.byte	0x7d
 5634 000b 00       		.sleb128 0
 5635 000c 02000000 		.4byte	.LCFI0
 5636 0010 04000000 		.4byte	.LCFI1
 5637 0014 0200     		.2byte	0x2
 5638 0016 7D       		.byte	0x7d
 5639 0017 04       		.sleb128 4
 5640 0018 04000000 		.4byte	.LCFI1
 5641 001c 06000000 		.4byte	.LCFI2
 5642 0020 0200     		.2byte	0x2
 5643 0022 7D       		.byte	0x7d
 5644 0023 10       		.sleb128 16
 5645 0024 06000000 		.4byte	.LCFI2
 5646 0028 36000000 		.4byte	.LFE14
 5647 002c 0200     		.2byte	0x2
 5648 002e 77       		.byte	0x77
 5649 002f 10       		.sleb128 16
 5650 0030 00000000 		.4byte	0
 5651 0034 00000000 		.4byte	0
 5652              	.LLST1:
 5653 0038 00000000 		.4byte	.LFB20
 5654 003c 02000000 		.4byte	.LCFI3
 5655 0040 0200     		.2byte	0x2
 5656 0042 7D       		.byte	0x7d
 5657 0043 00       		.sleb128 0
 5658 0044 02000000 		.4byte	.LCFI3
 5659 0048 04000000 		.4byte	.LCFI4
 5660 004c 0200     		.2byte	0x2
 5661 004e 7D       		.byte	0x7d
 5662 004f 04       		.sleb128 4
 5663 0050 04000000 		.4byte	.LCFI4
 5664 0054 06000000 		.4byte	.LCFI5
 5665 0058 0200     		.2byte	0x2
 5666 005a 7D       		.byte	0x7d
 5667 005b 10       		.sleb128 16
 5668 005c 06000000 		.4byte	.LCFI5
 5669 0060 5C000000 		.4byte	.LFE20
 5670 0064 0200     		.2byte	0x2
 5671 0066 77       		.byte	0x77
 5672 0067 10       		.sleb128 16
 5673 0068 00000000 		.4byte	0
 5674 006c 00000000 		.4byte	0
 5675              	.LLST2:
 5676 0070 00000000 		.4byte	.LFB35
 5677 0074 02000000 		.4byte	.LCFI6
 5678 0078 0200     		.2byte	0x2
 5679 007a 7D       		.byte	0x7d
 5680 007b 00       		.sleb128 0
 5681 007c 02000000 		.4byte	.LCFI6
ARM GAS  /tmp/ccsPeR2V.s 			page 136


 5682 0080 04000000 		.4byte	.LCFI7
 5683 0084 0200     		.2byte	0x2
 5684 0086 7D       		.byte	0x7d
 5685 0087 0C       		.sleb128 12
 5686 0088 04000000 		.4byte	.LCFI7
 5687 008c 06000000 		.4byte	.LCFI8
 5688 0090 0200     		.2byte	0x2
 5689 0092 7D       		.byte	0x7d
 5690 0093 30       		.sleb128 48
 5691 0094 06000000 		.4byte	.LCFI8
 5692 0098 4C020000 		.4byte	.LFE35
 5693 009c 0200     		.2byte	0x2
 5694 009e 77       		.byte	0x77
 5695 009f 18       		.sleb128 24
 5696 00a0 00000000 		.4byte	0
 5697 00a4 00000000 		.4byte	0
 5698              	.LLST3:
 5699 00a8 00000000 		.4byte	.LFB36
 5700 00ac 02000000 		.4byte	.LCFI9
 5701 00b0 0200     		.2byte	0x2
 5702 00b2 7D       		.byte	0x7d
 5703 00b3 00       		.sleb128 0
 5704 00b4 02000000 		.4byte	.LCFI9
 5705 00b8 04000000 		.4byte	.LCFI10
 5706 00bc 0200     		.2byte	0x2
 5707 00be 7D       		.byte	0x7d
 5708 00bf 08       		.sleb128 8
 5709 00c0 04000000 		.4byte	.LCFI10
 5710 00c4 06000000 		.4byte	.LCFI11
 5711 00c8 0200     		.2byte	0x2
 5712 00ca 7D       		.byte	0x7d
 5713 00cb 10       		.sleb128 16
 5714 00cc 06000000 		.4byte	.LCFI11
 5715 00d0 AA010000 		.4byte	.LFE36
 5716 00d4 0200     		.2byte	0x2
 5717 00d6 77       		.byte	0x77
 5718 00d7 10       		.sleb128 16
 5719 00d8 00000000 		.4byte	0
 5720 00dc 00000000 		.4byte	0
 5721              	.LLST4:
 5722 00e0 00000000 		.4byte	.LFB37
 5723 00e4 02000000 		.4byte	.LCFI12
 5724 00e8 0200     		.2byte	0x2
 5725 00ea 7D       		.byte	0x7d
 5726 00eb 00       		.sleb128 0
 5727 00ec 02000000 		.4byte	.LCFI12
 5728 00f0 04000000 		.4byte	.LCFI13
 5729 00f4 0200     		.2byte	0x2
 5730 00f6 7D       		.byte	0x7d
 5731 00f7 0C       		.sleb128 12
 5732 00f8 04000000 		.4byte	.LCFI13
 5733 00fc 06000000 		.4byte	.LCFI14
 5734 0100 0200     		.2byte	0x2
 5735 0102 7D       		.byte	0x7d
 5736 0103 30       		.sleb128 48
 5737 0104 06000000 		.4byte	.LCFI14
 5738 0108 46060000 		.4byte	.LFE37
ARM GAS  /tmp/ccsPeR2V.s 			page 137


 5739 010c 0200     		.2byte	0x2
 5740 010e 77       		.byte	0x77
 5741 010f 28       		.sleb128 40
 5742 0110 00000000 		.4byte	0
 5743 0114 00000000 		.4byte	0
 5744              	.LLST5:
 5745 0118 00000000 		.4byte	.LFB38
 5746 011c 02000000 		.4byte	.LCFI15
 5747 0120 0200     		.2byte	0x2
 5748 0122 7D       		.byte	0x7d
 5749 0123 00       		.sleb128 0
 5750 0124 02000000 		.4byte	.LCFI15
 5751 0128 04000000 		.4byte	.LCFI16
 5752 012c 0200     		.2byte	0x2
 5753 012e 7D       		.byte	0x7d
 5754 012f 08       		.sleb128 8
 5755 0130 04000000 		.4byte	.LCFI16
 5756 0134 2C000000 		.4byte	.LFE38
 5757 0138 0200     		.2byte	0x2
 5758 013a 77       		.byte	0x77
 5759 013b 08       		.sleb128 8
 5760 013c 00000000 		.4byte	0
 5761 0140 00000000 		.4byte	0
 5762              	.LLST6:
 5763 0144 00000000 		.4byte	.LFB39
 5764 0148 02000000 		.4byte	.LCFI17
 5765 014c 0200     		.2byte	0x2
 5766 014e 7D       		.byte	0x7d
 5767 014f 00       		.sleb128 0
 5768 0150 02000000 		.4byte	.LCFI17
 5769 0154 04000000 		.4byte	.LCFI18
 5770 0158 0200     		.2byte	0x2
 5771 015a 7D       		.byte	0x7d
 5772 015b 08       		.sleb128 8
 5773 015c 04000000 		.4byte	.LCFI18
 5774 0160 06000000 		.4byte	.LCFI19
 5775 0164 0200     		.2byte	0x2
 5776 0166 7D       		.byte	0x7d
 5777 0167 10       		.sleb128 16
 5778 0168 06000000 		.4byte	.LCFI19
 5779 016c 42010000 		.4byte	.LFE39
 5780 0170 0200     		.2byte	0x2
 5781 0172 77       		.byte	0x77
 5782 0173 10       		.sleb128 16
 5783 0174 00000000 		.4byte	0
 5784 0178 00000000 		.4byte	0
 5785              		.section	.debug_aranges,"",%progbits
 5786 0000 4C000000 		.4byte	0x4c
 5787 0004 0200     		.2byte	0x2
 5788 0006 00000000 		.4byte	.Ldebug_info0
 5789 000a 04       		.byte	0x4
 5790 000b 00       		.byte	0
 5791 000c 0000     		.2byte	0
 5792 000e 0000     		.2byte	0
 5793 0010 00000000 		.4byte	.LFB14
 5794 0014 36000000 		.4byte	.LFE14-.LFB14
 5795 0018 00000000 		.4byte	.LFB20
ARM GAS  /tmp/ccsPeR2V.s 			page 138


 5796 001c 5C000000 		.4byte	.LFE20-.LFB20
 5797 0020 00000000 		.4byte	.LFB35
 5798 0024 4C020000 		.4byte	.LFE35-.LFB35
 5799 0028 00000000 		.4byte	.LFB36
 5800 002c AA010000 		.4byte	.LFE36-.LFB36
 5801 0030 00000000 		.4byte	.LFB37
 5802 0034 46060000 		.4byte	.LFE37-.LFB37
 5803 0038 00000000 		.4byte	.LFB38
 5804 003c 2C000000 		.4byte	.LFE38-.LFB38
 5805 0040 00000000 		.4byte	.LFB39
 5806 0044 42010000 		.4byte	.LFE39-.LFB39
 5807 0048 00000000 		.4byte	0
 5808 004c 00000000 		.4byte	0
 5809              		.section	.debug_ranges,"",%progbits
 5810              	.Ldebug_ranges0:
 5811 0000 00000000 		.4byte	.LFB14
 5812 0004 36000000 		.4byte	.LFE14
 5813 0008 00000000 		.4byte	.LFB20
 5814 000c 5C000000 		.4byte	.LFE20
 5815 0010 00000000 		.4byte	.LFB35
 5816 0014 4C020000 		.4byte	.LFE35
 5817 0018 00000000 		.4byte	.LFB36
 5818 001c AA010000 		.4byte	.LFE36
 5819 0020 00000000 		.4byte	.LFB37
 5820 0024 46060000 		.4byte	.LFE37
 5821 0028 00000000 		.4byte	.LFB38
 5822 002c 2C000000 		.4byte	.LFE38
 5823 0030 00000000 		.4byte	.LFB39
 5824 0034 42010000 		.4byte	.LFE39
 5825 0038 00000000 		.4byte	0
 5826 003c 00000000 		.4byte	0
 5827              		.section	.debug_line,"",%progbits
 5828              	.Ldebug_line0:
 5829 0000 55030000 		.section	.debug_str,"MS",%progbits,1
 5829      02009201 
 5829      00000201 
 5829      FB0E0D00 
 5829      01010101 
 5830              	.LASF161:
 5831 0000 52534552 		.ascii	"RSERVED1\000"
 5831      56454431 
 5831      00
 5832              	.LASF317:
 5833 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 5833      5F456E61 
 5833      626C6549 
 5833      525100
 5834              	.LASF147:
 5835 0018 5443325F 		.ascii	"TC2_IRQn\000"
 5835      4952516E 
 5835      00
 5836              	.LASF270:
 5837 0021 50574D5F 		.ascii	"PWM_RNPR\000"
 5837      524E5052 
 5837      00
 5838              	.LASF14:
 5839 002a 5F5F7661 		.ascii	"__value\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 139


 5839      6C756500 
 5840              	.LASF66:
 5841 0032 5F5F7366 		.ascii	"__sf\000"
 5841      00
 5842              	.LASF329:
 5843 0037 64757479 		.ascii	"duty\000"
 5843      00
 5844              	.LASF75:
 5845 003c 5F726561 		.ascii	"_read\000"
 5845      6400
 5846              	.LASF170:
 5847 0042 4E564943 		.ascii	"NVIC_Type\000"
 5847      5F547970 
 5847      6500
 5848              	.LASF239:
 5849 004c 50574D5F 		.ascii	"PWM_IER1\000"
 5849      49455231 
 5849      00
 5850              	.LASF76:
 5851 0055 5F777269 		.ascii	"_write\000"
 5851      746500
 5852              	.LASF62:
 5853 005c 5F617363 		.ascii	"_asctime_buf\000"
 5853      74696D65 
 5853      5F627566 
 5853      00
 5854              	.LASF58:
 5855 0069 5F637674 		.ascii	"_cvtlen\000"
 5855      6C656E00 
 5856              	.LASF265:
 5857 0071 50574D5F 		.ascii	"PWM_WPSR\000"
 5857      57505352 
 5857      00
 5858              	.LASF200:
 5859 007a 4144435F 		.ascii	"ADC_EMR\000"
 5859      454D5200 
 5860              	.LASF197:
 5861 0082 4144435F 		.ascii	"ADC_ISR\000"
 5861      49535200 
 5862              	.LASF332:
 5863 008a 5F737461 		.ascii	"_state\000"
 5863      746500
 5864              	.LASF24:
 5865 0091 5F5F746D 		.ascii	"__tm\000"
 5865      00
 5866              	.LASF112:
 5867 0096 5F776373 		.ascii	"_wcsrtombs_state\000"
 5867      72746F6D 
 5867      62735F73 
 5867      74617465 
 5867      00
 5868              	.LASF80:
 5869 00a7 5F6E6275 		.ascii	"_nbuf\000"
 5869      6600
 5870              	.LASF25:
 5871 00ad 5F5F746D 		.ascii	"__tm_sec\000"
 5871      5F736563 
ARM GAS  /tmp/ccsPeR2V.s 			page 140


 5871      00
 5872              	.LASF106:
 5873 00b6 5F6C3634 		.ascii	"_l64a_buf\000"
 5873      615F6275 
 5873      6600
 5874              	.LASF173:
 5875 00c0 56544F52 		.ascii	"VTOR\000"
 5875      00
 5876              	.LASF269:
 5877 00c5 50574D5F 		.ascii	"PWM_TCR\000"
 5877      54435200 
 5878              	.LASF322:
 5879 00cd 73746174 		.ascii	"state\000"
 5879      6500
 5880              	.LASF83:
 5881 00d3 5F6C6F63 		.ascii	"_lock\000"
 5881      6B00
 5882              	.LASF259:
 5883 00d9 50574D5F 		.ascii	"PWM_FCR\000"
 5883      46435200 
 5884              	.LASF299:
 5885 00e1 54435F46 		.ascii	"TC_FMR\000"
 5885      4D5200
 5886              	.LASF205:
 5887 00e8 52657365 		.ascii	"Reserved3\000"
 5887      72766564 
 5887      3300
 5888              	.LASF278:
 5889 00f2 52657365 		.ascii	"Reserved7\000"
 5889      72766564 
 5889      3700
 5890              	.LASF93:
 5891 00fc 5F6D756C 		.ascii	"_mult\000"
 5891      7400
 5892              	.LASF211:
 5893 0102 4144435F 		.ascii	"ADC_RPR\000"
 5893      52505200 
 5894              	.LASF126:
 5895 010a 52535443 		.ascii	"RSTC_IRQn\000"
 5895      5F495251 
 5895      6E00
 5896              	.LASF215:
 5897 0114 4144435F 		.ascii	"ADC_RNPR\000"
 5897      524E5052 
 5897      00
 5898              	.LASF164:
 5899 011d 49435052 		.ascii	"ICPR\000"
 5899      00
 5900              	.LASF297:
 5901 0122 54435F51 		.ascii	"TC_QIMR\000"
 5901      494D5200 
 5902              	.LASF217:
 5903 012a 4144435F 		.ascii	"ADC_TNPR\000"
 5903      544E5052 
 5903      00
 5904              	.LASF271:
 5905 0133 50574D5F 		.ascii	"PWM_RNCR\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 141


 5905      524E4352 
 5905      00
 5906              	.LASF11:
 5907 013c 5F5F7763 		.ascii	"__wch\000"
 5907      6800
 5908              	.LASF292:
 5909 0142 54435F43 		.ascii	"TC_CHANNEL\000"
 5909      48414E4E 
 5909      454C00
 5910              	.LASF209:
 5911 014d 4144435F 		.ascii	"ADC_WPSR\000"
 5911      57505352 
 5911      00
 5912              	.LASF71:
 5913 0156 5F66696C 		.ascii	"_file\000"
 5913      6500
 5914              	.LASF34:
 5915 015c 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5915      65786974 
 5915      5F617267 
 5915      7300
 5916              	.LASF174:
 5917 016a 41495243 		.ascii	"AIRCR\000"
 5917      5200
 5918              	.LASF314:
 5919 0170 74726973 		.ascii	"tristate\000"
 5919      74617465 
 5919      00
 5920              	.LASF336:
 5921 0179 72656C65 		.ascii	"releasetime\000"
 5921      61736574 
 5921      696D6500 
 5922              	.LASF154:
 5923 0185 43524343 		.ascii	"CRCCU_IRQn\000"
 5923      555F4952 
 5923      516E00
 5924              	.LASF306:
 5925 0190 52414D50 		.ascii	"RAMP\000"
 5925      00
 5926              	.LASF280:
 5927 0195 54435F43 		.ascii	"TC_CCR\000"
 5927      435200
 5928              	.LASF108:
 5929 019c 5F6D6272 		.ascii	"_mbrlen_state\000"
 5929      6C656E5F 
 5929      73746174 
 5929      6500
 5930              	.LASF7:
 5931 01aa 6C6F6E67 		.ascii	"long int\000"
 5931      20696E74 
 5931      00
 5932              	.LASF330:
 5933 01b3 5F696D70 		.ascii	"_impure_ptr\000"
 5933      7572655F 
 5933      70747200 
 5934              	.LASF98:
 5935 01bf 5F726573 		.ascii	"_result_k\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 142


 5935      756C745F 
 5935      6B00
 5936              	.LASF226:
 5937 01c9 50574D5F 		.ascii	"PWM_CCNT\000"
 5937      43434E54 
 5937      00
 5938              	.LASF45:
 5939 01d2 5F73697A 		.ascii	"_size\000"
 5939      6500
 5940              	.LASF171:
 5941 01d8 43505549 		.ascii	"CPUID\000"
 5941      4400
 5942              	.LASF61:
 5943 01de 5F6C6F63 		.ascii	"_localtime_buf\000"
 5943      616C7469 
 5943      6D655F62 
 5943      756600
 5944              	.LASF213:
 5945 01ed 4144435F 		.ascii	"ADC_TPR\000"
 5945      54505200 
 5946              	.LASF323:
 5947 01f5 6D61696E 		.ascii	"main\000"
 5947      00
 5948              	.LASF319:
 5949 01fa 4952516E 		.ascii	"IRQn\000"
 5949      00
 5950              	.LASF150:
 5951 01ff 5443355F 		.ascii	"TC5_IRQn\000"
 5951      4952516E 
 5951      00
 5952              	.LASF29:
 5953 0208 5F5F746D 		.ascii	"__tm_mon\000"
 5953      5F6D6F6E 
 5953      00
 5954              	.LASF318:
 5955 0211 4E564943 		.ascii	"NVIC_SetPriority\000"
 5955      5F536574 
 5955      5072696F 
 5955      72697479 
 5955      00
 5956              	.LASF101:
 5957 0222 5F6D6973 		.ascii	"_misc_reent\000"
 5957      635F7265 
 5957      656E7400 
 5958              	.LASF124:
 5959 022e 53797354 		.ascii	"SysTick_IRQn\000"
 5959      69636B5F 
 5959      4952516E 
 5959      00
 5960              	.LASF54:
 5961 023b 5F637572 		.ascii	"_current_category\000"
 5961      72656E74 
 5961      5F636174 
 5961      65676F72 
 5961      7900
 5962              	.LASF172:
 5963 024d 49435352 		.ascii	"ICSR\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 143


 5963      00
 5964              	.LASF0:
 5965 0252 7369676E 		.ascii	"signed char\000"
 5965      65642063 
 5965      68617200 
 5966              	.LASF113:
 5967 025e 75696E74 		.ascii	"uint8_t\000"
 5967      385F7400 
 5968              	.LASF252:
 5969 0266 50574D5F 		.ascii	"PWM_OS\000"
 5969      4F5300
 5970              	.LASF326:
 5971 026d 74696D65 		.ascii	"timestamp\000"
 5971      7374616D 
 5971      7000
 5972              	.LASF291:
 5973 0277 54634368 		.ascii	"TcChannel\000"
 5973      616E6E65 
 5973      6C00
 5974              	.LASF263:
 5975 0281 50574D5F 		.ascii	"PWM_SMMR\000"
 5975      534D4D52 
 5975      00
 5976              	.LASF159:
 5977 028a 52455345 		.ascii	"RESERVED0\000"
 5977      52564544 
 5977      3000
 5978              	.LASF1:
 5979 0294 756E7369 		.ascii	"unsigned char\000"
 5979      676E6564 
 5979      20636861 
 5979      7200
 5980              	.LASF165:
 5981 02a2 52455345 		.ascii	"RESERVED3\000"
 5981      52564544 
 5981      3300
 5982              	.LASF167:
 5983 02ac 52455345 		.ascii	"RESERVED4\000"
 5983      52564544 
 5983      3400
 5984              	.LASF168:
 5985 02b6 52455345 		.ascii	"RESERVED5\000"
 5985      52564544 
 5985      3500
 5986              	.LASF261:
 5987 02c0 50574D5F 		.ascii	"PWM_FPE\000"
 5987      46504500 
 5988              	.LASF236:
 5989 02c8 50574D5F 		.ascii	"PWM_ENA\000"
 5989      454E4100 
 5990              	.LASF166:
 5991 02d0 49414252 		.ascii	"IABR\000"
 5991      00
 5992              	.LASF309:
 5993 02d5 6374726C 		.ascii	"ctrl\000"
 5993      00
 5994              	.LASF341:
ARM GAS  /tmp/ccsPeR2V.s 			page 144


 5995 02da 5F5F4655 		.ascii	"__FUNCTION__\000"
 5995      4E435449 
 5995      4F4E5F5F 
 5995      00
 5996              	.LASF46:
 5997 02e7 5F726565 		.ascii	"_reent\000"
 5997      6E7400
 5998              	.LASF260:
 5999 02ee 50574D5F 		.ascii	"PWM_FPV\000"
 5999      46505600 
 6000              	.LASF301:
 6001 02f6 5744545F 		.ascii	"WDT_CR\000"
 6001      435200
 6002              	.LASF163:
 6003 02fd 52455345 		.ascii	"RESERVED2\000"
 6003      52564544 
 6003      3200
 6004              	.LASF120:
 6005 0307 55736167 		.ascii	"UsageFault_IRQn\000"
 6005      65466175 
 6005      6C745F49 
 6005      52516E00 
 6006              	.LASF284:
 6007 0317 54435F52 		.ascii	"TC_RA\000"
 6007      4100
 6008              	.LASF285:
 6009 031d 54435F52 		.ascii	"TC_RB\000"
 6009      4200
 6010              	.LASF286:
 6011 0323 54435F52 		.ascii	"TC_RC\000"
 6011      4300
 6012              	.LASF86:
 6013 0329 63686172 		.ascii	"char\000"
 6013      00
 6014              	.LASF41:
 6015 032e 5F666E73 		.ascii	"_fns\000"
 6015      00
 6016              	.LASF313:
 6017 0333 6F757470 		.ascii	"output\000"
 6017      757400
 6018              	.LASF184:
 6019 033a 5343425F 		.ascii	"SCB_Type\000"
 6019      54797065 
 6019      00
 6020              	.LASF294:
 6021 0343 54435F42 		.ascii	"TC_BMR\000"
 6021      4D5200
 6022              	.LASF78:
 6023 034a 5F636C6F 		.ascii	"_close\000"
 6023      736500
 6024              	.LASF178:
 6025 0351 44465352 		.ascii	"DFSR\000"
 6025      00
 6026              	.LASF134:
 6027 0356 534D435F 		.ascii	"SMC_IRQn\000"
 6027      4952516E 
 6027      00
ARM GAS  /tmp/ccsPeR2V.s 			page 145


 6028              	.LASF272:
 6029 035f 50574D5F 		.ascii	"PWM_TNPR\000"
 6029      544E5052 
 6029      00
 6030              	.LASF251:
 6031 0368 50574D5F 		.ascii	"PWM_OOV\000"
 6031      4F4F5600 
 6032              	.LASF298:
 6033 0370 54435F51 		.ascii	"TC_QISR\000"
 6033      49535200 
 6034              	.LASF229:
 6035 0378 50776D43 		.ascii	"PwmCh_num\000"
 6035      685F6E75 
 6035      6D00
 6036              	.LASF48:
 6037 0382 5F737464 		.ascii	"_stdin\000"
 6037      696E00
 6038              	.LASF311:
 6039 0389 72536C6F 		.ascii	"rSlope\000"
 6039      706500
 6040              	.LASF335:
 6041 0390 72747269 		.ascii	"rtrip\000"
 6041      7000
 6042              	.LASF177:
 6043 0396 48465352 		.ascii	"HFSR\000"
 6043      00
 6044              	.LASF246:
 6045 039b 50574D5F 		.ascii	"PWM_SCUPUPD\000"
 6045      53435550 
 6045      55504400 
 6046              	.LASF287:
 6047 03a7 54435F53 		.ascii	"TC_SR\000"
 6047      5200
 6048              	.LASF275:
 6049 03ad 50574D5F 		.ascii	"PWM_PTSR\000"
 6049      50545352 
 6049      00
 6050              	.LASF241:
 6051 03b6 50574D5F 		.ascii	"PWM_IMR1\000"
 6051      494D5231 
 6051      00
 6052              	.LASF249:
 6053 03bf 50574D5F 		.ascii	"PWM_IMR2\000"
 6053      494D5232 
 6053      00
 6054              	.LASF153:
 6055 03c8 50574D5F 		.ascii	"PWM_IRQn\000"
 6055      4952516E 
 6055      00
 6056              	.LASF162:
 6057 03d1 49535052 		.ascii	"ISPR\000"
 6057      00
 6058              	.LASF268:
 6059 03d6 50574D5F 		.ascii	"PWM_TPR\000"
 6059      54505200 
 6060              	.LASF316:
 6061 03de 696E7075 		.ascii	"input\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 146


 6061      7400
 6062              	.LASF212:
 6063 03e4 4144435F 		.ascii	"ADC_RCR\000"
 6063      52435200 
 6064              	.LASF238:
 6065 03ec 50574D5F 		.ascii	"PWM_SR\000"
 6065      535200
 6066              	.LASF175:
 6067 03f3 53484353 		.ascii	"SHCSR\000"
 6067      5200
 6068              	.LASF204:
 6069 03f9 4144435F 		.ascii	"ADC_CDR\000"
 6069      43445200 
 6070              	.LASF169:
 6071 0401 53544952 		.ascii	"STIR\000"
 6071      00
 6072              	.LASF155:
 6073 0406 4143435F 		.ascii	"ACC_IRQn\000"
 6073      4952516E 
 6073      00
 6074              	.LASF74:
 6075 040f 5F636F6F 		.ascii	"_cookie\000"
 6075      6B696500 
 6076              	.LASF22:
 6077 0417 5F776473 		.ascii	"_wds\000"
 6077      00
 6078              	.LASF130:
 6079 041c 504D435F 		.ascii	"PMC_IRQn\000"
 6079      4952516E 
 6079      00
 6080              	.LASF131:
 6081 0425 4546435F 		.ascii	"EFC_IRQn\000"
 6081      4952516E 
 6081      00
 6082              	.LASF63:
 6083 042e 5F736967 		.ascii	"_sig_func\000"
 6083      5F66756E 
 6083      6300
 6084              	.LASF82:
 6085 0438 5F6F6666 		.ascii	"_offset\000"
 6085      73657400 
 6086              	.LASF59:
 6087 0440 5F637674 		.ascii	"_cvtbuf\000"
 6087      62756600 
 6088              	.LASF125:
 6089 0448 53555043 		.ascii	"SUPC_IRQn\000"
 6089      5F495251 
 6089      6E00
 6090              	.LASF289:
 6091 0452 54435F49 		.ascii	"TC_IDR\000"
 6091      445200
 6092              	.LASF146:
 6093 0459 5443315F 		.ascii	"TC1_IRQn\000"
 6093      4952516E 
 6093      00
 6094              	.LASF137:
 6095 0462 50494F43 		.ascii	"PIOC_IRQn\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 147


 6095      5F495251 
 6095      6E00
 6096              	.LASF327:
 6097 046c 4144435F 		.ascii	"ADC_IrqHandler\000"
 6097      49727148 
 6097      616E646C 
 6097      657200
 6098              	.LASF220:
 6099 047b 4144435F 		.ascii	"ADC_PTSR\000"
 6099      50545352 
 6099      00
 6100              	.LASF128:
 6101 0484 5254545F 		.ascii	"RTT_IRQn\000"
 6101      4952516E 
 6101      00
 6102              	.LASF156:
 6103 048d 5544505F 		.ascii	"UDP_IRQn\000"
 6103      4952516E 
 6103      00
 6104              	.LASF152:
 6105 0496 44414343 		.ascii	"DACC_IRQn\000"
 6105      5F495251 
 6105      6E00
 6106              	.LASF117:
 6107 04a0 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6107      61736B61 
 6107      626C6549 
 6107      6E745F49 
 6107      52516E00 
 6108              	.LASF257:
 6109 04b4 50574D5F 		.ascii	"PWM_FMR\000"
 6109      464D5200 
 6110              	.LASF254:
 6111 04bc 50574D5F 		.ascii	"PWM_OSC\000"
 6111      4F534300 
 6112              	.LASF191:
 6113 04c4 4144435F 		.ascii	"ADC_CHSR\000"
 6113      43485352 
 6113      00
 6114              	.LASF99:
 6115 04cd 5F703573 		.ascii	"_p5s\000"
 6115      00
 6116              	.LASF18:
 6117 04d2 6C6F6E67 		.ascii	"long unsigned int\000"
 6117      20756E73 
 6117      69676E65 
 6117      6420696E 
 6117      7400
 6118              	.LASF253:
 6119 04e4 50574D5F 		.ascii	"PWM_OSS\000"
 6119      4F535300 
 6120              	.LASF231:
 6121 04ec 50574D5F 		.ascii	"PWM_CMPxVUPD\000"
 6121      434D5078 
 6121      56555044 
 6121      00
 6122              	.LASF118:
ARM GAS  /tmp/ccsPeR2V.s 			page 148


 6123 04f9 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 6123      72794D61 
 6123      6E616765 
 6123      6D656E74 
 6123      5F495251 
 6124              	.LASF288:
 6125 050f 54435F49 		.ascii	"TC_IER\000"
 6125      455200
 6126              	.LASF69:
 6127 0516 5F5F7346 		.ascii	"__sFILE\000"
 6127      494C4500 
 6128              	.LASF53:
 6129 051e 5F5F7364 		.ascii	"__sdidinit\000"
 6129      6964696E 
 6129      697400
 6130              	.LASF85:
 6131 0529 5F666C61 		.ascii	"_flags2\000"
 6131      67733200 
 6132              	.LASF273:
 6133 0531 50574D5F 		.ascii	"PWM_TNCR\000"
 6133      544E4352 
 6133      00
 6134              	.LASF157:
 6135 053a 4952516E 		.ascii	"IRQn_Type\000"
 6135      5F547970 
 6135      6500
 6136              	.LASF325:
 6137 0544 6C696E65 		.ascii	"line\000"
 6137      00
 6138              	.LASF8:
 6139 0549 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 6139      4B5F5245 
 6139      43555253 
 6139      4956455F 
 6139      5400
 6140              	.LASF47:
 6141 055b 5F657272 		.ascii	"_errno\000"
 6141      6E6F00
 6142              	.LASF202:
 6143 0562 4144435F 		.ascii	"ADC_CGR\000"
 6143      43475200 
 6144              	.LASF68:
 6145 056a 5F736967 		.ascii	"_signal_buf\000"
 6145      6E616C5F 
 6145      62756600 
 6146              	.LASF315:
 6147 0576 74726970 		.ascii	"trip\000"
 6147      00
 6148              	.LASF186:
 6149 057b 4144435F 		.ascii	"ADC_MR\000"
 6149      4D5200
 6150              	.LASF193:
 6151 0582 4144435F 		.ascii	"ADC_LCDR\000"
 6151      4C434452 
 6151      00
 6152              	.LASF304:
 6153 058b 6374726C 		.ascii	"ctrlio_t\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 149


 6153      696F5F74 
 6153      00
 6154              	.LASF129:
 6155 0594 5744545F 		.ascii	"WDT_IRQn\000"
 6155      4952516E 
 6155      00
 6156              	.LASF23:
 6157 059d 5F426967 		.ascii	"_Bigint\000"
 6157      696E7400 
 6158              	.LASF245:
 6159 05a5 50574D5F 		.ascii	"PWM_SCUP\000"
 6159      53435550 
 6159      00
 6160              	.LASF20:
 6161 05ae 5F6D6178 		.ascii	"_maxwds\000"
 6161      77647300 
 6162              	.LASF324:
 6163 05b6 61726776 		.ascii	"argv\000"
 6163      00
 6164              	.LASF56:
 6165 05bb 5F5F636C 		.ascii	"__cleanup\000"
 6165      65616E75 
 6165      7000
 6166              	.LASF119:
 6167 05c5 42757346 		.ascii	"BusFault_IRQn\000"
 6167      61756C74 
 6167      5F495251 
 6167      6E00
 6168              	.LASF281:
 6169 05d3 54435F43 		.ascii	"TC_CMR\000"
 6169      4D5200
 6170              	.LASF64:
 6171 05da 5F617465 		.ascii	"_atexit0\000"
 6171      78697430 
 6171      00
 6172              	.LASF52:
 6173 05e3 5F656D65 		.ascii	"_emergency\000"
 6173      7267656E 
 6173      637900
 6174              	.LASF5:
 6175 05ee 6C6F6E67 		.ascii	"long long int\000"
 6175      206C6F6E 
 6175      6720696E 
 6175      7400
 6176              	.LASF267:
 6177 05fc 50574D5F 		.ascii	"PWM_RCR\000"
 6177      52435200 
 6178              	.LASF42:
 6179 0604 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 6179      65786974 
 6179      5F617267 
 6179      735F7074 
 6179      7200
 6180              	.LASF240:
 6181 0616 50574D5F 		.ascii	"PWM_IDR1\000"
 6181      49445231 
 6181      00
ARM GAS  /tmp/ccsPeR2V.s 			page 150


 6182              	.LASF248:
 6183 061f 50574D5F 		.ascii	"PWM_IDR2\000"
 6183      49445232 
 6183      00
 6184              	.LASF223:
 6185 0628 50574D5F 		.ascii	"PWM_CDTYUPD\000"
 6185      43445459 
 6185      55504400 
 6186              	.LASF89:
 6187 0634 5F6E696F 		.ascii	"_niobs\000"
 6187      627300
 6188              	.LASF142:
 6189 063b 54574931 		.ascii	"TWI1_IRQn\000"
 6189      5F495251 
 6189      6E00
 6190              	.LASF65:
 6191 0645 5F5F7367 		.ascii	"__sglue\000"
 6191      6C756500 
 6192              	.LASF264:
 6193 064d 50574D5F 		.ascii	"PWM_WPCR\000"
 6193      57504352 
 6193      00
 6194              	.LASF279:
 6195 0656 50574D5F 		.ascii	"PWM_CH_NUM\000"
 6195      43485F4E 
 6195      554D00
 6196              	.LASF338:
 6197 0661 6D61696E 		.ascii	"main.c\000"
 6197      2E6300
 6198              	.LASF121:
 6199 0668 53564361 		.ascii	"SVCall_IRQn\000"
 6199      6C6C5F49 
 6199      52516E00 
 6200              	.LASF57:
 6201 0674 5F67616D 		.ascii	"_gamma_signgam\000"
 6201      6D615F73 
 6201      69676E67 
 6201      616D00
 6202              	.LASF308:
 6203 0683 6374726C 		.ascii	"ctrlmode_t\000"
 6203      6D6F6465 
 6203      5F7400
 6204              	.LASF242:
 6205 068e 50574D5F 		.ascii	"PWM_ISR1\000"
 6205      49535231 
 6205      00
 6206              	.LASF250:
 6207 0697 50574D5F 		.ascii	"PWM_ISR2\000"
 6207      49535232 
 6207      00
 6208              	.LASF55:
 6209 06a0 5F637572 		.ascii	"_current_locale\000"
 6209      72656E74 
 6209      5F6C6F63 
 6209      616C6500 
 6210              	.LASF100:
 6211 06b0 5F667265 		.ascii	"_freelist\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 151


 6211      656C6973 
 6211      7400
 6212              	.LASF90:
 6213 06ba 5F696F62 		.ascii	"_iobs\000"
 6213      7300
 6214              	.LASF88:
 6215 06c0 5F676C75 		.ascii	"_glue\000"
 6215      6500
 6216              	.LASF331:
 6217 06c6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6217      52784275 
 6217      66666572 
 6217      00
 6218              	.LASF21:
 6219 06d3 5F736967 		.ascii	"_sign\000"
 6219      6E00
 6220              	.LASF312:
 6221 06d9 5F646478 		.ascii	"_ddx\000"
 6221      00
 6222              	.LASF307:
 6223 06de 53544F50 		.ascii	"STOP\000"
 6223      00
 6224              	.LASF195:
 6225 06e3 4144435F 		.ascii	"ADC_IDR\000"
 6225      49445200 
 6226              	.LASF222:
 6227 06eb 50574D5F 		.ascii	"PWM_CDTY\000"
 6227      43445459 
 6227      00
 6228              	.LASF4:
 6229 06f4 756E7369 		.ascii	"unsigned int\000"
 6229      676E6564 
 6229      20696E74 
 6229      00
 6230              	.LASF149:
 6231 0701 5443345F 		.ascii	"TC4_IRQn\000"
 6231      4952516E 
 6231      00
 6232              	.LASF141:
 6233 070a 54574930 		.ascii	"TWI0_IRQn\000"
 6233      5F495251 
 6233      6E00
 6234              	.LASF302:
 6235 0714 5744545F 		.ascii	"WDT_MR\000"
 6235      4D5200
 6236              	.LASF111:
 6237 071b 5F776372 		.ascii	"_wcrtomb_state\000"
 6237      746F6D62 
 6237      5F737461 
 6237      746500
 6238              	.LASF28:
 6239 072a 5F5F746D 		.ascii	"__tm_mday\000"
 6239      5F6D6461 
 6239      7900
 6240              	.LASF194:
 6241 0734 4144435F 		.ascii	"ADC_IER\000"
 6241      49455200 
ARM GAS  /tmp/ccsPeR2V.s 			page 152


 6242              	.LASF79:
 6243 073c 5F756275 		.ascii	"_ubuf\000"
 6243      6600
 6244              	.LASF256:
 6245 0742 50574D5F 		.ascii	"PWM_OSCUPD\000"
 6245      4F534355 
 6245      504400
 6246              	.LASF50:
 6247 074d 5F737464 		.ascii	"_stderr\000"
 6247      65727200 
 6248              	.LASF104:
 6249 0755 5F776374 		.ascii	"_wctomb_state\000"
 6249      6F6D625F 
 6249      73746174 
 6249      6500
 6250              	.LASF84:
 6251 0763 5F6D6273 		.ascii	"_mbstate\000"
 6251      74617465 
 6251      00
 6252              	.LASF95:
 6253 076c 5F72616E 		.ascii	"_rand_next\000"
 6253      645F6E65 
 6253      787400
 6254              	.LASF70:
 6255 0777 5F666C61 		.ascii	"_flags\000"
 6255      677300
 6256              	.LASF258:
 6257 077e 50574D5F 		.ascii	"PWM_FSR\000"
 6257      46535200 
 6258              	.LASF39:
 6259 0786 5F617465 		.ascii	"_atexit\000"
 6259      78697400 
 6260              	.LASF13:
 6261 078e 5F5F636F 		.ascii	"__count\000"
 6261      756E7400 
 6262              	.LASF305:
 6263 0796 4E4F524D 		.ascii	"NORMAL\000"
 6263      414C00
 6264              	.LASF31:
 6265 079d 5F5F746D 		.ascii	"__tm_wday\000"
 6265      5F776461 
 6265      7900
 6266              	.LASF32:
 6267 07a7 5F5F746D 		.ascii	"__tm_yday\000"
 6267      5F796461 
 6267      7900
 6268              	.LASF92:
 6269 07b1 5F736565 		.ascii	"_seed\000"
 6269      6400
 6270              	.LASF77:
 6271 07b7 5F736565 		.ascii	"_seek\000"
 6271      6B00
 6272              	.LASF133:
 6273 07bd 55415254 		.ascii	"UART1_IRQn\000"
 6273      315F4952 
 6273      516E00
 6274              	.LASF334:
ARM GAS  /tmp/ccsPeR2V.s 			page 153


 6275 07c8 6E747269 		.ascii	"ntrip\000"
 6275      7000
 6276              	.LASF9:
 6277 07ce 5F66706F 		.ascii	"_fpos_t\000"
 6277      735F7400 
 6278              	.LASF12:
 6279 07d6 5F5F7763 		.ascii	"__wchb\000"
 6279      686200
 6280              	.LASF216:
 6281 07dd 4144435F 		.ascii	"ADC_RNCR\000"
 6281      524E4352 
 6281      00
 6282              	.LASF255:
 6283 07e6 50574D5F 		.ascii	"PWM_OSSUPD\000"
 6283      4F535355 
 6283      504400
 6284              	.LASF180:
 6285 07f1 42464152 		.ascii	"BFAR\000"
 6285      00
 6286              	.LASF105:
 6287 07f6 5F6D6274 		.ascii	"_mbtowc_state\000"
 6287      6F77635F 
 6287      73746174 
 6287      6500
 6288              	.LASF218:
 6289 0804 4144435F 		.ascii	"ADC_TNCR\000"
 6289      544E4352 
 6289      00
 6290              	.LASF290:
 6291 080d 54435F49 		.ascii	"TC_IMR\000"
 6291      4D5200
 6292              	.LASF6:
 6293 0814 6C6F6E67 		.ascii	"long long unsigned int\000"
 6293      206C6F6E 
 6293      6720756E 
 6293      7369676E 
 6293      65642069 
 6294              	.LASF243:
 6295 082b 50574D5F 		.ascii	"PWM_SCM\000"
 6295      53434D00 
 6296              	.LASF115:
 6297 0833 75696E74 		.ascii	"uint16_t\000"
 6297      31365F74 
 6297      00
 6298              	.LASF36:
 6299 083c 5F64736F 		.ascii	"_dso_handle\000"
 6299      5F68616E 
 6299      646C6500 
 6300              	.LASF247:
 6301 0848 50574D5F 		.ascii	"PWM_IER2\000"
 6301      49455232 
 6301      00
 6302              	.LASF91:
 6303 0851 5F72616E 		.ascii	"_rand48\000"
 6303      64343800 
 6304              	.LASF203:
 6305 0859 4144435F 		.ascii	"ADC_COR\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 154


 6305      434F5200 
 6306              	.LASF140:
 6307 0861 48534D43 		.ascii	"HSMCI_IRQn\000"
 6307      495F4952 
 6307      516E00
 6308              	.LASF49:
 6309 086c 5F737464 		.ascii	"_stdout\000"
 6309      6F757400 
 6310              	.LASF139:
 6311 0874 55534152 		.ascii	"USART1_IRQn\000"
 6311      54315F49 
 6311      52516E00 
 6312              	.LASF81:
 6313 0880 5F626C6B 		.ascii	"_blksize\000"
 6313      73697A65 
 6313      00
 6314              	.LASF44:
 6315 0889 5F626173 		.ascii	"_base\000"
 6315      6500
 6316              	.LASF342:
 6317 088f 5443315F 		.ascii	"TC1_IrqHandler\000"
 6317      49727148 
 6317      616E646C 
 6317      657200
 6318              	.LASF102:
 6319 089e 5F737472 		.ascii	"_strtok_last\000"
 6319      746F6B5F 
 6319      6C617374 
 6319      00
 6320              	.LASF151:
 6321 08ab 4144435F 		.ascii	"ADC_IRQn\000"
 6321      4952516E 
 6321      00
 6322              	.LASF109:
 6323 08b4 5F6D6272 		.ascii	"_mbrtowc_state\000"
 6323      746F7763 
 6323      5F737461 
 6323      746500
 6324              	.LASF262:
 6325 08c3 50574D5F 		.ascii	"PWM_ELxMR\000"
 6325      454C784D 
 6325      5200
 6326              	.LASF214:
 6327 08cd 4144435F 		.ascii	"ADC_TCR\000"
 6327      54435200 
 6328              	.LASF160:
 6329 08d5 49434552 		.ascii	"ICER\000"
 6329      00
 6330              	.LASF16:
 6331 08da 5F666C6F 		.ascii	"_flock_t\000"
 6331      636B5F74 
 6331      00
 6332              	.LASF321:
 6333 08e3 7463636C 		.ascii	"tcclks\000"
 6333      6B7300
 6334              	.LASF87:
 6335 08ea 5F5F4649 		.ascii	"__FILE\000"
ARM GAS  /tmp/ccsPeR2V.s 			page 155


 6335      4C4500
 6336              	.LASF15:
 6337 08f1 5F6D6273 		.ascii	"_mbstate_t\000"
 6337      74617465 
 6337      5F7400
 6338              	.LASF132:
 6339 08fc 55415254 		.ascii	"UART0_IRQn\000"
 6339      305F4952 
 6339      516E00
 6340              	.LASF60:
 6341 0907 5F723438 		.ascii	"_r48\000"
 6341      00
 6342              	.LASF235:
 6343 090c 50574D5F 		.ascii	"PWM_CLK\000"
 6343      434C4B00 
 6344              	.LASF10:
 6345 0914 77696E74 		.ascii	"wint_t\000"
 6345      5F7400
 6346              	.LASF181:
 6347 091b 41465352 		.ascii	"AFSR\000"
 6347      00
 6348              	.LASF187:
 6349 0920 4144435F 		.ascii	"ADC_SEQR1\000"
 6349      53455152 
 6349      3100
 6350              	.LASF188:
 6351 092a 4144435F 		.ascii	"ADC_SEQR2\000"
 6351      53455152 
 6351      3200
 6352              	.LASF19:
 6353 0934 5F6E6578 		.ascii	"_next\000"
 6353      7400
 6354              	.LASF73:
 6355 093a 5F646174 		.ascii	"_data\000"
 6355      6100
 6356              	.LASF234:
 6357 0940 50776D43 		.ascii	"PwmCmp\000"
 6357      6D7000
 6358              	.LASF143:
 6359 0947 5350495F 		.ascii	"SPI_IRQn\000"
 6359      4952516E 
 6359      00
 6360              	.LASF340:
 6361 0950 696E6974 		.ascii	"init\000"
 6361      00
 6362              	.LASF138:
 6363 0955 55534152 		.ascii	"USART0_IRQn\000"
 6363      54305F49 
 6363      52516E00 
 6364              	.LASF192:
 6365 0961 52657365 		.ascii	"Reserved1\000"
 6365      72766564 
 6365      3100
 6366              	.LASF198:
 6367 096b 52657365 		.ascii	"Reserved2\000"
 6367      72766564 
 6367      3200
ARM GAS  /tmp/ccsPeR2V.s 			page 156


 6368              	.LASF176:
 6369 0975 43465352 		.ascii	"CFSR\000"
 6369      00
 6370              	.LASF207:
 6371 097a 52657365 		.ascii	"Reserved4\000"
 6371      72766564 
 6371      3400
 6372              	.LASF210:
 6373 0984 52657365 		.ascii	"Reserved5\000"
 6373      72766564 
 6373      3500
 6374              	.LASF276:
 6375 098e 52657365 		.ascii	"Reserved6\000"
 6375      72766564 
 6375      3600
 6376              	.LASF145:
 6377 0998 5443305F 		.ascii	"TC0_IRQn\000"
 6377      4952516E 
 6377      00
 6378              	.LASF303:
 6379 09a1 5744545F 		.ascii	"WDT_SR\000"
 6379      535200
 6380              	.LASF136:
 6381 09a8 50494F42 		.ascii	"PIOB_IRQn\000"
 6381      5F495251 
 6381      6E00
 6382              	.LASF283:
 6383 09b2 54435F43 		.ascii	"TC_CV\000"
 6383      5600
 6384              	.LASF274:
 6385 09b8 50574D5F 		.ascii	"PWM_PTCR\000"
 6385      50544352 
 6385      00
 6386              	.LASF333:
 6387 09c1 6C6F6F70 		.ascii	"loop\000"
 6387      00
 6388              	.LASF122:
 6389 09c6 44656275 		.ascii	"DebugMonitor_IRQn\000"
 6389      674D6F6E 
 6389      69746F72 
 6389      5F495251 
 6389      6E00
 6390              	.LASF339:
 6391 09d8 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 6391      652F6D6F 
 6391      2F646F63 
 6391      2F737475 
 6391      6469756D 
 6392              	.LASF296:
 6393 0a07 54435F51 		.ascii	"TC_QIDR\000"
 6393      49445200 
 6394              	.LASF277:
 6395 0a0f 50574D5F 		.ascii	"PWM_CMP\000"
 6395      434D5000 
 6396              	.LASF221:
 6397 0a17 50574D5F 		.ascii	"PWM_CMR\000"
 6397      434D5200 
ARM GAS  /tmp/ccsPeR2V.s 			page 157


 6398              	.LASF182:
 6399 0a1f 4D4D4652 		.ascii	"MMFR\000"
 6399      00
 6400              	.LASF179:
 6401 0a24 4D4D4641 		.ascii	"MMFAR\000"
 6401      5200
 6402              	.LASF103:
 6403 0a2a 5F6D626C 		.ascii	"_mblen_state\000"
 6403      656E5F73 
 6403      74617465 
 6403      00
 6404              	.LASF2:
 6405 0a37 73686F72 		.ascii	"short int\000"
 6405      7420696E 
 6405      7400
 6406              	.LASF310:
 6407 0a41 6D6F6465 		.ascii	"mode\000"
 6407      00
 6408              	.LASF320:
 6409 0a46 7072696F 		.ascii	"priority\000"
 6409      72697479 
 6409      00
 6410              	.LASF114:
 6411 0a4f 696E7431 		.ascii	"int16_t\000"
 6411      365F7400 
 6412              	.LASF295:
 6413 0a57 54435F51 		.ascii	"TC_QIER\000"
 6413      49455200 
 6414              	.LASF183:
 6415 0a5f 49534152 		.ascii	"ISAR\000"
 6415      00
 6416              	.LASF199:
 6417 0a64 4144435F 		.ascii	"ADC_OVER\000"
 6417      4F564552 
 6417      00
 6418              	.LASF37:
 6419 0a6d 5F666E74 		.ascii	"_fntypes\000"
 6419      79706573 
 6419      00
 6420              	.LASF135:
 6421 0a76 50494F41 		.ascii	"PIOA_IRQn\000"
 6421      5F495251 
 6421      6E00
 6422              	.LASF227:
 6423 0a80 50574D5F 		.ascii	"PWM_DT\000"
 6423      445400
 6424              	.LASF30:
 6425 0a87 5F5F746D 		.ascii	"__tm_year\000"
 6425      5F796561 
 6425      7200
 6426              	.LASF196:
 6427 0a91 4144435F 		.ascii	"ADC_IMR\000"
 6427      494D5200 
 6428              	.LASF185:
 6429 0a99 4144435F 		.ascii	"ADC_CR\000"
 6429      435200
 6430              	.LASF72:
ARM GAS  /tmp/ccsPeR2V.s 			page 158


 6431 0aa0 5F6C6266 		.ascii	"_lbfsize\000"
 6431      73697A65 
 6431      00
 6432              	.LASF51:
 6433 0aa9 5F696E63 		.ascii	"_inc\000"
 6433      00
 6434              	.LASF40:
 6435 0aae 5F696E64 		.ascii	"_ind\000"
 6435      00
 6436              	.LASF219:
 6437 0ab3 4144435F 		.ascii	"ADC_PTCR\000"
 6437      50544352 
 6437      00
 6438              	.LASF300:
 6439 0abc 54435F57 		.ascii	"TC_WPMR\000"
 6439      504D5200 
 6440              	.LASF237:
 6441 0ac4 50574D5F 		.ascii	"PWM_DIS\000"
 6441      44495300 
 6442              	.LASF233:
 6443 0acc 50574D5F 		.ascii	"PWM_CMPxMUPD\000"
 6443      434D5078 
 6443      4D555044 
 6443      00
 6444              	.LASF43:
 6445 0ad9 5F5F7362 		.ascii	"__sbuf\000"
 6445      756600
 6446              	.LASF38:
 6447 0ae0 5F69735F 		.ascii	"_is_cxa\000"
 6447      63786100 
 6448              	.LASF225:
 6449 0ae8 50574D5F 		.ascii	"PWM_CPRDUPD\000"
 6449      43505244 
 6449      55504400 
 6450              	.LASF337:
 6451 0af4 474E5520 		.ascii	"GNU C 4.6.1\000"
 6451      4320342E 
 6451      362E3100 
 6452              	.LASF96:
 6453 0b00 5F6D7072 		.ascii	"_mprec\000"
 6453      656300
 6454              	.LASF328:
 6455 0b07 73746174 		.ascii	"status\000"
 6455      757300
 6456              	.LASF67:
 6457 0b0e 5F6D6973 		.ascii	"_misc\000"
 6457      6300
 6458              	.LASF17:
 6459 0b14 5F5F554C 		.ascii	"__ULong\000"
 6459      6F6E6700 
 6460              	.LASF224:
 6461 0b1c 50574D5F 		.ascii	"PWM_CPRD\000"
 6461      43505244 
 6461      00
 6462              	.LASF144:
 6463 0b25 5353435F 		.ascii	"SSC_IRQn\000"
 6463      4952516E 
ARM GAS  /tmp/ccsPeR2V.s 			page 159


 6463      00
 6464              	.LASF232:
 6465 0b2e 50574D5F 		.ascii	"PWM_CMPxM\000"
 6465      434D5078 
 6465      4D00
 6466              	.LASF116:
 6467 0b38 75696E74 		.ascii	"uint32_t\000"
 6467      33325F74 
 6467      00
 6468              	.LASF230:
 6469 0b41 50574D5F 		.ascii	"PWM_CMPxV\000"
 6469      434D5078 
 6469      5600
 6470              	.LASF97:
 6471 0b4b 5F726573 		.ascii	"_result\000"
 6471      756C7400 
 6472              	.LASF206:
 6473 0b53 4144435F 		.ascii	"ADC_ACR\000"
 6473      41435200 
 6474              	.LASF282:
 6475 0b5b 54435F53 		.ascii	"TC_SMMR\000"
 6475      4D4D5200 
 6476              	.LASF190:
 6477 0b63 4144435F 		.ascii	"ADC_CHDR\000"
 6477      43484452 
 6477      00
 6478              	.LASF266:
 6479 0b6c 50574D5F 		.ascii	"PWM_RPR\000"
 6479      52505200 
 6480              	.LASF94:
 6481 0b74 5F616464 		.ascii	"_add\000"
 6481      00
 6482              	.LASF3:
 6483 0b79 73686F72 		.ascii	"short unsigned int\000"
 6483      7420756E 
 6483      7369676E 
 6483      65642069 
 6483      6E7400
 6484              	.LASF208:
 6485 0b8c 4144435F 		.ascii	"ADC_WPMR\000"
 6485      57504D52 
 6485      00
 6486              	.LASF27:
 6487 0b95 5F5F746D 		.ascii	"__tm_hour\000"
 6487      5F686F75 
 6487      7200
 6488              	.LASF123:
 6489 0b9f 50656E64 		.ascii	"PendSV_IRQn\000"
 6489      53565F49 
 6489      52516E00 
 6490              	.LASF110:
 6491 0bab 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 6491      72746F77 
 6491      63735F73 
 6491      74617465 
 6491      00
 6492              	.LASF293:
ARM GAS  /tmp/ccsPeR2V.s 			page 160


 6493 0bbc 54435F42 		.ascii	"TC_BCR\000"
 6493      435200
 6494              	.LASF148:
 6495 0bc3 5443335F 		.ascii	"TC3_IRQn\000"
 6495      4952516E 
 6495      00
 6496              	.LASF189:
 6497 0bcc 4144435F 		.ascii	"ADC_CHER\000"
 6497      43484552 
 6497      00
 6498              	.LASF158:
 6499 0bd5 49534552 		.ascii	"ISER\000"
 6499      00
 6500              	.LASF35:
 6501 0bda 5F666E61 		.ascii	"_fnargs\000"
 6501      72677300 
 6502              	.LASF201:
 6503 0be2 4144435F 		.ascii	"ADC_CWR\000"
 6503      43575200 
 6504              	.LASF33:
 6505 0bea 5F5F746D 		.ascii	"__tm_isdst\000"
 6505      5F697364 
 6505      737400
 6506              	.LASF228:
 6507 0bf5 50574D5F 		.ascii	"PWM_DTUPD\000"
 6507      44545550 
 6507      4400
 6508              	.LASF26:
 6509 0bff 5F5F746D 		.ascii	"__tm_min\000"
 6509      5F6D696E 
 6509      00
 6510              	.LASF244:
 6511 0c08 50574D5F 		.ascii	"PWM_SCUC\000"
 6511      53435543 
 6511      00
 6512              	.LASF107:
 6513 0c11 5F676574 		.ascii	"_getdate_err\000"
 6513      64617465 
 6513      5F657272 
 6513      00
 6514              	.LASF127:
 6515 0c1e 5254435F 		.ascii	"RTC_IRQn\000"
 6515      4952516E 
 6515      00
 6516              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/ccsPeR2V.s 			page 161


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccsPeR2V.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/ccsPeR2V.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/ccsPeR2V.s:62     .text.NVIC_SetPriority:00000000 $t
     /tmp/ccsPeR2V.s:66     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
     /tmp/ccsPeR2V.s:128    .bss:00000000 input
     /tmp/ccsPeR2V.s:125    .bss:00000000 $d
     /tmp/ccsPeR2V.s:134    .data:00000000 _state
     /tmp/ccsPeR2V.s:141    .bss:00000004 loop
     /tmp/ccsPeR2V.s:148    .data:00000004 ntrip
     /tmp/ccsPeR2V.s:145    .data:00000001 $d
     /tmp/ccsPeR2V.s:157    .data:00000014 rtrip
     /tmp/ccsPeR2V.s:167    .bss:00000030 releasetime
     /tmp/ccsPeR2V.s:170    .text.init:00000000 $t
     /tmp/ccsPeR2V.s:174    .text.init:00000000 init
     /tmp/ccsPeR2V.s:388    .rodata:00000000 $d
     /tmp/ccsPeR2V.s:389    .rodata:00000000 .LC0
     /tmp/ccsPeR2V.s:392    .rodata:00000018 .LC1
     /tmp/ccsPeR2V.s:395    .rodata:0000002c .LC2
     /tmp/ccsPeR2V.s:398    .rodata:00000040 .LC3
     /tmp/ccsPeR2V.s:401    .rodata:00000058 .LC4
     /tmp/ccsPeR2V.s:404    .text.state:00000000 $t
     /tmp/ccsPeR2V.s:409    .text.state:00000000 state
     /tmp/ccsPeR2V.s:437    .text.state:0000001c $d
     /tmp/ccsPeR2V.s:447    .text.state:0000003c $t
     /tmp/ccsPeR2V.s:584    .rodata:00000070 .LC5
     /tmp/ccsPeR2V.s:587    .rodata:00000074 .LC6
     /tmp/ccsPeR2V.s:590    .rodata:0000008c .LC7
     /tmp/ccsPeR2V.s:593    .rodata:000000b8 .LC8
     /tmp/ccsPeR2V.s:596    .rodata:000000bc .LC9
     /tmp/ccsPeR2V.s:599    .rodata:000000d4 .LC10
     /tmp/ccsPeR2V.s:602    .rodata:000000d8 .LC11
     /tmp/ccsPeR2V.s:605    .rodata:000000f8 .LC12
     /tmp/ccsPeR2V.s:608    .rodata:000000fc .LC13
     /tmp/ccsPeR2V.s:611    .rodata:00000118 .LC14
     /tmp/ccsPeR2V.s:614    .rodata:0000011c .LC15
     /tmp/ccsPeR2V.s:617    .rodata:00000124 .LC16
     /tmp/ccsPeR2V.s:620    .rodata:00000148 .LC17
     /tmp/ccsPeR2V.s:623    .rodata:00000154 .LC18
     /tmp/ccsPeR2V.s:626    .rodata:00000170 .LC19
     /tmp/ccsPeR2V.s:629    .rodata:00000178 .LC20
     /tmp/ccsPeR2V.s:632    .rodata:00000180 .LC21
     /tmp/ccsPeR2V.s:635    .rodata:0000019c .LC22
     /tmp/ccsPeR2V.s:638    .rodata:000001a4 .LC23
     /tmp/ccsPeR2V.s:641    .text.main:00000000 $t
     /tmp/ccsPeR2V.s:646    .text.main:00000000 main
     /tmp/ccsPeR2V.s:781    .text.main:00000124 $d
     /tmp/ccsPeR2V.s:791    .text.main:00000144 $t
     /tmp/ccsPeR2V.s:1373   .text.TC1_IrqHandler:00000000 $t
     /tmp/ccsPeR2V.s:1378   .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/ccsPeR2V.s:1410   .text.ADC_IrqHandler:00000000 $t
     /tmp/ccsPeR2V.s:1415   .text.ADC_IrqHandler:00000000 ADC_IrqHandler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PMC_EnablePeripheral
ARM GAS  /tmp/ccsPeR2V.s 			page 162


TC_FindMckDivisor
TC_Configure
TC_Start
ADC_Initialize
ADC_cfgFrequency
ADC_ReadBuffer
PWMC_ConfigureClocks
PWMC_ConfigureChannelExt
PWMC_SetPeriod
PWMC_SetDutyCycle
PWMC_ConfigureSyncChannel
PWMC_SetSyncChannelUpdatePeriod
TimeTick_Configure
LEDs_configure
LED_clr
USBC_Configure
mode
_impure_ptr
fiprintf
USBC_isConfigured
LED_blink
setbuf
USBC_hasData
gets
siscanf
iprintf
puts
GetTickCount
control
