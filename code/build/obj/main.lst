ARM GAS  /tmp/ccSeVCM8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/ccSeVCM8.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccSeVCM8.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/ccSeVCM8.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccSeVCM8.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccSeVCM8.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/ccSeVCM8.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/ccSeVCM8.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/ccSeVCM8.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/ccSeVCM8.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/ccSeVCM8.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccSeVCM8.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/ccSeVCM8.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/ccSeVCM8.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/ccSeVCM8.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccSeVCM8.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccSeVCM8.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/ccSeVCM8.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccSeVCM8.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/ccSeVCM8.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccSeVCM8.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccSeVCM8.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccSeVCM8.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccSeVCM8.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccSeVCM8.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccSeVCM8.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccSeVCM8.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/ccSeVCM8.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61              		.global	loops
  62 0036 00BF     		.bss
  63              		.align	2
  64              		.type	loops, %object
  65              		.size	loops, 88
  66              	loops:
  67 0000 00000000 		.space	88
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.section	.rodata
  69              		.align	2
  70              	.LC0:
  71 0000 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
  71      52756E6E 
  71      696E6720 
  71      61742025 
  71      69204D48 
  72 0017 00       		.align	2
  73              	.LC1:
  74 0018 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
  74      77616974 
  74      696E6720 
  74      756E7469 
  74      6C205553 
  75 0043 00       		.align	2
  76              	.LC2:
  77 0044 3F206964 		.ascii	"? id\000"
  77      00
  78 0049 000000   		.align	2
ARM GAS  /tmp/ccSeVCM8.s 			page 29


  79              	.LC3:
  80 004c 2573256E 		.ascii	"%s%n\000"
  80      00
  81 0051 000000   		.align	2
  82              	.LC4:
  83 0054 3F206F70 		.ascii	"? opt\000"
  83      7400
  84 005a 0000     		.align	2
  85              	.LC5:
  86 005c 6D6F6465 		.ascii	"mode\000"
  86      00
  87 0061 000000   		.align	2
  88              	.LC6:
  89 0064 257500   		.ascii	"%u\000"
  90 0067 00       		.align	2
  91              	.LC7:
  92 0068 3F206172 		.ascii	"? arg\000"
  92      6700
  93 006e 0000     		.align	2
  94              	.LC8:
  95 0070 25750A00 		.ascii	"%u\012\000"
  96              		.align	2
  97              	.LC9:
  98 0074 737000   		.ascii	"sp\000"
  99 0077 00       		.align	2
 100              	.LC10:
 101 0078 707600   		.ascii	"pv\000"
 102 007b 00       		.align	2
 103              	.LC11:
 104 007c 3F207265 		.ascii	"? read-only\000"
 104      61642D6F 
 104      6E6C7900 
 105              		.align	2
 106              	.LC12:
 107 0088 6572726F 		.ascii	"error\000"
 107      7200
 108 008e 0000     		.align	2
 109              	.LC13:
 110 0090 6B00     		.ascii	"k\000"
 111 0092 0000     		.align	2
 112              	.LC14:
 113 0094 25752575 		.ascii	"%u%u%u\000"
 113      257500
 114 009b 00       		.align	2
 115              	.LC15:
 116 009c 25752025 		.ascii	"%u %u %u\012\000"
 116      75202575 
 116      0A00
 117 00a6 0000     		.align	2
 118              	.LC16:
 119 00a8 3F20636D 		.ascii	"? cmd\000"
 119      6400
 120 00ae 0000     		.section	.text.main,"ax",%progbits
 121              		.align	2
 122              		.global	main
 123              		.thumb
 124              		.thumb_func
ARM GAS  /tmp/ccSeVCM8.s 			page 30


 125              		.type	main, %function
 126              	main:
 127              	.LFB35:
 128              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "board.h"
   3:main.c        **** #include "controller.h"
   4:main.c        **** 
   5:main.c        **** #define MINv 0
   6:main.c        **** #define MAXv MAX
   7:main.c        **** 
   8:main.c        **** #define match(a, b) (strcmp(a, b) == 0)
   9:main.c        **** #define in_range(x) (x < MAXv && x > MINV)
  10:main.c        **** 
  11:main.c        **** #define LOOPS 2 
  12:main.c        **** #define LOOPSINIT {CTRL_INIT, CTRL_INIT}
  13:main.c        **** 
  14:main.c        **** struct ctrl loops[LOOPS] = LOOPSINIT;
  15:main.c        **** 
  16:main.c        **** void init();
  17:main.c        **** 
  18:main.c        **** int main() 
  19:main.c        **** {
 129              		.loc 2 19 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 40
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133 0000 90B5     		push	{r4, r7, lr}
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 12
 136              		.cfi_offset 14, -4
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 4, -12
 139 0002 8DB0     		sub	sp, sp, #52
 140              	.LCFI4:
 141              		.cfi_def_cfa_offset 64
 142 0004 02AF     		add	r7, sp, #8
 143              	.LCFI5:
 144              		.cfi_def_cfa 7, 56
  20:main.c        **** 	char *line;
  21:main.c        **** 	char opt[8];
  22:main.c        **** 	char cmd;
  23:main.c        **** 
  24:main.c        **** 	int arg[3];
  25:main.c        **** 	unsigned id = 0;
 145              		.loc 2 25 0
 146 0006 4FF00003 		mov	r3, #0
 147 000a 3B62     		str	r3, [r7, #32]
  26:main.c        **** 	unsigned off = 0;
 148              		.loc 2 26 0
 149 000c 4FF00003 		mov	r3, #0
 150 0010 7B60     		str	r3, [r7, #4]
  27:main.c        **** 
  28:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 151              		.loc 2 28 0
 152 0012 40F20003 		movw	r3, #:lower16:_impure_ptr
 153 0016 C0F20003 		movt	r3, #:upper16:_impure_ptr
ARM GAS  /tmp/ccSeVCM8.s 			page 31


 154 001a 1B68     		ldr	r3, [r3, #0]
 155 001c DB68     		ldr	r3, [r3, #12]
 156 001e 1846     		mov	r0, r3
 157 0020 40F20001 		movw	r1, #:lower16:.LC0
 158 0024 C0F20001 		movt	r1, #:upper16:.LC0
 159 0028 4FF03002 		mov	r2, #48
 160 002c FFF7FEFF 		bl	fiprintf
  29:main.c        **** 
  30:main.c        **** 	/* WDT off */
  31:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 161              		.loc 2 31 0
 162 0030 41F25043 		movw	r3, #5200
 163 0034 C4F20E03 		movt	r3, 16398
 164 0038 4FF40042 		mov	r2, #32768
 165 003c 5A60     		str	r2, [r3, #4]
  32:main.c        **** 
  33:main.c        **** 	/* configure hardware */
  34:main.c        **** 	init();
 166              		.loc 2 34 0
 167 003e FFF7FEFF 		bl	init
  35:main.c        **** 
  36:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 168              		.loc 2 36 0
 169 0042 40F20003 		movw	r3, #:lower16:_impure_ptr
 170 0046 C0F20003 		movt	r3, #:upper16:_impure_ptr
 171 004a 1B68     		ldr	r3, [r3, #0]
 172 004c DB68     		ldr	r3, [r3, #12]
 173 004e 1846     		mov	r0, r3
 174 0050 40F20001 		movw	r1, #:lower16:.LC1
 175 0054 C0F20001 		movt	r1, #:upper16:.LC1
 176 0058 FFF7FEFF 		bl	fiprintf
  37:main.c        **** 	while (!USBC_isConfigured());
 177              		.loc 2 37 0
 178 005c 00BF     		nop
 179              	.L3:
 180              		.loc 2 37 0 is_stmt 0 discriminator 1
 181 005e FFF7FEFF 		bl	USBC_isConfigured
 182 0062 0346     		mov	r3, r0
 183 0064 002B     		cmp	r3, #0
 184 0066 FAD0     		beq	.L3
  38:main.c        **** 
  39:main.c        **** 	LED_blink(statusled, 5);
 185              		.loc 2 39 0 is_stmt 1
 186 0068 4FF00000 		mov	r0, #0
 187 006c 4FF00501 		mov	r1, #5
 188 0070 FFF7FEFF 		bl	LED_blink
  40:main.c        **** 
  41:main.c        **** 	setbuf(stdout, NULL);
 189              		.loc 2 41 0
 190 0074 40F20003 		movw	r3, #:lower16:_impure_ptr
 191 0078 C0F20003 		movt	r3, #:upper16:_impure_ptr
 192 007c 1B68     		ldr	r3, [r3, #0]
 193 007e 9B68     		ldr	r3, [r3, #8]
 194 0080 1846     		mov	r0, r3
 195 0082 4FF00001 		mov	r1, #0
 196 0086 FFF7FEFF 		bl	setbuf
 197              	.L32:
ARM GAS  /tmp/ccSeVCM8.s 			page 32


  42:main.c        **** 
  43:main.c        **** 	while (1) {
  44:main.c        **** 		if(!USBC_hasData())
 198              		.loc 2 44 0
 199 008a FFF7FEFF 		bl	USBC_hasData
 200 008e 0346     		mov	r3, r0
 201 0090 002B     		cmp	r3, #0
 202 0092 00F00882 		beq	.L33
 203              	.L4:
  45:main.c        **** 			continue;
  46:main.c        **** 
  47:main.c        **** 		gets(line);
 204              		.loc 2 47 0
 205 0096 786A     		ldr	r0, [r7, #36]
 206 0098 FFF7FEFF 		bl	gets
  48:main.c        **** #ifdef ECHO
  49:main.c        **** 		puts(line);
  50:main.c        **** #endif
  51:main.c        **** 		switch ((cmd=*line)) {
 207              		.loc 2 51 0
 208 009c 7B6A     		ldr	r3, [r7, #36]
 209 009e 1B78     		ldrb	r3, [r3, #0]
 210 00a0 FB77     		strb	r3, [r7, #31]
 211 00a2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 212 00a4 A3F16703 		sub	r3, r3, #103
 213 00a8 0C2B     		cmp	r3, #12
 214 00aa 00F2F581 		bhi	.L6
 215 00ae 01A2     		adr	r2, .L9
 216 00b0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 217              		.align	2
 218              	.L9:
 219 00b4 E9000000 		.word	.L7+1
 220 00b8 99040000 		.word	.L6+1
 221 00bc 99040000 		.word	.L6+1
 222 00c0 99040000 		.word	.L6+1
 223 00c4 99040000 		.word	.L6+1
 224 00c8 AB040000 		.word	.L34+1
 225 00cc 99040000 		.word	.L6+1
 226 00d0 99040000 		.word	.L6+1
 227 00d4 99040000 		.word	.L6+1
 228 00d8 99040000 		.word	.L6+1
 229 00dc AB040000 		.word	.L34+1
 230 00e0 99040000 		.word	.L6+1
 231 00e4 E9000000 		.word	.L7+1
 232              	.L7:
  52:main.c        **** 			case 's':
  53:main.c        **** 			case 'g':
  54:main.c        **** 				// get ID (space for main setting, 0-9 for loop setting)
  55:main.c        **** 				if (line[1] == ' ')
 233              		.loc 2 55 0
 234 00e8 7B6A     		ldr	r3, [r7, #36]
 235 00ea 03F10103 		add	r3, r3, #1
 236 00ee 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 237 00f0 202B     		cmp	r3, #32
 238 00f2 03D1     		bne	.L10
  56:main.c        **** 					id = 0;
 239              		.loc 2 56 0
ARM GAS  /tmp/ccSeVCM8.s 			page 33


 240 00f4 4FF00003 		mov	r3, #0
 241 00f8 3B62     		str	r3, [r7, #32]
 242 00fa 16E0     		b	.L11
 243              	.L10:
  57:main.c        **** 				else if (line[1]-'0' < LOOPS)
 244              		.loc 2 57 0
 245 00fc 7B6A     		ldr	r3, [r7, #36]
 246 00fe 03F10103 		add	r3, r3, #1
 247 0102 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 248 0104 A3F13003 		sub	r3, r3, #48
 249 0108 012B     		cmp	r3, #1
 250 010a 07DC     		bgt	.L12
  58:main.c        **** 					id = line[1]-'0' + 1;
 251              		.loc 2 58 0
 252 010c 7B6A     		ldr	r3, [r7, #36]
 253 010e 03F10103 		add	r3, r3, #1
 254 0112 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 255 0114 A3F12F03 		sub	r3, r3, #47
 256 0118 3B62     		str	r3, [r7, #32]
 257 011a 06E0     		b	.L11
 258              	.L12:
  59:main.c        **** 				else {
  60:main.c        **** 					puts("? id");
 259              		.loc 2 60 0
 260 011c 40F20000 		movw	r0, #:lower16:.LC2
 261 0120 C0F20000 		movt	r0, #:upper16:.LC2
 262 0124 FFF7FEFF 		bl	puts
  61:main.c        **** 					break;
 263              		.loc 2 61 0
 264 0128 C0E1     		b	.L5
 265              	.L11:
  62:main.c        **** 				}
  63:main.c        **** 				
  64:main.c        **** 				line = line+2;
 266              		.loc 2 64 0
 267 012a 7B6A     		ldr	r3, [r7, #36]
 268 012c 03F10203 		add	r3, r3, #2
 269 0130 7B62     		str	r3, [r7, #36]
  65:main.c        **** 
  66:main.c        **** 				// get option (max 7 characters)
  67:main.c        **** 				if (sscanf(line, "%s%n", opt, &off) == 0) {
 270              		.loc 2 67 0
 271 0132 07F11402 		add	r2, r7, #20
 272 0136 07F10403 		add	r3, r7, #4
 273 013a 786A     		ldr	r0, [r7, #36]
 274 013c 40F20001 		movw	r1, #:lower16:.LC3
 275 0140 C0F20001 		movt	r1, #:upper16:.LC3
 276 0144 FFF7FEFF 		bl	siscanf
 277 0148 0346     		mov	r3, r0
 278 014a 002B     		cmp	r3, #0
 279 014c 06D1     		bne	.L13
  68:main.c        **** 					puts("? opt");
 280              		.loc 2 68 0
 281 014e 40F20000 		movw	r0, #:lower16:.LC4
 282 0152 C0F20000 		movt	r0, #:upper16:.LC4
 283 0156 FFF7FEFF 		bl	puts
  69:main.c        **** 					break;
ARM GAS  /tmp/ccSeVCM8.s 			page 34


 284              		.loc 2 69 0
 285 015a A7E1     		b	.L5
 286              	.L13:
  70:main.c        **** 				}
  71:main.c        **** 
  72:main.c        **** 				line = line+off;
 287              		.loc 2 72 0
 288 015c 7B68     		ldr	r3, [r7, #4]
 289 015e 7A6A     		ldr	r2, [r7, #36]
 290 0160 D318     		adds	r3, r2, r3
 291 0162 7B62     		str	r3, [r7, #36]
  73:main.c        **** 
  74:main.c        **** 				// check option
  75:main.c        **** 				if (match("mode", opt)) {
 292              		.loc 2 75 0
 293 0164 07F11403 		add	r3, r7, #20
 294 0168 40F20000 		movw	r0, #:lower16:.LC5
 295 016c C0F20000 		movt	r0, #:upper16:.LC5
 296 0170 1946     		mov	r1, r3
 297 0172 FFF7FEFF 		bl	strcmp
 298 0176 0346     		mov	r3, r0
 299 0178 002B     		cmp	r3, #0
 300 017a 43D1     		bne	.L14
  76:main.c        **** 					if (cmd == 's') {
 301              		.loc 2 76 0
 302 017c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 303 017e 732B     		cmp	r3, #115
 304 0180 2BD1     		bne	.L15
  77:main.c        **** 						if (sscanf(line, "%u", arg) == 0) {
 305              		.loc 2 77 0
 306 0182 07F10803 		add	r3, r7, #8
 307 0186 786A     		ldr	r0, [r7, #36]
 308 0188 40F20001 		movw	r1, #:lower16:.LC6
 309 018c C0F20001 		movt	r1, #:upper16:.LC6
 310 0190 1A46     		mov	r2, r3
 311 0192 FFF7FEFF 		bl	siscanf
 312 0196 0346     		mov	r3, r0
 313 0198 002B     		cmp	r3, #0
 314 019a 06D1     		bne	.L16
  78:main.c        **** 							puts("? arg");
 315              		.loc 2 78 0
 316 019c 40F20000 		movw	r0, #:lower16:.LC7
 317 01a0 C0F20000 		movt	r0, #:upper16:.LC7
 318 01a4 FFF7FEFF 		bl	puts
  79:main.c        **** 							break;
 319              		.loc 2 79 0
 320 01a8 80E1     		b	.L5
 321              	.L16:
  80:main.c        **** 						}
  81:main.c        **** 						if (*arg > STOP || *arg < OFF)
 322              		.loc 2 81 0
 323 01aa BB68     		ldr	r3, [r7, #8]
 324 01ac 032B     		cmp	r3, #3
 325 01ae 02DC     		bgt	.L17
 326              		.loc 2 81 0 is_stmt 0 discriminator 1
 327 01b0 BB68     		ldr	r3, [r7, #8]
 328 01b2 002B     		cmp	r3, #0
ARM GAS  /tmp/ccSeVCM8.s 			page 35


 329 01b4 02DA     		bge	.L18
 330              	.L17:
  82:main.c        **** 							*arg = OFF;				
 331              		.loc 2 82 0 is_stmt 1
 332 01b6 4FF00003 		mov	r3, #0
 333 01ba BB60     		str	r3, [r7, #8]
 334              	.L18:
  83:main.c        **** 						loops[id-1].mode = *arg;
 335              		.loc 2 83 0
 336 01bc 3B6A     		ldr	r3, [r7, #32]
 337 01be 03F1FF31 		add	r1, r3, #-1
 338 01c2 BB68     		ldr	r3, [r7, #8]
 339 01c4 DAB2     		uxtb	r2, r3
 340 01c6 40F20003 		movw	r3, #:lower16:loops
 341 01ca C0F20003 		movt	r3, #:upper16:loops
 342 01ce 4FF02C00 		mov	r0, #44
 343 01d2 00FB01F1 		mul	r1, r0, r1
 344 01d6 5B18     		adds	r3, r3, r1
 345 01d8 1A70     		strb	r2, [r3, #0]
 346              	.L15:
  84:main.c        **** 					}
  85:main.c        **** 					printf("%u\n", loops[id-1].mode);
 347              		.loc 2 85 0
 348 01da 3B6A     		ldr	r3, [r7, #32]
 349 01dc 03F1FF32 		add	r2, r3, #-1
 350 01e0 40F20003 		movw	r3, #:lower16:loops
 351 01e4 C0F20003 		movt	r3, #:upper16:loops
 352 01e8 4FF02C01 		mov	r1, #44
 353 01ec 01FB02F2 		mul	r2, r1, r2
 354 01f0 9B18     		adds	r3, r3, r2
 355 01f2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 356 01f4 40F20000 		movw	r0, #:lower16:.LC8
 357 01f8 C0F20000 		movt	r0, #:upper16:.LC8
 358 01fc 1946     		mov	r1, r3
 359 01fe FFF7FEFF 		bl	iprintf
  86:main.c        **** 				}
  87:main.c        **** 				else if (match("sp", opt)) {
  88:main.c        **** 					if (cmd == 's') {
  89:main.c        **** 						if (sscanf(line, "%u", arg) == 0) {
  90:main.c        **** 							puts("? arg");
  91:main.c        **** 							break;
  92:main.c        **** 						}
  93:main.c        **** 						if (*arg < MINv)
  94:main.c        **** 							*arg = MINv;
  95:main.c        **** 						else if (*arg > MAXv)
  96:main.c        **** 							*arg = MAXv;
  97:main.c        **** 						loops[id-1].SP = *arg;
  98:main.c        **** 					}
  99:main.c        **** 					printf("%u\n", loops[id-1].SP);
 100:main.c        **** 				}
 101:main.c        **** 				else if (match("pv", opt)) {
 102:main.c        **** 					if (cmd == 's')
 103:main.c        **** 						puts("? read-only");
 104:main.c        **** 					printf("%u\n", loops[id-1]._x);
 105:main.c        **** 				}
 106:main.c        **** 				else if (match("error", opt)) {
 107:main.c        **** 					if (cmd == 's')
ARM GAS  /tmp/ccSeVCM8.s 			page 36


 108:main.c        **** 						puts("? read-only");
 109:main.c        **** 					printf("%u\n", loops[id-1]._e);
 110:main.c        **** 				}
 111:main.c        **** 				else if (match("k", opt)) {
 112:main.c        **** 					if (cmd == 's') {
 113:main.c        **** 						if (sscanf(line, "%u%u%u", arg, arg+1, arg+2) != 3) {
 114:main.c        **** 							puts("? arg");
 115:main.c        **** 							break;
 116:main.c        **** 						}
 117:main.c        **** 						loops[id-1].Kp = arg[0];
 118:main.c        **** 						loops[id-1].Ki = arg[1];
 119:main.c        **** 						loops[id-1].Kd = arg[2];
 120:main.c        **** 					}
 121:main.c        **** 					printf("%u %u %u\n", loops[id-1].Kp, loops[id-1].Ki, loops[id-1].Kd);
 122:main.c        **** 				}
 123:main.c        **** 				else 
 124:main.c        **** 					puts("? opt");
 125:main.c        **** 				break;
 360              		.loc 2 125 0
 361 0202 53E1     		b	.L5
 362              	.L14:
  87:main.c        **** 				else if (match("sp", opt)) {
 363              		.loc 2 87 0
 364 0204 07F11403 		add	r3, r7, #20
 365 0208 40F20000 		movw	r0, #:lower16:.LC9
 366 020c C0F20000 		movt	r0, #:upper16:.LC9
 367 0210 1946     		mov	r1, r3
 368 0212 FFF7FEFF 		bl	strcmp
 369 0216 0346     		mov	r3, r0
 370 0218 002B     		cmp	r3, #0
 371 021a 49D1     		bne	.L20
  88:main.c        **** 					if (cmd == 's') {
 372              		.loc 2 88 0
 373 021c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 374 021e 732B     		cmp	r3, #115
 375 0220 31D1     		bne	.L21
  89:main.c        **** 						if (sscanf(line, "%u", arg) == 0) {
 376              		.loc 2 89 0
 377 0222 07F10803 		add	r3, r7, #8
 378 0226 786A     		ldr	r0, [r7, #36]
 379 0228 40F20001 		movw	r1, #:lower16:.LC6
 380 022c C0F20001 		movt	r1, #:upper16:.LC6
 381 0230 1A46     		mov	r2, r3
 382 0232 FFF7FEFF 		bl	siscanf
 383 0236 0346     		mov	r3, r0
 384 0238 002B     		cmp	r3, #0
 385 023a 06D1     		bne	.L22
  90:main.c        **** 							puts("? arg");
 386              		.loc 2 90 0
 387 023c 40F20000 		movw	r0, #:lower16:.LC7
 388 0240 C0F20000 		movt	r0, #:upper16:.LC7
 389 0244 FFF7FEFF 		bl	puts
  91:main.c        **** 							break;
 390              		.loc 2 91 0
 391 0248 30E1     		b	.L5
 392              	.L22:
  93:main.c        **** 						if (*arg < MINv)
ARM GAS  /tmp/ccSeVCM8.s 			page 37


 393              		.loc 2 93 0
 394 024a BB68     		ldr	r3, [r7, #8]
 395 024c 002B     		cmp	r3, #0
 396 024e 03DA     		bge	.L23
  94:main.c        **** 							*arg = MINv;
 397              		.loc 2 94 0
 398 0250 4FF00003 		mov	r3, #0
 399 0254 BB60     		str	r3, [r7, #8]
 400 0256 07E0     		b	.L24
 401              	.L23:
  95:main.c        **** 						else if (*arg > MAXv)
 402              		.loc 2 95 0
 403 0258 BA68     		ldr	r2, [r7, #8]
 404 025a 40F6FF73 		movw	r3, #4095
 405 025e 9A42     		cmp	r2, r3
 406 0260 02DD     		ble	.L24
  96:main.c        **** 							*arg = MAXv;
 407              		.loc 2 96 0
 408 0262 40F6FF73 		movw	r3, #4095
 409 0266 BB60     		str	r3, [r7, #8]
 410              	.L24:
  97:main.c        **** 						loops[id-1].SP = *arg;
 411              		.loc 2 97 0
 412 0268 3B6A     		ldr	r3, [r7, #32]
 413 026a 03F1FF31 		add	r1, r3, #-1
 414 026e BB68     		ldr	r3, [r7, #8]
 415 0270 9AB2     		uxth	r2, r3
 416 0272 40F20003 		movw	r3, #:lower16:loops
 417 0276 C0F20003 		movt	r3, #:upper16:loops
 418 027a 4FF02C00 		mov	r0, #44
 419 027e 00FB01F1 		mul	r1, r0, r1
 420 0282 5B18     		adds	r3, r3, r1
 421 0284 5A80     		strh	r2, [r3, #2]	@ movhi
 422              	.L21:
  99:main.c        **** 					printf("%u\n", loops[id-1].SP);
 423              		.loc 2 99 0
 424 0286 3B6A     		ldr	r3, [r7, #32]
 425 0288 03F1FF32 		add	r2, r3, #-1
 426 028c 40F20003 		movw	r3, #:lower16:loops
 427 0290 C0F20003 		movt	r3, #:upper16:loops
 428 0294 4FF02C01 		mov	r1, #44
 429 0298 01FB02F2 		mul	r2, r1, r2
 430 029c 9B18     		adds	r3, r3, r2
 431 029e 5B88     		ldrh	r3, [r3, #2]
 432 02a0 40F20000 		movw	r0, #:lower16:.LC8
 433 02a4 C0F20000 		movt	r0, #:upper16:.LC8
 434 02a8 1946     		mov	r1, r3
 435 02aa FFF7FEFF 		bl	iprintf
 436              		.loc 2 125 0
 437 02ae FDE0     		b	.L5
 438              	.L20:
 101:main.c        **** 				else if (match("pv", opt)) {
 439              		.loc 2 101 0
 440 02b0 07F11403 		add	r3, r7, #20
 441 02b4 40F20000 		movw	r0, #:lower16:.LC10
 442 02b8 C0F20000 		movt	r0, #:upper16:.LC10
 443 02bc 1946     		mov	r1, r3
ARM GAS  /tmp/ccSeVCM8.s 			page 38


 444 02be FFF7FEFF 		bl	strcmp
 445 02c2 0346     		mov	r3, r0
 446 02c4 002B     		cmp	r3, #0
 447 02c6 1FD1     		bne	.L25
 102:main.c        **** 					if (cmd == 's')
 448              		.loc 2 102 0
 449 02c8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 450 02ca 732B     		cmp	r3, #115
 451 02cc 05D1     		bne	.L26
 103:main.c        **** 						puts("? read-only");
 452              		.loc 2 103 0
 453 02ce 40F20000 		movw	r0, #:lower16:.LC11
 454 02d2 C0F20000 		movt	r0, #:upper16:.LC11
 455 02d6 FFF7FEFF 		bl	puts
 456              	.L26:
 104:main.c        **** 					printf("%u\n", loops[id-1]._x);
 457              		.loc 2 104 0
 458 02da 3B6A     		ldr	r3, [r7, #32]
 459 02dc 03F1FF32 		add	r2, r3, #-1
 460 02e0 40F20003 		movw	r3, #:lower16:loops
 461 02e4 C0F20003 		movt	r3, #:upper16:loops
 462 02e8 4FF02C01 		mov	r1, #44
 463 02ec 01FB02F2 		mul	r2, r1, r2
 464 02f0 9B18     		adds	r3, r3, r2
 465 02f2 03F12003 		add	r3, r3, #32
 466 02f6 9B88     		ldrh	r3, [r3, #4]
 467 02f8 40F20000 		movw	r0, #:lower16:.LC8
 468 02fc C0F20000 		movt	r0, #:upper16:.LC8
 469 0300 1946     		mov	r1, r3
 470 0302 FFF7FEFF 		bl	iprintf
 471              		.loc 2 125 0
 472 0306 D1E0     		b	.L5
 473              	.L25:
 106:main.c        **** 				else if (match("error", opt)) {
 474              		.loc 2 106 0
 475 0308 07F11403 		add	r3, r7, #20
 476 030c 40F20000 		movw	r0, #:lower16:.LC12
 477 0310 C0F20000 		movt	r0, #:upper16:.LC12
 478 0314 1946     		mov	r1, r3
 479 0316 FFF7FEFF 		bl	strcmp
 480 031a 0346     		mov	r3, r0
 481 031c 002B     		cmp	r3, #0
 482 031e 1FD1     		bne	.L27
 107:main.c        **** 					if (cmd == 's')
 483              		.loc 2 107 0
 484 0320 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 485 0322 732B     		cmp	r3, #115
 486 0324 05D1     		bne	.L28
 108:main.c        **** 						puts("? read-only");
 487              		.loc 2 108 0
 488 0326 40F20000 		movw	r0, #:lower16:.LC11
 489 032a C0F20000 		movt	r0, #:upper16:.LC11
 490 032e FFF7FEFF 		bl	puts
 491              	.L28:
 109:main.c        **** 					printf("%u\n", loops[id-1]._e);
 492              		.loc 2 109 0
 493 0332 3B6A     		ldr	r3, [r7, #32]
ARM GAS  /tmp/ccSeVCM8.s 			page 39


 494 0334 03F1FF32 		add	r2, r3, #-1
 495 0338 40F20003 		movw	r3, #:lower16:loops
 496 033c C0F20003 		movt	r3, #:upper16:loops
 497 0340 4FF02C01 		mov	r1, #44
 498 0344 01FB02F2 		mul	r2, r1, r2
 499 0348 9B18     		adds	r3, r3, r2
 500 034a 03F11403 		add	r3, r3, #20
 501 034e 1B68     		ldr	r3, [r3, #0]
 502 0350 40F20000 		movw	r0, #:lower16:.LC8
 503 0354 C0F20000 		movt	r0, #:upper16:.LC8
 504 0358 1946     		mov	r1, r3
 505 035a FFF7FEFF 		bl	iprintf
 506              		.loc 2 125 0
 507 035e A5E0     		b	.L5
 508              	.L27:
 111:main.c        **** 				else if (match("k", opt)) {
 509              		.loc 2 111 0
 510 0360 07F11403 		add	r3, r7, #20
 511 0364 40F20000 		movw	r0, #:lower16:.LC13
 512 0368 C0F20000 		movt	r0, #:upper16:.LC13
 513 036c 1946     		mov	r1, r3
 514 036e FFF7FEFF 		bl	strcmp
 515 0372 0346     		mov	r3, r0
 516 0374 002B     		cmp	r3, #0
 517 0376 40F08880 		bne	.L29
 112:main.c        **** 					if (cmd == 's') {
 518              		.loc 2 112 0
 519 037a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 520 037c 732B     		cmp	r3, #115
 521 037e 4ED1     		bne	.L30
 113:main.c        **** 						if (sscanf(line, "%u%u%u", arg, arg+1, arg+2) != 3) {
 522              		.loc 2 113 0
 523 0380 07F10802 		add	r2, r7, #8
 524 0384 07F10803 		add	r3, r7, #8
 525 0388 03F10403 		add	r3, r3, #4
 526 038c 07F10801 		add	r1, r7, #8
 527 0390 01F10801 		add	r1, r1, #8
 528 0394 0091     		str	r1, [sp, #0]
 529 0396 786A     		ldr	r0, [r7, #36]
 530 0398 40F20001 		movw	r1, #:lower16:.LC14
 531 039c C0F20001 		movt	r1, #:upper16:.LC14
 532 03a0 FFF7FEFF 		bl	siscanf
 533 03a4 0346     		mov	r3, r0
 534 03a6 032B     		cmp	r3, #3
 535 03a8 06D0     		beq	.L31
 114:main.c        **** 							puts("? arg");
 536              		.loc 2 114 0
 537 03aa 40F20000 		movw	r0, #:lower16:.LC7
 538 03ae C0F20000 		movt	r0, #:upper16:.LC7
 539 03b2 FFF7FEFF 		bl	puts
 115:main.c        **** 							break;
 540              		.loc 2 115 0
 541 03b6 79E0     		b	.L5
 542              	.L31:
 117:main.c        **** 						loops[id-1].Kp = arg[0];
 543              		.loc 2 117 0
 544 03b8 3B6A     		ldr	r3, [r7, #32]
ARM GAS  /tmp/ccSeVCM8.s 			page 40


 545 03ba 03F1FF31 		add	r1, r3, #-1
 546 03be BB68     		ldr	r3, [r7, #8]
 547 03c0 9AB2     		uxth	r2, r3
 548 03c2 40F20003 		movw	r3, #:lower16:loops
 549 03c6 C0F20003 		movt	r3, #:upper16:loops
 550 03ca 4FF02C00 		mov	r0, #44
 551 03ce 00FB01F1 		mul	r1, r0, r1
 552 03d2 5B18     		adds	r3, r3, r1
 553 03d4 03F10803 		add	r3, r3, #8
 554 03d8 9A80     		strh	r2, [r3, #4]	@ movhi
 118:main.c        **** 						loops[id-1].Ki = arg[1];
 555              		.loc 2 118 0
 556 03da 3B6A     		ldr	r3, [r7, #32]
 557 03dc 03F1FF31 		add	r1, r3, #-1
 558 03e0 FB68     		ldr	r3, [r7, #12]
 559 03e2 9AB2     		uxth	r2, r3
 560 03e4 40F20003 		movw	r3, #:lower16:loops
 561 03e8 C0F20003 		movt	r3, #:upper16:loops
 562 03ec 4FF02C00 		mov	r0, #44
 563 03f0 00FB01F1 		mul	r1, r0, r1
 564 03f4 5B18     		adds	r3, r3, r1
 565 03f6 03F10803 		add	r3, r3, #8
 566 03fa DA80     		strh	r2, [r3, #6]	@ movhi
 119:main.c        **** 						loops[id-1].Kd = arg[2];
 567              		.loc 2 119 0
 568 03fc 3B6A     		ldr	r3, [r7, #32]
 569 03fe 03F1FF31 		add	r1, r3, #-1
 570 0402 3B69     		ldr	r3, [r7, #16]
 571 0404 9AB2     		uxth	r2, r3
 572 0406 40F20003 		movw	r3, #:lower16:loops
 573 040a C0F20003 		movt	r3, #:upper16:loops
 574 040e 4FF02C00 		mov	r0, #44
 575 0412 00FB01F1 		mul	r1, r0, r1
 576 0416 5B18     		adds	r3, r3, r1
 577 0418 03F11003 		add	r3, r3, #16
 578 041c 1A80     		strh	r2, [r3, #0]	@ movhi
 579              	.L30:
 121:main.c        **** 					printf("%u %u %u\n", loops[id-1].Kp, loops[id-1].Ki, loops[id-1].Kd);
 580              		.loc 2 121 0
 581 041e 3B6A     		ldr	r3, [r7, #32]
 582 0420 03F1FF32 		add	r2, r3, #-1
 583 0424 40F20003 		movw	r3, #:lower16:loops
 584 0428 C0F20003 		movt	r3, #:upper16:loops
 585 042c 4FF02C01 		mov	r1, #44
 586 0430 01FB02F2 		mul	r2, r1, r2
 587 0434 9B18     		adds	r3, r3, r2
 588 0436 03F10803 		add	r3, r3, #8
 589 043a 9B88     		ldrh	r3, [r3, #4]
 590 043c 1946     		mov	r1, r3
 591 043e 3B6A     		ldr	r3, [r7, #32]
 592 0440 03F1FF32 		add	r2, r3, #-1
 593 0444 40F20003 		movw	r3, #:lower16:loops
 594 0448 C0F20003 		movt	r3, #:upper16:loops
 595 044c 4FF02C00 		mov	r0, #44
 596 0450 00FB02F2 		mul	r2, r0, r2
 597 0454 9B18     		adds	r3, r3, r2
 598 0456 03F10803 		add	r3, r3, #8
ARM GAS  /tmp/ccSeVCM8.s 			page 41


 599 045a DB88     		ldrh	r3, [r3, #6]
 600 045c 1A46     		mov	r2, r3
 601 045e 3B6A     		ldr	r3, [r7, #32]
 602 0460 03F1FF30 		add	r0, r3, #-1
 603 0464 40F20003 		movw	r3, #:lower16:loops
 604 0468 C0F20003 		movt	r3, #:upper16:loops
 605 046c 4FF02C04 		mov	r4, #44
 606 0470 04FB00F0 		mul	r0, r4, r0
 607 0474 1B18     		adds	r3, r3, r0
 608 0476 03F11003 		add	r3, r3, #16
 609 047a 1B88     		ldrh	r3, [r3, #0]
 610 047c 40F20000 		movw	r0, #:lower16:.LC15
 611 0480 C0F20000 		movt	r0, #:upper16:.LC15
 612 0484 FFF7FEFF 		bl	iprintf
 613              		.loc 2 125 0
 614 0488 10E0     		b	.L5
 615              	.L29:
 124:main.c        **** 					puts("? opt");
 616              		.loc 2 124 0
 617 048a 40F20000 		movw	r0, #:lower16:.LC4
 618 048e C0F20000 		movt	r0, #:upper16:.LC4
 619 0492 FFF7FEFF 		bl	puts
 620              		.loc 2 125 0
 621 0496 09E0     		b	.L5
 622              	.L6:
 126:main.c        **** 			case 'l':
 127:main.c        **** 			case 'q':
 128:main.c        **** 				break;
 129:main.c        **** 			default:
 130:main.c        **** 				puts("? cmd");
 623              		.loc 2 130 0
 624 0498 40F20000 		movw	r0, #:lower16:.LC16
 625 049c C0F20000 		movt	r0, #:upper16:.LC16
 626 04a0 FFF7FEFF 		bl	puts
 131:main.c        **** 		}
 132:main.c        **** 	/*	if (sscanf(line, "%s%n", &cmd, &n) == 1) {
 133:main.c        **** 			if (strcmp(cmd, "set") == 0) {
 134:main.c        **** 				if (sscanf(line+n, "%u%n", &id, &n) == 1 && n <= LOOPS) {
 135:main.c        **** 
 136:main.c        **** 				}
 137:main.c        **** 				else 
 138:main.c        **** 					puts("? num");
 139:main.c        **** 			}
 140:main.c        **** 			else if (strcmp(cmd, "get") == 0) {
 141:main.c        **** 				if (sscanf(line+n, "%u%n", &id, &n) == 1 && n <= LOOPS) {
 142:main.c        **** 
 143:main.c        **** 				}
 144:main.c        **** 				else 
 145:main.c        **** 					puts("? num");
 146:main.c        **** 			}
 147:main.c        **** 			else if (strcmp(cmd, "stop") == 0) {
 148:main.c        **** 			}
 149:main.c        **** 			else if (strcmp(cmd, "start") == 0) {
 150:main.c        **** 			}
 151:main.c        **** 			else if (strcmp(cmd, "ramp") == 0) {
 152:main.c        **** 			}
 153:main.c        **** 			else if (*cmd == 'c' || *cmd == 'q') {
ARM GAS  /tmp/ccSeVCM8.s 			page 42


 154:main.c        **** 			}
 155:main.c        **** 			else
 156:main.c        **** 				puts("? cmd");
 157:main.c        **** 
 158:main.c        **** 		}
 159:main.c        **** 		else 
 160:main.c        **** 			puts("?");*/
 161:main.c        **** 	}
 627              		.loc 2 161 0
 628 04a4 F1E5     		b	.L32
 629              	.L33:
  45:main.c        **** 			continue;
 630              		.loc 2 45 0
 631 04a6 00BF     		nop
 632 04a8 00E0     		b	.L5
 633              	.L34:
 128:main.c        **** 				break;
 634              		.loc 2 128 0
 635 04aa 00BF     		nop
 636              	.L5:
 637              		.loc 2 161 0
 638 04ac EDE5     		b	.L32
 639              		.cfi_endproc
 640              	.LFE35:
 641              		.size	main, .-main
 642 04ae 00BF     		.section	.text.TC1_IrqHandler,"ax",%progbits
 643              		.align	2
 644              		.global	TC1_IrqHandler
 645              		.thumb
 646              		.thumb_func
 647              		.type	TC1_IrqHandler, %function
 648              	TC1_IrqHandler:
 649              	.LFB36:
 162:main.c        **** 	return 0;
 163:main.c        **** }
 164:main.c        **** 
 165:main.c        **** void TC1_IrqHandler()
 166:main.c        **** {
 650              		.loc 2 166 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655 0000 80B4     		push	{r7}
 656              	.LCFI6:
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 7, -4
 659 0002 00AF     		add	r7, sp, #0
 660              	.LCFI7:
 661              		.cfi_def_cfa_register 7
 167:main.c        **** }
 662              		.loc 2 167 0
 663 0004 BD46     		mov	sp, r7
 664 0006 80BC     		pop	{r7}
 665 0008 7047     		bx	lr
 666              		.cfi_endproc
 667              	.LFE36:
ARM GAS  /tmp/ccSeVCM8.s 			page 43


 668              		.size	TC1_IrqHandler, .-TC1_IrqHandler
 669 000a 00BF     		.section	.text.init,"ax",%progbits
 670              		.align	2
 671              		.global	init
 672              		.thumb
 673              		.thumb_func
 674              		.type	init, %function
 675              	init:
 676              	.LFB37:
 168:main.c        **** 
 169:main.c        **** void init()
 170:main.c        **** {
 677              		.loc 2 170 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 90B5     		push	{r4, r7, lr}
 682              	.LCFI8:
 683              		.cfi_def_cfa_offset 12
 684              		.cfi_offset 14, -4
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 4, -12
 687 0002 85B0     		sub	sp, sp, #20
 688              	.LCFI9:
 689              		.cfi_def_cfa_offset 32
 690 0004 02AF     		add	r7, sp, #8
 691              	.LCFI10:
 692              		.cfi_def_cfa 7, 24
 171:main.c        ****     uint32_t div;
 172:main.c        ****     uint32_t tcclks;
 173:main.c        **** 
 174:main.c        ****     /* Enable peripheral clock. */
 175:main.c        ****     PMC->PMC_PCER0 = 1 << ID_TC1;
 693              		.loc 2 175 0
 694 0006 4FF48063 		mov	r3, #1024
 695 000a C4F20E03 		movt	r3, 16398
 696 000e 4FF08072 		mov	r2, #16777216
 697 0012 1A61     		str	r2, [r3, #16]
 176:main.c        **** 
 177:main.c        ****     /* Configure TC */
 178:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 698              		.loc 2 178 0
 699 0014 07F10402 		add	r2, r7, #4
 700 0018 3C46     		mov	r4, r7
 701 001a 4FF4D843 		mov	r3, #27648
 702 001e C0F2DC23 		movt	r3, 732
 703 0022 0093     		str	r3, [sp, #0]
 704 0024 4FF00400 		mov	r0, #4
 705 0028 4FF4D841 		mov	r1, #27648
 706 002c C0F2DC21 		movt	r1, 732
 707 0030 2346     		mov	r3, r4
 708 0032 FFF7FEFF 		bl	TC_FindMckDivisor
 179:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 709              		.loc 2 179 0
 710 0036 3B68     		ldr	r3, [r7, #0]
 711 0038 43F48043 		orr	r3, r3, #16384
 712 003c 4FF48040 		mov	r0, #16384
ARM GAS  /tmp/ccSeVCM8.s 			page 44


 713 0040 C4F20100 		movt	r0, 16385
 714 0044 4FF00001 		mov	r1, #0
 715 0048 1A46     		mov	r2, r3
 716 004a FFF7FEFF 		bl	TC_Configure
 180:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
 717              		.loc 2 180 0
 718 004e 4FF48043 		mov	r3, #16384
 719 0052 C4F20103 		movt	r3, 16385
 720 0056 7968     		ldr	r1, [r7, #4]
 721 0058 4FF4D852 		mov	r2, #6912
 722 005c C0F2B702 		movt	r2, 183
 723 0060 B2FBF1F2 		udiv	r2, r2, r1
 724 0064 DA61     		str	r2, [r3, #28]
 181:main.c        **** 
 182:main.c        ****     /* Configure and enable interrupt on RC compare */
 183:main.c        ****     NVIC_EnableIRQ((IRQn_Type) ID_TC1);
 725              		.loc 2 183 0
 726 0066 4FF01800 		mov	r0, #24
 727 006a FFF7FEFF 		bl	NVIC_EnableIRQ
 184:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 728              		.loc 2 184 0
 729 006e 4FF48043 		mov	r3, #16384
 730 0072 C4F20103 		movt	r3, 16385
 731 0076 4FF01002 		mov	r2, #16
 732 007a 5A62     		str	r2, [r3, #36]
 185:main.c        **** 
 186:main.c        **** 	/* Tick Config */
 187:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 733              		.loc 2 187 0
 734 007c 4FF4D840 		mov	r0, #27648
 735 0080 C0F2DC20 		movt	r0, 732
 736 0084 FFF7FEFF 		bl	TimeTick_Configure
 188:main.c        **** 
 189:main.c        **** 	/* LED PIO Config */
 190:main.c        **** 	LEDs_configure();
 737              		.loc 2 190 0
 738 0088 FFF7FEFF 		bl	LEDs_configure
 191:main.c        **** 	LED_clr(statusled);
 739              		.loc 2 191 0
 740 008c 4FF00000 		mov	r0, #0
 741 0090 FFF7FEFF 		bl	LED_clr
 192:main.c        **** 
 193:main.c        **** 	/* USB Console Config */
 194:main.c        **** 	USBC_Configure();
 742              		.loc 2 194 0
 743 0094 FFF7FEFF 		bl	USBC_Configure
 195:main.c        **** 
 196:main.c        **** }
 744              		.loc 2 196 0
 745 0098 07F10C07 		add	r7, r7, #12
 746 009c BD46     		mov	sp, r7
 747 009e 90BD     		pop	{r4, r7, pc}
 748              		.cfi_endproc
 749              	.LFE37:
 750              		.size	init, .-init
 751              		.text
 752              	.Letext0:
ARM GAS  /tmp/ccSeVCM8.s 			page 45


 753              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 754              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 755              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 756              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 757              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 758              		.file 8 "libchip/include/SAM3S.h"
 759              		.file 9 "controller.h"
 760              		.section	.debug_info,"",%progbits
 761              	.Ldebug_info0:
 762 0000 5B120000 		.4byte	0x125b
 763 0004 0200     		.2byte	0x2
 764 0006 00000000 		.4byte	.Ldebug_abbrev0
 765 000a 04       		.byte	0x4
 766 000b 01       		.uleb128 0x1
 767 000c 32080000 		.4byte	.LASF246
 768 0010 01       		.byte	0x1
 769 0011 B0040000 		.4byte	.LASF247
 770 0015 7F070000 		.4byte	.LASF248
 771 0019 00000000 		.4byte	0
 772 001d 00000000 		.4byte	0
 773 0021 00000000 		.4byte	.Ldebug_ranges0+0
 774 0025 00000000 		.4byte	.Ldebug_line0
 775 0029 02       		.uleb128 0x2
 776 002a 01       		.byte	0x1
 777 002b 06       		.byte	0x6
 778 002c DE010000 		.4byte	.LASF0
 779 0030 02       		.uleb128 0x2
 780 0031 01       		.byte	0x1
 781 0032 08       		.byte	0x8
 782 0033 06020000 		.4byte	.LASF1
 783 0037 02       		.uleb128 0x2
 784 0038 02       		.byte	0x2
 785 0039 05       		.byte	0x5
 786 003a C3070000 		.4byte	.LASF2
 787 003e 02       		.uleb128 0x2
 788 003f 02       		.byte	0x2
 789 0040 07       		.byte	0x7
 790 0041 84080000 		.4byte	.LASF3
 791 0045 03       		.uleb128 0x3
 792 0046 04       		.byte	0x4
 793 0047 05       		.byte	0x5
 794 0048 696E7400 		.ascii	"int\000"
 795 004c 02       		.uleb128 0x2
 796 004d 04       		.byte	0x4
 797 004e 07       		.byte	0x7
 798 004f 20050000 		.4byte	.LASF4
 799 0053 02       		.uleb128 0x2
 800 0054 08       		.byte	0x8
 801 0055 05       		.byte	0x5
 802 0056 6F040000 		.4byte	.LASF5
 803 005a 02       		.uleb128 0x2
 804 005b 08       		.byte	0x8
 805 005c 07       		.byte	0x7
 806 005d 06060000 		.4byte	.LASF6
 807 0061 04       		.uleb128 0x4
 808 0062 F0030000 		.4byte	.LASF8
 809 0066 03       		.byte	0x3
ARM GAS  /tmp/ccSeVCM8.s 			page 46


 810 0067 07       		.byte	0x7
 811 0068 45000000 		.4byte	0x45
 812 006c 02       		.uleb128 0x2
 813 006d 04       		.byte	0x4
 814 006e 05       		.byte	0x5
 815 006f 46010000 		.4byte	.LASF7
 816 0073 04       		.uleb128 0x4
 817 0074 E2050000 		.4byte	.LASF9
 818 0078 04       		.byte	0x4
 819 0079 2C       		.byte	0x2c
 820 007a 6C000000 		.4byte	0x6c
 821 007e 05       		.uleb128 0x5
 822 007f DB060000 		.4byte	.LASF10
 823 0083 05       		.byte	0x5
 824 0084 6101     		.2byte	0x161
 825 0086 4C000000 		.4byte	0x4c
 826 008a 06       		.uleb128 0x6
 827 008b 04       		.byte	0x4
 828 008c 04       		.byte	0x4
 829 008d 46       		.byte	0x46
 830 008e A9000000 		.4byte	0xa9
 831 0092 07       		.uleb128 0x7
 832 0093 EB000000 		.4byte	.LASF11
 833 0097 04       		.byte	0x4
 834 0098 48       		.byte	0x48
 835 0099 7E000000 		.4byte	0x7e
 836 009d 07       		.uleb128 0x7
 837 009e EA050000 		.4byte	.LASF12
 838 00a2 04       		.byte	0x4
 839 00a3 49       		.byte	0x49
 840 00a4 A9000000 		.4byte	0xa9
 841 00a8 00       		.byte	0
 842 00a9 08       		.uleb128 0x8
 843 00aa 30000000 		.4byte	0x30
 844 00ae B9000000 		.4byte	0xb9
 845 00b2 09       		.uleb128 0x9
 846 00b3 4C000000 		.4byte	0x4c
 847 00b7 03       		.byte	0x3
 848 00b8 00       		.byte	0
 849 00b9 0A       		.uleb128 0xa
 850 00ba 08       		.byte	0x8
 851 00bb 04       		.byte	0x4
 852 00bc 43       		.byte	0x43
 853 00bd DE000000 		.4byte	0xde
 854 00c1 0B       		.uleb128 0xb
 855 00c2 9F050000 		.4byte	.LASF13
 856 00c6 04       		.byte	0x4
 857 00c7 45       		.byte	0x45
 858 00c8 45000000 		.4byte	0x45
 859 00cc 02       		.byte	0x2
 860 00cd 23       		.byte	0x23
 861 00ce 00       		.uleb128 0
 862 00cf 0B       		.uleb128 0xb
 863 00d0 34000000 		.4byte	.LASF14
 864 00d4 04       		.byte	0x4
 865 00d5 4A       		.byte	0x4a
 866 00d6 8A000000 		.4byte	0x8a
ARM GAS  /tmp/ccSeVCM8.s 			page 47


 867 00da 02       		.byte	0x2
 868 00db 23       		.byte	0x23
 869 00dc 04       		.uleb128 0x4
 870 00dd 00       		.byte	0
 871 00de 04       		.uleb128 0x4
 872 00df B8060000 		.4byte	.LASF15
 873 00e3 04       		.byte	0x4
 874 00e4 4B       		.byte	0x4b
 875 00e5 B9000000 		.4byte	0xb9
 876 00e9 04       		.uleb128 0x4
 877 00ea A1060000 		.4byte	.LASF16
 878 00ee 04       		.byte	0x4
 879 00ef 4F       		.byte	0x4f
 880 00f0 61000000 		.4byte	0x61
 881 00f4 0C       		.uleb128 0xc
 882 00f5 04       		.byte	0x4
 883 00f6 04       		.uleb128 0x4
 884 00f7 54080000 		.4byte	.LASF17
 885 00fb 06       		.byte	0x6
 886 00fc 15       		.byte	0x15
 887 00fd 01010000 		.4byte	0x101
 888 0101 02       		.uleb128 0x2
 889 0102 04       		.byte	0x4
 890 0103 07       		.byte	0x7
 891 0104 8F030000 		.4byte	.LASF18
 892 0108 0D       		.uleb128 0xd
 893 0109 2C040000 		.4byte	.LASF23
 894 010d 18       		.byte	0x18
 895 010e 06       		.byte	0x6
 896 010f 2C       		.byte	0x2c
 897 0110 67010000 		.4byte	0x167
 898 0114 0B       		.uleb128 0xb
 899 0115 E2060000 		.4byte	.LASF19
 900 0119 06       		.byte	0x6
 901 011a 2E       		.byte	0x2e
 902 011b 67010000 		.4byte	0x167
 903 011f 02       		.byte	0x2
 904 0120 23       		.byte	0x23
 905 0121 00       		.uleb128 0
 906 0122 0E       		.uleb128 0xe
 907 0123 5F6B00   		.ascii	"_k\000"
 908 0126 06       		.byte	0x6
 909 0127 2F       		.byte	0x2f
 910 0128 45000000 		.4byte	0x45
 911 012c 02       		.byte	0x2
 912 012d 23       		.byte	0x23
 913 012e 04       		.uleb128 0x4
 914 012f 0B       		.uleb128 0xb
 915 0130 34040000 		.4byte	.LASF20
 916 0134 06       		.byte	0x6
 917 0135 2F       		.byte	0x2f
 918 0136 45000000 		.4byte	0x45
 919 013a 02       		.byte	0x2
 920 013b 23       		.byte	0x23
 921 013c 08       		.uleb128 0x8
 922 013d 0B       		.uleb128 0xb
 923 013e 10050000 		.4byte	.LASF21
ARM GAS  /tmp/ccSeVCM8.s 			page 48


 924 0142 06       		.byte	0x6
 925 0143 2F       		.byte	0x2f
 926 0144 45000000 		.4byte	0x45
 927 0148 02       		.byte	0x2
 928 0149 23       		.byte	0x23
 929 014a 0C       		.uleb128 0xc
 930 014b 0B       		.uleb128 0xb
 931 014c FB020000 		.4byte	.LASF22
 932 0150 06       		.byte	0x6
 933 0151 2F       		.byte	0x2f
 934 0152 45000000 		.4byte	0x45
 935 0156 02       		.byte	0x2
 936 0157 23       		.byte	0x23
 937 0158 10       		.uleb128 0x10
 938 0159 0E       		.uleb128 0xe
 939 015a 5F7800   		.ascii	"_x\000"
 940 015d 06       		.byte	0x6
 941 015e 30       		.byte	0x30
 942 015f 6D010000 		.4byte	0x16d
 943 0163 02       		.byte	0x2
 944 0164 23       		.byte	0x23
 945 0165 14       		.uleb128 0x14
 946 0166 00       		.byte	0
 947 0167 0F       		.uleb128 0xf
 948 0168 04       		.byte	0x4
 949 0169 08010000 		.4byte	0x108
 950 016d 08       		.uleb128 0x8
 951 016e F6000000 		.4byte	0xf6
 952 0172 7D010000 		.4byte	0x17d
 953 0176 09       		.uleb128 0x9
 954 0177 4C000000 		.4byte	0x4c
 955 017b 00       		.byte	0
 956 017c 00       		.byte	0
 957 017d 0D       		.uleb128 0xd
 958 017e 88000000 		.4byte	.LASF24
 959 0182 24       		.byte	0x24
 960 0183 06       		.byte	0x6
 961 0184 34       		.byte	0x34
 962 0185 08020000 		.4byte	0x208
 963 0189 0B       		.uleb128 0xb
 964 018a A4000000 		.4byte	.LASF25
 965 018e 06       		.byte	0x6
 966 018f 36       		.byte	0x36
 967 0190 45000000 		.4byte	0x45
 968 0194 02       		.byte	0x2
 969 0195 23       		.byte	0x23
 970 0196 00       		.uleb128 0
 971 0197 0B       		.uleb128 0xb
 972 0198 0C090000 		.4byte	.LASF26
 973 019c 06       		.byte	0x6
 974 019d 37       		.byte	0x37
 975 019e 45000000 		.4byte	0x45
 976 01a2 02       		.byte	0x2
 977 01a3 23       		.byte	0x23
 978 01a4 04       		.uleb128 0x4
 979 01a5 0B       		.uleb128 0xb
 980 01a6 97080000 		.4byte	.LASF27
ARM GAS  /tmp/ccSeVCM8.s 			page 49


 981 01aa 06       		.byte	0x6
 982 01ab 38       		.byte	0x38
 983 01ac 45000000 		.4byte	0x45
 984 01b0 02       		.byte	0x2
 985 01b1 23       		.byte	0x23
 986 01b2 08       		.uleb128 0x8
 987 01b3 0B       		.uleb128 0xb
 988 01b4 56050000 		.4byte	.LASF28
 989 01b8 06       		.byte	0x6
 990 01b9 39       		.byte	0x39
 991 01ba 45000000 		.4byte	0x45
 992 01be 02       		.byte	0x2
 993 01bf 23       		.byte	0x23
 994 01c0 0C       		.uleb128 0xc
 995 01c1 0B       		.uleb128 0xb
 996 01c2 AA010000 		.4byte	.LASF29
 997 01c6 06       		.byte	0x6
 998 01c7 3A       		.byte	0x3a
 999 01c8 45000000 		.4byte	0x45
 1000 01cc 02       		.byte	0x2
 1001 01cd 23       		.byte	0x23
 1002 01ce 10       		.uleb128 0x10
 1003 01cf 0B       		.uleb128 0xb
 1004 01d0 F4070000 		.4byte	.LASF30
 1005 01d4 06       		.byte	0x6
 1006 01d5 3B       		.byte	0x3b
 1007 01d6 45000000 		.4byte	0x45
 1008 01da 02       		.byte	0x2
 1009 01db 23       		.byte	0x23
 1010 01dc 14       		.uleb128 0x14
 1011 01dd 0B       		.uleb128 0xb
 1012 01de AE050000 		.4byte	.LASF31
 1013 01e2 06       		.byte	0x6
 1014 01e3 3C       		.byte	0x3c
 1015 01e4 45000000 		.4byte	0x45
 1016 01e8 02       		.byte	0x2
 1017 01e9 23       		.byte	0x23
 1018 01ea 18       		.uleb128 0x18
 1019 01eb 0B       		.uleb128 0xb
 1020 01ec B8050000 		.4byte	.LASF32
 1021 01f0 06       		.byte	0x6
 1022 01f1 3D       		.byte	0x3d
 1023 01f2 45000000 		.4byte	0x45
 1024 01f6 02       		.byte	0x2
 1025 01f7 23       		.byte	0x23
 1026 01f8 1C       		.uleb128 0x1c
 1027 01f9 0B       		.uleb128 0xb
 1028 01fa 01090000 		.4byte	.LASF33
 1029 01fe 06       		.byte	0x6
 1030 01ff 3E       		.byte	0x3e
 1031 0200 45000000 		.4byte	0x45
 1032 0204 02       		.byte	0x2
 1033 0205 23       		.byte	0x23
 1034 0206 20       		.uleb128 0x20
 1035 0207 00       		.byte	0
 1036 0208 10       		.uleb128 0x10
 1037 0209 02010000 		.4byte	.LASF34
ARM GAS  /tmp/ccSeVCM8.s 			page 50


 1038 020d 0801     		.2byte	0x108
 1039 020f 06       		.byte	0x6
 1040 0210 47       		.byte	0x47
 1041 0211 51020000 		.4byte	0x251
 1042 0215 0B       		.uleb128 0xb
 1043 0216 F9080000 		.4byte	.LASF35
 1044 021a 06       		.byte	0x6
 1045 021b 48       		.byte	0x48
 1046 021c 51020000 		.4byte	0x251
 1047 0220 02       		.byte	0x2
 1048 0221 23       		.byte	0x23
 1049 0222 00       		.uleb128 0
 1050 0223 0B       		.uleb128 0xb
 1051 0224 26060000 		.4byte	.LASF36
 1052 0228 06       		.byte	0x6
 1053 0229 49       		.byte	0x49
 1054 022a 51020000 		.4byte	0x251
 1055 022e 03       		.byte	0x3
 1056 022f 23       		.byte	0x23
 1057 0230 8001     		.uleb128 0x80
 1058 0232 0B       		.uleb128 0xb
 1059 0233 E1070000 		.4byte	.LASF37
 1060 0237 06       		.byte	0x6
 1061 0238 4B       		.byte	0x4b
 1062 0239 F6000000 		.4byte	0xf6
 1063 023d 03       		.byte	0x3
 1064 023e 23       		.byte	0x23
 1065 023f 8002     		.uleb128 0x100
 1066 0241 0B       		.uleb128 0xb
 1067 0242 2A080000 		.4byte	.LASF38
 1068 0246 06       		.byte	0x6
 1069 0247 4E       		.byte	0x4e
 1070 0248 F6000000 		.4byte	0xf6
 1071 024c 03       		.byte	0x3
 1072 024d 23       		.byte	0x23
 1073 024e 8402     		.uleb128 0x104
 1074 0250 00       		.byte	0
 1075 0251 08       		.uleb128 0x8
 1076 0252 F4000000 		.4byte	0xf4
 1077 0256 61020000 		.4byte	0x261
 1078 025a 09       		.uleb128 0x9
 1079 025b 4C000000 		.4byte	0x4c
 1080 025f 1F       		.byte	0x1f
 1081 0260 00       		.byte	0
 1082 0261 0D       		.uleb128 0xd
 1083 0262 97050000 		.4byte	.LASF39
 1084 0266 8C       		.byte	0x8c
 1085 0267 06       		.byte	0x6
 1086 0268 52       		.byte	0x52
 1087 0269 A7020000 		.4byte	0x2a7
 1088 026d 0B       		.uleb128 0xb
 1089 026e E2060000 		.4byte	.LASF19
 1090 0272 06       		.byte	0x6
 1091 0273 53       		.byte	0x53
 1092 0274 A7020000 		.4byte	0x2a7
 1093 0278 02       		.byte	0x2
 1094 0279 23       		.byte	0x23
ARM GAS  /tmp/ccSeVCM8.s 			page 51


 1095 027a 00       		.uleb128 0
 1096 027b 0B       		.uleb128 0xb
 1097 027c 16080000 		.4byte	.LASF40
 1098 0280 06       		.byte	0x6
 1099 0281 54       		.byte	0x54
 1100 0282 45000000 		.4byte	0x45
 1101 0286 02       		.byte	0x2
 1102 0287 23       		.byte	0x23
 1103 0288 04       		.uleb128 0x4
 1104 0289 0B       		.uleb128 0xb
 1105 028a 7B020000 		.4byte	.LASF41
 1106 028e 06       		.byte	0x6
 1107 028f 55       		.byte	0x55
 1108 0290 AD020000 		.4byte	0x2ad
 1109 0294 02       		.byte	0x2
 1110 0295 23       		.byte	0x23
 1111 0296 08       		.uleb128 0x8
 1112 0297 0B       		.uleb128 0xb
 1113 0298 7D040000 		.4byte	.LASF42
 1114 029c 06       		.byte	0x6
 1115 029d 56       		.byte	0x56
 1116 029e C5020000 		.4byte	0x2c5
 1117 02a2 03       		.byte	0x3
 1118 02a3 23       		.byte	0x23
 1119 02a4 8801     		.uleb128 0x88
 1120 02a6 00       		.byte	0
 1121 02a7 0F       		.uleb128 0xf
 1122 02a8 04       		.byte	0x4
 1123 02a9 61020000 		.4byte	0x261
 1124 02ad 08       		.uleb128 0x8
 1125 02ae BF020000 		.4byte	0x2bf
 1126 02b2 BD020000 		.4byte	0x2bd
 1127 02b6 09       		.uleb128 0x9
 1128 02b7 4C000000 		.4byte	0x4c
 1129 02bb 1F       		.byte	0x1f
 1130 02bc 00       		.byte	0
 1131 02bd 11       		.uleb128 0x11
 1132 02be 01       		.byte	0x1
 1133 02bf 0F       		.uleb128 0xf
 1134 02c0 04       		.byte	0x4
 1135 02c1 BD020000 		.4byte	0x2bd
 1136 02c5 0F       		.uleb128 0xf
 1137 02c6 04       		.byte	0x4
 1138 02c7 08020000 		.4byte	0x208
 1139 02cb 0D       		.uleb128 0xd
 1140 02cc 23080000 		.4byte	.LASF43
 1141 02d0 08       		.byte	0x8
 1142 02d1 06       		.byte	0x6
 1143 02d2 69       		.byte	0x69
 1144 02d3 F4020000 		.4byte	0x2f4
 1145 02d7 0B       		.uleb128 0xb
 1146 02d8 62060000 		.4byte	.LASF44
 1147 02dc 06       		.byte	0x6
 1148 02dd 6A       		.byte	0x6a
 1149 02de F4020000 		.4byte	0x2f4
 1150 02e2 02       		.byte	0x2
 1151 02e3 23       		.byte	0x23
ARM GAS  /tmp/ccSeVCM8.s 			page 52


 1152 02e4 00       		.uleb128 0
 1153 02e5 0B       		.uleb128 0xb
 1154 02e6 65010000 		.4byte	.LASF45
 1155 02ea 06       		.byte	0x6
 1156 02eb 6B       		.byte	0x6b
 1157 02ec 45000000 		.4byte	0x45
 1158 02f0 02       		.byte	0x2
 1159 02f1 23       		.byte	0x23
 1160 02f2 04       		.uleb128 0x4
 1161 02f3 00       		.byte	0
 1162 02f4 0F       		.uleb128 0xf
 1163 02f5 04       		.byte	0x4
 1164 02f6 30000000 		.4byte	0x30
 1165 02fa 12       		.uleb128 0x12
 1166 02fb 3C020000 		.4byte	.LASF46
 1167 02ff F0       		.byte	0xf0
 1168 0300 06       		.byte	0x6
 1169 0301 7B01     		.2byte	0x17b
 1170 0303 74040000 		.4byte	0x474
 1171 0307 13       		.uleb128 0x13
 1172 0308 02040000 		.4byte	.LASF47
 1173 030c 06       		.byte	0x6
 1174 030d 7F01     		.2byte	0x17f
 1175 030f 45000000 		.4byte	0x45
 1176 0313 02       		.byte	0x2
 1177 0314 23       		.byte	0x23
 1178 0315 00       		.uleb128 0
 1179 0316 13       		.uleb128 0x13
 1180 0317 A6020000 		.4byte	.LASF48
 1181 031b 06       		.byte	0x6
 1182 031c 8401     		.2byte	0x184
 1183 031e E3060000 		.4byte	0x6e3
 1184 0322 02       		.byte	0x2
 1185 0323 23       		.byte	0x23
 1186 0324 04       		.uleb128 0x4
 1187 0325 13       		.uleb128 0x13
 1188 0326 45060000 		.4byte	.LASF49
 1189 032a 06       		.byte	0x6
 1190 032b 8401     		.2byte	0x184
 1191 032d E3060000 		.4byte	0x6e3
 1192 0331 02       		.byte	0x2
 1193 0332 23       		.byte	0x23
 1194 0333 08       		.uleb128 0x8
 1195 0334 13       		.uleb128 0x13
 1196 0335 66050000 		.4byte	.LASF50
 1197 0339 06       		.byte	0x6
 1198 033a 8401     		.2byte	0x184
 1199 033c E3060000 		.4byte	0x6e3
 1200 0340 02       		.byte	0x2
 1201 0341 23       		.byte	0x23
 1202 0342 0C       		.uleb128 0xc
 1203 0343 13       		.uleb128 0x13
 1204 0344 11080000 		.4byte	.LASF51
 1205 0348 06       		.byte	0x6
 1206 0349 8601     		.2byte	0x186
 1207 034b 45000000 		.4byte	0x45
 1208 034f 02       		.byte	0x2
ARM GAS  /tmp/ccSeVCM8.s 			page 53


 1209 0350 23       		.byte	0x23
 1210 0351 10       		.uleb128 0x10
 1211 0352 13       		.uleb128 0x13
 1212 0353 64040000 		.4byte	.LASF52
 1213 0357 06       		.byte	0x6
 1214 0358 8801     		.2byte	0x188
 1215 035a F3050000 		.4byte	0x5f3
 1216 035e 02       		.byte	0x2
 1217 035f 23       		.byte	0x23
 1218 0360 14       		.uleb128 0x14
 1219 0361 13       		.uleb128 0x13
 1220 0362 C6030000 		.4byte	.LASF53
 1221 0366 06       		.byte	0x6
 1222 0367 8A01     		.2byte	0x18a
 1223 0369 45000000 		.4byte	0x45
 1224 036d 02       		.byte	0x2
 1225 036e 23       		.byte	0x23
 1226 036f 18       		.uleb128 0x18
 1227 0370 13       		.uleb128 0x13
 1228 0371 CC010000 		.4byte	.LASF54
 1229 0375 06       		.byte	0x6
 1230 0376 8C01     		.2byte	0x18c
 1231 0378 45000000 		.4byte	0x45
 1232 037c 02       		.byte	0x2
 1233 037d 23       		.byte	0x23
 1234 037e 1C       		.uleb128 0x1c
 1235 037f 13       		.uleb128 0x13
 1236 0380 DD040000 		.4byte	.LASF55
 1237 0384 06       		.byte	0x6
 1238 0385 8D01     		.2byte	0x18d
 1239 0387 25060000 		.4byte	0x625
 1240 038b 02       		.byte	0x2
 1241 038c 23       		.byte	0x23
 1242 038d 20       		.uleb128 0x20
 1243 038e 14       		.uleb128 0x14
 1244 038f 5F6D7000 		.ascii	"_mp\000"
 1245 0393 06       		.byte	0x6
 1246 0394 8F01     		.2byte	0x18f
 1247 0396 56080000 		.4byte	0x856
 1248 039a 02       		.byte	0x2
 1249 039b 23       		.byte	0x23
 1250 039c 24       		.uleb128 0x24
 1251 039d 13       		.uleb128 0x13
 1252 039e 3C040000 		.4byte	.LASF56
 1253 03a2 06       		.byte	0x6
 1254 03a3 9101     		.2byte	0x191
 1255 03a5 68080000 		.4byte	0x868
 1256 03a9 02       		.byte	0x2
 1257 03aa 23       		.byte	0x23
 1258 03ab 28       		.uleb128 0x28
 1259 03ac 13       		.uleb128 0x13
 1260 03ad C3040000 		.4byte	.LASF57
 1261 03b1 06       		.byte	0x6
 1262 03b2 9301     		.2byte	0x193
 1263 03b4 45000000 		.4byte	0x45
 1264 03b8 02       		.byte	0x2
 1265 03b9 23       		.byte	0x23
ARM GAS  /tmp/ccSeVCM8.s 			page 54


 1266 03ba 2C       		.uleb128 0x2c
 1267 03bb 13       		.uleb128 0x13
 1268 03bc 78000000 		.4byte	.LASF58
 1269 03c0 06       		.byte	0x6
 1270 03c1 9601     		.2byte	0x196
 1271 03c3 45000000 		.4byte	0x45
 1272 03c7 02       		.byte	0x2
 1273 03c8 23       		.byte	0x23
 1274 03c9 30       		.uleb128 0x30
 1275 03ca 13       		.uleb128 0x13
 1276 03cb 24030000 		.4byte	.LASF59
 1277 03cf 06       		.byte	0x6
 1278 03d0 9701     		.2byte	0x197
 1279 03d2 F3050000 		.4byte	0x5f3
 1280 03d6 02       		.byte	0x2
 1281 03d7 23       		.byte	0x23
 1282 03d8 34       		.uleb128 0x34
 1283 03d9 13       		.uleb128 0x13
 1284 03da CE060000 		.4byte	.LASF60
 1285 03de 06       		.byte	0x6
 1286 03df 9901     		.2byte	0x199
 1287 03e1 6E080000 		.4byte	0x86e
 1288 03e5 02       		.byte	0x2
 1289 03e6 23       		.byte	0x23
 1290 03e7 38       		.uleb128 0x38
 1291 03e8 13       		.uleb128 0x13
 1292 03e9 6B010000 		.4byte	.LASF61
 1293 03ed 06       		.byte	0x6
 1294 03ee 9A01     		.2byte	0x19a
 1295 03f0 74080000 		.4byte	0x874
 1296 03f4 02       		.byte	0x2
 1297 03f5 23       		.byte	0x23
 1298 03f6 3C       		.uleb128 0x3c
 1299 03f7 13       		.uleb128 0x13
 1300 03f8 6B000000 		.4byte	.LASF62
 1301 03fc 06       		.byte	0x6
 1302 03fd 9B01     		.2byte	0x19b
 1303 03ff F3050000 		.4byte	0x5f3
 1304 0403 02       		.byte	0x2
 1305 0404 23       		.byte	0x23
 1306 0405 40       		.uleb128 0x40
 1307 0406 13       		.uleb128 0x13
 1308 0407 12030000 		.4byte	.LASF63
 1309 040b 06       		.byte	0x6
 1310 040c 9E01     		.2byte	0x19e
 1311 040e 86080000 		.4byte	0x886
 1312 0412 02       		.byte	0x2
 1313 0413 23       		.byte	0x23
 1314 0414 44       		.uleb128 0x44
 1315 0415 13       		.uleb128 0x13
 1316 0416 97050000 		.4byte	.LASF39
 1317 041a 06       		.byte	0x6
 1318 041b A101     		.2byte	0x1a1
 1319 041d A7020000 		.4byte	0x2a7
 1320 0421 02       		.byte	0x2
 1321 0422 23       		.byte	0x23
 1322 0423 48       		.uleb128 0x48
ARM GAS  /tmp/ccSeVCM8.s 			page 55


 1323 0424 13       		.uleb128 0x13
 1324 0425 5B040000 		.4byte	.LASF64
 1325 0429 06       		.byte	0x6
 1326 042a A201     		.2byte	0x1a2
 1327 042c 61020000 		.4byte	0x261
 1328 0430 02       		.byte	0x2
 1329 0431 23       		.byte	0x23
 1330 0432 4C       		.uleb128 0x4c
 1331 0433 13       		.uleb128 0x13
 1332 0434 A0040000 		.4byte	.LASF65
 1333 0438 06       		.byte	0x6
 1334 0439 A401     		.2byte	0x1a4
 1335 043b A2060000 		.4byte	0x6a2
 1336 043f 03       		.byte	0x3
 1337 0440 23       		.byte	0x23
 1338 0441 D801     		.uleb128 0xd8
 1339 0443 13       		.uleb128 0x13
 1340 0444 3C000000 		.4byte	.LASF66
 1341 0448 06       		.byte	0x6
 1342 0449 A501     		.2byte	0x1a5
 1343 044b E3060000 		.4byte	0x6e3
 1344 044f 03       		.byte	0x3
 1345 0450 23       		.byte	0x23
 1346 0451 E401     		.uleb128 0xe4
 1347 0453 13       		.uleb128 0x13
 1348 0454 4E080000 		.4byte	.LASF67
 1349 0458 06       		.byte	0x6
 1350 0459 A601     		.2byte	0x1a6
 1351 045b 92080000 		.4byte	0x892
 1352 045f 03       		.byte	0x3
 1353 0460 23       		.byte	0x23
 1354 0461 E801     		.uleb128 0xe8
 1355 0463 13       		.uleb128 0x13
 1356 0464 12040000 		.4byte	.LASF68
 1357 0468 06       		.byte	0x6
 1358 0469 A701     		.2byte	0x1a7
 1359 046b F3050000 		.4byte	0x5f3
 1360 046f 03       		.byte	0x3
 1361 0470 23       		.byte	0x23
 1362 0471 EC01     		.uleb128 0xec
 1363 0473 00       		.byte	0
 1364 0474 0F       		.uleb128 0xf
 1365 0475 04       		.byte	0x4
 1366 0476 FA020000 		.4byte	0x2fa
 1367 047a 0D       		.uleb128 0xd
 1368 047b BE030000 		.4byte	.LASF69
 1369 047f 68       		.byte	0x68
 1370 0480 06       		.byte	0x6
 1371 0481 B3       		.byte	0xb3
 1372 0482 D4050000 		.4byte	0x5d4
 1373 0486 0E       		.uleb128 0xe
 1374 0487 5F7000   		.ascii	"_p\000"
 1375 048a 06       		.byte	0x6
 1376 048b B4       		.byte	0xb4
 1377 048c F4020000 		.4byte	0x2f4
 1378 0490 02       		.byte	0x2
 1379 0491 23       		.byte	0x23
ARM GAS  /tmp/ccSeVCM8.s 			page 56


 1380 0492 00       		.uleb128 0
 1381 0493 0E       		.uleb128 0xe
 1382 0494 5F7200   		.ascii	"_r\000"
 1383 0497 06       		.byte	0x6
 1384 0498 B5       		.byte	0xb5
 1385 0499 45000000 		.4byte	0x45
 1386 049d 02       		.byte	0x2
 1387 049e 23       		.byte	0x23
 1388 049f 04       		.uleb128 0x4
 1389 04a0 0E       		.uleb128 0xe
 1390 04a1 5F7700   		.ascii	"_w\000"
 1391 04a4 06       		.byte	0x6
 1392 04a5 B6       		.byte	0xb6
 1393 04a6 45000000 		.4byte	0x45
 1394 04aa 02       		.byte	0x2
 1395 04ab 23       		.byte	0x23
 1396 04ac 08       		.uleb128 0x8
 1397 04ad 0B       		.uleb128 0xb
 1398 04ae 90050000 		.4byte	.LASF70
 1399 04b2 06       		.byte	0x6
 1400 04b3 B7       		.byte	0xb7
 1401 04b4 37000000 		.4byte	0x37
 1402 04b8 02       		.byte	0x2
 1403 04b9 23       		.byte	0x23
 1404 04ba 0C       		.uleb128 0xc
 1405 04bb 0B       		.uleb128 0xb
 1406 04bc FC000000 		.4byte	.LASF71
 1407 04c0 06       		.byte	0x6
 1408 04c1 B8       		.byte	0xb8
 1409 04c2 37000000 		.4byte	0x37
 1410 04c6 02       		.byte	0x2
 1411 04c7 23       		.byte	0x23
 1412 04c8 0E       		.uleb128 0xe
 1413 04c9 0E       		.uleb128 0xe
 1414 04ca 5F626600 		.ascii	"_bf\000"
 1415 04ce 06       		.byte	0x6
 1416 04cf B9       		.byte	0xb9
 1417 04d0 CB020000 		.4byte	0x2cb
 1418 04d4 02       		.byte	0x2
 1419 04d5 23       		.byte	0x23
 1420 04d6 10       		.uleb128 0x10
 1421 04d7 0B       		.uleb128 0xb
 1422 04d8 08080000 		.4byte	.LASF72
 1423 04dc 06       		.byte	0x6
 1424 04dd BA       		.byte	0xba
 1425 04de 45000000 		.4byte	0x45
 1426 04e2 02       		.byte	0x2
 1427 04e3 23       		.byte	0x23
 1428 04e4 18       		.uleb128 0x18
 1429 04e5 0B       		.uleb128 0xb
 1430 04e6 E8060000 		.4byte	.LASF73
 1431 04ea 06       		.byte	0x6
 1432 04eb BD       		.byte	0xbd
 1433 04ec 74040000 		.4byte	0x474
 1434 04f0 02       		.byte	0x2
 1435 04f1 23       		.byte	0x23
 1436 04f2 1C       		.uleb128 0x1c
ARM GAS  /tmp/ccSeVCM8.s 			page 57


 1437 04f3 0B       		.uleb128 0xb
 1438 04f4 F3020000 		.4byte	.LASF74
 1439 04f8 06       		.byte	0x6
 1440 04f9 C1       		.byte	0xc1
 1441 04fa F4000000 		.4byte	0xf4
 1442 04fe 02       		.byte	0x2
 1443 04ff 23       		.byte	0x23
 1444 0500 20       		.uleb128 0x20
 1445 0501 0B       		.uleb128 0xb
 1446 0502 41000000 		.4byte	.LASF75
 1447 0506 06       		.byte	0x6
 1448 0507 C3       		.byte	0xc3
 1449 0508 00060000 		.4byte	0x600
 1450 050c 02       		.byte	0x2
 1451 050d 23       		.byte	0x23
 1452 050e 24       		.uleb128 0x24
 1453 050f 0B       		.uleb128 0xb
 1454 0510 5C000000 		.4byte	.LASF76
 1455 0514 06       		.byte	0x6
 1456 0515 C5       		.byte	0xc5
 1457 0516 30060000 		.4byte	0x630
 1458 051a 02       		.byte	0x2
 1459 051b 23       		.byte	0x23
 1460 051c 28       		.uleb128 0x28
 1461 051d 0B       		.uleb128 0xb
 1462 051e D1050000 		.4byte	.LASF77
 1463 0522 06       		.byte	0x6
 1464 0523 C7       		.byte	0xc7
 1465 0524 55060000 		.4byte	0x655
 1466 0528 02       		.byte	0x2
 1467 0529 23       		.byte	0x23
 1468 052a 2C       		.uleb128 0x2c
 1469 052b 0B       		.uleb128 0xb
 1470 052c 8E020000 		.4byte	.LASF78
 1471 0530 06       		.byte	0x6
 1472 0531 C8       		.byte	0xc8
 1473 0532 70060000 		.4byte	0x670
 1474 0536 02       		.byte	0x2
 1475 0537 23       		.byte	0x23
 1476 0538 30       		.uleb128 0x30
 1477 0539 0E       		.uleb128 0xe
 1478 053a 5F756200 		.ascii	"_ub\000"
 1479 053e 06       		.byte	0x6
 1480 053f CB       		.byte	0xcb
 1481 0540 CB020000 		.4byte	0x2cb
 1482 0544 02       		.byte	0x2
 1483 0545 23       		.byte	0x23
 1484 0546 34       		.uleb128 0x34
 1485 0547 0E       		.uleb128 0xe
 1486 0548 5F757000 		.ascii	"_up\000"
 1487 054c 06       		.byte	0x6
 1488 054d CC       		.byte	0xcc
 1489 054e F4020000 		.4byte	0x2f4
 1490 0552 02       		.byte	0x2
 1491 0553 23       		.byte	0x23
 1492 0554 3C       		.uleb128 0x3c
 1493 0555 0E       		.uleb128 0xe
ARM GAS  /tmp/ccSeVCM8.s 			page 58


 1494 0556 5F757200 		.ascii	"_ur\000"
 1495 055a 06       		.byte	0x6
 1496 055b CD       		.byte	0xcd
 1497 055c 45000000 		.4byte	0x45
 1498 0560 02       		.byte	0x2
 1499 0561 23       		.byte	0x23
 1500 0562 40       		.uleb128 0x40
 1501 0563 0B       		.uleb128 0xb
 1502 0564 60050000 		.4byte	.LASF79
 1503 0568 06       		.byte	0x6
 1504 0569 D0       		.byte	0xd0
 1505 056a 76060000 		.4byte	0x676
 1506 056e 02       		.byte	0x2
 1507 056f 23       		.byte	0x23
 1508 0570 44       		.uleb128 0x44
 1509 0571 0B       		.uleb128 0xb
 1510 0572 9E000000 		.4byte	.LASF80
 1511 0576 06       		.byte	0x6
 1512 0577 D1       		.byte	0xd1
 1513 0578 86060000 		.4byte	0x686
 1514 057c 02       		.byte	0x2
 1515 057d 23       		.byte	0x23
 1516 057e 47       		.uleb128 0x47
 1517 057f 0E       		.uleb128 0xe
 1518 0580 5F6C6200 		.ascii	"_lb\000"
 1519 0584 06       		.byte	0x6
 1520 0585 D4       		.byte	0xd4
 1521 0586 CB020000 		.4byte	0x2cb
 1522 058a 02       		.byte	0x2
 1523 058b 23       		.byte	0x23
 1524 058c 48       		.uleb128 0x48
 1525 058d 0B       		.uleb128 0xb
 1526 058e 59060000 		.4byte	.LASF81
 1527 0592 06       		.byte	0x6
 1528 0593 D7       		.byte	0xd7
 1529 0594 45000000 		.4byte	0x45
 1530 0598 02       		.byte	0x2
 1531 0599 23       		.byte	0x23
 1532 059a 50       		.uleb128 0x50
 1533 059b 0B       		.uleb128 0xb
 1534 059c 1C030000 		.4byte	.LASF82
 1535 05a0 06       		.byte	0x6
 1536 05a1 D8       		.byte	0xd8
 1537 05a2 45000000 		.4byte	0x45
 1538 05a6 02       		.byte	0x2
 1539 05a7 23       		.byte	0x23
 1540 05a8 54       		.uleb128 0x54
 1541 05a9 0B       		.uleb128 0xb
 1542 05aa B7000000 		.4byte	.LASF83
 1543 05ae 06       		.byte	0x6
 1544 05af DF       		.byte	0xdf
 1545 05b0 E9000000 		.4byte	0xe9
 1546 05b4 02       		.byte	0x2
 1547 05b5 23       		.byte	0x23
 1548 05b6 58       		.uleb128 0x58
 1549 05b7 0B       		.uleb128 0xb
 1550 05b8 7C050000 		.4byte	.LASF84
ARM GAS  /tmp/ccSeVCM8.s 			page 59


 1551 05bc 06       		.byte	0x6
 1552 05bd E1       		.byte	0xe1
 1553 05be DE000000 		.4byte	0xde
 1554 05c2 02       		.byte	0x2
 1555 05c3 23       		.byte	0x23
 1556 05c4 5C       		.uleb128 0x5c
 1557 05c5 0B       		.uleb128 0xb
 1558 05c6 D1030000 		.4byte	.LASF85
 1559 05ca 06       		.byte	0x6
 1560 05cb E2       		.byte	0xe2
 1561 05cc 45000000 		.4byte	0x45
 1562 05d0 02       		.byte	0x2
 1563 05d1 23       		.byte	0x23
 1564 05d2 64       		.uleb128 0x64
 1565 05d3 00       		.byte	0
 1566 05d4 15       		.uleb128 0x15
 1567 05d5 01       		.byte	0x1
 1568 05d6 45000000 		.4byte	0x45
 1569 05da F3050000 		.4byte	0x5f3
 1570 05de 16       		.uleb128 0x16
 1571 05df 74040000 		.4byte	0x474
 1572 05e3 16       		.uleb128 0x16
 1573 05e4 F4000000 		.4byte	0xf4
 1574 05e8 16       		.uleb128 0x16
 1575 05e9 F3050000 		.4byte	0x5f3
 1576 05ed 16       		.uleb128 0x16
 1577 05ee 45000000 		.4byte	0x45
 1578 05f2 00       		.byte	0
 1579 05f3 0F       		.uleb128 0xf
 1580 05f4 04       		.byte	0x4
 1581 05f5 F9050000 		.4byte	0x5f9
 1582 05f9 02       		.uleb128 0x2
 1583 05fa 01       		.byte	0x1
 1584 05fb 08       		.byte	0x8
 1585 05fc 76020000 		.4byte	.LASF86
 1586 0600 0F       		.uleb128 0xf
 1587 0601 04       		.byte	0x4
 1588 0602 D4050000 		.4byte	0x5d4
 1589 0606 15       		.uleb128 0x15
 1590 0607 01       		.byte	0x1
 1591 0608 45000000 		.4byte	0x45
 1592 060c 25060000 		.4byte	0x625
 1593 0610 16       		.uleb128 0x16
 1594 0611 74040000 		.4byte	0x474
 1595 0615 16       		.uleb128 0x16
 1596 0616 F4000000 		.4byte	0xf4
 1597 061a 16       		.uleb128 0x16
 1598 061b 25060000 		.4byte	0x625
 1599 061f 16       		.uleb128 0x16
 1600 0620 45000000 		.4byte	0x45
 1601 0624 00       		.byte	0
 1602 0625 0F       		.uleb128 0xf
 1603 0626 04       		.byte	0x4
 1604 0627 2B060000 		.4byte	0x62b
 1605 062b 17       		.uleb128 0x17
 1606 062c F9050000 		.4byte	0x5f9
 1607 0630 0F       		.uleb128 0xf
ARM GAS  /tmp/ccSeVCM8.s 			page 60


 1608 0631 04       		.byte	0x4
 1609 0632 06060000 		.4byte	0x606
 1610 0636 15       		.uleb128 0x15
 1611 0637 01       		.byte	0x1
 1612 0638 73000000 		.4byte	0x73
 1613 063c 55060000 		.4byte	0x655
 1614 0640 16       		.uleb128 0x16
 1615 0641 74040000 		.4byte	0x474
 1616 0645 16       		.uleb128 0x16
 1617 0646 F4000000 		.4byte	0xf4
 1618 064a 16       		.uleb128 0x16
 1619 064b 73000000 		.4byte	0x73
 1620 064f 16       		.uleb128 0x16
 1621 0650 45000000 		.4byte	0x45
 1622 0654 00       		.byte	0
 1623 0655 0F       		.uleb128 0xf
 1624 0656 04       		.byte	0x4
 1625 0657 36060000 		.4byte	0x636
 1626 065b 15       		.uleb128 0x15
 1627 065c 01       		.byte	0x1
 1628 065d 45000000 		.4byte	0x45
 1629 0661 70060000 		.4byte	0x670
 1630 0665 16       		.uleb128 0x16
 1631 0666 74040000 		.4byte	0x474
 1632 066a 16       		.uleb128 0x16
 1633 066b F4000000 		.4byte	0xf4
 1634 066f 00       		.byte	0
 1635 0670 0F       		.uleb128 0xf
 1636 0671 04       		.byte	0x4
 1637 0672 5B060000 		.4byte	0x65b
 1638 0676 08       		.uleb128 0x8
 1639 0677 30000000 		.4byte	0x30
 1640 067b 86060000 		.4byte	0x686
 1641 067f 09       		.uleb128 0x9
 1642 0680 4C000000 		.4byte	0x4c
 1643 0684 02       		.byte	0x2
 1644 0685 00       		.byte	0
 1645 0686 08       		.uleb128 0x8
 1646 0687 30000000 		.4byte	0x30
 1647 068b 96060000 		.4byte	0x696
 1648 068f 09       		.uleb128 0x9
 1649 0690 4C000000 		.4byte	0x4c
 1650 0694 00       		.byte	0
 1651 0695 00       		.byte	0
 1652 0696 05       		.uleb128 0x5
 1653 0697 B1060000 		.4byte	.LASF87
 1654 069b 06       		.byte	0x6
 1655 069c 1E01     		.2byte	0x11e
 1656 069e 7A040000 		.4byte	0x47a
 1657 06a2 12       		.uleb128 0x12
 1658 06a3 FD040000 		.4byte	.LASF88
 1659 06a7 0C       		.byte	0xc
 1660 06a8 06       		.byte	0x6
 1661 06a9 2201     		.2byte	0x122
 1662 06ab DD060000 		.4byte	0x6dd
 1663 06af 13       		.uleb128 0x13
 1664 06b0 E2060000 		.4byte	.LASF19
ARM GAS  /tmp/ccSeVCM8.s 			page 61


 1665 06b4 06       		.byte	0x6
 1666 06b5 2401     		.2byte	0x124
 1667 06b7 DD060000 		.4byte	0x6dd
 1668 06bb 02       		.byte	0x2
 1669 06bc 23       		.byte	0x23
 1670 06bd 00       		.uleb128 0
 1671 06be 13       		.uleb128 0x13
 1672 06bf 8F040000 		.4byte	.LASF89
 1673 06c3 06       		.byte	0x6
 1674 06c4 2501     		.2byte	0x125
 1675 06c6 45000000 		.4byte	0x45
 1676 06ca 02       		.byte	0x2
 1677 06cb 23       		.byte	0x23
 1678 06cc 04       		.uleb128 0x4
 1679 06cd 13       		.uleb128 0x13
 1680 06ce F7040000 		.4byte	.LASF90
 1681 06d2 06       		.byte	0x6
 1682 06d3 2601     		.2byte	0x126
 1683 06d5 E3060000 		.4byte	0x6e3
 1684 06d9 02       		.byte	0x2
 1685 06da 23       		.byte	0x23
 1686 06db 08       		.uleb128 0x8
 1687 06dc 00       		.byte	0
 1688 06dd 0F       		.uleb128 0xf
 1689 06de 04       		.byte	0x4
 1690 06df A2060000 		.4byte	0x6a2
 1691 06e3 0F       		.uleb128 0xf
 1692 06e4 04       		.byte	0x4
 1693 06e5 96060000 		.4byte	0x696
 1694 06e9 12       		.uleb128 0x12
 1695 06ea 32060000 		.4byte	.LASF91
 1696 06ee 18       		.byte	0x18
 1697 06ef 06       		.byte	0x6
 1698 06f0 3E01     		.2byte	0x13e
 1699 06f2 33070000 		.4byte	0x733
 1700 06f6 13       		.uleb128 0x13
 1701 06f7 CB050000 		.4byte	.LASF92
 1702 06fb 06       		.byte	0x6
 1703 06fc 3F01     		.2byte	0x13f
 1704 06fe 33070000 		.4byte	0x733
 1705 0702 02       		.byte	0x2
 1706 0703 23       		.byte	0x23
 1707 0704 00       		.uleb128 0
 1708 0705 13       		.uleb128 0x13
 1709 0706 CE000000 		.4byte	.LASF93
 1710 070a 06       		.byte	0x6
 1711 070b 4001     		.2byte	0x140
 1712 070d 33070000 		.4byte	0x733
 1713 0711 02       		.byte	0x2
 1714 0712 23       		.byte	0x23
 1715 0713 06       		.uleb128 0x6
 1716 0714 13       		.uleb128 0x13
 1717 0715 7F080000 		.4byte	.LASF94
 1718 0719 06       		.byte	0x6
 1719 071a 4101     		.2byte	0x141
 1720 071c 3E000000 		.4byte	0x3e
 1721 0720 02       		.byte	0x2
ARM GAS  /tmp/ccSeVCM8.s 			page 62


 1722 0721 23       		.byte	0x23
 1723 0722 0C       		.uleb128 0xc
 1724 0723 13       		.uleb128 0x13
 1725 0724 85050000 		.4byte	.LASF95
 1726 0728 06       		.byte	0x6
 1727 0729 4401     		.2byte	0x144
 1728 072b 5A000000 		.4byte	0x5a
 1729 072f 02       		.byte	0x2
 1730 0730 23       		.byte	0x23
 1731 0731 10       		.uleb128 0x10
 1732 0732 00       		.byte	0
 1733 0733 08       		.uleb128 0x8
 1734 0734 3E000000 		.4byte	0x3e
 1735 0738 43070000 		.4byte	0x743
 1736 073c 09       		.uleb128 0x9
 1737 073d 4C000000 		.4byte	0x4c
 1738 0741 02       		.byte	0x2
 1739 0742 00       		.byte	0
 1740 0743 12       		.uleb128 0x12
 1741 0744 3E080000 		.4byte	.LASF96
 1742 0748 10       		.byte	0x10
 1743 0749 06       		.byte	0x6
 1744 074a 5F01     		.2byte	0x15f
 1745 074c 8D070000 		.4byte	0x78d
 1746 0750 13       		.uleb128 0x13
 1747 0751 6E080000 		.4byte	.LASF97
 1748 0755 06       		.byte	0x6
 1749 0756 6201     		.2byte	0x162
 1750 0758 67010000 		.4byte	0x167
 1751 075c 02       		.byte	0x2
 1752 075d 23       		.byte	0x23
 1753 075e 00       		.uleb128 0
 1754 075f 13       		.uleb128 0x13
 1755 0760 5B010000 		.4byte	.LASF98
 1756 0764 06       		.byte	0x6
 1757 0765 6301     		.2byte	0x163
 1758 0767 45000000 		.4byte	0x45
 1759 076b 02       		.byte	0x2
 1760 076c 23       		.byte	0x23
 1761 076d 04       		.uleb128 0x4
 1762 076e 13       		.uleb128 0x13
 1763 076f 8A030000 		.4byte	.LASF99
 1764 0773 06       		.byte	0x6
 1765 0774 6401     		.2byte	0x164
 1766 0776 67010000 		.4byte	0x167
 1767 077a 02       		.byte	0x2
 1768 077b 23       		.byte	0x23
 1769 077c 08       		.uleb128 0x8
 1770 077d 13       		.uleb128 0x13
 1771 077e ED040000 		.4byte	.LASF100
 1772 0782 06       		.byte	0x6
 1773 0783 6501     		.2byte	0x165
 1774 0785 8D070000 		.4byte	0x78d
 1775 0789 02       		.byte	0x2
 1776 078a 23       		.byte	0x23
 1777 078b 0C       		.uleb128 0xc
 1778 078c 00       		.byte	0
ARM GAS  /tmp/ccSeVCM8.s 			page 63


 1779 078d 0F       		.uleb128 0xf
 1780 078e 04       		.byte	0x4
 1781 078f 67010000 		.4byte	0x167
 1782 0793 12       		.uleb128 0x12
 1783 0794 B3010000 		.4byte	.LASF101
 1784 0798 50       		.byte	0x50
 1785 0799 06       		.byte	0x6
 1786 079a 6901     		.2byte	0x169
 1787 079c 46080000 		.4byte	0x846
 1788 07a0 13       		.uleb128 0x13
 1789 07a1 77060000 		.4byte	.LASF102
 1790 07a5 06       		.byte	0x6
 1791 07a6 6C01     		.2byte	0x16c
 1792 07a8 F3050000 		.4byte	0x5f3
 1793 07ac 02       		.byte	0x2
 1794 07ad 23       		.byte	0x23
 1795 07ae 00       		.uleb128 0
 1796 07af 13       		.uleb128 0x13
 1797 07b0 B6070000 		.4byte	.LASF103
 1798 07b4 06       		.byte	0x6
 1799 07b5 6D01     		.2byte	0x16d
 1800 07b7 DE000000 		.4byte	0xde
 1801 07bb 02       		.byte	0x2
 1802 07bc 23       		.byte	0x23
 1803 07bd 04       		.uleb128 0x4
 1804 07be 13       		.uleb128 0x13
 1805 07bf 6E050000 		.4byte	.LASF104
 1806 07c3 06       		.byte	0x6
 1807 07c4 6E01     		.2byte	0x16e
 1808 07c6 DE000000 		.4byte	0xde
 1809 07ca 02       		.byte	0x2
 1810 07cb 23       		.byte	0x23
 1811 07cc 0C       		.uleb128 0xc
 1812 07cd 13       		.uleb128 0x13
 1813 07ce F1050000 		.4byte	.LASF105
 1814 07d2 06       		.byte	0x6
 1815 07d3 6F01     		.2byte	0x16f
 1816 07d5 DE000000 		.4byte	0xde
 1817 07d9 02       		.byte	0x2
 1818 07da 23       		.byte	0x23
 1819 07db 14       		.uleb128 0x14
 1820 07dc 13       		.uleb128 0x13
 1821 07dd AD000000 		.4byte	.LASF106
 1822 07e1 06       		.byte	0x6
 1823 07e2 7001     		.2byte	0x170
 1824 07e4 46080000 		.4byte	0x846
 1825 07e8 02       		.byte	0x2
 1826 07e9 23       		.byte	0x23
 1827 07ea 1C       		.uleb128 0x1c
 1828 07eb 13       		.uleb128 0x13
 1829 07ec 15090000 		.4byte	.LASF107
 1830 07f0 06       		.byte	0x6
 1831 07f1 7101     		.2byte	0x171
 1832 07f3 45000000 		.4byte	0x45
 1833 07f7 02       		.byte	0x2
 1834 07f8 23       		.byte	0x23
 1835 07f9 24       		.uleb128 0x24
ARM GAS  /tmp/ccSeVCM8.s 			page 64


 1836 07fa 13       		.uleb128 0x13
 1837 07fb 38010000 		.4byte	.LASF108
 1838 07ff 06       		.byte	0x6
 1839 0800 7201     		.2byte	0x172
 1840 0802 DE000000 		.4byte	0xde
 1841 0806 02       		.byte	0x2
 1842 0807 23       		.byte	0x23
 1843 0808 28       		.uleb128 0x28
 1844 0809 13       		.uleb128 0x13
 1845 080a 8D060000 		.4byte	.LASF109
 1846 080e 06       		.byte	0x6
 1847 080f 7301     		.2byte	0x173
 1848 0811 DE000000 		.4byte	0xde
 1849 0815 02       		.byte	0x2
 1850 0816 23       		.byte	0x23
 1851 0817 30       		.uleb128 0x30
 1852 0818 13       		.uleb128 0x13
 1853 0819 AD080000 		.4byte	.LASF110
 1854 081d 06       		.byte	0x6
 1855 081e 7401     		.2byte	0x174
 1856 0820 DE000000 		.4byte	0xde
 1857 0824 02       		.byte	0x2
 1858 0825 23       		.byte	0x23
 1859 0826 38       		.uleb128 0x38
 1860 0827 13       		.uleb128 0x13
 1861 0828 47050000 		.4byte	.LASF111
 1862 082c 06       		.byte	0x6
 1863 082d 7501     		.2byte	0x175
 1864 082f DE000000 		.4byte	0xde
 1865 0833 02       		.byte	0x2
 1866 0834 23       		.byte	0x23
 1867 0835 40       		.uleb128 0x40
 1868 0836 13       		.uleb128 0x13
 1869 0837 8D000000 		.4byte	.LASF112
 1870 083b 06       		.byte	0x6
 1871 083c 7601     		.2byte	0x176
 1872 083e DE000000 		.4byte	0xde
 1873 0842 02       		.byte	0x2
 1874 0843 23       		.byte	0x23
 1875 0844 48       		.uleb128 0x48
 1876 0845 00       		.byte	0
 1877 0846 08       		.uleb128 0x8
 1878 0847 F9050000 		.4byte	0x5f9
 1879 084b 56080000 		.4byte	0x856
 1880 084f 09       		.uleb128 0x9
 1881 0850 4C000000 		.4byte	0x4c
 1882 0854 07       		.byte	0x7
 1883 0855 00       		.byte	0
 1884 0856 0F       		.uleb128 0xf
 1885 0857 04       		.byte	0x4
 1886 0858 43070000 		.4byte	0x743
 1887 085c 18       		.uleb128 0x18
 1888 085d 01       		.byte	0x1
 1889 085e 68080000 		.4byte	0x868
 1890 0862 16       		.uleb128 0x16
 1891 0863 74040000 		.4byte	0x474
 1892 0867 00       		.byte	0
ARM GAS  /tmp/ccSeVCM8.s 			page 65


 1893 0868 0F       		.uleb128 0xf
 1894 0869 04       		.byte	0x4
 1895 086a 5C080000 		.4byte	0x85c
 1896 086e 0F       		.uleb128 0xf
 1897 086f 04       		.byte	0x4
 1898 0870 E9060000 		.4byte	0x6e9
 1899 0874 0F       		.uleb128 0xf
 1900 0875 04       		.byte	0x4
 1901 0876 7D010000 		.4byte	0x17d
 1902 087a 18       		.uleb128 0x18
 1903 087b 01       		.byte	0x1
 1904 087c 86080000 		.4byte	0x886
 1905 0880 16       		.uleb128 0x16
 1906 0881 45000000 		.4byte	0x45
 1907 0885 00       		.byte	0
 1908 0886 0F       		.uleb128 0xf
 1909 0887 04       		.byte	0x4
 1910 0888 8C080000 		.4byte	0x88c
 1911 088c 0F       		.uleb128 0xf
 1912 088d 04       		.byte	0x4
 1913 088e 7A080000 		.4byte	0x87a
 1914 0892 0F       		.uleb128 0xf
 1915 0893 04       		.byte	0x4
 1916 0894 93070000 		.4byte	0x793
 1917 0898 04       		.uleb128 0x4
 1918 0899 EA010000 		.4byte	.LASF113
 1919 089d 07       		.byte	0x7
 1920 089e 2A       		.byte	0x2a
 1921 089f 30000000 		.4byte	0x30
 1922 08a3 04       		.uleb128 0x4
 1923 08a4 1D060000 		.4byte	.LASF114
 1924 08a8 07       		.byte	0x7
 1925 08a9 36       		.byte	0x36
 1926 08aa 3E000000 		.4byte	0x3e
 1927 08ae 04       		.uleb128 0x4
 1928 08af 65080000 		.4byte	.LASF115
 1929 08b3 07       		.byte	0x7
 1930 08b4 50       		.byte	0x50
 1931 08b5 01010000 		.4byte	0x101
 1932 08b9 19       		.uleb128 0x19
 1933 08ba AE080000 		.4byte	0x8ae
 1934 08be 1A       		.uleb128 0x1a
 1935 08bf 93010000 		.4byte	.LASF249
 1936 08c3 01       		.byte	0x1
 1937 08c4 08       		.byte	0x8
 1938 08c5 49       		.byte	0x49
 1939 08c6 BB090000 		.4byte	0x9bb
 1940 08ca 1B       		.uleb128 0x1b
 1941 08cb 76030000 		.4byte	.LASF116
 1942 08cf 72       		.sleb128 -14
 1943 08d0 1B       		.uleb128 0x1b
 1944 08d1 A1030000 		.4byte	.LASF117
 1945 08d5 74       		.sleb128 -12
 1946 08d6 1B       		.uleb128 0x1b
 1947 08d7 46040000 		.4byte	.LASF118
 1948 08db 75       		.sleb128 -11
 1949 08dc 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccSeVCM8.s 			page 66


 1950 08dd 54020000 		.4byte	.LASF119
 1951 08e1 76       		.sleb128 -10
 1952 08e2 1B       		.uleb128 0x1b
 1953 08e3 B7040000 		.4byte	.LASF120
 1954 08e7 7B       		.sleb128 -5
 1955 08e8 1B       		.uleb128 0x1b
 1956 08e9 6D070000 		.4byte	.LASF121
 1957 08ed 7C       		.sleb128 -4
 1958 08ee 1B       		.uleb128 0x1b
 1959 08ef A1080000 		.4byte	.LASF122
 1960 08f3 7E       		.sleb128 -2
 1961 08f4 1B       		.uleb128 0x1b
 1962 08f5 BF010000 		.4byte	.LASF123
 1963 08f9 7F       		.sleb128 -1
 1964 08fa 1B       		.uleb128 0x1b
 1965 08fb 2C030000 		.4byte	.LASF124
 1966 08ff 00       		.sleb128 0
 1967 0900 1B       		.uleb128 0x1b
 1968 0901 D4000000 		.4byte	.LASF125
 1969 0905 01       		.sleb128 1
 1970 0906 1B       		.uleb128 0x1b
 1971 0907 35090000 		.4byte	.LASF126
 1972 090b 02       		.sleb128 2
 1973 090c 1B       		.uleb128 0x1b
 1974 090d 5A030000 		.4byte	.LASF127
 1975 0911 03       		.sleb128 3
 1976 0912 1B       		.uleb128 0x1b
 1977 0913 23040000 		.4byte	.LASF128
 1978 0917 04       		.sleb128 4
 1979 0918 1B       		.uleb128 0x1b
 1980 0919 00030000 		.4byte	.LASF129
 1981 091d 05       		.sleb128 5
 1982 091e 1B       		.uleb128 0x1b
 1983 091f 09030000 		.4byte	.LASF130
 1984 0923 06       		.sleb128 6
 1985 0924 1B       		.uleb128 0x1b
 1986 0925 C3060000 		.4byte	.LASF131
 1987 0929 08       		.sleb128 8
 1988 092a 1B       		.uleb128 0x1b
 1989 092b D7050000 		.4byte	.LASF132
 1990 092f 09       		.sleb128 9
 1991 0930 1B       		.uleb128 0x1b
 1992 0931 95020000 		.4byte	.LASF133
 1993 0935 0A       		.sleb128 10
 1994 0936 1B       		.uleb128 0x1b
 1995 0937 EA070000 		.4byte	.LASF134
 1996 093b 0B       		.sleb128 11
 1997 093c 1B       		.uleb128 0x1b
 1998 093d 56070000 		.4byte	.LASF135
 1999 0941 0C       		.sleb128 12
 2000 0942 1B       		.uleb128 0x1b
 2001 0943 46030000 		.4byte	.LASF136
 2002 0947 0D       		.sleb128 13
 2003 0948 1B       		.uleb128 0x1b
 2004 0949 FC060000 		.4byte	.LASF137
 2005 094d 0E       		.sleb128 14
 2006 094e 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccSeVCM8.s 			page 67


 2007 094f 4D060000 		.4byte	.LASF138
 2008 0953 0F       		.sleb128 15
 2009 0954 1B       		.uleb128 0x1b
 2010 0955 3A060000 		.4byte	.LASF139
 2011 0959 12       		.sleb128 18
 2012 095a 1B       		.uleb128 0x1b
 2013 095b 36050000 		.4byte	.LASF140
 2014 095f 13       		.sleb128 19
 2015 0960 1B       		.uleb128 0x1b
 2016 0961 96040000 		.4byte	.LASF141
 2017 0965 14       		.sleb128 20
 2018 0966 1B       		.uleb128 0x1b
 2019 0967 EE060000 		.4byte	.LASF142
 2020 096b 15       		.sleb128 21
 2021 096c 1B       		.uleb128 0x1b
 2022 096d 5C080000 		.4byte	.LASF143
 2023 0971 16       		.sleb128 22
 2024 0972 1B       		.uleb128 0x1b
 2025 0973 44070000 		.4byte	.LASF144
 2026 0977 17       		.sleb128 23
 2027 0978 1B       		.uleb128 0x1b
 2028 0979 3D030000 		.4byte	.LASF145
 2029 097d 18       		.sleb128 24
 2030 097e 1B       		.uleb128 0x1b
 2031 097f 18000000 		.4byte	.LASF146
 2032 0983 19       		.sleb128 25
 2033 0984 1B       		.uleb128 0x1b
 2034 0985 C5080000 		.4byte	.LASF147
 2035 0989 1A       		.sleb128 26
 2036 098a 1B       		.uleb128 0x1b
 2037 098b 2D050000 		.4byte	.LASF148
 2038 098f 1B       		.sleb128 27
 2039 0990 1B       		.uleb128 0x1b
 2040 0991 98010000 		.4byte	.LASF149
 2041 0995 1C       		.sleb128 28
 2042 0996 1B       		.uleb128 0x1b
 2043 0997 84060000 		.4byte	.LASF150
 2044 099b 1D       		.sleb128 29
 2045 099c 1B       		.uleb128 0x1b
 2046 099d 6C030000 		.4byte	.LASF151
 2047 09a1 1E       		.sleb128 30
 2048 09a2 1B       		.uleb128 0x1b
 2049 09a3 CB020000 		.4byte	.LASF152
 2050 09a7 1F       		.sleb128 31
 2051 09a8 1B       		.uleb128 0x1b
 2052 09a9 21010000 		.4byte	.LASF153
 2053 09ad 20       		.sleb128 32
 2054 09ae 1B       		.uleb128 0x1b
 2055 09af EA020000 		.4byte	.LASF154
 2056 09b3 21       		.sleb128 33
 2057 09b4 1B       		.uleb128 0x1b
 2058 09b5 63030000 		.4byte	.LASF155
 2059 09b9 22       		.sleb128 34
 2060 09ba 00       		.byte	0
 2061 09bb 04       		.uleb128 0x4
 2062 09bc D9030000 		.4byte	.LASF156
 2063 09c0 08       		.byte	0x8
ARM GAS  /tmp/ccSeVCM8.s 			page 68


 2064 09c1 76       		.byte	0x76
 2065 09c2 BE080000 		.4byte	0x8be
 2066 09c6 1C       		.uleb128 0x1c
 2067 09c7 040E     		.2byte	0xe04
 2068 09c9 01       		.byte	0x1
 2069 09ca 84       		.byte	0x84
 2070 09cb 900A0000 		.4byte	0xa90
 2071 09cf 0B       		.uleb128 0xb
 2072 09d0 E0080000 		.4byte	.LASF157
 2073 09d4 01       		.byte	0x1
 2074 09d5 86       		.byte	0x86
 2075 09d6 A00A0000 		.4byte	0xaa0
 2076 09da 02       		.byte	0x2
 2077 09db 23       		.byte	0x23
 2078 09dc 00       		.uleb128 0
 2079 09dd 0B       		.uleb128 0xb
 2080 09de FC010000 		.4byte	.LASF158
 2081 09e2 01       		.byte	0x1
 2082 09e3 87       		.byte	0x87
 2083 09e4 A50A0000 		.4byte	0xaa5
 2084 09e8 02       		.byte	0x2
 2085 09e9 23       		.byte	0x23
 2086 09ea 20       		.uleb128 0x20
 2087 09eb 0B       		.uleb128 0xb
 2088 09ec 9C060000 		.4byte	.LASF159
 2089 09f0 01       		.byte	0x1
 2090 09f1 88       		.byte	0x88
 2091 09f2 B50A0000 		.4byte	0xab5
 2092 09f6 03       		.byte	0x3
 2093 09f7 23       		.byte	0x23
 2094 09f8 8001     		.uleb128 0x80
 2095 09fa 0B       		.uleb128 0xb
 2096 09fb 00000000 		.4byte	.LASF160
 2097 09ff 01       		.byte	0x1
 2098 0a00 89       		.byte	0x89
 2099 0a01 A50A0000 		.4byte	0xaa5
 2100 0a05 03       		.byte	0x3
 2101 0a06 23       		.byte	0x23
 2102 0a07 A001     		.uleb128 0xa0
 2103 0a09 0B       		.uleb128 0xb
 2104 0a0a D4020000 		.4byte	.LASF161
 2105 0a0e 01       		.byte	0x1
 2106 0a0f 8A       		.byte	0x8a
 2107 0a10 BA0A0000 		.4byte	0xaba
 2108 0a14 03       		.byte	0x3
 2109 0a15 23       		.byte	0x23
 2110 0a16 8002     		.uleb128 0x100
 2111 0a18 0B       		.uleb128 0xb
 2112 0a19 4A020000 		.4byte	.LASF162
 2113 0a1d 01       		.byte	0x1
 2114 0a1e 8B       		.byte	0x8b
 2115 0a1f A50A0000 		.4byte	0xaa5
 2116 0a23 03       		.byte	0x3
 2117 0a24 23       		.byte	0x23
 2118 0a25 A002     		.uleb128 0x120
 2119 0a27 0B       		.uleb128 0xb
 2120 0a28 DE000000 		.4byte	.LASF163
ARM GAS  /tmp/ccSeVCM8.s 			page 69


 2121 0a2c 01       		.byte	0x1
 2122 0a2d 8C       		.byte	0x8c
 2123 0a2e BF0A0000 		.4byte	0xabf
 2124 0a32 03       		.byte	0x3
 2125 0a33 23       		.byte	0x23
 2126 0a34 8003     		.uleb128 0x180
 2127 0a36 0B       		.uleb128 0xb
 2128 0a37 14020000 		.4byte	.LASF164
 2129 0a3b 01       		.byte	0x1
 2130 0a3c 8D       		.byte	0x8d
 2131 0a3d A50A0000 		.4byte	0xaa5
 2132 0a41 03       		.byte	0x3
 2133 0a42 23       		.byte	0x23
 2134 0a43 A003     		.uleb128 0x1a0
 2135 0a45 0B       		.uleb128 0xb
 2136 0a46 32020000 		.4byte	.LASF165
 2137 0a4a 01       		.byte	0x1
 2138 0a4b 8E       		.byte	0x8e
 2139 0a4c C40A0000 		.4byte	0xac4
 2140 0a50 03       		.byte	0x3
 2141 0a51 23       		.byte	0x23
 2142 0a52 8004     		.uleb128 0x200
 2143 0a54 0B       		.uleb128 0xb
 2144 0a55 1E020000 		.4byte	.LASF166
 2145 0a59 01       		.byte	0x1
 2146 0a5a 8F       		.byte	0x8f
 2147 0a5b C90A0000 		.4byte	0xac9
 2148 0a5f 03       		.byte	0x3
 2149 0a60 23       		.byte	0x23
 2150 0a61 A004     		.uleb128 0x220
 2151 0a63 0E       		.uleb128 0xe
 2152 0a64 495000   		.ascii	"IP\000"
 2153 0a67 01       		.byte	0x1
 2154 0a68 90       		.byte	0x90
 2155 0a69 E90A0000 		.4byte	0xae9
 2156 0a6d 03       		.byte	0x3
 2157 0a6e 23       		.byte	0x23
 2158 0a6f 8006     		.uleb128 0x300
 2159 0a71 0B       		.uleb128 0xb
 2160 0a72 28020000 		.4byte	.LASF167
 2161 0a76 01       		.byte	0x1
 2162 0a77 91       		.byte	0x91
 2163 0a78 EE0A0000 		.4byte	0xaee
 2164 0a7c 03       		.byte	0x3
 2165 0a7d 23       		.byte	0x23
 2166 0a7e F007     		.uleb128 0x3f0
 2167 0a80 0B       		.uleb128 0xb
 2168 0a81 DF020000 		.4byte	.LASF168
 2169 0a85 01       		.byte	0x1
 2170 0a86 92       		.byte	0x92
 2171 0a87 B9080000 		.4byte	0x8b9
 2172 0a8b 03       		.byte	0x3
 2173 0a8c 23       		.byte	0x23
 2174 0a8d 801C     		.uleb128 0xe00
 2175 0a8f 00       		.byte	0
 2176 0a90 08       		.uleb128 0x8
 2177 0a91 AE080000 		.4byte	0x8ae
ARM GAS  /tmp/ccSeVCM8.s 			page 70


 2178 0a95 A00A0000 		.4byte	0xaa0
 2179 0a99 09       		.uleb128 0x9
 2180 0a9a 4C000000 		.4byte	0x4c
 2181 0a9e 07       		.byte	0x7
 2182 0a9f 00       		.byte	0
 2183 0aa0 19       		.uleb128 0x19
 2184 0aa1 900A0000 		.4byte	0xa90
 2185 0aa5 08       		.uleb128 0x8
 2186 0aa6 AE080000 		.4byte	0x8ae
 2187 0aaa B50A0000 		.4byte	0xab5
 2188 0aae 09       		.uleb128 0x9
 2189 0aaf 4C000000 		.4byte	0x4c
 2190 0ab3 17       		.byte	0x17
 2191 0ab4 00       		.byte	0
 2192 0ab5 19       		.uleb128 0x19
 2193 0ab6 900A0000 		.4byte	0xa90
 2194 0aba 19       		.uleb128 0x19
 2195 0abb 900A0000 		.4byte	0xa90
 2196 0abf 19       		.uleb128 0x19
 2197 0ac0 900A0000 		.4byte	0xa90
 2198 0ac4 19       		.uleb128 0x19
 2199 0ac5 900A0000 		.4byte	0xa90
 2200 0ac9 08       		.uleb128 0x8
 2201 0aca AE080000 		.4byte	0x8ae
 2202 0ace D90A0000 		.4byte	0xad9
 2203 0ad2 09       		.uleb128 0x9
 2204 0ad3 4C000000 		.4byte	0x4c
 2205 0ad7 37       		.byte	0x37
 2206 0ad8 00       		.byte	0
 2207 0ad9 08       		.uleb128 0x8
 2208 0ada 98080000 		.4byte	0x898
 2209 0ade E90A0000 		.4byte	0xae9
 2210 0ae2 09       		.uleb128 0x9
 2211 0ae3 4C000000 		.4byte	0x4c
 2212 0ae7 EF       		.byte	0xef
 2213 0ae8 00       		.byte	0
 2214 0ae9 19       		.uleb128 0x19
 2215 0aea D90A0000 		.4byte	0xad9
 2216 0aee 08       		.uleb128 0x8
 2217 0aef AE080000 		.4byte	0x8ae
 2218 0af3 FF0A0000 		.4byte	0xaff
 2219 0af7 1D       		.uleb128 0x1d
 2220 0af8 4C000000 		.4byte	0x4c
 2221 0afc 8302     		.2byte	0x283
 2222 0afe 00       		.byte	0
 2223 0aff 04       		.uleb128 0x4
 2224 0b00 47000000 		.4byte	.LASF169
 2225 0b04 01       		.byte	0x1
 2226 0b05 93       		.byte	0x93
 2227 0b06 C6090000 		.4byte	0x9c6
 2228 0b0a 19       		.uleb128 0x19
 2229 0b0b 01010000 		.4byte	0x101
 2230 0b0f 17       		.uleb128 0x17
 2231 0b10 0A0B0000 		.4byte	0xb0a
 2232 0b14 08       		.uleb128 0x8
 2233 0b15 01010000 		.4byte	0x101
 2234 0b19 240B0000 		.4byte	0xb24
ARM GAS  /tmp/ccSeVCM8.s 			page 71


 2235 0b1d 09       		.uleb128 0x9
 2236 0b1e 4C000000 		.4byte	0x4c
 2237 0b22 00       		.byte	0
 2238 0b23 00       		.byte	0
 2239 0b24 08       		.uleb128 0x8
 2240 0b25 01010000 		.4byte	0x101
 2241 0b29 340B0000 		.4byte	0xb34
 2242 0b2d 09       		.uleb128 0x9
 2243 0b2e 4C000000 		.4byte	0x4c
 2244 0b32 01       		.byte	0x1
 2245 0b33 00       		.byte	0
 2246 0b34 08       		.uleb128 0x8
 2247 0b35 01010000 		.4byte	0x101
 2248 0b39 440B0000 		.4byte	0xb44
 2249 0b3d 09       		.uleb128 0x9
 2250 0b3e 4C000000 		.4byte	0x4c
 2251 0b42 04       		.byte	0x4
 2252 0b43 00       		.byte	0
 2253 0b44 08       		.uleb128 0x8
 2254 0b45 01010000 		.4byte	0x101
 2255 0b49 540B0000 		.4byte	0xb54
 2256 0b4d 09       		.uleb128 0x9
 2257 0b4e 4C000000 		.4byte	0x4c
 2258 0b52 03       		.byte	0x3
 2259 0b53 00       		.byte	0
 2260 0b54 1E       		.uleb128 0x1e
 2261 0b55 1401     		.2byte	0x114
 2262 0b57 08       		.byte	0x8
 2263 0b58 450D     		.2byte	0xd45
 2264 0b5a 650D0000 		.4byte	0xd65
 2265 0b5e 13       		.uleb128 0x13
 2266 0b5f 22090000 		.4byte	.LASF170
 2267 0b63 08       		.byte	0x8
 2268 0b64 460D     		.2byte	0xd46
 2269 0b66 0A0B0000 		.4byte	0xb0a
 2270 0b6a 02       		.byte	0x2
 2271 0b6b 23       		.byte	0x23
 2272 0b6c 00       		.uleb128 0
 2273 0b6d 13       		.uleb128 0x13
 2274 0b6e D7080000 		.4byte	.LASF171
 2275 0b72 08       		.byte	0x8
 2276 0b73 470D     		.2byte	0xd47
 2277 0b75 0A0B0000 		.4byte	0xb0a
 2278 0b79 02       		.byte	0x2
 2279 0b7a 23       		.byte	0x23
 2280 0b7b 04       		.uleb128 0x4
 2281 0b7c 13       		.uleb128 0x13
 2282 0b7d 09040000 		.4byte	.LASF172
 2283 0b81 08       		.byte	0x8
 2284 0b82 480D     		.2byte	0xd48
 2285 0b84 0F0B0000 		.4byte	0xb0f
 2286 0b88 02       		.byte	0x2
 2287 0b89 23       		.byte	0x23
 2288 0b8a 08       		.uleb128 0x8
 2289 0b8b 13       		.uleb128 0x13
 2290 0b8c 08070000 		.4byte	.LASF173
 2291 0b90 08       		.byte	0x8
ARM GAS  /tmp/ccSeVCM8.s 			page 72


 2292 0b91 490D     		.2byte	0xd49
 2293 0b93 650D0000 		.4byte	0xd65
 2294 0b97 02       		.byte	0x2
 2295 0b98 23       		.byte	0x23
 2296 0b99 0C       		.uleb128 0xc
 2297 0b9a 13       		.uleb128 0x13
 2298 0b9b 7A010000 		.4byte	.LASF174
 2299 0b9f 08       		.byte	0x8
 2300 0ba0 4A0D     		.2byte	0xd4a
 2301 0ba2 0A0B0000 		.4byte	0xb0a
 2302 0ba6 02       		.byte	0x2
 2303 0ba7 23       		.byte	0x23
 2304 0ba8 10       		.uleb128 0x10
 2305 0ba9 13       		.uleb128 0x13
 2306 0baa E5080000 		.4byte	.LASF175
 2307 0bae 08       		.byte	0x8
 2308 0baf 4B0D     		.2byte	0xd4b
 2309 0bb1 0A0B0000 		.4byte	0xb0a
 2310 0bb5 02       		.byte	0x2
 2311 0bb6 23       		.byte	0x23
 2312 0bb7 14       		.uleb128 0x14
 2313 0bb8 13       		.uleb128 0x13
 2314 0bb9 2A000000 		.4byte	.LASF176
 2315 0bbd 08       		.byte	0x8
 2316 0bbe 4C0D     		.2byte	0xd4c
 2317 0bc0 0F0B0000 		.4byte	0xb0f
 2318 0bc4 02       		.byte	0x2
 2319 0bc5 23       		.byte	0x23
 2320 0bc6 18       		.uleb128 0x18
 2321 0bc7 13       		.uleb128 0x13
 2322 0bc8 12070000 		.4byte	.LASF177
 2323 0bcc 08       		.byte	0x8
 2324 0bcd 4D0D     		.2byte	0xd4d
 2325 0bcf 6A0D0000 		.4byte	0xd6a
 2326 0bd3 02       		.byte	0x2
 2327 0bd4 23       		.byte	0x23
 2328 0bd5 1C       		.uleb128 0x1c
 2329 0bd6 13       		.uleb128 0x13
 2330 0bd7 A1010000 		.4byte	.LASF178
 2331 0bdb 08       		.byte	0x8
 2332 0bdc 4E0D     		.2byte	0xd4e
 2333 0bde 0A0B0000 		.4byte	0xb0a
 2334 0be2 02       		.byte	0x2
 2335 0be3 23       		.byte	0x23
 2336 0be4 20       		.uleb128 0x20
 2337 0be5 13       		.uleb128 0x13
 2338 0be6 FE070000 		.4byte	.LASF179
 2339 0bea 08       		.byte	0x8
 2340 0beb 4F0D     		.2byte	0xd4f
 2341 0bed 0F0B0000 		.4byte	0xb0f
 2342 0bf1 02       		.byte	0x2
 2343 0bf2 23       		.byte	0x23
 2344 0bf3 24       		.uleb128 0x24
 2345 0bf4 13       		.uleb128 0x13
 2346 0bf5 3E090000 		.4byte	.LASF180
 2347 0bf9 08       		.byte	0x8
 2348 0bfa 500D     		.2byte	0xd50
ARM GAS  /tmp/ccSeVCM8.s 			page 73


 2349 0bfc 0A0B0000 		.4byte	0xb0a
 2350 0c00 02       		.byte	0x2
 2351 0c01 23       		.byte	0x23
 2352 0c02 28       		.uleb128 0x28
 2353 0c03 13       		.uleb128 0x13
 2354 0c04 51000000 		.4byte	.LASF181
 2355 0c08 08       		.byte	0x8
 2356 0c09 510D     		.2byte	0xd51
 2357 0c0b 0A0B0000 		.4byte	0xb0a
 2358 0c0f 02       		.byte	0x2
 2359 0c10 23       		.byte	0x23
 2360 0c11 2C       		.uleb128 0x2c
 2361 0c12 13       		.uleb128 0x13
 2362 0c13 B4020000 		.4byte	.LASF182
 2363 0c17 08       		.byte	0x8
 2364 0c18 520D     		.2byte	0xd52
 2365 0c1a 0A0B0000 		.4byte	0xb0a
 2366 0c1e 02       		.byte	0x2
 2367 0c1f 23       		.byte	0x23
 2368 0c20 30       		.uleb128 0x30
 2369 0c21 13       		.uleb128 0x13
 2370 0c22 1C070000 		.4byte	.LASF183
 2371 0c26 08       		.byte	0x8
 2372 0c27 530D     		.2byte	0xd53
 2373 0c29 6F0D0000 		.4byte	0xd6f
 2374 0c2d 02       		.byte	0x2
 2375 0c2e 23       		.byte	0x23
 2376 0c2f 34       		.uleb128 0x34
 2377 0c30 13       		.uleb128 0x13
 2378 0c31 80000000 		.4byte	.LASF184
 2379 0c35 08       		.byte	0x8
 2380 0c36 540D     		.2byte	0xd54
 2381 0c38 0A0B0000 		.4byte	0xb0a
 2382 0c3c 02       		.byte	0x2
 2383 0c3d 23       		.byte	0x23
 2384 0c3e 38       		.uleb128 0x38
 2385 0c3f 13       		.uleb128 0x13
 2386 0c40 26070000 		.4byte	.LASF185
 2387 0c44 08       		.byte	0x8
 2388 0c45 550D     		.2byte	0xd55
 2389 0c47 740D0000 		.4byte	0xd74
 2390 0c4b 02       		.byte	0x2
 2391 0c4c 23       		.byte	0x23
 2392 0c4d 3C       		.uleb128 0x3c
 2393 0c4e 13       		.uleb128 0x13
 2394 0c4f A8040000 		.4byte	.LASF186
 2395 0c53 08       		.byte	0x8
 2396 0c54 560D     		.2byte	0xd56
 2397 0c56 890D0000 		.4byte	0xd89
 2398 0c5a 02       		.byte	0x2
 2399 0c5b 23       		.byte	0x23
 2400 0c5c 40       		.uleb128 0x40
 2401 0c5d 13       		.uleb128 0x13
 2402 0c5e 30070000 		.4byte	.LASF187
 2403 0c62 08       		.byte	0x8
 2404 0c63 570D     		.2byte	0xd57
 2405 0c65 8E0D0000 		.4byte	0xd8e
ARM GAS  /tmp/ccSeVCM8.s 			page 74


 2406 0c69 02       		.byte	0x2
 2407 0c6a 23       		.byte	0x23
 2408 0c6b 4C       		.uleb128 0x4c
 2409 0c6c 13       		.uleb128 0x13
 2410 0c6d D3060000 		.4byte	.LASF188
 2411 0c71 08       		.byte	0x8
 2412 0c72 580D     		.2byte	0xd58
 2413 0c74 0A0B0000 		.4byte	0xb0a
 2414 0c78 02       		.byte	0x2
 2415 0c79 23       		.byte	0x23
 2416 0c7a 60       		.uleb128 0x60
 2417 0c7b 13       		.uleb128 0x13
 2418 0c7c 19010000 		.4byte	.LASF189
 2419 0c80 08       		.byte	0x8
 2420 0c81 590D     		.2byte	0xd59
 2421 0c83 0A0B0000 		.4byte	0xb0a
 2422 0c87 02       		.byte	0x2
 2423 0c88 23       		.byte	0x23
 2424 0c89 64       		.uleb128 0x64
 2425 0c8a 13       		.uleb128 0x13
 2426 0c8b DA070000 		.4byte	.LASF190
 2427 0c8f 08       		.byte	0x8
 2428 0c90 5A0D     		.2byte	0xd5a
 2429 0c92 0F0B0000 		.4byte	0xb0f
 2430 0c96 02       		.byte	0x2
 2431 0c97 23       		.byte	0x23
 2432 0c98 68       		.uleb128 0x68
 2433 0c99 13       		.uleb128 0x13
 2434 0c9a E3030000 		.4byte	.LASF191
 2435 0c9e 08       		.byte	0x8
 2436 0c9f 5B0D     		.2byte	0xd5b
 2437 0ca1 0F0B0000 		.4byte	0xb0f
 2438 0ca5 02       		.byte	0x2
 2439 0ca6 23       		.byte	0x23
 2440 0ca7 6C       		.uleb128 0x6c
 2441 0ca8 13       		.uleb128 0x13
 2442 0ca9 76080000 		.4byte	.LASF192
 2443 0cad 08       		.byte	0x8
 2444 0cae 5C0D     		.2byte	0xd5c
 2445 0cb0 0A0B0000 		.4byte	0xb0a
 2446 0cb4 02       		.byte	0x2
 2447 0cb5 23       		.byte	0x23
 2448 0cb6 70       		.uleb128 0x70
 2449 0cb7 13       		.uleb128 0x13
 2450 0cb8 21000000 		.4byte	.LASF193
 2451 0cbc 08       		.byte	0x8
 2452 0cbd 5D0D     		.2byte	0xd5d
 2453 0cbf 0A0B0000 		.4byte	0xb0a
 2454 0cc3 02       		.byte	0x2
 2455 0cc4 23       		.byte	0x23
 2456 0cc5 74       		.uleb128 0x74
 2457 0cc6 13       		.uleb128 0x13
 2458 0cc7 4D070000 		.4byte	.LASF194
 2459 0ccb 08       		.byte	0x8
 2460 0ccc 5E0D     		.2byte	0xd5e
 2461 0cce 0A0B0000 		.4byte	0xb0a
 2462 0cd2 02       		.byte	0x2
ARM GAS  /tmp/ccSeVCM8.s 			page 75


 2463 0cd3 23       		.byte	0x23
 2464 0cd4 78       		.uleb128 0x78
 2465 0cd5 13       		.uleb128 0x13
 2466 0cd6 3A070000 		.4byte	.LASF195
 2467 0cda 08       		.byte	0x8
 2468 0cdb 5F0D     		.2byte	0xd5f
 2469 0cdd A30D0000 		.4byte	0xda3
 2470 0ce1 02       		.byte	0x2
 2471 0ce2 23       		.byte	0x23
 2472 0ce3 7C       		.uleb128 0x7c
 2473 0ce4 13       		.uleb128 0x13
 2474 0ce5 45080000 		.4byte	.LASF196
 2475 0ce9 08       		.byte	0x8
 2476 0cea 600D     		.2byte	0xd60
 2477 0cec 0A0B0000 		.4byte	0xb0a
 2478 0cf0 03       		.byte	0x3
 2479 0cf1 23       		.byte	0x23
 2480 0cf2 E401     		.uleb128 0xe4
 2481 0cf4 13       		.uleb128 0x13
 2482 0cf5 C2050000 		.4byte	.LASF197
 2483 0cf9 08       		.byte	0x8
 2484 0cfa 610D     		.2byte	0xd61
 2485 0cfc 0F0B0000 		.4byte	0xb0f
 2486 0d00 03       		.byte	0x3
 2487 0d01 23       		.byte	0x23
 2488 0d02 E801     		.uleb128 0xe8
 2489 0d04 13       		.uleb128 0x13
 2490 0d05 C4000000 		.4byte	.LASF198
 2491 0d09 08       		.byte	0x8
 2492 0d0a 620D     		.2byte	0xd62
 2493 0d0c A80D0000 		.4byte	0xda8
 2494 0d10 03       		.byte	0x3
 2495 0d11 23       		.byte	0x23
 2496 0d12 EC01     		.uleb128 0xec
 2497 0d14 13       		.uleb128 0x13
 2498 0d15 84010000 		.4byte	.LASF199
 2499 0d19 08       		.byte	0x8
 2500 0d1a 630D     		.2byte	0xd63
 2501 0d1c 0A0B0000 		.4byte	0xb0a
 2502 0d20 03       		.byte	0x3
 2503 0d21 23       		.byte	0x23
 2504 0d22 8002     		.uleb128 0x100
 2505 0d24 13       		.uleb128 0x13
 2506 0d25 EF080000 		.4byte	.LASF200
 2507 0d29 08       		.byte	0x8
 2508 0d2a 640D     		.2byte	0xd64
 2509 0d2c 0A0B0000 		.4byte	0xb0a
 2510 0d30 03       		.byte	0x3
 2511 0d31 23       		.byte	0x23
 2512 0d32 8402     		.uleb128 0x104
 2513 0d34 13       		.uleb128 0x13
 2514 0d35 2B090000 		.4byte	.LASF201
 2515 0d39 08       		.byte	0x8
 2516 0d3a 650D     		.2byte	0xd65
 2517 0d3c 0F0B0000 		.4byte	0xb0f
 2518 0d40 03       		.byte	0x3
 2519 0d41 23       		.byte	0x23
ARM GAS  /tmp/ccSeVCM8.s 			page 76


 2520 0d42 8802     		.uleb128 0x108
 2521 0d44 13       		.uleb128 0x13
 2522 0d45 50030000 		.4byte	.LASF202
 2523 0d49 08       		.byte	0x8
 2524 0d4a 660D     		.2byte	0xd66
 2525 0d4c AD0D0000 		.4byte	0xdad
 2526 0d50 03       		.byte	0x3
 2527 0d51 23       		.byte	0x23
 2528 0d52 8C02     		.uleb128 0x10c
 2529 0d54 13       		.uleb128 0x13
 2530 0d55 C3020000 		.4byte	.LASF203
 2531 0d59 08       		.byte	0x8
 2532 0d5a 670D     		.2byte	0xd67
 2533 0d5c 0A0B0000 		.4byte	0xb0a
 2534 0d60 03       		.byte	0x3
 2535 0d61 23       		.byte	0x23
 2536 0d62 9002     		.uleb128 0x110
 2537 0d64 00       		.byte	0
 2538 0d65 19       		.uleb128 0x19
 2539 0d66 140B0000 		.4byte	0xb14
 2540 0d6a 19       		.uleb128 0x19
 2541 0d6b 140B0000 		.4byte	0xb14
 2542 0d6f 19       		.uleb128 0x19
 2543 0d70 140B0000 		.4byte	0xb14
 2544 0d74 19       		.uleb128 0x19
 2545 0d75 140B0000 		.4byte	0xb14
 2546 0d79 08       		.uleb128 0x8
 2547 0d7a 01010000 		.4byte	0x101
 2548 0d7e 890D0000 		.4byte	0xd89
 2549 0d82 09       		.uleb128 0x9
 2550 0d83 4C000000 		.4byte	0x4c
 2551 0d87 02       		.byte	0x2
 2552 0d88 00       		.byte	0
 2553 0d89 19       		.uleb128 0x19
 2554 0d8a 790D0000 		.4byte	0xd79
 2555 0d8e 19       		.uleb128 0x19
 2556 0d8f 340B0000 		.4byte	0xb34
 2557 0d93 08       		.uleb128 0x8
 2558 0d94 01010000 		.4byte	0x101
 2559 0d98 A30D0000 		.4byte	0xda3
 2560 0d9c 09       		.uleb128 0x9
 2561 0d9d 4C000000 		.4byte	0x4c
 2562 0da1 19       		.byte	0x19
 2563 0da2 00       		.byte	0
 2564 0da3 19       		.uleb128 0x19
 2565 0da4 930D0000 		.4byte	0xd93
 2566 0da8 19       		.uleb128 0x19
 2567 0da9 340B0000 		.4byte	0xb34
 2568 0dad 19       		.uleb128 0x19
 2569 0dae 140B0000 		.4byte	0xb14
 2570 0db2 1F       		.uleb128 0x1f
 2571 0db3 506D6300 		.ascii	"Pmc\000"
 2572 0db7 08       		.byte	0x8
 2573 0db8 680D     		.2byte	0xd68
 2574 0dba 540B0000 		.4byte	0xb54
 2575 0dbe 20       		.uleb128 0x20
 2576 0dbf 40       		.byte	0x40
ARM GAS  /tmp/ccSeVCM8.s 			page 77


 2577 0dc0 08       		.byte	0x8
 2578 0dc1 4B15     		.2byte	0x154b
 2579 0dc3 8B0E0000 		.4byte	0xe8b
 2580 0dc7 13       		.uleb128 0x13
 2581 0dc8 31010000 		.4byte	.LASF204
 2582 0dcc 08       		.byte	0x8
 2583 0dcd 4C15     		.2byte	0x154c
 2584 0dcf 0A0B0000 		.4byte	0xb0a
 2585 0dd3 02       		.byte	0x2
 2586 0dd4 23       		.byte	0x23
 2587 0dd5 00       		.uleb128 0
 2588 0dd6 13       		.uleb128 0x13
 2589 0dd7 54040000 		.4byte	.LASF205
 2590 0ddb 08       		.byte	0x8
 2591 0ddc 4D15     		.2byte	0x154d
 2592 0dde 0A0B0000 		.4byte	0xb0a
 2593 0de2 02       		.byte	0x2
 2594 0de3 23       		.byte	0x23
 2595 0de4 04       		.uleb128 0x4
 2596 0de5 13       		.uleb128 0x13
 2597 0de6 63000000 		.4byte	.LASF206
 2598 0dea 08       		.byte	0x8
 2599 0deb 4E15     		.2byte	0x154e
 2600 0ded 0A0B0000 		.4byte	0xb0a
 2601 0df1 02       		.byte	0x2
 2602 0df2 23       		.byte	0x23
 2603 0df3 08       		.uleb128 0x8
 2604 0df4 13       		.uleb128 0x13
 2605 0df5 08070000 		.4byte	.LASF173
 2606 0df9 08       		.byte	0x8
 2607 0dfa 4F15     		.2byte	0x154f
 2608 0dfc 8B0E0000 		.4byte	0xe8b
 2609 0e00 02       		.byte	0x2
 2610 0e01 23       		.byte	0x23
 2611 0e02 0C       		.uleb128 0xc
 2612 0e03 13       		.uleb128 0x13
 2613 0e04 60070000 		.4byte	.LASF207
 2614 0e08 08       		.byte	0x8
 2615 0e09 5015     		.2byte	0x1550
 2616 0e0b 0A0B0000 		.4byte	0xb0a
 2617 0e0f 02       		.byte	0x2
 2618 0e10 23       		.byte	0x23
 2619 0e11 10       		.uleb128 0x10
 2620 0e12 13       		.uleb128 0x13
 2621 0e13 64020000 		.4byte	.LASF208
 2622 0e17 08       		.byte	0x8
 2623 0e18 5115     		.2byte	0x1551
 2624 0e1a 0A0B0000 		.4byte	0xb0a
 2625 0e1e 02       		.byte	0x2
 2626 0e1f 23       		.byte	0x23
 2627 0e20 14       		.uleb128 0x14
 2628 0e21 13       		.uleb128 0x13
 2629 0e22 6A020000 		.4byte	.LASF209
 2630 0e26 08       		.byte	0x8
 2631 0e27 5215     		.2byte	0x1552
 2632 0e29 0A0B0000 		.4byte	0xb0a
 2633 0e2d 02       		.byte	0x2
ARM GAS  /tmp/ccSeVCM8.s 			page 78


 2634 0e2e 23       		.byte	0x23
 2635 0e2f 18       		.uleb128 0x18
 2636 0e30 13       		.uleb128 0x13
 2637 0e31 70020000 		.4byte	.LASF210
 2638 0e35 08       		.byte	0x8
 2639 0e36 5315     		.2byte	0x1553
 2640 0e38 0A0B0000 		.4byte	0xb0a
 2641 0e3c 02       		.byte	0x2
 2642 0e3d 23       		.byte	0x23
 2643 0e3e 1C       		.uleb128 0x1c
 2644 0e3f 13       		.uleb128 0x13
 2645 0e40 BD020000 		.4byte	.LASF211
 2646 0e44 08       		.byte	0x8
 2647 0e45 5415     		.2byte	0x1554
 2648 0e47 0A0B0000 		.4byte	0xb0a
 2649 0e4b 02       		.byte	0x2
 2650 0e4c 23       		.byte	0x23
 2651 0e4d 20       		.uleb128 0x20
 2652 0e4e 13       		.uleb128 0x13
 2653 0e4f B7030000 		.4byte	.LASF212
 2654 0e53 08       		.byte	0x8
 2655 0e54 5515     		.2byte	0x1555
 2656 0e56 0A0B0000 		.4byte	0xb0a
 2657 0e5a 02       		.byte	0x2
 2658 0e5b 23       		.byte	0x23
 2659 0e5c 24       		.uleb128 0x24
 2660 0e5d 13       		.uleb128 0x13
 2661 0e5e 36030000 		.4byte	.LASF213
 2662 0e62 08       		.byte	0x8
 2663 0e63 5615     		.2byte	0x1556
 2664 0e65 0A0B0000 		.4byte	0xb0a
 2665 0e69 02       		.byte	0x2
 2666 0e6a 23       		.byte	0x23
 2667 0e6b 28       		.uleb128 0x28
 2668 0e6c 13       		.uleb128 0x13
 2669 0e6d FF050000 		.4byte	.LASF214
 2670 0e71 08       		.byte	0x8
 2671 0e72 5715     		.2byte	0x1557
 2672 0e74 0A0B0000 		.4byte	0xb0a
 2673 0e78 02       		.byte	0x2
 2674 0e79 23       		.byte	0x23
 2675 0e7a 2C       		.uleb128 0x2c
 2676 0e7b 13       		.uleb128 0x13
 2677 0e7c 12070000 		.4byte	.LASF177
 2678 0e80 08       		.byte	0x8
 2679 0e81 5815     		.2byte	0x1558
 2680 0e83 900E0000 		.4byte	0xe90
 2681 0e87 02       		.byte	0x2
 2682 0e88 23       		.byte	0x23
 2683 0e89 30       		.uleb128 0x30
 2684 0e8a 00       		.byte	0
 2685 0e8b 19       		.uleb128 0x19
 2686 0e8c 140B0000 		.4byte	0xb14
 2687 0e90 19       		.uleb128 0x19
 2688 0e91 440B0000 		.4byte	0xb44
 2689 0e95 05       		.uleb128 0x5
 2690 0e96 F2010000 		.4byte	.LASF215
ARM GAS  /tmp/ccSeVCM8.s 			page 79


 2691 0e9a 08       		.byte	0x8
 2692 0e9b 5915     		.2byte	0x1559
 2693 0e9d BE0D0000 		.4byte	0xdbe
 2694 0ea1 20       		.uleb128 0x20
 2695 0ea2 E8       		.byte	0xe8
 2696 0ea3 08       		.byte	0x8
 2697 0ea4 5B15     		.2byte	0x155b
 2698 0ea6 4A0F0000 		.4byte	0xf4a
 2699 0eaa 13       		.uleb128 0x13
 2700 0eab F1000000 		.4byte	.LASF216
 2701 0eaf 08       		.byte	0x8
 2702 0eb0 5C15     		.2byte	0x155c
 2703 0eb2 4A0F0000 		.4byte	0xf4a
 2704 0eb6 02       		.byte	0x2
 2705 0eb7 23       		.byte	0x23
 2706 0eb8 00       		.uleb128 0
 2707 0eb9 13       		.uleb128 0x13
 2708 0eba BE080000 		.4byte	.LASF217
 2709 0ebe 08       		.byte	0x8
 2710 0ebf 5D15     		.2byte	0x155d
 2711 0ec1 0A0B0000 		.4byte	0xb0a
 2712 0ec5 03       		.byte	0x3
 2713 0ec6 23       		.byte	0x23
 2714 0ec7 C001     		.uleb128 0xc0
 2715 0ec9 13       		.uleb128 0x13
 2716 0eca 87020000 		.4byte	.LASF218
 2717 0ece 08       		.byte	0x8
 2718 0ecf 5E15     		.2byte	0x155e
 2719 0ed1 0A0B0000 		.4byte	0xb0a
 2720 0ed5 03       		.byte	0x3
 2721 0ed6 23       		.byte	0x23
 2722 0ed7 C401     		.uleb128 0xc4
 2723 0ed9 13       		.uleb128 0x13
 2724 0eda D2070000 		.4byte	.LASF219
 2725 0ede 08       		.byte	0x8
 2726 0edf 5F15     		.2byte	0x155f
 2727 0ee1 0A0B0000 		.4byte	0xb0a
 2728 0ee5 03       		.byte	0x3
 2729 0ee6 23       		.byte	0x23
 2730 0ee7 C801     		.uleb128 0xc8
 2731 0ee9 13       		.uleb128 0x13
 2732 0eea AE070000 		.4byte	.LASF220
 2733 0eee 08       		.byte	0x8
 2734 0eef 6015     		.2byte	0x1560
 2735 0ef1 0A0B0000 		.4byte	0xb0a
 2736 0ef5 03       		.byte	0x3
 2737 0ef6 23       		.byte	0x23
 2738 0ef7 CC01     		.uleb128 0xcc
 2739 0ef9 13       		.uleb128 0x13
 2740 0efa E3000000 		.4byte	.LASF221
 2741 0efe 08       		.byte	0x8
 2742 0eff 6115     		.2byte	0x1561
 2743 0f01 0F0B0000 		.4byte	0xb0f
 2744 0f05 03       		.byte	0x3
 2745 0f06 23       		.byte	0x23
 2746 0f07 D001     		.uleb128 0xd0
 2747 0f09 13       		.uleb128 0x13
ARM GAS  /tmp/ccSeVCM8.s 			page 80


 2748 0f0a 9E020000 		.4byte	.LASF222
 2749 0f0e 08       		.byte	0x8
 2750 0f0f 6215     		.2byte	0x1562
 2751 0f11 0F0B0000 		.4byte	0xb0f
 2752 0f15 03       		.byte	0x3
 2753 0f16 23       		.byte	0x23
 2754 0f17 D401     		.uleb128 0xd4
 2755 0f19 13       		.uleb128 0x13
 2756 0f1a BD000000 		.4byte	.LASF223
 2757 0f1e 08       		.byte	0x8
 2758 0f1f 6315     		.2byte	0x1563
 2759 0f21 0A0B0000 		.4byte	0xb0a
 2760 0f25 03       		.byte	0x3
 2761 0f26 23       		.byte	0x23
 2762 0f27 D801     		.uleb128 0xd8
 2763 0f29 13       		.uleb128 0x13
 2764 0f2a 08070000 		.4byte	.LASF173
 2765 0f2e 08       		.byte	0x8
 2766 0f2f 6415     		.2byte	0x1564
 2767 0f31 5A0F0000 		.4byte	0xf5a
 2768 0f35 03       		.byte	0x3
 2769 0f36 23       		.byte	0x23
 2770 0f37 DC01     		.uleb128 0xdc
 2771 0f39 13       		.uleb128 0x13
 2772 0f3a 1B080000 		.4byte	.LASF224
 2773 0f3e 08       		.byte	0x8
 2774 0f3f 6515     		.2byte	0x1565
 2775 0f41 0A0B0000 		.4byte	0xb0a
 2776 0f45 03       		.byte	0x3
 2777 0f46 23       		.byte	0x23
 2778 0f47 E401     		.uleb128 0xe4
 2779 0f49 00       		.byte	0
 2780 0f4a 08       		.uleb128 0x8
 2781 0f4b 950E0000 		.4byte	0xe95
 2782 0f4f 5A0F0000 		.4byte	0xf5a
 2783 0f53 09       		.uleb128 0x9
 2784 0f54 4C000000 		.4byte	0x4c
 2785 0f58 02       		.byte	0x2
 2786 0f59 00       		.byte	0
 2787 0f5a 19       		.uleb128 0x19
 2788 0f5b 240B0000 		.4byte	0xb24
 2789 0f5f 1F       		.uleb128 0x1f
 2790 0f60 546300   		.ascii	"Tc\000"
 2791 0f63 08       		.byte	0x8
 2792 0f64 6615     		.2byte	0x1566
 2793 0f66 A10E0000 		.4byte	0xea1
 2794 0f6a 20       		.uleb128 0x20
 2795 0f6b 0C       		.byte	0xc
 2796 0f6c 08       		.byte	0x8
 2797 0f6d 7C19     		.2byte	0x197c
 2798 0f6f A10F0000 		.4byte	0xfa1
 2799 0f73 13       		.uleb128 0x13
 2800 0f74 43020000 		.4byte	.LASF225
 2801 0f78 08       		.byte	0x8
 2802 0f79 7D19     		.2byte	0x197d
 2803 0f7b 0A0B0000 		.4byte	0xb0a
 2804 0f7f 02       		.byte	0x2
ARM GAS  /tmp/ccSeVCM8.s 			page 81


 2805 0f80 23       		.byte	0x23
 2806 0f81 00       		.uleb128 0
 2807 0f82 13       		.uleb128 0x13
 2808 0f83 40050000 		.4byte	.LASF226
 2809 0f87 08       		.byte	0x8
 2810 0f88 7E19     		.2byte	0x197e
 2811 0f8a 0A0B0000 		.4byte	0xb0a
 2812 0f8e 02       		.byte	0x2
 2813 0f8f 23       		.byte	0x23
 2814 0f90 04       		.uleb128 0x4
 2815 0f91 13       		.uleb128 0x13
 2816 0f92 66070000 		.4byte	.LASF227
 2817 0f96 08       		.byte	0x8
 2818 0f97 7F19     		.2byte	0x197f
 2819 0f99 0F0B0000 		.4byte	0xb0f
 2820 0f9d 02       		.byte	0x2
 2821 0f9e 23       		.byte	0x23
 2822 0f9f 08       		.uleb128 0x8
 2823 0fa0 00       		.byte	0
 2824 0fa1 1F       		.uleb128 0x1f
 2825 0fa2 57647400 		.ascii	"Wdt\000"
 2826 0fa6 08       		.byte	0x8
 2827 0fa7 8019     		.2byte	0x1980
 2828 0fa9 6A0F0000 		.4byte	0xf6a
 2829 0fad 04       		.uleb128 0x4
 2830 0fae CE080000 		.4byte	.LASF228
 2831 0fb2 09       		.byte	0x9
 2832 0fb3 10       		.byte	0x10
 2833 0fb4 A3080000 		.4byte	0x8a3
 2834 0fb8 21       		.uleb128 0x21
 2835 0fb9 01       		.byte	0x1
 2836 0fba 09       		.byte	0x9
 2837 0fbb 12       		.byte	0x12
 2838 0fbc D90F0000 		.4byte	0xfd9
 2839 0fc0 22       		.uleb128 0x22
 2840 0fc1 4F464600 		.ascii	"OFF\000"
 2841 0fc5 00       		.sleb128 0
 2842 0fc6 1B       		.uleb128 0x1b
 2843 0fc7 A7050000 		.4byte	.LASF229
 2844 0fcb 01       		.sleb128 1
 2845 0fcc 1B       		.uleb128 0x1b
 2846 0fcd 2C010000 		.4byte	.LASF230
 2847 0fd1 02       		.sleb128 2
 2848 0fd2 1B       		.uleb128 0x1b
 2849 0fd3 1B050000 		.4byte	.LASF231
 2850 0fd7 03       		.sleb128 3
 2851 0fd8 00       		.byte	0
 2852 0fd9 04       		.uleb128 0x4
 2853 0fda D2040000 		.4byte	.LASF232
 2854 0fde 09       		.byte	0x9
 2855 0fdf 12       		.byte	0x12
 2856 0fe0 B80F0000 		.4byte	0xfb8
 2857 0fe4 0D       		.uleb128 0xd
 2858 0fe5 37020000 		.4byte	.LASF233
 2859 0fe9 2C       		.byte	0x2c
 2860 0fea 09       		.byte	0x9
 2861 0feb 15       		.byte	0x15
ARM GAS  /tmp/ccSeVCM8.s 			page 82


 2862 0fec AF100000 		.4byte	0x10af
 2863 0ff0 0B       		.uleb128 0xb
 2864 0ff1 CD070000 		.4byte	.LASF234
 2865 0ff5 09       		.byte	0x9
 2866 0ff6 16       		.byte	0x16
 2867 0ff7 D90F0000 		.4byte	0xfd9
 2868 0ffb 02       		.byte	0x2
 2869 0ffc 23       		.byte	0x23
 2870 0ffd 00       		.uleb128 0
 2871 0ffe 0E       		.uleb128 0xe
 2872 0fff 535000   		.ascii	"SP\000"
 2873 1002 09       		.byte	0x9
 2874 1003 17       		.byte	0x17
 2875 1004 AD0F0000 		.4byte	0xfad
 2876 1008 02       		.byte	0x2
 2877 1009 23       		.byte	0x23
 2878 100a 02       		.uleb128 0x2
 2879 100b 0E       		.uleb128 0xe
 2880 100c 72535000 		.ascii	"rSP\000"
 2881 1010 09       		.byte	0x9
 2882 1011 18       		.byte	0x18
 2883 1012 AD0F0000 		.4byte	0xfad
 2884 1016 02       		.byte	0x2
 2885 1017 23       		.byte	0x23
 2886 1018 04       		.uleb128 0x4
 2887 1019 0B       		.uleb128 0xb
 2888 101a AD020000 		.4byte	.LASF235
 2889 101e 09       		.byte	0x9
 2890 101f 19       		.byte	0x19
 2891 1020 45000000 		.4byte	0x45
 2892 1024 02       		.byte	0x2
 2893 1025 23       		.byte	0x23
 2894 1026 08       		.uleb128 0x8
 2895 1027 0E       		.uleb128 0xe
 2896 1028 4B7000   		.ascii	"Kp\000"
 2897 102b 09       		.byte	0x9
 2898 102c 1B       		.byte	0x1b
 2899 102d AD0F0000 		.4byte	0xfad
 2900 1031 02       		.byte	0x2
 2901 1032 23       		.byte	0x23
 2902 1033 0C       		.uleb128 0xc
 2903 1034 0E       		.uleb128 0xe
 2904 1035 4B6900   		.ascii	"Ki\000"
 2905 1038 09       		.byte	0x9
 2906 1039 1C       		.byte	0x1c
 2907 103a AD0F0000 		.4byte	0xfad
 2908 103e 02       		.byte	0x2
 2909 103f 23       		.byte	0x23
 2910 1040 0E       		.uleb128 0xe
 2911 1041 0E       		.uleb128 0xe
 2912 1042 4B6400   		.ascii	"Kd\000"
 2913 1045 09       		.byte	0x9
 2914 1046 1D       		.byte	0x1d
 2915 1047 AD0F0000 		.4byte	0xfad
 2916 104b 02       		.byte	0x2
 2917 104c 23       		.byte	0x23
 2918 104d 10       		.uleb128 0x10
ARM GAS  /tmp/ccSeVCM8.s 			page 83


 2919 104e 0E       		.uleb128 0xe
 2920 104f 5F6500   		.ascii	"_e\000"
 2921 1052 09       		.byte	0x9
 2922 1053 1F       		.byte	0x1f
 2923 1054 45000000 		.4byte	0x45
 2924 1058 02       		.byte	0x2
 2925 1059 23       		.byte	0x23
 2926 105a 14       		.uleb128 0x14
 2927 105b 0E       		.uleb128 0xe
 2928 105c 5F647800 		.ascii	"_dx\000"
 2929 1060 09       		.byte	0x9
 2930 1061 20       		.byte	0x20
 2931 1062 45000000 		.4byte	0x45
 2932 1066 02       		.byte	0x2
 2933 1067 23       		.byte	0x23
 2934 1068 18       		.uleb128 0x18
 2935 1069 0E       		.uleb128 0xe
 2936 106a 5F646500 		.ascii	"_de\000"
 2937 106e 09       		.byte	0x9
 2938 106f 21       		.byte	0x21
 2939 1070 45000000 		.4byte	0x45
 2940 1074 02       		.byte	0x2
 2941 1075 23       		.byte	0x23
 2942 1076 1C       		.uleb128 0x1c
 2943 1077 0B       		.uleb128 0xb
 2944 1078 16050000 		.4byte	.LASF236
 2945 107c 09       		.byte	0x9
 2946 107d 22       		.byte	0x22
 2947 107e 45000000 		.4byte	0x45
 2948 1082 02       		.byte	0x2
 2949 1083 23       		.byte	0x23
 2950 1084 20       		.uleb128 0x20
 2951 1085 0E       		.uleb128 0xe
 2952 1086 5F7800   		.ascii	"_x\000"
 2953 1089 09       		.byte	0x9
 2954 108a 23       		.byte	0x23
 2955 108b AD0F0000 		.4byte	0xfad
 2956 108f 02       		.byte	0x2
 2957 1090 23       		.byte	0x23
 2958 1091 24       		.uleb128 0x24
 2959 1092 0B       		.uleb128 0xb
 2960 1093 80020000 		.4byte	.LASF237
 2961 1097 09       		.byte	0x9
 2962 1098 25       		.byte	0x25
 2963 1099 37000000 		.4byte	0x37
 2964 109d 02       		.byte	0x2
 2965 109e 23       		.byte	0x23
 2966 109f 26       		.uleb128 0x26
 2967 10a0 0B       		.uleb128 0xb
 2968 10a1 10010000 		.4byte	.LASF238
 2969 10a5 09       		.byte	0x9
 2970 10a6 27       		.byte	0x27
 2971 10a7 F3100000 		.4byte	0x10f3
 2972 10ab 02       		.byte	0x2
 2973 10ac 23       		.byte	0x23
 2974 10ad 28       		.uleb128 0x28
 2975 10ae 00       		.byte	0
ARM GAS  /tmp/ccSeVCM8.s 			page 84


 2976 10af 0D       		.uleb128 0xd
 2977 10b0 1E040000 		.4byte	.LASF239
 2978 10b4 10       		.byte	0x10
 2979 10b5 09       		.byte	0x9
 2980 10b6 2B       		.byte	0x2b
 2981 10b7 F3100000 		.4byte	0x10f3
 2982 10bb 0B       		.uleb128 0xb
 2983 10bc D9020000 		.4byte	.LASF240
 2984 10c0 09       		.byte	0x9
 2985 10c1 2C       		.byte	0x2c
 2986 10c2 F9100000 		.4byte	0x10f9
 2987 10c6 02       		.byte	0x2
 2988 10c7 23       		.byte	0x23
 2989 10c8 00       		.uleb128 0
 2990 10c9 0B       		.uleb128 0xb
 2991 10ca 80020000 		.4byte	.LASF237
 2992 10ce 09       		.byte	0x9
 2993 10cf 2D       		.byte	0x2d
 2994 10d0 45000000 		.4byte	0x45
 2995 10d4 02       		.byte	0x2
 2996 10d5 23       		.byte	0x23
 2997 10d6 04       		.uleb128 0x4
 2998 10d7 0E       		.uleb128 0xe
 2999 10d8 6F6E00   		.ascii	"on\000"
 3000 10db 09       		.byte	0x9
 3001 10dc 2E       		.byte	0x2e
 3002 10dd 45000000 		.4byte	0x45
 3003 10e1 02       		.byte	0x2
 3004 10e2 23       		.byte	0x23
 3005 10e3 08       		.uleb128 0x8
 3006 10e4 0E       		.uleb128 0xe
 3007 10e5 6F666600 		.ascii	"off\000"
 3008 10e9 09       		.byte	0x9
 3009 10ea 2F       		.byte	0x2f
 3010 10eb 45000000 		.4byte	0x45
 3011 10ef 02       		.byte	0x2
 3012 10f0 23       		.byte	0x23
 3013 10f1 0C       		.uleb128 0xc
 3014 10f2 00       		.byte	0
 3015 10f3 0F       		.uleb128 0xf
 3016 10f4 04       		.byte	0x4
 3017 10f5 AF100000 		.4byte	0x10af
 3018 10f9 0F       		.uleb128 0xf
 3019 10fa 04       		.byte	0x4
 3020 10fb 45000000 		.4byte	0x45
 3021 10ff 23       		.uleb128 0x23
 3022 1100 09000000 		.4byte	.LASF250
 3023 1104 01       		.byte	0x1
 3024 1105 DE05     		.2byte	0x5de
 3025 1107 01       		.byte	0x1
 3026 1108 00000000 		.4byte	.LFB14
 3027 110c 36000000 		.4byte	.LFE14
 3028 1110 00000000 		.4byte	.LLST0
 3029 1114 28110000 		.4byte	0x1128
 3030 1118 24       		.uleb128 0x24
 3031 1119 93010000 		.4byte	.LASF249
 3032 111d 01       		.byte	0x1
ARM GAS  /tmp/ccSeVCM8.s 			page 85


 3033 111e DE05     		.2byte	0x5de
 3034 1120 BB090000 		.4byte	0x9bb
 3035 1124 02       		.byte	0x2
 3036 1125 91       		.byte	0x91
 3037 1126 77       		.sleb128 -9
 3038 1127 00       		.byte	0
 3039 1128 25       		.uleb128 0x25
 3040 1129 01       		.byte	0x1
 3041 112a 8E010000 		.4byte	.LASF251
 3042 112e 02       		.byte	0x2
 3043 112f 12       		.byte	0x12
 3044 1130 45000000 		.4byte	0x45
 3045 1134 00000000 		.4byte	.LFB35
 3046 1138 AE040000 		.4byte	.LFE35
 3047 113c 38000000 		.4byte	.LLST1
 3048 1140 98110000 		.4byte	0x1198
 3049 1144 26       		.uleb128 0x26
 3050 1145 EB030000 		.4byte	.LASF241
 3051 1149 02       		.byte	0x2
 3052 114a 14       		.byte	0x14
 3053 114b F3050000 		.4byte	0x5f3
 3054 114f 02       		.byte	0x2
 3055 1150 91       		.byte	0x91
 3056 1151 6C       		.sleb128 -20
 3057 1152 27       		.uleb128 0x27
 3058 1153 6F707400 		.ascii	"opt\000"
 3059 1157 02       		.byte	0x2
 3060 1158 15       		.byte	0x15
 3061 1159 46080000 		.4byte	0x846
 3062 115d 02       		.byte	0x2
 3063 115e 91       		.byte	0x91
 3064 115f 5C       		.sleb128 -36
 3065 1160 27       		.uleb128 0x27
 3066 1161 636D6400 		.ascii	"cmd\000"
 3067 1165 02       		.byte	0x2
 3068 1166 16       		.byte	0x16
 3069 1167 F9050000 		.4byte	0x5f9
 3070 116b 02       		.byte	0x2
 3071 116c 91       		.byte	0x91
 3072 116d 67       		.sleb128 -25
 3073 116e 27       		.uleb128 0x27
 3074 116f 61726700 		.ascii	"arg\000"
 3075 1173 02       		.byte	0x2
 3076 1174 18       		.byte	0x18
 3077 1175 98110000 		.4byte	0x1198
 3078 1179 02       		.byte	0x2
 3079 117a 91       		.byte	0x91
 3080 117b 50       		.sleb128 -48
 3081 117c 27       		.uleb128 0x27
 3082 117d 696400   		.ascii	"id\000"
 3083 1180 02       		.byte	0x2
 3084 1181 19       		.byte	0x19
 3085 1182 4C000000 		.4byte	0x4c
 3086 1186 02       		.byte	0x2
 3087 1187 91       		.byte	0x91
 3088 1188 68       		.sleb128 -24
 3089 1189 27       		.uleb128 0x27
ARM GAS  /tmp/ccSeVCM8.s 			page 86


 3090 118a 6F666600 		.ascii	"off\000"
 3091 118e 02       		.byte	0x2
 3092 118f 1A       		.byte	0x1a
 3093 1190 4C000000 		.4byte	0x4c
 3094 1194 02       		.byte	0x2
 3095 1195 91       		.byte	0x91
 3096 1196 4C       		.sleb128 -52
 3097 1197 00       		.byte	0
 3098 1198 08       		.uleb128 0x8
 3099 1199 45000000 		.4byte	0x45
 3100 119d A8110000 		.4byte	0x11a8
 3101 11a1 09       		.uleb128 0x9
 3102 11a2 4C000000 		.4byte	0x4c
 3103 11a6 02       		.byte	0x2
 3104 11a7 00       		.byte	0
 3105 11a8 28       		.uleb128 0x28
 3106 11a9 01       		.byte	0x1
 3107 11aa 68060000 		.4byte	.LASF252
 3108 11ae 02       		.byte	0x2
 3109 11af A5       		.byte	0xa5
 3110 11b0 01       		.byte	0x1
 3111 11b1 00000000 		.4byte	.LFB36
 3112 11b5 0A000000 		.4byte	.LFE36
 3113 11b9 71000000 		.4byte	.LLST2
 3114 11bd 29       		.uleb128 0x29
 3115 11be 01       		.byte	0x1
 3116 11bf F7060000 		.4byte	.LASF253
 3117 11c3 02       		.byte	0x2
 3118 11c4 A9       		.byte	0xa9
 3119 11c5 00000000 		.4byte	.LFB37
 3120 11c9 A0000000 		.4byte	.LFE37
 3121 11cd 9D000000 		.4byte	.LLST3
 3122 11d1 F2110000 		.4byte	0x11f2
 3123 11d5 27       		.uleb128 0x27
 3124 11d6 64697600 		.ascii	"div\000"
 3125 11da 02       		.byte	0x2
 3126 11db AB       		.byte	0xab
 3127 11dc AE080000 		.4byte	0x8ae
 3128 11e0 02       		.byte	0x2
 3129 11e1 91       		.byte	0x91
 3130 11e2 6C       		.sleb128 -20
 3131 11e3 26       		.uleb128 0x26
 3132 11e4 AA060000 		.4byte	.LASF242
 3133 11e8 02       		.byte	0x2
 3134 11e9 AC       		.byte	0xac
 3135 11ea AE080000 		.4byte	0x8ae
 3136 11ee 02       		.byte	0x2
 3137 11ef 91       		.byte	0x91
 3138 11f0 68       		.sleb128 -24
 3139 11f1 00       		.byte	0
 3140 11f2 2A       		.uleb128 0x2a
 3141 11f3 4F010000 		.4byte	.LASF243
 3142 11f7 06       		.byte	0x6
 3143 11f8 4803     		.2byte	0x348
 3144 11fa 74040000 		.4byte	0x474
 3145 11fe 01       		.byte	0x1
 3146 11ff 01       		.byte	0x1
ARM GAS  /tmp/ccSeVCM8.s 			page 87


 3147 1200 2A       		.uleb128 0x2a
 3148 1201 03050000 		.4byte	.LASF244
 3149 1205 01       		.byte	0x1
 3150 1206 CE06     		.2byte	0x6ce
 3151 1208 0E120000 		.4byte	0x120e
 3152 120c 01       		.byte	0x1
 3153 120d 01       		.byte	0x1
 3154 120e 19       		.uleb128 0x19
 3155 120f 45000000 		.4byte	0x45
 3156 1213 08       		.uleb128 0x8
 3157 1214 E40F0000 		.4byte	0xfe4
 3158 1218 23120000 		.4byte	0x1223
 3159 121c 09       		.uleb128 0x9
 3160 121d 4C000000 		.4byte	0x4c
 3161 1221 01       		.byte	0x1
 3162 1222 00       		.byte	0
 3163 1223 2B       		.uleb128 0x2b
 3164 1224 E4020000 		.4byte	.LASF245
 3165 1228 02       		.byte	0x2
 3166 1229 0E       		.byte	0xe
 3167 122a 13120000 		.4byte	0x1213
 3168 122e 01       		.byte	0x1
 3169 122f 01       		.byte	0x1
 3170 1230 2A       		.uleb128 0x2a
 3171 1231 4F010000 		.4byte	.LASF243
 3172 1235 06       		.byte	0x6
 3173 1236 4803     		.2byte	0x348
 3174 1238 74040000 		.4byte	0x474
 3175 123c 01       		.byte	0x1
 3176 123d 01       		.byte	0x1
 3177 123e 2A       		.uleb128 0x2a
 3178 123f 03050000 		.4byte	.LASF244
 3179 1243 01       		.byte	0x1
 3180 1244 CE06     		.2byte	0x6ce
 3181 1246 0E120000 		.4byte	0x120e
 3182 124a 01       		.byte	0x1
 3183 124b 01       		.byte	0x1
 3184 124c 2C       		.uleb128 0x2c
 3185 124d E4020000 		.4byte	.LASF245
 3186 1251 02       		.byte	0x2
 3187 1252 0E       		.byte	0xe
 3188 1253 13120000 		.4byte	0x1213
 3189 1257 01       		.byte	0x1
 3190 1258 05       		.byte	0x5
 3191 1259 03       		.byte	0x3
 3192 125a 00000000 		.4byte	loops
 3193 125e 00       		.byte	0
 3194              		.section	.debug_abbrev,"",%progbits
 3195              	.Ldebug_abbrev0:
 3196 0000 01       		.uleb128 0x1
 3197 0001 11       		.uleb128 0x11
 3198 0002 01       		.byte	0x1
 3199 0003 25       		.uleb128 0x25
 3200 0004 0E       		.uleb128 0xe
 3201 0005 13       		.uleb128 0x13
 3202 0006 0B       		.uleb128 0xb
 3203 0007 03       		.uleb128 0x3
ARM GAS  /tmp/ccSeVCM8.s 			page 88


 3204 0008 0E       		.uleb128 0xe
 3205 0009 1B       		.uleb128 0x1b
 3206 000a 0E       		.uleb128 0xe
 3207 000b 11       		.uleb128 0x11
 3208 000c 01       		.uleb128 0x1
 3209 000d 52       		.uleb128 0x52
 3210 000e 01       		.uleb128 0x1
 3211 000f 55       		.uleb128 0x55
 3212 0010 06       		.uleb128 0x6
 3213 0011 10       		.uleb128 0x10
 3214 0012 06       		.uleb128 0x6
 3215 0013 00       		.byte	0
 3216 0014 00       		.byte	0
 3217 0015 02       		.uleb128 0x2
 3218 0016 24       		.uleb128 0x24
 3219 0017 00       		.byte	0
 3220 0018 0B       		.uleb128 0xb
 3221 0019 0B       		.uleb128 0xb
 3222 001a 3E       		.uleb128 0x3e
 3223 001b 0B       		.uleb128 0xb
 3224 001c 03       		.uleb128 0x3
 3225 001d 0E       		.uleb128 0xe
 3226 001e 00       		.byte	0
 3227 001f 00       		.byte	0
 3228 0020 03       		.uleb128 0x3
 3229 0021 24       		.uleb128 0x24
 3230 0022 00       		.byte	0
 3231 0023 0B       		.uleb128 0xb
 3232 0024 0B       		.uleb128 0xb
 3233 0025 3E       		.uleb128 0x3e
 3234 0026 0B       		.uleb128 0xb
 3235 0027 03       		.uleb128 0x3
 3236 0028 08       		.uleb128 0x8
 3237 0029 00       		.byte	0
 3238 002a 00       		.byte	0
 3239 002b 04       		.uleb128 0x4
 3240 002c 16       		.uleb128 0x16
 3241 002d 00       		.byte	0
 3242 002e 03       		.uleb128 0x3
 3243 002f 0E       		.uleb128 0xe
 3244 0030 3A       		.uleb128 0x3a
 3245 0031 0B       		.uleb128 0xb
 3246 0032 3B       		.uleb128 0x3b
 3247 0033 0B       		.uleb128 0xb
 3248 0034 49       		.uleb128 0x49
 3249 0035 13       		.uleb128 0x13
 3250 0036 00       		.byte	0
 3251 0037 00       		.byte	0
 3252 0038 05       		.uleb128 0x5
 3253 0039 16       		.uleb128 0x16
 3254 003a 00       		.byte	0
 3255 003b 03       		.uleb128 0x3
 3256 003c 0E       		.uleb128 0xe
 3257 003d 3A       		.uleb128 0x3a
 3258 003e 0B       		.uleb128 0xb
 3259 003f 3B       		.uleb128 0x3b
 3260 0040 05       		.uleb128 0x5
ARM GAS  /tmp/ccSeVCM8.s 			page 89


 3261 0041 49       		.uleb128 0x49
 3262 0042 13       		.uleb128 0x13
 3263 0043 00       		.byte	0
 3264 0044 00       		.byte	0
 3265 0045 06       		.uleb128 0x6
 3266 0046 17       		.uleb128 0x17
 3267 0047 01       		.byte	0x1
 3268 0048 0B       		.uleb128 0xb
 3269 0049 0B       		.uleb128 0xb
 3270 004a 3A       		.uleb128 0x3a
 3271 004b 0B       		.uleb128 0xb
 3272 004c 3B       		.uleb128 0x3b
 3273 004d 0B       		.uleb128 0xb
 3274 004e 01       		.uleb128 0x1
 3275 004f 13       		.uleb128 0x13
 3276 0050 00       		.byte	0
 3277 0051 00       		.byte	0
 3278 0052 07       		.uleb128 0x7
 3279 0053 0D       		.uleb128 0xd
 3280 0054 00       		.byte	0
 3281 0055 03       		.uleb128 0x3
 3282 0056 0E       		.uleb128 0xe
 3283 0057 3A       		.uleb128 0x3a
 3284 0058 0B       		.uleb128 0xb
 3285 0059 3B       		.uleb128 0x3b
 3286 005a 0B       		.uleb128 0xb
 3287 005b 49       		.uleb128 0x49
 3288 005c 13       		.uleb128 0x13
 3289 005d 00       		.byte	0
 3290 005e 00       		.byte	0
 3291 005f 08       		.uleb128 0x8
 3292 0060 01       		.uleb128 0x1
 3293 0061 01       		.byte	0x1
 3294 0062 49       		.uleb128 0x49
 3295 0063 13       		.uleb128 0x13
 3296 0064 01       		.uleb128 0x1
 3297 0065 13       		.uleb128 0x13
 3298 0066 00       		.byte	0
 3299 0067 00       		.byte	0
 3300 0068 09       		.uleb128 0x9
 3301 0069 21       		.uleb128 0x21
 3302 006a 00       		.byte	0
 3303 006b 49       		.uleb128 0x49
 3304 006c 13       		.uleb128 0x13
 3305 006d 2F       		.uleb128 0x2f
 3306 006e 0B       		.uleb128 0xb
 3307 006f 00       		.byte	0
 3308 0070 00       		.byte	0
 3309 0071 0A       		.uleb128 0xa
 3310 0072 13       		.uleb128 0x13
 3311 0073 01       		.byte	0x1
 3312 0074 0B       		.uleb128 0xb
 3313 0075 0B       		.uleb128 0xb
 3314 0076 3A       		.uleb128 0x3a
 3315 0077 0B       		.uleb128 0xb
 3316 0078 3B       		.uleb128 0x3b
 3317 0079 0B       		.uleb128 0xb
ARM GAS  /tmp/ccSeVCM8.s 			page 90


 3318 007a 01       		.uleb128 0x1
 3319 007b 13       		.uleb128 0x13
 3320 007c 00       		.byte	0
 3321 007d 00       		.byte	0
 3322 007e 0B       		.uleb128 0xb
 3323 007f 0D       		.uleb128 0xd
 3324 0080 00       		.byte	0
 3325 0081 03       		.uleb128 0x3
 3326 0082 0E       		.uleb128 0xe
 3327 0083 3A       		.uleb128 0x3a
 3328 0084 0B       		.uleb128 0xb
 3329 0085 3B       		.uleb128 0x3b
 3330 0086 0B       		.uleb128 0xb
 3331 0087 49       		.uleb128 0x49
 3332 0088 13       		.uleb128 0x13
 3333 0089 38       		.uleb128 0x38
 3334 008a 0A       		.uleb128 0xa
 3335 008b 00       		.byte	0
 3336 008c 00       		.byte	0
 3337 008d 0C       		.uleb128 0xc
 3338 008e 0F       		.uleb128 0xf
 3339 008f 00       		.byte	0
 3340 0090 0B       		.uleb128 0xb
 3341 0091 0B       		.uleb128 0xb
 3342 0092 00       		.byte	0
 3343 0093 00       		.byte	0
 3344 0094 0D       		.uleb128 0xd
 3345 0095 13       		.uleb128 0x13
 3346 0096 01       		.byte	0x1
 3347 0097 03       		.uleb128 0x3
 3348 0098 0E       		.uleb128 0xe
 3349 0099 0B       		.uleb128 0xb
 3350 009a 0B       		.uleb128 0xb
 3351 009b 3A       		.uleb128 0x3a
 3352 009c 0B       		.uleb128 0xb
 3353 009d 3B       		.uleb128 0x3b
 3354 009e 0B       		.uleb128 0xb
 3355 009f 01       		.uleb128 0x1
 3356 00a0 13       		.uleb128 0x13
 3357 00a1 00       		.byte	0
 3358 00a2 00       		.byte	0
 3359 00a3 0E       		.uleb128 0xe
 3360 00a4 0D       		.uleb128 0xd
 3361 00a5 00       		.byte	0
 3362 00a6 03       		.uleb128 0x3
 3363 00a7 08       		.uleb128 0x8
 3364 00a8 3A       		.uleb128 0x3a
 3365 00a9 0B       		.uleb128 0xb
 3366 00aa 3B       		.uleb128 0x3b
 3367 00ab 0B       		.uleb128 0xb
 3368 00ac 49       		.uleb128 0x49
 3369 00ad 13       		.uleb128 0x13
 3370 00ae 38       		.uleb128 0x38
 3371 00af 0A       		.uleb128 0xa
 3372 00b0 00       		.byte	0
 3373 00b1 00       		.byte	0
 3374 00b2 0F       		.uleb128 0xf
ARM GAS  /tmp/ccSeVCM8.s 			page 91


 3375 00b3 0F       		.uleb128 0xf
 3376 00b4 00       		.byte	0
 3377 00b5 0B       		.uleb128 0xb
 3378 00b6 0B       		.uleb128 0xb
 3379 00b7 49       		.uleb128 0x49
 3380 00b8 13       		.uleb128 0x13
 3381 00b9 00       		.byte	0
 3382 00ba 00       		.byte	0
 3383 00bb 10       		.uleb128 0x10
 3384 00bc 13       		.uleb128 0x13
 3385 00bd 01       		.byte	0x1
 3386 00be 03       		.uleb128 0x3
 3387 00bf 0E       		.uleb128 0xe
 3388 00c0 0B       		.uleb128 0xb
 3389 00c1 05       		.uleb128 0x5
 3390 00c2 3A       		.uleb128 0x3a
 3391 00c3 0B       		.uleb128 0xb
 3392 00c4 3B       		.uleb128 0x3b
 3393 00c5 0B       		.uleb128 0xb
 3394 00c6 01       		.uleb128 0x1
 3395 00c7 13       		.uleb128 0x13
 3396 00c8 00       		.byte	0
 3397 00c9 00       		.byte	0
 3398 00ca 11       		.uleb128 0x11
 3399 00cb 15       		.uleb128 0x15
 3400 00cc 00       		.byte	0
 3401 00cd 27       		.uleb128 0x27
 3402 00ce 0C       		.uleb128 0xc
 3403 00cf 00       		.byte	0
 3404 00d0 00       		.byte	0
 3405 00d1 12       		.uleb128 0x12
 3406 00d2 13       		.uleb128 0x13
 3407 00d3 01       		.byte	0x1
 3408 00d4 03       		.uleb128 0x3
 3409 00d5 0E       		.uleb128 0xe
 3410 00d6 0B       		.uleb128 0xb
 3411 00d7 0B       		.uleb128 0xb
 3412 00d8 3A       		.uleb128 0x3a
 3413 00d9 0B       		.uleb128 0xb
 3414 00da 3B       		.uleb128 0x3b
 3415 00db 05       		.uleb128 0x5
 3416 00dc 01       		.uleb128 0x1
 3417 00dd 13       		.uleb128 0x13
 3418 00de 00       		.byte	0
 3419 00df 00       		.byte	0
 3420 00e0 13       		.uleb128 0x13
 3421 00e1 0D       		.uleb128 0xd
 3422 00e2 00       		.byte	0
 3423 00e3 03       		.uleb128 0x3
 3424 00e4 0E       		.uleb128 0xe
 3425 00e5 3A       		.uleb128 0x3a
 3426 00e6 0B       		.uleb128 0xb
 3427 00e7 3B       		.uleb128 0x3b
 3428 00e8 05       		.uleb128 0x5
 3429 00e9 49       		.uleb128 0x49
 3430 00ea 13       		.uleb128 0x13
 3431 00eb 38       		.uleb128 0x38
ARM GAS  /tmp/ccSeVCM8.s 			page 92


 3432 00ec 0A       		.uleb128 0xa
 3433 00ed 00       		.byte	0
 3434 00ee 00       		.byte	0
 3435 00ef 14       		.uleb128 0x14
 3436 00f0 0D       		.uleb128 0xd
 3437 00f1 00       		.byte	0
 3438 00f2 03       		.uleb128 0x3
 3439 00f3 08       		.uleb128 0x8
 3440 00f4 3A       		.uleb128 0x3a
 3441 00f5 0B       		.uleb128 0xb
 3442 00f6 3B       		.uleb128 0x3b
 3443 00f7 05       		.uleb128 0x5
 3444 00f8 49       		.uleb128 0x49
 3445 00f9 13       		.uleb128 0x13
 3446 00fa 38       		.uleb128 0x38
 3447 00fb 0A       		.uleb128 0xa
 3448 00fc 00       		.byte	0
 3449 00fd 00       		.byte	0
 3450 00fe 15       		.uleb128 0x15
 3451 00ff 15       		.uleb128 0x15
 3452 0100 01       		.byte	0x1
 3453 0101 27       		.uleb128 0x27
 3454 0102 0C       		.uleb128 0xc
 3455 0103 49       		.uleb128 0x49
 3456 0104 13       		.uleb128 0x13
 3457 0105 01       		.uleb128 0x1
 3458 0106 13       		.uleb128 0x13
 3459 0107 00       		.byte	0
 3460 0108 00       		.byte	0
 3461 0109 16       		.uleb128 0x16
 3462 010a 05       		.uleb128 0x5
 3463 010b 00       		.byte	0
 3464 010c 49       		.uleb128 0x49
 3465 010d 13       		.uleb128 0x13
 3466 010e 00       		.byte	0
 3467 010f 00       		.byte	0
 3468 0110 17       		.uleb128 0x17
 3469 0111 26       		.uleb128 0x26
 3470 0112 00       		.byte	0
 3471 0113 49       		.uleb128 0x49
 3472 0114 13       		.uleb128 0x13
 3473 0115 00       		.byte	0
 3474 0116 00       		.byte	0
 3475 0117 18       		.uleb128 0x18
 3476 0118 15       		.uleb128 0x15
 3477 0119 01       		.byte	0x1
 3478 011a 27       		.uleb128 0x27
 3479 011b 0C       		.uleb128 0xc
 3480 011c 01       		.uleb128 0x1
 3481 011d 13       		.uleb128 0x13
 3482 011e 00       		.byte	0
 3483 011f 00       		.byte	0
 3484 0120 19       		.uleb128 0x19
 3485 0121 35       		.uleb128 0x35
 3486 0122 00       		.byte	0
 3487 0123 49       		.uleb128 0x49
 3488 0124 13       		.uleb128 0x13
ARM GAS  /tmp/ccSeVCM8.s 			page 93


 3489 0125 00       		.byte	0
 3490 0126 00       		.byte	0
 3491 0127 1A       		.uleb128 0x1a
 3492 0128 04       		.uleb128 0x4
 3493 0129 01       		.byte	0x1
 3494 012a 03       		.uleb128 0x3
 3495 012b 0E       		.uleb128 0xe
 3496 012c 0B       		.uleb128 0xb
 3497 012d 0B       		.uleb128 0xb
 3498 012e 3A       		.uleb128 0x3a
 3499 012f 0B       		.uleb128 0xb
 3500 0130 3B       		.uleb128 0x3b
 3501 0131 0B       		.uleb128 0xb
 3502 0132 01       		.uleb128 0x1
 3503 0133 13       		.uleb128 0x13
 3504 0134 00       		.byte	0
 3505 0135 00       		.byte	0
 3506 0136 1B       		.uleb128 0x1b
 3507 0137 28       		.uleb128 0x28
 3508 0138 00       		.byte	0
 3509 0139 03       		.uleb128 0x3
 3510 013a 0E       		.uleb128 0xe
 3511 013b 1C       		.uleb128 0x1c
 3512 013c 0D       		.uleb128 0xd
 3513 013d 00       		.byte	0
 3514 013e 00       		.byte	0
 3515 013f 1C       		.uleb128 0x1c
 3516 0140 13       		.uleb128 0x13
 3517 0141 01       		.byte	0x1
 3518 0142 0B       		.uleb128 0xb
 3519 0143 05       		.uleb128 0x5
 3520 0144 3A       		.uleb128 0x3a
 3521 0145 0B       		.uleb128 0xb
 3522 0146 3B       		.uleb128 0x3b
 3523 0147 0B       		.uleb128 0xb
 3524 0148 01       		.uleb128 0x1
 3525 0149 13       		.uleb128 0x13
 3526 014a 00       		.byte	0
 3527 014b 00       		.byte	0
 3528 014c 1D       		.uleb128 0x1d
 3529 014d 21       		.uleb128 0x21
 3530 014e 00       		.byte	0
 3531 014f 49       		.uleb128 0x49
 3532 0150 13       		.uleb128 0x13
 3533 0151 2F       		.uleb128 0x2f
 3534 0152 05       		.uleb128 0x5
 3535 0153 00       		.byte	0
 3536 0154 00       		.byte	0
 3537 0155 1E       		.uleb128 0x1e
 3538 0156 13       		.uleb128 0x13
 3539 0157 01       		.byte	0x1
 3540 0158 0B       		.uleb128 0xb
 3541 0159 05       		.uleb128 0x5
 3542 015a 3A       		.uleb128 0x3a
 3543 015b 0B       		.uleb128 0xb
 3544 015c 3B       		.uleb128 0x3b
 3545 015d 05       		.uleb128 0x5
ARM GAS  /tmp/ccSeVCM8.s 			page 94


 3546 015e 01       		.uleb128 0x1
 3547 015f 13       		.uleb128 0x13
 3548 0160 00       		.byte	0
 3549 0161 00       		.byte	0
 3550 0162 1F       		.uleb128 0x1f
 3551 0163 16       		.uleb128 0x16
 3552 0164 00       		.byte	0
 3553 0165 03       		.uleb128 0x3
 3554 0166 08       		.uleb128 0x8
 3555 0167 3A       		.uleb128 0x3a
 3556 0168 0B       		.uleb128 0xb
 3557 0169 3B       		.uleb128 0x3b
 3558 016a 05       		.uleb128 0x5
 3559 016b 49       		.uleb128 0x49
 3560 016c 13       		.uleb128 0x13
 3561 016d 00       		.byte	0
 3562 016e 00       		.byte	0
 3563 016f 20       		.uleb128 0x20
 3564 0170 13       		.uleb128 0x13
 3565 0171 01       		.byte	0x1
 3566 0172 0B       		.uleb128 0xb
 3567 0173 0B       		.uleb128 0xb
 3568 0174 3A       		.uleb128 0x3a
 3569 0175 0B       		.uleb128 0xb
 3570 0176 3B       		.uleb128 0x3b
 3571 0177 05       		.uleb128 0x5
 3572 0178 01       		.uleb128 0x1
 3573 0179 13       		.uleb128 0x13
 3574 017a 00       		.byte	0
 3575 017b 00       		.byte	0
 3576 017c 21       		.uleb128 0x21
 3577 017d 04       		.uleb128 0x4
 3578 017e 01       		.byte	0x1
 3579 017f 0B       		.uleb128 0xb
 3580 0180 0B       		.uleb128 0xb
 3581 0181 3A       		.uleb128 0x3a
 3582 0182 0B       		.uleb128 0xb
 3583 0183 3B       		.uleb128 0x3b
 3584 0184 0B       		.uleb128 0xb
 3585 0185 01       		.uleb128 0x1
 3586 0186 13       		.uleb128 0x13
 3587 0187 00       		.byte	0
 3588 0188 00       		.byte	0
 3589 0189 22       		.uleb128 0x22
 3590 018a 28       		.uleb128 0x28
 3591 018b 00       		.byte	0
 3592 018c 03       		.uleb128 0x3
 3593 018d 08       		.uleb128 0x8
 3594 018e 1C       		.uleb128 0x1c
 3595 018f 0D       		.uleb128 0xd
 3596 0190 00       		.byte	0
 3597 0191 00       		.byte	0
 3598 0192 23       		.uleb128 0x23
 3599 0193 2E       		.uleb128 0x2e
 3600 0194 01       		.byte	0x1
 3601 0195 03       		.uleb128 0x3
 3602 0196 0E       		.uleb128 0xe
ARM GAS  /tmp/ccSeVCM8.s 			page 95


 3603 0197 3A       		.uleb128 0x3a
 3604 0198 0B       		.uleb128 0xb
 3605 0199 3B       		.uleb128 0x3b
 3606 019a 05       		.uleb128 0x5
 3607 019b 27       		.uleb128 0x27
 3608 019c 0C       		.uleb128 0xc
 3609 019d 11       		.uleb128 0x11
 3610 019e 01       		.uleb128 0x1
 3611 019f 12       		.uleb128 0x12
 3612 01a0 01       		.uleb128 0x1
 3613 01a1 40       		.uleb128 0x40
 3614 01a2 06       		.uleb128 0x6
 3615 01a3 01       		.uleb128 0x1
 3616 01a4 13       		.uleb128 0x13
 3617 01a5 00       		.byte	0
 3618 01a6 00       		.byte	0
 3619 01a7 24       		.uleb128 0x24
 3620 01a8 05       		.uleb128 0x5
 3621 01a9 00       		.byte	0
 3622 01aa 03       		.uleb128 0x3
 3623 01ab 0E       		.uleb128 0xe
 3624 01ac 3A       		.uleb128 0x3a
 3625 01ad 0B       		.uleb128 0xb
 3626 01ae 3B       		.uleb128 0x3b
 3627 01af 05       		.uleb128 0x5
 3628 01b0 49       		.uleb128 0x49
 3629 01b1 13       		.uleb128 0x13
 3630 01b2 02       		.uleb128 0x2
 3631 01b3 0A       		.uleb128 0xa
 3632 01b4 00       		.byte	0
 3633 01b5 00       		.byte	0
 3634 01b6 25       		.uleb128 0x25
 3635 01b7 2E       		.uleb128 0x2e
 3636 01b8 01       		.byte	0x1
 3637 01b9 3F       		.uleb128 0x3f
 3638 01ba 0C       		.uleb128 0xc
 3639 01bb 03       		.uleb128 0x3
 3640 01bc 0E       		.uleb128 0xe
 3641 01bd 3A       		.uleb128 0x3a
 3642 01be 0B       		.uleb128 0xb
 3643 01bf 3B       		.uleb128 0x3b
 3644 01c0 0B       		.uleb128 0xb
 3645 01c1 49       		.uleb128 0x49
 3646 01c2 13       		.uleb128 0x13
 3647 01c3 11       		.uleb128 0x11
 3648 01c4 01       		.uleb128 0x1
 3649 01c5 12       		.uleb128 0x12
 3650 01c6 01       		.uleb128 0x1
 3651 01c7 40       		.uleb128 0x40
 3652 01c8 06       		.uleb128 0x6
 3653 01c9 01       		.uleb128 0x1
 3654 01ca 13       		.uleb128 0x13
 3655 01cb 00       		.byte	0
 3656 01cc 00       		.byte	0
 3657 01cd 26       		.uleb128 0x26
 3658 01ce 34       		.uleb128 0x34
 3659 01cf 00       		.byte	0
ARM GAS  /tmp/ccSeVCM8.s 			page 96


 3660 01d0 03       		.uleb128 0x3
 3661 01d1 0E       		.uleb128 0xe
 3662 01d2 3A       		.uleb128 0x3a
 3663 01d3 0B       		.uleb128 0xb
 3664 01d4 3B       		.uleb128 0x3b
 3665 01d5 0B       		.uleb128 0xb
 3666 01d6 49       		.uleb128 0x49
 3667 01d7 13       		.uleb128 0x13
 3668 01d8 02       		.uleb128 0x2
 3669 01d9 0A       		.uleb128 0xa
 3670 01da 00       		.byte	0
 3671 01db 00       		.byte	0
 3672 01dc 27       		.uleb128 0x27
 3673 01dd 34       		.uleb128 0x34
 3674 01de 00       		.byte	0
 3675 01df 03       		.uleb128 0x3
 3676 01e0 08       		.uleb128 0x8
 3677 01e1 3A       		.uleb128 0x3a
 3678 01e2 0B       		.uleb128 0xb
 3679 01e3 3B       		.uleb128 0x3b
 3680 01e4 0B       		.uleb128 0xb
 3681 01e5 49       		.uleb128 0x49
 3682 01e6 13       		.uleb128 0x13
 3683 01e7 02       		.uleb128 0x2
 3684 01e8 0A       		.uleb128 0xa
 3685 01e9 00       		.byte	0
 3686 01ea 00       		.byte	0
 3687 01eb 28       		.uleb128 0x28
 3688 01ec 2E       		.uleb128 0x2e
 3689 01ed 00       		.byte	0
 3690 01ee 3F       		.uleb128 0x3f
 3691 01ef 0C       		.uleb128 0xc
 3692 01f0 03       		.uleb128 0x3
 3693 01f1 0E       		.uleb128 0xe
 3694 01f2 3A       		.uleb128 0x3a
 3695 01f3 0B       		.uleb128 0xb
 3696 01f4 3B       		.uleb128 0x3b
 3697 01f5 0B       		.uleb128 0xb
 3698 01f6 27       		.uleb128 0x27
 3699 01f7 0C       		.uleb128 0xc
 3700 01f8 11       		.uleb128 0x11
 3701 01f9 01       		.uleb128 0x1
 3702 01fa 12       		.uleb128 0x12
 3703 01fb 01       		.uleb128 0x1
 3704 01fc 40       		.uleb128 0x40
 3705 01fd 06       		.uleb128 0x6
 3706 01fe 00       		.byte	0
 3707 01ff 00       		.byte	0
 3708 0200 29       		.uleb128 0x29
 3709 0201 2E       		.uleb128 0x2e
 3710 0202 01       		.byte	0x1
 3711 0203 3F       		.uleb128 0x3f
 3712 0204 0C       		.uleb128 0xc
 3713 0205 03       		.uleb128 0x3
 3714 0206 0E       		.uleb128 0xe
 3715 0207 3A       		.uleb128 0x3a
 3716 0208 0B       		.uleb128 0xb
ARM GAS  /tmp/ccSeVCM8.s 			page 97


 3717 0209 3B       		.uleb128 0x3b
 3718 020a 0B       		.uleb128 0xb
 3719 020b 11       		.uleb128 0x11
 3720 020c 01       		.uleb128 0x1
 3721 020d 12       		.uleb128 0x12
 3722 020e 01       		.uleb128 0x1
 3723 020f 40       		.uleb128 0x40
 3724 0210 06       		.uleb128 0x6
 3725 0211 01       		.uleb128 0x1
 3726 0212 13       		.uleb128 0x13
 3727 0213 00       		.byte	0
 3728 0214 00       		.byte	0
 3729 0215 2A       		.uleb128 0x2a
 3730 0216 34       		.uleb128 0x34
 3731 0217 00       		.byte	0
 3732 0218 03       		.uleb128 0x3
 3733 0219 0E       		.uleb128 0xe
 3734 021a 3A       		.uleb128 0x3a
 3735 021b 0B       		.uleb128 0xb
 3736 021c 3B       		.uleb128 0x3b
 3737 021d 05       		.uleb128 0x5
 3738 021e 49       		.uleb128 0x49
 3739 021f 13       		.uleb128 0x13
 3740 0220 3F       		.uleb128 0x3f
 3741 0221 0C       		.uleb128 0xc
 3742 0222 3C       		.uleb128 0x3c
 3743 0223 0C       		.uleb128 0xc
 3744 0224 00       		.byte	0
 3745 0225 00       		.byte	0
 3746 0226 2B       		.uleb128 0x2b
 3747 0227 34       		.uleb128 0x34
 3748 0228 00       		.byte	0
 3749 0229 03       		.uleb128 0x3
 3750 022a 0E       		.uleb128 0xe
 3751 022b 3A       		.uleb128 0x3a
 3752 022c 0B       		.uleb128 0xb
 3753 022d 3B       		.uleb128 0x3b
 3754 022e 0B       		.uleb128 0xb
 3755 022f 49       		.uleb128 0x49
 3756 0230 13       		.uleb128 0x13
 3757 0231 3F       		.uleb128 0x3f
 3758 0232 0C       		.uleb128 0xc
 3759 0233 3C       		.uleb128 0x3c
 3760 0234 0C       		.uleb128 0xc
 3761 0235 00       		.byte	0
 3762 0236 00       		.byte	0
 3763 0237 2C       		.uleb128 0x2c
 3764 0238 34       		.uleb128 0x34
 3765 0239 00       		.byte	0
 3766 023a 03       		.uleb128 0x3
 3767 023b 0E       		.uleb128 0xe
 3768 023c 3A       		.uleb128 0x3a
 3769 023d 0B       		.uleb128 0xb
 3770 023e 3B       		.uleb128 0x3b
 3771 023f 0B       		.uleb128 0xb
 3772 0240 49       		.uleb128 0x49
 3773 0241 13       		.uleb128 0x13
ARM GAS  /tmp/ccSeVCM8.s 			page 98


 3774 0242 3F       		.uleb128 0x3f
 3775 0243 0C       		.uleb128 0xc
 3776 0244 02       		.uleb128 0x2
 3777 0245 0A       		.uleb128 0xa
 3778 0246 00       		.byte	0
 3779 0247 00       		.byte	0
 3780 0248 00       		.byte	0
 3781              		.section	.debug_loc,"",%progbits
 3782              	.Ldebug_loc0:
 3783              	.LLST0:
 3784 0000 00000000 		.4byte	.LFB14
 3785 0004 02000000 		.4byte	.LCFI0
 3786 0008 0200     		.2byte	0x2
 3787 000a 7D       		.byte	0x7d
 3788 000b 00       		.sleb128 0
 3789 000c 02000000 		.4byte	.LCFI0
 3790 0010 04000000 		.4byte	.LCFI1
 3791 0014 0200     		.2byte	0x2
 3792 0016 7D       		.byte	0x7d
 3793 0017 04       		.sleb128 4
 3794 0018 04000000 		.4byte	.LCFI1
 3795 001c 06000000 		.4byte	.LCFI2
 3796 0020 0200     		.2byte	0x2
 3797 0022 7D       		.byte	0x7d
 3798 0023 10       		.sleb128 16
 3799 0024 06000000 		.4byte	.LCFI2
 3800 0028 36000000 		.4byte	.LFE14
 3801 002c 0200     		.2byte	0x2
 3802 002e 77       		.byte	0x77
 3803 002f 10       		.sleb128 16
 3804 0030 00000000 		.4byte	0
 3805 0034 00000000 		.4byte	0
 3806              	.LLST1:
 3807 0038 00000000 		.4byte	.LFB35
 3808 003c 02000000 		.4byte	.LCFI3
 3809 0040 0200     		.2byte	0x2
 3810 0042 7D       		.byte	0x7d
 3811 0043 00       		.sleb128 0
 3812 0044 02000000 		.4byte	.LCFI3
 3813 0048 04000000 		.4byte	.LCFI4
 3814 004c 0200     		.2byte	0x2
 3815 004e 7D       		.byte	0x7d
 3816 004f 0C       		.sleb128 12
 3817 0050 04000000 		.4byte	.LCFI4
 3818 0054 06000000 		.4byte	.LCFI5
 3819 0058 0300     		.2byte	0x3
 3820 005a 7D       		.byte	0x7d
 3821 005b C000     		.sleb128 64
 3822 005d 06000000 		.4byte	.LCFI5
 3823 0061 AE040000 		.4byte	.LFE35
 3824 0065 0200     		.2byte	0x2
 3825 0067 77       		.byte	0x77
 3826 0068 38       		.sleb128 56
 3827 0069 00000000 		.4byte	0
 3828 006d 00000000 		.4byte	0
 3829              	.LLST2:
 3830 0071 00000000 		.4byte	.LFB36
ARM GAS  /tmp/ccSeVCM8.s 			page 99


 3831 0075 02000000 		.4byte	.LCFI6
 3832 0079 0200     		.2byte	0x2
 3833 007b 7D       		.byte	0x7d
 3834 007c 00       		.sleb128 0
 3835 007d 02000000 		.4byte	.LCFI6
 3836 0081 04000000 		.4byte	.LCFI7
 3837 0085 0200     		.2byte	0x2
 3838 0087 7D       		.byte	0x7d
 3839 0088 04       		.sleb128 4
 3840 0089 04000000 		.4byte	.LCFI7
 3841 008d 0A000000 		.4byte	.LFE36
 3842 0091 0200     		.2byte	0x2
 3843 0093 77       		.byte	0x77
 3844 0094 04       		.sleb128 4
 3845 0095 00000000 		.4byte	0
 3846 0099 00000000 		.4byte	0
 3847              	.LLST3:
 3848 009d 00000000 		.4byte	.LFB37
 3849 00a1 02000000 		.4byte	.LCFI8
 3850 00a5 0200     		.2byte	0x2
 3851 00a7 7D       		.byte	0x7d
 3852 00a8 00       		.sleb128 0
 3853 00a9 02000000 		.4byte	.LCFI8
 3854 00ad 04000000 		.4byte	.LCFI9
 3855 00b1 0200     		.2byte	0x2
 3856 00b3 7D       		.byte	0x7d
 3857 00b4 0C       		.sleb128 12
 3858 00b5 04000000 		.4byte	.LCFI9
 3859 00b9 06000000 		.4byte	.LCFI10
 3860 00bd 0200     		.2byte	0x2
 3861 00bf 7D       		.byte	0x7d
 3862 00c0 20       		.sleb128 32
 3863 00c1 06000000 		.4byte	.LCFI10
 3864 00c5 A0000000 		.4byte	.LFE37
 3865 00c9 0200     		.2byte	0x2
 3866 00cb 77       		.byte	0x77
 3867 00cc 18       		.sleb128 24
 3868 00cd 00000000 		.4byte	0
 3869 00d1 00000000 		.4byte	0
 3870              		.section	.debug_aranges,"",%progbits
 3871 0000 34000000 		.4byte	0x34
 3872 0004 0200     		.2byte	0x2
 3873 0006 00000000 		.4byte	.Ldebug_info0
 3874 000a 04       		.byte	0x4
 3875 000b 00       		.byte	0
 3876 000c 0000     		.2byte	0
 3877 000e 0000     		.2byte	0
 3878 0010 00000000 		.4byte	.LFB14
 3879 0014 36000000 		.4byte	.LFE14-.LFB14
 3880 0018 00000000 		.4byte	.LFB35
 3881 001c AE040000 		.4byte	.LFE35-.LFB35
 3882 0020 00000000 		.4byte	.LFB36
 3883 0024 0A000000 		.4byte	.LFE36-.LFB36
 3884 0028 00000000 		.4byte	.LFB37
 3885 002c A0000000 		.4byte	.LFE37-.LFB37
 3886 0030 00000000 		.4byte	0
 3887 0034 00000000 		.4byte	0
ARM GAS  /tmp/ccSeVCM8.s 			page 100


 3888              		.section	.debug_ranges,"",%progbits
 3889              	.Ldebug_ranges0:
 3890 0000 00000000 		.4byte	.LFB14
 3891 0004 36000000 		.4byte	.LFE14
 3892 0008 00000000 		.4byte	.LFB35
 3893 000c AE040000 		.4byte	.LFE35
 3894 0010 00000000 		.4byte	.LFB36
 3895 0014 0A000000 		.4byte	.LFE36
 3896 0018 00000000 		.4byte	.LFB37
 3897 001c A0000000 		.4byte	.LFE37
 3898 0020 00000000 		.4byte	0
 3899 0024 00000000 		.4byte	0
 3900              		.section	.debug_line,"",%progbits
 3901              	.Ldebug_line0:
 3902 0000 69020000 		.section	.debug_str,"MS",%progbits,1
 3902      02009201 
 3902      00000201 
 3902      FB0E0D00 
 3902      01010101 
 3903              	.LASF160:
 3904 0000 52534552 		.ascii	"RSERVED1\000"
 3904      56454431 
 3904      00
 3905              	.LASF250:
 3906 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 3906      5F456E61 
 3906      626C6549 
 3906      525100
 3907              	.LASF146:
 3908 0018 5443325F 		.ascii	"TC2_IRQn\000"
 3908      4952516E 
 3908      00
 3909              	.LASF193:
 3910 0021 504D435F 		.ascii	"PMC_FSPR\000"
 3910      46535052 
 3910      00
 3911              	.LASF176:
 3912 002a 504D435F 		.ascii	"PMC_PCSR0\000"
 3912      50435352 
 3912      3000
 3913              	.LASF14:
 3914 0034 5F5F7661 		.ascii	"__value\000"
 3914      6C756500 
 3915              	.LASF66:
 3916 003c 5F5F7366 		.ascii	"__sf\000"
 3916      00
 3917              	.LASF75:
 3918 0041 5F726561 		.ascii	"_read\000"
 3918      6400
 3919              	.LASF169:
 3920 0047 4E564943 		.ascii	"NVIC_Type\000"
 3920      5F547970 
 3920      6500
 3921              	.LASF181:
 3922 0051 434B4752 		.ascii	"CKGR_PLLBR\000"
 3922      5F504C4C 
 3922      425200
ARM GAS  /tmp/ccSeVCM8.s 			page 101


 3923              	.LASF76:
 3924 005c 5F777269 		.ascii	"_write\000"
 3924      746500
 3925              	.LASF206:
 3926 0063 54435F53 		.ascii	"TC_SMMR\000"
 3926      4D4D5200 
 3927              	.LASF62:
 3928 006b 5F617363 		.ascii	"_asctime_buf\000"
 3928      74696D65 
 3928      5F627566 
 3928      00
 3929              	.LASF58:
 3930 0078 5F637674 		.ascii	"_cvtlen\000"
 3930      6C656E00 
 3931              	.LASF184:
 3932 0080 504D435F 		.ascii	"PMC_USB\000"
 3932      55534200 
 3933              	.LASF24:
 3934 0088 5F5F746D 		.ascii	"__tm\000"
 3934      00
 3935              	.LASF112:
 3936 008d 5F776373 		.ascii	"_wcsrtombs_state\000"
 3936      72746F6D 
 3936      62735F73 
 3936      74617465 
 3936      00
 3937              	.LASF80:
 3938 009e 5F6E6275 		.ascii	"_nbuf\000"
 3938      6600
 3939              	.LASF25:
 3940 00a4 5F5F746D 		.ascii	"__tm_sec\000"
 3940      5F736563 
 3940      00
 3941              	.LASF106:
 3942 00ad 5F6C3634 		.ascii	"_l64a_buf\000"
 3942      615F6275 
 3942      6600
 3943              	.LASF83:
 3944 00b7 5F6C6F63 		.ascii	"_lock\000"
 3944      6B00
 3945              	.LASF223:
 3946 00bd 54435F46 		.ascii	"TC_FMR\000"
 3946      4D5200
 3947              	.LASF198:
 3948 00c4 52657365 		.ascii	"Reserved7\000"
 3948      72766564 
 3948      3700
 3949              	.LASF93:
 3950 00ce 5F6D756C 		.ascii	"_mult\000"
 3950      7400
 3951              	.LASF125:
 3952 00d4 52535443 		.ascii	"RSTC_IRQn\000"
 3952      5F495251 
 3952      6E00
 3953              	.LASF163:
 3954 00de 49435052 		.ascii	"ICPR\000"
 3954      00
ARM GAS  /tmp/ccSeVCM8.s 			page 102


 3955              	.LASF221:
 3956 00e3 54435F51 		.ascii	"TC_QIMR\000"
 3956      494D5200 
 3957              	.LASF11:
 3958 00eb 5F5F7763 		.ascii	"__wch\000"
 3958      6800
 3959              	.LASF216:
 3960 00f1 54435F43 		.ascii	"TC_CHANNEL\000"
 3960      48414E4E 
 3960      454C00
 3961              	.LASF71:
 3962 00fc 5F66696C 		.ascii	"_file\000"
 3962      6500
 3963              	.LASF34:
 3964 0102 5F6F6E5F 		.ascii	"_on_exit_args\000"
 3964      65786974 
 3964      5F617267 
 3964      7300
 3965              	.LASF238:
 3966 0110 74726973 		.ascii	"tristate\000"
 3966      74617465 
 3966      00
 3967              	.LASF189:
 3968 0119 504D435F 		.ascii	"PMC_IDR\000"
 3968      49445200 
 3969              	.LASF153:
 3970 0121 43524343 		.ascii	"CRCCU_IRQn\000"
 3970      555F4952 
 3970      516E00
 3971              	.LASF230:
 3972 012c 52414D50 		.ascii	"RAMP\000"
 3972      00
 3973              	.LASF204:
 3974 0131 54435F43 		.ascii	"TC_CCR\000"
 3974      435200
 3975              	.LASF108:
 3976 0138 5F6D6272 		.ascii	"_mbrlen_state\000"
 3976      6C656E5F 
 3976      73746174 
 3976      6500
 3977              	.LASF7:
 3978 0146 6C6F6E67 		.ascii	"long int\000"
 3978      20696E74 
 3978      00
 3979              	.LASF243:
 3980 014f 5F696D70 		.ascii	"_impure_ptr\000"
 3980      7572655F 
 3980      70747200 
 3981              	.LASF98:
 3982 015b 5F726573 		.ascii	"_result_k\000"
 3982      756C745F 
 3982      6B00
 3983              	.LASF45:
 3984 0165 5F73697A 		.ascii	"_size\000"
 3984      6500
 3985              	.LASF61:
 3986 016b 5F6C6F63 		.ascii	"_localtime_buf\000"
ARM GAS  /tmp/ccSeVCM8.s 			page 103


 3986      616C7469 
 3986      6D655F62 
 3986      756600
 3987              	.LASF174:
 3988 017a 504D435F 		.ascii	"PMC_PCER0\000"
 3988      50434552 
 3988      3000
 3989              	.LASF199:
 3990 0184 504D435F 		.ascii	"PMC_PCER1\000"
 3990      50434552 
 3990      3100
 3991              	.LASF251:
 3992 018e 6D61696E 		.ascii	"main\000"
 3992      00
 3993              	.LASF249:
 3994 0193 4952516E 		.ascii	"IRQn\000"
 3994      00
 3995              	.LASF149:
 3996 0198 5443355F 		.ascii	"TC5_IRQn\000"
 3996      4952516E 
 3996      00
 3997              	.LASF178:
 3998 01a1 434B4752 		.ascii	"CKGR_MOR\000"
 3998      5F4D4F52 
 3998      00
 3999              	.LASF29:
 4000 01aa 5F5F746D 		.ascii	"__tm_mon\000"
 4000      5F6D6F6E 
 4000      00
 4001              	.LASF101:
 4002 01b3 5F6D6973 		.ascii	"_misc_reent\000"
 4002      635F7265 
 4002      656E7400 
 4003              	.LASF123:
 4004 01bf 53797354 		.ascii	"SysTick_IRQn\000"
 4004      69636B5F 
 4004      4952516E 
 4004      00
 4005              	.LASF54:
 4006 01cc 5F637572 		.ascii	"_current_category\000"
 4006      72656E74 
 4006      5F636174 
 4006      65676F72 
 4006      7900
 4007              	.LASF0:
 4008 01de 7369676E 		.ascii	"signed char\000"
 4008      65642063 
 4008      68617200 
 4009              	.LASF113:
 4010 01ea 75696E74 		.ascii	"uint8_t\000"
 4010      385F7400 
 4011              	.LASF215:
 4012 01f2 54634368 		.ascii	"TcChannel\000"
 4012      616E6E65 
 4012      6C00
 4013              	.LASF158:
 4014 01fc 52455345 		.ascii	"RESERVED0\000"
ARM GAS  /tmp/ccSeVCM8.s 			page 104


 4014      52564544 
 4014      3000
 4015              	.LASF1:
 4016 0206 756E7369 		.ascii	"unsigned char\000"
 4016      676E6564 
 4016      20636861 
 4016      7200
 4017              	.LASF164:
 4018 0214 52455345 		.ascii	"RESERVED3\000"
 4018      52564544 
 4018      3300
 4019              	.LASF166:
 4020 021e 52455345 		.ascii	"RESERVED4\000"
 4020      52564544 
 4020      3400
 4021              	.LASF167:
 4022 0228 52455345 		.ascii	"RESERVED5\000"
 4022      52564544 
 4022      3500
 4023              	.LASF165:
 4024 0232 49414252 		.ascii	"IABR\000"
 4024      00
 4025              	.LASF233:
 4026 0237 6374726C 		.ascii	"ctrl\000"
 4026      00
 4027              	.LASF46:
 4028 023c 5F726565 		.ascii	"_reent\000"
 4028      6E7400
 4029              	.LASF225:
 4030 0243 5744545F 		.ascii	"WDT_CR\000"
 4030      435200
 4031              	.LASF162:
 4032 024a 52455345 		.ascii	"RESERVED2\000"
 4032      52564544 
 4032      3200
 4033              	.LASF119:
 4034 0254 55736167 		.ascii	"UsageFault_IRQn\000"
 4034      65466175 
 4034      6C745F49 
 4034      52516E00 
 4035              	.LASF208:
 4036 0264 54435F52 		.ascii	"TC_RA\000"
 4036      4100
 4037              	.LASF209:
 4038 026a 54435F52 		.ascii	"TC_RB\000"
 4038      4200
 4039              	.LASF210:
 4040 0270 54435F52 		.ascii	"TC_RC\000"
 4040      4300
 4041              	.LASF86:
 4042 0276 63686172 		.ascii	"char\000"
 4042      00
 4043              	.LASF41:
 4044 027b 5F666E73 		.ascii	"_fns\000"
 4044      00
 4045              	.LASF237:
 4046 0280 6F757470 		.ascii	"output\000"
ARM GAS  /tmp/ccSeVCM8.s 			page 105


 4046      757400
 4047              	.LASF218:
 4048 0287 54435F42 		.ascii	"TC_BMR\000"
 4048      4D5200
 4049              	.LASF78:
 4050 028e 5F636C6F 		.ascii	"_close\000"
 4050      736500
 4051              	.LASF133:
 4052 0295 534D435F 		.ascii	"SMC_IRQn\000"
 4052      4952516E 
 4052      00
 4053              	.LASF222:
 4054 029e 54435F51 		.ascii	"TC_QISR\000"
 4054      49535200 
 4055              	.LASF48:
 4056 02a6 5F737464 		.ascii	"_stdin\000"
 4056      696E00
 4057              	.LASF235:
 4058 02ad 72536C6F 		.ascii	"rSlope\000"
 4058      706500
 4059              	.LASF182:
 4060 02b4 504D435F 		.ascii	"PMC_MCKR\000"
 4060      4D434B52 
 4060      00
 4061              	.LASF211:
 4062 02bd 54435F53 		.ascii	"TC_SR\000"
 4062      5200
 4063              	.LASF203:
 4064 02c3 504D435F 		.ascii	"PMC_OCR\000"
 4064      4F435200 
 4065              	.LASF152:
 4066 02cb 50574D5F 		.ascii	"PWM_IRQn\000"
 4066      4952516E 
 4066      00
 4067              	.LASF161:
 4068 02d4 49535052 		.ascii	"ISPR\000"
 4068      00
 4069              	.LASF240:
 4070 02d9 696E7075 		.ascii	"input\000"
 4070      7400
 4071              	.LASF168:
 4072 02df 53544952 		.ascii	"STIR\000"
 4072      00
 4073              	.LASF245:
 4074 02e4 6C6F6F70 		.ascii	"loops\000"
 4074      7300
 4075              	.LASF154:
 4076 02ea 4143435F 		.ascii	"ACC_IRQn\000"
 4076      4952516E 
 4076      00
 4077              	.LASF74:
 4078 02f3 5F636F6F 		.ascii	"_cookie\000"
 4078      6B696500 
 4079              	.LASF22:
 4080 02fb 5F776473 		.ascii	"_wds\000"
 4080      00
 4081              	.LASF129:
ARM GAS  /tmp/ccSeVCM8.s 			page 106


 4082 0300 504D435F 		.ascii	"PMC_IRQn\000"
 4082      4952516E 
 4082      00
 4083              	.LASF130:
 4084 0309 4546435F 		.ascii	"EFC_IRQn\000"
 4084      4952516E 
 4084      00
 4085              	.LASF63:
 4086 0312 5F736967 		.ascii	"_sig_func\000"
 4086      5F66756E 
 4086      6300
 4087              	.LASF82:
 4088 031c 5F6F6666 		.ascii	"_offset\000"
 4088      73657400 
 4089              	.LASF59:
 4090 0324 5F637674 		.ascii	"_cvtbuf\000"
 4090      62756600 
 4091              	.LASF124:
 4092 032c 53555043 		.ascii	"SUPC_IRQn\000"
 4092      5F495251 
 4092      6E00
 4093              	.LASF213:
 4094 0336 54435F49 		.ascii	"TC_IDR\000"
 4094      445200
 4095              	.LASF145:
 4096 033d 5443315F 		.ascii	"TC1_IRQn\000"
 4096      4952516E 
 4096      00
 4097              	.LASF136:
 4098 0346 50494F43 		.ascii	"PIOC_IRQn\000"
 4098      5F495251 
 4098      6E00
 4099              	.LASF202:
 4100 0350 52657365 		.ascii	"Reserved8\000"
 4100      72766564 
 4100      3800
 4101              	.LASF127:
 4102 035a 5254545F 		.ascii	"RTT_IRQn\000"
 4102      4952516E 
 4102      00
 4103              	.LASF155:
 4104 0363 5544505F 		.ascii	"UDP_IRQn\000"
 4104      4952516E 
 4104      00
 4105              	.LASF151:
 4106 036c 44414343 		.ascii	"DACC_IRQn\000"
 4106      5F495251 
 4106      6E00
 4107              	.LASF116:
 4108 0376 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 4108      61736B61 
 4108      626C6549 
 4108      6E745F49 
 4108      52516E00 
 4109              	.LASF99:
 4110 038a 5F703573 		.ascii	"_p5s\000"
 4110      00
ARM GAS  /tmp/ccSeVCM8.s 			page 107


 4111              	.LASF18:
 4112 038f 6C6F6E67 		.ascii	"long unsigned int\000"
 4112      20756E73 
 4112      69676E65 
 4112      6420696E 
 4112      7400
 4113              	.LASF117:
 4114 03a1 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 4114      72794D61 
 4114      6E616765 
 4114      6D656E74 
 4114      5F495251 
 4115              	.LASF212:
 4116 03b7 54435F49 		.ascii	"TC_IER\000"
 4116      455200
 4117              	.LASF69:
 4118 03be 5F5F7346 		.ascii	"__sFILE\000"
 4118      494C4500 
 4119              	.LASF53:
 4120 03c6 5F5F7364 		.ascii	"__sdidinit\000"
 4120      6964696E 
 4120      697400
 4121              	.LASF85:
 4122 03d1 5F666C61 		.ascii	"_flags2\000"
 4122      67733200 
 4123              	.LASF156:
 4124 03d9 4952516E 		.ascii	"IRQn_Type\000"
 4124      5F547970 
 4124      6500
 4125              	.LASF191:
 4126 03e3 504D435F 		.ascii	"PMC_IMR\000"
 4126      494D5200 
 4127              	.LASF241:
 4128 03eb 6C696E65 		.ascii	"line\000"
 4128      00
 4129              	.LASF8:
 4130 03f0 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 4130      4B5F5245 
 4130      43555253 
 4130      4956455F 
 4130      5400
 4131              	.LASF47:
 4132 0402 5F657272 		.ascii	"_errno\000"
 4132      6E6F00
 4133              	.LASF172:
 4134 0409 504D435F 		.ascii	"PMC_SCSR\000"
 4134      53435352 
 4134      00
 4135              	.LASF68:
 4136 0412 5F736967 		.ascii	"_signal_buf\000"
 4136      6E616C5F 
 4136      62756600 
 4137              	.LASF239:
 4138 041e 74726970 		.ascii	"trip\000"
 4138      00
 4139              	.LASF128:
 4140 0423 5744545F 		.ascii	"WDT_IRQn\000"
ARM GAS  /tmp/ccSeVCM8.s 			page 108


 4140      4952516E 
 4140      00
 4141              	.LASF23:
 4142 042c 5F426967 		.ascii	"_Bigint\000"
 4142      696E7400 
 4143              	.LASF20:
 4144 0434 5F6D6178 		.ascii	"_maxwds\000"
 4144      77647300 
 4145              	.LASF56:
 4146 043c 5F5F636C 		.ascii	"__cleanup\000"
 4146      65616E75 
 4146      7000
 4147              	.LASF118:
 4148 0446 42757346 		.ascii	"BusFault_IRQn\000"
 4148      61756C74 
 4148      5F495251 
 4148      6E00
 4149              	.LASF205:
 4150 0454 54435F43 		.ascii	"TC_CMR\000"
 4150      4D5200
 4151              	.LASF64:
 4152 045b 5F617465 		.ascii	"_atexit0\000"
 4152      78697430 
 4152      00
 4153              	.LASF52:
 4154 0464 5F656D65 		.ascii	"_emergency\000"
 4154      7267656E 
 4154      637900
 4155              	.LASF5:
 4156 046f 6C6F6E67 		.ascii	"long long int\000"
 4156      206C6F6E 
 4156      6720696E 
 4156      7400
 4157              	.LASF42:
 4158 047d 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 4158      65786974 
 4158      5F617267 
 4158      735F7074 
 4158      7200
 4159              	.LASF89:
 4160 048f 5F6E696F 		.ascii	"_niobs\000"
 4160      627300
 4161              	.LASF141:
 4162 0496 54574931 		.ascii	"TWI1_IRQn\000"
 4162      5F495251 
 4162      6E00
 4163              	.LASF65:
 4164 04a0 5F5F7367 		.ascii	"__sglue\000"
 4164      6C756500 
 4165              	.LASF186:
 4166 04a8 504D435F 		.ascii	"PMC_PCK\000"
 4166      50434B00 
 4167              	.LASF247:
 4168 04b0 6D61696E 		.ascii	"main.c\000"
 4168      2E6300
 4169              	.LASF120:
 4170 04b7 53564361 		.ascii	"SVCall_IRQn\000"
ARM GAS  /tmp/ccSeVCM8.s 			page 109


 4170      6C6C5F49 
 4170      52516E00 
 4171              	.LASF57:
 4172 04c3 5F67616D 		.ascii	"_gamma_signgam\000"
 4172      6D615F73 
 4172      69676E67 
 4172      616D00
 4173              	.LASF232:
 4174 04d2 6374726C 		.ascii	"ctrlmode_t\000"
 4174      6D6F6465 
 4174      5F7400
 4175              	.LASF55:
 4176 04dd 5F637572 		.ascii	"_current_locale\000"
 4176      72656E74 
 4176      5F6C6F63 
 4176      616C6500 
 4177              	.LASF100:
 4178 04ed 5F667265 		.ascii	"_freelist\000"
 4178      656C6973 
 4178      7400
 4179              	.LASF90:
 4180 04f7 5F696F62 		.ascii	"_iobs\000"
 4180      7300
 4181              	.LASF88:
 4182 04fd 5F676C75 		.ascii	"_glue\000"
 4182      6500
 4183              	.LASF244:
 4184 0503 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4184      52784275 
 4184      66666572 
 4184      00
 4185              	.LASF21:
 4186 0510 5F736967 		.ascii	"_sign\000"
 4186      6E00
 4187              	.LASF236:
 4188 0516 5F646478 		.ascii	"_ddx\000"
 4188      00
 4189              	.LASF231:
 4190 051b 53544F50 		.ascii	"STOP\000"
 4190      00
 4191              	.LASF4:
 4192 0520 756E7369 		.ascii	"unsigned int\000"
 4192      676E6564 
 4192      20696E74 
 4192      00
 4193              	.LASF148:
 4194 052d 5443345F 		.ascii	"TC4_IRQn\000"
 4194      4952516E 
 4194      00
 4195              	.LASF140:
 4196 0536 54574930 		.ascii	"TWI0_IRQn\000"
 4196      5F495251 
 4196      6E00
 4197              	.LASF226:
 4198 0540 5744545F 		.ascii	"WDT_MR\000"
 4198      4D5200
 4199              	.LASF111:
ARM GAS  /tmp/ccSeVCM8.s 			page 110


 4200 0547 5F776372 		.ascii	"_wcrtomb_state\000"
 4200      746F6D62 
 4200      5F737461 
 4200      746500
 4201              	.LASF28:
 4202 0556 5F5F746D 		.ascii	"__tm_mday\000"
 4202      5F6D6461 
 4202      7900
 4203              	.LASF79:
 4204 0560 5F756275 		.ascii	"_ubuf\000"
 4204      6600
 4205              	.LASF50:
 4206 0566 5F737464 		.ascii	"_stderr\000"
 4206      65727200 
 4207              	.LASF104:
 4208 056e 5F776374 		.ascii	"_wctomb_state\000"
 4208      6F6D625F 
 4208      73746174 
 4208      6500
 4209              	.LASF84:
 4210 057c 5F6D6273 		.ascii	"_mbstate\000"
 4210      74617465 
 4210      00
 4211              	.LASF95:
 4212 0585 5F72616E 		.ascii	"_rand_next\000"
 4212      645F6E65 
 4212      787400
 4213              	.LASF70:
 4214 0590 5F666C61 		.ascii	"_flags\000"
 4214      677300
 4215              	.LASF39:
 4216 0597 5F617465 		.ascii	"_atexit\000"
 4216      78697400 
 4217              	.LASF13:
 4218 059f 5F5F636F 		.ascii	"__count\000"
 4218      756E7400 
 4219              	.LASF229:
 4220 05a7 4E4F524D 		.ascii	"NORMAL\000"
 4220      414C00
 4221              	.LASF31:
 4222 05ae 5F5F746D 		.ascii	"__tm_wday\000"
 4222      5F776461 
 4222      7900
 4223              	.LASF32:
 4224 05b8 5F5F746D 		.ascii	"__tm_yday\000"
 4224      5F796461 
 4224      7900
 4225              	.LASF197:
 4226 05c2 504D435F 		.ascii	"PMC_WPSR\000"
 4226      57505352 
 4226      00
 4227              	.LASF92:
 4228 05cb 5F736565 		.ascii	"_seed\000"
 4228      6400
 4229              	.LASF77:
 4230 05d1 5F736565 		.ascii	"_seek\000"
 4230      6B00
ARM GAS  /tmp/ccSeVCM8.s 			page 111


 4231              	.LASF132:
 4232 05d7 55415254 		.ascii	"UART1_IRQn\000"
 4232      315F4952 
 4232      516E00
 4233              	.LASF9:
 4234 05e2 5F66706F 		.ascii	"_fpos_t\000"
 4234      735F7400 
 4235              	.LASF12:
 4236 05ea 5F5F7763 		.ascii	"__wchb\000"
 4236      686200
 4237              	.LASF105:
 4238 05f1 5F6D6274 		.ascii	"_mbtowc_state\000"
 4238      6F77635F 
 4238      73746174 
 4238      6500
 4239              	.LASF214:
 4240 05ff 54435F49 		.ascii	"TC_IMR\000"
 4240      4D5200
 4241              	.LASF6:
 4242 0606 6C6F6E67 		.ascii	"long long unsigned int\000"
 4242      206C6F6E 
 4242      6720756E 
 4242      7369676E 
 4242      65642069 
 4243              	.LASF114:
 4244 061d 75696E74 		.ascii	"uint16_t\000"
 4244      31365F74 
 4244      00
 4245              	.LASF36:
 4246 0626 5F64736F 		.ascii	"_dso_handle\000"
 4246      5F68616E 
 4246      646C6500 
 4247              	.LASF91:
 4248 0632 5F72616E 		.ascii	"_rand48\000"
 4248      64343800 
 4249              	.LASF139:
 4250 063a 48534D43 		.ascii	"HSMCI_IRQn\000"
 4250      495F4952 
 4250      516E00
 4251              	.LASF49:
 4252 0645 5F737464 		.ascii	"_stdout\000"
 4252      6F757400 
 4253              	.LASF138:
 4254 064d 55534152 		.ascii	"USART1_IRQn\000"
 4254      54315F49 
 4254      52516E00 
 4255              	.LASF81:
 4256 0659 5F626C6B 		.ascii	"_blksize\000"
 4256      73697A65 
 4256      00
 4257              	.LASF44:
 4258 0662 5F626173 		.ascii	"_base\000"
 4258      6500
 4259              	.LASF252:
 4260 0668 5443315F 		.ascii	"TC1_IrqHandler\000"
 4260      49727148 
 4260      616E646C 
ARM GAS  /tmp/ccSeVCM8.s 			page 112


 4260      657200
 4261              	.LASF102:
 4262 0677 5F737472 		.ascii	"_strtok_last\000"
 4262      746F6B5F 
 4262      6C617374 
 4262      00
 4263              	.LASF150:
 4264 0684 4144435F 		.ascii	"ADC_IRQn\000"
 4264      4952516E 
 4264      00
 4265              	.LASF109:
 4266 068d 5F6D6272 		.ascii	"_mbrtowc_state\000"
 4266      746F7763 
 4266      5F737461 
 4266      746500
 4267              	.LASF159:
 4268 069c 49434552 		.ascii	"ICER\000"
 4268      00
 4269              	.LASF16:
 4270 06a1 5F666C6F 		.ascii	"_flock_t\000"
 4270      636B5F74 
 4270      00
 4271              	.LASF242:
 4272 06aa 7463636C 		.ascii	"tcclks\000"
 4272      6B7300
 4273              	.LASF87:
 4274 06b1 5F5F4649 		.ascii	"__FILE\000"
 4274      4C4500
 4275              	.LASF15:
 4276 06b8 5F6D6273 		.ascii	"_mbstate_t\000"
 4276      74617465 
 4276      5F7400
 4277              	.LASF131:
 4278 06c3 55415254 		.ascii	"UART0_IRQn\000"
 4278      305F4952 
 4278      516E00
 4279              	.LASF60:
 4280 06ce 5F723438 		.ascii	"_r48\000"
 4280      00
 4281              	.LASF188:
 4282 06d3 504D435F 		.ascii	"PMC_IER\000"
 4282      49455200 
 4283              	.LASF10:
 4284 06db 77696E74 		.ascii	"wint_t\000"
 4284      5F7400
 4285              	.LASF19:
 4286 06e2 5F6E6578 		.ascii	"_next\000"
 4286      7400
 4287              	.LASF73:
 4288 06e8 5F646174 		.ascii	"_data\000"
 4288      6100
 4289              	.LASF142:
 4290 06ee 5350495F 		.ascii	"SPI_IRQn\000"
 4290      4952516E 
 4290      00
 4291              	.LASF253:
 4292 06f7 696E6974 		.ascii	"init\000"
ARM GAS  /tmp/ccSeVCM8.s 			page 113


 4292      00
 4293              	.LASF137:
 4294 06fc 55534152 		.ascii	"USART0_IRQn\000"
 4294      54305F49 
 4294      52516E00 
 4295              	.LASF173:
 4296 0708 52657365 		.ascii	"Reserved1\000"
 4296      72766564 
 4296      3100
 4297              	.LASF177:
 4298 0712 52657365 		.ascii	"Reserved2\000"
 4298      72766564 
 4298      3200
 4299              	.LASF183:
 4300 071c 52657365 		.ascii	"Reserved3\000"
 4300      72766564 
 4300      3300
 4301              	.LASF185:
 4302 0726 52657365 		.ascii	"Reserved4\000"
 4302      72766564 
 4302      3400
 4303              	.LASF187:
 4304 0730 52657365 		.ascii	"Reserved5\000"
 4304      72766564 
 4304      3500
 4305              	.LASF195:
 4306 073a 52657365 		.ascii	"Reserved6\000"
 4306      72766564 
 4306      3600
 4307              	.LASF144:
 4308 0744 5443305F 		.ascii	"TC0_IRQn\000"
 4308      4952516E 
 4308      00
 4309              	.LASF194:
 4310 074d 504D435F 		.ascii	"PMC_FOCR\000"
 4310      464F4352 
 4310      00
 4311              	.LASF135:
 4312 0756 50494F42 		.ascii	"PIOB_IRQn\000"
 4312      5F495251 
 4312      6E00
 4313              	.LASF207:
 4314 0760 54435F43 		.ascii	"TC_CV\000"
 4314      5600
 4315              	.LASF227:
 4316 0766 5744545F 		.ascii	"WDT_SR\000"
 4316      535200
 4317              	.LASF121:
 4318 076d 44656275 		.ascii	"DebugMonitor_IRQn\000"
 4318      674D6F6E 
 4318      69746F72 
 4318      5F495251 
 4318      6E00
 4319              	.LASF248:
 4320 077f 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 4320      652F6D6F 
 4320      2F646F63 
ARM GAS  /tmp/ccSeVCM8.s 			page 114


 4320      2F737475 
 4320      6469756D 
 4321              	.LASF220:
 4322 07ae 54435F51 		.ascii	"TC_QIDR\000"
 4322      49445200 
 4323              	.LASF103:
 4324 07b6 5F6D626C 		.ascii	"_mblen_state\000"
 4324      656E5F73 
 4324      74617465 
 4324      00
 4325              	.LASF2:
 4326 07c3 73686F72 		.ascii	"short int\000"
 4326      7420696E 
 4326      7400
 4327              	.LASF234:
 4328 07cd 6D6F6465 		.ascii	"mode\000"
 4328      00
 4329              	.LASF219:
 4330 07d2 54435F51 		.ascii	"TC_QIER\000"
 4330      49455200 
 4331              	.LASF190:
 4332 07da 504D435F 		.ascii	"PMC_SR\000"
 4332      535200
 4333              	.LASF37:
 4334 07e1 5F666E74 		.ascii	"_fntypes\000"
 4334      79706573 
 4334      00
 4335              	.LASF134:
 4336 07ea 50494F41 		.ascii	"PIOA_IRQn\000"
 4336      5F495251 
 4336      6E00
 4337              	.LASF30:
 4338 07f4 5F5F746D 		.ascii	"__tm_year\000"
 4338      5F796561 
 4338      7200
 4339              	.LASF179:
 4340 07fe 434B4752 		.ascii	"CKGR_MCFR\000"
 4340      5F4D4346 
 4340      5200
 4341              	.LASF72:
 4342 0808 5F6C6266 		.ascii	"_lbfsize\000"
 4342      73697A65 
 4342      00
 4343              	.LASF51:
 4344 0811 5F696E63 		.ascii	"_inc\000"
 4344      00
 4345              	.LASF40:
 4346 0816 5F696E64 		.ascii	"_ind\000"
 4346      00
 4347              	.LASF224:
 4348 081b 54435F57 		.ascii	"TC_WPMR\000"
 4348      504D5200 
 4349              	.LASF43:
 4350 0823 5F5F7362 		.ascii	"__sbuf\000"
 4350      756600
 4351              	.LASF38:
 4352 082a 5F69735F 		.ascii	"_is_cxa\000"
ARM GAS  /tmp/ccSeVCM8.s 			page 115


 4352      63786100 
 4353              	.LASF246:
 4354 0832 474E5520 		.ascii	"GNU C 4.6.1\000"
 4354      4320342E 
 4354      362E3100 
 4355              	.LASF96:
 4356 083e 5F6D7072 		.ascii	"_mprec\000"
 4356      656300
 4357              	.LASF196:
 4358 0845 504D435F 		.ascii	"PMC_WPMR\000"
 4358      57504D52 
 4358      00
 4359              	.LASF67:
 4360 084e 5F6D6973 		.ascii	"_misc\000"
 4360      6300
 4361              	.LASF17:
 4362 0854 5F5F554C 		.ascii	"__ULong\000"
 4362      6F6E6700 
 4363              	.LASF143:
 4364 085c 5353435F 		.ascii	"SSC_IRQn\000"
 4364      4952516E 
 4364      00
 4365              	.LASF115:
 4366 0865 75696E74 		.ascii	"uint32_t\000"
 4366      33325F74 
 4366      00
 4367              	.LASF97:
 4368 086e 5F726573 		.ascii	"_result\000"
 4368      756C7400 
 4369              	.LASF192:
 4370 0876 504D435F 		.ascii	"PMC_FSMR\000"
 4370      46534D52 
 4370      00
 4371              	.LASF94:
 4372 087f 5F616464 		.ascii	"_add\000"
 4372      00
 4373              	.LASF3:
 4374 0884 73686F72 		.ascii	"short unsigned int\000"
 4374      7420756E 
 4374      7369676E 
 4374      65642069 
 4374      6E7400
 4375              	.LASF27:
 4376 0897 5F5F746D 		.ascii	"__tm_hour\000"
 4376      5F686F75 
 4376      7200
 4377              	.LASF122:
 4378 08a1 50656E64 		.ascii	"PendSV_IRQn\000"
 4378      53565F49 
 4378      52516E00 
 4379              	.LASF110:
 4380 08ad 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 4380      72746F77 
 4380      63735F73 
 4380      74617465 
 4380      00
 4381              	.LASF217:
ARM GAS  /tmp/ccSeVCM8.s 			page 116


 4382 08be 54435F42 		.ascii	"TC_BCR\000"
 4382      435200
 4383              	.LASF147:
 4384 08c5 5443335F 		.ascii	"TC3_IRQn\000"
 4384      4952516E 
 4384      00
 4385              	.LASF228:
 4386 08ce 6374726C 		.ascii	"ctrlio_t\000"
 4386      696F5F74 
 4386      00
 4387              	.LASF171:
 4388 08d7 504D435F 		.ascii	"PMC_SCDR\000"
 4388      53434452 
 4388      00
 4389              	.LASF157:
 4390 08e0 49534552 		.ascii	"ISER\000"
 4390      00
 4391              	.LASF175:
 4392 08e5 504D435F 		.ascii	"PMC_PCDR0\000"
 4392      50434452 
 4392      3000
 4393              	.LASF200:
 4394 08ef 504D435F 		.ascii	"PMC_PCDR1\000"
 4394      50434452 
 4394      3100
 4395              	.LASF35:
 4396 08f9 5F666E61 		.ascii	"_fnargs\000"
 4396      72677300 
 4397              	.LASF33:
 4398 0901 5F5F746D 		.ascii	"__tm_isdst\000"
 4398      5F697364 
 4398      737400
 4399              	.LASF26:
 4400 090c 5F5F746D 		.ascii	"__tm_min\000"
 4400      5F6D696E 
 4400      00
 4401              	.LASF107:
 4402 0915 5F676574 		.ascii	"_getdate_err\000"
 4402      64617465 
 4402      5F657272 
 4402      00
 4403              	.LASF170:
 4404 0922 504D435F 		.ascii	"PMC_SCER\000"
 4404      53434552 
 4404      00
 4405              	.LASF201:
 4406 092b 504D435F 		.ascii	"PMC_PCSR1\000"
 4406      50435352 
 4406      3100
 4407              	.LASF126:
 4408 0935 5254435F 		.ascii	"RTC_IRQn\000"
 4408      4952516E 
 4408      00
 4409              	.LASF180:
 4410 093e 434B4752 		.ascii	"CKGR_PLLAR\000"
 4410      5F504C4C 
 4410      415200
ARM GAS  /tmp/ccSeVCM8.s 			page 117


 4411              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/ccSeVCM8.s 			page 118


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccSeVCM8.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/ccSeVCM8.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/ccSeVCM8.s:66     .bss:00000000 loops
     /tmp/ccSeVCM8.s:63     .bss:00000000 $d
     /tmp/ccSeVCM8.s:69     .rodata:00000000 $d
     /tmp/ccSeVCM8.s:70     .rodata:00000000 .LC0
     /tmp/ccSeVCM8.s:73     .rodata:00000018 .LC1
     /tmp/ccSeVCM8.s:76     .rodata:00000044 .LC2
     /tmp/ccSeVCM8.s:79     .rodata:0000004c .LC3
     /tmp/ccSeVCM8.s:82     .rodata:00000054 .LC4
     /tmp/ccSeVCM8.s:85     .rodata:0000005c .LC5
     /tmp/ccSeVCM8.s:88     .rodata:00000064 .LC6
     /tmp/ccSeVCM8.s:91     .rodata:00000068 .LC7
     /tmp/ccSeVCM8.s:94     .rodata:00000070 .LC8
     /tmp/ccSeVCM8.s:97     .rodata:00000074 .LC9
     /tmp/ccSeVCM8.s:100    .rodata:00000078 .LC10
     /tmp/ccSeVCM8.s:103    .rodata:0000007c .LC11
     /tmp/ccSeVCM8.s:106    .rodata:00000088 .LC12
     /tmp/ccSeVCM8.s:109    .rodata:00000090 .LC13
     /tmp/ccSeVCM8.s:112    .rodata:00000094 .LC14
     /tmp/ccSeVCM8.s:115    .rodata:0000009c .LC15
     /tmp/ccSeVCM8.s:118    .rodata:000000a8 .LC16
     /tmp/ccSeVCM8.s:121    .text.main:00000000 $t
     /tmp/ccSeVCM8.s:126    .text.main:00000000 main
     /tmp/ccSeVCM8.s:675    .text.init:00000000 init
     /tmp/ccSeVCM8.s:219    .text.main:000000b4 $d
     /tmp/ccSeVCM8.s:234    .text.main:000000e8 $t
     /tmp/ccSeVCM8.s:643    .text.TC1_IrqHandler:00000000 $t
     /tmp/ccSeVCM8.s:648    .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/ccSeVCM8.s:670    .text.init:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_impure_ptr
fiprintf
USBC_isConfigured
LED_blink
setbuf
USBC_hasData
gets
puts
siscanf
strcmp
iprintf
TC_FindMckDivisor
TC_Configure
TimeTick_Configure
LEDs_configure
LED_clr
USBC_Configure
