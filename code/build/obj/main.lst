ARM GAS  /tmp/cc17JTRV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/cc17JTRV.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cc17JTRV.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/cc17JTRV.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cc17JTRV.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cc17JTRV.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/cc17JTRV.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/cc17JTRV.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/cc17JTRV.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/cc17JTRV.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/cc17JTRV.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cc17JTRV.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/cc17JTRV.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/cc17JTRV.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/cc17JTRV.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cc17JTRV.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cc17JTRV.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/cc17JTRV.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/cc17JTRV.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/cc17JTRV.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cc17JTRV.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/cc17JTRV.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cc17JTRV.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cc17JTRV.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/cc17JTRV.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cc17JTRV.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cc17JTRV.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/cc17JTRV.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.section	.text.NVIC_SetPriority,"ax",%progbits
  62              		.align	2
  63              		.thumb
  64              		.thumb_func
  65              		.type	NVIC_SetPriority, %function
  66              	NVIC_SetPriority:
  67              	.LFB20:
1506:libchip/cmsis/core_cm3.h **** 
1507:libchip/cmsis/core_cm3.h **** /**
1508:libchip/cmsis/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:libchip/cmsis/core_cm3.h ****  *
1510:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:libchip/cmsis/core_cm3.h ****  *
1512:libchip/cmsis/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:libchip/cmsis/core_cm3.h ****  */
1515:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:libchip/cmsis/core_cm3.h **** {
1517:libchip/cmsis/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:libchip/cmsis/core_cm3.h **** }
1519:libchip/cmsis/core_cm3.h **** 
1520:libchip/cmsis/core_cm3.h **** /**
1521:libchip/cmsis/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:libchip/cmsis/core_cm3.h ****  *
1523:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:libchip/cmsis/core_cm3.h ****  *
1526:libchip/cmsis/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending,
1527:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0
1528:libchip/cmsis/core_cm3.h ****  */
1529:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/cc17JTRV.s 			page 29


1530:libchip/cmsis/core_cm3.h **** {
1531:libchip/cmsis/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:libchip/cmsis/core_cm3.h **** }
1533:libchip/cmsis/core_cm3.h **** 
1534:libchip/cmsis/core_cm3.h **** /**
1535:libchip/cmsis/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:libchip/cmsis/core_cm3.h ****  *
1537:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:libchip/cmsis/core_cm3.h ****  *
1539:libchip/cmsis/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:libchip/cmsis/core_cm3.h ****  */
1542:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:libchip/cmsis/core_cm3.h **** {
1544:libchip/cmsis/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:libchip/cmsis/core_cm3.h **** }
1546:libchip/cmsis/core_cm3.h **** 
1547:libchip/cmsis/core_cm3.h **** /**
1548:libchip/cmsis/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:libchip/cmsis/core_cm3.h ****  *
1550:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:libchip/cmsis/core_cm3.h ****  *
1552:libchip/cmsis/core_cm3.h ****  * Clear the pending bit for the specified interrupt.
1553:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:libchip/cmsis/core_cm3.h ****  */
1555:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:libchip/cmsis/core_cm3.h **** {
1557:libchip/cmsis/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:libchip/cmsis/core_cm3.h **** }
1559:libchip/cmsis/core_cm3.h **** 
1560:libchip/cmsis/core_cm3.h **** /**
1561:libchip/cmsis/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:libchip/cmsis/core_cm3.h ****  *
1563:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:libchip/cmsis/core_cm3.h ****  *
1566:libchip/cmsis/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active,
1567:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0.
1568:libchip/cmsis/core_cm3.h ****  */
1569:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:libchip/cmsis/core_cm3.h **** {
1571:libchip/cmsis/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:libchip/cmsis/core_cm3.h **** }
1573:libchip/cmsis/core_cm3.h **** 
1574:libchip/cmsis/core_cm3.h **** /**
1575:libchip/cmsis/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:libchip/cmsis/core_cm3.h ****  *
1577:libchip/cmsis/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:libchip/cmsis/core_cm3.h ****  * @param  priority  The priority to set
1579:libchip/cmsis/core_cm3.h ****  *
1580:libchip/cmsis/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt
1581:libchip/cmsis/core_cm3.h ****  * number can be positive to specify an external (device specific)
1582:libchip/cmsis/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:libchip/cmsis/core_cm3.h ****  *
1584:libchip/cmsis/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:libchip/cmsis/core_cm3.h ****  */
1586:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
ARM GAS  /tmp/cc17JTRV.s 			page 30


1587:libchip/cmsis/core_cm3.h **** {
  68              		.loc 1 1587 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI5:
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 3960     		str	r1, [r7, #0]
  85 000a FB71     		strb	r3, [r7, #7]
1588:libchip/cmsis/core_cm3.h ****   if(IRQn < 0) {
  86              		.loc 1 1588 0
  87 000c 97F90730 		ldrsb	r3, [r7, #7]
  88 0010 002B     		cmp	r3, #0
  89 0012 10DA     		bge	.L3
1589:libchip/cmsis/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  90              		.loc 1 1589 0
  91 0014 4FF46D43 		mov	r3, #60672
  92 0018 CEF20003 		movt	r3, 57344
  93 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  94 001e 02F00F02 		and	r2, r2, #15
  95 0022 A2F10401 		sub	r1, r2, #4
  96 0026 3A68     		ldr	r2, [r7, #0]
  97 0028 D2B2     		uxtb	r2, r2
  98 002a 4FEA0212 		lsl	r2, r2, #4
  99 002e D2B2     		uxtb	r2, r2
 100 0030 5B18     		adds	r3, r3, r1
 101 0032 1A76     		strb	r2, [r3, #24]
 102 0034 0DE0     		b	.L2
 103              	.L3:
1590:libchip/cmsis/core_cm3.h ****   else {
1591:libchip/cmsis/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 104              		.loc 1 1591 0
 105 0036 4FF46143 		mov	r3, #57600
 106 003a CEF20003 		movt	r3, 57344
 107 003e 97F90710 		ldrsb	r1, [r7, #7]
 108 0042 3A68     		ldr	r2, [r7, #0]
 109 0044 D2B2     		uxtb	r2, r2
 110 0046 4FEA0212 		lsl	r2, r2, #4
 111 004a D2B2     		uxtb	r2, r2
 112 004c 5B18     		adds	r3, r3, r1
 113 004e 83F80023 		strb	r2, [r3, #768]
 114              	.L2:
1592:libchip/cmsis/core_cm3.h **** }
 115              		.loc 1 1592 0
 116 0052 07F10C07 		add	r7, r7, #12
 117 0056 BD46     		mov	sp, r7
 118 0058 80BC     		pop	{r7}
ARM GAS  /tmp/cc17JTRV.s 			page 31


 119 005a 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE20:
 122              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 123              		.global	input
 124              		.bss
 125              		.align	2
 126              		.type	input, %object
 127              		.size	input, 4
 128              	input:
 129 0000 00000000 		.space	4
 130              		.global	_state
 131              		.data
 132              		.type	_state, %object
 133              		.size	_state, 1
 134              	_state:
 135 0000 01       		.byte	1
 136              		.global	loop
 137              		.bss
 138              		.align	2
 139              		.type	loop, %object
 140              		.size	loop, 44
 141              	loop:
 142 0004 00000000 		.space	44
 142      00000000 
 142      00000000 
 142      00000000 
 142      00000000 
 143              		.global	ntrip
 144              		.data
 145 0001 000000   		.align	2
 146              		.type	ntrip, %object
 147              		.size	ntrip, 16
 148              	ntrip:
 149 0004 14000000 		.word	loop+20
 150 0008 00000000 		.word	0
 151 000c 64000000 		.word	100
 152 0010 0A000000 		.word	10
 153              		.global	rtrip
 154              		.align	2
 155              		.type	rtrip, %object
 156              		.size	rtrip, 16
 157              	rtrip:
 158 0014 14000000 		.word	loop+20
 159 0018 00000000 		.word	0
 160 001c 0C000000 		.word	12
 161 0020 00000000 		.word	0
 162              		.global	releasetime
 163              		.align	2
 164              		.type	releasetime, %object
 165              		.size	releasetime, 4
 166              	releasetime:
 167 0024 E8030000 		.word	1000
 168              		.global	dxmax
 169              		.align	2
 170              		.type	dxmax, %object
 171              		.size	dxmax, 4
ARM GAS  /tmp/cc17JTRV.s 			page 32


 172              	dxmax:
 173 0028 00040000 		.word	1024
 174              		.section	.rodata
 175              		.align	2
 176              	.LC0:
 177 0000 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
 177      52756E6E 
 177      696E6720 
 177      61742025 
 177      69204D48 
 178 0017 00       		.align	2
 179              	.LC1:
 180 0018 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
 180      77616974 
 180      696E6720 
 180      756E7469 
 180      6C205553 
 181 0043 00       		.align	2
 182              	.LC2:
 183 0044 2D442D20 		.ascii	"-D- releasetime elapsed\012\000"
 183      72656C65 
 183      61736574 
 183      696D6520 
 183      656C6170 
 184              		.section	.text.main,"ax",%progbits
 185              		.align	2
 186              		.global	main
 187              		.thumb
 188              		.thumb_func
 189              		.type	main, %function
 190              	main:
 191              	.LFB35:
 192              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "board.h"
   3:main.c        **** #include "controller.h"
   4:main.c        **** 
   5:main.c        **** #define STOPPED  (1 << 0)
   6:main.c        **** #define RUN     (1 << 1)
   7:main.c        **** #define HOLD    (1 << 2)
   8:main.c        **** #define RELEASE (1 << 3)
   9:main.c        **** 
  10:main.c        **** #define MINv 0
  11:main.c        **** #define MAXv MAX
  12:main.c        **** 
  13:main.c        **** #define AIN0 0
  14:main.c        **** #define AIN1 1
  15:main.c        **** #define NUM_AIN 2
  16:main.c        **** 
  17:main.c        **** #define PWMOUT_up 0
  18:main.c        **** #define PWMOUT_down 1
  19:main.c        **** #define PWM_FREQ   20
  20:main.c        **** #define PWM_PERIOD 100
  21:main.c        **** 
  22:main.c        **** ctrlio_t input[NUM_AIN] = {0};
  23:main.c        **** uint8_t _state = STOPPED;
  24:main.c        **** 
ARM GAS  /tmp/cc17JTRV.s 			page 33


  25:main.c        **** struct ctrl loop = CTRL_INIT;	
  26:main.c        **** struct trip ntrip = {&loop._e, 0, 100, 10};
  27:main.c        **** struct trip rtrip = {&loop._e, 0, 12, 0};
  28:main.c        **** 
  29:main.c        **** uint32_t releasetime = 1000;
  30:main.c        **** uint32_t dxmax = 1024;
  31:main.c        **** 
  32:main.c        **** static void init();
  33:main.c        **** static void state(uint8_t new);
  34:main.c        **** static void cli();
  35:main.c        **** 
  36:main.c        **** int main() 
  37:main.c        **** {
 193              		.loc 2 37 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 8
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI6:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 14, -4
 201              		.cfi_offset 7, -8
 202 0002 82B0     		sub	sp, sp, #8
 203              	.LCFI7:
 204              		.cfi_def_cfa_offset 16
 205 0004 00AF     		add	r7, sp, #0
 206              	.LCFI8:
 207              		.cfi_def_cfa_register 7
  38:main.c        **** 	uint32_t timestamp = 0;
 208              		.loc 2 38 0
 209 0006 4FF00003 		mov	r3, #0
 210 000a 7B60     		str	r3, [r7, #4]
  39:main.c        **** 
  40:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 211              		.loc 2 40 0
 212 000c 40F20003 		movw	r3, #:lower16:_impure_ptr
 213 0010 C0F20003 		movt	r3, #:upper16:_impure_ptr
 214 0014 1B68     		ldr	r3, [r3, #0]
 215 0016 DB68     		ldr	r3, [r3, #12]
 216 0018 1846     		mov	r0, r3
 217 001a 40F20001 		movw	r1, #:lower16:.LC0
 218 001e C0F20001 		movt	r1, #:upper16:.LC0
 219 0022 4FF03002 		mov	r2, #48
 220 0026 FFF7FEFF 		bl	fiprintf
  41:main.c        **** 
  42:main.c        **** 	/* WDT off */
  43:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 221              		.loc 2 43 0
 222 002a 41F25043 		movw	r3, #5200
 223 002e C4F20E03 		movt	r3, 16398
 224 0032 4FF40042 		mov	r2, #32768
 225 0036 5A60     		str	r2, [r3, #4]
  44:main.c        **** 
  45:main.c        **** 	/* configure hardware */
  46:main.c        **** 	init();
 226              		.loc 2 46 0
 227 0038 FFF7FEFF 		bl	init
ARM GAS  /tmp/cc17JTRV.s 			page 34


  47:main.c        **** 
  48:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 228              		.loc 2 48 0
 229 003c 40F20003 		movw	r3, #:lower16:_impure_ptr
 230 0040 C0F20003 		movt	r3, #:upper16:_impure_ptr
 231 0044 1B68     		ldr	r3, [r3, #0]
 232 0046 DB68     		ldr	r3, [r3, #12]
 233 0048 1846     		mov	r0, r3
 234 004a 40F20001 		movw	r1, #:lower16:.LC1
 235 004e C0F20001 		movt	r1, #:upper16:.LC1
 236 0052 FFF7FEFF 		bl	fiprintf
  49:main.c        **** 	while (!USBC_isConfigured());
 237              		.loc 2 49 0
 238 0056 00BF     		nop
 239              	.L6:
 240              		.loc 2 49 0 is_stmt 0 discriminator 1
 241 0058 FFF7FEFF 		bl	USBC_isConfigured
 242 005c 0346     		mov	r3, r0
 243 005e 002B     		cmp	r3, #0
 244 0060 FAD0     		beq	.L6
  50:main.c        **** 
  51:main.c        **** 	loop.Kp = SCALE(3);
 245              		.loc 2 51 0 is_stmt 1
 246 0062 40F20003 		movw	r3, #:lower16:loop
 247 0066 C0F20003 		movt	r3, #:upper16:loop
 248 006a 4FF4C072 		mov	r2, #384
 249 006e 9A81     		strh	r2, [r3, #12]	@ movhi
  52:main.c        **** 	loop.Ki = SCALE(2);
 250              		.loc 2 52 0
 251 0070 40F20003 		movw	r3, #:lower16:loop
 252 0074 C0F20003 		movt	r3, #:upper16:loop
 253 0078 4FF48072 		mov	r2, #256
 254 007c DA81     		strh	r2, [r3, #14]	@ movhi
  53:main.c        **** 	loop.Kd = SCALE(0);
 255              		.loc 2 53 0
 256 007e 40F20003 		movw	r3, #:lower16:loop
 257 0082 C0F20003 		movt	r3, #:upper16:loop
 258 0086 4FF00002 		mov	r2, #0
 259 008a 1A82     		strh	r2, [r3, #16]	@ movhi
  54:main.c        **** 	loop.rSlope = 16;
 260              		.loc 2 54 0
 261 008c 40F20003 		movw	r3, #:lower16:loop
 262 0090 C0F20003 		movt	r3, #:upper16:loop
 263 0094 4FF01002 		mov	r2, #16
 264 0098 9A60     		str	r2, [r3, #8]
  55:main.c        **** 	loop.rSP = MAXv;
 265              		.loc 2 55 0
 266 009a 40F20003 		movw	r3, #:lower16:loop
 267 009e C0F20003 		movt	r3, #:upper16:loop
 268 00a2 40F6FF72 		movw	r2, #4095
 269 00a6 9A80     		strh	r2, [r3, #4]	@ movhi
  56:main.c        **** 	loop.tristate = &rtrip;
 270              		.loc 2 56 0
 271 00a8 40F20003 		movw	r3, #:lower16:loop
 272 00ac C0F20003 		movt	r3, #:upper16:loop
 273 00b0 40F20002 		movw	r2, #:lower16:rtrip
 274 00b4 C0F20002 		movt	r2, #:upper16:rtrip
ARM GAS  /tmp/cc17JTRV.s 			page 35


 275 00b8 9A62     		str	r2, [r3, #40]
  57:main.c        **** 
  58:main.c        **** 	LED_blink(statusled, 5);
 276              		.loc 2 58 0
 277 00ba 4FF00000 		mov	r0, #0
 278 00be 4FF00501 		mov	r1, #5
 279 00c2 FFF7FEFF 		bl	LED_blink
  59:main.c        **** 
  60:main.c        **** 	setbuf(stdout, NULL);
 280              		.loc 2 60 0
 281 00c6 40F20003 		movw	r3, #:lower16:_impure_ptr
 282 00ca C0F20003 		movt	r3, #:upper16:_impure_ptr
 283 00ce 1B68     		ldr	r3, [r3, #0]
 284 00d0 9B68     		ldr	r3, [r3, #8]
 285 00d2 1846     		mov	r0, r3
 286 00d4 4FF00001 		mov	r1, #0
 287 00d8 FFF7FEFF 		bl	setbuf
 288              	.L21:
  61:main.c        **** 
  62:main.c        **** 	while (1) {
  63:main.c        **** 		cli();
 289              		.loc 2 63 0
 290 00dc FFF7FEFF 		bl	cli
  64:main.c        **** 		switch (_state) {
 291              		.loc 2 64 0
 292 00e0 40F20003 		movw	r3, #:lower16:_state
 293 00e4 C0F20003 		movt	r3, #:upper16:_state
 294 00e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 295 00ea 03F1FF33 		add	r3, r3, #-1
 296 00ee 072B     		cmp	r3, #7
 297 00f0 00F2AF80 		bhi	.L7
 298 00f4 01A1     		adr	r1, .L12
 299 00f6 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 300 00fa 00BF     		.align	2
 301              	.L12:
 302 00fc 5D020000 		.word	.L22+1
 303 0100 D3010000 		.word	.L9+1
 304 0104 53020000 		.word	.L7+1
 305 0108 1D010000 		.word	.L10+1
 306 010c 53020000 		.word	.L7+1
 307 0110 53020000 		.word	.L7+1
 308 0114 53020000 		.word	.L7+1
 309 0118 51010000 		.word	.L11+1
 310              	.L10:
  65:main.c        **** 			case STOPPED:
  66:main.c        **** 				break;
  67:main.c        **** 
  68:main.c        **** 			case HOLD:
  69:main.c        **** 				if (GetTickCount() % 1000)
 311              		.loc 2 69 0
 312 011c FFF7FEFF 		bl	GetTickCount
 313 0120 0246     		mov	r2, r0
 314 0122 44F6D353 		movw	r3, #19923
 315 0126 C1F26203 		movt	r3, 4194
 316 012a A3FB0213 		umull	r1, r3, r3, r2
 317 012e 4FEA9313 		lsr	r3, r3, #6
 318 0132 4FF47A71 		mov	r1, #1000
ARM GAS  /tmp/cc17JTRV.s 			page 36


 319 0136 01FB03F3 		mul	r3, r1, r3
 320 013a D31A     		subs	r3, r2, r3
 321 013c 002B     		cmp	r3, #0
 322 013e 00F08F80 		beq	.L23
  70:main.c        **** 					LED_blink(statusled, 1);
 323              		.loc 2 70 0
 324 0142 4FF00000 		mov	r0, #0
 325 0146 4FF00101 		mov	r1, #1
 326 014a FFF7FEFF 		bl	LED_blink
  71:main.c        **** 				break;
 327              		.loc 2 71 0
 328 014e 87E0     		b	.L23
 329              	.L11:
  72:main.c        **** 
  73:main.c        **** 			case RELEASE:
  74:main.c        **** 				if (GetTickCount() % 1000)
 330              		.loc 2 74 0
 331 0150 FFF7FEFF 		bl	GetTickCount
 332 0154 0246     		mov	r2, r0
 333 0156 44F6D353 		movw	r3, #19923
 334 015a C1F26203 		movt	r3, 4194
 335 015e A3FB0213 		umull	r1, r3, r3, r2
 336 0162 4FEA9313 		lsr	r3, r3, #6
 337 0166 4FF47A71 		mov	r1, #1000
 338 016a 01FB03F3 		mul	r3, r1, r3
 339 016e D31A     		subs	r3, r2, r3
 340 0170 002B     		cmp	r3, #0
 341 0172 05D0     		beq	.L15
  75:main.c        **** 					LED_blink(statusled, 2);
 342              		.loc 2 75 0
 343 0174 4FF00000 		mov	r0, #0
 344 0178 4FF00201 		mov	r1, #2
 345 017c FFF7FEFF 		bl	LED_blink
 346              	.L15:
  76:main.c        **** 
  77:main.c        **** 				if (timestamp == 0)
 347              		.loc 2 77 0
 348 0180 7B68     		ldr	r3, [r7, #4]
 349 0182 002B     		cmp	r3, #0
 350 0184 0AD1     		bne	.L16
  78:main.c        **** 					timestamp = GetTickCount() + releasetime;
 351              		.loc 2 78 0
 352 0186 FFF7FEFF 		bl	GetTickCount
 353 018a 0246     		mov	r2, r0
 354 018c 40F20003 		movw	r3, #:lower16:releasetime
 355 0190 C0F20003 		movt	r3, #:upper16:releasetime
 356 0194 1B68     		ldr	r3, [r3, #0]
 357 0196 D318     		adds	r3, r2, r3
 358 0198 7B60     		str	r3, [r7, #4]
  79:main.c        **** 				else if (GetTickCount() >= timestamp) {
  80:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
  81:main.c        **** 					timestamp = 0;
  82:main.c        **** 					state(STOPPED);
  83:main.c        **** 				}
  84:main.c        **** 				break;
 359              		.loc 2 84 0
 360 019a 63E0     		b	.L24
ARM GAS  /tmp/cc17JTRV.s 			page 37


 361              	.L16:
  79:main.c        **** 				else if (GetTickCount() >= timestamp) {
 362              		.loc 2 79 0
 363 019c FFF7FEFF 		bl	GetTickCount
 364 01a0 0246     		mov	r2, r0
 365 01a2 7B68     		ldr	r3, [r7, #4]
 366 01a4 9A42     		cmp	r2, r3
 367 01a6 5DD3     		bcc	.L24
  80:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
 368              		.loc 2 80 0
 369 01a8 40F20003 		movw	r3, #:lower16:_impure_ptr
 370 01ac C0F20003 		movt	r3, #:upper16:_impure_ptr
 371 01b0 1B68     		ldr	r3, [r3, #0]
 372 01b2 DB68     		ldr	r3, [r3, #12]
 373 01b4 1846     		mov	r0, r3
 374 01b6 40F20001 		movw	r1, #:lower16:.LC2
 375 01ba C0F20001 		movt	r1, #:upper16:.LC2
 376 01be FFF7FEFF 		bl	fiprintf
  81:main.c        **** 					timestamp = 0;
 377              		.loc 2 81 0
 378 01c2 4FF00003 		mov	r3, #0
 379 01c6 7B60     		str	r3, [r7, #4]
  82:main.c        **** 					state(STOPPED);
 380              		.loc 2 82 0
 381 01c8 4FF00100 		mov	r0, #1
 382 01cc FFF7FEFF 		bl	state
 383              		.loc 2 84 0
 384 01d0 48E0     		b	.L24
 385              	.L9:
  85:main.c        **** 
  86:main.c        **** 			case RUN:
  87:main.c        **** 				if (GetTickCount() % 1000)
 386              		.loc 2 87 0
 387 01d2 FFF7FEFF 		bl	GetTickCount
 388 01d6 0246     		mov	r2, r0
 389 01d8 44F6D353 		movw	r3, #19923
 390 01dc C1F26203 		movt	r3, 4194
 391 01e0 A3FB0213 		umull	r1, r3, r3, r2
 392 01e4 4FEA9313 		lsr	r3, r3, #6
 393 01e8 4FF47A71 		mov	r1, #1000
 394 01ec 01FB03F3 		mul	r3, r1, r3
 395 01f0 D31A     		subs	r3, r2, r3
 396 01f2 002B     		cmp	r3, #0
 397 01f4 05D0     		beq	.L18
  88:main.c        **** 					LED_blink(statusled, 3);
 398              		.loc 2 88 0
 399 01f6 4FF00000 		mov	r0, #0
 400 01fa 4FF00301 		mov	r1, #3
 401 01fe FFF7FEFF 		bl	LED_blink
 402              	.L18:
  89:main.c        **** 				if (   loop._dx > dxmax \
 403              		.loc 2 89 0
 404 0202 40F20003 		movw	r3, #:lower16:loop
 405 0206 C0F20003 		movt	r3, #:upper16:loop
 406 020a 9B69     		ldr	r3, [r3, #24]
 407 020c 1A46     		mov	r2, r3
 408 020e 40F20003 		movw	r3, #:lower16:dxmax
ARM GAS  /tmp/cc17JTRV.s 			page 38


 409 0212 C0F20003 		movt	r3, #:upper16:dxmax
 410 0216 1B68     		ldr	r3, [r3, #0]
 411 0218 9A42     		cmp	r2, r3
 412 021a 15D8     		bhi	.L19
  90:main.c        **** 				    || loop._dx < -dxmax \
 413              		.loc 2 90 0
 414 021c 40F20003 		movw	r3, #:lower16:loop
 415 0220 C0F20003 		movt	r3, #:upper16:loop
 416 0224 9B69     		ldr	r3, [r3, #24]
 417 0226 1A46     		mov	r2, r3
 418 0228 40F20003 		movw	r3, #:lower16:dxmax
 419 022c C0F20003 		movt	r3, #:upper16:dxmax
 420 0230 1B68     		ldr	r3, [r3, #0]
 421 0232 C3F10003 		rsb	r3, r3, #0
 422 0236 9A42     		cmp	r2, r3
 423 0238 06D3     		bcc	.L19
  91:main.c        **** 					|| loop.mode == NORMAL) // ramp finished
 424              		.loc 2 91 0
 425 023a 40F20003 		movw	r3, #:lower16:loop
 426 023e C0F20003 		movt	r3, #:upper16:loop
 427 0242 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 428 0244 012B     		cmp	r3, #1
 429 0246 0FD1     		bne	.L25
 430              	.L19:
  92:main.c        **** 					state(RELEASE);
 431              		.loc 2 92 0
 432 0248 4FF00800 		mov	r0, #8
 433 024c FFF7FEFF 		bl	state
  93:main.c        **** 				break;
 434              		.loc 2 93 0
 435 0250 0AE0     		b	.L25
 436              	.L7:
  94:main.c        **** 
  95:main.c        **** 			default:
  96:main.c        **** 				state(STOPPED);
 437              		.loc 2 96 0
 438 0252 4FF00100 		mov	r0, #1
 439 0256 FFF7FEFF 		bl	state
  97:main.c        **** 		}
  98:main.c        **** 	}
 440              		.loc 2 98 0
 441 025a 3FE7     		b	.L21
 442              	.L22:
  66:main.c        **** 				break;
 443              		.loc 2 66 0
 444 025c 00BF     		nop
 445 025e 04E0     		b	.L13
 446              	.L23:
  71:main.c        **** 				break;
 447              		.loc 2 71 0
 448 0260 00BF     		nop
 449 0262 02E0     		b	.L13
 450              	.L24:
  84:main.c        **** 				break;
 451              		.loc 2 84 0
 452 0264 00BF     		nop
 453 0266 00E0     		b	.L13
ARM GAS  /tmp/cc17JTRV.s 			page 39


 454              	.L25:
  93:main.c        **** 				break;
 455              		.loc 2 93 0
 456 0268 00BF     		nop
 457              	.L13:
 458              		.loc 2 98 0
 459 026a 37E7     		b	.L21
 460              		.cfi_endproc
 461              	.LFE35:
 462              		.size	main, .-main
 463              		.section	.text.TC1_IrqHandler,"ax",%progbits
 464              		.align	2
 465              		.global	TC1_IrqHandler
 466              		.thumb
 467              		.thumb_func
 468              		.type	TC1_IrqHandler, %function
 469              	TC1_IrqHandler:
 470              	.LFB36:
  99:main.c        **** 	return 0;
 100:main.c        **** }
 101:main.c        **** 
 102:main.c        **** void TC1_IrqHandler()
 103:main.c        **** {
 471              		.loc 2 103 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475 0000 80B5     		push	{r7, lr}
 476              	.LCFI9:
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 14, -4
 479              		.cfi_offset 7, -8
 480 0002 00AF     		add	r7, sp, #0
 481              	.LCFI10:
 482              		.cfi_def_cfa_register 7
 104:main.c        **** 	ADC_StartConversion(ADC);
 483              		.loc 2 104 0
 484 0004 4FF40043 		mov	r3, #32768
 485 0008 C4F20303 		movt	r3, 16387
 486 000c 4FF00202 		mov	r2, #2
 487 0010 1A60     		str	r2, [r3, #0]
 105:main.c        **** 	ADC_ReadBuffer(ADC, (int16_t*) input, NUM_AIN);
 488              		.loc 2 105 0
 489 0012 4FF40040 		mov	r0, #32768
 490 0016 C4F20300 		movt	r0, 16387
 491 001a 40F20001 		movw	r1, #:lower16:input
 492 001e C0F20001 		movt	r1, #:upper16:input
 493 0022 4FF00202 		mov	r2, #2
 494 0026 FFF7FEFF 		bl	ADC_ReadBuffer
 106:main.c        **** }
 495              		.loc 2 106 0
 496 002a 80BD     		pop	{r7, pc}
 497              		.cfi_endproc
 498              	.LFE36:
 499              		.size	TC1_IrqHandler, .-TC1_IrqHandler
 500              		.section	.text.ADC_IrqHandler,"ax",%progbits
 501              		.align	2
ARM GAS  /tmp/cc17JTRV.s 			page 40


 502              		.global	ADC_IrqHandler
 503              		.thumb
 504              		.thumb_func
 505              		.type	ADC_IrqHandler, %function
 506              	ADC_IrqHandler:
 507              	.LFB37:
 107:main.c        **** 
 108:main.c        **** void ADC_IrqHandler(void)
 109:main.c        **** {
 508              		.loc 2 109 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 8
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512 0000 80B5     		push	{r7, lr}
 513              	.LCFI11:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 14, -4
 516              		.cfi_offset 7, -8
 517 0002 82B0     		sub	sp, sp, #8
 518              	.LCFI12:
 519              		.cfi_def_cfa_offset 16
 520 0004 00AF     		add	r7, sp, #0
 521              	.LCFI13:
 522              		.cfi_def_cfa_register 7
 110:main.c        **** 	//TODO enable TAG option and check
 111:main.c        ****     uint32_t status;
 112:main.c        **** 	uint32_t duty = 0;
 523              		.loc 2 112 0
 524 0006 4FF00003 		mov	r3, #0
 525 000a 7B60     		str	r3, [r7, #4]
 113:main.c        **** 
 114:main.c        ****     status = ADC_GetStatus(ADC);
 526              		.loc 2 114 0
 527 000c 4FF40043 		mov	r3, #32768
 528 0010 C4F20303 		movt	r3, 16387
 529 0014 1B6B     		ldr	r3, [r3, #48]
 530 0016 3B60     		str	r3, [r7, #0]
 115:main.c        **** 
 116:main.c        **** 	if ((status & ADC_ISR_RXBUFF) == ADC_ISR_RXBUFF) {
 531              		.loc 2 116 0
 532 0018 3B68     		ldr	r3, [r7, #0]
 533 001a 03F08053 		and	r3, r3, #268435456
 534 001e 002B     		cmp	r3, #0
 535 0020 00F08B80 		beq	.L27
 117:main.c        **** 		if (_state & (RUN|HOLD)) {
 536              		.loc 2 117 0
 537 0024 40F20003 		movw	r3, #:lower16:_state
 538 0028 C0F20003 		movt	r3, #:upper16:_state
 539 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 540 002e 03F00603 		and	r3, r3, #6
 541 0032 002B     		cmp	r3, #0
 542 0034 00F08180 		beq	.L27
 118:main.c        **** 			control(LIMIT(input[0], MINv, MAXv), &loop);
 543              		.loc 2 118 0
 544 0038 40F20003 		movw	r3, #:lower16:input
 545 003c C0F20003 		movt	r3, #:upper16:input
 546 0040 1A88     		ldrh	r2, [r3, #0]
ARM GAS  /tmp/cc17JTRV.s 			page 41


 547 0042 40F6FF73 		movw	r3, #4095
 548 0046 9A42     		cmp	r2, r3
 549 0048 38BF     		it	cc
 550 004a 1346     		movcc	r3, r2
 551 004c 9BB2     		uxth	r3, r3
 552 004e 1846     		mov	r0, r3
 553 0050 40F20001 		movw	r1, #:lower16:loop
 554 0054 C0F20001 		movt	r1, #:upper16:loop
 555 0058 FFF7FEFF 		bl	control
 119:main.c        **** 			duty = loop.tristate->output * ((loop.output * PWM_PERIOD) / MAX);
 556              		.loc 2 119 0
 557 005c 40F20003 		movw	r3, #:lower16:loop
 558 0060 C0F20003 		movt	r3, #:upper16:loop
 559 0064 9B6A     		ldr	r3, [r3, #40]
 560 0066 5968     		ldr	r1, [r3, #4]
 561 0068 40F20003 		movw	r3, #:lower16:loop
 562 006c C0F20003 		movt	r3, #:upper16:loop
 563 0070 DB8C     		ldrh	r3, [r3, #38]
 564 0072 1BB2     		sxth	r3, r3
 565 0074 4FF06402 		mov	r2, #100
 566 0078 02FB03F3 		mul	r3, r2, r3
 567 007c 03F57E62 		add	r2, r3, #4064
 568 0080 02F11F02 		add	r2, r2, #31
 569 0084 002B     		cmp	r3, #0
 570 0086 B8BF     		it	lt
 571 0088 1346     		movlt	r3, r2
 572 008a 4FEA2333 		asr	r3, r3, #12
 573 008e 03F1FF33 		add	r3, r3, #-1
 574 0092 03FB01F3 		mul	r3, r3, r1
 575 0096 7B60     		str	r3, [r7, #4]
 120:main.c        **** 			if (loop.tristate->output == 1) {
 576              		.loc 2 120 0
 577 0098 40F20003 		movw	r3, #:lower16:loop
 578 009c C0F20003 		movt	r3, #:upper16:loop
 579 00a0 9B6A     		ldr	r3, [r3, #40]
 580 00a2 5B68     		ldr	r3, [r3, #4]
 581 00a4 012B     		cmp	r3, #1
 582 00a6 15D1     		bne	.L29
 121:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 583              		.loc 2 121 0
 584 00a8 4FF00000 		mov	r0, #0
 585 00ac C4F20200 		movt	r0, 16386
 586 00b0 4FF00001 		mov	r1, #0
 587 00b4 4FF00002 		mov	r2, #0
 588 00b8 FFF7FEFF 		bl	PWMC_SetDutyCycle
 122:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_down, duty);
 589              		.loc 2 122 0
 590 00bc 7B68     		ldr	r3, [r7, #4]
 591 00be 9BB2     		uxth	r3, r3
 592 00c0 4FF00000 		mov	r0, #0
 593 00c4 C4F20200 		movt	r0, 16386
 594 00c8 4FF00101 		mov	r1, #1
 595 00cc 1A46     		mov	r2, r3
 596 00ce FFF7FEFF 		bl	PWMC_SetDutyCycle
 597 00d2 32E0     		b	.L27
 598              	.L29:
 123:main.c        **** 			}
ARM GAS  /tmp/cc17JTRV.s 			page 42


 124:main.c        **** 			else if (loop.tristate->output == -1) {
 599              		.loc 2 124 0
 600 00d4 40F20003 		movw	r3, #:lower16:loop
 601 00d8 C0F20003 		movt	r3, #:upper16:loop
 602 00dc 9B6A     		ldr	r3, [r3, #40]
 603 00de 5B68     		ldr	r3, [r3, #4]
 604 00e0 B3F1FF3F 		cmp	r3, #-1
 605 00e4 15D1     		bne	.L30
 125:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_up, duty);
 606              		.loc 2 125 0
 607 00e6 7B68     		ldr	r3, [r7, #4]
 608 00e8 9BB2     		uxth	r3, r3
 609 00ea 4FF00000 		mov	r0, #0
 610 00ee C4F20200 		movt	r0, 16386
 611 00f2 4FF00001 		mov	r1, #0
 612 00f6 1A46     		mov	r2, r3
 613 00f8 FFF7FEFF 		bl	PWMC_SetDutyCycle
 126:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 614              		.loc 2 126 0
 615 00fc 4FF00000 		mov	r0, #0
 616 0100 C4F20200 		movt	r0, 16386
 617 0104 4FF00101 		mov	r1, #1
 618 0108 4FF00002 		mov	r2, #0
 619 010c FFF7FEFF 		bl	PWMC_SetDutyCycle
 620 0110 13E0     		b	.L27
 621              	.L30:
 127:main.c        **** 			}
 128:main.c        **** 			else {
 129:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 622              		.loc 2 129 0
 623 0112 4FF00000 		mov	r0, #0
 624 0116 C4F20200 		movt	r0, 16386
 625 011a 4FF00001 		mov	r1, #0
 626 011e 4FF00002 		mov	r2, #0
 627 0122 FFF7FEFF 		bl	PWMC_SetDutyCycle
 130:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 628              		.loc 2 130 0
 629 0126 4FF00000 		mov	r0, #0
 630 012a C4F20200 		movt	r0, 16386
 631 012e 4FF00101 		mov	r1, #1
 632 0132 4FF00002 		mov	r2, #0
 633 0136 FFF7FEFF 		bl	PWMC_SetDutyCycle
 634              	.L27:
 131:main.c        **** 			}
 132:main.c        **** 		}
 133:main.c        **** 	}
 134:main.c        **** }
 635              		.loc 2 134 0
 636 013a 07F10807 		add	r7, r7, #8
 637 013e BD46     		mov	sp, r7
 638 0140 80BD     		pop	{r7, pc}
 639              		.cfi_endproc
 640              	.LFE37:
 641              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 642 0142 00BF     		.section	.text.init,"ax",%progbits
 643              		.align	2
 644              		.thumb
ARM GAS  /tmp/cc17JTRV.s 			page 43


 645              		.thumb_func
 646              		.type	init, %function
 647              	init:
 648              	.LFB38:
 135:main.c        **** 
 136:main.c        **** static void init()
 137:main.c        **** {
 649              		.loc 2 137 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 1, uses_anonymous_args = 0
 653 0000 90B5     		push	{r4, r7, lr}
 654              	.LCFI14:
 655              		.cfi_def_cfa_offset 12
 656              		.cfi_offset 14, -4
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 4, -12
 659 0002 89B0     		sub	sp, sp, #36
 660              	.LCFI15:
 661              		.cfi_def_cfa_offset 48
 662 0004 06AF     		add	r7, sp, #24
 663              	.LCFI16:
 664              		.cfi_def_cfa 7, 24
 138:main.c        ****     uint32_t div;
 139:main.c        ****     uint32_t tcclks;
 140:main.c        **** 
 141:main.c        **** 	//TODO PIO Configure 
 142:main.c        **** 
 143:main.c        ****     /* Enable peripheral clocks */
 144:main.c        ****     PMC_EnablePeripheral(ID_TC1);
 665              		.loc 2 144 0
 666 0006 4FF01800 		mov	r0, #24
 667 000a FFF7FEFF 		bl	PMC_EnablePeripheral
 145:main.c        ****     PMC_EnablePeripheral(ID_ADC);
 668              		.loc 2 145 0
 669 000e 4FF01D00 		mov	r0, #29
 670 0012 FFF7FEFF 		bl	PMC_EnablePeripheral
 146:main.c        ****     PMC_EnablePeripheral(ID_PWM);
 671              		.loc 2 146 0
 672 0016 4FF01F00 		mov	r0, #31
 673 001a FFF7FEFF 		bl	PMC_EnablePeripheral
 147:main.c        **** 
 148:main.c        ****     /* Configure TC */
 149:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 674              		.loc 2 149 0
 675 001e 07F10402 		add	r2, r7, #4
 676 0022 3C46     		mov	r4, r7
 677 0024 4FF4D843 		mov	r3, #27648
 678 0028 C0F2DC23 		movt	r3, 732
 679 002c 0093     		str	r3, [sp, #0]
 680 002e 4FF00400 		mov	r0, #4
 681 0032 4FF4D841 		mov	r1, #27648
 682 0036 C0F2DC21 		movt	r1, 732
 683 003a 2346     		mov	r3, r4
 684 003c FFF7FEFF 		bl	TC_FindMckDivisor
 150:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 685              		.loc 2 150 0
ARM GAS  /tmp/cc17JTRV.s 			page 44


 686 0040 3B68     		ldr	r3, [r7, #0]
 687 0042 43F48043 		orr	r3, r3, #16384
 688 0046 4FF48040 		mov	r0, #16384
 689 004a C4F20100 		movt	r0, 16385
 690 004e 4FF00001 		mov	r1, #0
 691 0052 1A46     		mov	r2, r3
 692 0054 FFF7FEFF 		bl	TC_Configure
 151:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
 693              		.loc 2 151 0
 694 0058 4FF48043 		mov	r3, #16384
 695 005c C4F20103 		movt	r3, 16385
 696 0060 7968     		ldr	r1, [r7, #4]
 697 0062 4FF4D852 		mov	r2, #6912
 698 0066 C0F2B702 		movt	r2, 183
 699 006a B2FBF1F2 		udiv	r2, r2, r1
 700 006e DA61     		str	r2, [r3, #28]
 152:main.c        **** 	TC_Start(TC1, 0);
 701              		.loc 2 152 0
 702 0070 4FF48040 		mov	r0, #16384
 703 0074 C4F20100 		movt	r0, 16385
 704 0078 4FF00001 		mov	r1, #0
 705 007c FFF7FEFF 		bl	TC_Start
 153:main.c        **** 
 154:main.c        ****     NVIC_EnableIRQ(TC1_IRQn);
 706              		.loc 2 154 0
 707 0080 4FF01800 		mov	r0, #24
 708 0084 FFF7FEFF 		bl	NVIC_EnableIRQ
 155:main.c        ****     NVIC_SetPriority(TC1_IRQn, 1);
 709              		.loc 2 155 0
 710 0088 4FF01800 		mov	r0, #24
 711 008c 4FF00101 		mov	r1, #1
 712 0090 FFF7FEFF 		bl	NVIC_SetPriority
 156:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 713              		.loc 2 156 0
 714 0094 4FF48043 		mov	r3, #16384
 715 0098 C4F20103 		movt	r3, 16385
 716 009c 4FF01002 		mov	r2, #16
 717 00a0 5A62     		str	r2, [r3, #36]
 157:main.c        **** 
 158:main.c        ****     /* Initialize ADC */
 159:main.c        ****     ADC_Initialize(ADC, ID_ADC);
 718              		.loc 2 159 0
 719 00a2 4FF40040 		mov	r0, #32768
 720 00a6 C4F20300 		movt	r0, 16387
 721 00aa 4FF01D01 		mov	r1, #29
 722 00ae FFF7FEFF 		bl	ADC_Initialize
 160:main.c        ****     ADC_cfgFrequency(ADC, 15, 4 ); // startup = 15, prescal = 4, ADC clock = 6.4 MHz
 723              		.loc 2 160 0
 724 00b2 4FF40040 		mov	r0, #32768
 725 00b6 C4F20300 		movt	r0, 16387
 726 00ba 4FF00F01 		mov	r1, #15
 727 00be 4FF00402 		mov	r2, #4
 728 00c2 FFF7FEFF 		bl	ADC_cfgFrequency
 161:main.c        **** 
 162:main.c        ****     ADC_EnableChannel(ADC, AIN0);
 729              		.loc 2 162 0
 730 00c6 4FF40043 		mov	r3, #32768
ARM GAS  /tmp/cc17JTRV.s 			page 45


 731 00ca C4F20303 		movt	r3, 16387
 732 00ce 4FF00102 		mov	r2, #1
 733 00d2 1A61     		str	r2, [r3, #16]
 163:main.c        ****     ADC_EnableChannel(ADC, AIN1);
 734              		.loc 2 163 0
 735 00d4 4FF40043 		mov	r3, #32768
 736 00d8 C4F20303 		movt	r3, 16387
 737 00dc 4FF00202 		mov	r2, #2
 738 00e0 1A61     		str	r2, [r3, #16]
 164:main.c        **** 	ADC_StartConversion(ADC);
 739              		.loc 2 164 0
 740 00e2 4FF40043 		mov	r3, #32768
 741 00e6 C4F20303 		movt	r3, 16387
 742 00ea 4FF00202 		mov	r2, #2
 743 00ee 1A60     		str	r2, [r3, #0]
 165:main.c        ****     ADC_ReadBuffer(ADC, (int16_t*) input, NUM_AIN);
 744              		.loc 2 165 0
 745 00f0 4FF40040 		mov	r0, #32768
 746 00f4 C4F20300 		movt	r0, 16387
 747 00f8 40F20001 		movw	r1, #:lower16:input
 748 00fc C0F20001 		movt	r1, #:upper16:input
 749 0100 4FF00202 		mov	r2, #2
 750 0104 FFF7FEFF 		bl	ADC_ReadBuffer
 166:main.c        **** 
 167:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
 751              		.loc 2 167 0
 752 0108 4FF01D00 		mov	r0, #29
 753 010c FFF7FEFF 		bl	NVIC_EnableIRQ
 168:main.c        **** 	NVIC_SetPriority(ADC_IRQn, 0);
 754              		.loc 2 168 0
 755 0110 4FF01D00 		mov	r0, #29
 756 0114 4FF00001 		mov	r1, #0
 757 0118 FFF7FEFF 		bl	NVIC_SetPriority
 169:main.c        ****     ADC_EnableIt(ADC,ADC_IER_RXBUFF);
 758              		.loc 2 169 0
 759 011c 4FF40043 		mov	r3, #32768
 760 0120 C4F20303 		movt	r3, 16387
 761 0124 4FF08052 		mov	r2, #268435456
 762 0128 5A62     		str	r2, [r3, #36]
 170:main.c        **** 
 171:main.c        ****     /* Configure PWMC channels */
 172:main.c        ****     PWMC_ConfigureClocks(PWM_FREQ * PWM_PERIOD, 0, BOARD_MCK);
 763              		.loc 2 172 0
 764 012a 4FF4FA60 		mov	r0, #2000
 765 012e 4FF00001 		mov	r1, #0
 766 0132 4FF4D842 		mov	r2, #27648
 767 0136 C0F2DC22 		movt	r2, 732
 768 013a FFF7FEFF 		bl	PWMC_ConfigureClocks
 173:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWMOUT_up, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 769              		.loc 2 173 0
 770 013e 4FF00103 		mov	r3, #1
 771 0142 0093     		str	r3, [sp, #0]
 772 0144 4FF00003 		mov	r3, #0
 773 0148 0193     		str	r3, [sp, #4]
 774 014a 4FF00003 		mov	r3, #0
 775 014e 0293     		str	r3, [sp, #8]
 776 0150 4FF00003 		mov	r3, #0
ARM GAS  /tmp/cc17JTRV.s 			page 46


 777 0154 0393     		str	r3, [sp, #12]
 778 0156 4FF00003 		mov	r3, #0
 779 015a 0493     		str	r3, [sp, #16]
 780 015c 4FF00000 		mov	r0, #0
 781 0160 C4F20200 		movt	r0, 16386
 782 0164 4FF00001 		mov	r1, #0
 783 0168 4FF00B02 		mov	r2, #11
 784 016c 4FF00003 		mov	r3, #0
 785 0170 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
 174:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWMOUT_down, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 786              		.loc 2 174 0
 787 0174 4FF00103 		mov	r3, #1
 788 0178 0093     		str	r3, [sp, #0]
 789 017a 4FF00003 		mov	r3, #0
 790 017e 0193     		str	r3, [sp, #4]
 791 0180 4FF00003 		mov	r3, #0
 792 0184 0293     		str	r3, [sp, #8]
 793 0186 4FF00003 		mov	r3, #0
 794 018a 0393     		str	r3, [sp, #12]
 795 018c 4FF00003 		mov	r3, #0
 796 0190 0493     		str	r3, [sp, #16]
 797 0192 4FF00000 		mov	r0, #0
 798 0196 C4F20200 		movt	r0, 16386
 799 019a 4FF00101 		mov	r1, #1
 800 019e 4FF00B02 		mov	r2, #11
 801 01a2 4FF00003 		mov	r3, #0
 802 01a6 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
 175:main.c        **** 
 176:main.c        ****     PWMC_SetPeriod(PWM, PWMOUT_up, PWM_PERIOD);
 803              		.loc 2 176 0
 804 01aa 4FF00000 		mov	r0, #0
 805 01ae C4F20200 		movt	r0, 16386
 806 01b2 4FF00001 		mov	r1, #0
 807 01b6 4FF06402 		mov	r2, #100
 808 01ba FFF7FEFF 		bl	PWMC_SetPeriod
 177:main.c        ****     PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 809              		.loc 2 177 0
 810 01be 4FF00000 		mov	r0, #0
 811 01c2 C4F20200 		movt	r0, 16386
 812 01c6 4FF00001 		mov	r1, #0
 813 01ca 4FF00002 		mov	r2, #0
 814 01ce FFF7FEFF 		bl	PWMC_SetDutyCycle
 178:main.c        ****     PWMC_SetPeriod(PWM, PWMOUT_down, PWM_PERIOD);
 815              		.loc 2 178 0
 816 01d2 4FF00000 		mov	r0, #0
 817 01d6 C4F20200 		movt	r0, 16386
 818 01da 4FF00101 		mov	r1, #1
 819 01de 4FF06402 		mov	r2, #100
 820 01e2 FFF7FEFF 		bl	PWMC_SetPeriod
 179:main.c        ****     PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 821              		.loc 2 179 0
 822 01e6 4FF00000 		mov	r0, #0
 823 01ea C4F20200 		movt	r0, 16386
 824 01ee 4FF00101 		mov	r1, #1
 825 01f2 4FF00002 		mov	r2, #0
 826 01f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
 180:main.c        **** 
ARM GAS  /tmp/cc17JTRV.s 			page 47


 181:main.c        ****     PWMC_ConfigureSyncChannel(PWM, (1 << PWMOUT_up)|(1 << PWMOUT_down), PWM_SCM_UPDM_MODE1, 0, 0);
 827              		.loc 2 181 0
 828 01fa 4FF00003 		mov	r3, #0
 829 01fe 0093     		str	r3, [sp, #0]
 830 0200 4FF00000 		mov	r0, #0
 831 0204 C4F20200 		movt	r0, 16386
 832 0208 4FF00301 		mov	r1, #3
 833 020c 4FF48032 		mov	r2, #65536
 834 0210 4FF00003 		mov	r3, #0
 835 0214 FFF7FEFF 		bl	PWMC_ConfigureSyncChannel
 182:main.c        ****     PWMC_SetSyncChannelUpdatePeriod(PWM, PWM_SCUP_UPR(1));
 836              		.loc 2 182 0
 837 0218 4FF00000 		mov	r0, #0
 838 021c C4F20200 		movt	r0, 16386
 839 0220 4FF00101 		mov	r1, #1
 840 0224 FFF7FEFF 		bl	PWMC_SetSyncChannelUpdatePeriod
 183:main.c        **** 
 184:main.c        **** 	/* Tick Config */
 185:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 841              		.loc 2 185 0
 842 0228 4FF4D840 		mov	r0, #27648
 843 022c C0F2DC20 		movt	r0, 732
 844 0230 FFF7FEFF 		bl	TimeTick_Configure
 186:main.c        **** 
 187:main.c        **** 	/* LED PIO Config */
 188:main.c        **** 	LEDs_configure();
 845              		.loc 2 188 0
 846 0234 FFF7FEFF 		bl	LEDs_configure
 189:main.c        **** 	LED_clr(statusled);
 847              		.loc 2 189 0
 848 0238 4FF00000 		mov	r0, #0
 849 023c FFF7FEFF 		bl	LED_clr
 190:main.c        **** 
 191:main.c        **** 	/* USB Console Config */
 192:main.c        **** 	USBC_Configure();
 850              		.loc 2 192 0
 851 0240 FFF7FEFF 		bl	USBC_Configure
 193:main.c        **** }
 852              		.loc 2 193 0
 853 0244 07F10C07 		add	r7, r7, #12
 854 0248 BD46     		mov	sp, r7
 855 024a 90BD     		pop	{r4, r7, pc}
 856              		.cfi_endproc
 857              	.LFE38:
 858              		.size	init, .-init
 859              		.section	.rodata
 860 005d 000000   		.align	2
 861              	.LC3:
 862 0060 2D442D20 		.ascii	"-D- set state STOPPED\012\000"
 862      73657420 
 862      73746174 
 862      65205354 
 862      4F505045 
 863 0077 00       		.align	2
 864              	.LC4:
 865 0078 2D442D20 		.ascii	"-D- set state RUN\012\000"
 865      73657420 
ARM GAS  /tmp/cc17JTRV.s 			page 48


 865      73746174 
 865      65205255 
 865      4E0A00
 866 008b 00       		.align	2
 867              	.LC5:
 868 008c 2D442D20 		.ascii	"-D- set state HOLD\012\000"
 868      73657420 
 868      73746174 
 868      6520484F 
 868      4C440A00 
 869              		.align	2
 870              	.LC6:
 871 00a0 2D442D20 		.ascii	"-D- set state RELEASE\012\000"
 871      73657420 
 871      73746174 
 871      65205245 
 871      4C454153 
 872 00b7 00       		.align	2
 873              	.LC7:
 874 00b8 2D442D20 		.ascii	"-D- got invalid state\012\000"
 874      676F7420 
 874      696E7661 
 874      6C696420 
 874      73746174 
 875              		.section	.text.state,"ax",%progbits
 876              		.align	2
 877              		.thumb
 878              		.thumb_func
 879              		.type	state, %function
 880              	state:
 881              	.LFB39:
 194:main.c        **** 
 195:main.c        **** static void state(uint8_t new) 
 196:main.c        **** {
 882              		.loc 2 196 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 8
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              	.LCFI17:
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 14, -4
 890              		.cfi_offset 7, -8
 891 0002 82B0     		sub	sp, sp, #8
 892              	.LCFI18:
 893              		.cfi_def_cfa_offset 16
 894 0004 00AF     		add	r7, sp, #0
 895              	.LCFI19:
 896              		.cfi_def_cfa_register 7
 897 0006 0346     		mov	r3, r0
 898 0008 FB71     		strb	r3, [r7, #7]
 197:main.c        **** 	switch (new) {
 899              		.loc 2 197 0
 900 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 901 000c 03F1FF33 		add	r3, r3, #-1
 902 0010 072B     		cmp	r3, #7
 903 0012 00F2AF80 		bhi	.L33
ARM GAS  /tmp/cc17JTRV.s 			page 49


 904 0016 01A2     		adr	r2, .L38
 905 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 906              		.align	2
 907              	.L38:
 908 001c 3D000000 		.word	.L34+1
 909 0020 91000000 		.word	.L35+1
 910 0024 75010000 		.word	.L33+1
 911 0028 CF000000 		.word	.L36+1
 912 002c 75010000 		.word	.L33+1
 913 0030 75010000 		.word	.L33+1
 914 0034 75010000 		.word	.L33+1
 915 0038 21010000 		.word	.L37+1
 916              	.L34:
 198:main.c        **** 		case STOPPED:
 199:main.c        **** 			mode(STOP, &loop);
 917              		.loc 2 199 0
 918 003c 4FF00300 		mov	r0, #3
 919 0040 40F20001 		movw	r1, #:lower16:loop
 920 0044 C0F20001 		movt	r1, #:upper16:loop
 921 0048 FFF7FEFF 		bl	mode
 200:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 922              		.loc 2 200 0
 923 004c 4FF00000 		mov	r0, #0
 924 0050 C4F20200 		movt	r0, 16386
 925 0054 4FF00001 		mov	r1, #0
 926 0058 4FF00002 		mov	r2, #0
 927 005c FFF7FEFF 		bl	PWMC_SetDutyCycle
 201:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 928              		.loc 2 201 0
 929 0060 4FF00000 		mov	r0, #0
 930 0064 C4F20200 		movt	r0, 16386
 931 0068 4FF00101 		mov	r1, #1
 932 006c 4FF00002 		mov	r2, #0
 933 0070 FFF7FEFF 		bl	PWMC_SetDutyCycle
 202:main.c        **** 			TRACE_DEBUG("set state STOPPED\n");
 934              		.loc 2 202 0
 935 0074 40F20003 		movw	r3, #:lower16:_impure_ptr
 936 0078 C0F20003 		movt	r3, #:upper16:_impure_ptr
 937 007c 1B68     		ldr	r3, [r3, #0]
 938 007e DB68     		ldr	r3, [r3, #12]
 939 0080 1846     		mov	r0, r3
 940 0082 40F20001 		movw	r1, #:lower16:.LC3
 941 0086 C0F20001 		movt	r1, #:upper16:.LC3
 942 008a FFF7FEFF 		bl	fiprintf
 203:main.c        **** 			break;
 943              		.loc 2 203 0
 944 008e 82E0     		b	.L39
 945              	.L35:
 204:main.c        **** 		case RUN:
 205:main.c        **** 			loop.tristate = &rtrip;
 946              		.loc 2 205 0
 947 0090 40F20003 		movw	r3, #:lower16:loop
 948 0094 C0F20003 		movt	r3, #:upper16:loop
 949 0098 40F20002 		movw	r2, #:lower16:rtrip
 950 009c C0F20002 		movt	r2, #:upper16:rtrip
 951 00a0 9A62     		str	r2, [r3, #40]
 206:main.c        **** 			mode(RAMP, &loop);
ARM GAS  /tmp/cc17JTRV.s 			page 50


 952              		.loc 2 206 0
 953 00a2 4FF00200 		mov	r0, #2
 954 00a6 40F20001 		movw	r1, #:lower16:loop
 955 00aa C0F20001 		movt	r1, #:upper16:loop
 956 00ae FFF7FEFF 		bl	mode
 207:main.c        **** 			TRACE_DEBUG("set state RUN\n");
 957              		.loc 2 207 0
 958 00b2 40F20003 		movw	r3, #:lower16:_impure_ptr
 959 00b6 C0F20003 		movt	r3, #:upper16:_impure_ptr
 960 00ba 1B68     		ldr	r3, [r3, #0]
 961 00bc DB68     		ldr	r3, [r3, #12]
 962 00be 1846     		mov	r0, r3
 963 00c0 40F20001 		movw	r1, #:lower16:.LC4
 964 00c4 C0F20001 		movt	r1, #:upper16:.LC4
 965 00c8 FFF7FEFF 		bl	fiprintf
 208:main.c        **** 			break;
 966              		.loc 2 208 0
 967 00cc 63E0     		b	.L39
 968              	.L36:
 209:main.c        **** 		case HOLD:
 210:main.c        **** 			loop.tristate = &ntrip;
 969              		.loc 2 210 0
 970 00ce 40F20003 		movw	r3, #:lower16:loop
 971 00d2 C0F20003 		movt	r3, #:upper16:loop
 972 00d6 40F20002 		movw	r2, #:lower16:ntrip
 973 00da C0F20002 		movt	r2, #:upper16:ntrip
 974 00de 9A62     		str	r2, [r3, #40]
 211:main.c        **** 			loop.SP = loop._x;
 975              		.loc 2 211 0
 976 00e0 40F20003 		movw	r3, #:lower16:loop
 977 00e4 C0F20003 		movt	r3, #:upper16:loop
 978 00e8 9A8C     		ldrh	r2, [r3, #36]
 979 00ea 40F20003 		movw	r3, #:lower16:loop
 980 00ee C0F20003 		movt	r3, #:upper16:loop
 981 00f2 5A80     		strh	r2, [r3, #2]	@ movhi
 212:main.c        **** 			mode(NORMAL, &loop);
 982              		.loc 2 212 0
 983 00f4 4FF00100 		mov	r0, #1
 984 00f8 40F20001 		movw	r1, #:lower16:loop
 985 00fc C0F20001 		movt	r1, #:upper16:loop
 986 0100 FFF7FEFF 		bl	mode
 213:main.c        **** 			TRACE_DEBUG("set state HOLD\n");
 987              		.loc 2 213 0
 988 0104 40F20003 		movw	r3, #:lower16:_impure_ptr
 989 0108 C0F20003 		movt	r3, #:upper16:_impure_ptr
 990 010c 1B68     		ldr	r3, [r3, #0]
 991 010e DB68     		ldr	r3, [r3, #12]
 992 0110 1846     		mov	r0, r3
 993 0112 40F20001 		movw	r1, #:lower16:.LC5
 994 0116 C0F20001 		movt	r1, #:upper16:.LC5
 995 011a FFF7FEFF 		bl	fiprintf
 214:main.c        **** 			break;
 996              		.loc 2 214 0
 997 011e 3AE0     		b	.L39
 998              	.L37:
 215:main.c        **** 		case RELEASE:
 216:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_up, PWM_PERIOD);
ARM GAS  /tmp/cc17JTRV.s 			page 51


 999              		.loc 2 216 0
 1000 0120 4FF00000 		mov	r0, #0
 1001 0124 C4F20200 		movt	r0, 16386
 1002 0128 4FF00001 		mov	r1, #0
 1003 012c 4FF06402 		mov	r2, #100
 1004 0130 FFF7FEFF 		bl	PWMC_SetDutyCycle
 217:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 1005              		.loc 2 217 0
 1006 0134 4FF00000 		mov	r0, #0
 1007 0138 C4F20200 		movt	r0, 16386
 1008 013c 4FF00101 		mov	r1, #1
 1009 0140 4FF00002 		mov	r2, #0
 1010 0144 FFF7FEFF 		bl	PWMC_SetDutyCycle
 218:main.c        **** 			mode(STOP, &loop);
 1011              		.loc 2 218 0
 1012 0148 4FF00300 		mov	r0, #3
 1013 014c 40F20001 		movw	r1, #:lower16:loop
 1014 0150 C0F20001 		movt	r1, #:upper16:loop
 1015 0154 FFF7FEFF 		bl	mode
 219:main.c        **** 			TRACE_DEBUG("set state RELEASE\n");
 1016              		.loc 2 219 0
 1017 0158 40F20003 		movw	r3, #:lower16:_impure_ptr
 1018 015c C0F20003 		movt	r3, #:upper16:_impure_ptr
 1019 0160 1B68     		ldr	r3, [r3, #0]
 1020 0162 DB68     		ldr	r3, [r3, #12]
 1021 0164 1846     		mov	r0, r3
 1022 0166 40F20001 		movw	r1, #:lower16:.LC6
 1023 016a C0F20001 		movt	r1, #:upper16:.LC6
 1024 016e FFF7FEFF 		bl	fiprintf
 220:main.c        **** 			break;
 1025              		.loc 2 220 0
 1026 0172 10E0     		b	.L39
 1027              	.L33:
 221:main.c        **** 		default:
 222:main.c        **** 			TRACE_DEBUG("got invalid state\n");
 1028              		.loc 2 222 0
 1029 0174 40F20003 		movw	r3, #:lower16:_impure_ptr
 1030 0178 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1031 017c 1B68     		ldr	r3, [r3, #0]
 1032 017e DB68     		ldr	r3, [r3, #12]
 1033 0180 1846     		mov	r0, r3
 1034 0182 40F20001 		movw	r1, #:lower16:.LC7
 1035 0186 C0F20001 		movt	r1, #:upper16:.LC7
 1036 018a FFF7FEFF 		bl	fiprintf
 223:main.c        **** 			state(STOPPED);
 1037              		.loc 2 223 0
 1038 018e 4FF00100 		mov	r0, #1
 1039 0192 FFF735FF 		bl	state
 1040              	.L39:
 224:main.c        **** 	}
 225:main.c        **** 	_state = new;
 1041              		.loc 2 225 0
 1042 0196 40F20003 		movw	r3, #:lower16:_state
 1043 019a C0F20003 		movt	r3, #:upper16:_state
 1044 019e FA79     		ldrb	r2, [r7, #7]
 1045 01a0 1A70     		strb	r2, [r3, #0]
 226:main.c        **** }
ARM GAS  /tmp/cc17JTRV.s 			page 52


 1046              		.loc 2 226 0
 1047 01a2 07F10807 		add	r7, r7, #8
 1048 01a6 BD46     		mov	sp, r7
 1049 01a8 80BD     		pop	{r7, pc}
 1050              		.cfi_endproc
 1051              	.LFE39:
 1052              		.size	state, .-state
 1053 01aa 00BF     		.section	.rodata
 1054 00cf 00       		.align	2
 1055              	.LC8:
 1056 00d0 25632025 		.ascii	"%c %u %u %u\000"
 1056      75202575 
 1056      20257500 
 1057              		.align	2
 1058              	.LC9:
 1059 00dc 2D442D20 		.ascii	"-D- got %i arguments\000"
 1059      676F7420 
 1059      25692061 
 1059      7267756D 
 1059      656E7473 
 1060 00f1 000000   		.align	2
 1061              	.LC10:
 1062 00f4 25752025 		.ascii	"%u %u %u\012\000"
 1062      75202575 
 1062      0A00
 1063 00fe 0000     		.align	2
 1064              	.LC11:
 1065 0100 2D492D20 		.ascii	"-I- set ramp endpoint to %u\012\000"
 1065      73657420 
 1065      72616D70 
 1065      20656E64 
 1065      706F696E 
 1066 011d 000000   		.align	2
 1067              	.LC12:
 1068 0120 25750A00 		.ascii	"%u\012\000"
 1069              		.align	2
 1070              	.LC13:
 1071 0124 2D492D20 		.ascii	"-I- set ramp slope to %i\012\000"
 1071      73657420 
 1071      72616D70 
 1071      20736C6F 
 1071      70652074 
 1072 013e 0000     		.align	2
 1073              	.LC14:
 1074 0140 25690A00 		.ascii	"%i\012\000"
 1075              		.align	2
 1076              	.LC15:
 1077 0144 2D492D20 		.ascii	"-I- set PID factors to %u, %u, %u\012\000"
 1077      73657420 
 1077      50494420 
 1077      66616374 
 1077      6F727320 
 1078 0167 00       		.align	2
 1079              	.LC16:
 1080 0168 2D492D20 		.ascii	"-I- set releasetime to %u\012\000"
 1080      73657420 
 1080      72656C65 
ARM GAS  /tmp/cc17JTRV.s 			page 53


 1080      61736574 
 1080      696D6520 
 1081 0183 00       		.align	2
 1082              	.LC17:
 1083 0184 2D492D20 		.ascii	"-I- set dxmax to %u\012\000"
 1083      73657420 
 1083      64786D61 
 1083      7820746F 
 1083      2025750A 
 1084 0199 000000   		.align	2
 1085              	.LC18:
 1086 019c 2D492D20 		.ascii	"-I- set setpoint to %u\012\000"
 1086      73657420 
 1086      73657470 
 1086      6F696E74 
 1086      20746F20 
 1087              		.section	.text.cli,"ax",%progbits
 1088              		.align	2
 1089              		.thumb
 1090              		.thumb_func
 1091              		.type	cli, %function
 1092              	cli:
 1093              	.LFB40:
 227:main.c        **** 
 228:main.c        **** static void cli()
 229:main.c        **** {
 1094              		.loc 2 229 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 56
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098 0000 90B5     		push	{r4, r7, lr}
 1099              	.LCFI20:
 1100              		.cfi_def_cfa_offset 12
 1101              		.cfi_offset 14, -4
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 4, -12
 1104 0002 91B0     		sub	sp, sp, #68
 1105              	.LCFI21:
 1106              		.cfi_def_cfa_offset 80
 1107 0004 02AF     		add	r7, sp, #8
 1108              	.LCFI22:
 1109              		.cfi_def_cfa 7, 72
 230:main.c        **** 	int argc;
 231:main.c        **** 	int argv[3];
 232:main.c        **** 	char line[32];
 233:main.c        **** 	char cmd = 0;
 1110              		.loc 2 233 0
 1111 0006 4FF00003 		mov	r3, #0
 1112 000a FB71     		strb	r3, [r7, #7]
 234:main.c        **** 
 235:main.c        **** 	if (!USBC_hasData())
 1113              		.loc 2 235 0
 1114 000c FFF7FEFF 		bl	USBC_hasData
 1115 0010 0346     		mov	r3, r0
 1116 0012 002B     		cmp	r3, #0
 1117 0014 00F0D481 		beq	.L70
 1118              	.L41:
ARM GAS  /tmp/cc17JTRV.s 			page 54


 236:main.c        **** 		return;
 237:main.c        **** 
 238:main.c        **** 	gets(line);
 1119              		.loc 2 238 0
 1120 0018 07F10803 		add	r3, r7, #8
 1121 001c 1846     		mov	r0, r3
 1122 001e FFF7FEFF 		bl	gets
 239:main.c        **** 	argc = sscanf(line, "%c %u %u %u", &cmd, argv, argv+1, argv+2) - 1;
 1123              		.loc 2 239 0
 1124 0022 07F10801 		add	r1, r7, #8
 1125 0026 07F10702 		add	r2, r7, #7
 1126 002a 07F12803 		add	r3, r7, #40
 1127 002e 07F12800 		add	r0, r7, #40
 1128 0032 00F10400 		add	r0, r0, #4
 1129 0036 0090     		str	r0, [sp, #0]
 1130 0038 07F12800 		add	r0, r7, #40
 1131 003c 00F10800 		add	r0, r0, #8
 1132 0040 0190     		str	r0, [sp, #4]
 1133 0042 0846     		mov	r0, r1
 1134 0044 40F20001 		movw	r1, #:lower16:.LC8
 1135 0048 C0F20001 		movt	r1, #:upper16:.LC8
 1136 004c FFF7FEFF 		bl	siscanf
 1137 0050 0346     		mov	r3, r0
 1138 0052 03F1FF33 		add	r3, r3, #-1
 1139 0056 7B63     		str	r3, [r7, #52]
 240:main.c        **** 	TRACE_DEBUG("got %i arguments", argc);
 1140              		.loc 2 240 0
 1141 0058 40F20003 		movw	r3, #:lower16:_impure_ptr
 1142 005c C0F20003 		movt	r3, #:upper16:_impure_ptr
 1143 0060 1B68     		ldr	r3, [r3, #0]
 1144 0062 DB68     		ldr	r3, [r3, #12]
 1145 0064 1846     		mov	r0, r3
 1146 0066 40F20001 		movw	r1, #:lower16:.LC9
 1147 006a C0F20001 		movt	r1, #:upper16:.LC9
 1148 006e 7A6B     		ldr	r2, [r7, #52]
 1149 0070 FFF7FEFF 		bl	fiprintf
 241:main.c        **** 
 242:main.c        **** 	if (cmd == 's')
 1150              		.loc 2 242 0
 1151 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1152 0076 732B     		cmp	r3, #115
 1153 0078 04D1     		bne	.L43
 243:main.c        **** 		state(STOPPED);
 1154              		.loc 2 243 0
 1155 007a 4FF00100 		mov	r0, #1
 1156 007e FFF7FEFF 		bl	state
 1157 0082 21E0     		b	.L44
 1158              	.L43:
 244:main.c        **** 	else if (cmd == 'r')
 1159              		.loc 2 244 0
 1160 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1161 0086 722B     		cmp	r3, #114
 1162 0088 04D1     		bne	.L45
 245:main.c        **** 		state(RELEASE);
 1163              		.loc 2 245 0
 1164 008a 4FF00800 		mov	r0, #8
 1165 008e FFF7FEFF 		bl	state
ARM GAS  /tmp/cc17JTRV.s 			page 55


 1166 0092 19E0     		b	.L44
 1167              	.L45:
 246:main.c        **** 	else if (cmd == '?')
 1168              		.loc 2 246 0
 1169 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1170 0096 3F2B     		cmp	r3, #63
 1171 0098 16D1     		bne	.L44
 247:main.c        **** 		printf("%u %u %u\n", _state, input[0], input[1]);
 1172              		.loc 2 247 0
 1173 009a 40F20003 		movw	r3, #:lower16:_state
 1174 009e C0F20003 		movt	r3, #:upper16:_state
 1175 00a2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1176 00a4 1946     		mov	r1, r3
 1177 00a6 40F20003 		movw	r3, #:lower16:input
 1178 00aa C0F20003 		movt	r3, #:upper16:input
 1179 00ae 1B88     		ldrh	r3, [r3, #0]
 1180 00b0 1A46     		mov	r2, r3
 1181 00b2 40F20003 		movw	r3, #:lower16:input
 1182 00b6 C0F20003 		movt	r3, #:upper16:input
 1183 00ba 5B88     		ldrh	r3, [r3, #2]
 1184 00bc 40F20000 		movw	r0, #:lower16:.LC10
 1185 00c0 C0F20000 		movt	r0, #:upper16:.LC10
 1186 00c4 FFF7FEFF 		bl	iprintf
 1187              	.L44:
 248:main.c        **** 
 249:main.c        **** 	switch (_state) {
 1188              		.loc 2 249 0
 1189 00c8 40F20003 		movw	r3, #:lower16:_state
 1190 00cc C0F20003 		movt	r3, #:upper16:_state
 1191 00d0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1192 00d2 03F1FF33 		add	r3, r3, #-1
 1193 00d6 072B     		cmp	r3, #7
 1194 00d8 00F26D81 		bhi	.L46
 1195 00dc 01A2     		adr	r2, .L51
 1196 00de 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1197 00e2 00BF     		.align	2
 1198              	.L51:
 1199 00e4 05010000 		.word	.L47+1
 1200 00e8 C5030000 		.word	.L71+1
 1201 00ec B7030000 		.word	.L46+1
 1202 00f0 47030000 		.word	.L49+1
 1203 00f4 B7030000 		.word	.L46+1
 1204 00f8 B7030000 		.word	.L46+1
 1205 00fc B7030000 		.word	.L46+1
 1206 0100 C5030000 		.word	.L71+1
 1207              	.L47:
 250:main.c        **** 		case STOPPED:
 251:main.c        **** 			if (cmd == 'g') {
 1208              		.loc 2 251 0
 1209 0104 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1210 0106 672B     		cmp	r3, #103
 1211 0108 04D1     		bne	.L52
 252:main.c        **** 				state(RUN);
 1212              		.loc 2 252 0
 1213 010a 4FF00200 		mov	r0, #2
 1214 010e FFF7FEFF 		bl	state
 253:main.c        **** 			}
ARM GAS  /tmp/cc17JTRV.s 			page 56


 254:main.c        **** 			else if (cmd == 'h') {
 255:main.c        **** 				state(HOLD);
 256:main.c        **** 			}
 257:main.c        **** 			else if (cmd == 'e') {
 258:main.c        **** 				if (argc == 1) {
 259:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 260:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 261:main.c        **** 				}
 262:main.c        **** 				printf("%u\n", loop.rSP);
 263:main.c        **** 			}
 264:main.c        **** 			else if (cmd == 'v') {
 265:main.c        **** 				if (argc == 1) {
 266:main.c        **** 					loop.rSlope = *argv;
 267:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 268:main.c        **** 				}
 269:main.c        **** 				printf("%i\n", loop.rSlope);
 270:main.c        **** 			}
 271:main.c        **** 			else if (cmd == 'k') {
 272:main.c        **** 				if (argc == 3) {
 273:main.c        **** 					loop.Kp = argv[0];
 274:main.c        **** 					loop.Ki = argv[1];
 275:main.c        **** 					loop.Kd = argv[2];
 276:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 277:main.c        **** 				}
 278:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 279:main.c        **** 			}
 280:main.c        **** 			else if (cmd == 't') {
 281:main.c        **** 				if (argc == 1) {
 282:main.c        **** 					releasetime = *argv;
 283:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 284:main.c        **** 				}
 285:main.c        **** 				printf("%u\n", releasetime);
 286:main.c        **** 			}
 287:main.c        **** 			else if (cmd == 'd') {
 288:main.c        **** 				if (argc == 2) {
 289:main.c        **** 					dxmax = *argv;
 290:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 291:main.c        **** 				}
 292:main.c        **** 				printf("%u\n", dxmax);
 293:main.c        **** 			}
 294:main.c        **** 			break;
 1215              		.loc 2 294 0
 1216 0112 59E1     		b	.L72
 1217              	.L52:
 254:main.c        **** 			else if (cmd == 'h') {
 1218              		.loc 2 254 0
 1219 0114 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1220 0116 682B     		cmp	r3, #104
 1221 0118 04D1     		bne	.L54
 255:main.c        **** 				state(HOLD);
 1222              		.loc 2 255 0
 1223 011a 4FF00400 		mov	r0, #4
 1224 011e FFF7FEFF 		bl	state
 1225              		.loc 2 294 0
 1226 0122 51E1     		b	.L72
 1227              	.L54:
 257:main.c        **** 			else if (cmd == 'e') {
ARM GAS  /tmp/cc17JTRV.s 			page 57


 1228              		.loc 2 257 0
 1229 0124 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1230 0126 652B     		cmp	r3, #101
 1231 0128 34D1     		bne	.L55
 258:main.c        **** 				if (argc == 1) {
 1232              		.loc 2 258 0
 1233 012a 7B6B     		ldr	r3, [r7, #52]
 1234 012c 012B     		cmp	r3, #1
 1235 012e 24D1     		bne	.L56
 259:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1236              		.loc 2 259 0
 1237 0130 BB6A     		ldr	r3, [r7, #40]
 1238 0132 002B     		cmp	r3, #0
 1239 0134 07DB     		blt	.L57
 259:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1240              		.loc 2 259 0 is_stmt 0 discriminator 1
 1241 0136 BA6A     		ldr	r2, [r7, #40]
 1242 0138 40F6FF73 		movw	r3, #4095
 1243 013c 9A42     		cmp	r2, r3
 1244 013e B8BF     		it	lt
 1245 0140 1346     		movlt	r3, r2
 1246 0142 9AB2     		uxth	r2, r3
 1247 0144 01E0     		b	.L58
 1248              	.L57:
 259:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1249              		.loc 2 259 0 discriminator 2
 1250 0146 4FF00002 		mov	r2, #0
 1251              	.L58:
 259:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1252              		.loc 2 259 0 discriminator 3
 1253 014a 40F20003 		movw	r3, #:lower16:loop
 1254 014e C0F20003 		movt	r3, #:upper16:loop
 1255 0152 9A80     		strh	r2, [r3, #4]	@ movhi
 260:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 1256              		.loc 2 260 0 is_stmt 1 discriminator 3
 1257 0154 40F20003 		movw	r3, #:lower16:_impure_ptr
 1258 0158 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1259 015c 1B68     		ldr	r3, [r3, #0]
 1260 015e DA68     		ldr	r2, [r3, #12]
 1261 0160 40F20003 		movw	r3, #:lower16:loop
 1262 0164 C0F20003 		movt	r3, #:upper16:loop
 1263 0168 9B88     		ldrh	r3, [r3, #4]
 1264 016a 1046     		mov	r0, r2
 1265 016c 40F20001 		movw	r1, #:lower16:.LC11
 1266 0170 C0F20001 		movt	r1, #:upper16:.LC11
 1267 0174 1A46     		mov	r2, r3
 1268 0176 FFF7FEFF 		bl	fiprintf
 1269              	.L56:
 262:main.c        **** 				printf("%u\n", loop.rSP);
 1270              		.loc 2 262 0
 1271 017a 40F20003 		movw	r3, #:lower16:loop
 1272 017e C0F20003 		movt	r3, #:upper16:loop
 1273 0182 9B88     		ldrh	r3, [r3, #4]
 1274 0184 40F20000 		movw	r0, #:lower16:.LC12
 1275 0188 C0F20000 		movt	r0, #:upper16:.LC12
 1276 018c 1946     		mov	r1, r3
 1277 018e FFF7FEFF 		bl	iprintf
ARM GAS  /tmp/cc17JTRV.s 			page 58


 1278              		.loc 2 294 0
 1279 0192 19E1     		b	.L72
 1280              	.L55:
 264:main.c        **** 			else if (cmd == 'v') {
 1281              		.loc 2 264 0
 1282 0194 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1283 0196 762B     		cmp	r3, #118
 1284 0198 28D1     		bne	.L59
 265:main.c        **** 				if (argc == 1) {
 1285              		.loc 2 265 0
 1286 019a 7B6B     		ldr	r3, [r7, #52]
 1287 019c 012B     		cmp	r3, #1
 1288 019e 18D1     		bne	.L60
 266:main.c        **** 					loop.rSlope = *argv;
 1289              		.loc 2 266 0
 1290 01a0 BA6A     		ldr	r2, [r7, #40]
 1291 01a2 40F20003 		movw	r3, #:lower16:loop
 1292 01a6 C0F20003 		movt	r3, #:upper16:loop
 1293 01aa 9A60     		str	r2, [r3, #8]
 267:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 1294              		.loc 2 267 0
 1295 01ac 40F20003 		movw	r3, #:lower16:_impure_ptr
 1296 01b0 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1297 01b4 1B68     		ldr	r3, [r3, #0]
 1298 01b6 DA68     		ldr	r2, [r3, #12]
 1299 01b8 40F20003 		movw	r3, #:lower16:loop
 1300 01bc C0F20003 		movt	r3, #:upper16:loop
 1301 01c0 9B68     		ldr	r3, [r3, #8]
 1302 01c2 1046     		mov	r0, r2
 1303 01c4 40F20001 		movw	r1, #:lower16:.LC13
 1304 01c8 C0F20001 		movt	r1, #:upper16:.LC13
 1305 01cc 1A46     		mov	r2, r3
 1306 01ce FFF7FEFF 		bl	fiprintf
 1307              	.L60:
 269:main.c        **** 				printf("%i\n", loop.rSlope);
 1308              		.loc 2 269 0
 1309 01d2 40F20003 		movw	r3, #:lower16:loop
 1310 01d6 C0F20003 		movt	r3, #:upper16:loop
 1311 01da 9B68     		ldr	r3, [r3, #8]
 1312 01dc 40F20000 		movw	r0, #:lower16:.LC14
 1313 01e0 C0F20000 		movt	r0, #:upper16:.LC14
 1314 01e4 1946     		mov	r1, r3
 1315 01e6 FFF7FEFF 		bl	iprintf
 1316              		.loc 2 294 0
 1317 01ea EDE0     		b	.L72
 1318              	.L59:
 271:main.c        **** 			else if (cmd == 'k') {
 1319              		.loc 2 271 0
 1320 01ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1321 01ee 6B2B     		cmp	r3, #107
 1322 01f0 4FD1     		bne	.L61
 272:main.c        **** 				if (argc == 3) {
 1323              		.loc 2 272 0
 1324 01f2 7B6B     		ldr	r3, [r7, #52]
 1325 01f4 032B     		cmp	r3, #3
 1326 01f6 34D1     		bne	.L62
 273:main.c        **** 					loop.Kp = argv[0];
ARM GAS  /tmp/cc17JTRV.s 			page 59


 1327              		.loc 2 273 0
 1328 01f8 BB6A     		ldr	r3, [r7, #40]
 1329 01fa 9AB2     		uxth	r2, r3
 1330 01fc 40F20003 		movw	r3, #:lower16:loop
 1331 0200 C0F20003 		movt	r3, #:upper16:loop
 1332 0204 9A81     		strh	r2, [r3, #12]	@ movhi
 274:main.c        **** 					loop.Ki = argv[1];
 1333              		.loc 2 274 0
 1334 0206 FB6A     		ldr	r3, [r7, #44]
 1335 0208 9AB2     		uxth	r2, r3
 1336 020a 40F20003 		movw	r3, #:lower16:loop
 1337 020e C0F20003 		movt	r3, #:upper16:loop
 1338 0212 DA81     		strh	r2, [r3, #14]	@ movhi
 275:main.c        **** 					loop.Kd = argv[2];
 1339              		.loc 2 275 0
 1340 0214 3B6B     		ldr	r3, [r7, #48]
 1341 0216 9AB2     		uxth	r2, r3
 1342 0218 40F20003 		movw	r3, #:lower16:loop
 1343 021c C0F20003 		movt	r3, #:upper16:loop
 1344 0220 1A82     		strh	r2, [r3, #16]	@ movhi
 276:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 1345              		.loc 2 276 0
 1346 0222 40F20003 		movw	r3, #:lower16:_impure_ptr
 1347 0226 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1348 022a 1B68     		ldr	r3, [r3, #0]
 1349 022c D968     		ldr	r1, [r3, #12]
 1350 022e 40F20003 		movw	r3, #:lower16:loop
 1351 0232 C0F20003 		movt	r3, #:upper16:loop
 1352 0236 9B89     		ldrh	r3, [r3, #12]
 1353 0238 1A46     		mov	r2, r3
 1354 023a 40F20003 		movw	r3, #:lower16:loop
 1355 023e C0F20003 		movt	r3, #:upper16:loop
 1356 0242 DB89     		ldrh	r3, [r3, #14]
 1357 0244 1C46     		mov	r4, r3
 1358 0246 40F20003 		movw	r3, #:lower16:loop
 1359 024a C0F20003 		movt	r3, #:upper16:loop
 1360 024e 1B8A     		ldrh	r3, [r3, #16]
 1361 0250 0093     		str	r3, [sp, #0]
 1362 0252 0846     		mov	r0, r1
 1363 0254 40F20001 		movw	r1, #:lower16:.LC15
 1364 0258 C0F20001 		movt	r1, #:upper16:.LC15
 1365 025c 2346     		mov	r3, r4
 1366 025e FFF7FEFF 		bl	fiprintf
 1367              	.L62:
 278:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 1368              		.loc 2 278 0
 1369 0262 40F20003 		movw	r3, #:lower16:loop
 1370 0266 C0F20003 		movt	r3, #:upper16:loop
 1371 026a 9B89     		ldrh	r3, [r3, #12]
 1372 026c 1946     		mov	r1, r3
 1373 026e 40F20003 		movw	r3, #:lower16:loop
 1374 0272 C0F20003 		movt	r3, #:upper16:loop
 1375 0276 DB89     		ldrh	r3, [r3, #14]
 1376 0278 1A46     		mov	r2, r3
 1377 027a 40F20003 		movw	r3, #:lower16:loop
 1378 027e C0F20003 		movt	r3, #:upper16:loop
 1379 0282 1B8A     		ldrh	r3, [r3, #16]
ARM GAS  /tmp/cc17JTRV.s 			page 60


 1380 0284 40F20000 		movw	r0, #:lower16:.LC10
 1381 0288 C0F20000 		movt	r0, #:upper16:.LC10
 1382 028c FFF7FEFF 		bl	iprintf
 1383              		.loc 2 294 0
 1384 0290 9AE0     		b	.L72
 1385              	.L61:
 280:main.c        **** 			else if (cmd == 't') {
 1386              		.loc 2 280 0
 1387 0292 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1388 0294 742B     		cmp	r3, #116
 1389 0296 29D1     		bne	.L63
 281:main.c        **** 				if (argc == 1) {
 1390              		.loc 2 281 0
 1391 0298 7B6B     		ldr	r3, [r7, #52]
 1392 029a 012B     		cmp	r3, #1
 1393 029c 19D1     		bne	.L64
 282:main.c        **** 					releasetime = *argv;
 1394              		.loc 2 282 0
 1395 029e BB6A     		ldr	r3, [r7, #40]
 1396 02a0 1A46     		mov	r2, r3
 1397 02a2 40F20003 		movw	r3, #:lower16:releasetime
 1398 02a6 C0F20003 		movt	r3, #:upper16:releasetime
 1399 02aa 1A60     		str	r2, [r3, #0]
 283:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 1400              		.loc 2 283 0
 1401 02ac 40F20003 		movw	r3, #:lower16:_impure_ptr
 1402 02b0 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1403 02b4 1B68     		ldr	r3, [r3, #0]
 1404 02b6 DA68     		ldr	r2, [r3, #12]
 1405 02b8 40F20003 		movw	r3, #:lower16:releasetime
 1406 02bc C0F20003 		movt	r3, #:upper16:releasetime
 1407 02c0 1B68     		ldr	r3, [r3, #0]
 1408 02c2 1046     		mov	r0, r2
 1409 02c4 40F20001 		movw	r1, #:lower16:.LC16
 1410 02c8 C0F20001 		movt	r1, #:upper16:.LC16
 1411 02cc 1A46     		mov	r2, r3
 1412 02ce FFF7FEFF 		bl	fiprintf
 1413              	.L64:
 285:main.c        **** 				printf("%u\n", releasetime);
 1414              		.loc 2 285 0
 1415 02d2 40F20003 		movw	r3, #:lower16:releasetime
 1416 02d6 C0F20003 		movt	r3, #:upper16:releasetime
 1417 02da 1B68     		ldr	r3, [r3, #0]
 1418 02dc 40F20000 		movw	r0, #:lower16:.LC12
 1419 02e0 C0F20000 		movt	r0, #:upper16:.LC12
 1420 02e4 1946     		mov	r1, r3
 1421 02e6 FFF7FEFF 		bl	iprintf
 1422              		.loc 2 294 0
 1423 02ea 6DE0     		b	.L72
 1424              	.L63:
 287:main.c        **** 			else if (cmd == 'd') {
 1425              		.loc 2 287 0
 1426 02ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1427 02ee 642B     		cmp	r3, #100
 1428 02f0 6AD1     		bne	.L72
 288:main.c        **** 				if (argc == 2) {
 1429              		.loc 2 288 0
ARM GAS  /tmp/cc17JTRV.s 			page 61


 1430 02f2 7B6B     		ldr	r3, [r7, #52]
 1431 02f4 022B     		cmp	r3, #2
 1432 02f6 19D1     		bne	.L65
 289:main.c        **** 					dxmax = *argv;
 1433              		.loc 2 289 0
 1434 02f8 BB6A     		ldr	r3, [r7, #40]
 1435 02fa 1A46     		mov	r2, r3
 1436 02fc 40F20003 		movw	r3, #:lower16:dxmax
 1437 0300 C0F20003 		movt	r3, #:upper16:dxmax
 1438 0304 1A60     		str	r2, [r3, #0]
 290:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 1439              		.loc 2 290 0
 1440 0306 40F20003 		movw	r3, #:lower16:_impure_ptr
 1441 030a C0F20003 		movt	r3, #:upper16:_impure_ptr
 1442 030e 1B68     		ldr	r3, [r3, #0]
 1443 0310 DA68     		ldr	r2, [r3, #12]
 1444 0312 40F20003 		movw	r3, #:lower16:dxmax
 1445 0316 C0F20003 		movt	r3, #:upper16:dxmax
 1446 031a 1B68     		ldr	r3, [r3, #0]
 1447 031c 1046     		mov	r0, r2
 1448 031e 40F20001 		movw	r1, #:lower16:.LC17
 1449 0322 C0F20001 		movt	r1, #:upper16:.LC17
 1450 0326 1A46     		mov	r2, r3
 1451 0328 FFF7FEFF 		bl	fiprintf
 1452              	.L65:
 292:main.c        **** 				printf("%u\n", dxmax);
 1453              		.loc 2 292 0
 1454 032c 40F20003 		movw	r3, #:lower16:dxmax
 1455 0330 C0F20003 		movt	r3, #:upper16:dxmax
 1456 0334 1B68     		ldr	r3, [r3, #0]
 1457 0336 40F20000 		movw	r0, #:lower16:.LC12
 1458 033a C0F20000 		movt	r0, #:upper16:.LC12
 1459 033e 1946     		mov	r1, r3
 1460 0340 FFF7FEFF 		bl	iprintf
 1461              		.loc 2 294 0
 1462 0344 40E0     		b	.L72
 1463              	.L49:
 295:main.c        **** 
 296:main.c        **** 		case RUN:
 297:main.c        **** 			break;
 298:main.c        **** 
 299:main.c        **** 		case HOLD:
 300:main.c        **** 			if (cmd == 'w') {
 1464              		.loc 2 300 0
 1465 0346 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1466 0348 772B     		cmp	r3, #119
 1467 034a 3FD1     		bne	.L73
 301:main.c        **** 				if (argc == 1) {
 1468              		.loc 2 301 0
 1469 034c 7B6B     		ldr	r3, [r7, #52]
 1470 034e 012B     		cmp	r3, #1
 1471 0350 24D1     		bne	.L67
 302:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1472              		.loc 2 302 0
 1473 0352 BB6A     		ldr	r3, [r7, #40]
 1474 0354 002B     		cmp	r3, #0
 1475 0356 07DB     		blt	.L68
ARM GAS  /tmp/cc17JTRV.s 			page 62


 1476              		.loc 2 302 0 is_stmt 0 discriminator 1
 1477 0358 BA6A     		ldr	r2, [r7, #40]
 1478 035a 40F6FF73 		movw	r3, #4095
 1479 035e 9A42     		cmp	r2, r3
 1480 0360 B8BF     		it	lt
 1481 0362 1346     		movlt	r3, r2
 1482 0364 9AB2     		uxth	r2, r3
 1483 0366 01E0     		b	.L69
 1484              	.L68:
 1485              		.loc 2 302 0 discriminator 2
 1486 0368 4FF00002 		mov	r2, #0
 1487              	.L69:
 1488              		.loc 2 302 0 discriminator 3
 1489 036c 40F20003 		movw	r3, #:lower16:loop
 1490 0370 C0F20003 		movt	r3, #:upper16:loop
 1491 0374 5A80     		strh	r2, [r3, #2]	@ movhi
 303:main.c        **** 					TRACE_INFO("set setpoint to %u\n", loop.SP);
 1492              		.loc 2 303 0 is_stmt 1 discriminator 3
 1493 0376 40F20003 		movw	r3, #:lower16:_impure_ptr
 1494 037a C0F20003 		movt	r3, #:upper16:_impure_ptr
 1495 037e 1B68     		ldr	r3, [r3, #0]
 1496 0380 DA68     		ldr	r2, [r3, #12]
 1497 0382 40F20003 		movw	r3, #:lower16:loop
 1498 0386 C0F20003 		movt	r3, #:upper16:loop
 1499 038a 5B88     		ldrh	r3, [r3, #2]
 1500 038c 1046     		mov	r0, r2
 1501 038e 40F20001 		movw	r1, #:lower16:.LC18
 1502 0392 C0F20001 		movt	r1, #:upper16:.LC18
 1503 0396 1A46     		mov	r2, r3
 1504 0398 FFF7FEFF 		bl	fiprintf
 1505              	.L67:
 304:main.c        **** 				}
 305:main.c        **** 				printf("%u\n", loop.SP);
 1506              		.loc 2 305 0
 1507 039c 40F20003 		movw	r3, #:lower16:loop
 1508 03a0 C0F20003 		movt	r3, #:upper16:loop
 1509 03a4 5B88     		ldrh	r3, [r3, #2]
 1510 03a6 40F20000 		movw	r0, #:lower16:.LC12
 1511 03aa C0F20000 		movt	r0, #:upper16:.LC12
 1512 03ae 1946     		mov	r1, r3
 1513 03b0 FFF7FEFF 		bl	iprintf
 306:main.c        **** 			}
 307:main.c        **** 			break;
 1514              		.loc 2 307 0
 1515 03b4 0AE0     		b	.L73
 1516              	.L46:
 308:main.c        **** 
 309:main.c        **** 		case RELEASE:
 310:main.c        **** 			break;
 311:main.c        **** 
 312:main.c        **** 		default:
 313:main.c        **** 			state(STOPPED);
 1517              		.loc 2 313 0
 1518 03b6 4FF00100 		mov	r0, #1
 1519 03ba FFF7FEFF 		bl	state
 1520 03be 06E0     		b	.L40
 1521              	.L70:
ARM GAS  /tmp/cc17JTRV.s 			page 63


 236:main.c        **** 		return;
 1522              		.loc 2 236 0
 1523 03c0 00BF     		nop
 1524 03c2 04E0     		b	.L40
 1525              	.L71:
 297:main.c        **** 			break;
 1526              		.loc 2 297 0
 1527 03c4 00BF     		nop
 1528 03c6 02E0     		b	.L40
 1529              	.L72:
 294:main.c        **** 			break;
 1530              		.loc 2 294 0
 1531 03c8 00BF     		nop
 1532 03ca 00E0     		b	.L40
 1533              	.L73:
 307:main.c        **** 			break;
 1534              		.loc 2 307 0
 1535 03cc 00BF     		nop
 1536              	.L40:
 314:main.c        **** 	}
 315:main.c        **** }
 1537              		.loc 2 315 0
 1538 03ce 07F13C07 		add	r7, r7, #60
 1539 03d2 BD46     		mov	sp, r7
 1540 03d4 90BD     		pop	{r4, r7, pc}
 1541              		.cfi_endproc
 1542              	.LFE40:
 1543              		.size	cli, .-cli
 1544 03d6 00BF     		.text
 1545              	.Letext0:
 1546              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1547              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1548              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 1549              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1550              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1551              		.file 8 "libchip/include/SAM3S.h"
 1552              		.file 9 "controller.h"
 1553              		.section	.debug_info,"",%progbits
 1554              	.Ldebug_info0:
 1555 0000 061A0000 		.4byte	0x1a06
 1556 0004 0200     		.2byte	0x2
 1557 0006 00000000 		.4byte	.Ldebug_abbrev0
 1558 000a 04       		.byte	0x4
 1559 000b 01       		.uleb128 0x1
 1560 000c FF0A0000 		.4byte	.LASF340
 1561 0010 01       		.byte	0x1
 1562 0011 66060000 		.4byte	.LASF341
 1563 0015 DD090000 		.4byte	.LASF342
 1564 0019 00000000 		.4byte	0
 1565 001d 00000000 		.4byte	0
 1566 0021 00000000 		.4byte	.Ldebug_ranges0+0
 1567 0025 00000000 		.4byte	.Ldebug_line0
 1568 0029 02       		.uleb128 0x2
 1569 002a 01       		.byte	0x1
 1570 002b 06       		.byte	0x6
 1571 002c 52020000 		.4byte	.LASF0
 1572 0030 02       		.uleb128 0x2
ARM GAS  /tmp/cc17JTRV.s 			page 64


 1573 0031 01       		.byte	0x1
 1574 0032 08       		.byte	0x8
 1575 0033 94020000 		.4byte	.LASF1
 1576 0037 02       		.uleb128 0x2
 1577 0038 02       		.byte	0x2
 1578 0039 05       		.byte	0x5
 1579 003a 420A0000 		.4byte	.LASF2
 1580 003e 02       		.uleb128 0x2
 1581 003f 02       		.byte	0x2
 1582 0040 07       		.byte	0x7
 1583 0041 840B0000 		.4byte	.LASF3
 1584 0045 03       		.uleb128 0x3
 1585 0046 04       		.byte	0x4
 1586 0047 05       		.byte	0x5
 1587 0048 696E7400 		.ascii	"int\000"
 1588 004c 02       		.uleb128 0x2
 1589 004d 04       		.byte	0x4
 1590 004e 07       		.byte	0x7
 1591 004f F9060000 		.4byte	.LASF4
 1592 0053 02       		.uleb128 0x2
 1593 0054 08       		.byte	0x8
 1594 0055 05       		.byte	0x5
 1595 0056 F3050000 		.4byte	.LASF5
 1596 005a 02       		.uleb128 0x2
 1597 005b 08       		.byte	0x8
 1598 005c 07       		.byte	0x7
 1599 005d 19080000 		.4byte	.LASF6
 1600 0061 04       		.uleb128 0x4
 1601 0062 49050000 		.4byte	.LASF8
 1602 0066 03       		.byte	0x3
 1603 0067 07       		.byte	0x7
 1604 0068 45000000 		.4byte	0x45
 1605 006c 02       		.uleb128 0x2
 1606 006d 04       		.byte	0x4
 1607 006e 05       		.byte	0x5
 1608 006f AA010000 		.4byte	.LASF7
 1609 0073 04       		.uleb128 0x4
 1610 0074 D3070000 		.4byte	.LASF9
 1611 0078 04       		.byte	0x4
 1612 0079 2C       		.byte	0x2c
 1613 007a 6C000000 		.4byte	0x6c
 1614 007e 05       		.uleb128 0x5
 1615 007f 19090000 		.4byte	.LASF10
 1616 0083 05       		.byte	0x5
 1617 0084 6101     		.2byte	0x161
 1618 0086 4C000000 		.4byte	0x4c
 1619 008a 06       		.uleb128 0x6
 1620 008b 04       		.byte	0x4
 1621 008c 04       		.byte	0x4
 1622 008d 46       		.byte	0x46
 1623 008e A9000000 		.4byte	0xa9
 1624 0092 07       		.uleb128 0x7
 1625 0093 3C010000 		.4byte	.LASF11
 1626 0097 04       		.byte	0x4
 1627 0098 48       		.byte	0x48
 1628 0099 7E000000 		.4byte	0x7e
 1629 009d 07       		.uleb128 0x7
ARM GAS  /tmp/cc17JTRV.s 			page 65


 1630 009e DB070000 		.4byte	.LASF12
 1631 00a2 04       		.byte	0x4
 1632 00a3 49       		.byte	0x49
 1633 00a4 A9000000 		.4byte	0xa9
 1634 00a8 00       		.byte	0
 1635 00a9 08       		.uleb128 0x8
 1636 00aa 30000000 		.4byte	0x30
 1637 00ae B9000000 		.4byte	0xb9
 1638 00b2 09       		.uleb128 0x9
 1639 00b3 4C000000 		.4byte	0x4c
 1640 00b7 03       		.byte	0x3
 1641 00b8 00       		.byte	0
 1642 00b9 0A       		.uleb128 0xa
 1643 00ba 08       		.byte	0x8
 1644 00bb 04       		.byte	0x4
 1645 00bc 43       		.byte	0x43
 1646 00bd DE000000 		.4byte	0xde
 1647 00c1 0B       		.uleb128 0xb
 1648 00c2 93070000 		.4byte	.LASF13
 1649 00c6 04       		.byte	0x4
 1650 00c7 45       		.byte	0x45
 1651 00c8 45000000 		.4byte	0x45
 1652 00cc 02       		.byte	0x2
 1653 00cd 23       		.byte	0x23
 1654 00ce 00       		.uleb128 0
 1655 00cf 0B       		.uleb128 0xb
 1656 00d0 2A000000 		.4byte	.LASF14
 1657 00d4 04       		.byte	0x4
 1658 00d5 4A       		.byte	0x4a
 1659 00d6 8A000000 		.4byte	0x8a
 1660 00da 02       		.byte	0x2
 1661 00db 23       		.byte	0x23
 1662 00dc 04       		.uleb128 0x4
 1663 00dd 00       		.byte	0
 1664 00de 04       		.uleb128 0x4
 1665 00df F6080000 		.4byte	.LASF15
 1666 00e3 04       		.byte	0x4
 1667 00e4 4B       		.byte	0x4b
 1668 00e5 B9000000 		.4byte	0xb9
 1669 00e9 04       		.uleb128 0x4
 1670 00ea DF080000 		.4byte	.LASF16
 1671 00ee 04       		.byte	0x4
 1672 00ef 4F       		.byte	0x4f
 1673 00f0 61000000 		.4byte	0x61
 1674 00f4 0C       		.uleb128 0xc
 1675 00f5 04       		.byte	0x4
 1676 00f6 04       		.uleb128 0x4
 1677 00f7 1F0B0000 		.4byte	.LASF17
 1678 00fb 06       		.byte	0x6
 1679 00fc 15       		.byte	0x15
 1680 00fd 01010000 		.4byte	0x101
 1681 0101 02       		.uleb128 0x2
 1682 0102 04       		.byte	0x4
 1683 0103 07       		.byte	0x7
 1684 0104 D2040000 		.4byte	.LASF18
 1685 0108 0D       		.uleb128 0xd
 1686 0109 A2050000 		.4byte	.LASF23
ARM GAS  /tmp/cc17JTRV.s 			page 66


 1687 010d 18       		.byte	0x18
 1688 010e 06       		.byte	0x6
 1689 010f 2C       		.byte	0x2c
 1690 0110 67010000 		.4byte	0x167
 1691 0114 0B       		.uleb128 0xb
 1692 0115 39090000 		.4byte	.LASF19
 1693 0119 06       		.byte	0x6
 1694 011a 2E       		.byte	0x2e
 1695 011b 67010000 		.4byte	0x167
 1696 011f 02       		.byte	0x2
 1697 0120 23       		.byte	0x23
 1698 0121 00       		.uleb128 0
 1699 0122 0E       		.uleb128 0xe
 1700 0123 5F6B00   		.ascii	"_k\000"
 1701 0126 06       		.byte	0x6
 1702 0127 2F       		.byte	0x2f
 1703 0128 45000000 		.4byte	0x45
 1704 012c 02       		.byte	0x2
 1705 012d 23       		.byte	0x23
 1706 012e 04       		.uleb128 0x4
 1707 012f 0B       		.uleb128 0xb
 1708 0130 B3050000 		.4byte	.LASF20
 1709 0134 06       		.byte	0x6
 1710 0135 2F       		.byte	0x2f
 1711 0136 45000000 		.4byte	0x45
 1712 013a 02       		.byte	0x2
 1713 013b 23       		.byte	0x23
 1714 013c 08       		.uleb128 0x8
 1715 013d 0B       		.uleb128 0xb
 1716 013e D8060000 		.4byte	.LASF21
 1717 0142 06       		.byte	0x6
 1718 0143 2F       		.byte	0x2f
 1719 0144 45000000 		.4byte	0x45
 1720 0148 02       		.byte	0x2
 1721 0149 23       		.byte	0x23
 1722 014a 0C       		.uleb128 0xc
 1723 014b 0B       		.uleb128 0xb
 1724 014c 17040000 		.4byte	.LASF22
 1725 0150 06       		.byte	0x6
 1726 0151 2F       		.byte	0x2f
 1727 0152 45000000 		.4byte	0x45
 1728 0156 02       		.byte	0x2
 1729 0157 23       		.byte	0x23
 1730 0158 10       		.uleb128 0x10
 1731 0159 0E       		.uleb128 0xe
 1732 015a 5F7800   		.ascii	"_x\000"
 1733 015d 06       		.byte	0x6
 1734 015e 30       		.byte	0x30
 1735 015f 6D010000 		.4byte	0x16d
 1736 0163 02       		.byte	0x2
 1737 0164 23       		.byte	0x23
 1738 0165 14       		.uleb128 0x14
 1739 0166 00       		.byte	0
 1740 0167 0F       		.uleb128 0xf
 1741 0168 04       		.byte	0x4
 1742 0169 08010000 		.4byte	0x108
 1743 016d 08       		.uleb128 0x8
ARM GAS  /tmp/cc17JTRV.s 			page 67


 1744 016e F6000000 		.4byte	0xf6
 1745 0172 7D010000 		.4byte	0x17d
 1746 0176 09       		.uleb128 0x9
 1747 0177 4C000000 		.4byte	0x4c
 1748 017b 00       		.byte	0
 1749 017c 00       		.byte	0
 1750 017d 0D       		.uleb128 0xd
 1751 017e 91000000 		.4byte	.LASF24
 1752 0182 24       		.byte	0x24
 1753 0183 06       		.byte	0x6
 1754 0184 34       		.byte	0x34
 1755 0185 08020000 		.4byte	0x208
 1756 0189 0B       		.uleb128 0xb
 1757 018a AD000000 		.4byte	.LASF25
 1758 018e 06       		.byte	0x6
 1759 018f 36       		.byte	0x36
 1760 0190 45000000 		.4byte	0x45
 1761 0194 02       		.byte	0x2
 1762 0195 23       		.byte	0x23
 1763 0196 00       		.uleb128 0
 1764 0197 0B       		.uleb128 0xb
 1765 0198 0A0C0000 		.4byte	.LASF26
 1766 019c 06       		.byte	0x6
 1767 019d 37       		.byte	0x37
 1768 019e 45000000 		.4byte	0x45
 1769 01a2 02       		.byte	0x2
 1770 01a3 23       		.byte	0x23
 1771 01a4 04       		.uleb128 0x4
 1772 01a5 0B       		.uleb128 0xb
 1773 01a6 A00B0000 		.4byte	.LASF27
 1774 01aa 06       		.byte	0x6
 1775 01ab 38       		.byte	0x38
 1776 01ac 45000000 		.4byte	0x45
 1777 01b0 02       		.byte	0x2
 1778 01b1 23       		.byte	0x23
 1779 01b2 08       		.uleb128 0x8
 1780 01b3 0B       		.uleb128 0xb
 1781 01b4 2F070000 		.4byte	.LASF28
 1782 01b8 06       		.byte	0x6
 1783 01b9 39       		.byte	0x39
 1784 01ba 45000000 		.4byte	0x45
 1785 01be 02       		.byte	0x2
 1786 01bf 23       		.byte	0x23
 1787 01c0 0C       		.uleb128 0xc
 1788 01c1 0B       		.uleb128 0xb
 1789 01c2 08020000 		.4byte	.LASF29
 1790 01c6 06       		.byte	0x6
 1791 01c7 3A       		.byte	0x3a
 1792 01c8 45000000 		.4byte	0x45
 1793 01cc 02       		.byte	0x2
 1794 01cd 23       		.byte	0x23
 1795 01ce 10       		.uleb128 0x10
 1796 01cf 0B       		.uleb128 0xb
 1797 01d0 920A0000 		.4byte	.LASF30
 1798 01d4 06       		.byte	0x6
 1799 01d5 3B       		.byte	0x3b
 1800 01d6 45000000 		.4byte	0x45
ARM GAS  /tmp/cc17JTRV.s 			page 68


 1801 01da 02       		.byte	0x2
 1802 01db 23       		.byte	0x23
 1803 01dc 14       		.uleb128 0x14
 1804 01dd 0B       		.uleb128 0xb
 1805 01de A2070000 		.4byte	.LASF31
 1806 01e2 06       		.byte	0x6
 1807 01e3 3C       		.byte	0x3c
 1808 01e4 45000000 		.4byte	0x45
 1809 01e8 02       		.byte	0x2
 1810 01e9 23       		.byte	0x23
 1811 01ea 18       		.uleb128 0x18
 1812 01eb 0B       		.uleb128 0xb
 1813 01ec AC070000 		.4byte	.LASF32
 1814 01f0 06       		.byte	0x6
 1815 01f1 3D       		.byte	0x3d
 1816 01f2 45000000 		.4byte	0x45
 1817 01f6 02       		.byte	0x2
 1818 01f7 23       		.byte	0x23
 1819 01f8 1C       		.uleb128 0x1c
 1820 01f9 0B       		.uleb128 0xb
 1821 01fa F50B0000 		.4byte	.LASF33
 1822 01fe 06       		.byte	0x6
 1823 01ff 3E       		.byte	0x3e
 1824 0200 45000000 		.4byte	0x45
 1825 0204 02       		.byte	0x2
 1826 0205 23       		.byte	0x23
 1827 0206 20       		.uleb128 0x20
 1828 0207 00       		.byte	0
 1829 0208 10       		.uleb128 0x10
 1830 0209 5C010000 		.4byte	.LASF34
 1831 020d 0801     		.2byte	0x108
 1832 020f 06       		.byte	0x6
 1833 0210 47       		.byte	0x47
 1834 0211 51020000 		.4byte	0x251
 1835 0215 0B       		.uleb128 0xb
 1836 0216 E50B0000 		.4byte	.LASF35
 1837 021a 06       		.byte	0x6
 1838 021b 48       		.byte	0x48
 1839 021c 51020000 		.4byte	0x251
 1840 0220 02       		.byte	0x2
 1841 0221 23       		.byte	0x23
 1842 0222 00       		.uleb128 0
 1843 0223 0B       		.uleb128 0xb
 1844 0224 41080000 		.4byte	.LASF36
 1845 0228 06       		.byte	0x6
 1846 0229 49       		.byte	0x49
 1847 022a 51020000 		.4byte	0x251
 1848 022e 03       		.byte	0x3
 1849 022f 23       		.byte	0x23
 1850 0230 8001     		.uleb128 0x80
 1851 0232 0B       		.uleb128 0xb
 1852 0233 780A0000 		.4byte	.LASF37
 1853 0237 06       		.byte	0x6
 1854 0238 4B       		.byte	0x4b
 1855 0239 F6000000 		.4byte	0xf6
 1856 023d 03       		.byte	0x3
 1857 023e 23       		.byte	0x23
ARM GAS  /tmp/cc17JTRV.s 			page 69


 1858 023f 8002     		.uleb128 0x100
 1859 0241 0B       		.uleb128 0xb
 1860 0242 EB0A0000 		.4byte	.LASF38
 1861 0246 06       		.byte	0x6
 1862 0247 4E       		.byte	0x4e
 1863 0248 F6000000 		.4byte	0xf6
 1864 024c 03       		.byte	0x3
 1865 024d 23       		.byte	0x23
 1866 024e 8402     		.uleb128 0x104
 1867 0250 00       		.byte	0
 1868 0251 08       		.uleb128 0x8
 1869 0252 F4000000 		.4byte	0xf4
 1870 0256 61020000 		.4byte	0x261
 1871 025a 09       		.uleb128 0x9
 1872 025b 4C000000 		.4byte	0x4c
 1873 025f 1F       		.byte	0x1f
 1874 0260 00       		.byte	0
 1875 0261 0D       		.uleb128 0xd
 1876 0262 8B070000 		.4byte	.LASF39
 1877 0266 8C       		.byte	0x8c
 1878 0267 06       		.byte	0x6
 1879 0268 52       		.byte	0x52
 1880 0269 A7020000 		.4byte	0x2a7
 1881 026d 0B       		.uleb128 0xb
 1882 026e 39090000 		.4byte	.LASF19
 1883 0272 06       		.byte	0x6
 1884 0273 53       		.byte	0x53
 1885 0274 A7020000 		.4byte	0x2a7
 1886 0278 02       		.byte	0x2
 1887 0279 23       		.byte	0x23
 1888 027a 00       		.uleb128 0
 1889 027b 0B       		.uleb128 0xb
 1890 027c B90A0000 		.4byte	.LASF40
 1891 0280 06       		.byte	0x6
 1892 0281 54       		.byte	0x54
 1893 0282 45000000 		.4byte	0x45
 1894 0286 02       		.byte	0x2
 1895 0287 23       		.byte	0x23
 1896 0288 04       		.uleb128 0x4
 1897 0289 0B       		.uleb128 0xb
 1898 028a 2E030000 		.4byte	.LASF41
 1899 028e 06       		.byte	0x6
 1900 028f 55       		.byte	0x55
 1901 0290 AD020000 		.4byte	0x2ad
 1902 0294 02       		.byte	0x2
 1903 0295 23       		.byte	0x23
 1904 0296 08       		.uleb128 0x8
 1905 0297 0B       		.uleb128 0xb
 1906 0298 09060000 		.4byte	.LASF42
 1907 029c 06       		.byte	0x6
 1908 029d 56       		.byte	0x56
 1909 029e C5020000 		.4byte	0x2c5
 1910 02a2 03       		.byte	0x3
 1911 02a3 23       		.byte	0x23
 1912 02a4 8801     		.uleb128 0x88
 1913 02a6 00       		.byte	0
 1914 02a7 0F       		.uleb128 0xf
ARM GAS  /tmp/cc17JTRV.s 			page 70


 1915 02a8 04       		.byte	0x4
 1916 02a9 61020000 		.4byte	0x261
 1917 02ad 08       		.uleb128 0x8
 1918 02ae BF020000 		.4byte	0x2bf
 1919 02b2 BD020000 		.4byte	0x2bd
 1920 02b6 09       		.uleb128 0x9
 1921 02b7 4C000000 		.4byte	0x4c
 1922 02bb 1F       		.byte	0x1f
 1923 02bc 00       		.byte	0
 1924 02bd 11       		.uleb128 0x11
 1925 02be 01       		.byte	0x1
 1926 02bf 0F       		.uleb128 0xf
 1927 02c0 04       		.byte	0x4
 1928 02c1 BD020000 		.4byte	0x2bd
 1929 02c5 0F       		.uleb128 0xf
 1930 02c6 04       		.byte	0x4
 1931 02c7 08020000 		.4byte	0x208
 1932 02cb 0D       		.uleb128 0xd
 1933 02cc E40A0000 		.4byte	.LASF43
 1934 02d0 08       		.byte	0x8
 1935 02d1 06       		.byte	0x6
 1936 02d2 69       		.byte	0x69
 1937 02d3 F4020000 		.4byte	0x2f4
 1938 02d7 0B       		.uleb128 0xb
 1939 02d8 8E080000 		.4byte	.LASF44
 1940 02dc 06       		.byte	0x6
 1941 02dd 6A       		.byte	0x6a
 1942 02de F4020000 		.4byte	0x2f4
 1943 02e2 02       		.byte	0x2
 1944 02e3 23       		.byte	0x23
 1945 02e4 00       		.uleb128 0
 1946 02e5 0B       		.uleb128 0xb
 1947 02e6 D2010000 		.4byte	.LASF45
 1948 02ea 06       		.byte	0x6
 1949 02eb 6B       		.byte	0x6b
 1950 02ec 45000000 		.4byte	0x45
 1951 02f0 02       		.byte	0x2
 1952 02f1 23       		.byte	0x23
 1953 02f2 04       		.uleb128 0x4
 1954 02f3 00       		.byte	0
 1955 02f4 0F       		.uleb128 0xf
 1956 02f5 04       		.byte	0x4
 1957 02f6 30000000 		.4byte	0x30
 1958 02fa 12       		.uleb128 0x12
 1959 02fb E7020000 		.4byte	.LASF46
 1960 02ff F0       		.byte	0xf0
 1961 0300 06       		.byte	0x6
 1962 0301 7B01     		.2byte	0x17b
 1963 0303 74040000 		.4byte	0x474
 1964 0307 13       		.uleb128 0x13
 1965 0308 5B050000 		.4byte	.LASF47
 1966 030c 06       		.byte	0x6
 1967 030d 7F01     		.2byte	0x17f
 1968 030f 45000000 		.4byte	0x45
 1969 0313 02       		.byte	0x2
 1970 0314 23       		.byte	0x23
 1971 0315 00       		.uleb128 0
ARM GAS  /tmp/cc17JTRV.s 			page 71


 1972 0316 13       		.uleb128 0x13
 1973 0317 82030000 		.4byte	.LASF48
 1974 031b 06       		.byte	0x6
 1975 031c 8401     		.2byte	0x184
 1976 031e E3060000 		.4byte	0x6e3
 1977 0322 02       		.byte	0x2
 1978 0323 23       		.byte	0x23
 1979 0324 04       		.uleb128 0x4
 1980 0325 13       		.uleb128 0x13
 1981 0326 71080000 		.4byte	.LASF49
 1982 032a 06       		.byte	0x6
 1983 032b 8401     		.2byte	0x184
 1984 032d E3060000 		.4byte	0x6e3
 1985 0331 02       		.byte	0x2
 1986 0332 23       		.byte	0x23
 1987 0333 08       		.uleb128 0x8
 1988 0334 13       		.uleb128 0x13
 1989 0335 52070000 		.4byte	.LASF50
 1990 0339 06       		.byte	0x6
 1991 033a 8401     		.2byte	0x184
 1992 033c E3060000 		.4byte	0x6e3
 1993 0340 02       		.byte	0x2
 1994 0341 23       		.byte	0x23
 1995 0342 0C       		.uleb128 0xc
 1996 0343 13       		.uleb128 0x13
 1997 0344 B40A0000 		.4byte	.LASF51
 1998 0348 06       		.byte	0x6
 1999 0349 8601     		.2byte	0x186
 2000 034b 45000000 		.4byte	0x45
 2001 034f 02       		.byte	0x2
 2002 0350 23       		.byte	0x23
 2003 0351 10       		.uleb128 0x10
 2004 0352 13       		.uleb128 0x13
 2005 0353 E8050000 		.4byte	.LASF52
 2006 0357 06       		.byte	0x6
 2007 0358 8801     		.2byte	0x188
 2008 035a F3050000 		.4byte	0x5f3
 2009 035e 02       		.byte	0x2
 2010 035f 23       		.byte	0x23
 2011 0360 14       		.uleb128 0x14
 2012 0361 13       		.uleb128 0x13
 2013 0362 1E050000 		.4byte	.LASF53
 2014 0366 06       		.byte	0x6
 2015 0367 8A01     		.2byte	0x18a
 2016 0369 45000000 		.4byte	0x45
 2017 036d 02       		.byte	0x2
 2018 036e 23       		.byte	0x23
 2019 036f 18       		.uleb128 0x18
 2020 0370 13       		.uleb128 0x13
 2021 0371 3B020000 		.4byte	.LASF54
 2022 0375 06       		.byte	0x6
 2023 0376 8C01     		.2byte	0x18c
 2024 0378 45000000 		.4byte	0x45
 2025 037c 02       		.byte	0x2
 2026 037d 23       		.byte	0x23
 2027 037e 1C       		.uleb128 0x1c
 2028 037f 13       		.uleb128 0x13
ARM GAS  /tmp/cc17JTRV.s 			page 72


 2029 0380 A5060000 		.4byte	.LASF55
 2030 0384 06       		.byte	0x6
 2031 0385 8D01     		.2byte	0x18d
 2032 0387 25060000 		.4byte	0x625
 2033 038b 02       		.byte	0x2
 2034 038c 23       		.byte	0x23
 2035 038d 20       		.uleb128 0x20
 2036 038e 14       		.uleb128 0x14
 2037 038f 5F6D7000 		.ascii	"_mp\000"
 2038 0393 06       		.byte	0x6
 2039 0394 8F01     		.2byte	0x18f
 2040 0396 56080000 		.4byte	0x856
 2041 039a 02       		.byte	0x2
 2042 039b 23       		.byte	0x23
 2043 039c 24       		.uleb128 0x24
 2044 039d 13       		.uleb128 0x13
 2045 039e C0050000 		.4byte	.LASF56
 2046 03a2 06       		.byte	0x6
 2047 03a3 9101     		.2byte	0x191
 2048 03a5 68080000 		.4byte	0x868
 2049 03a9 02       		.byte	0x2
 2050 03aa 23       		.byte	0x23
 2051 03ab 28       		.uleb128 0x28
 2052 03ac 13       		.uleb128 0x13
 2053 03ad 79060000 		.4byte	.LASF57
 2054 03b1 06       		.byte	0x6
 2055 03b2 9301     		.2byte	0x193
 2056 03b4 45000000 		.4byte	0x45
 2057 03b8 02       		.byte	0x2
 2058 03b9 23       		.byte	0x23
 2059 03ba 2C       		.uleb128 0x2c
 2060 03bb 13       		.uleb128 0x13
 2061 03bc 69000000 		.4byte	.LASF58
 2062 03c0 06       		.byte	0x6
 2063 03c1 9601     		.2byte	0x196
 2064 03c3 45000000 		.4byte	0x45
 2065 03c7 02       		.byte	0x2
 2066 03c8 23       		.byte	0x23
 2067 03c9 30       		.uleb128 0x30
 2068 03ca 13       		.uleb128 0x13
 2069 03cb 40040000 		.4byte	.LASF59
 2070 03cf 06       		.byte	0x6
 2071 03d0 9701     		.2byte	0x197
 2072 03d2 F3050000 		.4byte	0x5f3
 2073 03d6 02       		.byte	0x2
 2074 03d7 23       		.byte	0x23
 2075 03d8 34       		.uleb128 0x34
 2076 03d9 13       		.uleb128 0x13
 2077 03da 0C090000 		.4byte	.LASF60
 2078 03de 06       		.byte	0x6
 2079 03df 9901     		.2byte	0x199
 2080 03e1 6E080000 		.4byte	0x86e
 2081 03e5 02       		.byte	0x2
 2082 03e6 23       		.byte	0x23
 2083 03e7 38       		.uleb128 0x38
 2084 03e8 13       		.uleb128 0x13
 2085 03e9 DE010000 		.4byte	.LASF61
ARM GAS  /tmp/cc17JTRV.s 			page 73


 2086 03ed 06       		.byte	0x6
 2087 03ee 9A01     		.2byte	0x19a
 2088 03f0 74080000 		.4byte	0x874
 2089 03f4 02       		.byte	0x2
 2090 03f5 23       		.byte	0x23
 2091 03f6 3C       		.uleb128 0x3c
 2092 03f7 13       		.uleb128 0x13
 2093 03f8 5C000000 		.4byte	.LASF62
 2094 03fc 06       		.byte	0x6
 2095 03fd 9B01     		.2byte	0x19b
 2096 03ff F3050000 		.4byte	0x5f3
 2097 0403 02       		.byte	0x2
 2098 0404 23       		.byte	0x23
 2099 0405 40       		.uleb128 0x40
 2100 0406 13       		.uleb128 0x13
 2101 0407 2E040000 		.4byte	.LASF63
 2102 040b 06       		.byte	0x6
 2103 040c 9E01     		.2byte	0x19e
 2104 040e 86080000 		.4byte	0x886
 2105 0412 02       		.byte	0x2
 2106 0413 23       		.byte	0x23
 2107 0414 44       		.uleb128 0x44
 2108 0415 13       		.uleb128 0x13
 2109 0416 8B070000 		.4byte	.LASF39
 2110 041a 06       		.byte	0x6
 2111 041b A101     		.2byte	0x1a1
 2112 041d A7020000 		.4byte	0x2a7
 2113 0421 02       		.byte	0x2
 2114 0422 23       		.byte	0x23
 2115 0423 48       		.uleb128 0x48
 2116 0424 13       		.uleb128 0x13
 2117 0425 DF050000 		.4byte	.LASF64
 2118 0429 06       		.byte	0x6
 2119 042a A201     		.2byte	0x1a2
 2120 042c 61020000 		.4byte	0x261
 2121 0430 02       		.byte	0x2
 2122 0431 23       		.byte	0x23
 2123 0432 4C       		.uleb128 0x4c
 2124 0433 13       		.uleb128 0x13
 2125 0434 4A060000 		.4byte	.LASF65
 2126 0438 06       		.byte	0x6
 2127 0439 A401     		.2byte	0x1a4
 2128 043b A2060000 		.4byte	0x6a2
 2129 043f 03       		.byte	0x3
 2130 0440 23       		.byte	0x23
 2131 0441 D801     		.uleb128 0xd8
 2132 0443 13       		.uleb128 0x13
 2133 0444 32000000 		.4byte	.LASF66
 2134 0448 06       		.byte	0x6
 2135 0449 A501     		.2byte	0x1a5
 2136 044b E3060000 		.4byte	0x6e3
 2137 044f 03       		.byte	0x3
 2138 0450 23       		.byte	0x23
 2139 0451 E401     		.uleb128 0xe4
 2140 0453 13       		.uleb128 0x13
 2141 0454 190B0000 		.4byte	.LASF67
 2142 0458 06       		.byte	0x6
ARM GAS  /tmp/cc17JTRV.s 			page 74


 2143 0459 A601     		.2byte	0x1a6
 2144 045b 92080000 		.4byte	0x892
 2145 045f 03       		.byte	0x3
 2146 0460 23       		.byte	0x23
 2147 0461 E801     		.uleb128 0xe8
 2148 0463 13       		.uleb128 0x13
 2149 0464 6A050000 		.4byte	.LASF68
 2150 0468 06       		.byte	0x6
 2151 0469 A701     		.2byte	0x1a7
 2152 046b F3050000 		.4byte	0x5f3
 2153 046f 03       		.byte	0x3
 2154 0470 23       		.byte	0x23
 2155 0471 EC01     		.uleb128 0xec
 2156 0473 00       		.byte	0
 2157 0474 0F       		.uleb128 0xf
 2158 0475 04       		.byte	0x4
 2159 0476 FA020000 		.4byte	0x2fa
 2160 047a 0D       		.uleb128 0xd
 2161 047b 16050000 		.4byte	.LASF69
 2162 047f 68       		.byte	0x68
 2163 0480 06       		.byte	0x6
 2164 0481 B3       		.byte	0xb3
 2165 0482 D4050000 		.4byte	0x5d4
 2166 0486 0E       		.uleb128 0xe
 2167 0487 5F7000   		.ascii	"_p\000"
 2168 048a 06       		.byte	0x6
 2169 048b B4       		.byte	0xb4
 2170 048c F4020000 		.4byte	0x2f4
 2171 0490 02       		.byte	0x2
 2172 0491 23       		.byte	0x23
 2173 0492 00       		.uleb128 0
 2174 0493 0E       		.uleb128 0xe
 2175 0494 5F7200   		.ascii	"_r\000"
 2176 0497 06       		.byte	0x6
 2177 0498 B5       		.byte	0xb5
 2178 0499 45000000 		.4byte	0x45
 2179 049d 02       		.byte	0x2
 2180 049e 23       		.byte	0x23
 2181 049f 04       		.uleb128 0x4
 2182 04a0 0E       		.uleb128 0xe
 2183 04a1 5F7700   		.ascii	"_w\000"
 2184 04a4 06       		.byte	0x6
 2185 04a5 B6       		.byte	0xb6
 2186 04a6 45000000 		.4byte	0x45
 2187 04aa 02       		.byte	0x2
 2188 04ab 23       		.byte	0x23
 2189 04ac 08       		.uleb128 0x8
 2190 04ad 0B       		.uleb128 0xb
 2191 04ae 7C070000 		.4byte	.LASF70
 2192 04b2 06       		.byte	0x6
 2193 04b3 B7       		.byte	0xb7
 2194 04b4 37000000 		.4byte	0x37
 2195 04b8 02       		.byte	0x2
 2196 04b9 23       		.byte	0x23
 2197 04ba 0C       		.uleb128 0xc
 2198 04bb 0B       		.uleb128 0xb
 2199 04bc 56010000 		.4byte	.LASF71
ARM GAS  /tmp/cc17JTRV.s 			page 75


 2200 04c0 06       		.byte	0x6
 2201 04c1 B8       		.byte	0xb8
 2202 04c2 37000000 		.4byte	0x37
 2203 04c6 02       		.byte	0x2
 2204 04c7 23       		.byte	0x23
 2205 04c8 0E       		.uleb128 0xe
 2206 04c9 0E       		.uleb128 0xe
 2207 04ca 5F626600 		.ascii	"_bf\000"
 2208 04ce 06       		.byte	0x6
 2209 04cf B9       		.byte	0xb9
 2210 04d0 CB020000 		.4byte	0x2cb
 2211 04d4 02       		.byte	0x2
 2212 04d5 23       		.byte	0x23
 2213 04d6 10       		.uleb128 0x10
 2214 04d7 0B       		.uleb128 0xb
 2215 04d8 AB0A0000 		.4byte	.LASF72
 2216 04dc 06       		.byte	0x6
 2217 04dd BA       		.byte	0xba
 2218 04de 45000000 		.4byte	0x45
 2219 04e2 02       		.byte	0x2
 2220 04e3 23       		.byte	0x23
 2221 04e4 18       		.uleb128 0x18
 2222 04e5 0B       		.uleb128 0xb
 2223 04e6 3F090000 		.4byte	.LASF73
 2224 04ea 06       		.byte	0x6
 2225 04eb BD       		.byte	0xbd
 2226 04ec 74040000 		.4byte	0x474
 2227 04f0 02       		.byte	0x2
 2228 04f1 23       		.byte	0x23
 2229 04f2 1C       		.uleb128 0x1c
 2230 04f3 0B       		.uleb128 0xb
 2231 04f4 0F040000 		.4byte	.LASF74
 2232 04f8 06       		.byte	0x6
 2233 04f9 C1       		.byte	0xc1
 2234 04fa F4000000 		.4byte	0xf4
 2235 04fe 02       		.byte	0x2
 2236 04ff 23       		.byte	0x23
 2237 0500 20       		.uleb128 0x20
 2238 0501 0B       		.uleb128 0xb
 2239 0502 3C000000 		.4byte	.LASF75
 2240 0506 06       		.byte	0x6
 2241 0507 C3       		.byte	0xc3
 2242 0508 00060000 		.4byte	0x600
 2243 050c 02       		.byte	0x2
 2244 050d 23       		.byte	0x23
 2245 050e 24       		.uleb128 0x24
 2246 050f 0B       		.uleb128 0xb
 2247 0510 55000000 		.4byte	.LASF76
 2248 0514 06       		.byte	0x6
 2249 0515 C5       		.byte	0xc5
 2250 0516 30060000 		.4byte	0x630
 2251 051a 02       		.byte	0x2
 2252 051b 23       		.byte	0x23
 2253 051c 28       		.uleb128 0x28
 2254 051d 0B       		.uleb128 0xb
 2255 051e BC070000 		.4byte	.LASF77
 2256 0522 06       		.byte	0x6
ARM GAS  /tmp/cc17JTRV.s 			page 76


 2257 0523 C7       		.byte	0xc7
 2258 0524 55060000 		.4byte	0x655
 2259 0528 02       		.byte	0x2
 2260 0529 23       		.byte	0x23
 2261 052a 2C       		.uleb128 0x2c
 2262 052b 0B       		.uleb128 0xb
 2263 052c 4A030000 		.4byte	.LASF78
 2264 0530 06       		.byte	0x6
 2265 0531 C8       		.byte	0xc8
 2266 0532 70060000 		.4byte	0x670
 2267 0536 02       		.byte	0x2
 2268 0537 23       		.byte	0x23
 2269 0538 30       		.uleb128 0x30
 2270 0539 0E       		.uleb128 0xe
 2271 053a 5F756200 		.ascii	"_ub\000"
 2272 053e 06       		.byte	0x6
 2273 053f CB       		.byte	0xcb
 2274 0540 CB020000 		.4byte	0x2cb
 2275 0544 02       		.byte	0x2
 2276 0545 23       		.byte	0x23
 2277 0546 34       		.uleb128 0x34
 2278 0547 0E       		.uleb128 0xe
 2279 0548 5F757000 		.ascii	"_up\000"
 2280 054c 06       		.byte	0x6
 2281 054d CC       		.byte	0xcc
 2282 054e F4020000 		.4byte	0x2f4
 2283 0552 02       		.byte	0x2
 2284 0553 23       		.byte	0x23
 2285 0554 3C       		.uleb128 0x3c
 2286 0555 0E       		.uleb128 0xe
 2287 0556 5F757200 		.ascii	"_ur\000"
 2288 055a 06       		.byte	0x6
 2289 055b CD       		.byte	0xcd
 2290 055c 45000000 		.4byte	0x45
 2291 0560 02       		.byte	0x2
 2292 0561 23       		.byte	0x23
 2293 0562 40       		.uleb128 0x40
 2294 0563 0B       		.uleb128 0xb
 2295 0564 41070000 		.4byte	.LASF79
 2296 0568 06       		.byte	0x6
 2297 0569 D0       		.byte	0xd0
 2298 056a 76060000 		.4byte	0x676
 2299 056e 02       		.byte	0x2
 2300 056f 23       		.byte	0x23
 2301 0570 44       		.uleb128 0x44
 2302 0571 0B       		.uleb128 0xb
 2303 0572 A7000000 		.4byte	.LASF80
 2304 0576 06       		.byte	0x6
 2305 0577 D1       		.byte	0xd1
 2306 0578 86060000 		.4byte	0x686
 2307 057c 02       		.byte	0x2
 2308 057d 23       		.byte	0x23
 2309 057e 47       		.uleb128 0x47
 2310 057f 0E       		.uleb128 0xe
 2311 0580 5F6C6200 		.ascii	"_lb\000"
 2312 0584 06       		.byte	0x6
 2313 0585 D4       		.byte	0xd4
ARM GAS  /tmp/cc17JTRV.s 			page 77


 2314 0586 CB020000 		.4byte	0x2cb
 2315 058a 02       		.byte	0x2
 2316 058b 23       		.byte	0x23
 2317 058c 48       		.uleb128 0x48
 2318 058d 0B       		.uleb128 0xb
 2319 058e 85080000 		.4byte	.LASF81
 2320 0592 06       		.byte	0x6
 2321 0593 D7       		.byte	0xd7
 2322 0594 45000000 		.4byte	0x45
 2323 0598 02       		.byte	0x2
 2324 0599 23       		.byte	0x23
 2325 059a 50       		.uleb128 0x50
 2326 059b 0B       		.uleb128 0xb
 2327 059c 38040000 		.4byte	.LASF82
 2328 05a0 06       		.byte	0x6
 2329 05a1 D8       		.byte	0xd8
 2330 05a2 45000000 		.4byte	0x45
 2331 05a6 02       		.byte	0x2
 2332 05a7 23       		.byte	0x23
 2333 05a8 54       		.uleb128 0x54
 2334 05a9 0B       		.uleb128 0xb
 2335 05aa D3000000 		.4byte	.LASF83
 2336 05ae 06       		.byte	0x6
 2337 05af DF       		.byte	0xdf
 2338 05b0 E9000000 		.4byte	0xe9
 2339 05b4 02       		.byte	0x2
 2340 05b5 23       		.byte	0x23
 2341 05b6 58       		.uleb128 0x58
 2342 05b7 0B       		.uleb128 0xb
 2343 05b8 68070000 		.4byte	.LASF84
 2344 05bc 06       		.byte	0x6
 2345 05bd E1       		.byte	0xe1
 2346 05be DE000000 		.4byte	0xde
 2347 05c2 02       		.byte	0x2
 2348 05c3 23       		.byte	0x23
 2349 05c4 5C       		.uleb128 0x5c
 2350 05c5 0B       		.uleb128 0xb
 2351 05c6 29050000 		.4byte	.LASF85
 2352 05ca 06       		.byte	0x6
 2353 05cb E2       		.byte	0xe2
 2354 05cc 45000000 		.4byte	0x45
 2355 05d0 02       		.byte	0x2
 2356 05d1 23       		.byte	0x23
 2357 05d2 64       		.uleb128 0x64
 2358 05d3 00       		.byte	0
 2359 05d4 15       		.uleb128 0x15
 2360 05d5 01       		.byte	0x1
 2361 05d6 45000000 		.4byte	0x45
 2362 05da F3050000 		.4byte	0x5f3
 2363 05de 16       		.uleb128 0x16
 2364 05df 74040000 		.4byte	0x474
 2365 05e3 16       		.uleb128 0x16
 2366 05e4 F4000000 		.4byte	0xf4
 2367 05e8 16       		.uleb128 0x16
 2368 05e9 F3050000 		.4byte	0x5f3
 2369 05ed 16       		.uleb128 0x16
 2370 05ee 45000000 		.4byte	0x45
ARM GAS  /tmp/cc17JTRV.s 			page 78


 2371 05f2 00       		.byte	0
 2372 05f3 0F       		.uleb128 0xf
 2373 05f4 04       		.byte	0x4
 2374 05f5 F9050000 		.4byte	0x5f9
 2375 05f9 02       		.uleb128 0x2
 2376 05fa 01       		.byte	0x1
 2377 05fb 08       		.byte	0x8
 2378 05fc 29030000 		.4byte	.LASF86
 2379 0600 0F       		.uleb128 0xf
 2380 0601 04       		.byte	0x4
 2381 0602 D4050000 		.4byte	0x5d4
 2382 0606 15       		.uleb128 0x15
 2383 0607 01       		.byte	0x1
 2384 0608 45000000 		.4byte	0x45
 2385 060c 25060000 		.4byte	0x625
 2386 0610 16       		.uleb128 0x16
 2387 0611 74040000 		.4byte	0x474
 2388 0615 16       		.uleb128 0x16
 2389 0616 F4000000 		.4byte	0xf4
 2390 061a 16       		.uleb128 0x16
 2391 061b 25060000 		.4byte	0x625
 2392 061f 16       		.uleb128 0x16
 2393 0620 45000000 		.4byte	0x45
 2394 0624 00       		.byte	0
 2395 0625 0F       		.uleb128 0xf
 2396 0626 04       		.byte	0x4
 2397 0627 2B060000 		.4byte	0x62b
 2398 062b 17       		.uleb128 0x17
 2399 062c F9050000 		.4byte	0x5f9
 2400 0630 0F       		.uleb128 0xf
 2401 0631 04       		.byte	0x4
 2402 0632 06060000 		.4byte	0x606
 2403 0636 15       		.uleb128 0x15
 2404 0637 01       		.byte	0x1
 2405 0638 73000000 		.4byte	0x73
 2406 063c 55060000 		.4byte	0x655
 2407 0640 16       		.uleb128 0x16
 2408 0641 74040000 		.4byte	0x474
 2409 0645 16       		.uleb128 0x16
 2410 0646 F4000000 		.4byte	0xf4
 2411 064a 16       		.uleb128 0x16
 2412 064b 73000000 		.4byte	0x73
 2413 064f 16       		.uleb128 0x16
 2414 0650 45000000 		.4byte	0x45
 2415 0654 00       		.byte	0
 2416 0655 0F       		.uleb128 0xf
 2417 0656 04       		.byte	0x4
 2418 0657 36060000 		.4byte	0x636
 2419 065b 15       		.uleb128 0x15
 2420 065c 01       		.byte	0x1
 2421 065d 45000000 		.4byte	0x45
 2422 0661 70060000 		.4byte	0x670
 2423 0665 16       		.uleb128 0x16
 2424 0666 74040000 		.4byte	0x474
 2425 066a 16       		.uleb128 0x16
 2426 066b F4000000 		.4byte	0xf4
 2427 066f 00       		.byte	0
ARM GAS  /tmp/cc17JTRV.s 			page 79


 2428 0670 0F       		.uleb128 0xf
 2429 0671 04       		.byte	0x4
 2430 0672 5B060000 		.4byte	0x65b
 2431 0676 08       		.uleb128 0x8
 2432 0677 30000000 		.4byte	0x30
 2433 067b 86060000 		.4byte	0x686
 2434 067f 09       		.uleb128 0x9
 2435 0680 4C000000 		.4byte	0x4c
 2436 0684 02       		.byte	0x2
 2437 0685 00       		.byte	0
 2438 0686 08       		.uleb128 0x8
 2439 0687 30000000 		.4byte	0x30
 2440 068b 96060000 		.4byte	0x696
 2441 068f 09       		.uleb128 0x9
 2442 0690 4C000000 		.4byte	0x4c
 2443 0694 00       		.byte	0
 2444 0695 00       		.byte	0
 2445 0696 05       		.uleb128 0x5
 2446 0697 EF080000 		.4byte	.LASF87
 2447 069b 06       		.byte	0x6
 2448 069c 1E01     		.2byte	0x11e
 2449 069e 7A040000 		.4byte	0x47a
 2450 06a2 12       		.uleb128 0x12
 2451 06a3 C5060000 		.4byte	.LASF88
 2452 06a7 0C       		.byte	0xc
 2453 06a8 06       		.byte	0x6
 2454 06a9 2201     		.2byte	0x122
 2455 06ab DD060000 		.4byte	0x6dd
 2456 06af 13       		.uleb128 0x13
 2457 06b0 39090000 		.4byte	.LASF19
 2458 06b4 06       		.byte	0x6
 2459 06b5 2401     		.2byte	0x124
 2460 06b7 DD060000 		.4byte	0x6dd
 2461 06bb 02       		.byte	0x2
 2462 06bc 23       		.byte	0x23
 2463 06bd 00       		.uleb128 0
 2464 06be 13       		.uleb128 0x13
 2465 06bf 39060000 		.4byte	.LASF89
 2466 06c3 06       		.byte	0x6
 2467 06c4 2501     		.2byte	0x125
 2468 06c6 45000000 		.4byte	0x45
 2469 06ca 02       		.byte	0x2
 2470 06cb 23       		.byte	0x23
 2471 06cc 04       		.uleb128 0x4
 2472 06cd 13       		.uleb128 0x13
 2473 06ce BF060000 		.4byte	.LASF90
 2474 06d2 06       		.byte	0x6
 2475 06d3 2601     		.2byte	0x126
 2476 06d5 E3060000 		.4byte	0x6e3
 2477 06d9 02       		.byte	0x2
 2478 06da 23       		.byte	0x23
 2479 06db 08       		.uleb128 0x8
 2480 06dc 00       		.byte	0
 2481 06dd 0F       		.uleb128 0xf
 2482 06de 04       		.byte	0x4
 2483 06df A2060000 		.4byte	0x6a2
 2484 06e3 0F       		.uleb128 0xf
ARM GAS  /tmp/cc17JTRV.s 			page 80


 2485 06e4 04       		.byte	0x4
 2486 06e5 96060000 		.4byte	0x696
 2487 06e9 12       		.uleb128 0x12
 2488 06ea 56080000 		.4byte	.LASF91
 2489 06ee 18       		.byte	0x18
 2490 06ef 06       		.byte	0x6
 2491 06f0 3E01     		.2byte	0x13e
 2492 06f2 33070000 		.4byte	0x733
 2493 06f6 13       		.uleb128 0x13
 2494 06f7 B6070000 		.4byte	.LASF92
 2495 06fb 06       		.byte	0x6
 2496 06fc 3F01     		.2byte	0x13f
 2497 06fe 33070000 		.4byte	0x733
 2498 0702 02       		.byte	0x2
 2499 0703 23       		.byte	0x23
 2500 0704 00       		.uleb128 0
 2501 0705 13       		.uleb128 0x13
 2502 0706 FC000000 		.4byte	.LASF93
 2503 070a 06       		.byte	0x6
 2504 070b 4001     		.2byte	0x140
 2505 070d 33070000 		.4byte	0x733
 2506 0711 02       		.byte	0x2
 2507 0712 23       		.byte	0x23
 2508 0713 06       		.uleb128 0x6
 2509 0714 13       		.uleb128 0x13
 2510 0715 7F0B0000 		.4byte	.LASF94
 2511 0719 06       		.byte	0x6
 2512 071a 4101     		.2byte	0x141
 2513 071c 3E000000 		.4byte	0x3e
 2514 0720 02       		.byte	0x2
 2515 0721 23       		.byte	0x23
 2516 0722 0C       		.uleb128 0xc
 2517 0723 13       		.uleb128 0x13
 2518 0724 71070000 		.4byte	.LASF95
 2519 0728 06       		.byte	0x6
 2520 0729 4401     		.2byte	0x144
 2521 072b 5A000000 		.4byte	0x5a
 2522 072f 02       		.byte	0x2
 2523 0730 23       		.byte	0x23
 2524 0731 10       		.uleb128 0x10
 2525 0732 00       		.byte	0
 2526 0733 08       		.uleb128 0x8
 2527 0734 3E000000 		.4byte	0x3e
 2528 0738 43070000 		.4byte	0x743
 2529 073c 09       		.uleb128 0x9
 2530 073d 4C000000 		.4byte	0x4c
 2531 0741 02       		.byte	0x2
 2532 0742 00       		.byte	0
 2533 0743 12       		.uleb128 0x12
 2534 0744 0B0B0000 		.4byte	.LASF96
 2535 0748 10       		.byte	0x10
 2536 0749 06       		.byte	0x6
 2537 074a 5F01     		.2byte	0x15f
 2538 074c 8D070000 		.4byte	0x78d
 2539 0750 13       		.uleb128 0x13
 2540 0751 560B0000 		.4byte	.LASF97
 2541 0755 06       		.byte	0x6
ARM GAS  /tmp/cc17JTRV.s 			page 81


 2542 0756 6201     		.2byte	0x162
 2543 0758 67010000 		.4byte	0x167
 2544 075c 02       		.byte	0x2
 2545 075d 23       		.byte	0x23
 2546 075e 00       		.uleb128 0
 2547 075f 13       		.uleb128 0x13
 2548 0760 BF010000 		.4byte	.LASF98
 2549 0764 06       		.byte	0x6
 2550 0765 6301     		.2byte	0x163
 2551 0767 45000000 		.4byte	0x45
 2552 076b 02       		.byte	0x2
 2553 076c 23       		.byte	0x23
 2554 076d 04       		.uleb128 0x4
 2555 076e 13       		.uleb128 0x13
 2556 076f CD040000 		.4byte	.LASF99
 2557 0773 06       		.byte	0x6
 2558 0774 6401     		.2byte	0x164
 2559 0776 67010000 		.4byte	0x167
 2560 077a 02       		.byte	0x2
 2561 077b 23       		.byte	0x23
 2562 077c 08       		.uleb128 0x8
 2563 077d 13       		.uleb128 0x13
 2564 077e B5060000 		.4byte	.LASF100
 2565 0782 06       		.byte	0x6
 2566 0783 6501     		.2byte	0x165
 2567 0785 8D070000 		.4byte	0x78d
 2568 0789 02       		.byte	0x2
 2569 078a 23       		.byte	0x23
 2570 078b 0C       		.uleb128 0xc
 2571 078c 00       		.byte	0
 2572 078d 0F       		.uleb128 0xf
 2573 078e 04       		.byte	0x4
 2574 078f 67010000 		.4byte	0x167
 2575 0793 12       		.uleb128 0x12
 2576 0794 22020000 		.4byte	.LASF101
 2577 0798 50       		.byte	0x50
 2578 0799 06       		.byte	0x6
 2579 079a 6901     		.2byte	0x169
 2580 079c 46080000 		.4byte	0x846
 2581 07a0 13       		.uleb128 0x13
 2582 07a1 A3080000 		.4byte	.LASF102
 2583 07a5 06       		.byte	0x6
 2584 07a6 6C01     		.2byte	0x16c
 2585 07a8 F3050000 		.4byte	0x5f3
 2586 07ac 02       		.byte	0x2
 2587 07ad 23       		.byte	0x23
 2588 07ae 00       		.uleb128 0
 2589 07af 13       		.uleb128 0x13
 2590 07b0 350A0000 		.4byte	.LASF103
 2591 07b4 06       		.byte	0x6
 2592 07b5 6D01     		.2byte	0x16d
 2593 07b7 DE000000 		.4byte	0xde
 2594 07bb 02       		.byte	0x2
 2595 07bc 23       		.byte	0x23
 2596 07bd 04       		.uleb128 0x4
 2597 07be 13       		.uleb128 0x13
 2598 07bf 5A070000 		.4byte	.LASF104
ARM GAS  /tmp/cc17JTRV.s 			page 82


 2599 07c3 06       		.byte	0x6
 2600 07c4 6E01     		.2byte	0x16e
 2601 07c6 DE000000 		.4byte	0xde
 2602 07ca 02       		.byte	0x2
 2603 07cb 23       		.byte	0x23
 2604 07cc 0C       		.uleb128 0xc
 2605 07cd 13       		.uleb128 0x13
 2606 07ce FB070000 		.4byte	.LASF105
 2607 07d2 06       		.byte	0x6
 2608 07d3 6F01     		.2byte	0x16f
 2609 07d5 DE000000 		.4byte	0xde
 2610 07d9 02       		.byte	0x2
 2611 07da 23       		.byte	0x23
 2612 07db 14       		.uleb128 0x14
 2613 07dc 13       		.uleb128 0x13
 2614 07dd B6000000 		.4byte	.LASF106
 2615 07e1 06       		.byte	0x6
 2616 07e2 7001     		.2byte	0x170
 2617 07e4 46080000 		.4byte	0x846
 2618 07e8 02       		.byte	0x2
 2619 07e9 23       		.byte	0x23
 2620 07ea 1C       		.uleb128 0x1c
 2621 07eb 13       		.uleb128 0x13
 2622 07ec 1C0C0000 		.4byte	.LASF107
 2623 07f0 06       		.byte	0x6
 2624 07f1 7101     		.2byte	0x171
 2625 07f3 45000000 		.4byte	0x45
 2626 07f7 02       		.byte	0x2
 2627 07f8 23       		.byte	0x23
 2628 07f9 24       		.uleb128 0x24
 2629 07fa 13       		.uleb128 0x13
 2630 07fb 9C010000 		.4byte	.LASF108
 2631 07ff 06       		.byte	0x6
 2632 0800 7201     		.2byte	0x172
 2633 0802 DE000000 		.4byte	0xde
 2634 0806 02       		.byte	0x2
 2635 0807 23       		.byte	0x23
 2636 0808 28       		.uleb128 0x28
 2637 0809 13       		.uleb128 0x13
 2638 080a B9080000 		.4byte	.LASF109
 2639 080e 06       		.byte	0x6
 2640 080f 7301     		.2byte	0x173
 2641 0811 DE000000 		.4byte	0xde
 2642 0815 02       		.byte	0x2
 2643 0816 23       		.byte	0x23
 2644 0817 30       		.uleb128 0x30
 2645 0818 13       		.uleb128 0x13
 2646 0819 B60B0000 		.4byte	.LASF110
 2647 081d 06       		.byte	0x6
 2648 081e 7401     		.2byte	0x174
 2649 0820 DE000000 		.4byte	0xde
 2650 0824 02       		.byte	0x2
 2651 0825 23       		.byte	0x23
 2652 0826 38       		.uleb128 0x38
 2653 0827 13       		.uleb128 0x13
 2654 0828 20070000 		.4byte	.LASF111
 2655 082c 06       		.byte	0x6
ARM GAS  /tmp/cc17JTRV.s 			page 83


 2656 082d 7501     		.2byte	0x175
 2657 082f DE000000 		.4byte	0xde
 2658 0833 02       		.byte	0x2
 2659 0834 23       		.byte	0x23
 2660 0835 40       		.uleb128 0x40
 2661 0836 13       		.uleb128 0x13
 2662 0837 96000000 		.4byte	.LASF112
 2663 083b 06       		.byte	0x6
 2664 083c 7601     		.2byte	0x176
 2665 083e DE000000 		.4byte	0xde
 2666 0842 02       		.byte	0x2
 2667 0843 23       		.byte	0x23
 2668 0844 48       		.uleb128 0x48
 2669 0845 00       		.byte	0
 2670 0846 08       		.uleb128 0x8
 2671 0847 F9050000 		.4byte	0x5f9
 2672 084b 56080000 		.4byte	0x856
 2673 084f 09       		.uleb128 0x9
 2674 0850 4C000000 		.4byte	0x4c
 2675 0854 07       		.byte	0x7
 2676 0855 00       		.byte	0
 2677 0856 0F       		.uleb128 0xf
 2678 0857 04       		.byte	0x4
 2679 0858 43070000 		.4byte	0x743
 2680 085c 18       		.uleb128 0x18
 2681 085d 01       		.byte	0x1
 2682 085e 68080000 		.4byte	0x868
 2683 0862 16       		.uleb128 0x16
 2684 0863 74040000 		.4byte	0x474
 2685 0867 00       		.byte	0
 2686 0868 0F       		.uleb128 0xf
 2687 0869 04       		.byte	0x4
 2688 086a 5C080000 		.4byte	0x85c
 2689 086e 0F       		.uleb128 0xf
 2690 086f 04       		.byte	0x4
 2691 0870 E9060000 		.4byte	0x6e9
 2692 0874 0F       		.uleb128 0xf
 2693 0875 04       		.byte	0x4
 2694 0876 7D010000 		.4byte	0x17d
 2695 087a 18       		.uleb128 0x18
 2696 087b 01       		.byte	0x1
 2697 087c 86080000 		.4byte	0x886
 2698 0880 16       		.uleb128 0x16
 2699 0881 45000000 		.4byte	0x45
 2700 0885 00       		.byte	0
 2701 0886 0F       		.uleb128 0xf
 2702 0887 04       		.byte	0x4
 2703 0888 8C080000 		.4byte	0x88c
 2704 088c 0F       		.uleb128 0xf
 2705 088d 04       		.byte	0x4
 2706 088e 7A080000 		.4byte	0x87a
 2707 0892 0F       		.uleb128 0xf
 2708 0893 04       		.byte	0x4
 2709 0894 93070000 		.4byte	0x793
 2710 0898 04       		.uleb128 0x4
 2711 0899 5E020000 		.4byte	.LASF113
 2712 089d 07       		.byte	0x7
ARM GAS  /tmp/cc17JTRV.s 			page 84


 2713 089e 2A       		.byte	0x2a
 2714 089f 30000000 		.4byte	0x30
 2715 08a3 04       		.uleb128 0x4
 2716 08a4 5A0A0000 		.4byte	.LASF114
 2717 08a8 07       		.byte	0x7
 2718 08a9 35       		.byte	0x35
 2719 08aa 37000000 		.4byte	0x37
 2720 08ae 04       		.uleb128 0x4
 2721 08af 38080000 		.4byte	.LASF115
 2722 08b3 07       		.byte	0x7
 2723 08b4 36       		.byte	0x36
 2724 08b5 3E000000 		.4byte	0x3e
 2725 08b9 04       		.uleb128 0x4
 2726 08ba 430B0000 		.4byte	.LASF116
 2727 08be 07       		.byte	0x7
 2728 08bf 50       		.byte	0x50
 2729 08c0 01010000 		.4byte	0x101
 2730 08c4 17       		.uleb128 0x17
 2731 08c5 C9080000 		.4byte	0x8c9
 2732 08c9 19       		.uleb128 0x19
 2733 08ca B9080000 		.4byte	0x8b9
 2734 08ce 19       		.uleb128 0x19
 2735 08cf B9080000 		.4byte	0x8b9
 2736 08d3 1A       		.uleb128 0x1a
 2737 08d4 FA010000 		.4byte	.LASF319
 2738 08d8 01       		.byte	0x1
 2739 08d9 08       		.byte	0x8
 2740 08da 49       		.byte	0x49
 2741 08db D0090000 		.4byte	0x9d0
 2742 08df 1B       		.uleb128 0x1b
 2743 08e0 A0040000 		.4byte	.LASF117
 2744 08e4 72       		.sleb128 -14
 2745 08e5 1B       		.uleb128 0x1b
 2746 08e6 F9040000 		.4byte	.LASF118
 2747 08ea 74       		.sleb128 -12
 2748 08eb 1B       		.uleb128 0x1b
 2749 08ec CA050000 		.4byte	.LASF119
 2750 08f0 75       		.sleb128 -11
 2751 08f1 1B       		.uleb128 0x1b
 2752 08f2 07030000 		.4byte	.LASF120
 2753 08f6 76       		.sleb128 -10
 2754 08f7 1B       		.uleb128 0x1b
 2755 08f8 6D060000 		.4byte	.LASF121
 2756 08fc 7B       		.sleb128 -5
 2757 08fd 1B       		.uleb128 0x1b
 2758 08fe CB090000 		.4byte	.LASF122
 2759 0902 7C       		.sleb128 -4
 2760 0903 1B       		.uleb128 0x1b
 2761 0904 AA0B0000 		.4byte	.LASF123
 2762 0908 7E       		.sleb128 -2
 2763 0909 1B       		.uleb128 0x1b
 2764 090a 2E020000 		.4byte	.LASF124
 2765 090e 7F       		.sleb128 -1
 2766 090f 1B       		.uleb128 0x1b
 2767 0910 48040000 		.4byte	.LASF125
 2768 0914 00       		.sleb128 0
 2769 0915 1B       		.uleb128 0x1b
ARM GAS  /tmp/cc17JTRV.s 			page 85


 2770 0916 0A010000 		.4byte	.LASF126
 2771 091a 01       		.sleb128 1
 2772 091b 1B       		.uleb128 0x1b
 2773 091c 290C0000 		.4byte	.LASF127
 2774 0920 02       		.sleb128 2
 2775 0921 1B       		.uleb128 0x1b
 2776 0922 84040000 		.4byte	.LASF128
 2777 0926 03       		.sleb128 3
 2778 0927 1B       		.uleb128 0x1b
 2779 0928 94050000 		.4byte	.LASF129
 2780 092c 04       		.sleb128 4
 2781 092d 1B       		.uleb128 0x1b
 2782 092e 1C040000 		.4byte	.LASF130
 2783 0932 05       		.sleb128 5
 2784 0933 1B       		.uleb128 0x1b
 2785 0934 25040000 		.4byte	.LASF131
 2786 0938 06       		.sleb128 6
 2787 0939 1B       		.uleb128 0x1b
 2788 093a 01090000 		.4byte	.LASF132
 2789 093e 08       		.sleb128 8
 2790 093f 1B       		.uleb128 0x1b
 2791 0940 C2070000 		.4byte	.LASF133
 2792 0944 09       		.sleb128 9
 2793 0945 1B       		.uleb128 0x1b
 2794 0946 56030000 		.4byte	.LASF134
 2795 094a 0A       		.sleb128 10
 2796 094b 1B       		.uleb128 0x1b
 2797 094c 810A0000 		.4byte	.LASF135
 2798 0950 0B       		.sleb128 11
 2799 0951 1B       		.uleb128 0x1b
 2800 0952 AD090000 		.4byte	.LASF136
 2801 0956 0C       		.sleb128 12
 2802 0957 1B       		.uleb128 0x1b
 2803 0958 62040000 		.4byte	.LASF137
 2804 095c 0D       		.sleb128 13
 2805 095d 1B       		.uleb128 0x1b
 2806 095e 5A090000 		.4byte	.LASF138
 2807 0962 0E       		.sleb128 14
 2808 0963 1B       		.uleb128 0x1b
 2809 0964 79080000 		.4byte	.LASF139
 2810 0968 0F       		.sleb128 15
 2811 0969 1B       		.uleb128 0x1b
 2812 096a 66080000 		.4byte	.LASF140
 2813 096e 12       		.sleb128 18
 2814 096f 1B       		.uleb128 0x1b
 2815 0970 0F070000 		.4byte	.LASF141
 2816 0974 13       		.sleb128 19
 2817 0975 1B       		.uleb128 0x1b
 2818 0976 40060000 		.4byte	.LASF142
 2819 097a 14       		.sleb128 20
 2820 097b 1B       		.uleb128 0x1b
 2821 097c 4C090000 		.4byte	.LASF143
 2822 0980 15       		.sleb128 21
 2823 0981 1B       		.uleb128 0x1b
 2824 0982 300B0000 		.4byte	.LASF144
 2825 0986 16       		.sleb128 22
 2826 0987 1B       		.uleb128 0x1b
ARM GAS  /tmp/cc17JTRV.s 			page 86


 2827 0988 9D090000 		.4byte	.LASF145
 2828 098c 17       		.sleb128 23
 2829 098d 1B       		.uleb128 0x1b
 2830 098e 59040000 		.4byte	.LASF146
 2831 0992 18       		.sleb128 24
 2832 0993 1B       		.uleb128 0x1b
 2833 0994 18000000 		.4byte	.LASF147
 2834 0998 19       		.sleb128 25
 2835 0999 1B       		.uleb128 0x1b
 2836 099a CE0B0000 		.4byte	.LASF148
 2837 099e 1A       		.sleb128 26
 2838 099f 1B       		.uleb128 0x1b
 2839 09a0 06070000 		.4byte	.LASF149
 2840 09a4 1B       		.sleb128 27
 2841 09a5 1B       		.uleb128 0x1b
 2842 09a6 FF010000 		.4byte	.LASF150
 2843 09aa 1C       		.sleb128 28
 2844 09ab 1B       		.uleb128 0x1b
 2845 09ac B0080000 		.4byte	.LASF151
 2846 09b0 1D       		.sleb128 29
 2847 09b1 1B       		.uleb128 0x1b
 2848 09b2 96040000 		.4byte	.LASF152
 2849 09b6 1E       		.sleb128 30
 2850 09b7 1B       		.uleb128 0x1b
 2851 09b8 C8030000 		.4byte	.LASF153
 2852 09bc 1F       		.sleb128 31
 2853 09bd 1B       		.uleb128 0x1b
 2854 09be 85010000 		.4byte	.LASF154
 2855 09c2 20       		.sleb128 32
 2856 09c3 1B       		.uleb128 0x1b
 2857 09c4 06040000 		.4byte	.LASF155
 2858 09c8 21       		.sleb128 33
 2859 09c9 1B       		.uleb128 0x1b
 2860 09ca 8D040000 		.4byte	.LASF156
 2861 09ce 22       		.sleb128 34
 2862 09cf 00       		.byte	0
 2863 09d0 04       		.uleb128 0x4
 2864 09d1 3A050000 		.4byte	.LASF157
 2865 09d5 08       		.byte	0x8
 2866 09d6 76       		.byte	0x76
 2867 09d7 D3080000 		.4byte	0x8d3
 2868 09db 1C       		.uleb128 0x1c
 2869 09dc 040E     		.2byte	0xe04
 2870 09de 01       		.byte	0x1
 2871 09df 84       		.byte	0x84
 2872 09e0 A50A0000 		.4byte	0xaa5
 2873 09e4 0B       		.uleb128 0xb
 2874 09e5 E00B0000 		.4byte	.LASF158
 2875 09e9 01       		.byte	0x1
 2876 09ea 86       		.byte	0x86
 2877 09eb B50A0000 		.4byte	0xab5
 2878 09ef 02       		.byte	0x2
 2879 09f0 23       		.byte	0x23
 2880 09f1 00       		.uleb128 0
 2881 09f2 0B       		.uleb128 0xb
 2882 09f3 8A020000 		.4byte	.LASF159
 2883 09f7 01       		.byte	0x1
ARM GAS  /tmp/cc17JTRV.s 			page 87


 2884 09f8 87       		.byte	0x87
 2885 09f9 BA0A0000 		.4byte	0xaba
 2886 09fd 02       		.byte	0x2
 2887 09fe 23       		.byte	0x23
 2888 09ff 20       		.uleb128 0x20
 2889 0a00 0B       		.uleb128 0xb
 2890 0a01 DA080000 		.4byte	.LASF160
 2891 0a05 01       		.byte	0x1
 2892 0a06 88       		.byte	0x88
 2893 0a07 CA0A0000 		.4byte	0xaca
 2894 0a0b 03       		.byte	0x3
 2895 0a0c 23       		.byte	0x23
 2896 0a0d 8001     		.uleb128 0x80
 2897 0a0f 0B       		.uleb128 0xb
 2898 0a10 00000000 		.4byte	.LASF161
 2899 0a14 01       		.byte	0x1
 2900 0a15 89       		.byte	0x89
 2901 0a16 BA0A0000 		.4byte	0xaba
 2902 0a1a 03       		.byte	0x3
 2903 0a1b 23       		.byte	0x23
 2904 0a1c A001     		.uleb128 0xa0
 2905 0a1e 0B       		.uleb128 0xb
 2906 0a1f D1030000 		.4byte	.LASF162
 2907 0a23 01       		.byte	0x1
 2908 0a24 8A       		.byte	0x8a
 2909 0a25 CF0A0000 		.4byte	0xacf
 2910 0a29 03       		.byte	0x3
 2911 0a2a 23       		.byte	0x23
 2912 0a2b 8002     		.uleb128 0x100
 2913 0a2d 0B       		.uleb128 0xb
 2914 0a2e FD020000 		.4byte	.LASF163
 2915 0a32 01       		.byte	0x1
 2916 0a33 8B       		.byte	0x8b
 2917 0a34 BA0A0000 		.4byte	0xaba
 2918 0a38 03       		.byte	0x3
 2919 0a39 23       		.byte	0x23
 2920 0a3a A002     		.uleb128 0x120
 2921 0a3c 0B       		.uleb128 0xb
 2922 0a3d 1D010000 		.4byte	.LASF164
 2923 0a41 01       		.byte	0x1
 2924 0a42 8C       		.byte	0x8c
 2925 0a43 D40A0000 		.4byte	0xad4
 2926 0a47 03       		.byte	0x3
 2927 0a48 23       		.byte	0x23
 2928 0a49 8003     		.uleb128 0x180
 2929 0a4b 0B       		.uleb128 0xb
 2930 0a4c A2020000 		.4byte	.LASF165
 2931 0a50 01       		.byte	0x1
 2932 0a51 8D       		.byte	0x8d
 2933 0a52 BA0A0000 		.4byte	0xaba
 2934 0a56 03       		.byte	0x3
 2935 0a57 23       		.byte	0x23
 2936 0a58 A003     		.uleb128 0x1a0
 2937 0a5a 0B       		.uleb128 0xb
 2938 0a5b D0020000 		.4byte	.LASF166
 2939 0a5f 01       		.byte	0x1
 2940 0a60 8E       		.byte	0x8e
ARM GAS  /tmp/cc17JTRV.s 			page 88


 2941 0a61 D90A0000 		.4byte	0xad9
 2942 0a65 03       		.byte	0x3
 2943 0a66 23       		.byte	0x23
 2944 0a67 8004     		.uleb128 0x200
 2945 0a69 0B       		.uleb128 0xb
 2946 0a6a AC020000 		.4byte	.LASF167
 2947 0a6e 01       		.byte	0x1
 2948 0a6f 8F       		.byte	0x8f
 2949 0a70 DE0A0000 		.4byte	0xade
 2950 0a74 03       		.byte	0x3
 2951 0a75 23       		.byte	0x23
 2952 0a76 A004     		.uleb128 0x220
 2953 0a78 0E       		.uleb128 0xe
 2954 0a79 495000   		.ascii	"IP\000"
 2955 0a7c 01       		.byte	0x1
 2956 0a7d 90       		.byte	0x90
 2957 0a7e FE0A0000 		.4byte	0xafe
 2958 0a82 03       		.byte	0x3
 2959 0a83 23       		.byte	0x23
 2960 0a84 8006     		.uleb128 0x300
 2961 0a86 0B       		.uleb128 0xb
 2962 0a87 B6020000 		.4byte	.LASF168
 2963 0a8b 01       		.byte	0x1
 2964 0a8c 91       		.byte	0x91
 2965 0a8d 030B0000 		.4byte	0xb03
 2966 0a91 03       		.byte	0x3
 2967 0a92 23       		.byte	0x23
 2968 0a93 F007     		.uleb128 0x3f0
 2969 0a95 0B       		.uleb128 0xb
 2970 0a96 01040000 		.4byte	.LASF169
 2971 0a9a 01       		.byte	0x1
 2972 0a9b 92       		.byte	0x92
 2973 0a9c CE080000 		.4byte	0x8ce
 2974 0aa0 03       		.byte	0x3
 2975 0aa1 23       		.byte	0x23
 2976 0aa2 801C     		.uleb128 0xe00
 2977 0aa4 00       		.byte	0
 2978 0aa5 08       		.uleb128 0x8
 2979 0aa6 B9080000 		.4byte	0x8b9
 2980 0aaa B50A0000 		.4byte	0xab5
 2981 0aae 09       		.uleb128 0x9
 2982 0aaf 4C000000 		.4byte	0x4c
 2983 0ab3 07       		.byte	0x7
 2984 0ab4 00       		.byte	0
 2985 0ab5 19       		.uleb128 0x19
 2986 0ab6 A50A0000 		.4byte	0xaa5
 2987 0aba 08       		.uleb128 0x8
 2988 0abb B9080000 		.4byte	0x8b9
 2989 0abf CA0A0000 		.4byte	0xaca
 2990 0ac3 09       		.uleb128 0x9
 2991 0ac4 4C000000 		.4byte	0x4c
 2992 0ac8 17       		.byte	0x17
 2993 0ac9 00       		.byte	0
 2994 0aca 19       		.uleb128 0x19
 2995 0acb A50A0000 		.4byte	0xaa5
 2996 0acf 19       		.uleb128 0x19
 2997 0ad0 A50A0000 		.4byte	0xaa5
ARM GAS  /tmp/cc17JTRV.s 			page 89


 2998 0ad4 19       		.uleb128 0x19
 2999 0ad5 A50A0000 		.4byte	0xaa5
 3000 0ad9 19       		.uleb128 0x19
 3001 0ada A50A0000 		.4byte	0xaa5
 3002 0ade 08       		.uleb128 0x8
 3003 0adf B9080000 		.4byte	0x8b9
 3004 0ae3 EE0A0000 		.4byte	0xaee
 3005 0ae7 09       		.uleb128 0x9
 3006 0ae8 4C000000 		.4byte	0x4c
 3007 0aec 37       		.byte	0x37
 3008 0aed 00       		.byte	0
 3009 0aee 08       		.uleb128 0x8
 3010 0aef 98080000 		.4byte	0x898
 3011 0af3 FE0A0000 		.4byte	0xafe
 3012 0af7 09       		.uleb128 0x9
 3013 0af8 4C000000 		.4byte	0x4c
 3014 0afc EF       		.byte	0xef
 3015 0afd 00       		.byte	0
 3016 0afe 19       		.uleb128 0x19
 3017 0aff EE0A0000 		.4byte	0xaee
 3018 0b03 08       		.uleb128 0x8
 3019 0b04 B9080000 		.4byte	0x8b9
 3020 0b08 140B0000 		.4byte	0xb14
 3021 0b0c 1D       		.uleb128 0x1d
 3022 0b0d 4C000000 		.4byte	0x4c
 3023 0b11 8302     		.2byte	0x283
 3024 0b13 00       		.byte	0
 3025 0b14 04       		.uleb128 0x4
 3026 0b15 42000000 		.4byte	.LASF170
 3027 0b19 01       		.byte	0x1
 3028 0b1a 93       		.byte	0x93
 3029 0b1b DB090000 		.4byte	0x9db
 3030 0b1f 0A       		.uleb128 0xa
 3031 0b20 74       		.byte	0x74
 3032 0b21 01       		.byte	0x1
 3033 0b22 9B       		.byte	0x9b
 3034 0b23 320C0000 		.4byte	0xc32
 3035 0b27 0B       		.uleb128 0xb
 3036 0b28 D8010000 		.4byte	.LASF171
 3037 0b2c 01       		.byte	0x1
 3038 0b2d 9D       		.byte	0x9d
 3039 0b2e C4080000 		.4byte	0x8c4
 3040 0b32 02       		.byte	0x2
 3041 0b33 23       		.byte	0x23
 3042 0b34 00       		.uleb128 0
 3043 0b35 0B       		.uleb128 0xb
 3044 0b36 4D020000 		.4byte	.LASF172
 3045 0b3a 01       		.byte	0x1
 3046 0b3b 9E       		.byte	0x9e
 3047 0b3c CE080000 		.4byte	0x8ce
 3048 0b40 02       		.byte	0x2
 3049 0b41 23       		.byte	0x23
 3050 0b42 04       		.uleb128 0x4
 3051 0b43 0B       		.uleb128 0xb
 3052 0b44 C0000000 		.4byte	.LASF173
 3053 0b48 01       		.byte	0x1
 3054 0b49 9F       		.byte	0x9f
ARM GAS  /tmp/cc17JTRV.s 			page 90


 3055 0b4a CE080000 		.4byte	0x8ce
 3056 0b4e 02       		.byte	0x2
 3057 0b4f 23       		.byte	0x23
 3058 0b50 08       		.uleb128 0x8
 3059 0b51 0B       		.uleb128 0xb
 3060 0b52 6A010000 		.4byte	.LASF174
 3061 0b56 01       		.byte	0x1
 3062 0b57 A0       		.byte	0xa0
 3063 0b58 CE080000 		.4byte	0x8ce
 3064 0b5c 02       		.byte	0x2
 3065 0b5d 23       		.byte	0x23
 3066 0b5e 0C       		.uleb128 0xc
 3067 0b5f 0E       		.uleb128 0xe
 3068 0b60 53435200 		.ascii	"SCR\000"
 3069 0b64 01       		.byte	0x1
 3070 0b65 A1       		.byte	0xa1
 3071 0b66 CE080000 		.4byte	0x8ce
 3072 0b6a 02       		.byte	0x2
 3073 0b6b 23       		.byte	0x23
 3074 0b6c 10       		.uleb128 0x10
 3075 0b6d 0E       		.uleb128 0xe
 3076 0b6e 43435200 		.ascii	"CCR\000"
 3077 0b72 01       		.byte	0x1
 3078 0b73 A2       		.byte	0xa2
 3079 0b74 CE080000 		.4byte	0x8ce
 3080 0b78 02       		.byte	0x2
 3081 0b79 23       		.byte	0x23
 3082 0b7a 14       		.uleb128 0x14
 3083 0b7b 0E       		.uleb128 0xe
 3084 0b7c 53485000 		.ascii	"SHP\000"
 3085 0b80 01       		.byte	0x1
 3086 0b81 A3       		.byte	0xa3
 3087 0b82 420C0000 		.4byte	0xc42
 3088 0b86 02       		.byte	0x2
 3089 0b87 23       		.byte	0x23
 3090 0b88 18       		.uleb128 0x18
 3091 0b89 0B       		.uleb128 0xb
 3092 0b8a F3030000 		.4byte	.LASF175
 3093 0b8e 01       		.byte	0x1
 3094 0b8f A4       		.byte	0xa4
 3095 0b90 CE080000 		.4byte	0x8ce
 3096 0b94 02       		.byte	0x2
 3097 0b95 23       		.byte	0x23
 3098 0b96 24       		.uleb128 0x24
 3099 0b97 0B       		.uleb128 0xb
 3100 0b98 7A090000 		.4byte	.LASF176
 3101 0b9c 01       		.byte	0x1
 3102 0b9d A5       		.byte	0xa5
 3103 0b9e CE080000 		.4byte	0x8ce
 3104 0ba2 02       		.byte	0x2
 3105 0ba3 23       		.byte	0x23
 3106 0ba4 28       		.uleb128 0x28
 3107 0ba5 0B       		.uleb128 0xb
 3108 0ba6 96030000 		.4byte	.LASF177
 3109 0baa 01       		.byte	0x1
 3110 0bab A6       		.byte	0xa6
 3111 0bac CE080000 		.4byte	0x8ce
ARM GAS  /tmp/cc17JTRV.s 			page 91


 3112 0bb0 02       		.byte	0x2
 3113 0bb1 23       		.byte	0x23
 3114 0bb2 2C       		.uleb128 0x2c
 3115 0bb3 0B       		.uleb128 0xb
 3116 0bb4 51030000 		.4byte	.LASF178
 3117 0bb8 01       		.byte	0x1
 3118 0bb9 A7       		.byte	0xa7
 3119 0bba CE080000 		.4byte	0x8ce
 3120 0bbe 02       		.byte	0x2
 3121 0bbf 23       		.byte	0x23
 3122 0bc0 30       		.uleb128 0x30
 3123 0bc1 0B       		.uleb128 0xb
 3124 0bc2 2F0A0000 		.4byte	.LASF179
 3125 0bc6 01       		.byte	0x1
 3126 0bc7 A8       		.byte	0xa8
 3127 0bc8 CE080000 		.4byte	0x8ce
 3128 0bcc 02       		.byte	0x2
 3129 0bcd 23       		.byte	0x23
 3130 0bce 34       		.uleb128 0x34
 3131 0bcf 0B       		.uleb128 0xb
 3132 0bd0 F6070000 		.4byte	.LASF180
 3133 0bd4 01       		.byte	0x1
 3134 0bd5 A9       		.byte	0xa9
 3135 0bd6 CE080000 		.4byte	0x8ce
 3136 0bda 02       		.byte	0x2
 3137 0bdb 23       		.byte	0x23
 3138 0bdc 38       		.uleb128 0x38
 3139 0bdd 0B       		.uleb128 0xb
 3140 0bde 20090000 		.4byte	.LASF181
 3141 0be2 01       		.byte	0x1
 3142 0be3 AA       		.byte	0xaa
 3143 0be4 CE080000 		.4byte	0x8ce
 3144 0be8 02       		.byte	0x2
 3145 0be9 23       		.byte	0x23
 3146 0bea 3C       		.uleb128 0x3c
 3147 0beb 0E       		.uleb128 0xe
 3148 0bec 50465200 		.ascii	"PFR\000"
 3149 0bf0 01       		.byte	0x1
 3150 0bf1 AB       		.byte	0xab
 3151 0bf2 570C0000 		.4byte	0xc57
 3152 0bf6 02       		.byte	0x2
 3153 0bf7 23       		.byte	0x23
 3154 0bf8 40       		.uleb128 0x40
 3155 0bf9 0E       		.uleb128 0xe
 3156 0bfa 44465200 		.ascii	"DFR\000"
 3157 0bfe 01       		.byte	0x1
 3158 0bff AC       		.byte	0xac
 3159 0c00 C4080000 		.4byte	0x8c4
 3160 0c04 02       		.byte	0x2
 3161 0c05 23       		.byte	0x23
 3162 0c06 48       		.uleb128 0x48
 3163 0c07 0E       		.uleb128 0xe
 3164 0c08 41445200 		.ascii	"ADR\000"
 3165 0c0c 01       		.byte	0x1
 3166 0c0d AD       		.byte	0xad
 3167 0c0e C4080000 		.4byte	0x8c4
 3168 0c12 02       		.byte	0x2
ARM GAS  /tmp/cc17JTRV.s 			page 92


 3169 0c13 23       		.byte	0x23
 3170 0c14 4C       		.uleb128 0x4c
 3171 0c15 0B       		.uleb128 0xb
 3172 0c16 240A0000 		.4byte	.LASF182
 3173 0c1a 01       		.byte	0x1
 3174 0c1b AE       		.byte	0xae
 3175 0c1c 710C0000 		.4byte	0xc71
 3176 0c20 02       		.byte	0x2
 3177 0c21 23       		.byte	0x23
 3178 0c22 50       		.uleb128 0x50
 3179 0c23 0B       		.uleb128 0xb
 3180 0c24 6A0A0000 		.4byte	.LASF183
 3181 0c28 01       		.byte	0x1
 3182 0c29 AF       		.byte	0xaf
 3183 0c2a 8B0C0000 		.4byte	0xc8b
 3184 0c2e 02       		.byte	0x2
 3185 0c2f 23       		.byte	0x23
 3186 0c30 60       		.uleb128 0x60
 3187 0c31 00       		.byte	0
 3188 0c32 08       		.uleb128 0x8
 3189 0c33 98080000 		.4byte	0x898
 3190 0c37 420C0000 		.4byte	0xc42
 3191 0c3b 09       		.uleb128 0x9
 3192 0c3c 4C000000 		.4byte	0x4c
 3193 0c40 0B       		.byte	0xb
 3194 0c41 00       		.byte	0
 3195 0c42 19       		.uleb128 0x19
 3196 0c43 320C0000 		.4byte	0xc32
 3197 0c47 08       		.uleb128 0x8
 3198 0c48 B9080000 		.4byte	0x8b9
 3199 0c4c 570C0000 		.4byte	0xc57
 3200 0c50 09       		.uleb128 0x9
 3201 0c51 4C000000 		.4byte	0x4c
 3202 0c55 01       		.byte	0x1
 3203 0c56 00       		.byte	0
 3204 0c57 17       		.uleb128 0x17
 3205 0c58 5C0C0000 		.4byte	0xc5c
 3206 0c5c 19       		.uleb128 0x19
 3207 0c5d 470C0000 		.4byte	0xc47
 3208 0c61 08       		.uleb128 0x8
 3209 0c62 B9080000 		.4byte	0x8b9
 3210 0c66 710C0000 		.4byte	0xc71
 3211 0c6a 09       		.uleb128 0x9
 3212 0c6b 4C000000 		.4byte	0x4c
 3213 0c6f 03       		.byte	0x3
 3214 0c70 00       		.byte	0
 3215 0c71 17       		.uleb128 0x17
 3216 0c72 760C0000 		.4byte	0xc76
 3217 0c76 19       		.uleb128 0x19
 3218 0c77 610C0000 		.4byte	0xc61
 3219 0c7b 08       		.uleb128 0x8
 3220 0c7c B9080000 		.4byte	0x8b9
 3221 0c80 8B0C0000 		.4byte	0xc8b
 3222 0c84 09       		.uleb128 0x9
 3223 0c85 4C000000 		.4byte	0x4c
 3224 0c89 04       		.byte	0x4
 3225 0c8a 00       		.byte	0
ARM GAS  /tmp/cc17JTRV.s 			page 93


 3226 0c8b 17       		.uleb128 0x17
 3227 0c8c 900C0000 		.4byte	0xc90
 3228 0c90 19       		.uleb128 0x19
 3229 0c91 7B0C0000 		.4byte	0xc7b
 3230 0c95 04       		.uleb128 0x4
 3231 0c96 3A030000 		.4byte	.LASF184
 3232 0c9a 01       		.byte	0x1
 3233 0c9b B0       		.byte	0xb0
 3234 0c9c 1F0B0000 		.4byte	0xb1f
 3235 0ca0 19       		.uleb128 0x19
 3236 0ca1 01010000 		.4byte	0x101
 3237 0ca5 17       		.uleb128 0x17
 3238 0ca6 A00C0000 		.4byte	0xca0
 3239 0caa 08       		.uleb128 0x8
 3240 0cab 01010000 		.4byte	0x101
 3241 0caf BA0C0000 		.4byte	0xcba
 3242 0cb3 09       		.uleb128 0x9
 3243 0cb4 4C000000 		.4byte	0x4c
 3244 0cb8 12       		.byte	0x12
 3245 0cb9 00       		.byte	0
 3246 0cba 1C       		.uleb128 0x1c
 3247 0cbb 2801     		.2byte	0x128
 3248 0cbd 08       		.byte	0x8
 3249 0cbe EF       		.byte	0xef
 3250 0cbf E00E0000 		.4byte	0xee0
 3251 0cc3 0B       		.uleb128 0xb
 3252 0cc4 A40A0000 		.4byte	.LASF185
 3253 0cc8 08       		.byte	0x8
 3254 0cc9 F0       		.byte	0xf0
 3255 0cca A00C0000 		.4byte	0xca0
 3256 0cce 02       		.byte	0x2
 3257 0ccf 23       		.byte	0x23
 3258 0cd0 00       		.uleb128 0
 3259 0cd1 0B       		.uleb128 0xb
 3260 0cd2 7B050000 		.4byte	.LASF186
 3261 0cd6 08       		.byte	0x8
 3262 0cd7 F1       		.byte	0xf1
 3263 0cd8 A00C0000 		.4byte	0xca0
 3264 0cdc 02       		.byte	0x2
 3265 0cdd 23       		.byte	0x23
 3266 0cde 04       		.uleb128 0x4
 3267 0cdf 0B       		.uleb128 0xb
 3268 0ce0 25090000 		.4byte	.LASF187
 3269 0ce4 08       		.byte	0x8
 3270 0ce5 F2       		.byte	0xf2
 3271 0ce6 A00C0000 		.4byte	0xca0
 3272 0cea 02       		.byte	0x2
 3273 0ceb 23       		.byte	0x23
 3274 0cec 08       		.uleb128 0x8
 3275 0ced 0B       		.uleb128 0xb
 3276 0cee 2F090000 		.4byte	.LASF188
 3277 0cf2 08       		.byte	0x8
 3278 0cf3 F3       		.byte	0xf3
 3279 0cf4 A00C0000 		.4byte	0xca0
 3280 0cf8 02       		.byte	0x2
 3281 0cf9 23       		.byte	0x23
 3282 0cfa 0C       		.uleb128 0xc
ARM GAS  /tmp/cc17JTRV.s 			page 94


 3283 0cfb 0B       		.uleb128 0xb
 3284 0cfc D70B0000 		.4byte	.LASF189
 3285 0d00 08       		.byte	0x8
 3286 0d01 F4       		.byte	0xf4
 3287 0d02 A00C0000 		.4byte	0xca0
 3288 0d06 02       		.byte	0x2
 3289 0d07 23       		.byte	0x23
 3290 0d08 10       		.uleb128 0x10
 3291 0d09 0B       		.uleb128 0xb
 3292 0d0a 6E0B0000 		.4byte	.LASF190
 3293 0d0e 08       		.byte	0x8
 3294 0d0f F5       		.byte	0xf5
 3295 0d10 A00C0000 		.4byte	0xca0
 3296 0d14 02       		.byte	0x2
 3297 0d15 23       		.byte	0x23
 3298 0d16 14       		.uleb128 0x14
 3299 0d17 0B       		.uleb128 0xb
 3300 0d18 C4040000 		.4byte	.LASF191
 3301 0d1c 08       		.byte	0x8
 3302 0d1d F6       		.byte	0xf6
 3303 0d1e A50C0000 		.4byte	0xca5
 3304 0d22 02       		.byte	0x2
 3305 0d23 23       		.byte	0x23
 3306 0d24 18       		.uleb128 0x18
 3307 0d25 0B       		.uleb128 0xb
 3308 0d26 66090000 		.4byte	.LASF192
 3309 0d2a 08       		.byte	0x8
 3310 0d2b F7       		.byte	0xf7
 3311 0d2c F00E0000 		.4byte	0xef0
 3312 0d30 02       		.byte	0x2
 3313 0d31 23       		.byte	0x23
 3314 0d32 1C       		.uleb128 0x1c
 3315 0d33 0B       		.uleb128 0xb
 3316 0d34 82050000 		.4byte	.LASF193
 3317 0d38 08       		.byte	0x8
 3318 0d39 F8       		.byte	0xf8
 3319 0d3a A50C0000 		.4byte	0xca5
 3320 0d3e 02       		.byte	0x2
 3321 0d3f 23       		.byte	0x23
 3322 0d40 20       		.uleb128 0x20
 3323 0d41 0B       		.uleb128 0xb
 3324 0d42 39070000 		.4byte	.LASF194
 3325 0d46 08       		.byte	0x8
 3326 0d47 F9       		.byte	0xf9
 3327 0d48 A00C0000 		.4byte	0xca0
 3328 0d4c 02       		.byte	0x2
 3329 0d4d 23       		.byte	0x23
 3330 0d4e 24       		.uleb128 0x24
 3331 0d4f 0B       		.uleb128 0xb
 3332 0d50 E8060000 		.4byte	.LASF195
 3333 0d54 08       		.byte	0x8
 3334 0d55 FA       		.byte	0xfa
 3335 0d56 A00C0000 		.4byte	0xca0
 3336 0d5a 02       		.byte	0x2
 3337 0d5b 23       		.byte	0x23
 3338 0d5c 28       		.uleb128 0x28
 3339 0d5d 0B       		.uleb128 0xb
ARM GAS  /tmp/cc17JTRV.s 			page 95


 3340 0d5e 9C0A0000 		.4byte	.LASF196
 3341 0d62 08       		.byte	0x8
 3342 0d63 FB       		.byte	0xfb
 3343 0d64 A50C0000 		.4byte	0xca5
 3344 0d68 02       		.byte	0x2
 3345 0d69 23       		.byte	0x23
 3346 0d6a 2C       		.uleb128 0x2c
 3347 0d6b 0B       		.uleb128 0xb
 3348 0d6c 82000000 		.4byte	.LASF197
 3349 0d70 08       		.byte	0x8
 3350 0d71 FC       		.byte	0xfc
 3351 0d72 A50C0000 		.4byte	0xca5
 3352 0d76 02       		.byte	0x2
 3353 0d77 23       		.byte	0x23
 3354 0d78 30       		.uleb128 0x30
 3355 0d79 0B       		.uleb128 0xb
 3356 0d7a 70090000 		.4byte	.LASF198
 3357 0d7e 08       		.byte	0x8
 3358 0d7f FD       		.byte	0xfd
 3359 0d80 050F0000 		.4byte	0xf05
 3360 0d84 02       		.byte	0x2
 3361 0d85 23       		.byte	0x23
 3362 0d86 34       		.uleb128 0x34
 3363 0d87 0B       		.uleb128 0xb
 3364 0d88 6F0A0000 		.4byte	.LASF199
 3365 0d8c 08       		.byte	0x8
 3366 0d8d FE       		.byte	0xfe
 3367 0d8e A50C0000 		.4byte	0xca5
 3368 0d92 02       		.byte	0x2
 3369 0d93 23       		.byte	0x23
 3370 0d94 3C       		.uleb128 0x3c
 3371 0d95 0B       		.uleb128 0xb
 3372 0d96 7A000000 		.4byte	.LASF200
 3373 0d9a 08       		.byte	0x8
 3374 0d9b FF       		.byte	0xff
 3375 0d9c A00C0000 		.4byte	0xca0
 3376 0da0 02       		.byte	0x2
 3377 0da1 23       		.byte	0x23
 3378 0da2 40       		.uleb128 0x40
 3379 0da3 13       		.uleb128 0x13
 3380 0da4 ED0B0000 		.4byte	.LASF201
 3381 0da8 08       		.byte	0x8
 3382 0da9 0001     		.2byte	0x100
 3383 0dab A00C0000 		.4byte	0xca0
 3384 0daf 02       		.byte	0x2
 3385 0db0 23       		.byte	0x23
 3386 0db1 44       		.uleb128 0x44
 3387 0db2 13       		.uleb128 0x13
 3388 0db3 62050000 		.4byte	.LASF202
 3389 0db7 08       		.byte	0x8
 3390 0db8 0101     		.2byte	0x101
 3391 0dba A00C0000 		.4byte	0xca0
 3392 0dbe 02       		.byte	0x2
 3393 0dbf 23       		.byte	0x23
 3394 0dc0 48       		.uleb128 0x48
 3395 0dc1 13       		.uleb128 0x13
 3396 0dc2 5E080000 		.4byte	.LASF203
ARM GAS  /tmp/cc17JTRV.s 			page 96


 3397 0dc6 08       		.byte	0x8
 3398 0dc7 0201     		.2byte	0x102
 3399 0dc9 A00C0000 		.4byte	0xca0
 3400 0dcd 02       		.byte	0x2
 3401 0dce 23       		.byte	0x23
 3402 0dcf 4C       		.uleb128 0x4c
 3403 0dd0 13       		.uleb128 0x13
 3404 0dd1 F9030000 		.4byte	.LASF204
 3405 0dd5 08       		.byte	0x8
 3406 0dd6 0301     		.2byte	0x103
 3407 0dd8 1A0F0000 		.4byte	0xf1a
 3408 0ddc 02       		.byte	0x2
 3409 0ddd 23       		.byte	0x23
 3410 0dde 50       		.uleb128 0x50
 3411 0ddf 13       		.uleb128 0x13
 3412 0de0 E8000000 		.4byte	.LASF205
 3413 0de4 08       		.byte	0x8
 3414 0de5 0401     		.2byte	0x104
 3415 0de7 240F0000 		.4byte	0xf24
 3416 0deb 03       		.byte	0x3
 3417 0dec 23       		.byte	0x23
 3418 0ded 9001     		.uleb128 0x90
 3419 0def 13       		.uleb128 0x13
 3420 0df0 5E0B0000 		.4byte	.LASF206
 3421 0df4 08       		.byte	0x8
 3422 0df5 0501     		.2byte	0x105
 3423 0df7 A00C0000 		.4byte	0xca0
 3424 0dfb 03       		.byte	0x3
 3425 0dfc 23       		.byte	0x23
 3426 0dfd 9401     		.uleb128 0x94
 3427 0dff 13       		.uleb128 0x13
 3428 0e00 7F090000 		.4byte	.LASF207
 3429 0e04 08       		.byte	0x8
 3430 0e05 0601     		.2byte	0x106
 3431 0e07 290F0000 		.4byte	0xf29
 3432 0e0b 03       		.byte	0x3
 3433 0e0c 23       		.byte	0x23
 3434 0e0d 9801     		.uleb128 0x98
 3435 0e0f 13       		.uleb128 0x13
 3436 0e10 970B0000 		.4byte	.LASF208
 3437 0e14 08       		.byte	0x8
 3438 0e15 0701     		.2byte	0x107
 3439 0e17 A00C0000 		.4byte	0xca0
 3440 0e1b 03       		.byte	0x3
 3441 0e1c 23       		.byte	0x23
 3442 0e1d E401     		.uleb128 0xe4
 3443 0e1f 13       		.uleb128 0x13
 3444 0e20 4D010000 		.4byte	.LASF209
 3445 0e24 08       		.byte	0x8
 3446 0e25 0801     		.2byte	0x108
 3447 0e27 A50C0000 		.4byte	0xca5
 3448 0e2b 03       		.byte	0x3
 3449 0e2c 23       		.byte	0x23
 3450 0e2d E801     		.uleb128 0xe8
 3451 0e2f 13       		.uleb128 0x13
 3452 0e30 89090000 		.4byte	.LASF210
 3453 0e34 08       		.byte	0x8
ARM GAS  /tmp/cc17JTRV.s 			page 97


 3454 0e35 0901     		.2byte	0x109
 3455 0e37 3E0F0000 		.4byte	0xf3e
 3456 0e3b 03       		.byte	0x3
 3457 0e3c 23       		.byte	0x23
 3458 0e3d EC01     		.uleb128 0xec
 3459 0e3f 13       		.uleb128 0x13
 3460 0e40 02010000 		.4byte	.LASF211
 3461 0e44 08       		.byte	0x8
 3462 0e45 0A01     		.2byte	0x10a
 3463 0e47 A00C0000 		.4byte	0xca0
 3464 0e4b 03       		.byte	0x3
 3465 0e4c 23       		.byte	0x23
 3466 0e4d 8002     		.uleb128 0x100
 3467 0e4f 13       		.uleb128 0x13
 3468 0e50 E4030000 		.4byte	.LASF212
 3469 0e54 08       		.byte	0x8
 3470 0e55 0B01     		.2byte	0x10b
 3471 0e57 A00C0000 		.4byte	0xca0
 3472 0e5b 03       		.byte	0x3
 3473 0e5c 23       		.byte	0x23
 3474 0e5d 8402     		.uleb128 0x104
 3475 0e5f 13       		.uleb128 0x13
 3476 0e60 ED010000 		.4byte	.LASF213
 3477 0e64 08       		.byte	0x8
 3478 0e65 0C01     		.2byte	0x10c
 3479 0e67 A00C0000 		.4byte	0xca0
 3480 0e6b 03       		.byte	0x3
 3481 0e6c 23       		.byte	0x23
 3482 0e6d 8802     		.uleb128 0x108
 3483 0e6f 13       		.uleb128 0x13
 3484 0e70 D2080000 		.4byte	.LASF214
 3485 0e74 08       		.byte	0x8
 3486 0e75 0D01     		.2byte	0x10d
 3487 0e77 A00C0000 		.4byte	0xca0
 3488 0e7b 03       		.byte	0x3
 3489 0e7c 23       		.byte	0x23
 3490 0e7d 8C02     		.uleb128 0x10c
 3491 0e7f 13       		.uleb128 0x13
 3492 0e80 14010000 		.4byte	.LASF215
 3493 0e84 08       		.byte	0x8
 3494 0e85 0E01     		.2byte	0x10e
 3495 0e87 A00C0000 		.4byte	0xca0
 3496 0e8b 03       		.byte	0x3
 3497 0e8c 23       		.byte	0x23
 3498 0e8d 9002     		.uleb128 0x110
 3499 0e8f 13       		.uleb128 0x13
 3500 0e90 E2070000 		.4byte	.LASF216
 3501 0e94 08       		.byte	0x8
 3502 0e95 0F01     		.2byte	0x10f
 3503 0e97 A00C0000 		.4byte	0xca0
 3504 0e9b 03       		.byte	0x3
 3505 0e9c 23       		.byte	0x23
 3506 0e9d 9402     		.uleb128 0x114
 3507 0e9f 13       		.uleb128 0x13
 3508 0ea0 2A010000 		.4byte	.LASF217
 3509 0ea4 08       		.byte	0x8
 3510 0ea5 1001     		.2byte	0x110
ARM GAS  /tmp/cc17JTRV.s 			page 98


 3511 0ea7 A00C0000 		.4byte	0xca0
 3512 0eab 03       		.byte	0x3
 3513 0eac 23       		.byte	0x23
 3514 0ead 9802     		.uleb128 0x118
 3515 0eaf 13       		.uleb128 0x13
 3516 0eb0 09080000 		.4byte	.LASF218
 3517 0eb4 08       		.byte	0x8
 3518 0eb5 1101     		.2byte	0x111
 3519 0eb7 A00C0000 		.4byte	0xca0
 3520 0ebb 03       		.byte	0x3
 3521 0ebc 23       		.byte	0x23
 3522 0ebd 9C02     		.uleb128 0x11c
 3523 0ebf 13       		.uleb128 0x13
 3524 0ec0 BE0A0000 		.4byte	.LASF219
 3525 0ec4 08       		.byte	0x8
 3526 0ec5 1201     		.2byte	0x112
 3527 0ec7 A00C0000 		.4byte	0xca0
 3528 0ecb 03       		.byte	0x3
 3529 0ecc 23       		.byte	0x23
 3530 0ecd A002     		.uleb128 0x120
 3531 0ecf 13       		.uleb128 0x13
 3532 0ed0 7B040000 		.4byte	.LASF220
 3533 0ed4 08       		.byte	0x8
 3534 0ed5 1301     		.2byte	0x113
 3535 0ed7 A50C0000 		.4byte	0xca5
 3536 0edb 03       		.byte	0x3
 3537 0edc 23       		.byte	0x23
 3538 0edd A402     		.uleb128 0x124
 3539 0edf 00       		.byte	0
 3540 0ee0 08       		.uleb128 0x8
 3541 0ee1 01010000 		.4byte	0x101
 3542 0ee5 F00E0000 		.4byte	0xef0
 3543 0ee9 09       		.uleb128 0x9
 3544 0eea 4C000000 		.4byte	0x4c
 3545 0eee 00       		.byte	0
 3546 0eef 00       		.byte	0
 3547 0ef0 19       		.uleb128 0x19
 3548 0ef1 E00E0000 		.4byte	0xee0
 3549 0ef5 08       		.uleb128 0x8
 3550 0ef6 01010000 		.4byte	0x101
 3551 0efa 050F0000 		.4byte	0xf05
 3552 0efe 09       		.uleb128 0x9
 3553 0eff 4C000000 		.4byte	0x4c
 3554 0f03 01       		.byte	0x1
 3555 0f04 00       		.byte	0
 3556 0f05 19       		.uleb128 0x19
 3557 0f06 F50E0000 		.4byte	0xef5
 3558 0f0a 08       		.uleb128 0x8
 3559 0f0b 01010000 		.4byte	0x101
 3560 0f0f 1A0F0000 		.4byte	0xf1a
 3561 0f13 09       		.uleb128 0x9
 3562 0f14 4C000000 		.4byte	0x4c
 3563 0f18 0F       		.byte	0xf
 3564 0f19 00       		.byte	0
 3565 0f1a 17       		.uleb128 0x17
 3566 0f1b 1F0F0000 		.4byte	0xf1f
 3567 0f1f 19       		.uleb128 0x19
ARM GAS  /tmp/cc17JTRV.s 			page 99


 3568 0f20 0A0F0000 		.4byte	0xf0a
 3569 0f24 19       		.uleb128 0x19
 3570 0f25 E00E0000 		.4byte	0xee0
 3571 0f29 19       		.uleb128 0x19
 3572 0f2a AA0C0000 		.4byte	0xcaa
 3573 0f2e 08       		.uleb128 0x8
 3574 0f2f 01010000 		.4byte	0x101
 3575 0f33 3E0F0000 		.4byte	0xf3e
 3576 0f37 09       		.uleb128 0x9
 3577 0f38 4C000000 		.4byte	0x4c
 3578 0f3c 04       		.byte	0x4
 3579 0f3d 00       		.byte	0
 3580 0f3e 19       		.uleb128 0x19
 3581 0f3f 2E0F0000 		.4byte	0xf2e
 3582 0f43 1E       		.uleb128 0x1e
 3583 0f44 41646300 		.ascii	"Adc\000"
 3584 0f48 08       		.byte	0x8
 3585 0f49 1401     		.2byte	0x114
 3586 0f4b BA0C0000 		.4byte	0xcba
 3587 0f4f 08       		.uleb128 0x8
 3588 0f50 01010000 		.4byte	0x101
 3589 0f54 5F0F0000 		.4byte	0xf5f
 3590 0f58 09       		.uleb128 0x9
 3591 0f59 4C000000 		.4byte	0x4c
 3592 0f5d 03       		.byte	0x3
 3593 0f5e 00       		.byte	0
 3594 0f5f 08       		.uleb128 0x8
 3595 0f60 01010000 		.4byte	0x101
 3596 0f64 6F0F0000 		.4byte	0xf6f
 3597 0f68 09       		.uleb128 0x9
 3598 0f69 4C000000 		.4byte	0x4c
 3599 0f6d 0B       		.byte	0xb
 3600 0f6e 00       		.byte	0
 3601 0f6f 08       		.uleb128 0x8
 3602 0f70 01010000 		.4byte	0x101
 3603 0f74 7F0F0000 		.4byte	0xf7f
 3604 0f78 09       		.uleb128 0x9
 3605 0f79 4C000000 		.4byte	0x4c
 3606 0f7d 0A       		.byte	0xa
 3607 0f7e 00       		.byte	0
 3608 0f7f 08       		.uleb128 0x8
 3609 0f80 01010000 		.4byte	0x101
 3610 0f84 8F0F0000 		.4byte	0xf8f
 3611 0f88 09       		.uleb128 0x9
 3612 0f89 4C000000 		.4byte	0x4c
 3613 0f8d 02       		.byte	0x2
 3614 0f8e 00       		.byte	0
 3615 0f8f 1F       		.uleb128 0x1f
 3616 0f90 20       		.byte	0x20
 3617 0f91 08       		.byte	0x8
 3618 0f92 050F     		.2byte	0xf05
 3619 0f94 11100000 		.4byte	0x1011
 3620 0f98 13       		.uleb128 0x13
 3621 0f99 1C0A0000 		.4byte	.LASF221
 3622 0f9d 08       		.byte	0x8
 3623 0f9e 060F     		.2byte	0xf06
 3624 0fa0 A00C0000 		.4byte	0xca0
ARM GAS  /tmp/cc17JTRV.s 			page 100


 3625 0fa4 02       		.byte	0x2
 3626 0fa5 23       		.byte	0x23
 3627 0fa6 00       		.uleb128 0
 3628 0fa7 13       		.uleb128 0x13
 3629 0fa8 F0060000 		.4byte	.LASF222
 3630 0fac 08       		.byte	0x8
 3631 0fad 070F     		.2byte	0xf07
 3632 0faf A00C0000 		.4byte	0xca0
 3633 0fb3 02       		.byte	0x2
 3634 0fb4 23       		.byte	0x23
 3635 0fb5 04       		.uleb128 0x4
 3636 0fb6 13       		.uleb128 0x13
 3637 0fb7 2D060000 		.4byte	.LASF223
 3638 0fbb 08       		.byte	0x8
 3639 0fbc 080F     		.2byte	0xf08
 3640 0fbe A00C0000 		.4byte	0xca0
 3641 0fc2 02       		.byte	0x2
 3642 0fc3 23       		.byte	0x23
 3643 0fc4 08       		.uleb128 0x8
 3644 0fc5 13       		.uleb128 0x13
 3645 0fc6 270B0000 		.4byte	.LASF224
 3646 0fca 08       		.byte	0x8
 3647 0fcb 090F     		.2byte	0xf09
 3648 0fcd A00C0000 		.4byte	0xca0
 3649 0fd1 02       		.byte	0x2
 3650 0fd2 23       		.byte	0x23
 3651 0fd3 0C       		.uleb128 0xc
 3652 0fd4 13       		.uleb128 0x13
 3653 0fd5 F30A0000 		.4byte	.LASF225
 3654 0fd9 08       		.byte	0x8
 3655 0fda 0A0F     		.2byte	0xf0a
 3656 0fdc A00C0000 		.4byte	0xca0
 3657 0fe0 02       		.byte	0x2
 3658 0fe1 23       		.byte	0x23
 3659 0fe2 10       		.uleb128 0x10
 3660 0fe3 13       		.uleb128 0x13
 3661 0fe4 C9010000 		.4byte	.LASF226
 3662 0fe8 08       		.byte	0x8
 3663 0fe9 0B0F     		.2byte	0xf0b
 3664 0feb A00C0000 		.4byte	0xca0
 3665 0fef 02       		.byte	0x2
 3666 0ff0 23       		.byte	0x23
 3667 0ff1 14       		.uleb128 0x14
 3668 0ff2 13       		.uleb128 0x13
 3669 0ff3 8B0A0000 		.4byte	.LASF227
 3670 0ff7 08       		.byte	0x8
 3671 0ff8 0C0F     		.2byte	0xf0c
 3672 0ffa A00C0000 		.4byte	0xca0
 3673 0ffe 02       		.byte	0x2
 3674 0fff 23       		.byte	0x23
 3675 1000 18       		.uleb128 0x18
 3676 1001 13       		.uleb128 0x13
 3677 1002 000C0000 		.4byte	.LASF228
 3678 1006 08       		.byte	0x8
 3679 1007 0D0F     		.2byte	0xf0d
 3680 1009 A00C0000 		.4byte	0xca0
 3681 100d 02       		.byte	0x2
ARM GAS  /tmp/cc17JTRV.s 			page 101


 3682 100e 23       		.byte	0x23
 3683 100f 1C       		.uleb128 0x1c
 3684 1010 00       		.byte	0
 3685 1011 05       		.uleb128 0x5
 3686 1012 78030000 		.4byte	.LASF229
 3687 1016 08       		.byte	0x8
 3688 1017 0E0F     		.2byte	0xf0e
 3689 1019 8F0F0000 		.4byte	0xf8f
 3690 101d 1F       		.uleb128 0x1f
 3691 101e 10       		.byte	0x10
 3692 101f 08       		.byte	0x8
 3693 1020 100F     		.2byte	0xf10
 3694 1022 63100000 		.4byte	0x1063
 3695 1026 13       		.uleb128 0x13
 3696 1027 4C0B0000 		.4byte	.LASF230
 3697 102b 08       		.byte	0x8
 3698 102c 110F     		.2byte	0xf11
 3699 102e A00C0000 		.4byte	0xca0
 3700 1032 02       		.byte	0x2
 3701 1033 23       		.byte	0x23
 3702 1034 00       		.uleb128 0
 3703 1035 13       		.uleb128 0x13
 3704 1036 EC040000 		.4byte	.LASF231
 3705 103a 08       		.byte	0x8
 3706 103b 120F     		.2byte	0xf12
 3707 103d A00C0000 		.4byte	0xca0
 3708 1041 02       		.byte	0x2
 3709 1042 23       		.byte	0x23
 3710 1043 04       		.uleb128 0x4
 3711 1044 13       		.uleb128 0x13
 3712 1045 390B0000 		.4byte	.LASF232
 3713 1049 08       		.byte	0x8
 3714 104a 130F     		.2byte	0xf13
 3715 104c A00C0000 		.4byte	0xca0
 3716 1050 02       		.byte	0x2
 3717 1051 23       		.byte	0x23
 3718 1052 08       		.uleb128 0x8
 3719 1053 13       		.uleb128 0x13
 3720 1054 D70A0000 		.4byte	.LASF233
 3721 1058 08       		.byte	0x8
 3722 1059 140F     		.2byte	0xf14
 3723 105b A00C0000 		.4byte	0xca0
 3724 105f 02       		.byte	0x2
 3725 1060 23       		.byte	0x23
 3726 1061 0C       		.uleb128 0xc
 3727 1062 00       		.byte	0
 3728 1063 05       		.uleb128 0x5
 3729 1064 45090000 		.4byte	.LASF234
 3730 1068 08       		.byte	0x8
 3731 1069 150F     		.2byte	0xf15
 3732 106b 1D100000 		.4byte	0x101d
 3733 106f 20       		.uleb128 0x20
 3734 1070 8002     		.2byte	0x280
 3735 1072 08       		.byte	0x8
 3736 1073 170F     		.2byte	0xf17
 3737 1075 7C130000 		.4byte	0x137c
 3738 1079 13       		.uleb128 0x13
ARM GAS  /tmp/cc17JTRV.s 			page 102


 3739 107a 11090000 		.4byte	.LASF235
 3740 107e 08       		.byte	0x8
 3741 107f 180F     		.2byte	0xf18
 3742 1081 A00C0000 		.4byte	0xca0
 3743 1085 02       		.byte	0x2
 3744 1086 23       		.byte	0x23
 3745 1087 00       		.uleb128 0
 3746 1088 13       		.uleb128 0x13
 3747 1089 C8020000 		.4byte	.LASF236
 3748 108d 08       		.byte	0x8
 3749 108e 190F     		.2byte	0xf19
 3750 1090 A00C0000 		.4byte	0xca0
 3751 1094 02       		.byte	0x2
 3752 1095 23       		.byte	0x23
 3753 1096 04       		.uleb128 0x4
 3754 1097 13       		.uleb128 0x13
 3755 1098 CF0A0000 		.4byte	.LASF237
 3756 109c 08       		.byte	0x8
 3757 109d 1A0F     		.2byte	0xf1a
 3758 109f A00C0000 		.4byte	0xca0
 3759 10a3 02       		.byte	0x2
 3760 10a4 23       		.byte	0x23
 3761 10a5 08       		.uleb128 0x8
 3762 10a6 13       		.uleb128 0x13
 3763 10a7 EC030000 		.4byte	.LASF238
 3764 10ab 08       		.byte	0x8
 3765 10ac 1B0F     		.2byte	0xf1b
 3766 10ae A50C0000 		.4byte	0xca5
 3767 10b2 02       		.byte	0x2
 3768 10b3 23       		.byte	0x23
 3769 10b4 0C       		.uleb128 0xc
 3770 10b5 13       		.uleb128 0x13
 3771 10b6 4C000000 		.4byte	.LASF239
 3772 10ba 08       		.byte	0x8
 3773 10bb 1C0F     		.2byte	0xf1c
 3774 10bd A00C0000 		.4byte	0xca0
 3775 10c1 02       		.byte	0x2
 3776 10c2 23       		.byte	0x23
 3777 10c3 10       		.uleb128 0x10
 3778 10c4 13       		.uleb128 0x13
 3779 10c5 1B060000 		.4byte	.LASF240
 3780 10c9 08       		.byte	0x8
 3781 10ca 1D0F     		.2byte	0xf1d
 3782 10cc A00C0000 		.4byte	0xca0
 3783 10d0 02       		.byte	0x2
 3784 10d1 23       		.byte	0x23
 3785 10d2 14       		.uleb128 0x14
 3786 10d3 13       		.uleb128 0x13
 3787 10d4 B6030000 		.4byte	.LASF241
 3788 10d8 08       		.byte	0x8
 3789 10d9 1E0F     		.2byte	0xf1e
 3790 10db A50C0000 		.4byte	0xca5
 3791 10df 02       		.byte	0x2
 3792 10e0 23       		.byte	0x23
 3793 10e1 18       		.uleb128 0x18
 3794 10e2 13       		.uleb128 0x13
 3795 10e3 93060000 		.4byte	.LASF242
ARM GAS  /tmp/cc17JTRV.s 			page 103


 3796 10e7 08       		.byte	0x8
 3797 10e8 1F0F     		.2byte	0xf1f
 3798 10ea A50C0000 		.4byte	0xca5
 3799 10ee 02       		.byte	0x2
 3800 10ef 23       		.byte	0x23
 3801 10f0 1C       		.uleb128 0x1c
 3802 10f1 13       		.uleb128 0x13
 3803 10f2 30080000 		.4byte	.LASF243
 3804 10f6 08       		.byte	0x8
 3805 10f7 200F     		.2byte	0xf20
 3806 10f9 A00C0000 		.4byte	0xca0
 3807 10fd 02       		.byte	0x2
 3808 10fe 23       		.byte	0x23
 3809 10ff 20       		.uleb128 0x20
 3810 1100 13       		.uleb128 0x13
 3811 1101 66090000 		.4byte	.LASF192
 3812 1105 08       		.byte	0x8
 3813 1106 210F     		.2byte	0xf21
 3814 1108 7C130000 		.4byte	0x137c
 3815 110c 02       		.byte	0x2
 3816 110d 23       		.byte	0x23
 3817 110e 24       		.uleb128 0x24
 3818 110f 13       		.uleb128 0x13
 3819 1110 130C0000 		.4byte	.LASF244
 3820 1114 08       		.byte	0x8
 3821 1115 220F     		.2byte	0xf22
 3822 1117 A00C0000 		.4byte	0xca0
 3823 111b 02       		.byte	0x2
 3824 111c 23       		.byte	0x23
 3825 111d 28       		.uleb128 0x28
 3826 111e 13       		.uleb128 0x13
 3827 111f AA050000 		.4byte	.LASF245
 3828 1123 08       		.byte	0x8
 3829 1124 230F     		.2byte	0xf23
 3830 1126 A00C0000 		.4byte	0xca0
 3831 112a 02       		.byte	0x2
 3832 112b 23       		.byte	0x23
 3833 112c 2C       		.uleb128 0x2c
 3834 112d 13       		.uleb128 0x13
 3835 112e 9B030000 		.4byte	.LASF246
 3836 1132 08       		.byte	0x8
 3837 1133 240F     		.2byte	0xf24
 3838 1135 A00C0000 		.4byte	0xca0
 3839 1139 02       		.byte	0x2
 3840 113a 23       		.byte	0x23
 3841 113b 30       		.uleb128 0x30
 3842 113c 13       		.uleb128 0x13
 3843 113d 4D080000 		.4byte	.LASF247
 3844 1141 08       		.byte	0x8
 3845 1142 250F     		.2byte	0xf25
 3846 1144 A00C0000 		.4byte	0xca0
 3847 1148 02       		.byte	0x2
 3848 1149 23       		.byte	0x23
 3849 114a 34       		.uleb128 0x34
 3850 114b 13       		.uleb128 0x13
 3851 114c 24060000 		.4byte	.LASF248
 3852 1150 08       		.byte	0x8
ARM GAS  /tmp/cc17JTRV.s 			page 104


 3853 1151 260F     		.2byte	0xf26
 3854 1153 A00C0000 		.4byte	0xca0
 3855 1157 02       		.byte	0x2
 3856 1158 23       		.byte	0x23
 3857 1159 38       		.uleb128 0x38
 3858 115a 13       		.uleb128 0x13
 3859 115b BF030000 		.4byte	.LASF249
 3860 115f 08       		.byte	0x8
 3861 1160 270F     		.2byte	0xf27
 3862 1162 A50C0000 		.4byte	0xca5
 3863 1166 02       		.byte	0x2
 3864 1167 23       		.byte	0x23
 3865 1168 3C       		.uleb128 0x3c
 3866 1169 13       		.uleb128 0x13
 3867 116a 9C060000 		.4byte	.LASF250
 3868 116e 08       		.byte	0x8
 3869 116f 280F     		.2byte	0xf28
 3870 1171 A50C0000 		.4byte	0xca5
 3871 1175 02       		.byte	0x2
 3872 1176 23       		.byte	0x23
 3873 1177 40       		.uleb128 0x40
 3874 1178 13       		.uleb128 0x13
 3875 1179 68030000 		.4byte	.LASF251
 3876 117d 08       		.byte	0x8
 3877 117e 290F     		.2byte	0xf29
 3878 1180 A00C0000 		.4byte	0xca0
 3879 1184 02       		.byte	0x2
 3880 1185 23       		.byte	0x23
 3881 1186 44       		.uleb128 0x44
 3882 1187 13       		.uleb128 0x13
 3883 1188 66020000 		.4byte	.LASF252
 3884 118c 08       		.byte	0x8
 3885 118d 2A0F     		.2byte	0xf2a
 3886 118f A00C0000 		.4byte	0xca0
 3887 1193 02       		.byte	0x2
 3888 1194 23       		.byte	0x23
 3889 1195 48       		.uleb128 0x48
 3890 1196 13       		.uleb128 0x13
 3891 1197 E4040000 		.4byte	.LASF253
 3892 119b 08       		.byte	0x8
 3893 119c 2B0F     		.2byte	0xf2b
 3894 119e A00C0000 		.4byte	0xca0
 3895 11a2 02       		.byte	0x2
 3896 11a3 23       		.byte	0x23
 3897 11a4 4C       		.uleb128 0x4c
 3898 11a5 13       		.uleb128 0x13
 3899 11a6 BC040000 		.4byte	.LASF254
 3900 11aa 08       		.byte	0x8
 3901 11ab 2C0F     		.2byte	0xf2c
 3902 11ad A00C0000 		.4byte	0xca0
 3903 11b1 02       		.byte	0x2
 3904 11b2 23       		.byte	0x23
 3905 11b3 50       		.uleb128 0x50
 3906 11b4 13       		.uleb128 0x13
 3907 11b5 EB070000 		.4byte	.LASF255
 3908 11b9 08       		.byte	0x8
 3909 11ba 2D0F     		.2byte	0xf2d
ARM GAS  /tmp/cc17JTRV.s 			page 105


 3910 11bc A00C0000 		.4byte	0xca0
 3911 11c0 02       		.byte	0x2
 3912 11c1 23       		.byte	0x23
 3913 11c2 54       		.uleb128 0x54
 3914 11c3 13       		.uleb128 0x13
 3915 11c4 47070000 		.4byte	.LASF256
 3916 11c8 08       		.byte	0x8
 3917 11c9 2E0F     		.2byte	0xf2e
 3918 11cb A00C0000 		.4byte	0xca0
 3919 11cf 02       		.byte	0x2
 3920 11d0 23       		.byte	0x23
 3921 11d1 58       		.uleb128 0x58
 3922 11d2 13       		.uleb128 0x13
 3923 11d3 B4040000 		.4byte	.LASF257
 3924 11d7 08       		.byte	0x8
 3925 11d8 2F0F     		.2byte	0xf2f
 3926 11da A00C0000 		.4byte	0xca0
 3927 11de 02       		.byte	0x2
 3928 11df 23       		.byte	0x23
 3929 11e0 5C       		.uleb128 0x5c
 3930 11e1 13       		.uleb128 0x13
 3931 11e2 83070000 		.4byte	.LASF258
 3932 11e6 08       		.byte	0x8
 3933 11e7 300F     		.2byte	0xf30
 3934 11e9 A50C0000 		.4byte	0xca5
 3935 11ed 02       		.byte	0x2
 3936 11ee 23       		.byte	0x23
 3937 11ef 60       		.uleb128 0x60
 3938 11f0 13       		.uleb128 0x13
 3939 11f1 D9000000 		.4byte	.LASF259
 3940 11f5 08       		.byte	0x8
 3941 11f6 310F     		.2byte	0xf31
 3942 11f8 A00C0000 		.4byte	0xca0
 3943 11fc 02       		.byte	0x2
 3944 11fd 23       		.byte	0x23
 3945 11fe 64       		.uleb128 0x64
 3946 11ff 13       		.uleb128 0x13
 3947 1200 EE020000 		.4byte	.LASF260
 3948 1204 08       		.byte	0x8
 3949 1205 320F     		.2byte	0xf32
 3950 1207 A00C0000 		.4byte	0xca0
 3951 120b 02       		.byte	0x2
 3952 120c 23       		.byte	0x23
 3953 120d 68       		.uleb128 0x68
 3954 120e 13       		.uleb128 0x13
 3955 120f C0020000 		.4byte	.LASF261
 3956 1213 08       		.byte	0x8
 3957 1214 330F     		.2byte	0xf33
 3958 1216 A00C0000 		.4byte	0xca0
 3959 121a 02       		.byte	0x2
 3960 121b 23       		.byte	0x23
 3961 121c 6C       		.uleb128 0x6c
 3962 121d 13       		.uleb128 0x13
 3963 121e 70090000 		.4byte	.LASF198
 3964 1222 08       		.byte	0x8
 3965 1223 340F     		.2byte	0xf34
 3966 1225 81130000 		.4byte	0x1381
ARM GAS  /tmp/cc17JTRV.s 			page 106


 3967 1229 02       		.byte	0x2
 3968 122a 23       		.byte	0x23
 3969 122b 70       		.uleb128 0x70
 3970 122c 13       		.uleb128 0x13
 3971 122d C8080000 		.4byte	.LASF262
 3972 1231 08       		.byte	0x8
 3973 1232 350F     		.2byte	0xf35
 3974 1234 86130000 		.4byte	0x1386
 3975 1238 02       		.byte	0x2
 3976 1239 23       		.byte	0x23
 3977 123a 7C       		.uleb128 0x7c
 3978 123b 13       		.uleb128 0x13
 3979 123c E8000000 		.4byte	.LASF205
 3980 1240 08       		.byte	0x8
 3981 1241 360F     		.2byte	0xf36
 3982 1243 8B130000 		.4byte	0x138b
 3983 1247 03       		.byte	0x3
 3984 1248 23       		.byte	0x23
 3985 1249 8401     		.uleb128 0x84
 3986 124b 13       		.uleb128 0x13
 3987 124c 81020000 		.4byte	.LASF263
 3988 1250 08       		.byte	0x8
 3989 1251 370F     		.2byte	0xf37
 3990 1253 A00C0000 		.4byte	0xca0
 3991 1257 03       		.byte	0x3
 3992 1258 23       		.byte	0x23
 3993 1259 B001     		.uleb128 0xb0
 3994 125b 13       		.uleb128 0x13
 3995 125c 7F090000 		.4byte	.LASF207
 3996 1260 08       		.byte	0x8
 3997 1261 380F     		.2byte	0xf38
 3998 1263 90130000 		.4byte	0x1390
 3999 1267 03       		.byte	0x3
 4000 1268 23       		.byte	0x23
 4001 1269 B401     		.uleb128 0xb4
 4002 126b 13       		.uleb128 0x13
 4003 126c 52060000 		.4byte	.LASF264
 4004 1270 08       		.byte	0x8
 4005 1271 390F     		.2byte	0xf39
 4006 1273 A00C0000 		.4byte	0xca0
 4007 1277 03       		.byte	0x3
 4008 1278 23       		.byte	0x23
 4009 1279 E401     		.uleb128 0xe4
 4010 127b 13       		.uleb128 0x13
 4011 127c 71000000 		.4byte	.LASF265
 4012 1280 08       		.byte	0x8
 4013 1281 3A0F     		.2byte	0xf3a
 4014 1283 A50C0000 		.4byte	0xca5
 4015 1287 03       		.byte	0x3
 4016 1288 23       		.byte	0x23
 4017 1289 E801     		.uleb128 0xe8
 4018 128b 13       		.uleb128 0x13
 4019 128c 89090000 		.4byte	.LASF210
 4020 1290 08       		.byte	0x8
 4021 1291 3B0F     		.2byte	0xf3b
 4022 1293 95130000 		.4byte	0x1395
 4023 1297 03       		.byte	0x3
ARM GAS  /tmp/cc17JTRV.s 			page 107


 4024 1298 23       		.byte	0x23
 4025 1299 EC01     		.uleb128 0xec
 4026 129b 13       		.uleb128 0x13
 4027 129c 770B0000 		.4byte	.LASF266
 4028 12a0 08       		.byte	0x8
 4029 12a1 3C0F     		.2byte	0xf3c
 4030 12a3 A00C0000 		.4byte	0xca0
 4031 12a7 03       		.byte	0x3
 4032 12a8 23       		.byte	0x23
 4033 12a9 8002     		.uleb128 0x100
 4034 12ab 13       		.uleb128 0x13
 4035 12ac 01060000 		.4byte	.LASF267
 4036 12b0 08       		.byte	0x8
 4037 12b1 3D0F     		.2byte	0xf3d
 4038 12b3 A00C0000 		.4byte	0xca0
 4039 12b7 03       		.byte	0x3
 4040 12b8 23       		.byte	0x23
 4041 12b9 8402     		.uleb128 0x104
 4042 12bb 13       		.uleb128 0x13
 4043 12bc D6030000 		.4byte	.LASF268
 4044 12c0 08       		.byte	0x8
 4045 12c1 3E0F     		.2byte	0xf3e
 4046 12c3 A00C0000 		.4byte	0xca0
 4047 12c7 03       		.byte	0x3
 4048 12c8 23       		.byte	0x23
 4049 12c9 8802     		.uleb128 0x108
 4050 12cb 13       		.uleb128 0x13
 4051 12cc C5000000 		.4byte	.LASF269
 4052 12d0 08       		.byte	0x8
 4053 12d1 3F0F     		.2byte	0xf3f
 4054 12d3 A00C0000 		.4byte	0xca0
 4055 12d7 03       		.byte	0x3
 4056 12d8 23       		.byte	0x23
 4057 12d9 8C02     		.uleb128 0x10c
 4058 12db 13       		.uleb128 0x13
 4059 12dc 21000000 		.4byte	.LASF270
 4060 12e0 08       		.byte	0x8
 4061 12e1 400F     		.2byte	0xf40
 4062 12e3 A00C0000 		.4byte	0xca0
 4063 12e7 03       		.byte	0x3
 4064 12e8 23       		.byte	0x23
 4065 12e9 9002     		.uleb128 0x110
 4066 12eb 13       		.uleb128 0x13
 4067 12ec 33010000 		.4byte	.LASF271
 4068 12f0 08       		.byte	0x8
 4069 12f1 410F     		.2byte	0xf41
 4070 12f3 A00C0000 		.4byte	0xca0
 4071 12f7 03       		.byte	0x3
 4072 12f8 23       		.byte	0x23
 4073 12f9 9402     		.uleb128 0x114
 4074 12fb 13       		.uleb128 0x13
 4075 12fc 5F030000 		.4byte	.LASF272
 4076 1300 08       		.byte	0x8
 4077 1301 420F     		.2byte	0xf42
 4078 1303 A00C0000 		.4byte	0xca0
 4079 1307 03       		.byte	0x3
 4080 1308 23       		.byte	0x23
ARM GAS  /tmp/cc17JTRV.s 			page 108


 4081 1309 9802     		.uleb128 0x118
 4082 130b 13       		.uleb128 0x13
 4083 130c 31050000 		.4byte	.LASF273
 4084 1310 08       		.byte	0x8
 4085 1311 430F     		.2byte	0xf43
 4086 1313 A00C0000 		.4byte	0xca0
 4087 1317 03       		.byte	0x3
 4088 1318 23       		.byte	0x23
 4089 1319 9C02     		.uleb128 0x11c
 4090 131b 13       		.uleb128 0x13
 4091 131c BD090000 		.4byte	.LASF274
 4092 1320 08       		.byte	0x8
 4093 1321 440F     		.2byte	0xf44
 4094 1323 A00C0000 		.4byte	0xca0
 4095 1327 03       		.byte	0x3
 4096 1328 23       		.byte	0x23
 4097 1329 A002     		.uleb128 0x120
 4098 132b 13       		.uleb128 0x13
 4099 132c AD030000 		.4byte	.LASF275
 4100 1330 08       		.byte	0x8
 4101 1331 450F     		.2byte	0xf45
 4102 1333 A50C0000 		.4byte	0xca5
 4103 1337 03       		.byte	0x3
 4104 1338 23       		.byte	0x23
 4105 1339 A402     		.uleb128 0x124
 4106 133b 13       		.uleb128 0x13
 4107 133c 93090000 		.4byte	.LASF276
 4108 1340 08       		.byte	0x8
 4109 1341 460F     		.2byte	0xf46
 4110 1343 9A130000 		.4byte	0x139a
 4111 1347 03       		.byte	0x3
 4112 1348 23       		.byte	0x23
 4113 1349 A802     		.uleb128 0x128
 4114 134b 13       		.uleb128 0x13
 4115 134c 140A0000 		.4byte	.LASF277
 4116 1350 08       		.byte	0x8
 4117 1351 470F     		.2byte	0xf47
 4118 1353 9F130000 		.4byte	0x139f
 4119 1357 03       		.byte	0x3
 4120 1358 23       		.byte	0x23
 4121 1359 B002     		.uleb128 0x130
 4122 135b 13       		.uleb128 0x13
 4123 135c F2000000 		.4byte	.LASF278
 4124 1360 08       		.byte	0x8
 4125 1361 480F     		.2byte	0xf48
 4126 1363 BF130000 		.4byte	0x13bf
 4127 1367 03       		.byte	0x3
 4128 1368 23       		.byte	0x23
 4129 1369 B003     		.uleb128 0x1b0
 4130 136b 13       		.uleb128 0x13
 4131 136c 5B060000 		.4byte	.LASF279
 4132 1370 08       		.byte	0x8
 4133 1371 490F     		.2byte	0xf49
 4134 1373 C4130000 		.4byte	0x13c4
 4135 1377 03       		.byte	0x3
 4136 1378 23       		.byte	0x23
 4137 1379 8004     		.uleb128 0x200
ARM GAS  /tmp/cc17JTRV.s 			page 109


 4138 137b 00       		.byte	0
 4139 137c 19       		.uleb128 0x19
 4140 137d E00E0000 		.4byte	0xee0
 4141 1381 19       		.uleb128 0x19
 4142 1382 7F0F0000 		.4byte	0xf7f
 4143 1386 19       		.uleb128 0x19
 4144 1387 F50E0000 		.4byte	0xef5
 4145 138b 19       		.uleb128 0x19
 4146 138c 6F0F0000 		.4byte	0xf6f
 4147 1390 19       		.uleb128 0x19
 4148 1391 5F0F0000 		.4byte	0xf5f
 4149 1395 19       		.uleb128 0x19
 4150 1396 2E0F0000 		.4byte	0xf2e
 4151 139a 19       		.uleb128 0x19
 4152 139b F50E0000 		.4byte	0xef5
 4153 139f 08       		.uleb128 0x8
 4154 13a0 63100000 		.4byte	0x1063
 4155 13a4 AF130000 		.4byte	0x13af
 4156 13a8 09       		.uleb128 0x9
 4157 13a9 4C000000 		.4byte	0x4c
 4158 13ad 07       		.byte	0x7
 4159 13ae 00       		.byte	0
 4160 13af 08       		.uleb128 0x8
 4161 13b0 01010000 		.4byte	0x101
 4162 13b4 BF130000 		.4byte	0x13bf
 4163 13b8 09       		.uleb128 0x9
 4164 13b9 4C000000 		.4byte	0x4c
 4165 13bd 13       		.byte	0x13
 4166 13be 00       		.byte	0
 4167 13bf 19       		.uleb128 0x19
 4168 13c0 AF130000 		.4byte	0x13af
 4169 13c4 08       		.uleb128 0x8
 4170 13c5 11100000 		.4byte	0x1011
 4171 13c9 D4130000 		.4byte	0x13d4
 4172 13cd 09       		.uleb128 0x9
 4173 13ce 4C000000 		.4byte	0x4c
 4174 13d2 03       		.byte	0x3
 4175 13d3 00       		.byte	0
 4176 13d4 1E       		.uleb128 0x1e
 4177 13d5 50776D00 		.ascii	"Pwm\000"
 4178 13d9 08       		.byte	0x8
 4179 13da 4A0F     		.2byte	0xf4a
 4180 13dc 6F100000 		.4byte	0x106f
 4181 13e0 1F       		.uleb128 0x1f
 4182 13e1 40       		.byte	0x40
 4183 13e2 08       		.byte	0x8
 4184 13e3 4B15     		.2byte	0x154b
 4185 13e5 AD140000 		.4byte	0x14ad
 4186 13e9 13       		.uleb128 0x13
 4187 13ea 95010000 		.4byte	.LASF280
 4188 13ee 08       		.byte	0x8
 4189 13ef 4C15     		.2byte	0x154c
 4190 13f1 A00C0000 		.4byte	0xca0
 4191 13f5 02       		.byte	0x2
 4192 13f6 23       		.byte	0x23
 4193 13f7 00       		.uleb128 0
 4194 13f8 13       		.uleb128 0x13
ARM GAS  /tmp/cc17JTRV.s 			page 110


 4195 13f9 D8050000 		.4byte	.LASF281
 4196 13fd 08       		.byte	0x8
 4197 13fe 4D15     		.2byte	0x154d
 4198 1400 A00C0000 		.4byte	0xca0
 4199 1404 02       		.byte	0x2
 4200 1405 23       		.byte	0x23
 4201 1406 04       		.uleb128 0x4
 4202 1407 13       		.uleb128 0x13
 4203 1408 660B0000 		.4byte	.LASF282
 4204 140c 08       		.byte	0x8
 4205 140d 4E15     		.2byte	0x154e
 4206 140f A00C0000 		.4byte	0xca0
 4207 1413 02       		.byte	0x2
 4208 1414 23       		.byte	0x23
 4209 1415 08       		.uleb128 0x8
 4210 1416 13       		.uleb128 0x13
 4211 1417 66090000 		.4byte	.LASF192
 4212 141b 08       		.byte	0x8
 4213 141c 4F15     		.2byte	0x154f
 4214 141e AD140000 		.4byte	0x14ad
 4215 1422 02       		.byte	0x2
 4216 1423 23       		.byte	0x23
 4217 1424 0C       		.uleb128 0xc
 4218 1425 13       		.uleb128 0x13
 4219 1426 B7090000 		.4byte	.LASF283
 4220 142a 08       		.byte	0x8
 4221 142b 5015     		.2byte	0x1550
 4222 142d A00C0000 		.4byte	0xca0
 4223 1431 02       		.byte	0x2
 4224 1432 23       		.byte	0x23
 4225 1433 10       		.uleb128 0x10
 4226 1434 13       		.uleb128 0x13
 4227 1435 17030000 		.4byte	.LASF284
 4228 1439 08       		.byte	0x8
 4229 143a 5115     		.2byte	0x1551
 4230 143c A00C0000 		.4byte	0xca0
 4231 1440 02       		.byte	0x2
 4232 1441 23       		.byte	0x23
 4233 1442 14       		.uleb128 0x14
 4234 1443 13       		.uleb128 0x13
 4235 1444 1D030000 		.4byte	.LASF285
 4236 1448 08       		.byte	0x8
 4237 1449 5215     		.2byte	0x1552
 4238 144b A00C0000 		.4byte	0xca0
 4239 144f 02       		.byte	0x2
 4240 1450 23       		.byte	0x23
 4241 1451 18       		.uleb128 0x18
 4242 1452 13       		.uleb128 0x13
 4243 1453 23030000 		.4byte	.LASF286
 4244 1457 08       		.byte	0x8
 4245 1458 5315     		.2byte	0x1553
 4246 145a A00C0000 		.4byte	0xca0
 4247 145e 02       		.byte	0x2
 4248 145f 23       		.byte	0x23
 4249 1460 1C       		.uleb128 0x1c
 4250 1461 13       		.uleb128 0x13
 4251 1462 A7030000 		.4byte	.LASF287
ARM GAS  /tmp/cc17JTRV.s 			page 111


 4252 1466 08       		.byte	0x8
 4253 1467 5415     		.2byte	0x1554
 4254 1469 A00C0000 		.4byte	0xca0
 4255 146d 02       		.byte	0x2
 4256 146e 23       		.byte	0x23
 4257 146f 20       		.uleb128 0x20
 4258 1470 13       		.uleb128 0x13
 4259 1471 0F050000 		.4byte	.LASF288
 4260 1475 08       		.byte	0x8
 4261 1476 5515     		.2byte	0x1555
 4262 1478 A00C0000 		.4byte	0xca0
 4263 147c 02       		.byte	0x2
 4264 147d 23       		.byte	0x23
 4265 147e 24       		.uleb128 0x24
 4266 147f 13       		.uleb128 0x13
 4267 1480 52040000 		.4byte	.LASF289
 4268 1484 08       		.byte	0x8
 4269 1485 5615     		.2byte	0x1556
 4270 1487 A00C0000 		.4byte	0xca0
 4271 148b 02       		.byte	0x2
 4272 148c 23       		.byte	0x23
 4273 148d 28       		.uleb128 0x28
 4274 148e 13       		.uleb128 0x13
 4275 148f 12080000 		.4byte	.LASF290
 4276 1493 08       		.byte	0x8
 4277 1494 5715     		.2byte	0x1557
 4278 1496 A00C0000 		.4byte	0xca0
 4279 149a 02       		.byte	0x2
 4280 149b 23       		.byte	0x23
 4281 149c 2C       		.uleb128 0x2c
 4282 149d 13       		.uleb128 0x13
 4283 149e 70090000 		.4byte	.LASF198
 4284 14a2 08       		.byte	0x8
 4285 14a3 5815     		.2byte	0x1558
 4286 14a5 B2140000 		.4byte	0x14b2
 4287 14a9 02       		.byte	0x2
 4288 14aa 23       		.byte	0x23
 4289 14ab 30       		.uleb128 0x30
 4290 14ac 00       		.byte	0
 4291 14ad 19       		.uleb128 0x19
 4292 14ae E00E0000 		.4byte	0xee0
 4293 14b2 19       		.uleb128 0x19
 4294 14b3 4F0F0000 		.4byte	0xf4f
 4295 14b7 05       		.uleb128 0x5
 4296 14b8 77020000 		.4byte	.LASF291
 4297 14bc 08       		.byte	0x8
 4298 14bd 5915     		.2byte	0x1559
 4299 14bf E0130000 		.4byte	0x13e0
 4300 14c3 1F       		.uleb128 0x1f
 4301 14c4 E8       		.byte	0xe8
 4302 14c5 08       		.byte	0x8
 4303 14c6 5B15     		.2byte	0x155b
 4304 14c8 6C150000 		.4byte	0x156c
 4305 14cc 13       		.uleb128 0x13
 4306 14cd 42010000 		.4byte	.LASF292
 4307 14d1 08       		.byte	0x8
 4308 14d2 5C15     		.2byte	0x155c
ARM GAS  /tmp/cc17JTRV.s 			page 112


 4309 14d4 6C150000 		.4byte	0x156c
 4310 14d8 02       		.byte	0x2
 4311 14d9 23       		.byte	0x23
 4312 14da 00       		.uleb128 0
 4313 14db 13       		.uleb128 0x13
 4314 14dc C70B0000 		.4byte	.LASF293
 4315 14e0 08       		.byte	0x8
 4316 14e1 5D15     		.2byte	0x155d
 4317 14e3 A00C0000 		.4byte	0xca0
 4318 14e7 03       		.byte	0x3
 4319 14e8 23       		.byte	0x23
 4320 14e9 C001     		.uleb128 0xc0
 4321 14eb 13       		.uleb128 0x13
 4322 14ec 43030000 		.4byte	.LASF294
 4323 14f0 08       		.byte	0x8
 4324 14f1 5E15     		.2byte	0x155e
 4325 14f3 A00C0000 		.4byte	0xca0
 4326 14f7 03       		.byte	0x3
 4327 14f8 23       		.byte	0x23
 4328 14f9 C401     		.uleb128 0xc4
 4329 14fb 13       		.uleb128 0x13
 4330 14fc 620A0000 		.4byte	.LASF295
 4331 1500 08       		.byte	0x8
 4332 1501 5F15     		.2byte	0x155f
 4333 1503 A00C0000 		.4byte	0xca0
 4334 1507 03       		.byte	0x3
 4335 1508 23       		.byte	0x23
 4336 1509 C801     		.uleb128 0xc8
 4337 150b 13       		.uleb128 0x13
 4338 150c 0C0A0000 		.4byte	.LASF296
 4339 1510 08       		.byte	0x8
 4340 1511 6015     		.2byte	0x1560
 4341 1513 A00C0000 		.4byte	0xca0
 4342 1517 03       		.byte	0x3
 4343 1518 23       		.byte	0x23
 4344 1519 CC01     		.uleb128 0xcc
 4345 151b 13       		.uleb128 0x13
 4346 151c 22010000 		.4byte	.LASF297
 4347 1520 08       		.byte	0x8
 4348 1521 6115     		.2byte	0x1561
 4349 1523 A50C0000 		.4byte	0xca5
 4350 1527 03       		.byte	0x3
 4351 1528 23       		.byte	0x23
 4352 1529 D001     		.uleb128 0xd0
 4353 152b 13       		.uleb128 0x13
 4354 152c 70030000 		.4byte	.LASF298
 4355 1530 08       		.byte	0x8
 4356 1531 6215     		.2byte	0x1562
 4357 1533 A50C0000 		.4byte	0xca5
 4358 1537 03       		.byte	0x3
 4359 1538 23       		.byte	0x23
 4360 1539 D401     		.uleb128 0xd4
 4361 153b 13       		.uleb128 0x13
 4362 153c E1000000 		.4byte	.LASF299
 4363 1540 08       		.byte	0x8
 4364 1541 6315     		.2byte	0x1563
 4365 1543 A00C0000 		.4byte	0xca0
ARM GAS  /tmp/cc17JTRV.s 			page 113


 4366 1547 03       		.byte	0x3
 4367 1548 23       		.byte	0x23
 4368 1549 D801     		.uleb128 0xd8
 4369 154b 13       		.uleb128 0x13
 4370 154c 66090000 		.4byte	.LASF192
 4371 1550 08       		.byte	0x8
 4372 1551 6415     		.2byte	0x1564
 4373 1553 7C150000 		.4byte	0x157c
 4374 1557 03       		.byte	0x3
 4375 1558 23       		.byte	0x23
 4376 1559 DC01     		.uleb128 0xdc
 4377 155b 13       		.uleb128 0x13
 4378 155c C70A0000 		.4byte	.LASF300
 4379 1560 08       		.byte	0x8
 4380 1561 6515     		.2byte	0x1565
 4381 1563 A00C0000 		.4byte	0xca0
 4382 1567 03       		.byte	0x3
 4383 1568 23       		.byte	0x23
 4384 1569 E401     		.uleb128 0xe4
 4385 156b 00       		.byte	0
 4386 156c 08       		.uleb128 0x8
 4387 156d B7140000 		.4byte	0x14b7
 4388 1571 7C150000 		.4byte	0x157c
 4389 1575 09       		.uleb128 0x9
 4390 1576 4C000000 		.4byte	0x4c
 4391 157a 02       		.byte	0x2
 4392 157b 00       		.byte	0
 4393 157c 19       		.uleb128 0x19
 4394 157d F50E0000 		.4byte	0xef5
 4395 1581 1E       		.uleb128 0x1e
 4396 1582 546300   		.ascii	"Tc\000"
 4397 1585 08       		.byte	0x8
 4398 1586 6615     		.2byte	0x1566
 4399 1588 C3140000 		.4byte	0x14c3
 4400 158c 1F       		.uleb128 0x1f
 4401 158d 0C       		.byte	0xc
 4402 158e 08       		.byte	0x8
 4403 158f 7C19     		.2byte	0x197c
 4404 1591 C3150000 		.4byte	0x15c3
 4405 1595 13       		.uleb128 0x13
 4406 1596 F6020000 		.4byte	.LASF301
 4407 159a 08       		.byte	0x8
 4408 159b 7D19     		.2byte	0x197d
 4409 159d A00C0000 		.4byte	0xca0
 4410 15a1 02       		.byte	0x2
 4411 15a2 23       		.byte	0x23
 4412 15a3 00       		.uleb128 0
 4413 15a4 13       		.uleb128 0x13
 4414 15a5 19070000 		.4byte	.LASF302
 4415 15a9 08       		.byte	0x8
 4416 15aa 7E19     		.2byte	0x197e
 4417 15ac A00C0000 		.4byte	0xca0
 4418 15b0 02       		.byte	0x2
 4419 15b1 23       		.byte	0x23
 4420 15b2 04       		.uleb128 0x4
 4421 15b3 13       		.uleb128 0x13
 4422 15b4 A6090000 		.4byte	.LASF303
ARM GAS  /tmp/cc17JTRV.s 			page 114


 4423 15b8 08       		.byte	0x8
 4424 15b9 7F19     		.2byte	0x197f
 4425 15bb A50C0000 		.4byte	0xca5
 4426 15bf 02       		.byte	0x2
 4427 15c0 23       		.byte	0x23
 4428 15c1 08       		.uleb128 0x8
 4429 15c2 00       		.byte	0
 4430 15c3 1E       		.uleb128 0x1e
 4431 15c4 57647400 		.ascii	"Wdt\000"
 4432 15c8 08       		.byte	0x8
 4433 15c9 8019     		.2byte	0x1980
 4434 15cb 8C150000 		.4byte	0x158c
 4435 15cf 04       		.uleb128 0x4
 4436 15d0 8B050000 		.4byte	.LASF304
 4437 15d4 09       		.byte	0x9
 4438 15d5 10       		.byte	0x10
 4439 15d6 AE080000 		.4byte	0x8ae
 4440 15da 21       		.uleb128 0x21
 4441 15db 01       		.byte	0x1
 4442 15dc 09       		.byte	0x9
 4443 15dd 12       		.byte	0x12
 4444 15de FB150000 		.4byte	0x15fb
 4445 15e2 22       		.uleb128 0x22
 4446 15e3 4F464600 		.ascii	"OFF\000"
 4447 15e7 00       		.sleb128 0
 4448 15e8 1B       		.uleb128 0x1b
 4449 15e9 9B070000 		.4byte	.LASF305
 4450 15ed 01       		.sleb128 1
 4451 15ee 1B       		.uleb128 0x1b
 4452 15ef 90010000 		.4byte	.LASF306
 4453 15f3 02       		.sleb128 2
 4454 15f4 1B       		.uleb128 0x1b
 4455 15f5 E3060000 		.4byte	.LASF307
 4456 15f9 03       		.sleb128 3
 4457 15fa 00       		.byte	0
 4458 15fb 04       		.uleb128 0x4
 4459 15fc 88060000 		.4byte	.LASF308
 4460 1600 09       		.byte	0x9
 4461 1601 12       		.byte	0x12
 4462 1602 DA150000 		.4byte	0x15da
 4463 1606 0D       		.uleb128 0xd
 4464 1607 D5020000 		.4byte	.LASF309
 4465 160b 2C       		.byte	0x2c
 4466 160c 09       		.byte	0x9
 4467 160d 15       		.byte	0x15
 4468 160e D1160000 		.4byte	0x16d1
 4469 1612 0B       		.uleb128 0xb
 4470 1613 4C0A0000 		.4byte	.LASF310
 4471 1617 09       		.byte	0x9
 4472 1618 16       		.byte	0x16
 4473 1619 FB150000 		.4byte	0x15fb
 4474 161d 02       		.byte	0x2
 4475 161e 23       		.byte	0x23
 4476 161f 00       		.uleb128 0
 4477 1620 0E       		.uleb128 0xe
 4478 1621 535000   		.ascii	"SP\000"
 4479 1624 09       		.byte	0x9
ARM GAS  /tmp/cc17JTRV.s 			page 115


 4480 1625 17       		.byte	0x17
 4481 1626 CF150000 		.4byte	0x15cf
 4482 162a 02       		.byte	0x2
 4483 162b 23       		.byte	0x23
 4484 162c 02       		.uleb128 0x2
 4485 162d 0E       		.uleb128 0xe
 4486 162e 72535000 		.ascii	"rSP\000"
 4487 1632 09       		.byte	0x9
 4488 1633 18       		.byte	0x18
 4489 1634 CF150000 		.4byte	0x15cf
 4490 1638 02       		.byte	0x2
 4491 1639 23       		.byte	0x23
 4492 163a 04       		.uleb128 0x4
 4493 163b 0B       		.uleb128 0xb
 4494 163c 89030000 		.4byte	.LASF311
 4495 1640 09       		.byte	0x9
 4496 1641 19       		.byte	0x19
 4497 1642 45000000 		.4byte	0x45
 4498 1646 02       		.byte	0x2
 4499 1647 23       		.byte	0x23
 4500 1648 08       		.uleb128 0x8
 4501 1649 0E       		.uleb128 0xe
 4502 164a 4B7000   		.ascii	"Kp\000"
 4503 164d 09       		.byte	0x9
 4504 164e 1B       		.byte	0x1b
 4505 164f CF150000 		.4byte	0x15cf
 4506 1653 02       		.byte	0x2
 4507 1654 23       		.byte	0x23
 4508 1655 0C       		.uleb128 0xc
 4509 1656 0E       		.uleb128 0xe
 4510 1657 4B6900   		.ascii	"Ki\000"
 4511 165a 09       		.byte	0x9
 4512 165b 1C       		.byte	0x1c
 4513 165c CF150000 		.4byte	0x15cf
 4514 1660 02       		.byte	0x2
 4515 1661 23       		.byte	0x23
 4516 1662 0E       		.uleb128 0xe
 4517 1663 0E       		.uleb128 0xe
 4518 1664 4B6400   		.ascii	"Kd\000"
 4519 1667 09       		.byte	0x9
 4520 1668 1D       		.byte	0x1d
 4521 1669 CF150000 		.4byte	0x15cf
 4522 166d 02       		.byte	0x2
 4523 166e 23       		.byte	0x23
 4524 166f 10       		.uleb128 0x10
 4525 1670 0E       		.uleb128 0xe
 4526 1671 5F6500   		.ascii	"_e\000"
 4527 1674 09       		.byte	0x9
 4528 1675 1F       		.byte	0x1f
 4529 1676 45000000 		.4byte	0x45
 4530 167a 02       		.byte	0x2
 4531 167b 23       		.byte	0x23
 4532 167c 14       		.uleb128 0x14
 4533 167d 0E       		.uleb128 0xe
 4534 167e 5F647800 		.ascii	"_dx\000"
 4535 1682 09       		.byte	0x9
 4536 1683 20       		.byte	0x20
ARM GAS  /tmp/cc17JTRV.s 			page 116


 4537 1684 45000000 		.4byte	0x45
 4538 1688 02       		.byte	0x2
 4539 1689 23       		.byte	0x23
 4540 168a 18       		.uleb128 0x18
 4541 168b 0E       		.uleb128 0xe
 4542 168c 5F646500 		.ascii	"_de\000"
 4543 1690 09       		.byte	0x9
 4544 1691 21       		.byte	0x21
 4545 1692 45000000 		.4byte	0x45
 4546 1696 02       		.byte	0x2
 4547 1697 23       		.byte	0x23
 4548 1698 1C       		.uleb128 0x1c
 4549 1699 0B       		.uleb128 0xb
 4550 169a DE060000 		.4byte	.LASF312
 4551 169e 09       		.byte	0x9
 4552 169f 22       		.byte	0x22
 4553 16a0 45000000 		.4byte	0x45
 4554 16a4 02       		.byte	0x2
 4555 16a5 23       		.byte	0x23
 4556 16a6 20       		.uleb128 0x20
 4557 16a7 0E       		.uleb128 0xe
 4558 16a8 5F7800   		.ascii	"_x\000"
 4559 16ab 09       		.byte	0x9
 4560 16ac 23       		.byte	0x23
 4561 16ad CF150000 		.4byte	0x15cf
 4562 16b1 02       		.byte	0x2
 4563 16b2 23       		.byte	0x23
 4564 16b3 24       		.uleb128 0x24
 4565 16b4 0B       		.uleb128 0xb
 4566 16b5 33030000 		.4byte	.LASF313
 4567 16b9 09       		.byte	0x9
 4568 16ba 25       		.byte	0x25
 4569 16bb 37000000 		.4byte	0x37
 4570 16bf 02       		.byte	0x2
 4571 16c0 23       		.byte	0x23
 4572 16c1 26       		.uleb128 0x26
 4573 16c2 0B       		.uleb128 0xb
 4574 16c3 70010000 		.4byte	.LASF314
 4575 16c7 09       		.byte	0x9
 4576 16c8 27       		.byte	0x27
 4577 16c9 15170000 		.4byte	0x1715
 4578 16cd 02       		.byte	0x2
 4579 16ce 23       		.byte	0x23
 4580 16cf 28       		.uleb128 0x28
 4581 16d0 00       		.byte	0
 4582 16d1 0D       		.uleb128 0xd
 4583 16d2 76050000 		.4byte	.LASF315
 4584 16d6 10       		.byte	0x10
 4585 16d7 09       		.byte	0x9
 4586 16d8 2B       		.byte	0x2b
 4587 16d9 15170000 		.4byte	0x1715
 4588 16dd 0B       		.uleb128 0xb
 4589 16de DE030000 		.4byte	.LASF316
 4590 16e2 09       		.byte	0x9
 4591 16e3 2C       		.byte	0x2c
 4592 16e4 1B170000 		.4byte	0x171b
 4593 16e8 02       		.byte	0x2
ARM GAS  /tmp/cc17JTRV.s 			page 117


 4594 16e9 23       		.byte	0x23
 4595 16ea 00       		.uleb128 0
 4596 16eb 0B       		.uleb128 0xb
 4597 16ec 33030000 		.4byte	.LASF313
 4598 16f0 09       		.byte	0x9
 4599 16f1 2D       		.byte	0x2d
 4600 16f2 45000000 		.4byte	0x45
 4601 16f6 02       		.byte	0x2
 4602 16f7 23       		.byte	0x23
 4603 16f8 04       		.uleb128 0x4
 4604 16f9 0E       		.uleb128 0xe
 4605 16fa 6F6E00   		.ascii	"on\000"
 4606 16fd 09       		.byte	0x9
 4607 16fe 2E       		.byte	0x2e
 4608 16ff 45000000 		.4byte	0x45
 4609 1703 02       		.byte	0x2
 4610 1704 23       		.byte	0x23
 4611 1705 08       		.uleb128 0x8
 4612 1706 0E       		.uleb128 0xe
 4613 1707 6F666600 		.ascii	"off\000"
 4614 170b 09       		.byte	0x9
 4615 170c 2F       		.byte	0x2f
 4616 170d 45000000 		.4byte	0x45
 4617 1711 02       		.byte	0x2
 4618 1712 23       		.byte	0x23
 4619 1713 0C       		.uleb128 0xc
 4620 1714 00       		.byte	0
 4621 1715 0F       		.uleb128 0xf
 4622 1716 04       		.byte	0x4
 4623 1717 D1160000 		.4byte	0x16d1
 4624 171b 0F       		.uleb128 0xf
 4625 171c 04       		.byte	0x4
 4626 171d 45000000 		.4byte	0x45
 4627 1721 23       		.uleb128 0x23
 4628 1722 09000000 		.4byte	.LASF317
 4629 1726 01       		.byte	0x1
 4630 1727 DE05     		.2byte	0x5de
 4631 1729 01       		.byte	0x1
 4632 172a 00000000 		.4byte	.LFB14
 4633 172e 36000000 		.4byte	.LFE14
 4634 1732 00000000 		.4byte	.LLST0
 4635 1736 4A170000 		.4byte	0x174a
 4636 173a 24       		.uleb128 0x24
 4637 173b FA010000 		.4byte	.LASF319
 4638 173f 01       		.byte	0x1
 4639 1740 DE05     		.2byte	0x5de
 4640 1742 D0090000 		.4byte	0x9d0
 4641 1746 02       		.byte	0x2
 4642 1747 91       		.byte	0x91
 4643 1748 77       		.sleb128 -9
 4644 1749 00       		.byte	0
 4645 174a 23       		.uleb128 0x23
 4646 174b 11020000 		.4byte	.LASF318
 4647 174f 01       		.byte	0x1
 4648 1750 3206     		.2byte	0x632
 4649 1752 01       		.byte	0x1
 4650 1753 00000000 		.4byte	.LFB20
ARM GAS  /tmp/cc17JTRV.s 			page 118


 4651 1757 5C000000 		.4byte	.LFE20
 4652 175b 38000000 		.4byte	.LLST1
 4653 175f 82170000 		.4byte	0x1782
 4654 1763 24       		.uleb128 0x24
 4655 1764 FA010000 		.4byte	.LASF319
 4656 1768 01       		.byte	0x1
 4657 1769 3206     		.2byte	0x632
 4658 176b D0090000 		.4byte	0x9d0
 4659 176f 02       		.byte	0x2
 4660 1770 91       		.byte	0x91
 4661 1771 77       		.sleb128 -9
 4662 1772 24       		.uleb128 0x24
 4663 1773 510A0000 		.4byte	.LASF320
 4664 1777 01       		.byte	0x1
 4665 1778 3206     		.2byte	0x632
 4666 177a B9080000 		.4byte	0x8b9
 4667 177e 02       		.byte	0x2
 4668 177f 91       		.byte	0x91
 4669 1780 70       		.sleb128 -16
 4670 1781 00       		.byte	0
 4671 1782 25       		.uleb128 0x25
 4672 1783 01       		.byte	0x1
 4673 1784 F5010000 		.4byte	.LASF321
 4674 1788 02       		.byte	0x2
 4675 1789 24       		.byte	0x24
 4676 178a 45000000 		.4byte	0x45
 4677 178e 00000000 		.4byte	.LFB35
 4678 1792 6C020000 		.4byte	.LFE35
 4679 1796 70000000 		.4byte	.LLST2
 4680 179a AD170000 		.4byte	0x17ad
 4681 179e 26       		.uleb128 0x26
 4682 179f 6D020000 		.4byte	.LASF323
 4683 17a3 02       		.byte	0x2
 4684 17a4 26       		.byte	0x26
 4685 17a5 B9080000 		.4byte	0x8b9
 4686 17a9 02       		.byte	0x2
 4687 17aa 91       		.byte	0x91
 4688 17ab 74       		.sleb128 -12
 4689 17ac 00       		.byte	0
 4690 17ad 27       		.uleb128 0x27
 4691 17ae 01       		.byte	0x1
 4692 17af 94080000 		.4byte	.LASF343
 4693 17b3 02       		.byte	0x2
 4694 17b4 66       		.byte	0x66
 4695 17b5 01       		.byte	0x1
 4696 17b6 00000000 		.4byte	.LFB36
 4697 17ba 2C000000 		.4byte	.LFE36
 4698 17be A8000000 		.4byte	.LLST3
 4699 17c2 28       		.uleb128 0x28
 4700 17c3 01       		.byte	0x1
 4701 17c4 6C040000 		.4byte	.LASF322
 4702 17c8 02       		.byte	0x2
 4703 17c9 6C       		.byte	0x6c
 4704 17ca 01       		.byte	0x1
 4705 17cb 00000000 		.4byte	.LFB37
 4706 17cf 42010000 		.4byte	.LFE37
 4707 17d3 D4000000 		.4byte	.LLST4
ARM GAS  /tmp/cc17JTRV.s 			page 119


 4708 17d7 F8170000 		.4byte	0x17f8
 4709 17db 26       		.uleb128 0x26
 4710 17dc 120B0000 		.4byte	.LASF324
 4711 17e0 02       		.byte	0x2
 4712 17e1 6F       		.byte	0x6f
 4713 17e2 B9080000 		.4byte	0x8b9
 4714 17e6 02       		.byte	0x2
 4715 17e7 91       		.byte	0x91
 4716 17e8 70       		.sleb128 -16
 4717 17e9 26       		.uleb128 0x26
 4718 17ea 37000000 		.4byte	.LASF325
 4719 17ee 02       		.byte	0x2
 4720 17ef 70       		.byte	0x70
 4721 17f0 B9080000 		.4byte	0x8b9
 4722 17f4 02       		.byte	0x2
 4723 17f5 91       		.byte	0x91
 4724 17f6 74       		.sleb128 -12
 4725 17f7 00       		.byte	0
 4726 17f8 29       		.uleb128 0x29
 4727 17f9 55090000 		.4byte	.LASF328
 4728 17fd 02       		.byte	0x2
 4729 17fe 88       		.byte	0x88
 4730 17ff 00000000 		.4byte	.LFB38
 4731 1803 4C020000 		.4byte	.LFE38
 4732 1807 0C010000 		.4byte	.LLST5
 4733 180b 36180000 		.4byte	0x1836
 4734 180f 2A       		.uleb128 0x2a
 4735 1810 64697600 		.ascii	"div\000"
 4736 1814 02       		.byte	0x2
 4737 1815 8A       		.byte	0x8a
 4738 1816 B9080000 		.4byte	0x8b9
 4739 181a 02       		.byte	0x2
 4740 181b 91       		.byte	0x91
 4741 181c 6C       		.sleb128 -20
 4742 181d 26       		.uleb128 0x26
 4743 181e E8080000 		.4byte	.LASF326
 4744 1822 02       		.byte	0x2
 4745 1823 8B       		.byte	0x8b
 4746 1824 B9080000 		.4byte	0x8b9
 4747 1828 02       		.byte	0x2
 4748 1829 91       		.byte	0x91
 4749 182a 68       		.sleb128 -24
 4750 182b 2B       		.uleb128 0x2b
 4751 182c DA020000 		.4byte	.LASF344
 4752 1830 46180000 		.4byte	0x1846
 4753 1834 01       		.byte	0x1
 4754 1835 00       		.byte	0
 4755 1836 08       		.uleb128 0x8
 4756 1837 F9050000 		.4byte	0x5f9
 4757 183b 46180000 		.4byte	0x1846
 4758 183f 09       		.uleb128 0x9
 4759 1840 4C000000 		.4byte	0x4c
 4760 1844 04       		.byte	0x4
 4761 1845 00       		.byte	0
 4762 1846 17       		.uleb128 0x17
 4763 1847 36180000 		.4byte	0x1836
 4764 184b 2C       		.uleb128 0x2c
ARM GAS  /tmp/cc17JTRV.s 			page 120


 4765 184c CD000000 		.4byte	.LASF327
 4766 1850 02       		.byte	0x2
 4767 1851 C3       		.byte	0xc3
 4768 1852 01       		.byte	0x1
 4769 1853 00000000 		.4byte	.LFB39
 4770 1857 AA010000 		.4byte	.LFE39
 4771 185b 44010000 		.4byte	.LLST6
 4772 185f 72180000 		.4byte	0x1872
 4773 1863 2D       		.uleb128 0x2d
 4774 1864 6E657700 		.ascii	"new\000"
 4775 1868 02       		.byte	0x2
 4776 1869 C3       		.byte	0xc3
 4777 186a 98080000 		.4byte	0x898
 4778 186e 02       		.byte	0x2
 4779 186f 91       		.byte	0x91
 4780 1870 77       		.sleb128 -9
 4781 1871 00       		.byte	0
 4782 1872 2E       		.uleb128 0x2e
 4783 1873 636C6900 		.ascii	"cli\000"
 4784 1877 02       		.byte	0x2
 4785 1878 E4       		.byte	0xe4
 4786 1879 00000000 		.4byte	.LFB40
 4787 187d D6030000 		.4byte	.LFE40
 4788 1881 7C010000 		.4byte	.LLST7
 4789 1885 C3180000 		.4byte	0x18c3
 4790 1889 26       		.uleb128 0x26
 4791 188a 9D050000 		.4byte	.LASF329
 4792 188e 02       		.byte	0x2
 4793 188f E6       		.byte	0xe6
 4794 1890 45000000 		.4byte	0x45
 4795 1894 02       		.byte	0x2
 4796 1895 91       		.byte	0x91
 4797 1896 6C       		.sleb128 -20
 4798 1897 26       		.uleb128 0x26
 4799 1898 BB050000 		.4byte	.LASF330
 4800 189c 02       		.byte	0x2
 4801 189d E7       		.byte	0xe7
 4802 189e C3180000 		.4byte	0x18c3
 4803 18a2 02       		.byte	0x2
 4804 18a3 91       		.byte	0x91
 4805 18a4 60       		.sleb128 -32
 4806 18a5 26       		.uleb128 0x26
 4807 18a6 44050000 		.4byte	.LASF331
 4808 18aa 02       		.byte	0x2
 4809 18ab E8       		.byte	0xe8
 4810 18ac D3180000 		.4byte	0x18d3
 4811 18b0 02       		.byte	0x2
 4812 18b1 91       		.byte	0x91
 4813 18b2 40       		.sleb128 -64
 4814 18b3 2A       		.uleb128 0x2a
 4815 18b4 636D6400 		.ascii	"cmd\000"
 4816 18b8 02       		.byte	0x2
 4817 18b9 E9       		.byte	0xe9
 4818 18ba F9050000 		.4byte	0x5f9
 4819 18be 03       		.byte	0x3
 4820 18bf 91       		.byte	0x91
 4821 18c0 BF7F     		.sleb128 -65
ARM GAS  /tmp/cc17JTRV.s 			page 121


 4822 18c2 00       		.byte	0
 4823 18c3 08       		.uleb128 0x8
 4824 18c4 45000000 		.4byte	0x45
 4825 18c8 D3180000 		.4byte	0x18d3
 4826 18cc 09       		.uleb128 0x9
 4827 18cd 4C000000 		.4byte	0x4c
 4828 18d1 02       		.byte	0x2
 4829 18d2 00       		.byte	0
 4830 18d3 08       		.uleb128 0x8
 4831 18d4 F9050000 		.4byte	0x5f9
 4832 18d8 E3180000 		.4byte	0x18e3
 4833 18dc 09       		.uleb128 0x9
 4834 18dd 4C000000 		.4byte	0x4c
 4835 18e1 1F       		.byte	0x1f
 4836 18e2 00       		.byte	0
 4837 18e3 2F       		.uleb128 0x2f
 4838 18e4 B3010000 		.4byte	.LASF332
 4839 18e8 06       		.byte	0x6
 4840 18e9 4803     		.2byte	0x348
 4841 18eb 74040000 		.4byte	0x474
 4842 18ef 01       		.byte	0x1
 4843 18f0 01       		.byte	0x1
 4844 18f1 2F       		.uleb128 0x2f
 4845 18f2 CB060000 		.4byte	.LASF333
 4846 18f6 01       		.byte	0x1
 4847 18f7 CE06     		.2byte	0x6ce
 4848 18f9 FF180000 		.4byte	0x18ff
 4849 18fd 01       		.byte	0x1
 4850 18fe 01       		.byte	0x1
 4851 18ff 19       		.uleb128 0x19
 4852 1900 45000000 		.4byte	0x45
 4853 1904 08       		.uleb128 0x8
 4854 1905 CF150000 		.4byte	0x15cf
 4855 1909 14190000 		.4byte	0x1914
 4856 190d 09       		.uleb128 0x9
 4857 190e 4C000000 		.4byte	0x4c
 4858 1912 01       		.byte	0x1
 4859 1913 00       		.byte	0
 4860 1914 30       		.uleb128 0x30
 4861 1915 DE030000 		.4byte	.LASF316
 4862 1919 02       		.byte	0x2
 4863 191a 16       		.byte	0x16
 4864 191b 04190000 		.4byte	0x1904
 4865 191f 01       		.byte	0x1
 4866 1920 01       		.byte	0x1
 4867 1921 30       		.uleb128 0x30
 4868 1922 8A000000 		.4byte	.LASF334
 4869 1926 02       		.byte	0x2
 4870 1927 17       		.byte	0x17
 4871 1928 98080000 		.4byte	0x898
 4872 192c 01       		.byte	0x1
 4873 192d 01       		.byte	0x1
 4874 192e 30       		.uleb128 0x30
 4875 192f C6090000 		.4byte	.LASF335
 4876 1933 02       		.byte	0x2
 4877 1934 19       		.byte	0x19
 4878 1935 06160000 		.4byte	0x1606
ARM GAS  /tmp/cc17JTRV.s 			page 122


 4879 1939 01       		.byte	0x1
 4880 193a 01       		.byte	0x1
 4881 193b 30       		.uleb128 0x30
 4882 193c CD070000 		.4byte	.LASF336
 4883 1940 02       		.byte	0x2
 4884 1941 1A       		.byte	0x1a
 4885 1942 D1160000 		.4byte	0x16d1
 4886 1946 01       		.byte	0x1
 4887 1947 01       		.byte	0x1
 4888 1948 30       		.uleb128 0x30
 4889 1949 90030000 		.4byte	.LASF337
 4890 194d 02       		.byte	0x2
 4891 194e 1B       		.byte	0x1b
 4892 194f D1160000 		.4byte	0x16d1
 4893 1953 01       		.byte	0x1
 4894 1954 01       		.byte	0x1
 4895 1955 30       		.uleb128 0x30
 4896 1956 79010000 		.4byte	.LASF338
 4897 195a 02       		.byte	0x2
 4898 195b 1D       		.byte	0x1d
 4899 195c B9080000 		.4byte	0x8b9
 4900 1960 01       		.byte	0x1
 4901 1961 01       		.byte	0x1
 4902 1962 30       		.uleb128 0x30
 4903 1963 290A0000 		.4byte	.LASF339
 4904 1967 02       		.byte	0x2
 4905 1968 1E       		.byte	0x1e
 4906 1969 B9080000 		.4byte	0x8b9
 4907 196d 01       		.byte	0x1
 4908 196e 01       		.byte	0x1
 4909 196f 2F       		.uleb128 0x2f
 4910 1970 B3010000 		.4byte	.LASF332
 4911 1974 06       		.byte	0x6
 4912 1975 4803     		.2byte	0x348
 4913 1977 74040000 		.4byte	0x474
 4914 197b 01       		.byte	0x1
 4915 197c 01       		.byte	0x1
 4916 197d 2F       		.uleb128 0x2f
 4917 197e CB060000 		.4byte	.LASF333
 4918 1982 01       		.byte	0x1
 4919 1983 CE06     		.2byte	0x6ce
 4920 1985 FF180000 		.4byte	0x18ff
 4921 1989 01       		.byte	0x1
 4922 198a 01       		.byte	0x1
 4923 198b 31       		.uleb128 0x31
 4924 198c DE030000 		.4byte	.LASF316
 4925 1990 02       		.byte	0x2
 4926 1991 16       		.byte	0x16
 4927 1992 04190000 		.4byte	0x1904
 4928 1996 01       		.byte	0x1
 4929 1997 05       		.byte	0x5
 4930 1998 03       		.byte	0x3
 4931 1999 00000000 		.4byte	input
 4932 199d 31       		.uleb128 0x31
 4933 199e 8A000000 		.4byte	.LASF334
 4934 19a2 02       		.byte	0x2
 4935 19a3 17       		.byte	0x17
ARM GAS  /tmp/cc17JTRV.s 			page 123


 4936 19a4 98080000 		.4byte	0x898
 4937 19a8 01       		.byte	0x1
 4938 19a9 05       		.byte	0x5
 4939 19aa 03       		.byte	0x3
 4940 19ab 00000000 		.4byte	_state
 4941 19af 31       		.uleb128 0x31
 4942 19b0 C6090000 		.4byte	.LASF335
 4943 19b4 02       		.byte	0x2
 4944 19b5 19       		.byte	0x19
 4945 19b6 06160000 		.4byte	0x1606
 4946 19ba 01       		.byte	0x1
 4947 19bb 05       		.byte	0x5
 4948 19bc 03       		.byte	0x3
 4949 19bd 00000000 		.4byte	loop
 4950 19c1 31       		.uleb128 0x31
 4951 19c2 CD070000 		.4byte	.LASF336
 4952 19c6 02       		.byte	0x2
 4953 19c7 1A       		.byte	0x1a
 4954 19c8 D1160000 		.4byte	0x16d1
 4955 19cc 01       		.byte	0x1
 4956 19cd 05       		.byte	0x5
 4957 19ce 03       		.byte	0x3
 4958 19cf 00000000 		.4byte	ntrip
 4959 19d3 31       		.uleb128 0x31
 4960 19d4 90030000 		.4byte	.LASF337
 4961 19d8 02       		.byte	0x2
 4962 19d9 1B       		.byte	0x1b
 4963 19da D1160000 		.4byte	0x16d1
 4964 19de 01       		.byte	0x1
 4965 19df 05       		.byte	0x5
 4966 19e0 03       		.byte	0x3
 4967 19e1 00000000 		.4byte	rtrip
 4968 19e5 31       		.uleb128 0x31
 4969 19e6 79010000 		.4byte	.LASF338
 4970 19ea 02       		.byte	0x2
 4971 19eb 1D       		.byte	0x1d
 4972 19ec B9080000 		.4byte	0x8b9
 4973 19f0 01       		.byte	0x1
 4974 19f1 05       		.byte	0x5
 4975 19f2 03       		.byte	0x3
 4976 19f3 00000000 		.4byte	releasetime
 4977 19f7 31       		.uleb128 0x31
 4978 19f8 290A0000 		.4byte	.LASF339
 4979 19fc 02       		.byte	0x2
 4980 19fd 1E       		.byte	0x1e
 4981 19fe B9080000 		.4byte	0x8b9
 4982 1a02 01       		.byte	0x1
 4983 1a03 05       		.byte	0x5
 4984 1a04 03       		.byte	0x3
 4985 1a05 00000000 		.4byte	dxmax
 4986 1a09 00       		.byte	0
 4987              		.section	.debug_abbrev,"",%progbits
 4988              	.Ldebug_abbrev0:
 4989 0000 01       		.uleb128 0x1
 4990 0001 11       		.uleb128 0x11
 4991 0002 01       		.byte	0x1
 4992 0003 25       		.uleb128 0x25
ARM GAS  /tmp/cc17JTRV.s 			page 124


 4993 0004 0E       		.uleb128 0xe
 4994 0005 13       		.uleb128 0x13
 4995 0006 0B       		.uleb128 0xb
 4996 0007 03       		.uleb128 0x3
 4997 0008 0E       		.uleb128 0xe
 4998 0009 1B       		.uleb128 0x1b
 4999 000a 0E       		.uleb128 0xe
 5000 000b 11       		.uleb128 0x11
 5001 000c 01       		.uleb128 0x1
 5002 000d 52       		.uleb128 0x52
 5003 000e 01       		.uleb128 0x1
 5004 000f 55       		.uleb128 0x55
 5005 0010 06       		.uleb128 0x6
 5006 0011 10       		.uleb128 0x10
 5007 0012 06       		.uleb128 0x6
 5008 0013 00       		.byte	0
 5009 0014 00       		.byte	0
 5010 0015 02       		.uleb128 0x2
 5011 0016 24       		.uleb128 0x24
 5012 0017 00       		.byte	0
 5013 0018 0B       		.uleb128 0xb
 5014 0019 0B       		.uleb128 0xb
 5015 001a 3E       		.uleb128 0x3e
 5016 001b 0B       		.uleb128 0xb
 5017 001c 03       		.uleb128 0x3
 5018 001d 0E       		.uleb128 0xe
 5019 001e 00       		.byte	0
 5020 001f 00       		.byte	0
 5021 0020 03       		.uleb128 0x3
 5022 0021 24       		.uleb128 0x24
 5023 0022 00       		.byte	0
 5024 0023 0B       		.uleb128 0xb
 5025 0024 0B       		.uleb128 0xb
 5026 0025 3E       		.uleb128 0x3e
 5027 0026 0B       		.uleb128 0xb
 5028 0027 03       		.uleb128 0x3
 5029 0028 08       		.uleb128 0x8
 5030 0029 00       		.byte	0
 5031 002a 00       		.byte	0
 5032 002b 04       		.uleb128 0x4
 5033 002c 16       		.uleb128 0x16
 5034 002d 00       		.byte	0
 5035 002e 03       		.uleb128 0x3
 5036 002f 0E       		.uleb128 0xe
 5037 0030 3A       		.uleb128 0x3a
 5038 0031 0B       		.uleb128 0xb
 5039 0032 3B       		.uleb128 0x3b
 5040 0033 0B       		.uleb128 0xb
 5041 0034 49       		.uleb128 0x49
 5042 0035 13       		.uleb128 0x13
 5043 0036 00       		.byte	0
 5044 0037 00       		.byte	0
 5045 0038 05       		.uleb128 0x5
 5046 0039 16       		.uleb128 0x16
 5047 003a 00       		.byte	0
 5048 003b 03       		.uleb128 0x3
 5049 003c 0E       		.uleb128 0xe
ARM GAS  /tmp/cc17JTRV.s 			page 125


 5050 003d 3A       		.uleb128 0x3a
 5051 003e 0B       		.uleb128 0xb
 5052 003f 3B       		.uleb128 0x3b
 5053 0040 05       		.uleb128 0x5
 5054 0041 49       		.uleb128 0x49
 5055 0042 13       		.uleb128 0x13
 5056 0043 00       		.byte	0
 5057 0044 00       		.byte	0
 5058 0045 06       		.uleb128 0x6
 5059 0046 17       		.uleb128 0x17
 5060 0047 01       		.byte	0x1
 5061 0048 0B       		.uleb128 0xb
 5062 0049 0B       		.uleb128 0xb
 5063 004a 3A       		.uleb128 0x3a
 5064 004b 0B       		.uleb128 0xb
 5065 004c 3B       		.uleb128 0x3b
 5066 004d 0B       		.uleb128 0xb
 5067 004e 01       		.uleb128 0x1
 5068 004f 13       		.uleb128 0x13
 5069 0050 00       		.byte	0
 5070 0051 00       		.byte	0
 5071 0052 07       		.uleb128 0x7
 5072 0053 0D       		.uleb128 0xd
 5073 0054 00       		.byte	0
 5074 0055 03       		.uleb128 0x3
 5075 0056 0E       		.uleb128 0xe
 5076 0057 3A       		.uleb128 0x3a
 5077 0058 0B       		.uleb128 0xb
 5078 0059 3B       		.uleb128 0x3b
 5079 005a 0B       		.uleb128 0xb
 5080 005b 49       		.uleb128 0x49
 5081 005c 13       		.uleb128 0x13
 5082 005d 00       		.byte	0
 5083 005e 00       		.byte	0
 5084 005f 08       		.uleb128 0x8
 5085 0060 01       		.uleb128 0x1
 5086 0061 01       		.byte	0x1
 5087 0062 49       		.uleb128 0x49
 5088 0063 13       		.uleb128 0x13
 5089 0064 01       		.uleb128 0x1
 5090 0065 13       		.uleb128 0x13
 5091 0066 00       		.byte	0
 5092 0067 00       		.byte	0
 5093 0068 09       		.uleb128 0x9
 5094 0069 21       		.uleb128 0x21
 5095 006a 00       		.byte	0
 5096 006b 49       		.uleb128 0x49
 5097 006c 13       		.uleb128 0x13
 5098 006d 2F       		.uleb128 0x2f
 5099 006e 0B       		.uleb128 0xb
 5100 006f 00       		.byte	0
 5101 0070 00       		.byte	0
 5102 0071 0A       		.uleb128 0xa
 5103 0072 13       		.uleb128 0x13
 5104 0073 01       		.byte	0x1
 5105 0074 0B       		.uleb128 0xb
 5106 0075 0B       		.uleb128 0xb
ARM GAS  /tmp/cc17JTRV.s 			page 126


 5107 0076 3A       		.uleb128 0x3a
 5108 0077 0B       		.uleb128 0xb
 5109 0078 3B       		.uleb128 0x3b
 5110 0079 0B       		.uleb128 0xb
 5111 007a 01       		.uleb128 0x1
 5112 007b 13       		.uleb128 0x13
 5113 007c 00       		.byte	0
 5114 007d 00       		.byte	0
 5115 007e 0B       		.uleb128 0xb
 5116 007f 0D       		.uleb128 0xd
 5117 0080 00       		.byte	0
 5118 0081 03       		.uleb128 0x3
 5119 0082 0E       		.uleb128 0xe
 5120 0083 3A       		.uleb128 0x3a
 5121 0084 0B       		.uleb128 0xb
 5122 0085 3B       		.uleb128 0x3b
 5123 0086 0B       		.uleb128 0xb
 5124 0087 49       		.uleb128 0x49
 5125 0088 13       		.uleb128 0x13
 5126 0089 38       		.uleb128 0x38
 5127 008a 0A       		.uleb128 0xa
 5128 008b 00       		.byte	0
 5129 008c 00       		.byte	0
 5130 008d 0C       		.uleb128 0xc
 5131 008e 0F       		.uleb128 0xf
 5132 008f 00       		.byte	0
 5133 0090 0B       		.uleb128 0xb
 5134 0091 0B       		.uleb128 0xb
 5135 0092 00       		.byte	0
 5136 0093 00       		.byte	0
 5137 0094 0D       		.uleb128 0xd
 5138 0095 13       		.uleb128 0x13
 5139 0096 01       		.byte	0x1
 5140 0097 03       		.uleb128 0x3
 5141 0098 0E       		.uleb128 0xe
 5142 0099 0B       		.uleb128 0xb
 5143 009a 0B       		.uleb128 0xb
 5144 009b 3A       		.uleb128 0x3a
 5145 009c 0B       		.uleb128 0xb
 5146 009d 3B       		.uleb128 0x3b
 5147 009e 0B       		.uleb128 0xb
 5148 009f 01       		.uleb128 0x1
 5149 00a0 13       		.uleb128 0x13
 5150 00a1 00       		.byte	0
 5151 00a2 00       		.byte	0
 5152 00a3 0E       		.uleb128 0xe
 5153 00a4 0D       		.uleb128 0xd
 5154 00a5 00       		.byte	0
 5155 00a6 03       		.uleb128 0x3
 5156 00a7 08       		.uleb128 0x8
 5157 00a8 3A       		.uleb128 0x3a
 5158 00a9 0B       		.uleb128 0xb
 5159 00aa 3B       		.uleb128 0x3b
 5160 00ab 0B       		.uleb128 0xb
 5161 00ac 49       		.uleb128 0x49
 5162 00ad 13       		.uleb128 0x13
 5163 00ae 38       		.uleb128 0x38
ARM GAS  /tmp/cc17JTRV.s 			page 127


 5164 00af 0A       		.uleb128 0xa
 5165 00b0 00       		.byte	0
 5166 00b1 00       		.byte	0
 5167 00b2 0F       		.uleb128 0xf
 5168 00b3 0F       		.uleb128 0xf
 5169 00b4 00       		.byte	0
 5170 00b5 0B       		.uleb128 0xb
 5171 00b6 0B       		.uleb128 0xb
 5172 00b7 49       		.uleb128 0x49
 5173 00b8 13       		.uleb128 0x13
 5174 00b9 00       		.byte	0
 5175 00ba 00       		.byte	0
 5176 00bb 10       		.uleb128 0x10
 5177 00bc 13       		.uleb128 0x13
 5178 00bd 01       		.byte	0x1
 5179 00be 03       		.uleb128 0x3
 5180 00bf 0E       		.uleb128 0xe
 5181 00c0 0B       		.uleb128 0xb
 5182 00c1 05       		.uleb128 0x5
 5183 00c2 3A       		.uleb128 0x3a
 5184 00c3 0B       		.uleb128 0xb
 5185 00c4 3B       		.uleb128 0x3b
 5186 00c5 0B       		.uleb128 0xb
 5187 00c6 01       		.uleb128 0x1
 5188 00c7 13       		.uleb128 0x13
 5189 00c8 00       		.byte	0
 5190 00c9 00       		.byte	0
 5191 00ca 11       		.uleb128 0x11
 5192 00cb 15       		.uleb128 0x15
 5193 00cc 00       		.byte	0
 5194 00cd 27       		.uleb128 0x27
 5195 00ce 0C       		.uleb128 0xc
 5196 00cf 00       		.byte	0
 5197 00d0 00       		.byte	0
 5198 00d1 12       		.uleb128 0x12
 5199 00d2 13       		.uleb128 0x13
 5200 00d3 01       		.byte	0x1
 5201 00d4 03       		.uleb128 0x3
 5202 00d5 0E       		.uleb128 0xe
 5203 00d6 0B       		.uleb128 0xb
 5204 00d7 0B       		.uleb128 0xb
 5205 00d8 3A       		.uleb128 0x3a
 5206 00d9 0B       		.uleb128 0xb
 5207 00da 3B       		.uleb128 0x3b
 5208 00db 05       		.uleb128 0x5
 5209 00dc 01       		.uleb128 0x1
 5210 00dd 13       		.uleb128 0x13
 5211 00de 00       		.byte	0
 5212 00df 00       		.byte	0
 5213 00e0 13       		.uleb128 0x13
 5214 00e1 0D       		.uleb128 0xd
 5215 00e2 00       		.byte	0
 5216 00e3 03       		.uleb128 0x3
 5217 00e4 0E       		.uleb128 0xe
 5218 00e5 3A       		.uleb128 0x3a
 5219 00e6 0B       		.uleb128 0xb
 5220 00e7 3B       		.uleb128 0x3b
ARM GAS  /tmp/cc17JTRV.s 			page 128


 5221 00e8 05       		.uleb128 0x5
 5222 00e9 49       		.uleb128 0x49
 5223 00ea 13       		.uleb128 0x13
 5224 00eb 38       		.uleb128 0x38
 5225 00ec 0A       		.uleb128 0xa
 5226 00ed 00       		.byte	0
 5227 00ee 00       		.byte	0
 5228 00ef 14       		.uleb128 0x14
 5229 00f0 0D       		.uleb128 0xd
 5230 00f1 00       		.byte	0
 5231 00f2 03       		.uleb128 0x3
 5232 00f3 08       		.uleb128 0x8
 5233 00f4 3A       		.uleb128 0x3a
 5234 00f5 0B       		.uleb128 0xb
 5235 00f6 3B       		.uleb128 0x3b
 5236 00f7 05       		.uleb128 0x5
 5237 00f8 49       		.uleb128 0x49
 5238 00f9 13       		.uleb128 0x13
 5239 00fa 38       		.uleb128 0x38
 5240 00fb 0A       		.uleb128 0xa
 5241 00fc 00       		.byte	0
 5242 00fd 00       		.byte	0
 5243 00fe 15       		.uleb128 0x15
 5244 00ff 15       		.uleb128 0x15
 5245 0100 01       		.byte	0x1
 5246 0101 27       		.uleb128 0x27
 5247 0102 0C       		.uleb128 0xc
 5248 0103 49       		.uleb128 0x49
 5249 0104 13       		.uleb128 0x13
 5250 0105 01       		.uleb128 0x1
 5251 0106 13       		.uleb128 0x13
 5252 0107 00       		.byte	0
 5253 0108 00       		.byte	0
 5254 0109 16       		.uleb128 0x16
 5255 010a 05       		.uleb128 0x5
 5256 010b 00       		.byte	0
 5257 010c 49       		.uleb128 0x49
 5258 010d 13       		.uleb128 0x13
 5259 010e 00       		.byte	0
 5260 010f 00       		.byte	0
 5261 0110 17       		.uleb128 0x17
 5262 0111 26       		.uleb128 0x26
 5263 0112 00       		.byte	0
 5264 0113 49       		.uleb128 0x49
 5265 0114 13       		.uleb128 0x13
 5266 0115 00       		.byte	0
 5267 0116 00       		.byte	0
 5268 0117 18       		.uleb128 0x18
 5269 0118 15       		.uleb128 0x15
 5270 0119 01       		.byte	0x1
 5271 011a 27       		.uleb128 0x27
 5272 011b 0C       		.uleb128 0xc
 5273 011c 01       		.uleb128 0x1
 5274 011d 13       		.uleb128 0x13
 5275 011e 00       		.byte	0
 5276 011f 00       		.byte	0
 5277 0120 19       		.uleb128 0x19
ARM GAS  /tmp/cc17JTRV.s 			page 129


 5278 0121 35       		.uleb128 0x35
 5279 0122 00       		.byte	0
 5280 0123 49       		.uleb128 0x49
 5281 0124 13       		.uleb128 0x13
 5282 0125 00       		.byte	0
 5283 0126 00       		.byte	0
 5284 0127 1A       		.uleb128 0x1a
 5285 0128 04       		.uleb128 0x4
 5286 0129 01       		.byte	0x1
 5287 012a 03       		.uleb128 0x3
 5288 012b 0E       		.uleb128 0xe
 5289 012c 0B       		.uleb128 0xb
 5290 012d 0B       		.uleb128 0xb
 5291 012e 3A       		.uleb128 0x3a
 5292 012f 0B       		.uleb128 0xb
 5293 0130 3B       		.uleb128 0x3b
 5294 0131 0B       		.uleb128 0xb
 5295 0132 01       		.uleb128 0x1
 5296 0133 13       		.uleb128 0x13
 5297 0134 00       		.byte	0
 5298 0135 00       		.byte	0
 5299 0136 1B       		.uleb128 0x1b
 5300 0137 28       		.uleb128 0x28
 5301 0138 00       		.byte	0
 5302 0139 03       		.uleb128 0x3
 5303 013a 0E       		.uleb128 0xe
 5304 013b 1C       		.uleb128 0x1c
 5305 013c 0D       		.uleb128 0xd
 5306 013d 00       		.byte	0
 5307 013e 00       		.byte	0
 5308 013f 1C       		.uleb128 0x1c
 5309 0140 13       		.uleb128 0x13
 5310 0141 01       		.byte	0x1
 5311 0142 0B       		.uleb128 0xb
 5312 0143 05       		.uleb128 0x5
 5313 0144 3A       		.uleb128 0x3a
 5314 0145 0B       		.uleb128 0xb
 5315 0146 3B       		.uleb128 0x3b
 5316 0147 0B       		.uleb128 0xb
 5317 0148 01       		.uleb128 0x1
 5318 0149 13       		.uleb128 0x13
 5319 014a 00       		.byte	0
 5320 014b 00       		.byte	0
 5321 014c 1D       		.uleb128 0x1d
 5322 014d 21       		.uleb128 0x21
 5323 014e 00       		.byte	0
 5324 014f 49       		.uleb128 0x49
 5325 0150 13       		.uleb128 0x13
 5326 0151 2F       		.uleb128 0x2f
 5327 0152 05       		.uleb128 0x5
 5328 0153 00       		.byte	0
 5329 0154 00       		.byte	0
 5330 0155 1E       		.uleb128 0x1e
 5331 0156 16       		.uleb128 0x16
 5332 0157 00       		.byte	0
 5333 0158 03       		.uleb128 0x3
 5334 0159 08       		.uleb128 0x8
ARM GAS  /tmp/cc17JTRV.s 			page 130


 5335 015a 3A       		.uleb128 0x3a
 5336 015b 0B       		.uleb128 0xb
 5337 015c 3B       		.uleb128 0x3b
 5338 015d 05       		.uleb128 0x5
 5339 015e 49       		.uleb128 0x49
 5340 015f 13       		.uleb128 0x13
 5341 0160 00       		.byte	0
 5342 0161 00       		.byte	0
 5343 0162 1F       		.uleb128 0x1f
 5344 0163 13       		.uleb128 0x13
 5345 0164 01       		.byte	0x1
 5346 0165 0B       		.uleb128 0xb
 5347 0166 0B       		.uleb128 0xb
 5348 0167 3A       		.uleb128 0x3a
 5349 0168 0B       		.uleb128 0xb
 5350 0169 3B       		.uleb128 0x3b
 5351 016a 05       		.uleb128 0x5
 5352 016b 01       		.uleb128 0x1
 5353 016c 13       		.uleb128 0x13
 5354 016d 00       		.byte	0
 5355 016e 00       		.byte	0
 5356 016f 20       		.uleb128 0x20
 5357 0170 13       		.uleb128 0x13
 5358 0171 01       		.byte	0x1
 5359 0172 0B       		.uleb128 0xb
 5360 0173 05       		.uleb128 0x5
 5361 0174 3A       		.uleb128 0x3a
 5362 0175 0B       		.uleb128 0xb
 5363 0176 3B       		.uleb128 0x3b
 5364 0177 05       		.uleb128 0x5
 5365 0178 01       		.uleb128 0x1
 5366 0179 13       		.uleb128 0x13
 5367 017a 00       		.byte	0
 5368 017b 00       		.byte	0
 5369 017c 21       		.uleb128 0x21
 5370 017d 04       		.uleb128 0x4
 5371 017e 01       		.byte	0x1
 5372 017f 0B       		.uleb128 0xb
 5373 0180 0B       		.uleb128 0xb
 5374 0181 3A       		.uleb128 0x3a
 5375 0182 0B       		.uleb128 0xb
 5376 0183 3B       		.uleb128 0x3b
 5377 0184 0B       		.uleb128 0xb
 5378 0185 01       		.uleb128 0x1
 5379 0186 13       		.uleb128 0x13
 5380 0187 00       		.byte	0
 5381 0188 00       		.byte	0
 5382 0189 22       		.uleb128 0x22
 5383 018a 28       		.uleb128 0x28
 5384 018b 00       		.byte	0
 5385 018c 03       		.uleb128 0x3
 5386 018d 08       		.uleb128 0x8
 5387 018e 1C       		.uleb128 0x1c
 5388 018f 0D       		.uleb128 0xd
 5389 0190 00       		.byte	0
 5390 0191 00       		.byte	0
 5391 0192 23       		.uleb128 0x23
ARM GAS  /tmp/cc17JTRV.s 			page 131


 5392 0193 2E       		.uleb128 0x2e
 5393 0194 01       		.byte	0x1
 5394 0195 03       		.uleb128 0x3
 5395 0196 0E       		.uleb128 0xe
 5396 0197 3A       		.uleb128 0x3a
 5397 0198 0B       		.uleb128 0xb
 5398 0199 3B       		.uleb128 0x3b
 5399 019a 05       		.uleb128 0x5
 5400 019b 27       		.uleb128 0x27
 5401 019c 0C       		.uleb128 0xc
 5402 019d 11       		.uleb128 0x11
 5403 019e 01       		.uleb128 0x1
 5404 019f 12       		.uleb128 0x12
 5405 01a0 01       		.uleb128 0x1
 5406 01a1 40       		.uleb128 0x40
 5407 01a2 06       		.uleb128 0x6
 5408 01a3 01       		.uleb128 0x1
 5409 01a4 13       		.uleb128 0x13
 5410 01a5 00       		.byte	0
 5411 01a6 00       		.byte	0
 5412 01a7 24       		.uleb128 0x24
 5413 01a8 05       		.uleb128 0x5
 5414 01a9 00       		.byte	0
 5415 01aa 03       		.uleb128 0x3
 5416 01ab 0E       		.uleb128 0xe
 5417 01ac 3A       		.uleb128 0x3a
 5418 01ad 0B       		.uleb128 0xb
 5419 01ae 3B       		.uleb128 0x3b
 5420 01af 05       		.uleb128 0x5
 5421 01b0 49       		.uleb128 0x49
 5422 01b1 13       		.uleb128 0x13
 5423 01b2 02       		.uleb128 0x2
 5424 01b3 0A       		.uleb128 0xa
 5425 01b4 00       		.byte	0
 5426 01b5 00       		.byte	0
 5427 01b6 25       		.uleb128 0x25
 5428 01b7 2E       		.uleb128 0x2e
 5429 01b8 01       		.byte	0x1
 5430 01b9 3F       		.uleb128 0x3f
 5431 01ba 0C       		.uleb128 0xc
 5432 01bb 03       		.uleb128 0x3
 5433 01bc 0E       		.uleb128 0xe
 5434 01bd 3A       		.uleb128 0x3a
 5435 01be 0B       		.uleb128 0xb
 5436 01bf 3B       		.uleb128 0x3b
 5437 01c0 0B       		.uleb128 0xb
 5438 01c1 49       		.uleb128 0x49
 5439 01c2 13       		.uleb128 0x13
 5440 01c3 11       		.uleb128 0x11
 5441 01c4 01       		.uleb128 0x1
 5442 01c5 12       		.uleb128 0x12
 5443 01c6 01       		.uleb128 0x1
 5444 01c7 40       		.uleb128 0x40
 5445 01c8 06       		.uleb128 0x6
 5446 01c9 01       		.uleb128 0x1
 5447 01ca 13       		.uleb128 0x13
 5448 01cb 00       		.byte	0
ARM GAS  /tmp/cc17JTRV.s 			page 132


 5449 01cc 00       		.byte	0
 5450 01cd 26       		.uleb128 0x26
 5451 01ce 34       		.uleb128 0x34
 5452 01cf 00       		.byte	0
 5453 01d0 03       		.uleb128 0x3
 5454 01d1 0E       		.uleb128 0xe
 5455 01d2 3A       		.uleb128 0x3a
 5456 01d3 0B       		.uleb128 0xb
 5457 01d4 3B       		.uleb128 0x3b
 5458 01d5 0B       		.uleb128 0xb
 5459 01d6 49       		.uleb128 0x49
 5460 01d7 13       		.uleb128 0x13
 5461 01d8 02       		.uleb128 0x2
 5462 01d9 0A       		.uleb128 0xa
 5463 01da 00       		.byte	0
 5464 01db 00       		.byte	0
 5465 01dc 27       		.uleb128 0x27
 5466 01dd 2E       		.uleb128 0x2e
 5467 01de 00       		.byte	0
 5468 01df 3F       		.uleb128 0x3f
 5469 01e0 0C       		.uleb128 0xc
 5470 01e1 03       		.uleb128 0x3
 5471 01e2 0E       		.uleb128 0xe
 5472 01e3 3A       		.uleb128 0x3a
 5473 01e4 0B       		.uleb128 0xb
 5474 01e5 3B       		.uleb128 0x3b
 5475 01e6 0B       		.uleb128 0xb
 5476 01e7 27       		.uleb128 0x27
 5477 01e8 0C       		.uleb128 0xc
 5478 01e9 11       		.uleb128 0x11
 5479 01ea 01       		.uleb128 0x1
 5480 01eb 12       		.uleb128 0x12
 5481 01ec 01       		.uleb128 0x1
 5482 01ed 40       		.uleb128 0x40
 5483 01ee 06       		.uleb128 0x6
 5484 01ef 00       		.byte	0
 5485 01f0 00       		.byte	0
 5486 01f1 28       		.uleb128 0x28
 5487 01f2 2E       		.uleb128 0x2e
 5488 01f3 01       		.byte	0x1
 5489 01f4 3F       		.uleb128 0x3f
 5490 01f5 0C       		.uleb128 0xc
 5491 01f6 03       		.uleb128 0x3
 5492 01f7 0E       		.uleb128 0xe
 5493 01f8 3A       		.uleb128 0x3a
 5494 01f9 0B       		.uleb128 0xb
 5495 01fa 3B       		.uleb128 0x3b
 5496 01fb 0B       		.uleb128 0xb
 5497 01fc 27       		.uleb128 0x27
 5498 01fd 0C       		.uleb128 0xc
 5499 01fe 11       		.uleb128 0x11
 5500 01ff 01       		.uleb128 0x1
 5501 0200 12       		.uleb128 0x12
 5502 0201 01       		.uleb128 0x1
 5503 0202 40       		.uleb128 0x40
 5504 0203 06       		.uleb128 0x6
 5505 0204 01       		.uleb128 0x1
ARM GAS  /tmp/cc17JTRV.s 			page 133


 5506 0205 13       		.uleb128 0x13
 5507 0206 00       		.byte	0
 5508 0207 00       		.byte	0
 5509 0208 29       		.uleb128 0x29
 5510 0209 2E       		.uleb128 0x2e
 5511 020a 01       		.byte	0x1
 5512 020b 03       		.uleb128 0x3
 5513 020c 0E       		.uleb128 0xe
 5514 020d 3A       		.uleb128 0x3a
 5515 020e 0B       		.uleb128 0xb
 5516 020f 3B       		.uleb128 0x3b
 5517 0210 0B       		.uleb128 0xb
 5518 0211 11       		.uleb128 0x11
 5519 0212 01       		.uleb128 0x1
 5520 0213 12       		.uleb128 0x12
 5521 0214 01       		.uleb128 0x1
 5522 0215 40       		.uleb128 0x40
 5523 0216 06       		.uleb128 0x6
 5524 0217 01       		.uleb128 0x1
 5525 0218 13       		.uleb128 0x13
 5526 0219 00       		.byte	0
 5527 021a 00       		.byte	0
 5528 021b 2A       		.uleb128 0x2a
 5529 021c 34       		.uleb128 0x34
 5530 021d 00       		.byte	0
 5531 021e 03       		.uleb128 0x3
 5532 021f 08       		.uleb128 0x8
 5533 0220 3A       		.uleb128 0x3a
 5534 0221 0B       		.uleb128 0xb
 5535 0222 3B       		.uleb128 0x3b
 5536 0223 0B       		.uleb128 0xb
 5537 0224 49       		.uleb128 0x49
 5538 0225 13       		.uleb128 0x13
 5539 0226 02       		.uleb128 0x2
 5540 0227 0A       		.uleb128 0xa
 5541 0228 00       		.byte	0
 5542 0229 00       		.byte	0
 5543 022a 2B       		.uleb128 0x2b
 5544 022b 34       		.uleb128 0x34
 5545 022c 00       		.byte	0
 5546 022d 03       		.uleb128 0x3
 5547 022e 0E       		.uleb128 0xe
 5548 022f 49       		.uleb128 0x49
 5549 0230 13       		.uleb128 0x13
 5550 0231 34       		.uleb128 0x34
 5551 0232 0C       		.uleb128 0xc
 5552 0233 00       		.byte	0
 5553 0234 00       		.byte	0
 5554 0235 2C       		.uleb128 0x2c
 5555 0236 2E       		.uleb128 0x2e
 5556 0237 01       		.byte	0x1
 5557 0238 03       		.uleb128 0x3
 5558 0239 0E       		.uleb128 0xe
 5559 023a 3A       		.uleb128 0x3a
 5560 023b 0B       		.uleb128 0xb
 5561 023c 3B       		.uleb128 0x3b
 5562 023d 0B       		.uleb128 0xb
ARM GAS  /tmp/cc17JTRV.s 			page 134


 5563 023e 27       		.uleb128 0x27
 5564 023f 0C       		.uleb128 0xc
 5565 0240 11       		.uleb128 0x11
 5566 0241 01       		.uleb128 0x1
 5567 0242 12       		.uleb128 0x12
 5568 0243 01       		.uleb128 0x1
 5569 0244 40       		.uleb128 0x40
 5570 0245 06       		.uleb128 0x6
 5571 0246 01       		.uleb128 0x1
 5572 0247 13       		.uleb128 0x13
 5573 0248 00       		.byte	0
 5574 0249 00       		.byte	0
 5575 024a 2D       		.uleb128 0x2d
 5576 024b 05       		.uleb128 0x5
 5577 024c 00       		.byte	0
 5578 024d 03       		.uleb128 0x3
 5579 024e 08       		.uleb128 0x8
 5580 024f 3A       		.uleb128 0x3a
 5581 0250 0B       		.uleb128 0xb
 5582 0251 3B       		.uleb128 0x3b
 5583 0252 0B       		.uleb128 0xb
 5584 0253 49       		.uleb128 0x49
 5585 0254 13       		.uleb128 0x13
 5586 0255 02       		.uleb128 0x2
 5587 0256 0A       		.uleb128 0xa
 5588 0257 00       		.byte	0
 5589 0258 00       		.byte	0
 5590 0259 2E       		.uleb128 0x2e
 5591 025a 2E       		.uleb128 0x2e
 5592 025b 01       		.byte	0x1
 5593 025c 03       		.uleb128 0x3
 5594 025d 08       		.uleb128 0x8
 5595 025e 3A       		.uleb128 0x3a
 5596 025f 0B       		.uleb128 0xb
 5597 0260 3B       		.uleb128 0x3b
 5598 0261 0B       		.uleb128 0xb
 5599 0262 11       		.uleb128 0x11
 5600 0263 01       		.uleb128 0x1
 5601 0264 12       		.uleb128 0x12
 5602 0265 01       		.uleb128 0x1
 5603 0266 40       		.uleb128 0x40
 5604 0267 06       		.uleb128 0x6
 5605 0268 01       		.uleb128 0x1
 5606 0269 13       		.uleb128 0x13
 5607 026a 00       		.byte	0
 5608 026b 00       		.byte	0
 5609 026c 2F       		.uleb128 0x2f
 5610 026d 34       		.uleb128 0x34
 5611 026e 00       		.byte	0
 5612 026f 03       		.uleb128 0x3
 5613 0270 0E       		.uleb128 0xe
 5614 0271 3A       		.uleb128 0x3a
 5615 0272 0B       		.uleb128 0xb
 5616 0273 3B       		.uleb128 0x3b
 5617 0274 05       		.uleb128 0x5
 5618 0275 49       		.uleb128 0x49
 5619 0276 13       		.uleb128 0x13
ARM GAS  /tmp/cc17JTRV.s 			page 135


 5620 0277 3F       		.uleb128 0x3f
 5621 0278 0C       		.uleb128 0xc
 5622 0279 3C       		.uleb128 0x3c
 5623 027a 0C       		.uleb128 0xc
 5624 027b 00       		.byte	0
 5625 027c 00       		.byte	0
 5626 027d 30       		.uleb128 0x30
 5627 027e 34       		.uleb128 0x34
 5628 027f 00       		.byte	0
 5629 0280 03       		.uleb128 0x3
 5630 0281 0E       		.uleb128 0xe
 5631 0282 3A       		.uleb128 0x3a
 5632 0283 0B       		.uleb128 0xb
 5633 0284 3B       		.uleb128 0x3b
 5634 0285 0B       		.uleb128 0xb
 5635 0286 49       		.uleb128 0x49
 5636 0287 13       		.uleb128 0x13
 5637 0288 3F       		.uleb128 0x3f
 5638 0289 0C       		.uleb128 0xc
 5639 028a 3C       		.uleb128 0x3c
 5640 028b 0C       		.uleb128 0xc
 5641 028c 00       		.byte	0
 5642 028d 00       		.byte	0
 5643 028e 31       		.uleb128 0x31
 5644 028f 34       		.uleb128 0x34
 5645 0290 00       		.byte	0
 5646 0291 03       		.uleb128 0x3
 5647 0292 0E       		.uleb128 0xe
 5648 0293 3A       		.uleb128 0x3a
 5649 0294 0B       		.uleb128 0xb
 5650 0295 3B       		.uleb128 0x3b
 5651 0296 0B       		.uleb128 0xb
 5652 0297 49       		.uleb128 0x49
 5653 0298 13       		.uleb128 0x13
 5654 0299 3F       		.uleb128 0x3f
 5655 029a 0C       		.uleb128 0xc
 5656 029b 02       		.uleb128 0x2
 5657 029c 0A       		.uleb128 0xa
 5658 029d 00       		.byte	0
 5659 029e 00       		.byte	0
 5660 029f 00       		.byte	0
 5661              		.section	.debug_loc,"",%progbits
 5662              	.Ldebug_loc0:
 5663              	.LLST0:
 5664 0000 00000000 		.4byte	.LFB14
 5665 0004 02000000 		.4byte	.LCFI0
 5666 0008 0200     		.2byte	0x2
 5667 000a 7D       		.byte	0x7d
 5668 000b 00       		.sleb128 0
 5669 000c 02000000 		.4byte	.LCFI0
 5670 0010 04000000 		.4byte	.LCFI1
 5671 0014 0200     		.2byte	0x2
 5672 0016 7D       		.byte	0x7d
 5673 0017 04       		.sleb128 4
 5674 0018 04000000 		.4byte	.LCFI1
 5675 001c 06000000 		.4byte	.LCFI2
 5676 0020 0200     		.2byte	0x2
ARM GAS  /tmp/cc17JTRV.s 			page 136


 5677 0022 7D       		.byte	0x7d
 5678 0023 10       		.sleb128 16
 5679 0024 06000000 		.4byte	.LCFI2
 5680 0028 36000000 		.4byte	.LFE14
 5681 002c 0200     		.2byte	0x2
 5682 002e 77       		.byte	0x77
 5683 002f 10       		.sleb128 16
 5684 0030 00000000 		.4byte	0
 5685 0034 00000000 		.4byte	0
 5686              	.LLST1:
 5687 0038 00000000 		.4byte	.LFB20
 5688 003c 02000000 		.4byte	.LCFI3
 5689 0040 0200     		.2byte	0x2
 5690 0042 7D       		.byte	0x7d
 5691 0043 00       		.sleb128 0
 5692 0044 02000000 		.4byte	.LCFI3
 5693 0048 04000000 		.4byte	.LCFI4
 5694 004c 0200     		.2byte	0x2
 5695 004e 7D       		.byte	0x7d
 5696 004f 04       		.sleb128 4
 5697 0050 04000000 		.4byte	.LCFI4
 5698 0054 06000000 		.4byte	.LCFI5
 5699 0058 0200     		.2byte	0x2
 5700 005a 7D       		.byte	0x7d
 5701 005b 10       		.sleb128 16
 5702 005c 06000000 		.4byte	.LCFI5
 5703 0060 5C000000 		.4byte	.LFE20
 5704 0064 0200     		.2byte	0x2
 5705 0066 77       		.byte	0x77
 5706 0067 10       		.sleb128 16
 5707 0068 00000000 		.4byte	0
 5708 006c 00000000 		.4byte	0
 5709              	.LLST2:
 5710 0070 00000000 		.4byte	.LFB35
 5711 0074 02000000 		.4byte	.LCFI6
 5712 0078 0200     		.2byte	0x2
 5713 007a 7D       		.byte	0x7d
 5714 007b 00       		.sleb128 0
 5715 007c 02000000 		.4byte	.LCFI6
 5716 0080 04000000 		.4byte	.LCFI7
 5717 0084 0200     		.2byte	0x2
 5718 0086 7D       		.byte	0x7d
 5719 0087 08       		.sleb128 8
 5720 0088 04000000 		.4byte	.LCFI7
 5721 008c 06000000 		.4byte	.LCFI8
 5722 0090 0200     		.2byte	0x2
 5723 0092 7D       		.byte	0x7d
 5724 0093 10       		.sleb128 16
 5725 0094 06000000 		.4byte	.LCFI8
 5726 0098 6C020000 		.4byte	.LFE35
 5727 009c 0200     		.2byte	0x2
 5728 009e 77       		.byte	0x77
 5729 009f 10       		.sleb128 16
 5730 00a0 00000000 		.4byte	0
 5731 00a4 00000000 		.4byte	0
 5732              	.LLST3:
 5733 00a8 00000000 		.4byte	.LFB36
ARM GAS  /tmp/cc17JTRV.s 			page 137


 5734 00ac 02000000 		.4byte	.LCFI9
 5735 00b0 0200     		.2byte	0x2
 5736 00b2 7D       		.byte	0x7d
 5737 00b3 00       		.sleb128 0
 5738 00b4 02000000 		.4byte	.LCFI9
 5739 00b8 04000000 		.4byte	.LCFI10
 5740 00bc 0200     		.2byte	0x2
 5741 00be 7D       		.byte	0x7d
 5742 00bf 08       		.sleb128 8
 5743 00c0 04000000 		.4byte	.LCFI10
 5744 00c4 2C000000 		.4byte	.LFE36
 5745 00c8 0200     		.2byte	0x2
 5746 00ca 77       		.byte	0x77
 5747 00cb 08       		.sleb128 8
 5748 00cc 00000000 		.4byte	0
 5749 00d0 00000000 		.4byte	0
 5750              	.LLST4:
 5751 00d4 00000000 		.4byte	.LFB37
 5752 00d8 02000000 		.4byte	.LCFI11
 5753 00dc 0200     		.2byte	0x2
 5754 00de 7D       		.byte	0x7d
 5755 00df 00       		.sleb128 0
 5756 00e0 02000000 		.4byte	.LCFI11
 5757 00e4 04000000 		.4byte	.LCFI12
 5758 00e8 0200     		.2byte	0x2
 5759 00ea 7D       		.byte	0x7d
 5760 00eb 08       		.sleb128 8
 5761 00ec 04000000 		.4byte	.LCFI12
 5762 00f0 06000000 		.4byte	.LCFI13
 5763 00f4 0200     		.2byte	0x2
 5764 00f6 7D       		.byte	0x7d
 5765 00f7 10       		.sleb128 16
 5766 00f8 06000000 		.4byte	.LCFI13
 5767 00fc 42010000 		.4byte	.LFE37
 5768 0100 0200     		.2byte	0x2
 5769 0102 77       		.byte	0x77
 5770 0103 10       		.sleb128 16
 5771 0104 00000000 		.4byte	0
 5772 0108 00000000 		.4byte	0
 5773              	.LLST5:
 5774 010c 00000000 		.4byte	.LFB38
 5775 0110 02000000 		.4byte	.LCFI14
 5776 0114 0200     		.2byte	0x2
 5777 0116 7D       		.byte	0x7d
 5778 0117 00       		.sleb128 0
 5779 0118 02000000 		.4byte	.LCFI14
 5780 011c 04000000 		.4byte	.LCFI15
 5781 0120 0200     		.2byte	0x2
 5782 0122 7D       		.byte	0x7d
 5783 0123 0C       		.sleb128 12
 5784 0124 04000000 		.4byte	.LCFI15
 5785 0128 06000000 		.4byte	.LCFI16
 5786 012c 0200     		.2byte	0x2
 5787 012e 7D       		.byte	0x7d
 5788 012f 30       		.sleb128 48
 5789 0130 06000000 		.4byte	.LCFI16
 5790 0134 4C020000 		.4byte	.LFE38
ARM GAS  /tmp/cc17JTRV.s 			page 138


 5791 0138 0200     		.2byte	0x2
 5792 013a 77       		.byte	0x77
 5793 013b 18       		.sleb128 24
 5794 013c 00000000 		.4byte	0
 5795 0140 00000000 		.4byte	0
 5796              	.LLST6:
 5797 0144 00000000 		.4byte	.LFB39
 5798 0148 02000000 		.4byte	.LCFI17
 5799 014c 0200     		.2byte	0x2
 5800 014e 7D       		.byte	0x7d
 5801 014f 00       		.sleb128 0
 5802 0150 02000000 		.4byte	.LCFI17
 5803 0154 04000000 		.4byte	.LCFI18
 5804 0158 0200     		.2byte	0x2
 5805 015a 7D       		.byte	0x7d
 5806 015b 08       		.sleb128 8
 5807 015c 04000000 		.4byte	.LCFI18
 5808 0160 06000000 		.4byte	.LCFI19
 5809 0164 0200     		.2byte	0x2
 5810 0166 7D       		.byte	0x7d
 5811 0167 10       		.sleb128 16
 5812 0168 06000000 		.4byte	.LCFI19
 5813 016c AA010000 		.4byte	.LFE39
 5814 0170 0200     		.2byte	0x2
 5815 0172 77       		.byte	0x77
 5816 0173 10       		.sleb128 16
 5817 0174 00000000 		.4byte	0
 5818 0178 00000000 		.4byte	0
 5819              	.LLST7:
 5820 017c 00000000 		.4byte	.LFB40
 5821 0180 02000000 		.4byte	.LCFI20
 5822 0184 0200     		.2byte	0x2
 5823 0186 7D       		.byte	0x7d
 5824 0187 00       		.sleb128 0
 5825 0188 02000000 		.4byte	.LCFI20
 5826 018c 04000000 		.4byte	.LCFI21
 5827 0190 0200     		.2byte	0x2
 5828 0192 7D       		.byte	0x7d
 5829 0193 0C       		.sleb128 12
 5830 0194 04000000 		.4byte	.LCFI21
 5831 0198 06000000 		.4byte	.LCFI22
 5832 019c 0300     		.2byte	0x3
 5833 019e 7D       		.byte	0x7d
 5834 019f D000     		.sleb128 80
 5835 01a1 06000000 		.4byte	.LCFI22
 5836 01a5 D6030000 		.4byte	.LFE40
 5837 01a9 0300     		.2byte	0x3
 5838 01ab 77       		.byte	0x77
 5839 01ac C800     		.sleb128 72
 5840 01ae 00000000 		.4byte	0
 5841 01b2 00000000 		.4byte	0
 5842              		.section	.debug_aranges,"",%progbits
 5843 0000 54000000 		.4byte	0x54
 5844 0004 0200     		.2byte	0x2
 5845 0006 00000000 		.4byte	.Ldebug_info0
 5846 000a 04       		.byte	0x4
 5847 000b 00       		.byte	0
ARM GAS  /tmp/cc17JTRV.s 			page 139


 5848 000c 0000     		.2byte	0
 5849 000e 0000     		.2byte	0
 5850 0010 00000000 		.4byte	.LFB14
 5851 0014 36000000 		.4byte	.LFE14-.LFB14
 5852 0018 00000000 		.4byte	.LFB20
 5853 001c 5C000000 		.4byte	.LFE20-.LFB20
 5854 0020 00000000 		.4byte	.LFB35
 5855 0024 6C020000 		.4byte	.LFE35-.LFB35
 5856 0028 00000000 		.4byte	.LFB36
 5857 002c 2C000000 		.4byte	.LFE36-.LFB36
 5858 0030 00000000 		.4byte	.LFB37
 5859 0034 42010000 		.4byte	.LFE37-.LFB37
 5860 0038 00000000 		.4byte	.LFB38
 5861 003c 4C020000 		.4byte	.LFE38-.LFB38
 5862 0040 00000000 		.4byte	.LFB39
 5863 0044 AA010000 		.4byte	.LFE39-.LFB39
 5864 0048 00000000 		.4byte	.LFB40
 5865 004c D6030000 		.4byte	.LFE40-.LFB40
 5866 0050 00000000 		.4byte	0
 5867 0054 00000000 		.4byte	0
 5868              		.section	.debug_ranges,"",%progbits
 5869              	.Ldebug_ranges0:
 5870 0000 00000000 		.4byte	.LFB14
 5871 0004 36000000 		.4byte	.LFE14
 5872 0008 00000000 		.4byte	.LFB20
 5873 000c 5C000000 		.4byte	.LFE20
 5874 0010 00000000 		.4byte	.LFB35
 5875 0014 6C020000 		.4byte	.LFE35
 5876 0018 00000000 		.4byte	.LFB36
 5877 001c 2C000000 		.4byte	.LFE36
 5878 0020 00000000 		.4byte	.LFB37
 5879 0024 42010000 		.4byte	.LFE37
 5880 0028 00000000 		.4byte	.LFB38
 5881 002c 4C020000 		.4byte	.LFE38
 5882 0030 00000000 		.4byte	.LFB39
 5883 0034 AA010000 		.4byte	.LFE39
 5884 0038 00000000 		.4byte	.LFB40
 5885 003c D6030000 		.4byte	.LFE40
 5886 0040 00000000 		.4byte	0
 5887 0044 00000000 		.4byte	0
 5888              		.section	.debug_line,"",%progbits
 5889              	.Ldebug_line0:
 5890 0000 49030000 		.section	.debug_str,"MS",%progbits,1
 5890      02009201 
 5890      00000201 
 5890      FB0E0D00 
 5890      01010101 
 5891              	.LASF161:
 5892 0000 52534552 		.ascii	"RSERVED1\000"
 5892      56454431 
 5892      00
 5893              	.LASF317:
 5894 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 5894      5F456E61 
 5894      626C6549 
 5894      525100
 5895              	.LASF147:
ARM GAS  /tmp/cc17JTRV.s 			page 140


 5896 0018 5443325F 		.ascii	"TC2_IRQn\000"
 5896      4952516E 
 5896      00
 5897              	.LASF270:
 5898 0021 50574D5F 		.ascii	"PWM_RNPR\000"
 5898      524E5052 
 5898      00
 5899              	.LASF14:
 5900 002a 5F5F7661 		.ascii	"__value\000"
 5900      6C756500 
 5901              	.LASF66:
 5902 0032 5F5F7366 		.ascii	"__sf\000"
 5902      00
 5903              	.LASF325:
 5904 0037 64757479 		.ascii	"duty\000"
 5904      00
 5905              	.LASF75:
 5906 003c 5F726561 		.ascii	"_read\000"
 5906      6400
 5907              	.LASF170:
 5908 0042 4E564943 		.ascii	"NVIC_Type\000"
 5908      5F547970 
 5908      6500
 5909              	.LASF239:
 5910 004c 50574D5F 		.ascii	"PWM_IER1\000"
 5910      49455231 
 5910      00
 5911              	.LASF76:
 5912 0055 5F777269 		.ascii	"_write\000"
 5912      746500
 5913              	.LASF62:
 5914 005c 5F617363 		.ascii	"_asctime_buf\000"
 5914      74696D65 
 5914      5F627566 
 5914      00
 5915              	.LASF58:
 5916 0069 5F637674 		.ascii	"_cvtlen\000"
 5916      6C656E00 
 5917              	.LASF265:
 5918 0071 50574D5F 		.ascii	"PWM_WPSR\000"
 5918      57505352 
 5918      00
 5919              	.LASF200:
 5920 007a 4144435F 		.ascii	"ADC_EMR\000"
 5920      454D5200 
 5921              	.LASF197:
 5922 0082 4144435F 		.ascii	"ADC_ISR\000"
 5922      49535200 
 5923              	.LASF334:
 5924 008a 5F737461 		.ascii	"_state\000"
 5924      746500
 5925              	.LASF24:
 5926 0091 5F5F746D 		.ascii	"__tm\000"
 5926      00
 5927              	.LASF112:
 5928 0096 5F776373 		.ascii	"_wcsrtombs_state\000"
 5928      72746F6D 
ARM GAS  /tmp/cc17JTRV.s 			page 141


 5928      62735F73 
 5928      74617465 
 5928      00
 5929              	.LASF80:
 5930 00a7 5F6E6275 		.ascii	"_nbuf\000"
 5930      6600
 5931              	.LASF25:
 5932 00ad 5F5F746D 		.ascii	"__tm_sec\000"
 5932      5F736563 
 5932      00
 5933              	.LASF106:
 5934 00b6 5F6C3634 		.ascii	"_l64a_buf\000"
 5934      615F6275 
 5934      6600
 5935              	.LASF173:
 5936 00c0 56544F52 		.ascii	"VTOR\000"
 5936      00
 5937              	.LASF269:
 5938 00c5 50574D5F 		.ascii	"PWM_TCR\000"
 5938      54435200 
 5939              	.LASF327:
 5940 00cd 73746174 		.ascii	"state\000"
 5940      6500
 5941              	.LASF83:
 5942 00d3 5F6C6F63 		.ascii	"_lock\000"
 5942      6B00
 5943              	.LASF259:
 5944 00d9 50574D5F 		.ascii	"PWM_FCR\000"
 5944      46435200 
 5945              	.LASF299:
 5946 00e1 54435F46 		.ascii	"TC_FMR\000"
 5946      4D5200
 5947              	.LASF205:
 5948 00e8 52657365 		.ascii	"Reserved3\000"
 5948      72766564 
 5948      3300
 5949              	.LASF278:
 5950 00f2 52657365 		.ascii	"Reserved7\000"
 5950      72766564 
 5950      3700
 5951              	.LASF93:
 5952 00fc 5F6D756C 		.ascii	"_mult\000"
 5952      7400
 5953              	.LASF211:
 5954 0102 4144435F 		.ascii	"ADC_RPR\000"
 5954      52505200 
 5955              	.LASF126:
 5956 010a 52535443 		.ascii	"RSTC_IRQn\000"
 5956      5F495251 
 5956      6E00
 5957              	.LASF215:
 5958 0114 4144435F 		.ascii	"ADC_RNPR\000"
 5958      524E5052 
 5958      00
 5959              	.LASF164:
 5960 011d 49435052 		.ascii	"ICPR\000"
 5960      00
ARM GAS  /tmp/cc17JTRV.s 			page 142


 5961              	.LASF297:
 5962 0122 54435F51 		.ascii	"TC_QIMR\000"
 5962      494D5200 
 5963              	.LASF217:
 5964 012a 4144435F 		.ascii	"ADC_TNPR\000"
 5964      544E5052 
 5964      00
 5965              	.LASF271:
 5966 0133 50574D5F 		.ascii	"PWM_RNCR\000"
 5966      524E4352 
 5966      00
 5967              	.LASF11:
 5968 013c 5F5F7763 		.ascii	"__wch\000"
 5968      6800
 5969              	.LASF292:
 5970 0142 54435F43 		.ascii	"TC_CHANNEL\000"
 5970      48414E4E 
 5970      454C00
 5971              	.LASF209:
 5972 014d 4144435F 		.ascii	"ADC_WPSR\000"
 5972      57505352 
 5972      00
 5973              	.LASF71:
 5974 0156 5F66696C 		.ascii	"_file\000"
 5974      6500
 5975              	.LASF34:
 5976 015c 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5976      65786974 
 5976      5F617267 
 5976      7300
 5977              	.LASF174:
 5978 016a 41495243 		.ascii	"AIRCR\000"
 5978      5200
 5979              	.LASF314:
 5980 0170 74726973 		.ascii	"tristate\000"
 5980      74617465 
 5980      00
 5981              	.LASF338:
 5982 0179 72656C65 		.ascii	"releasetime\000"
 5982      61736574 
 5982      696D6500 
 5983              	.LASF154:
 5984 0185 43524343 		.ascii	"CRCCU_IRQn\000"
 5984      555F4952 
 5984      516E00
 5985              	.LASF306:
 5986 0190 52414D50 		.ascii	"RAMP\000"
 5986      00
 5987              	.LASF280:
 5988 0195 54435F43 		.ascii	"TC_CCR\000"
 5988      435200
 5989              	.LASF108:
 5990 019c 5F6D6272 		.ascii	"_mbrlen_state\000"
 5990      6C656E5F 
 5990      73746174 
 5990      6500
 5991              	.LASF7:
ARM GAS  /tmp/cc17JTRV.s 			page 143


 5992 01aa 6C6F6E67 		.ascii	"long int\000"
 5992      20696E74 
 5992      00
 5993              	.LASF332:
 5994 01b3 5F696D70 		.ascii	"_impure_ptr\000"
 5994      7572655F 
 5994      70747200 
 5995              	.LASF98:
 5996 01bf 5F726573 		.ascii	"_result_k\000"
 5996      756C745F 
 5996      6B00
 5997              	.LASF226:
 5998 01c9 50574D5F 		.ascii	"PWM_CCNT\000"
 5998      43434E54 
 5998      00
 5999              	.LASF45:
 6000 01d2 5F73697A 		.ascii	"_size\000"
 6000      6500
 6001              	.LASF171:
 6002 01d8 43505549 		.ascii	"CPUID\000"
 6002      4400
 6003              	.LASF61:
 6004 01de 5F6C6F63 		.ascii	"_localtime_buf\000"
 6004      616C7469 
 6004      6D655F62 
 6004      756600
 6005              	.LASF213:
 6006 01ed 4144435F 		.ascii	"ADC_TPR\000"
 6006      54505200 
 6007              	.LASF321:
 6008 01f5 6D61696E 		.ascii	"main\000"
 6008      00
 6009              	.LASF319:
 6010 01fa 4952516E 		.ascii	"IRQn\000"
 6010      00
 6011              	.LASF150:
 6012 01ff 5443355F 		.ascii	"TC5_IRQn\000"
 6012      4952516E 
 6012      00
 6013              	.LASF29:
 6014 0208 5F5F746D 		.ascii	"__tm_mon\000"
 6014      5F6D6F6E 
 6014      00
 6015              	.LASF318:
 6016 0211 4E564943 		.ascii	"NVIC_SetPriority\000"
 6016      5F536574 
 6016      5072696F 
 6016      72697479 
 6016      00
 6017              	.LASF101:
 6018 0222 5F6D6973 		.ascii	"_misc_reent\000"
 6018      635F7265 
 6018      656E7400 
 6019              	.LASF124:
 6020 022e 53797354 		.ascii	"SysTick_IRQn\000"
 6020      69636B5F 
 6020      4952516E 
ARM GAS  /tmp/cc17JTRV.s 			page 144


 6020      00
 6021              	.LASF54:
 6022 023b 5F637572 		.ascii	"_current_category\000"
 6022      72656E74 
 6022      5F636174 
 6022      65676F72 
 6022      7900
 6023              	.LASF172:
 6024 024d 49435352 		.ascii	"ICSR\000"
 6024      00
 6025              	.LASF0:
 6026 0252 7369676E 		.ascii	"signed char\000"
 6026      65642063 
 6026      68617200 
 6027              	.LASF113:
 6028 025e 75696E74 		.ascii	"uint8_t\000"
 6028      385F7400 
 6029              	.LASF252:
 6030 0266 50574D5F 		.ascii	"PWM_OS\000"
 6030      4F5300
 6031              	.LASF323:
 6032 026d 74696D65 		.ascii	"timestamp\000"
 6032      7374616D 
 6032      7000
 6033              	.LASF291:
 6034 0277 54634368 		.ascii	"TcChannel\000"
 6034      616E6E65 
 6034      6C00
 6035              	.LASF263:
 6036 0281 50574D5F 		.ascii	"PWM_SMMR\000"
 6036      534D4D52 
 6036      00
 6037              	.LASF159:
 6038 028a 52455345 		.ascii	"RESERVED0\000"
 6038      52564544 
 6038      3000
 6039              	.LASF1:
 6040 0294 756E7369 		.ascii	"unsigned char\000"
 6040      676E6564 
 6040      20636861 
 6040      7200
 6041              	.LASF165:
 6042 02a2 52455345 		.ascii	"RESERVED3\000"
 6042      52564544 
 6042      3300
 6043              	.LASF167:
 6044 02ac 52455345 		.ascii	"RESERVED4\000"
 6044      52564544 
 6044      3400
 6045              	.LASF168:
 6046 02b6 52455345 		.ascii	"RESERVED5\000"
 6046      52564544 
 6046      3500
 6047              	.LASF261:
 6048 02c0 50574D5F 		.ascii	"PWM_FPE\000"
 6048      46504500 
 6049              	.LASF236:
ARM GAS  /tmp/cc17JTRV.s 			page 145


 6050 02c8 50574D5F 		.ascii	"PWM_ENA\000"
 6050      454E4100 
 6051              	.LASF166:
 6052 02d0 49414252 		.ascii	"IABR\000"
 6052      00
 6053              	.LASF309:
 6054 02d5 6374726C 		.ascii	"ctrl\000"
 6054      00
 6055              	.LASF344:
 6056 02da 5F5F4655 		.ascii	"__FUNCTION__\000"
 6056      4E435449 
 6056      4F4E5F5F 
 6056      00
 6057              	.LASF46:
 6058 02e7 5F726565 		.ascii	"_reent\000"
 6058      6E7400
 6059              	.LASF260:
 6060 02ee 50574D5F 		.ascii	"PWM_FPV\000"
 6060      46505600 
 6061              	.LASF301:
 6062 02f6 5744545F 		.ascii	"WDT_CR\000"
 6062      435200
 6063              	.LASF163:
 6064 02fd 52455345 		.ascii	"RESERVED2\000"
 6064      52564544 
 6064      3200
 6065              	.LASF120:
 6066 0307 55736167 		.ascii	"UsageFault_IRQn\000"
 6066      65466175 
 6066      6C745F49 
 6066      52516E00 
 6067              	.LASF284:
 6068 0317 54435F52 		.ascii	"TC_RA\000"
 6068      4100
 6069              	.LASF285:
 6070 031d 54435F52 		.ascii	"TC_RB\000"
 6070      4200
 6071              	.LASF286:
 6072 0323 54435F52 		.ascii	"TC_RC\000"
 6072      4300
 6073              	.LASF86:
 6074 0329 63686172 		.ascii	"char\000"
 6074      00
 6075              	.LASF41:
 6076 032e 5F666E73 		.ascii	"_fns\000"
 6076      00
 6077              	.LASF313:
 6078 0333 6F757470 		.ascii	"output\000"
 6078      757400
 6079              	.LASF184:
 6080 033a 5343425F 		.ascii	"SCB_Type\000"
 6080      54797065 
 6080      00
 6081              	.LASF294:
 6082 0343 54435F42 		.ascii	"TC_BMR\000"
 6082      4D5200
 6083              	.LASF78:
ARM GAS  /tmp/cc17JTRV.s 			page 146


 6084 034a 5F636C6F 		.ascii	"_close\000"
 6084      736500
 6085              	.LASF178:
 6086 0351 44465352 		.ascii	"DFSR\000"
 6086      00
 6087              	.LASF134:
 6088 0356 534D435F 		.ascii	"SMC_IRQn\000"
 6088      4952516E 
 6088      00
 6089              	.LASF272:
 6090 035f 50574D5F 		.ascii	"PWM_TNPR\000"
 6090      544E5052 
 6090      00
 6091              	.LASF251:
 6092 0368 50574D5F 		.ascii	"PWM_OOV\000"
 6092      4F4F5600 
 6093              	.LASF298:
 6094 0370 54435F51 		.ascii	"TC_QISR\000"
 6094      49535200 
 6095              	.LASF229:
 6096 0378 50776D43 		.ascii	"PwmCh_num\000"
 6096      685F6E75 
 6096      6D00
 6097              	.LASF48:
 6098 0382 5F737464 		.ascii	"_stdin\000"
 6098      696E00
 6099              	.LASF311:
 6100 0389 72536C6F 		.ascii	"rSlope\000"
 6100      706500
 6101              	.LASF337:
 6102 0390 72747269 		.ascii	"rtrip\000"
 6102      7000
 6103              	.LASF177:
 6104 0396 48465352 		.ascii	"HFSR\000"
 6104      00
 6105              	.LASF246:
 6106 039b 50574D5F 		.ascii	"PWM_SCUPUPD\000"
 6106      53435550 
 6106      55504400 
 6107              	.LASF287:
 6108 03a7 54435F53 		.ascii	"TC_SR\000"
 6108      5200
 6109              	.LASF275:
 6110 03ad 50574D5F 		.ascii	"PWM_PTSR\000"
 6110      50545352 
 6110      00
 6111              	.LASF241:
 6112 03b6 50574D5F 		.ascii	"PWM_IMR1\000"
 6112      494D5231 
 6112      00
 6113              	.LASF249:
 6114 03bf 50574D5F 		.ascii	"PWM_IMR2\000"
 6114      494D5232 
 6114      00
 6115              	.LASF153:
 6116 03c8 50574D5F 		.ascii	"PWM_IRQn\000"
 6116      4952516E 
ARM GAS  /tmp/cc17JTRV.s 			page 147


 6116      00
 6117              	.LASF162:
 6118 03d1 49535052 		.ascii	"ISPR\000"
 6118      00
 6119              	.LASF268:
 6120 03d6 50574D5F 		.ascii	"PWM_TPR\000"
 6120      54505200 
 6121              	.LASF316:
 6122 03de 696E7075 		.ascii	"input\000"
 6122      7400
 6123              	.LASF212:
 6124 03e4 4144435F 		.ascii	"ADC_RCR\000"
 6124      52435200 
 6125              	.LASF238:
 6126 03ec 50574D5F 		.ascii	"PWM_SR\000"
 6126      535200
 6127              	.LASF175:
 6128 03f3 53484353 		.ascii	"SHCSR\000"
 6128      5200
 6129              	.LASF204:
 6130 03f9 4144435F 		.ascii	"ADC_CDR\000"
 6130      43445200 
 6131              	.LASF169:
 6132 0401 53544952 		.ascii	"STIR\000"
 6132      00
 6133              	.LASF155:
 6134 0406 4143435F 		.ascii	"ACC_IRQn\000"
 6134      4952516E 
 6134      00
 6135              	.LASF74:
 6136 040f 5F636F6F 		.ascii	"_cookie\000"
 6136      6B696500 
 6137              	.LASF22:
 6138 0417 5F776473 		.ascii	"_wds\000"
 6138      00
 6139              	.LASF130:
 6140 041c 504D435F 		.ascii	"PMC_IRQn\000"
 6140      4952516E 
 6140      00
 6141              	.LASF131:
 6142 0425 4546435F 		.ascii	"EFC_IRQn\000"
 6142      4952516E 
 6142      00
 6143              	.LASF63:
 6144 042e 5F736967 		.ascii	"_sig_func\000"
 6144      5F66756E 
 6144      6300
 6145              	.LASF82:
 6146 0438 5F6F6666 		.ascii	"_offset\000"
 6146      73657400 
 6147              	.LASF59:
 6148 0440 5F637674 		.ascii	"_cvtbuf\000"
 6148      62756600 
 6149              	.LASF125:
 6150 0448 53555043 		.ascii	"SUPC_IRQn\000"
 6150      5F495251 
 6150      6E00
ARM GAS  /tmp/cc17JTRV.s 			page 148


 6151              	.LASF289:
 6152 0452 54435F49 		.ascii	"TC_IDR\000"
 6152      445200
 6153              	.LASF146:
 6154 0459 5443315F 		.ascii	"TC1_IRQn\000"
 6154      4952516E 
 6154      00
 6155              	.LASF137:
 6156 0462 50494F43 		.ascii	"PIOC_IRQn\000"
 6156      5F495251 
 6156      6E00
 6157              	.LASF322:
 6158 046c 4144435F 		.ascii	"ADC_IrqHandler\000"
 6158      49727148 
 6158      616E646C 
 6158      657200
 6159              	.LASF220:
 6160 047b 4144435F 		.ascii	"ADC_PTSR\000"
 6160      50545352 
 6160      00
 6161              	.LASF128:
 6162 0484 5254545F 		.ascii	"RTT_IRQn\000"
 6162      4952516E 
 6162      00
 6163              	.LASF156:
 6164 048d 5544505F 		.ascii	"UDP_IRQn\000"
 6164      4952516E 
 6164      00
 6165              	.LASF152:
 6166 0496 44414343 		.ascii	"DACC_IRQn\000"
 6166      5F495251 
 6166      6E00
 6167              	.LASF117:
 6168 04a0 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6168      61736B61 
 6168      626C6549 
 6168      6E745F49 
 6168      52516E00 
 6169              	.LASF257:
 6170 04b4 50574D5F 		.ascii	"PWM_FMR\000"
 6170      464D5200 
 6171              	.LASF254:
 6172 04bc 50574D5F 		.ascii	"PWM_OSC\000"
 6172      4F534300 
 6173              	.LASF191:
 6174 04c4 4144435F 		.ascii	"ADC_CHSR\000"
 6174      43485352 
 6174      00
 6175              	.LASF99:
 6176 04cd 5F703573 		.ascii	"_p5s\000"
 6176      00
 6177              	.LASF18:
 6178 04d2 6C6F6E67 		.ascii	"long unsigned int\000"
 6178      20756E73 
 6178      69676E65 
 6178      6420696E 
 6178      7400
ARM GAS  /tmp/cc17JTRV.s 			page 149


 6179              	.LASF253:
 6180 04e4 50574D5F 		.ascii	"PWM_OSS\000"
 6180      4F535300 
 6181              	.LASF231:
 6182 04ec 50574D5F 		.ascii	"PWM_CMPxVUPD\000"
 6182      434D5078 
 6182      56555044 
 6182      00
 6183              	.LASF118:
 6184 04f9 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 6184      72794D61 
 6184      6E616765 
 6184      6D656E74 
 6184      5F495251 
 6185              	.LASF288:
 6186 050f 54435F49 		.ascii	"TC_IER\000"
 6186      455200
 6187              	.LASF69:
 6188 0516 5F5F7346 		.ascii	"__sFILE\000"
 6188      494C4500 
 6189              	.LASF53:
 6190 051e 5F5F7364 		.ascii	"__sdidinit\000"
 6190      6964696E 
 6190      697400
 6191              	.LASF85:
 6192 0529 5F666C61 		.ascii	"_flags2\000"
 6192      67733200 
 6193              	.LASF273:
 6194 0531 50574D5F 		.ascii	"PWM_TNCR\000"
 6194      544E4352 
 6194      00
 6195              	.LASF157:
 6196 053a 4952516E 		.ascii	"IRQn_Type\000"
 6196      5F547970 
 6196      6500
 6197              	.LASF331:
 6198 0544 6C696E65 		.ascii	"line\000"
 6198      00
 6199              	.LASF8:
 6200 0549 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 6200      4B5F5245 
 6200      43555253 
 6200      4956455F 
 6200      5400
 6201              	.LASF47:
 6202 055b 5F657272 		.ascii	"_errno\000"
 6202      6E6F00
 6203              	.LASF202:
 6204 0562 4144435F 		.ascii	"ADC_CGR\000"
 6204      43475200 
 6205              	.LASF68:
 6206 056a 5F736967 		.ascii	"_signal_buf\000"
 6206      6E616C5F 
 6206      62756600 
 6207              	.LASF315:
 6208 0576 74726970 		.ascii	"trip\000"
 6208      00
ARM GAS  /tmp/cc17JTRV.s 			page 150


 6209              	.LASF186:
 6210 057b 4144435F 		.ascii	"ADC_MR\000"
 6210      4D5200
 6211              	.LASF193:
 6212 0582 4144435F 		.ascii	"ADC_LCDR\000"
 6212      4C434452 
 6212      00
 6213              	.LASF304:
 6214 058b 6374726C 		.ascii	"ctrlio_t\000"
 6214      696F5F74 
 6214      00
 6215              	.LASF129:
 6216 0594 5744545F 		.ascii	"WDT_IRQn\000"
 6216      4952516E 
 6216      00
 6217              	.LASF329:
 6218 059d 61726763 		.ascii	"argc\000"
 6218      00
 6219              	.LASF23:
 6220 05a2 5F426967 		.ascii	"_Bigint\000"
 6220      696E7400 
 6221              	.LASF245:
 6222 05aa 50574D5F 		.ascii	"PWM_SCUP\000"
 6222      53435550 
 6222      00
 6223              	.LASF20:
 6224 05b3 5F6D6178 		.ascii	"_maxwds\000"
 6224      77647300 
 6225              	.LASF330:
 6226 05bb 61726776 		.ascii	"argv\000"
 6226      00
 6227              	.LASF56:
 6228 05c0 5F5F636C 		.ascii	"__cleanup\000"
 6228      65616E75 
 6228      7000
 6229              	.LASF119:
 6230 05ca 42757346 		.ascii	"BusFault_IRQn\000"
 6230      61756C74 
 6230      5F495251 
 6230      6E00
 6231              	.LASF281:
 6232 05d8 54435F43 		.ascii	"TC_CMR\000"
 6232      4D5200
 6233              	.LASF64:
 6234 05df 5F617465 		.ascii	"_atexit0\000"
 6234      78697430 
 6234      00
 6235              	.LASF52:
 6236 05e8 5F656D65 		.ascii	"_emergency\000"
 6236      7267656E 
 6236      637900
 6237              	.LASF5:
 6238 05f3 6C6F6E67 		.ascii	"long long int\000"
 6238      206C6F6E 
 6238      6720696E 
 6238      7400
 6239              	.LASF267:
ARM GAS  /tmp/cc17JTRV.s 			page 151


 6240 0601 50574D5F 		.ascii	"PWM_RCR\000"
 6240      52435200 
 6241              	.LASF42:
 6242 0609 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 6242      65786974 
 6242      5F617267 
 6242      735F7074 
 6242      7200
 6243              	.LASF240:
 6244 061b 50574D5F 		.ascii	"PWM_IDR1\000"
 6244      49445231 
 6244      00
 6245              	.LASF248:
 6246 0624 50574D5F 		.ascii	"PWM_IDR2\000"
 6246      49445232 
 6246      00
 6247              	.LASF223:
 6248 062d 50574D5F 		.ascii	"PWM_CDTYUPD\000"
 6248      43445459 
 6248      55504400 
 6249              	.LASF89:
 6250 0639 5F6E696F 		.ascii	"_niobs\000"
 6250      627300
 6251              	.LASF142:
 6252 0640 54574931 		.ascii	"TWI1_IRQn\000"
 6252      5F495251 
 6252      6E00
 6253              	.LASF65:
 6254 064a 5F5F7367 		.ascii	"__sglue\000"
 6254      6C756500 
 6255              	.LASF264:
 6256 0652 50574D5F 		.ascii	"PWM_WPCR\000"
 6256      57504352 
 6256      00
 6257              	.LASF279:
 6258 065b 50574D5F 		.ascii	"PWM_CH_NUM\000"
 6258      43485F4E 
 6258      554D00
 6259              	.LASF341:
 6260 0666 6D61696E 		.ascii	"main.c\000"
 6260      2E6300
 6261              	.LASF121:
 6262 066d 53564361 		.ascii	"SVCall_IRQn\000"
 6262      6C6C5F49 
 6262      52516E00 
 6263              	.LASF57:
 6264 0679 5F67616D 		.ascii	"_gamma_signgam\000"
 6264      6D615F73 
 6264      69676E67 
 6264      616D00
 6265              	.LASF308:
 6266 0688 6374726C 		.ascii	"ctrlmode_t\000"
 6266      6D6F6465 
 6266      5F7400
 6267              	.LASF242:
 6268 0693 50574D5F 		.ascii	"PWM_ISR1\000"
 6268      49535231 
ARM GAS  /tmp/cc17JTRV.s 			page 152


 6268      00
 6269              	.LASF250:
 6270 069c 50574D5F 		.ascii	"PWM_ISR2\000"
 6270      49535232 
 6270      00
 6271              	.LASF55:
 6272 06a5 5F637572 		.ascii	"_current_locale\000"
 6272      72656E74 
 6272      5F6C6F63 
 6272      616C6500 
 6273              	.LASF100:
 6274 06b5 5F667265 		.ascii	"_freelist\000"
 6274      656C6973 
 6274      7400
 6275              	.LASF90:
 6276 06bf 5F696F62 		.ascii	"_iobs\000"
 6276      7300
 6277              	.LASF88:
 6278 06c5 5F676C75 		.ascii	"_glue\000"
 6278      6500
 6279              	.LASF333:
 6280 06cb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6280      52784275 
 6280      66666572 
 6280      00
 6281              	.LASF21:
 6282 06d8 5F736967 		.ascii	"_sign\000"
 6282      6E00
 6283              	.LASF312:
 6284 06de 5F646478 		.ascii	"_ddx\000"
 6284      00
 6285              	.LASF307:
 6286 06e3 53544F50 		.ascii	"STOP\000"
 6286      00
 6287              	.LASF195:
 6288 06e8 4144435F 		.ascii	"ADC_IDR\000"
 6288      49445200 
 6289              	.LASF222:
 6290 06f0 50574D5F 		.ascii	"PWM_CDTY\000"
 6290      43445459 
 6290      00
 6291              	.LASF4:
 6292 06f9 756E7369 		.ascii	"unsigned int\000"
 6292      676E6564 
 6292      20696E74 
 6292      00
 6293              	.LASF149:
 6294 0706 5443345F 		.ascii	"TC4_IRQn\000"
 6294      4952516E 
 6294      00
 6295              	.LASF141:
 6296 070f 54574930 		.ascii	"TWI0_IRQn\000"
 6296      5F495251 
 6296      6E00
 6297              	.LASF302:
 6298 0719 5744545F 		.ascii	"WDT_MR\000"
 6298      4D5200
ARM GAS  /tmp/cc17JTRV.s 			page 153


 6299              	.LASF111:
 6300 0720 5F776372 		.ascii	"_wcrtomb_state\000"
 6300      746F6D62 
 6300      5F737461 
 6300      746500
 6301              	.LASF28:
 6302 072f 5F5F746D 		.ascii	"__tm_mday\000"
 6302      5F6D6461 
 6302      7900
 6303              	.LASF194:
 6304 0739 4144435F 		.ascii	"ADC_IER\000"
 6304      49455200 
 6305              	.LASF79:
 6306 0741 5F756275 		.ascii	"_ubuf\000"
 6306      6600
 6307              	.LASF256:
 6308 0747 50574D5F 		.ascii	"PWM_OSCUPD\000"
 6308      4F534355 
 6308      504400
 6309              	.LASF50:
 6310 0752 5F737464 		.ascii	"_stderr\000"
 6310      65727200 
 6311              	.LASF104:
 6312 075a 5F776374 		.ascii	"_wctomb_state\000"
 6312      6F6D625F 
 6312      73746174 
 6312      6500
 6313              	.LASF84:
 6314 0768 5F6D6273 		.ascii	"_mbstate\000"
 6314      74617465 
 6314      00
 6315              	.LASF95:
 6316 0771 5F72616E 		.ascii	"_rand_next\000"
 6316      645F6E65 
 6316      787400
 6317              	.LASF70:
 6318 077c 5F666C61 		.ascii	"_flags\000"
 6318      677300
 6319              	.LASF258:
 6320 0783 50574D5F 		.ascii	"PWM_FSR\000"
 6320      46535200 
 6321              	.LASF39:
 6322 078b 5F617465 		.ascii	"_atexit\000"
 6322      78697400 
 6323              	.LASF13:
 6324 0793 5F5F636F 		.ascii	"__count\000"
 6324      756E7400 
 6325              	.LASF305:
 6326 079b 4E4F524D 		.ascii	"NORMAL\000"
 6326      414C00
 6327              	.LASF31:
 6328 07a2 5F5F746D 		.ascii	"__tm_wday\000"
 6328      5F776461 
 6328      7900
 6329              	.LASF32:
 6330 07ac 5F5F746D 		.ascii	"__tm_yday\000"
 6330      5F796461 
ARM GAS  /tmp/cc17JTRV.s 			page 154


 6330      7900
 6331              	.LASF92:
 6332 07b6 5F736565 		.ascii	"_seed\000"
 6332      6400
 6333              	.LASF77:
 6334 07bc 5F736565 		.ascii	"_seek\000"
 6334      6B00
 6335              	.LASF133:
 6336 07c2 55415254 		.ascii	"UART1_IRQn\000"
 6336      315F4952 
 6336      516E00
 6337              	.LASF336:
 6338 07cd 6E747269 		.ascii	"ntrip\000"
 6338      7000
 6339              	.LASF9:
 6340 07d3 5F66706F 		.ascii	"_fpos_t\000"
 6340      735F7400 
 6341              	.LASF12:
 6342 07db 5F5F7763 		.ascii	"__wchb\000"
 6342      686200
 6343              	.LASF216:
 6344 07e2 4144435F 		.ascii	"ADC_RNCR\000"
 6344      524E4352 
 6344      00
 6345              	.LASF255:
 6346 07eb 50574D5F 		.ascii	"PWM_OSSUPD\000"
 6346      4F535355 
 6346      504400
 6347              	.LASF180:
 6348 07f6 42464152 		.ascii	"BFAR\000"
 6348      00
 6349              	.LASF105:
 6350 07fb 5F6D6274 		.ascii	"_mbtowc_state\000"
 6350      6F77635F 
 6350      73746174 
 6350      6500
 6351              	.LASF218:
 6352 0809 4144435F 		.ascii	"ADC_TNCR\000"
 6352      544E4352 
 6352      00
 6353              	.LASF290:
 6354 0812 54435F49 		.ascii	"TC_IMR\000"
 6354      4D5200
 6355              	.LASF6:
 6356 0819 6C6F6E67 		.ascii	"long long unsigned int\000"
 6356      206C6F6E 
 6356      6720756E 
 6356      7369676E 
 6356      65642069 
 6357              	.LASF243:
 6358 0830 50574D5F 		.ascii	"PWM_SCM\000"
 6358      53434D00 
 6359              	.LASF115:
 6360 0838 75696E74 		.ascii	"uint16_t\000"
 6360      31365F74 
 6360      00
 6361              	.LASF36:
ARM GAS  /tmp/cc17JTRV.s 			page 155


 6362 0841 5F64736F 		.ascii	"_dso_handle\000"
 6362      5F68616E 
 6362      646C6500 
 6363              	.LASF247:
 6364 084d 50574D5F 		.ascii	"PWM_IER2\000"
 6364      49455232 
 6364      00
 6365              	.LASF91:
 6366 0856 5F72616E 		.ascii	"_rand48\000"
 6366      64343800 
 6367              	.LASF203:
 6368 085e 4144435F 		.ascii	"ADC_COR\000"
 6368      434F5200 
 6369              	.LASF140:
 6370 0866 48534D43 		.ascii	"HSMCI_IRQn\000"
 6370      495F4952 
 6370      516E00
 6371              	.LASF49:
 6372 0871 5F737464 		.ascii	"_stdout\000"
 6372      6F757400 
 6373              	.LASF139:
 6374 0879 55534152 		.ascii	"USART1_IRQn\000"
 6374      54315F49 
 6374      52516E00 
 6375              	.LASF81:
 6376 0885 5F626C6B 		.ascii	"_blksize\000"
 6376      73697A65 
 6376      00
 6377              	.LASF44:
 6378 088e 5F626173 		.ascii	"_base\000"
 6378      6500
 6379              	.LASF343:
 6380 0894 5443315F 		.ascii	"TC1_IrqHandler\000"
 6380      49727148 
 6380      616E646C 
 6380      657200
 6381              	.LASF102:
 6382 08a3 5F737472 		.ascii	"_strtok_last\000"
 6382      746F6B5F 
 6382      6C617374 
 6382      00
 6383              	.LASF151:
 6384 08b0 4144435F 		.ascii	"ADC_IRQn\000"
 6384      4952516E 
 6384      00
 6385              	.LASF109:
 6386 08b9 5F6D6272 		.ascii	"_mbrtowc_state\000"
 6386      746F7763 
 6386      5F737461 
 6386      746500
 6387              	.LASF262:
 6388 08c8 50574D5F 		.ascii	"PWM_ELxMR\000"
 6388      454C784D 
 6388      5200
 6389              	.LASF214:
 6390 08d2 4144435F 		.ascii	"ADC_TCR\000"
 6390      54435200 
ARM GAS  /tmp/cc17JTRV.s 			page 156


 6391              	.LASF160:
 6392 08da 49434552 		.ascii	"ICER\000"
 6392      00
 6393              	.LASF16:
 6394 08df 5F666C6F 		.ascii	"_flock_t\000"
 6394      636B5F74 
 6394      00
 6395              	.LASF326:
 6396 08e8 7463636C 		.ascii	"tcclks\000"
 6396      6B7300
 6397              	.LASF87:
 6398 08ef 5F5F4649 		.ascii	"__FILE\000"
 6398      4C4500
 6399              	.LASF15:
 6400 08f6 5F6D6273 		.ascii	"_mbstate_t\000"
 6400      74617465 
 6400      5F7400
 6401              	.LASF132:
 6402 0901 55415254 		.ascii	"UART0_IRQn\000"
 6402      305F4952 
 6402      516E00
 6403              	.LASF60:
 6404 090c 5F723438 		.ascii	"_r48\000"
 6404      00
 6405              	.LASF235:
 6406 0911 50574D5F 		.ascii	"PWM_CLK\000"
 6406      434C4B00 
 6407              	.LASF10:
 6408 0919 77696E74 		.ascii	"wint_t\000"
 6408      5F7400
 6409              	.LASF181:
 6410 0920 41465352 		.ascii	"AFSR\000"
 6410      00
 6411              	.LASF187:
 6412 0925 4144435F 		.ascii	"ADC_SEQR1\000"
 6412      53455152 
 6412      3100
 6413              	.LASF188:
 6414 092f 4144435F 		.ascii	"ADC_SEQR2\000"
 6414      53455152 
 6414      3200
 6415              	.LASF19:
 6416 0939 5F6E6578 		.ascii	"_next\000"
 6416      7400
 6417              	.LASF73:
 6418 093f 5F646174 		.ascii	"_data\000"
 6418      6100
 6419              	.LASF234:
 6420 0945 50776D43 		.ascii	"PwmCmp\000"
 6420      6D7000
 6421              	.LASF143:
 6422 094c 5350495F 		.ascii	"SPI_IRQn\000"
 6422      4952516E 
 6422      00
 6423              	.LASF328:
 6424 0955 696E6974 		.ascii	"init\000"
 6424      00
ARM GAS  /tmp/cc17JTRV.s 			page 157


 6425              	.LASF138:
 6426 095a 55534152 		.ascii	"USART0_IRQn\000"
 6426      54305F49 
 6426      52516E00 
 6427              	.LASF192:
 6428 0966 52657365 		.ascii	"Reserved1\000"
 6428      72766564 
 6428      3100
 6429              	.LASF198:
 6430 0970 52657365 		.ascii	"Reserved2\000"
 6430      72766564 
 6430      3200
 6431              	.LASF176:
 6432 097a 43465352 		.ascii	"CFSR\000"
 6432      00
 6433              	.LASF207:
 6434 097f 52657365 		.ascii	"Reserved4\000"
 6434      72766564 
 6434      3400
 6435              	.LASF210:
 6436 0989 52657365 		.ascii	"Reserved5\000"
 6436      72766564 
 6436      3500
 6437              	.LASF276:
 6438 0993 52657365 		.ascii	"Reserved6\000"
 6438      72766564 
 6438      3600
 6439              	.LASF145:
 6440 099d 5443305F 		.ascii	"TC0_IRQn\000"
 6440      4952516E 
 6440      00
 6441              	.LASF303:
 6442 09a6 5744545F 		.ascii	"WDT_SR\000"
 6442      535200
 6443              	.LASF136:
 6444 09ad 50494F42 		.ascii	"PIOB_IRQn\000"
 6444      5F495251 
 6444      6E00
 6445              	.LASF283:
 6446 09b7 54435F43 		.ascii	"TC_CV\000"
 6446      5600
 6447              	.LASF274:
 6448 09bd 50574D5F 		.ascii	"PWM_PTCR\000"
 6448      50544352 
 6448      00
 6449              	.LASF335:
 6450 09c6 6C6F6F70 		.ascii	"loop\000"
 6450      00
 6451              	.LASF122:
 6452 09cb 44656275 		.ascii	"DebugMonitor_IRQn\000"
 6452      674D6F6E 
 6452      69746F72 
 6452      5F495251 
 6452      6E00
 6453              	.LASF342:
 6454 09dd 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 6454      652F6D6F 
ARM GAS  /tmp/cc17JTRV.s 			page 158


 6454      2F646F63 
 6454      2F737475 
 6454      6469756D 
 6455              	.LASF296:
 6456 0a0c 54435F51 		.ascii	"TC_QIDR\000"
 6456      49445200 
 6457              	.LASF277:
 6458 0a14 50574D5F 		.ascii	"PWM_CMP\000"
 6458      434D5000 
 6459              	.LASF221:
 6460 0a1c 50574D5F 		.ascii	"PWM_CMR\000"
 6460      434D5200 
 6461              	.LASF182:
 6462 0a24 4D4D4652 		.ascii	"MMFR\000"
 6462      00
 6463              	.LASF339:
 6464 0a29 64786D61 		.ascii	"dxmax\000"
 6464      7800
 6465              	.LASF179:
 6466 0a2f 4D4D4641 		.ascii	"MMFAR\000"
 6466      5200
 6467              	.LASF103:
 6468 0a35 5F6D626C 		.ascii	"_mblen_state\000"
 6468      656E5F73 
 6468      74617465 
 6468      00
 6469              	.LASF2:
 6470 0a42 73686F72 		.ascii	"short int\000"
 6470      7420696E 
 6470      7400
 6471              	.LASF310:
 6472 0a4c 6D6F6465 		.ascii	"mode\000"
 6472      00
 6473              	.LASF320:
 6474 0a51 7072696F 		.ascii	"priority\000"
 6474      72697479 
 6474      00
 6475              	.LASF114:
 6476 0a5a 696E7431 		.ascii	"int16_t\000"
 6476      365F7400 
 6477              	.LASF295:
 6478 0a62 54435F51 		.ascii	"TC_QIER\000"
 6478      49455200 
 6479              	.LASF183:
 6480 0a6a 49534152 		.ascii	"ISAR\000"
 6480      00
 6481              	.LASF199:
 6482 0a6f 4144435F 		.ascii	"ADC_OVER\000"
 6482      4F564552 
 6482      00
 6483              	.LASF37:
 6484 0a78 5F666E74 		.ascii	"_fntypes\000"
 6484      79706573 
 6484      00
 6485              	.LASF135:
 6486 0a81 50494F41 		.ascii	"PIOA_IRQn\000"
 6486      5F495251 
ARM GAS  /tmp/cc17JTRV.s 			page 159


 6486      6E00
 6487              	.LASF227:
 6488 0a8b 50574D5F 		.ascii	"PWM_DT\000"
 6488      445400
 6489              	.LASF30:
 6490 0a92 5F5F746D 		.ascii	"__tm_year\000"
 6490      5F796561 
 6490      7200
 6491              	.LASF196:
 6492 0a9c 4144435F 		.ascii	"ADC_IMR\000"
 6492      494D5200 
 6493              	.LASF185:
 6494 0aa4 4144435F 		.ascii	"ADC_CR\000"
 6494      435200
 6495              	.LASF72:
 6496 0aab 5F6C6266 		.ascii	"_lbfsize\000"
 6496      73697A65 
 6496      00
 6497              	.LASF51:
 6498 0ab4 5F696E63 		.ascii	"_inc\000"
 6498      00
 6499              	.LASF40:
 6500 0ab9 5F696E64 		.ascii	"_ind\000"
 6500      00
 6501              	.LASF219:
 6502 0abe 4144435F 		.ascii	"ADC_PTCR\000"
 6502      50544352 
 6502      00
 6503              	.LASF300:
 6504 0ac7 54435F57 		.ascii	"TC_WPMR\000"
 6504      504D5200 
 6505              	.LASF237:
 6506 0acf 50574D5F 		.ascii	"PWM_DIS\000"
 6506      44495300 
 6507              	.LASF233:
 6508 0ad7 50574D5F 		.ascii	"PWM_CMPxMUPD\000"
 6508      434D5078 
 6508      4D555044 
 6508      00
 6509              	.LASF43:
 6510 0ae4 5F5F7362 		.ascii	"__sbuf\000"
 6510      756600
 6511              	.LASF38:
 6512 0aeb 5F69735F 		.ascii	"_is_cxa\000"
 6512      63786100 
 6513              	.LASF225:
 6514 0af3 50574D5F 		.ascii	"PWM_CPRDUPD\000"
 6514      43505244 
 6514      55504400 
 6515              	.LASF340:
 6516 0aff 474E5520 		.ascii	"GNU C 4.6.1\000"
 6516      4320342E 
 6516      362E3100 
 6517              	.LASF96:
 6518 0b0b 5F6D7072 		.ascii	"_mprec\000"
 6518      656300
 6519              	.LASF324:
ARM GAS  /tmp/cc17JTRV.s 			page 160


 6520 0b12 73746174 		.ascii	"status\000"
 6520      757300
 6521              	.LASF67:
 6522 0b19 5F6D6973 		.ascii	"_misc\000"
 6522      6300
 6523              	.LASF17:
 6524 0b1f 5F5F554C 		.ascii	"__ULong\000"
 6524      6F6E6700 
 6525              	.LASF224:
 6526 0b27 50574D5F 		.ascii	"PWM_CPRD\000"
 6526      43505244 
 6526      00
 6527              	.LASF144:
 6528 0b30 5353435F 		.ascii	"SSC_IRQn\000"
 6528      4952516E 
 6528      00
 6529              	.LASF232:
 6530 0b39 50574D5F 		.ascii	"PWM_CMPxM\000"
 6530      434D5078 
 6530      4D00
 6531              	.LASF116:
 6532 0b43 75696E74 		.ascii	"uint32_t\000"
 6532      33325F74 
 6532      00
 6533              	.LASF230:
 6534 0b4c 50574D5F 		.ascii	"PWM_CMPxV\000"
 6534      434D5078 
 6534      5600
 6535              	.LASF97:
 6536 0b56 5F726573 		.ascii	"_result\000"
 6536      756C7400 
 6537              	.LASF206:
 6538 0b5e 4144435F 		.ascii	"ADC_ACR\000"
 6538      41435200 
 6539              	.LASF282:
 6540 0b66 54435F53 		.ascii	"TC_SMMR\000"
 6540      4D4D5200 
 6541              	.LASF190:
 6542 0b6e 4144435F 		.ascii	"ADC_CHDR\000"
 6542      43484452 
 6542      00
 6543              	.LASF266:
 6544 0b77 50574D5F 		.ascii	"PWM_RPR\000"
 6544      52505200 
 6545              	.LASF94:
 6546 0b7f 5F616464 		.ascii	"_add\000"
 6546      00
 6547              	.LASF3:
 6548 0b84 73686F72 		.ascii	"short unsigned int\000"
 6548      7420756E 
 6548      7369676E 
 6548      65642069 
 6548      6E7400
 6549              	.LASF208:
 6550 0b97 4144435F 		.ascii	"ADC_WPMR\000"
 6550      57504D52 
 6550      00
ARM GAS  /tmp/cc17JTRV.s 			page 161


 6551              	.LASF27:
 6552 0ba0 5F5F746D 		.ascii	"__tm_hour\000"
 6552      5F686F75 
 6552      7200
 6553              	.LASF123:
 6554 0baa 50656E64 		.ascii	"PendSV_IRQn\000"
 6554      53565F49 
 6554      52516E00 
 6555              	.LASF110:
 6556 0bb6 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 6556      72746F77 
 6556      63735F73 
 6556      74617465 
 6556      00
 6557              	.LASF293:
 6558 0bc7 54435F42 		.ascii	"TC_BCR\000"
 6558      435200
 6559              	.LASF148:
 6560 0bce 5443335F 		.ascii	"TC3_IRQn\000"
 6560      4952516E 
 6560      00
 6561              	.LASF189:
 6562 0bd7 4144435F 		.ascii	"ADC_CHER\000"
 6562      43484552 
 6562      00
 6563              	.LASF158:
 6564 0be0 49534552 		.ascii	"ISER\000"
 6564      00
 6565              	.LASF35:
 6566 0be5 5F666E61 		.ascii	"_fnargs\000"
 6566      72677300 
 6567              	.LASF201:
 6568 0bed 4144435F 		.ascii	"ADC_CWR\000"
 6568      43575200 
 6569              	.LASF33:
 6570 0bf5 5F5F746D 		.ascii	"__tm_isdst\000"
 6570      5F697364 
 6570      737400
 6571              	.LASF228:
 6572 0c00 50574D5F 		.ascii	"PWM_DTUPD\000"
 6572      44545550 
 6572      4400
 6573              	.LASF26:
 6574 0c0a 5F5F746D 		.ascii	"__tm_min\000"
 6574      5F6D696E 
 6574      00
 6575              	.LASF244:
 6576 0c13 50574D5F 		.ascii	"PWM_SCUC\000"
 6576      53435543 
 6576      00
 6577              	.LASF107:
 6578 0c1c 5F676574 		.ascii	"_getdate_err\000"
 6578      64617465 
 6578      5F657272 
 6578      00
 6579              	.LASF127:
 6580 0c29 5254435F 		.ascii	"RTC_IRQn\000"
ARM GAS  /tmp/cc17JTRV.s 			page 162


 6580      4952516E 
 6580      00
 6581              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/cc17JTRV.s 			page 163


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc17JTRV.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/cc17JTRV.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/cc17JTRV.s:62     .text.NVIC_SetPriority:00000000 $t
     /tmp/cc17JTRV.s:66     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
     /tmp/cc17JTRV.s:128    .bss:00000000 input
     /tmp/cc17JTRV.s:125    .bss:00000000 $d
     /tmp/cc17JTRV.s:134    .data:00000000 _state
     /tmp/cc17JTRV.s:141    .bss:00000004 loop
     /tmp/cc17JTRV.s:148    .data:00000004 ntrip
     /tmp/cc17JTRV.s:145    .data:00000001 $d
     /tmp/cc17JTRV.s:157    .data:00000014 rtrip
     /tmp/cc17JTRV.s:166    .data:00000024 releasetime
     /tmp/cc17JTRV.s:172    .data:00000028 dxmax
     /tmp/cc17JTRV.s:175    .rodata:00000000 $d
     /tmp/cc17JTRV.s:176    .rodata:00000000 .LC0
     /tmp/cc17JTRV.s:179    .rodata:00000018 .LC1
     /tmp/cc17JTRV.s:182    .rodata:00000044 .LC2
     /tmp/cc17JTRV.s:185    .text.main:00000000 $t
     /tmp/cc17JTRV.s:190    .text.main:00000000 main
     /tmp/cc17JTRV.s:647    .text.init:00000000 init
     /tmp/cc17JTRV.s:1092   .text.cli:00000000 cli
     /tmp/cc17JTRV.s:302    .text.main:000000fc $d
     /tmp/cc17JTRV.s:312    .text.main:0000011c $t
     /tmp/cc17JTRV.s:880    .text.state:00000000 state
     /tmp/cc17JTRV.s:464    .text.TC1_IrqHandler:00000000 $t
     /tmp/cc17JTRV.s:469    .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/cc17JTRV.s:501    .text.ADC_IrqHandler:00000000 $t
     /tmp/cc17JTRV.s:506    .text.ADC_IrqHandler:00000000 ADC_IrqHandler
     /tmp/cc17JTRV.s:643    .text.init:00000000 $t
     /tmp/cc17JTRV.s:861    .rodata:00000060 .LC3
     /tmp/cc17JTRV.s:864    .rodata:00000078 .LC4
     /tmp/cc17JTRV.s:867    .rodata:0000008c .LC5
     /tmp/cc17JTRV.s:870    .rodata:000000a0 .LC6
     /tmp/cc17JTRV.s:873    .rodata:000000b8 .LC7
     /tmp/cc17JTRV.s:876    .text.state:00000000 $t
     /tmp/cc17JTRV.s:908    .text.state:0000001c $d
     /tmp/cc17JTRV.s:918    .text.state:0000003c $t
     /tmp/cc17JTRV.s:1055   .rodata:000000d0 .LC8
     /tmp/cc17JTRV.s:1058   .rodata:000000dc .LC9
     /tmp/cc17JTRV.s:1061   .rodata:000000f4 .LC10
     /tmp/cc17JTRV.s:1064   .rodata:00000100 .LC11
     /tmp/cc17JTRV.s:1067   .rodata:00000120 .LC12
     /tmp/cc17JTRV.s:1070   .rodata:00000124 .LC13
     /tmp/cc17JTRV.s:1073   .rodata:00000140 .LC14
     /tmp/cc17JTRV.s:1076   .rodata:00000144 .LC15
     /tmp/cc17JTRV.s:1079   .rodata:00000168 .LC16
     /tmp/cc17JTRV.s:1082   .rodata:00000184 .LC17
     /tmp/cc17JTRV.s:1085   .rodata:0000019c .LC18
     /tmp/cc17JTRV.s:1088   .text.cli:00000000 $t
     /tmp/cc17JTRV.s:1199   .text.cli:000000e4 $d
     /tmp/cc17JTRV.s:1209   .text.cli:00000104 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_impure_ptr
ARM GAS  /tmp/cc17JTRV.s 			page 164


fiprintf
USBC_isConfigured
LED_blink
setbuf
GetTickCount
ADC_ReadBuffer
control
PWMC_SetDutyCycle
PMC_EnablePeripheral
TC_FindMckDivisor
TC_Configure
TC_Start
ADC_Initialize
ADC_cfgFrequency
PWMC_ConfigureClocks
PWMC_ConfigureChannelExt
PWMC_SetPeriod
PWMC_ConfigureSyncChannel
PWMC_SetSyncChannelUpdatePeriod
TimeTick_Configure
LEDs_configure
LED_clr
USBC_Configure
mode
USBC_hasData
gets
siscanf
iprintf
