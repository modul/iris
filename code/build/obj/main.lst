ARM GAS  /tmp/ccKa46D2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/ccKa46D2.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccKa46D2.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/ccKa46D2.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccKa46D2.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccKa46D2.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/ccKa46D2.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/ccKa46D2.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/ccKa46D2.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/ccKa46D2.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/ccKa46D2.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccKa46D2.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/ccKa46D2.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/ccKa46D2.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/ccKa46D2.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccKa46D2.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccKa46D2.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/ccKa46D2.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccKa46D2.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/ccKa46D2.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccKa46D2.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccKa46D2.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccKa46D2.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccKa46D2.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccKa46D2.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccKa46D2.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccKa46D2.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/ccKa46D2.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.section	.text.NVIC_SetPriority,"ax",%progbits
  62              		.align	2
  63              		.thumb
  64              		.thumb_func
  65              		.type	NVIC_SetPriority, %function
  66              	NVIC_SetPriority:
  67              	.LFB20:
1506:libchip/cmsis/core_cm3.h **** 
1507:libchip/cmsis/core_cm3.h **** /**
1508:libchip/cmsis/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:libchip/cmsis/core_cm3.h ****  *
1510:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:libchip/cmsis/core_cm3.h ****  *
1512:libchip/cmsis/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:libchip/cmsis/core_cm3.h ****  */
1515:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:libchip/cmsis/core_cm3.h **** {
1517:libchip/cmsis/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:libchip/cmsis/core_cm3.h **** }
1519:libchip/cmsis/core_cm3.h **** 
1520:libchip/cmsis/core_cm3.h **** /**
1521:libchip/cmsis/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:libchip/cmsis/core_cm3.h ****  *
1523:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:libchip/cmsis/core_cm3.h ****  *
1526:libchip/cmsis/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending,
1527:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0
1528:libchip/cmsis/core_cm3.h ****  */
1529:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/ccKa46D2.s 			page 29


1530:libchip/cmsis/core_cm3.h **** {
1531:libchip/cmsis/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:libchip/cmsis/core_cm3.h **** }
1533:libchip/cmsis/core_cm3.h **** 
1534:libchip/cmsis/core_cm3.h **** /**
1535:libchip/cmsis/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:libchip/cmsis/core_cm3.h ****  *
1537:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:libchip/cmsis/core_cm3.h ****  *
1539:libchip/cmsis/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:libchip/cmsis/core_cm3.h ****  */
1542:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:libchip/cmsis/core_cm3.h **** {
1544:libchip/cmsis/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:libchip/cmsis/core_cm3.h **** }
1546:libchip/cmsis/core_cm3.h **** 
1547:libchip/cmsis/core_cm3.h **** /**
1548:libchip/cmsis/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:libchip/cmsis/core_cm3.h ****  *
1550:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:libchip/cmsis/core_cm3.h ****  *
1552:libchip/cmsis/core_cm3.h ****  * Clear the pending bit for the specified interrupt.
1553:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:libchip/cmsis/core_cm3.h ****  */
1555:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:libchip/cmsis/core_cm3.h **** {
1557:libchip/cmsis/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:libchip/cmsis/core_cm3.h **** }
1559:libchip/cmsis/core_cm3.h **** 
1560:libchip/cmsis/core_cm3.h **** /**
1561:libchip/cmsis/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:libchip/cmsis/core_cm3.h ****  *
1563:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:libchip/cmsis/core_cm3.h ****  *
1566:libchip/cmsis/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active,
1567:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0.
1568:libchip/cmsis/core_cm3.h ****  */
1569:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:libchip/cmsis/core_cm3.h **** {
1571:libchip/cmsis/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:libchip/cmsis/core_cm3.h **** }
1573:libchip/cmsis/core_cm3.h **** 
1574:libchip/cmsis/core_cm3.h **** /**
1575:libchip/cmsis/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:libchip/cmsis/core_cm3.h ****  *
1577:libchip/cmsis/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:libchip/cmsis/core_cm3.h ****  * @param  priority  The priority to set
1579:libchip/cmsis/core_cm3.h ****  *
1580:libchip/cmsis/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt
1581:libchip/cmsis/core_cm3.h ****  * number can be positive to specify an external (device specific)
1582:libchip/cmsis/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:libchip/cmsis/core_cm3.h ****  *
1584:libchip/cmsis/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:libchip/cmsis/core_cm3.h ****  */
1586:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
ARM GAS  /tmp/ccKa46D2.s 			page 30


1587:libchip/cmsis/core_cm3.h **** {
  68              		.loc 1 1587 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI5:
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 3960     		str	r1, [r7, #0]
  85 000a FB71     		strb	r3, [r7, #7]
1588:libchip/cmsis/core_cm3.h ****   if(IRQn < 0) {
  86              		.loc 1 1588 0
  87 000c 97F90730 		ldrsb	r3, [r7, #7]
  88 0010 002B     		cmp	r3, #0
  89 0012 10DA     		bge	.L3
1589:libchip/cmsis/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  90              		.loc 1 1589 0
  91 0014 4FF46D43 		mov	r3, #60672
  92 0018 CEF20003 		movt	r3, 57344
  93 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  94 001e 02F00F02 		and	r2, r2, #15
  95 0022 A2F10401 		sub	r1, r2, #4
  96 0026 3A68     		ldr	r2, [r7, #0]
  97 0028 D2B2     		uxtb	r2, r2
  98 002a 4FEA0212 		lsl	r2, r2, #4
  99 002e D2B2     		uxtb	r2, r2
 100 0030 5B18     		adds	r3, r3, r1
 101 0032 1A76     		strb	r2, [r3, #24]
 102 0034 0DE0     		b	.L2
 103              	.L3:
1590:libchip/cmsis/core_cm3.h ****   else {
1591:libchip/cmsis/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 104              		.loc 1 1591 0
 105 0036 4FF46143 		mov	r3, #57600
 106 003a CEF20003 		movt	r3, 57344
 107 003e 97F90710 		ldrsb	r1, [r7, #7]
 108 0042 3A68     		ldr	r2, [r7, #0]
 109 0044 D2B2     		uxtb	r2, r2
 110 0046 4FEA0212 		lsl	r2, r2, #4
 111 004a D2B2     		uxtb	r2, r2
 112 004c 5B18     		adds	r3, r3, r1
 113 004e 83F80023 		strb	r2, [r3, #768]
 114              	.L2:
1592:libchip/cmsis/core_cm3.h **** }
 115              		.loc 1 1592 0
 116 0052 07F10C07 		add	r7, r7, #12
 117 0056 BD46     		mov	sp, r7
 118 0058 80BC     		pop	{r7}
ARM GAS  /tmp/ccKa46D2.s 			page 31


 119 005a 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE20:
 122              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 123              		.global	input
 124              		.bss
 125              		.align	2
 126              		.type	input, %object
 127              		.size	input, 4
 128              	input:
 129 0000 00000000 		.space	4
 130              		.global	_state
 131              		.data
 132              		.type	_state, %object
 133              		.size	_state, 1
 134              	_state:
 135 0000 01       		.byte	1
 136              		.global	loop
 137              		.bss
 138              		.align	2
 139              		.type	loop, %object
 140              		.size	loop, 44
 141              	loop:
 142 0004 00000000 		.space	44
 142      00000000 
 142      00000000 
 142      00000000 
 142      00000000 
 143              		.global	ntrip
 144              		.data
 145 0001 000000   		.align	2
 146              		.type	ntrip, %object
 147              		.size	ntrip, 16
 148              	ntrip:
 149 0004 14000000 		.word	loop+20
 150 0008 00000000 		.word	0
 151 000c 64000000 		.word	100
 152 0010 0A000000 		.word	10
 153              		.global	rtrip
 154              		.align	2
 155              		.type	rtrip, %object
 156              		.size	rtrip, 16
 157              	rtrip:
 158 0014 14000000 		.word	loop+20
 159 0018 00000000 		.word	0
 160 001c 0C000000 		.word	12
 161 0020 00000000 		.word	0
 162              		.global	releasetime
 163              		.align	2
 164              		.type	releasetime, %object
 165              		.size	releasetime, 4
 166              	releasetime:
 167 0024 E8030000 		.word	1000
 168              		.global	dxmax
 169              		.align	2
 170              		.type	dxmax, %object
 171              		.size	dxmax, 4
ARM GAS  /tmp/ccKa46D2.s 			page 32


 172              	dxmax:
 173 0028 00040000 		.word	1024
 174              		.section	.rodata
 175              		.align	2
 176              	.LC3:
 177 0000 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
 177      52756E6E 
 177      696E6720 
 177      61742025 
 177      69204D48 
 178 0017 00       		.align	2
 179              	.LC4:
 180 0018 2D442D20 		.ascii	"-D- releasetime elapsed\012\000"
 180      72656C65 
 180      61736574 
 180      696D6520 
 180      656C6170 
 181              		.section	.text.main,"ax",%progbits
 182              		.align	2
 183              		.global	main
 184              		.thumb
 185              		.thumb_func
 186              		.type	main, %function
 187              	main:
 188              	.LFB35:
 189              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "conf.h"
   3:main.c        **** 
   4:main.c        **** #define STOPPED  (1 << 0)
   5:main.c        **** #define RUN     (1 << 1)
   6:main.c        **** #define HOLD    (1 << 2)
   7:main.c        **** #define RELEASE (1 << 3)
   8:main.c        **** 
   9:main.c        **** #define UP -1
  10:main.c        **** #define DOWN 1
  11:main.c        **** #define NONE 0
  12:main.c        **** 
  13:main.c        **** //TODO config struct
  14:main.c        **** #define MINv 0
  15:main.c        **** #define MAXv MAX
  16:main.c        **** 
  17:main.c        **** ctrlio_t input[NUM_AIN] = {0};
  18:main.c        **** uint8_t _state = STOPPED;
  19:main.c        **** 
  20:main.c        **** struct ctrl loop = CTRL_INIT;	
  21:main.c        **** struct trip ntrip = {&loop._e, 0, 100, 10};
  22:main.c        **** struct trip rtrip = {&loop._e, 0, 12, 0};
  23:main.c        **** 
  24:main.c        **** uint32_t releasetime = 1000;
  25:main.c        **** uint32_t dxmax = 1024;
  26:main.c        **** 
  27:main.c        **** static void init();
  28:main.c        **** static void write_output(int32_t value);
  29:main.c        **** static void state(uint8_t new);
  30:main.c        **** static void cli();
  31:main.c        **** 
ARM GAS  /tmp/ccKa46D2.s 			page 33


  32:main.c        **** int main() 
  33:main.c        **** {
 190              		.loc 2 33 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              	.LCFI6:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 14, -4
 198              		.cfi_offset 7, -8
 199 0002 82B0     		sub	sp, sp, #8
 200              	.LCFI7:
 201              		.cfi_def_cfa_offset 16
 202 0004 00AF     		add	r7, sp, #0
 203              	.LCFI8:
 204              		.cfi_def_cfa_register 7
  34:main.c        **** 	uint32_t timestamp = 0;
 205              		.loc 2 34 0
 206 0006 4FF00003 		mov	r3, #0
 207 000a 7B60     		str	r3, [r7, #4]
  35:main.c        **** 
  36:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 208              		.loc 2 36 0
 209 000c 40F20003 		movw	r3, #:lower16:_impure_ptr
 210 0010 C0F20003 		movt	r3, #:upper16:_impure_ptr
 211 0014 1B68     		ldr	r3, [r3, #0]
 212 0016 DB68     		ldr	r3, [r3, #12]
 213 0018 1846     		mov	r0, r3
 214 001a 40F20001 		movw	r1, #:lower16:.LC3
 215 001e C0F20001 		movt	r1, #:upper16:.LC3
 216 0022 4FF03002 		mov	r2, #48
 217 0026 FFF7FEFF 		bl	fiprintf
  37:main.c        **** 
  38:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 218              		.loc 2 38 0
 219 002a 41F25043 		movw	r3, #5200
 220 002e C4F20E03 		movt	r3, 16398
 221 0032 4FF40042 		mov	r2, #32768
 222 0036 5A60     		str	r2, [r3, #4]
  39:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 223              		.loc 2 39 0
 224 0038 4FF4D840 		mov	r0, #27648
 225 003c C0F2DC20 		movt	r0, 732
 226 0040 FFF7FEFF 		bl	TimeTick_Configure
  40:main.c        **** 	LEDs_configure();
 227              		.loc 2 40 0
 228 0044 FFF7FEFF 		bl	LEDs_configure
  41:main.c        **** 
  42:main.c        **** 	/* configure hardware */
  43:main.c        **** 	LED_blink(STATUS, FOREVER);
 229              		.loc 2 43 0
 230 0048 4FF00000 		mov	r0, #0
 231 004c 4FF0FF31 		mov	r1, #-1
 232 0050 FFF7FEFF 		bl	LED_blink
  44:main.c        **** 	init();
 233              		.loc 2 44 0
ARM GAS  /tmp/ccKa46D2.s 			page 34


 234 0054 FFF7FEFF 		bl	init
  45:main.c        **** 	LED_blinkstop(STATUS);
 235              		.loc 2 45 0
 236 0058 4FF00000 		mov	r0, #0
 237 005c FFF7FEFF 		bl	LED_blinkstop
  46:main.c        **** 
  47:main.c        **** 	loop.Kp = SCALE(3);
 238              		.loc 2 47 0
 239 0060 40F20003 		movw	r3, #:lower16:loop
 240 0064 C0F20003 		movt	r3, #:upper16:loop
 241 0068 4FF4C072 		mov	r2, #384
 242 006c 9A81     		strh	r2, [r3, #12]	@ movhi
  48:main.c        **** 	loop.Ki = SCALE(2);
 243              		.loc 2 48 0
 244 006e 40F20003 		movw	r3, #:lower16:loop
 245 0072 C0F20003 		movt	r3, #:upper16:loop
 246 0076 4FF48072 		mov	r2, #256
 247 007a DA81     		strh	r2, [r3, #14]	@ movhi
  49:main.c        **** 	loop.Kd = SCALE(0);
 248              		.loc 2 49 0
 249 007c 40F20003 		movw	r3, #:lower16:loop
 250 0080 C0F20003 		movt	r3, #:upper16:loop
 251 0084 4FF00002 		mov	r2, #0
 252 0088 1A82     		strh	r2, [r3, #16]	@ movhi
  50:main.c        **** 	loop.rSlope = 16;
 253              		.loc 2 50 0
 254 008a 40F20003 		movw	r3, #:lower16:loop
 255 008e C0F20003 		movt	r3, #:upper16:loop
 256 0092 4FF01002 		mov	r2, #16
 257 0096 9A60     		str	r2, [r3, #8]
  51:main.c        **** 	loop.rSP = MAXv;
 258              		.loc 2 51 0
 259 0098 40F20003 		movw	r3, #:lower16:loop
 260 009c C0F20003 		movt	r3, #:upper16:loop
 261 00a0 40F6FF72 		movw	r2, #4095
 262 00a4 9A80     		strh	r2, [r3, #4]	@ movhi
  52:main.c        **** 	loop.tristate = &rtrip;
 263              		.loc 2 52 0
 264 00a6 40F20003 		movw	r3, #:lower16:loop
 265 00aa C0F20003 		movt	r3, #:upper16:loop
 266 00ae 40F20002 		movw	r2, #:lower16:rtrip
 267 00b2 C0F20002 		movt	r2, #:upper16:rtrip
 268 00b6 9A62     		str	r2, [r3, #40]
  53:main.c        **** 	state(STOPPED);
 269              		.loc 2 53 0
 270 00b8 4FF00100 		mov	r0, #1
 271 00bc FFF7FEFF 		bl	state
 272              	.L20:
  54:main.c        **** 
  55:main.c        **** 	while (1) {
  56:main.c        **** 		cli();
 273              		.loc 2 56 0
 274 00c0 FFF7FEFF 		bl	cli
  57:main.c        **** 		switch (_state) {
 275              		.loc 2 57 0
 276 00c4 40F20003 		movw	r3, #:lower16:_state
 277 00c8 C0F20003 		movt	r3, #:upper16:_state
ARM GAS  /tmp/ccKa46D2.s 			page 35


 278 00cc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 279 00ce 03F1FF33 		add	r3, r3, #-1
 280 00d2 072B     		cmp	r3, #7
 281 00d4 00F2AF80 		bhi	.L6
 282 00d8 01A1     		adr	r1, .L11
 283 00da 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 284 00de 00BF     		.align	2
 285              	.L11:
 286 00e0 41020000 		.word	.L21+1
 287 00e4 B7010000 		.word	.L8+1
 288 00e8 37020000 		.word	.L6+1
 289 00ec 01010000 		.word	.L9+1
 290 00f0 37020000 		.word	.L6+1
 291 00f4 37020000 		.word	.L6+1
 292 00f8 37020000 		.word	.L6+1
 293 00fc 35010000 		.word	.L10+1
 294              	.L9:
  58:main.c        **** 			case STOPPED:
  59:main.c        **** 				break;
  60:main.c        **** 
  61:main.c        **** 			case HOLD:
  62:main.c        **** 				if (GetTickCount() % 1000)
 295              		.loc 2 62 0
 296 0100 FFF7FEFF 		bl	GetTickCount
 297 0104 0246     		mov	r2, r0
 298 0106 44F6D353 		movw	r3, #19923
 299 010a C1F26203 		movt	r3, 4194
 300 010e A3FB0213 		umull	r1, r3, r3, r2
 301 0112 4FEA9313 		lsr	r3, r3, #6
 302 0116 4FF47A71 		mov	r1, #1000
 303 011a 01FB03F3 		mul	r3, r1, r3
 304 011e D31A     		subs	r3, r2, r3
 305 0120 002B     		cmp	r3, #0
 306 0122 00F08F80 		beq	.L22
  63:main.c        **** 					LED_blink(STATUS, 1);
 307              		.loc 2 63 0
 308 0126 4FF00000 		mov	r0, #0
 309 012a 4FF00101 		mov	r1, #1
 310 012e FFF7FEFF 		bl	LED_blink
  64:main.c        **** 				break;
 311              		.loc 2 64 0
 312 0132 87E0     		b	.L22
 313              	.L10:
  65:main.c        **** 
  66:main.c        **** 			case RELEASE:
  67:main.c        **** 				if (GetTickCount() % 1000)
 314              		.loc 2 67 0
 315 0134 FFF7FEFF 		bl	GetTickCount
 316 0138 0246     		mov	r2, r0
 317 013a 44F6D353 		movw	r3, #19923
 318 013e C1F26203 		movt	r3, 4194
 319 0142 A3FB0213 		umull	r1, r3, r3, r2
 320 0146 4FEA9313 		lsr	r3, r3, #6
 321 014a 4FF47A71 		mov	r1, #1000
 322 014e 01FB03F3 		mul	r3, r1, r3
 323 0152 D31A     		subs	r3, r2, r3
 324 0154 002B     		cmp	r3, #0
ARM GAS  /tmp/ccKa46D2.s 			page 36


 325 0156 05D0     		beq	.L14
  68:main.c        **** 					LED_blink(STATUS, 2);
 326              		.loc 2 68 0
 327 0158 4FF00000 		mov	r0, #0
 328 015c 4FF00201 		mov	r1, #2
 329 0160 FFF7FEFF 		bl	LED_blink
 330              	.L14:
  69:main.c        **** 
  70:main.c        **** 				if (timestamp == 0)
 331              		.loc 2 70 0
 332 0164 7B68     		ldr	r3, [r7, #4]
 333 0166 002B     		cmp	r3, #0
 334 0168 0AD1     		bne	.L15
  71:main.c        **** 					timestamp = GetTickCount() + releasetime;
 335              		.loc 2 71 0
 336 016a FFF7FEFF 		bl	GetTickCount
 337 016e 0246     		mov	r2, r0
 338 0170 40F20003 		movw	r3, #:lower16:releasetime
 339 0174 C0F20003 		movt	r3, #:upper16:releasetime
 340 0178 1B68     		ldr	r3, [r3, #0]
 341 017a D318     		adds	r3, r2, r3
 342 017c 7B60     		str	r3, [r7, #4]
  72:main.c        **** 				else if (GetTickCount() >= timestamp) {
  73:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
  74:main.c        **** 					timestamp = 0;
  75:main.c        **** 					state(STOPPED);
  76:main.c        **** 				}
  77:main.c        **** 				break;
 343              		.loc 2 77 0
 344 017e 63E0     		b	.L23
 345              	.L15:
  72:main.c        **** 				else if (GetTickCount() >= timestamp) {
 346              		.loc 2 72 0
 347 0180 FFF7FEFF 		bl	GetTickCount
 348 0184 0246     		mov	r2, r0
 349 0186 7B68     		ldr	r3, [r7, #4]
 350 0188 9A42     		cmp	r2, r3
 351 018a 5DD3     		bcc	.L23
  73:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
 352              		.loc 2 73 0
 353 018c 40F20003 		movw	r3, #:lower16:_impure_ptr
 354 0190 C0F20003 		movt	r3, #:upper16:_impure_ptr
 355 0194 1B68     		ldr	r3, [r3, #0]
 356 0196 DB68     		ldr	r3, [r3, #12]
 357 0198 1846     		mov	r0, r3
 358 019a 40F20001 		movw	r1, #:lower16:.LC4
 359 019e C0F20001 		movt	r1, #:upper16:.LC4
 360 01a2 FFF7FEFF 		bl	fiprintf
  74:main.c        **** 					timestamp = 0;
 361              		.loc 2 74 0
 362 01a6 4FF00003 		mov	r3, #0
 363 01aa 7B60     		str	r3, [r7, #4]
  75:main.c        **** 					state(STOPPED);
 364              		.loc 2 75 0
 365 01ac 4FF00100 		mov	r0, #1
 366 01b0 FFF7FEFF 		bl	state
 367              		.loc 2 77 0
ARM GAS  /tmp/ccKa46D2.s 			page 37


 368 01b4 48E0     		b	.L23
 369              	.L8:
  78:main.c        **** 
  79:main.c        **** 			case RUN:
  80:main.c        **** 				if (GetTickCount() % 1000)
 370              		.loc 2 80 0
 371 01b6 FFF7FEFF 		bl	GetTickCount
 372 01ba 0246     		mov	r2, r0
 373 01bc 44F6D353 		movw	r3, #19923
 374 01c0 C1F26203 		movt	r3, 4194
 375 01c4 A3FB0213 		umull	r1, r3, r3, r2
 376 01c8 4FEA9313 		lsr	r3, r3, #6
 377 01cc 4FF47A71 		mov	r1, #1000
 378 01d0 01FB03F3 		mul	r3, r1, r3
 379 01d4 D31A     		subs	r3, r2, r3
 380 01d6 002B     		cmp	r3, #0
 381 01d8 05D0     		beq	.L17
  81:main.c        **** 					LED_blink(STATUS, 3);
 382              		.loc 2 81 0
 383 01da 4FF00000 		mov	r0, #0
 384 01de 4FF00301 		mov	r1, #3
 385 01e2 FFF7FEFF 		bl	LED_blink
 386              	.L17:
  82:main.c        **** 				if (   loop._dx > dxmax \
 387              		.loc 2 82 0
 388 01e6 40F20003 		movw	r3, #:lower16:loop
 389 01ea C0F20003 		movt	r3, #:upper16:loop
 390 01ee 9B69     		ldr	r3, [r3, #24]
 391 01f0 1A46     		mov	r2, r3
 392 01f2 40F20003 		movw	r3, #:lower16:dxmax
 393 01f6 C0F20003 		movt	r3, #:upper16:dxmax
 394 01fa 1B68     		ldr	r3, [r3, #0]
 395 01fc 9A42     		cmp	r2, r3
 396 01fe 15D8     		bhi	.L18
  83:main.c        **** 				    || loop._dx < -dxmax \
 397              		.loc 2 83 0
 398 0200 40F20003 		movw	r3, #:lower16:loop
 399 0204 C0F20003 		movt	r3, #:upper16:loop
 400 0208 9B69     		ldr	r3, [r3, #24]
 401 020a 1A46     		mov	r2, r3
 402 020c 40F20003 		movw	r3, #:lower16:dxmax
 403 0210 C0F20003 		movt	r3, #:upper16:dxmax
 404 0214 1B68     		ldr	r3, [r3, #0]
 405 0216 C3F10003 		rsb	r3, r3, #0
 406 021a 9A42     		cmp	r2, r3
 407 021c 06D3     		bcc	.L18
  84:main.c        **** 					|| loop.mode == NORMAL) // ramp finished
 408              		.loc 2 84 0
 409 021e 40F20003 		movw	r3, #:lower16:loop
 410 0222 C0F20003 		movt	r3, #:upper16:loop
 411 0226 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 412 0228 012B     		cmp	r3, #1
 413 022a 0FD1     		bne	.L24
 414              	.L18:
  85:main.c        **** 					state(RELEASE);
 415              		.loc 2 85 0
 416 022c 4FF00800 		mov	r0, #8
ARM GAS  /tmp/ccKa46D2.s 			page 38


 417 0230 FFF7FEFF 		bl	state
  86:main.c        **** 				break;
 418              		.loc 2 86 0
 419 0234 0AE0     		b	.L24
 420              	.L6:
  87:main.c        **** 
  88:main.c        **** 			default:
  89:main.c        **** 				state(STOPPED);
 421              		.loc 2 89 0
 422 0236 4FF00100 		mov	r0, #1
 423 023a FFF7FEFF 		bl	state
  90:main.c        **** 		}
  91:main.c        **** 	}
 424              		.loc 2 91 0
 425 023e 3FE7     		b	.L20
 426              	.L21:
  59:main.c        **** 				break;
 427              		.loc 2 59 0
 428 0240 00BF     		nop
 429 0242 04E0     		b	.L12
 430              	.L22:
  64:main.c        **** 				break;
 431              		.loc 2 64 0
 432 0244 00BF     		nop
 433 0246 02E0     		b	.L12
 434              	.L23:
  77:main.c        **** 				break;
 435              		.loc 2 77 0
 436 0248 00BF     		nop
 437 024a 00E0     		b	.L12
 438              	.L24:
  86:main.c        **** 				break;
 439              		.loc 2 86 0
 440 024c 00BF     		nop
 441              	.L12:
 442              		.loc 2 91 0
 443 024e 37E7     		b	.L20
 444              		.cfi_endproc
 445              	.LFE35:
 446              		.size	main, .-main
 447              		.section	.text.TC1_IrqHandler,"ax",%progbits
 448              		.align	2
 449              		.global	TC1_IrqHandler
 450              		.thumb
 451              		.thumb_func
 452              		.type	TC1_IrqHandler, %function
 453              	TC1_IrqHandler:
 454              	.LFB36:
  92:main.c        **** 	return 0;
  93:main.c        **** }
  94:main.c        **** 
  95:main.c        **** void TC1_IrqHandler()
  96:main.c        **** {
 455              		.loc 2 96 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccKa46D2.s 			page 39


 459 0000 80B5     		push	{r7, lr}
 460              	.LCFI9:
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 14, -4
 463              		.cfi_offset 7, -8
 464 0002 00AF     		add	r7, sp, #0
 465              	.LCFI10:
 466              		.cfi_def_cfa_register 7
  97:main.c        **** 	ADC_StartConversion(ADC);
 467              		.loc 2 97 0
 468 0004 4FF40043 		mov	r3, #32768
 469 0008 C4F20303 		movt	r3, 16387
 470 000c 4FF00202 		mov	r2, #2
 471 0010 1A60     		str	r2, [r3, #0]
  98:main.c        **** 	ADC_ReadBuffer(ADC, (int16_t*) input, NUM_AIN);
 472              		.loc 2 98 0
 473 0012 4FF40040 		mov	r0, #32768
 474 0016 C4F20300 		movt	r0, 16387
 475 001a 40F20001 		movw	r1, #:lower16:input
 476 001e C0F20001 		movt	r1, #:upper16:input
 477 0022 4FF00202 		mov	r2, #2
 478 0026 FFF7FEFF 		bl	ADC_ReadBuffer
  99:main.c        **** }
 479              		.loc 2 99 0
 480 002a 80BD     		pop	{r7, pc}
 481              		.cfi_endproc
 482              	.LFE36:
 483              		.size	TC1_IrqHandler, .-TC1_IrqHandler
 484              		.section	.text.ADC_IrqHandler,"ax",%progbits
 485              		.align	2
 486              		.global	ADC_IrqHandler
 487              		.thumb
 488              		.thumb_func
 489              		.type	ADC_IrqHandler, %function
 490              	ADC_IrqHandler:
 491              	.LFB37:
 100:main.c        **** 
 101:main.c        **** void ADC_IrqHandler(void)
 102:main.c        **** {
 492              		.loc 2 102 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 8
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496 0000 80B5     		push	{r7, lr}
 497              	.LCFI11:
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 14, -4
 500              		.cfi_offset 7, -8
 501 0002 82B0     		sub	sp, sp, #8
 502              	.LCFI12:
 503              		.cfi_def_cfa_offset 16
 504 0004 00AF     		add	r7, sp, #0
 505              	.LCFI13:
 506              		.cfi_def_cfa_register 7
 103:main.c        **** 	int32_t duty = 0;
 507              		.loc 2 103 0
 508 0006 4FF00003 		mov	r3, #0
ARM GAS  /tmp/ccKa46D2.s 			page 40


 509 000a 7B60     		str	r3, [r7, #4]
 104:main.c        ****     uint32_t status;
 105:main.c        **** 
 106:main.c        ****     status = ADC_GetStatus(ADC);
 510              		.loc 2 106 0
 511 000c 4FF40043 		mov	r3, #32768
 512 0010 C4F20303 		movt	r3, 16387
 513 0014 1B6B     		ldr	r3, [r3, #48]
 514 0016 3B60     		str	r3, [r7, #0]
 107:main.c        **** 
 108:main.c        **** 	if ((status & ADC_ISR_RXBUFF) == ADC_ISR_RXBUFF) {
 515              		.loc 2 108 0
 516 0018 3B68     		ldr	r3, [r7, #0]
 517 001a 03F08053 		and	r3, r3, #268435456
 518 001e 002B     		cmp	r3, #0
 519 0020 42D0     		beq	.L26
 109:main.c        **** 		if (_state & (RUN|HOLD)) {
 520              		.loc 2 109 0
 521 0022 40F20003 		movw	r3, #:lower16:_state
 522 0026 C0F20003 		movt	r3, #:upper16:_state
 523 002a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 524 002c 03F00603 		and	r3, r3, #6
 525 0030 002B     		cmp	r3, #0
 526 0032 39D0     		beq	.L26
 110:main.c        **** 			control(LIMIT(input[AIN0], MINv, MAXv), &loop);
 527              		.loc 2 110 0
 528 0034 40F20003 		movw	r3, #:lower16:input
 529 0038 C0F20003 		movt	r3, #:upper16:input
 530 003c 1A88     		ldrh	r2, [r3, #0]
 531 003e 40F6FF73 		movw	r3, #4095
 532 0042 9A42     		cmp	r2, r3
 533 0044 38BF     		it	cc
 534 0046 1346     		movcc	r3, r2
 535 0048 9BB2     		uxth	r3, r3
 536 004a 1846     		mov	r0, r3
 537 004c 40F20001 		movw	r1, #:lower16:loop
 538 0050 C0F20001 		movt	r1, #:upper16:loop
 539 0054 FFF7FEFF 		bl	control
 111:main.c        **** 			if (loop.tristate != NULL) {
 540              		.loc 2 111 0
 541 0058 40F20003 		movw	r3, #:lower16:loop
 542 005c C0F20003 		movt	r3, #:upper16:loop
 543 0060 9B6A     		ldr	r3, [r3, #40]
 544 0062 002B     		cmp	r3, #0
 545 0064 20D0     		beq	.L26
 112:main.c        **** 				duty = loop.tristate->output * ((loop.output * PWM_PERIOD) / MAX);
 546              		.loc 2 112 0
 547 0066 40F20003 		movw	r3, #:lower16:loop
 548 006a C0F20003 		movt	r3, #:upper16:loop
 549 006e 9B6A     		ldr	r3, [r3, #40]
 550 0070 5968     		ldr	r1, [r3, #4]
 551 0072 40F20003 		movw	r3, #:lower16:loop
 552 0076 C0F20003 		movt	r3, #:upper16:loop
 553 007a DB8C     		ldrh	r3, [r3, #38]
 554 007c 1BB2     		sxth	r3, r3
 555 007e 4FF06402 		mov	r2, #100
 556 0082 02FB03F3 		mul	r3, r2, r3
ARM GAS  /tmp/ccKa46D2.s 			page 41


 557 0086 03F57E62 		add	r2, r3, #4064
 558 008a 02F11F02 		add	r2, r2, #31
 559 008e 002B     		cmp	r3, #0
 560 0090 B8BF     		it	lt
 561 0092 1346     		movlt	r3, r2
 562 0094 4FEA2333 		asr	r3, r3, #12
 563 0098 03F1FF33 		add	r3, r3, #-1
 564 009c 03FB01F3 		mul	r3, r3, r1
 565 00a0 7B60     		str	r3, [r7, #4]
 113:main.c        **** 				write_output(duty);
 566              		.loc 2 113 0
 567 00a2 7868     		ldr	r0, [r7, #4]
 568 00a4 FFF7FEFF 		bl	write_output
 569              	.L26:
 114:main.c        **** 			}
 115:main.c        **** 		}
 116:main.c        **** 	}
 117:main.c        **** }
 570              		.loc 2 117 0
 571 00a8 07F10807 		add	r7, r7, #8
 572 00ac BD46     		mov	sp, r7
 573 00ae 80BD     		pop	{r7, pc}
 574              		.cfi_endproc
 575              	.LFE37:
 576              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 577              		.section	.rodata
 578 0031 000000   		.align	2
 579              	.LC5:
 580 0034 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
 580      77616974 
 580      696E6720 
 580      756E7469 
 580      6C205553 
 581 005f 00       		.align	2
 582              	.LC2:
 583 0060 00000200 		.word	131072
 584 0064 000E0E40 		.word	1074662912
 585 0068 0B       		.byte	11
 586 0069 04       		.byte	4
 587 006a 00       		.byte	0
 588 006b 00       		.space	1
 589 006c 00000400 		.word	262144
 590 0070 000E0E40 		.word	1074662912
 591 0074 0B       		.byte	11
 592 0075 04       		.byte	4
 593 0076 00       		.byte	0
 594 0077 00       		.space	1
 595 0078 01000000 		.word	1
 596 007c 000E0E40 		.word	1074662912
 597 0080 0B       		.byte	11
 598 0081 00       		.byte	0
 599 0082 00       		.byte	0
 600 0083 00       		.space	1
 601 0084 02000000 		.word	2
 602 0088 000E0E40 		.word	1074662912
 603 008c 0B       		.byte	11
 604 008d 00       		.byte	0
ARM GAS  /tmp/ccKa46D2.s 			page 42


 605 008e 00       		.byte	0
 606 008f 00       		.space	1
 607 0090 04000000 		.word	4
 608 0094 000E0E40 		.word	1074662912
 609 0098 0B       		.byte	11
 610 0099 05       		.byte	5
 611 009a 00       		.byte	0
 612 009b 00       		.space	1
 613 009c 08000000 		.word	8
 614 00a0 000E0E40 		.word	1074662912
 615 00a4 0B       		.byte	11
 616 00a5 05       		.byte	5
 617 00a6 00       		.byte	0
 618 00a7 00       		.space	1
 619              		.section	.text.init,"ax",%progbits
 620              		.align	2
 621              		.thumb
 622              		.thumb_func
 623              		.type	init, %function
 624              	init:
 625              	.LFB38:
 118:main.c        **** 
 119:main.c        **** static void init()
 120:main.c        **** {
 626              		.loc 2 120 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 80
 629              		@ frame_needed = 1, uses_anonymous_args = 0
 630 0000 90B5     		push	{r4, r7, lr}
 631              	.LCFI14:
 632              		.cfi_def_cfa_offset 12
 633              		.cfi_offset 14, -4
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 4, -12
 636 0002 9BB0     		sub	sp, sp, #108
 637              	.LCFI15:
 638              		.cfi_def_cfa_offset 120
 639 0004 06AF     		add	r7, sp, #24
 640              	.LCFI16:
 641              		.cfi_def_cfa 7, 96
 121:main.c        ****     uint32_t div;
 122:main.c        ****     uint32_t tcclks;
 123:main.c        **** 	const Pin pins[] = {PINS_ADCIN, PINS_TPOUT, PINS_C3OUT};
 642              		.loc 2 123 0
 643 0006 40F20003 		movw	r3, #:lower16:.LC2
 644 000a C0F20003 		movt	r3, #:upper16:.LC2
 645 000e 3946     		mov	r1, r7
 646 0010 1A46     		mov	r2, r3
 647 0012 4FF04803 		mov	r3, #72
 648 0016 0846     		mov	r0, r1
 649 0018 1146     		mov	r1, r2
 650 001a 1A46     		mov	r2, r3
 651 001c FFF7FEFF 		bl	memcpy
 124:main.c        **** 
 125:main.c        **** 	/* PIO Configure */
 126:main.c        **** 	PIO_Configure(pins, PIO_LISTSIZE(pins));
 652              		.loc 2 126 0
ARM GAS  /tmp/ccKa46D2.s 			page 43


 653 0020 3B46     		mov	r3, r7
 654 0022 1846     		mov	r0, r3
 655 0024 4FF00601 		mov	r1, #6
 656 0028 FFF7FEFF 		bl	PIO_Configure
 127:main.c        **** 
 128:main.c        ****     /* Enable peripheral clocks */
 129:main.c        ****     PMC_EnablePeripheral(ID_TC1);
 657              		.loc 2 129 0
 658 002c 4FF01800 		mov	r0, #24
 659 0030 FFF7FEFF 		bl	PMC_EnablePeripheral
 130:main.c        ****     PMC_EnablePeripheral(ID_ADC);
 660              		.loc 2 130 0
 661 0034 4FF01D00 		mov	r0, #29
 662 0038 FFF7FEFF 		bl	PMC_EnablePeripheral
 131:main.c        ****     PMC_EnablePeripheral(ID_PWM);
 663              		.loc 2 131 0
 664 003c 4FF01F00 		mov	r0, #31
 665 0040 FFF7FEFF 		bl	PMC_EnablePeripheral
 132:main.c        **** 
 133:main.c        ****     /* Configure TC */
 134:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 666              		.loc 2 134 0
 667 0044 07F14C02 		add	r2, r7, #76
 668 0048 07F14804 		add	r4, r7, #72
 669 004c 4FF4D843 		mov	r3, #27648
 670 0050 C0F2DC23 		movt	r3, 732
 671 0054 0093     		str	r3, [sp, #0]
 672 0056 4FF00400 		mov	r0, #4
 673 005a 4FF4D841 		mov	r1, #27648
 674 005e C0F2DC21 		movt	r1, 732
 675 0062 2346     		mov	r3, r4
 676 0064 FFF7FEFF 		bl	TC_FindMckDivisor
 135:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 677              		.loc 2 135 0
 678 0068 BB6C     		ldr	r3, [r7, #72]
 679 006a 43F48043 		orr	r3, r3, #16384
 680 006e 4FF48040 		mov	r0, #16384
 681 0072 C4F20100 		movt	r0, 16385
 682 0076 4FF00001 		mov	r1, #0
 683 007a 1A46     		mov	r2, r3
 684 007c FFF7FEFF 		bl	TC_Configure
 136:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
 685              		.loc 2 136 0
 686 0080 4FF48043 		mov	r3, #16384
 687 0084 C4F20103 		movt	r3, 16385
 688 0088 F96C     		ldr	r1, [r7, #76]
 689 008a 4FF4D852 		mov	r2, #6912
 690 008e C0F2B702 		movt	r2, 183
 691 0092 B2FBF1F2 		udiv	r2, r2, r1
 692 0096 DA61     		str	r2, [r3, #28]
 137:main.c        **** 	TC_Start(TC1, 0);
 693              		.loc 2 137 0
 694 0098 4FF48040 		mov	r0, #16384
 695 009c C4F20100 		movt	r0, 16385
 696 00a0 4FF00001 		mov	r1, #0
 697 00a4 FFF7FEFF 		bl	TC_Start
 138:main.c        **** 
ARM GAS  /tmp/ccKa46D2.s 			page 44


 139:main.c        ****     NVIC_EnableIRQ(TC1_IRQn);
 698              		.loc 2 139 0
 699 00a8 4FF01800 		mov	r0, #24
 700 00ac FFF7FEFF 		bl	NVIC_EnableIRQ
 140:main.c        ****     NVIC_SetPriority(TC1_IRQn, 1);
 701              		.loc 2 140 0
 702 00b0 4FF01800 		mov	r0, #24
 703 00b4 4FF00101 		mov	r1, #1
 704 00b8 FFF7FEFF 		bl	NVIC_SetPriority
 141:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 705              		.loc 2 141 0
 706 00bc 4FF48043 		mov	r3, #16384
 707 00c0 C4F20103 		movt	r3, 16385
 708 00c4 4FF01002 		mov	r2, #16
 709 00c8 5A62     		str	r2, [r3, #36]
 142:main.c        **** 
 143:main.c        ****     /* Initialize ADC */
 144:main.c        ****     ADC_Initialize(ADC, ID_ADC);
 710              		.loc 2 144 0
 711 00ca 4FF40040 		mov	r0, #32768
 712 00ce C4F20300 		movt	r0, 16387
 713 00d2 4FF01D01 		mov	r1, #29
 714 00d6 FFF7FEFF 		bl	ADC_Initialize
 145:main.c        ****     ADC_cfgFrequency(ADC, 15, 4 ); // startup = 15, prescal = 4, ADC clock = 6.4 MHz
 715              		.loc 2 145 0
 716 00da 4FF40040 		mov	r0, #32768
 717 00de C4F20300 		movt	r0, 16387
 718 00e2 4FF00F01 		mov	r1, #15
 719 00e6 4FF00402 		mov	r2, #4
 720 00ea FFF7FEFF 		bl	ADC_cfgFrequency
 146:main.c        **** 
 147:main.c        ****     ADC_EnableChannel(ADC, AIN0);
 721              		.loc 2 147 0
 722 00ee 4FF40043 		mov	r3, #32768
 723 00f2 C4F20303 		movt	r3, 16387
 724 00f6 4FF00102 		mov	r2, #1
 725 00fa 1A61     		str	r2, [r3, #16]
 148:main.c        ****     ADC_EnableChannel(ADC, AIN1);
 726              		.loc 2 148 0
 727 00fc 4FF40043 		mov	r3, #32768
 728 0100 C4F20303 		movt	r3, 16387
 729 0104 4FF00202 		mov	r2, #2
 730 0108 1A61     		str	r2, [r3, #16]
 149:main.c        **** 	ADC_StartConversion(ADC);
 731              		.loc 2 149 0
 732 010a 4FF40043 		mov	r3, #32768
 733 010e C4F20303 		movt	r3, 16387
 734 0112 4FF00202 		mov	r2, #2
 735 0116 1A60     		str	r2, [r3, #0]
 150:main.c        ****     ADC_ReadBuffer(ADC, (int16_t*) input, NUM_AIN);
 736              		.loc 2 150 0
 737 0118 4FF40040 		mov	r0, #32768
 738 011c C4F20300 		movt	r0, 16387
 739 0120 40F20001 		movw	r1, #:lower16:input
 740 0124 C0F20001 		movt	r1, #:upper16:input
 741 0128 4FF00202 		mov	r2, #2
 742 012c FFF7FEFF 		bl	ADC_ReadBuffer
ARM GAS  /tmp/ccKa46D2.s 			page 45


 151:main.c        **** 
 152:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
 743              		.loc 2 152 0
 744 0130 4FF01D00 		mov	r0, #29
 745 0134 FFF7FEFF 		bl	NVIC_EnableIRQ
 153:main.c        **** 	NVIC_SetPriority(ADC_IRQn, 0);
 746              		.loc 2 153 0
 747 0138 4FF01D00 		mov	r0, #29
 748 013c 4FF00001 		mov	r1, #0
 749 0140 FFF7FEFF 		bl	NVIC_SetPriority
 154:main.c        ****     ADC_EnableIt(ADC,ADC_IER_RXBUFF);
 750              		.loc 2 154 0
 751 0144 4FF40043 		mov	r3, #32768
 752 0148 C4F20303 		movt	r3, 16387
 753 014c 4FF08052 		mov	r2, #268435456
 754 0150 5A62     		str	r2, [r3, #36]
 155:main.c        **** 
 156:main.c        ****     /* Configure PWMC channels */
 157:main.c        ****     PWMC_ConfigureClocks(PWM_FREQ * PWM_PERIOD, 0, BOARD_MCK);
 755              		.loc 2 157 0
 756 0152 4FF4FA60 		mov	r0, #2000
 757 0156 4FF00001 		mov	r1, #0
 758 015a 4FF4D842 		mov	r2, #27648
 759 015e C0F2DC22 		movt	r2, 732
 760 0162 FFF7FEFF 		bl	PWMC_ConfigureClocks
 158:main.c        ****     PWMC_ConfigureChannelExt(PWM, TPOUT_up, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 761              		.loc 2 158 0
 762 0166 4FF00103 		mov	r3, #1
 763 016a 0093     		str	r3, [sp, #0]
 764 016c 4FF00003 		mov	r3, #0
 765 0170 0193     		str	r3, [sp, #4]
 766 0172 4FF00003 		mov	r3, #0
 767 0176 0293     		str	r3, [sp, #8]
 768 0178 4FF00003 		mov	r3, #0
 769 017c 0393     		str	r3, [sp, #12]
 770 017e 4FF00003 		mov	r3, #0
 771 0182 0493     		str	r3, [sp, #16]
 772 0184 4FF00000 		mov	r0, #0
 773 0188 C4F20200 		movt	r0, 16386
 774 018c 4FF00001 		mov	r1, #0
 775 0190 4FF00B02 		mov	r2, #11
 776 0194 4FF00003 		mov	r3, #0
 777 0198 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
 159:main.c        ****     PWMC_ConfigureChannelExt(PWM, TPOUT_down, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 778              		.loc 2 159 0
 779 019c 4FF00103 		mov	r3, #1
 780 01a0 0093     		str	r3, [sp, #0]
 781 01a2 4FF00003 		mov	r3, #0
 782 01a6 0193     		str	r3, [sp, #4]
 783 01a8 4FF00003 		mov	r3, #0
 784 01ac 0293     		str	r3, [sp, #8]
 785 01ae 4FF00003 		mov	r3, #0
 786 01b2 0393     		str	r3, [sp, #12]
 787 01b4 4FF00003 		mov	r3, #0
 788 01b8 0493     		str	r3, [sp, #16]
 789 01ba 4FF00000 		mov	r0, #0
 790 01be C4F20200 		movt	r0, 16386
ARM GAS  /tmp/ccKa46D2.s 			page 46


 791 01c2 4FF00101 		mov	r1, #1
 792 01c6 4FF00B02 		mov	r2, #11
 793 01ca 4FF00003 		mov	r3, #0
 794 01ce FFF7FEFF 		bl	PWMC_ConfigureChannelExt
 160:main.c        **** 
 161:main.c        ****     PWMC_SetPeriod(PWM, TPOUT_up, PWM_PERIOD);
 795              		.loc 2 161 0
 796 01d2 4FF00000 		mov	r0, #0
 797 01d6 C4F20200 		movt	r0, 16386
 798 01da 4FF00001 		mov	r1, #0
 799 01de 4FF06402 		mov	r2, #100
 800 01e2 FFF7FEFF 		bl	PWMC_SetPeriod
 162:main.c        ****     PWMC_SetDutyCycle(PWM, TPOUT_up, 0);
 801              		.loc 2 162 0
 802 01e6 4FF00000 		mov	r0, #0
 803 01ea C4F20200 		movt	r0, 16386
 804 01ee 4FF00001 		mov	r1, #0
 805 01f2 4FF00002 		mov	r2, #0
 806 01f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
 163:main.c        ****     PWMC_SetPeriod(PWM, TPOUT_down, PWM_PERIOD);
 807              		.loc 2 163 0
 808 01fa 4FF00000 		mov	r0, #0
 809 01fe C4F20200 		movt	r0, 16386
 810 0202 4FF00101 		mov	r1, #1
 811 0206 4FF06402 		mov	r2, #100
 812 020a FFF7FEFF 		bl	PWMC_SetPeriod
 164:main.c        ****     PWMC_SetDutyCycle(PWM, TPOUT_down, 0);
 813              		.loc 2 164 0
 814 020e 4FF00000 		mov	r0, #0
 815 0212 C4F20200 		movt	r0, 16386
 816 0216 4FF00101 		mov	r1, #1
 817 021a 4FF00002 		mov	r2, #0
 818 021e FFF7FEFF 		bl	PWMC_SetDutyCycle
 165:main.c        **** 
 166:main.c        ****     PWMC_ConfigureSyncChannel(PWM, (1 << TPOUT_up)|(1 << TPOUT_down), PWM_SCM_UPDM_MODE1, 0, 0);
 819              		.loc 2 166 0
 820 0222 4FF00003 		mov	r3, #0
 821 0226 0093     		str	r3, [sp, #0]
 822 0228 4FF00000 		mov	r0, #0
 823 022c C4F20200 		movt	r0, 16386
 824 0230 4FF00301 		mov	r1, #3
 825 0234 4FF48032 		mov	r2, #65536
 826 0238 4FF00003 		mov	r3, #0
 827 023c FFF7FEFF 		bl	PWMC_ConfigureSyncChannel
 167:main.c        ****     PWMC_SetSyncChannelUpdatePeriod(PWM, PWM_SCUP_UPR(1));
 828              		.loc 2 167 0
 829 0240 4FF00000 		mov	r0, #0
 830 0244 C4F20200 		movt	r0, 16386
 831 0248 4FF00101 		mov	r1, #1
 832 024c FFF7FEFF 		bl	PWMC_SetSyncChannelUpdatePeriod
 168:main.c        **** 
 169:main.c        **** 	/* USB Console Config */
 170:main.c        **** 	USBC_Configure();
 833              		.loc 2 170 0
 834 0250 FFF7FEFF 		bl	USBC_Configure
 171:main.c        **** 
 172:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
ARM GAS  /tmp/ccKa46D2.s 			page 47


 835              		.loc 2 172 0
 836 0254 40F20003 		movw	r3, #:lower16:_impure_ptr
 837 0258 C0F20003 		movt	r3, #:upper16:_impure_ptr
 838 025c 1B68     		ldr	r3, [r3, #0]
 839 025e DB68     		ldr	r3, [r3, #12]
 840 0260 1846     		mov	r0, r3
 841 0262 40F20001 		movw	r1, #:lower16:.LC5
 842 0266 C0F20001 		movt	r1, #:upper16:.LC5
 843 026a FFF7FEFF 		bl	fiprintf
 173:main.c        **** 	while (!USBC_isConfigured());
 844              		.loc 2 173 0
 845 026e 00BF     		nop
 846              	.L29:
 847              		.loc 2 173 0 is_stmt 0 discriminator 1
 848 0270 FFF7FEFF 		bl	USBC_isConfigured
 849 0274 0346     		mov	r3, r0
 850 0276 002B     		cmp	r3, #0
 851 0278 FAD0     		beq	.L29
 174:main.c        **** 	setbuf(stdout, NULL);
 852              		.loc 2 174 0 is_stmt 1
 853 027a 40F20003 		movw	r3, #:lower16:_impure_ptr
 854 027e C0F20003 		movt	r3, #:upper16:_impure_ptr
 855 0282 1B68     		ldr	r3, [r3, #0]
 856 0284 9B68     		ldr	r3, [r3, #8]
 857 0286 1846     		mov	r0, r3
 858 0288 4FF00001 		mov	r1, #0
 859 028c FFF7FEFF 		bl	setbuf
 175:main.c        **** }
 860              		.loc 2 175 0
 861 0290 07F15407 		add	r7, r7, #84
 862 0294 BD46     		mov	sp, r7
 863 0296 90BD     		pop	{r4, r7, pc}
 864              		.cfi_endproc
 865              	.LFE38:
 866              		.size	init, .-init
 867              		.section	.rodata
 868              		.align	2
 869              	.LC0:
 870 00a8 04000000 		.word	4
 871 00ac 000E0E40 		.word	1074662912
 872 00b0 0B       		.byte	11
 873 00b1 05       		.byte	5
 874 00b2 00       		.byte	0
 875 00b3 00       		.space	1
 876              		.align	2
 877              	.LC1:
 878 00b4 08000000 		.word	8
 879 00b8 000E0E40 		.word	1074662912
 880 00bc 0B       		.byte	11
 881 00bd 05       		.byte	5
 882 00be 00       		.byte	0
 883 00bf 00       		.space	1
 884              		.section	.text.write_output,"ax",%progbits
 885              		.align	2
 886              		.thumb
 887              		.thumb_func
 888              		.type	write_output, %function
ARM GAS  /tmp/ccKa46D2.s 			page 48


 889              	write_output:
 890              	.LFB39:
 176:main.c        **** 
 177:main.c        **** static void write_output(int32_t value)
 178:main.c        **** {
 891              		.loc 2 178 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 32
 894              		@ frame_needed = 1, uses_anonymous_args = 0
 895 0000 90B5     		push	{r4, r7, lr}
 896              	.LCFI17:
 897              		.cfi_def_cfa_offset 12
 898              		.cfi_offset 14, -4
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 4, -12
 901 0002 89B0     		sub	sp, sp, #36
 902              	.LCFI18:
 903              		.cfi_def_cfa_offset 48
 904 0004 00AF     		add	r7, sp, #0
 905              	.LCFI19:
 906              		.cfi_def_cfa_register 7
 907 0006 7860     		str	r0, [r7, #4]
 179:main.c        **** 	const Pin up   = PIN_C3OUT_up;
 908              		.loc 2 179 0
 909 0008 40F20003 		movw	r3, #:lower16:.LC0
 910 000c C0F20003 		movt	r3, #:upper16:.LC0
 911 0010 07F11404 		add	r4, r7, #20
 912 0014 93E80700 		ldmia	r3, {r0, r1, r2}
 913 0018 84E80700 		stmia	r4, {r0, r1, r2}
 180:main.c        **** 	const Pin down = PIN_C3OUT_down;
 914              		.loc 2 180 0
 915 001c 40F20003 		movw	r3, #:lower16:.LC1
 916 0020 C0F20003 		movt	r3, #:upper16:.LC1
 917 0024 07F10804 		add	r4, r7, #8
 918 0028 93E80700 		ldmia	r3, {r0, r1, r2}
 919 002c 84E80700 		stmia	r4, {r0, r1, r2}
 181:main.c        **** 
 182:main.c        **** 	if (value > 0){
 920              		.loc 2 182 0
 921 0030 7B68     		ldr	r3, [r7, #4]
 922 0032 002B     		cmp	r3, #0
 923 0034 1FDD     		ble	.L31
 183:main.c        **** 		PWMC_SetDutyCycle(PWM, TPOUT_up, 0);
 924              		.loc 2 183 0
 925 0036 4FF00000 		mov	r0, #0
 926 003a C4F20200 		movt	r0, 16386
 927 003e 4FF00001 		mov	r1, #0
 928 0042 4FF00002 		mov	r2, #0
 929 0046 FFF7FEFF 		bl	PWMC_SetDutyCycle
 184:main.c        **** 		PWMC_SetDutyCycle(PWM, TPOUT_down, value);
 930              		.loc 2 184 0
 931 004a 7B68     		ldr	r3, [r7, #4]
 932 004c 9BB2     		uxth	r3, r3
 933 004e 4FF00000 		mov	r0, #0
 934 0052 C4F20200 		movt	r0, 16386
 935 0056 4FF00101 		mov	r1, #1
 936 005a 1A46     		mov	r2, r3
ARM GAS  /tmp/ccKa46D2.s 			page 49


 937 005c FFF7FEFF 		bl	PWMC_SetDutyCycle
 185:main.c        **** 		PIO_Set(&down);
 938              		.loc 2 185 0
 939 0060 07F10803 		add	r3, r7, #8
 940 0064 1846     		mov	r0, r3
 941 0066 FFF7FEFF 		bl	PIO_Set
 186:main.c        **** 		PIO_Clear(&up);
 942              		.loc 2 186 0
 943 006a 07F11403 		add	r3, r7, #20
 944 006e 1846     		mov	r0, r3
 945 0070 FFF7FEFF 		bl	PIO_Clear
 946 0074 40E0     		b	.L30
 947              	.L31:
 187:main.c        **** 	}
 188:main.c        **** 	else if (value < 0) {
 948              		.loc 2 188 0
 949 0076 7B68     		ldr	r3, [r7, #4]
 950 0078 002B     		cmp	r3, #0
 951 007a 1FDA     		bge	.L33
 189:main.c        **** 		PWMC_SetDutyCycle(PWM, TPOUT_up, value);
 952              		.loc 2 189 0
 953 007c 7B68     		ldr	r3, [r7, #4]
 954 007e 9BB2     		uxth	r3, r3
 955 0080 4FF00000 		mov	r0, #0
 956 0084 C4F20200 		movt	r0, 16386
 957 0088 4FF00001 		mov	r1, #0
 958 008c 1A46     		mov	r2, r3
 959 008e FFF7FEFF 		bl	PWMC_SetDutyCycle
 190:main.c        **** 		PWMC_SetDutyCycle(PWM, TPOUT_down, 0);
 960              		.loc 2 190 0
 961 0092 4FF00000 		mov	r0, #0
 962 0096 C4F20200 		movt	r0, 16386
 963 009a 4FF00101 		mov	r1, #1
 964 009e 4FF00002 		mov	r2, #0
 965 00a2 FFF7FEFF 		bl	PWMC_SetDutyCycle
 191:main.c        **** 		PIO_Set(&up);
 966              		.loc 2 191 0
 967 00a6 07F11403 		add	r3, r7, #20
 968 00aa 1846     		mov	r0, r3
 969 00ac FFF7FEFF 		bl	PIO_Set
 192:main.c        **** 		PIO_Clear(&down);
 970              		.loc 2 192 0
 971 00b0 07F10803 		add	r3, r7, #8
 972 00b4 1846     		mov	r0, r3
 973 00b6 FFF7FEFF 		bl	PIO_Clear
 974 00ba 1DE0     		b	.L30
 975              	.L33:
 193:main.c        **** 	}
 194:main.c        **** 	else {
 195:main.c        **** 		PWMC_SetDutyCycle(PWM, TPOUT_up, 0);
 976              		.loc 2 195 0
 977 00bc 4FF00000 		mov	r0, #0
 978 00c0 C4F20200 		movt	r0, 16386
 979 00c4 4FF00001 		mov	r1, #0
 980 00c8 4FF00002 		mov	r2, #0
 981 00cc FFF7FEFF 		bl	PWMC_SetDutyCycle
 196:main.c        **** 		PWMC_SetDutyCycle(PWM, TPOUT_down, 0);
ARM GAS  /tmp/ccKa46D2.s 			page 50


 982              		.loc 2 196 0
 983 00d0 4FF00000 		mov	r0, #0
 984 00d4 C4F20200 		movt	r0, 16386
 985 00d8 4FF00101 		mov	r1, #1
 986 00dc 4FF00002 		mov	r2, #0
 987 00e0 FFF7FEFF 		bl	PWMC_SetDutyCycle
 197:main.c        **** 		PIO_Clear(&up);
 988              		.loc 2 197 0
 989 00e4 07F11403 		add	r3, r7, #20
 990 00e8 1846     		mov	r0, r3
 991 00ea FFF7FEFF 		bl	PIO_Clear
 198:main.c        **** 		PIO_Clear(&down);
 992              		.loc 2 198 0
 993 00ee 07F10803 		add	r3, r7, #8
 994 00f2 1846     		mov	r0, r3
 995 00f4 FFF7FEFF 		bl	PIO_Clear
 996              	.L30:
 199:main.c        **** 	}
 200:main.c        **** }
 997              		.loc 2 200 0
 998 00f8 07F12407 		add	r7, r7, #36
 999 00fc BD46     		mov	sp, r7
 1000 00fe 90BD     		pop	{r4, r7, pc}
 1001              		.cfi_endproc
 1002              	.LFE39:
 1003              		.size	write_output, .-write_output
 1004              		.section	.rodata
 1005              		.align	2
 1006              	.LC6:
 1007 00c0 2D442D20 		.ascii	"-D- set state STOPPED\012\000"
 1007      73657420 
 1007      73746174 
 1007      65205354 
 1007      4F505045 
 1008 00d7 00       		.align	2
 1009              	.LC7:
 1010 00d8 2D442D20 		.ascii	"-D- set state RUN\012\000"
 1010      73657420 
 1010      73746174 
 1010      65205255 
 1010      4E0A00
 1011 00eb 00       		.align	2
 1012              	.LC8:
 1013 00ec 2D442D20 		.ascii	"-D- set state HOLD\012\000"
 1013      73657420 
 1013      73746174 
 1013      6520484F 
 1013      4C440A00 
 1014              		.align	2
 1015              	.LC9:
 1016 0100 2D442D20 		.ascii	"-D- set state RELEASE\012\000"
 1016      73657420 
 1016      73746174 
 1016      65205245 
 1016      4C454153 
 1017 0117 00       		.align	2
 1018              	.LC10:
ARM GAS  /tmp/ccKa46D2.s 			page 51


 1019 0118 2D442D20 		.ascii	"-D- got invalid state\012\000"
 1019      676F7420 
 1019      696E7661 
 1019      6C696420 
 1019      73746174 
 1020              		.section	.text.state,"ax",%progbits
 1021              		.align	2
 1022              		.thumb
 1023              		.thumb_func
 1024              		.type	state, %function
 1025              	state:
 1026              	.LFB40:
 201:main.c        **** 
 202:main.c        **** static void state(uint8_t new) 
 203:main.c        **** {
 1027              		.loc 2 203 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 8
 1030              		@ frame_needed = 1, uses_anonymous_args = 0
 1031 0000 80B5     		push	{r7, lr}
 1032              	.LCFI20:
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 14, -4
 1035              		.cfi_offset 7, -8
 1036 0002 82B0     		sub	sp, sp, #8
 1037              	.LCFI21:
 1038              		.cfi_def_cfa_offset 16
 1039 0004 00AF     		add	r7, sp, #0
 1040              	.LCFI22:
 1041              		.cfi_def_cfa_register 7
 1042 0006 0346     		mov	r3, r0
 1043 0008 FB71     		strb	r3, [r7, #7]
 204:main.c        **** 	switch (new) {
 1044              		.loc 2 204 0
 1045 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1046 000c 03F1FF33 		add	r3, r3, #-1
 1047 0010 072B     		cmp	r3, #7
 1048 0012 00F29380 		bhi	.L35
 1049 0016 01A2     		adr	r2, .L40
 1050 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1051              		.align	2
 1052              	.L40:
 1053 001c 3D000000 		.word	.L36+1
 1054 0020 79000000 		.word	.L37+1
 1055 0024 3D010000 		.word	.L35+1
 1056 0028 B7000000 		.word	.L38+1
 1057 002c 3D010000 		.word	.L35+1
 1058 0030 3D010000 		.word	.L35+1
 1059 0034 3D010000 		.word	.L35+1
 1060 0038 09010000 		.word	.L39+1
 1061              	.L36:
 205:main.c        **** 		case STOPPED:
 206:main.c        **** 			LED_clr(STATUS);
 1062              		.loc 2 206 0
 1063 003c 4FF00000 		mov	r0, #0
 1064 0040 FFF7FEFF 		bl	LED_clr
 207:main.c        **** 			mode(STOP, &loop);
ARM GAS  /tmp/ccKa46D2.s 			page 52


 1065              		.loc 2 207 0
 1066 0044 4FF00300 		mov	r0, #3
 1067 0048 40F20001 		movw	r1, #:lower16:loop
 1068 004c C0F20001 		movt	r1, #:upper16:loop
 1069 0050 FFF7FEFF 		bl	mode
 208:main.c        **** 			write_output(NONE);
 1070              		.loc 2 208 0
 1071 0054 4FF00000 		mov	r0, #0
 1072 0058 FFF7FEFF 		bl	write_output
 209:main.c        **** 			TRACE_DEBUG("set state STOPPED\n");
 1073              		.loc 2 209 0
 1074 005c 40F20003 		movw	r3, #:lower16:_impure_ptr
 1075 0060 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1076 0064 1B68     		ldr	r3, [r3, #0]
 1077 0066 DB68     		ldr	r3, [r3, #12]
 1078 0068 1846     		mov	r0, r3
 1079 006a 40F20001 		movw	r1, #:lower16:.LC6
 1080 006e C0F20001 		movt	r1, #:upper16:.LC6
 1081 0072 FFF7FEFF 		bl	fiprintf
 210:main.c        **** 			break;
 1082              		.loc 2 210 0
 1083 0076 72E0     		b	.L41
 1084              	.L37:
 211:main.c        **** 		case RUN:
 212:main.c        **** 			loop.tristate = &rtrip;
 1085              		.loc 2 212 0
 1086 0078 40F20003 		movw	r3, #:lower16:loop
 1087 007c C0F20003 		movt	r3, #:upper16:loop
 1088 0080 40F20002 		movw	r2, #:lower16:rtrip
 1089 0084 C0F20002 		movt	r2, #:upper16:rtrip
 1090 0088 9A62     		str	r2, [r3, #40]
 213:main.c        **** 			mode(RAMP, &loop);
 1091              		.loc 2 213 0
 1092 008a 4FF00200 		mov	r0, #2
 1093 008e 40F20001 		movw	r1, #:lower16:loop
 1094 0092 C0F20001 		movt	r1, #:upper16:loop
 1095 0096 FFF7FEFF 		bl	mode
 214:main.c        **** 			TRACE_DEBUG("set state RUN\n");
 1096              		.loc 2 214 0
 1097 009a 40F20003 		movw	r3, #:lower16:_impure_ptr
 1098 009e C0F20003 		movt	r3, #:upper16:_impure_ptr
 1099 00a2 1B68     		ldr	r3, [r3, #0]
 1100 00a4 DB68     		ldr	r3, [r3, #12]
 1101 00a6 1846     		mov	r0, r3
 1102 00a8 40F20001 		movw	r1, #:lower16:.LC7
 1103 00ac C0F20001 		movt	r1, #:upper16:.LC7
 1104 00b0 FFF7FEFF 		bl	fiprintf
 215:main.c        **** 			break;
 1105              		.loc 2 215 0
 1106 00b4 53E0     		b	.L41
 1107              	.L38:
 216:main.c        **** 		case HOLD:
 217:main.c        **** 			loop.tristate = &ntrip;
 1108              		.loc 2 217 0
 1109 00b6 40F20003 		movw	r3, #:lower16:loop
 1110 00ba C0F20003 		movt	r3, #:upper16:loop
 1111 00be 40F20002 		movw	r2, #:lower16:ntrip
ARM GAS  /tmp/ccKa46D2.s 			page 53


 1112 00c2 C0F20002 		movt	r2, #:upper16:ntrip
 1113 00c6 9A62     		str	r2, [r3, #40]
 218:main.c        **** 			loop.SP = loop._x;
 1114              		.loc 2 218 0
 1115 00c8 40F20003 		movw	r3, #:lower16:loop
 1116 00cc C0F20003 		movt	r3, #:upper16:loop
 1117 00d0 9A8C     		ldrh	r2, [r3, #36]
 1118 00d2 40F20003 		movw	r3, #:lower16:loop
 1119 00d6 C0F20003 		movt	r3, #:upper16:loop
 1120 00da 5A80     		strh	r2, [r3, #2]	@ movhi
 219:main.c        **** 			mode(NORMAL, &loop);
 1121              		.loc 2 219 0
 1122 00dc 4FF00100 		mov	r0, #1
 1123 00e0 40F20001 		movw	r1, #:lower16:loop
 1124 00e4 C0F20001 		movt	r1, #:upper16:loop
 1125 00e8 FFF7FEFF 		bl	mode
 220:main.c        **** 			TRACE_DEBUG("set state HOLD\n");
 1126              		.loc 2 220 0
 1127 00ec 40F20003 		movw	r3, #:lower16:_impure_ptr
 1128 00f0 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1129 00f4 1B68     		ldr	r3, [r3, #0]
 1130 00f6 DB68     		ldr	r3, [r3, #12]
 1131 00f8 1846     		mov	r0, r3
 1132 00fa 40F20001 		movw	r1, #:lower16:.LC8
 1133 00fe C0F20001 		movt	r1, #:upper16:.LC8
 1134 0102 FFF7FEFF 		bl	fiprintf
 221:main.c        **** 			break;
 1135              		.loc 2 221 0
 1136 0106 2AE0     		b	.L41
 1137              	.L39:
 222:main.c        **** 		case RELEASE:
 223:main.c        **** 			write_output(UP * PWM_PERIOD);
 1138              		.loc 2 223 0
 1139 0108 6FF06300 		mvn	r0, #99
 1140 010c FFF7FEFF 		bl	write_output
 224:main.c        **** 			mode(STOP, &loop);
 1141              		.loc 2 224 0
 1142 0110 4FF00300 		mov	r0, #3
 1143 0114 40F20001 		movw	r1, #:lower16:loop
 1144 0118 C0F20001 		movt	r1, #:upper16:loop
 1145 011c FFF7FEFF 		bl	mode
 225:main.c        **** 			TRACE_DEBUG("set state RELEASE\n");
 1146              		.loc 2 225 0
 1147 0120 40F20003 		movw	r3, #:lower16:_impure_ptr
 1148 0124 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1149 0128 1B68     		ldr	r3, [r3, #0]
 1150 012a DB68     		ldr	r3, [r3, #12]
 1151 012c 1846     		mov	r0, r3
 1152 012e 40F20001 		movw	r1, #:lower16:.LC9
 1153 0132 C0F20001 		movt	r1, #:upper16:.LC9
 1154 0136 FFF7FEFF 		bl	fiprintf
 226:main.c        **** 			break;
 1155              		.loc 2 226 0
 1156 013a 10E0     		b	.L41
 1157              	.L35:
 227:main.c        **** 		default:
 228:main.c        **** 			TRACE_DEBUG("got invalid state\n");
ARM GAS  /tmp/ccKa46D2.s 			page 54


 1158              		.loc 2 228 0
 1159 013c 40F20003 		movw	r3, #:lower16:_impure_ptr
 1160 0140 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1161 0144 1B68     		ldr	r3, [r3, #0]
 1162 0146 DB68     		ldr	r3, [r3, #12]
 1163 0148 1846     		mov	r0, r3
 1164 014a 40F20001 		movw	r1, #:lower16:.LC10
 1165 014e C0F20001 		movt	r1, #:upper16:.LC10
 1166 0152 FFF7FEFF 		bl	fiprintf
 229:main.c        **** 			state(STOPPED);
 1167              		.loc 2 229 0
 1168 0156 4FF00100 		mov	r0, #1
 1169 015a FFF751FF 		bl	state
 1170              	.L41:
 230:main.c        **** 	}
 231:main.c        **** 	_state = new;
 1171              		.loc 2 231 0
 1172 015e 40F20003 		movw	r3, #:lower16:_state
 1173 0162 C0F20003 		movt	r3, #:upper16:_state
 1174 0166 FA79     		ldrb	r2, [r7, #7]
 1175 0168 1A70     		strb	r2, [r3, #0]
 232:main.c        **** }
 1176              		.loc 2 232 0
 1177 016a 07F10807 		add	r7, r7, #8
 1178 016e BD46     		mov	sp, r7
 1179 0170 80BD     		pop	{r7, pc}
 1180              		.cfi_endproc
 1181              	.LFE40:
 1182              		.size	state, .-state
 1183 0172 00BF     		.section	.rodata
 1184 012f 00       		.align	2
 1185              	.LC11:
 1186 0130 25632025 		.ascii	"%c %u %u %u\000"
 1186      75202575 
 1186      20257500 
 1187              		.align	2
 1188              	.LC12:
 1189 013c 2D442D20 		.ascii	"-D- got %i arguments\000"
 1189      676F7420 
 1189      25692061 
 1189      7267756D 
 1189      656E7473 
 1190 0151 000000   		.align	2
 1191              	.LC13:
 1192 0154 25752025 		.ascii	"%u %u %u\012\000"
 1192      75202575 
 1192      0A00
 1193 015e 0000     		.align	2
 1194              	.LC14:
 1195 0160 2D492D20 		.ascii	"-I- set ramp endpoint to %u\012\000"
 1195      73657420 
 1195      72616D70 
 1195      20656E64 
 1195      706F696E 
 1196 017d 000000   		.align	2
 1197              	.LC15:
 1198 0180 25750A00 		.ascii	"%u\012\000"
ARM GAS  /tmp/ccKa46D2.s 			page 55


 1199              		.align	2
 1200              	.LC16:
 1201 0184 2D492D20 		.ascii	"-I- set ramp slope to %i\012\000"
 1201      73657420 
 1201      72616D70 
 1201      20736C6F 
 1201      70652074 
 1202 019e 0000     		.align	2
 1203              	.LC17:
 1204 01a0 25690A00 		.ascii	"%i\012\000"
 1205              		.align	2
 1206              	.LC18:
 1207 01a4 2D492D20 		.ascii	"-I- set PID factors to %u, %u, %u\012\000"
 1207      73657420 
 1207      50494420 
 1207      66616374 
 1207      6F727320 
 1208 01c7 00       		.align	2
 1209              	.LC19:
 1210 01c8 2D492D20 		.ascii	"-I- set releasetime to %u\012\000"
 1210      73657420 
 1210      72656C65 
 1210      61736574 
 1210      696D6520 
 1211 01e3 00       		.align	2
 1212              	.LC20:
 1213 01e4 2D492D20 		.ascii	"-I- set dxmax to %u\012\000"
 1213      73657420 
 1213      64786D61 
 1213      7820746F 
 1213      2025750A 
 1214 01f9 000000   		.align	2
 1215              	.LC21:
 1216 01fc 2D492D20 		.ascii	"-I- set setpoint to %u\012\000"
 1216      73657420 
 1216      73657470 
 1216      6F696E74 
 1216      20746F20 
 1217              		.section	.text.cli,"ax",%progbits
 1218              		.align	2
 1219              		.thumb
 1220              		.thumb_func
 1221              		.type	cli, %function
 1222              	cli:
 1223              	.LFB41:
 233:main.c        **** 
 234:main.c        **** static void cli()
 235:main.c        **** {
 1224              		.loc 2 235 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 56
 1227              		@ frame_needed = 1, uses_anonymous_args = 0
 1228 0000 90B5     		push	{r4, r7, lr}
 1229              	.LCFI23:
 1230              		.cfi_def_cfa_offset 12
 1231              		.cfi_offset 14, -4
 1232              		.cfi_offset 7, -8
ARM GAS  /tmp/ccKa46D2.s 			page 56


 1233              		.cfi_offset 4, -12
 1234 0002 91B0     		sub	sp, sp, #68
 1235              	.LCFI24:
 1236              		.cfi_def_cfa_offset 80
 1237 0004 02AF     		add	r7, sp, #8
 1238              	.LCFI25:
 1239              		.cfi_def_cfa 7, 72
 236:main.c        **** 	int argc;
 237:main.c        **** 	int argv[3];
 238:main.c        **** 	char line[32];
 239:main.c        **** 	char cmd = 0;
 1240              		.loc 2 239 0
 1241 0006 4FF00003 		mov	r3, #0
 1242 000a FB71     		strb	r3, [r7, #7]
 240:main.c        **** 
 241:main.c        **** 	if (!USBC_hasData())
 1243              		.loc 2 241 0
 1244 000c FFF7FEFF 		bl	USBC_hasData
 1245 0010 0346     		mov	r3, r0
 1246 0012 002B     		cmp	r3, #0
 1247 0014 00F0CF81 		beq	.L70
 1248              	.L43:
 242:main.c        **** 		return;
 243:main.c        **** 
 244:main.c        **** 	gets(line);
 1249              		.loc 2 244 0
 1250 0018 07F10803 		add	r3, r7, #8
 1251 001c 1846     		mov	r0, r3
 1252 001e FFF7FEFF 		bl	gets
 245:main.c        **** 	argc = sscanf(line, "%c %u %u %u", &cmd, argv, argv+1, argv+2) - 1;
 1253              		.loc 2 245 0
 1254 0022 07F10801 		add	r1, r7, #8
 1255 0026 07F10702 		add	r2, r7, #7
 1256 002a 07F12803 		add	r3, r7, #40
 1257 002e 07F12800 		add	r0, r7, #40
 1258 0032 00F10400 		add	r0, r0, #4
 1259 0036 0090     		str	r0, [sp, #0]
 1260 0038 07F12800 		add	r0, r7, #40
 1261 003c 00F10800 		add	r0, r0, #8
 1262 0040 0190     		str	r0, [sp, #4]
 1263 0042 0846     		mov	r0, r1
 1264 0044 40F20001 		movw	r1, #:lower16:.LC11
 1265 0048 C0F20001 		movt	r1, #:upper16:.LC11
 1266 004c FFF7FEFF 		bl	siscanf
 1267 0050 0346     		mov	r3, r0
 1268 0052 03F1FF33 		add	r3, r3, #-1
 1269 0056 7B63     		str	r3, [r7, #52]
 246:main.c        **** 	TRACE_DEBUG("got %i arguments", argc);
 1270              		.loc 2 246 0
 1271 0058 40F20003 		movw	r3, #:lower16:_impure_ptr
 1272 005c C0F20003 		movt	r3, #:upper16:_impure_ptr
 1273 0060 1B68     		ldr	r3, [r3, #0]
 1274 0062 DB68     		ldr	r3, [r3, #12]
 1275 0064 1846     		mov	r0, r3
 1276 0066 40F20001 		movw	r1, #:lower16:.LC12
 1277 006a C0F20001 		movt	r1, #:upper16:.LC12
 1278 006e 7A6B     		ldr	r2, [r7, #52]
ARM GAS  /tmp/ccKa46D2.s 			page 57


 1279 0070 FFF7FEFF 		bl	fiprintf
 247:main.c        **** 
 248:main.c        **** 	/* commands allowed in all states */
 249:main.c        **** 	if (cmd == 's')
 1280              		.loc 2 249 0
 1281 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1282 0076 732B     		cmp	r3, #115
 1283 0078 04D1     		bne	.L45
 250:main.c        **** 		state(STOPPED);
 1284              		.loc 2 250 0
 1285 007a 4FF00100 		mov	r0, #1
 1286 007e FFF7FEFF 		bl	state
 1287 0082 21E0     		b	.L46
 1288              	.L45:
 251:main.c        **** 	else if (cmd == 'r')
 1289              		.loc 2 251 0
 1290 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1291 0086 722B     		cmp	r3, #114
 1292 0088 04D1     		bne	.L47
 252:main.c        **** 		state(RELEASE);
 1293              		.loc 2 252 0
 1294 008a 4FF00800 		mov	r0, #8
 1295 008e FFF7FEFF 		bl	state
 1296 0092 19E0     		b	.L46
 1297              	.L47:
 253:main.c        **** 	else if (cmd == '?')
 1298              		.loc 2 253 0
 1299 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1300 0096 3F2B     		cmp	r3, #63
 1301 0098 16D1     		bne	.L46
 254:main.c        **** 		printf("%u %u %u\n", _state, input[AIN0], input[AIN1]);
 1302              		.loc 2 254 0
 1303 009a 40F20003 		movw	r3, #:lower16:_state
 1304 009e C0F20003 		movt	r3, #:upper16:_state
 1305 00a2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1306 00a4 1946     		mov	r1, r3
 1307 00a6 40F20003 		movw	r3, #:lower16:input
 1308 00aa C0F20003 		movt	r3, #:upper16:input
 1309 00ae 1B88     		ldrh	r3, [r3, #0]
 1310 00b0 1A46     		mov	r2, r3
 1311 00b2 40F20003 		movw	r3, #:lower16:input
 1312 00b6 C0F20003 		movt	r3, #:upper16:input
 1313 00ba 5B88     		ldrh	r3, [r3, #2]
 1314 00bc 40F20000 		movw	r0, #:lower16:.LC13
 1315 00c0 C0F20000 		movt	r0, #:upper16:.LC13
 1316 00c4 FFF7FEFF 		bl	iprintf
 1317              	.L46:
 255:main.c        **** 
 256:main.c        **** 	/* state specific commands */
 257:main.c        **** 	switch (_state) {
 1318              		.loc 2 257 0
 1319 00c8 40F20003 		movw	r3, #:lower16:_state
 1320 00cc C0F20003 		movt	r3, #:upper16:_state
 1321 00d0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1322 00d2 03F1FF33 		add	r3, r3, #-1
 1323 00d6 072B     		cmp	r3, #7
 1324 00d8 00F27281 		bhi	.L42
ARM GAS  /tmp/ccKa46D2.s 			page 58


 1325 00dc 01A2     		adr	r2, .L51
 1326 00de 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1327 00e2 00BF     		.align	2
 1328              	.L51:
 1329 00e4 05010000 		.word	.L48+1
 1330 00e8 C1030000 		.word	.L42+1
 1331 00ec C1030000 		.word	.L42+1
 1332 00f0 47030000 		.word	.L50+1
 1333 00f4 C1030000 		.word	.L42+1
 1334 00f8 C1030000 		.word	.L42+1
 1335 00fc C1030000 		.word	.L42+1
 1336 0100 C1030000 		.word	.L42+1
 1337              	.L48:
 258:main.c        **** 		case STOPPED:
 259:main.c        **** 			if (cmd == 'g') {
 1338              		.loc 2 259 0
 1339 0104 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1340 0106 672B     		cmp	r3, #103
 1341 0108 04D1     		bne	.L52
 260:main.c        **** 				state(RUN);
 1342              		.loc 2 260 0
 1343 010a 4FF00200 		mov	r0, #2
 1344 010e FFF7FEFF 		bl	state
 261:main.c        **** 			}
 262:main.c        **** 			else if (cmd == 'h') {
 263:main.c        **** 				state(HOLD);
 264:main.c        **** 			}
 265:main.c        **** 			else if (cmd == 'e') {
 266:main.c        **** 				if (argc == 1) {
 267:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 268:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 269:main.c        **** 				}
 270:main.c        **** 				printf("%u\n", loop.rSP);
 271:main.c        **** 			}
 272:main.c        **** 			else if (cmd == 'v') {
 273:main.c        **** 				if (argc == 1) {
 274:main.c        **** 					loop.rSlope = *argv;
 275:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 276:main.c        **** 				}
 277:main.c        **** 				printf("%i\n", loop.rSlope);
 278:main.c        **** 			}
 279:main.c        **** 			else if (cmd == 'k') {
 280:main.c        **** 				if (argc == 3) {
 281:main.c        **** 					loop.Kp = argv[0];
 282:main.c        **** 					loop.Ki = argv[1];
 283:main.c        **** 					loop.Kd = argv[2];
 284:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 285:main.c        **** 				}
 286:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 287:main.c        **** 			}
 288:main.c        **** 			else if (cmd == 't') {
 289:main.c        **** 				if (argc == 1) {
 290:main.c        **** 					releasetime = *argv;
 291:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 292:main.c        **** 				}
 293:main.c        **** 				printf("%u\n", releasetime);
 294:main.c        **** 			}
ARM GAS  /tmp/ccKa46D2.s 			page 59


 295:main.c        **** 			else if (cmd == 'd') {
 296:main.c        **** 				if (argc == 2) {
 297:main.c        **** 					dxmax = *argv;
 298:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 299:main.c        **** 				}
 300:main.c        **** 				printf("%u\n", dxmax);
 301:main.c        **** 			}
 302:main.c        **** 			break;
 1345              		.loc 2 302 0
 1346 0112 52E1     		b	.L71
 1347              	.L52:
 262:main.c        **** 			else if (cmd == 'h') {
 1348              		.loc 2 262 0
 1349 0114 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1350 0116 682B     		cmp	r3, #104
 1351 0118 04D1     		bne	.L54
 263:main.c        **** 				state(HOLD);
 1352              		.loc 2 263 0
 1353 011a 4FF00400 		mov	r0, #4
 1354 011e FFF7FEFF 		bl	state
 1355              		.loc 2 302 0
 1356 0122 4AE1     		b	.L71
 1357              	.L54:
 265:main.c        **** 			else if (cmd == 'e') {
 1358              		.loc 2 265 0
 1359 0124 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1360 0126 652B     		cmp	r3, #101
 1361 0128 34D1     		bne	.L55
 266:main.c        **** 				if (argc == 1) {
 1362              		.loc 2 266 0
 1363 012a 7B6B     		ldr	r3, [r7, #52]
 1364 012c 012B     		cmp	r3, #1
 1365 012e 24D1     		bne	.L56
 267:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1366              		.loc 2 267 0
 1367 0130 BB6A     		ldr	r3, [r7, #40]
 1368 0132 002B     		cmp	r3, #0
 1369 0134 07DB     		blt	.L57
 267:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1370              		.loc 2 267 0 is_stmt 0 discriminator 1
 1371 0136 BA6A     		ldr	r2, [r7, #40]
 1372 0138 40F6FF73 		movw	r3, #4095
 1373 013c 9A42     		cmp	r2, r3
 1374 013e B8BF     		it	lt
 1375 0140 1346     		movlt	r3, r2
 1376 0142 9AB2     		uxth	r2, r3
 1377 0144 01E0     		b	.L58
 1378              	.L57:
 267:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1379              		.loc 2 267 0 discriminator 2
 1380 0146 4FF00002 		mov	r2, #0
 1381              	.L58:
 267:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1382              		.loc 2 267 0 discriminator 3
 1383 014a 40F20003 		movw	r3, #:lower16:loop
 1384 014e C0F20003 		movt	r3, #:upper16:loop
 1385 0152 9A80     		strh	r2, [r3, #4]	@ movhi
ARM GAS  /tmp/ccKa46D2.s 			page 60


 268:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 1386              		.loc 2 268 0 is_stmt 1 discriminator 3
 1387 0154 40F20003 		movw	r3, #:lower16:_impure_ptr
 1388 0158 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1389 015c 1B68     		ldr	r3, [r3, #0]
 1390 015e DA68     		ldr	r2, [r3, #12]
 1391 0160 40F20003 		movw	r3, #:lower16:loop
 1392 0164 C0F20003 		movt	r3, #:upper16:loop
 1393 0168 9B88     		ldrh	r3, [r3, #4]
 1394 016a 1046     		mov	r0, r2
 1395 016c 40F20001 		movw	r1, #:lower16:.LC14
 1396 0170 C0F20001 		movt	r1, #:upper16:.LC14
 1397 0174 1A46     		mov	r2, r3
 1398 0176 FFF7FEFF 		bl	fiprintf
 1399              	.L56:
 270:main.c        **** 				printf("%u\n", loop.rSP);
 1400              		.loc 2 270 0
 1401 017a 40F20003 		movw	r3, #:lower16:loop
 1402 017e C0F20003 		movt	r3, #:upper16:loop
 1403 0182 9B88     		ldrh	r3, [r3, #4]
 1404 0184 40F20000 		movw	r0, #:lower16:.LC15
 1405 0188 C0F20000 		movt	r0, #:upper16:.LC15
 1406 018c 1946     		mov	r1, r3
 1407 018e FFF7FEFF 		bl	iprintf
 1408              		.loc 2 302 0
 1409 0192 12E1     		b	.L71
 1410              	.L55:
 272:main.c        **** 			else if (cmd == 'v') {
 1411              		.loc 2 272 0
 1412 0194 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1413 0196 762B     		cmp	r3, #118
 1414 0198 28D1     		bne	.L59
 273:main.c        **** 				if (argc == 1) {
 1415              		.loc 2 273 0
 1416 019a 7B6B     		ldr	r3, [r7, #52]
 1417 019c 012B     		cmp	r3, #1
 1418 019e 18D1     		bne	.L60
 274:main.c        **** 					loop.rSlope = *argv;
 1419              		.loc 2 274 0
 1420 01a0 BA6A     		ldr	r2, [r7, #40]
 1421 01a2 40F20003 		movw	r3, #:lower16:loop
 1422 01a6 C0F20003 		movt	r3, #:upper16:loop
 1423 01aa 9A60     		str	r2, [r3, #8]
 275:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 1424              		.loc 2 275 0
 1425 01ac 40F20003 		movw	r3, #:lower16:_impure_ptr
 1426 01b0 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1427 01b4 1B68     		ldr	r3, [r3, #0]
 1428 01b6 DA68     		ldr	r2, [r3, #12]
 1429 01b8 40F20003 		movw	r3, #:lower16:loop
 1430 01bc C0F20003 		movt	r3, #:upper16:loop
 1431 01c0 9B68     		ldr	r3, [r3, #8]
 1432 01c2 1046     		mov	r0, r2
 1433 01c4 40F20001 		movw	r1, #:lower16:.LC16
 1434 01c8 C0F20001 		movt	r1, #:upper16:.LC16
 1435 01cc 1A46     		mov	r2, r3
 1436 01ce FFF7FEFF 		bl	fiprintf
ARM GAS  /tmp/ccKa46D2.s 			page 61


 1437              	.L60:
 277:main.c        **** 				printf("%i\n", loop.rSlope);
 1438              		.loc 2 277 0
 1439 01d2 40F20003 		movw	r3, #:lower16:loop
 1440 01d6 C0F20003 		movt	r3, #:upper16:loop
 1441 01da 9B68     		ldr	r3, [r3, #8]
 1442 01dc 40F20000 		movw	r0, #:lower16:.LC17
 1443 01e0 C0F20000 		movt	r0, #:upper16:.LC17
 1444 01e4 1946     		mov	r1, r3
 1445 01e6 FFF7FEFF 		bl	iprintf
 1446              		.loc 2 302 0
 1447 01ea E6E0     		b	.L71
 1448              	.L59:
 279:main.c        **** 			else if (cmd == 'k') {
 1449              		.loc 2 279 0
 1450 01ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1451 01ee 6B2B     		cmp	r3, #107
 1452 01f0 4FD1     		bne	.L61
 280:main.c        **** 				if (argc == 3) {
 1453              		.loc 2 280 0
 1454 01f2 7B6B     		ldr	r3, [r7, #52]
 1455 01f4 032B     		cmp	r3, #3
 1456 01f6 34D1     		bne	.L62
 281:main.c        **** 					loop.Kp = argv[0];
 1457              		.loc 2 281 0
 1458 01f8 BB6A     		ldr	r3, [r7, #40]
 1459 01fa 9AB2     		uxth	r2, r3
 1460 01fc 40F20003 		movw	r3, #:lower16:loop
 1461 0200 C0F20003 		movt	r3, #:upper16:loop
 1462 0204 9A81     		strh	r2, [r3, #12]	@ movhi
 282:main.c        **** 					loop.Ki = argv[1];
 1463              		.loc 2 282 0
 1464 0206 FB6A     		ldr	r3, [r7, #44]
 1465 0208 9AB2     		uxth	r2, r3
 1466 020a 40F20003 		movw	r3, #:lower16:loop
 1467 020e C0F20003 		movt	r3, #:upper16:loop
 1468 0212 DA81     		strh	r2, [r3, #14]	@ movhi
 283:main.c        **** 					loop.Kd = argv[2];
 1469              		.loc 2 283 0
 1470 0214 3B6B     		ldr	r3, [r7, #48]
 1471 0216 9AB2     		uxth	r2, r3
 1472 0218 40F20003 		movw	r3, #:lower16:loop
 1473 021c C0F20003 		movt	r3, #:upper16:loop
 1474 0220 1A82     		strh	r2, [r3, #16]	@ movhi
 284:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 1475              		.loc 2 284 0
 1476 0222 40F20003 		movw	r3, #:lower16:_impure_ptr
 1477 0226 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1478 022a 1B68     		ldr	r3, [r3, #0]
 1479 022c D968     		ldr	r1, [r3, #12]
 1480 022e 40F20003 		movw	r3, #:lower16:loop
 1481 0232 C0F20003 		movt	r3, #:upper16:loop
 1482 0236 9B89     		ldrh	r3, [r3, #12]
 1483 0238 1A46     		mov	r2, r3
 1484 023a 40F20003 		movw	r3, #:lower16:loop
 1485 023e C0F20003 		movt	r3, #:upper16:loop
 1486 0242 DB89     		ldrh	r3, [r3, #14]
ARM GAS  /tmp/ccKa46D2.s 			page 62


 1487 0244 1C46     		mov	r4, r3
 1488 0246 40F20003 		movw	r3, #:lower16:loop
 1489 024a C0F20003 		movt	r3, #:upper16:loop
 1490 024e 1B8A     		ldrh	r3, [r3, #16]
 1491 0250 0093     		str	r3, [sp, #0]
 1492 0252 0846     		mov	r0, r1
 1493 0254 40F20001 		movw	r1, #:lower16:.LC18
 1494 0258 C0F20001 		movt	r1, #:upper16:.LC18
 1495 025c 2346     		mov	r3, r4
 1496 025e FFF7FEFF 		bl	fiprintf
 1497              	.L62:
 286:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 1498              		.loc 2 286 0
 1499 0262 40F20003 		movw	r3, #:lower16:loop
 1500 0266 C0F20003 		movt	r3, #:upper16:loop
 1501 026a 9B89     		ldrh	r3, [r3, #12]
 1502 026c 1946     		mov	r1, r3
 1503 026e 40F20003 		movw	r3, #:lower16:loop
 1504 0272 C0F20003 		movt	r3, #:upper16:loop
 1505 0276 DB89     		ldrh	r3, [r3, #14]
 1506 0278 1A46     		mov	r2, r3
 1507 027a 40F20003 		movw	r3, #:lower16:loop
 1508 027e C0F20003 		movt	r3, #:upper16:loop
 1509 0282 1B8A     		ldrh	r3, [r3, #16]
 1510 0284 40F20000 		movw	r0, #:lower16:.LC13
 1511 0288 C0F20000 		movt	r0, #:upper16:.LC13
 1512 028c FFF7FEFF 		bl	iprintf
 1513              		.loc 2 302 0
 1514 0290 93E0     		b	.L71
 1515              	.L61:
 288:main.c        **** 			else if (cmd == 't') {
 1516              		.loc 2 288 0
 1517 0292 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1518 0294 742B     		cmp	r3, #116
 1519 0296 29D1     		bne	.L63
 289:main.c        **** 				if (argc == 1) {
 1520              		.loc 2 289 0
 1521 0298 7B6B     		ldr	r3, [r7, #52]
 1522 029a 012B     		cmp	r3, #1
 1523 029c 19D1     		bne	.L64
 290:main.c        **** 					releasetime = *argv;
 1524              		.loc 2 290 0
 1525 029e BB6A     		ldr	r3, [r7, #40]
 1526 02a0 1A46     		mov	r2, r3
 1527 02a2 40F20003 		movw	r3, #:lower16:releasetime
 1528 02a6 C0F20003 		movt	r3, #:upper16:releasetime
 1529 02aa 1A60     		str	r2, [r3, #0]
 291:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 1530              		.loc 2 291 0
 1531 02ac 40F20003 		movw	r3, #:lower16:_impure_ptr
 1532 02b0 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1533 02b4 1B68     		ldr	r3, [r3, #0]
 1534 02b6 DA68     		ldr	r2, [r3, #12]
 1535 02b8 40F20003 		movw	r3, #:lower16:releasetime
 1536 02bc C0F20003 		movt	r3, #:upper16:releasetime
 1537 02c0 1B68     		ldr	r3, [r3, #0]
 1538 02c2 1046     		mov	r0, r2
ARM GAS  /tmp/ccKa46D2.s 			page 63


 1539 02c4 40F20001 		movw	r1, #:lower16:.LC19
 1540 02c8 C0F20001 		movt	r1, #:upper16:.LC19
 1541 02cc 1A46     		mov	r2, r3
 1542 02ce FFF7FEFF 		bl	fiprintf
 1543              	.L64:
 293:main.c        **** 				printf("%u\n", releasetime);
 1544              		.loc 2 293 0
 1545 02d2 40F20003 		movw	r3, #:lower16:releasetime
 1546 02d6 C0F20003 		movt	r3, #:upper16:releasetime
 1547 02da 1B68     		ldr	r3, [r3, #0]
 1548 02dc 40F20000 		movw	r0, #:lower16:.LC15
 1549 02e0 C0F20000 		movt	r0, #:upper16:.LC15
 1550 02e4 1946     		mov	r1, r3
 1551 02e6 FFF7FEFF 		bl	iprintf
 1552              		.loc 2 302 0
 1553 02ea 66E0     		b	.L71
 1554              	.L63:
 295:main.c        **** 			else if (cmd == 'd') {
 1555              		.loc 2 295 0
 1556 02ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1557 02ee 642B     		cmp	r3, #100
 1558 02f0 63D1     		bne	.L71
 296:main.c        **** 				if (argc == 2) {
 1559              		.loc 2 296 0
 1560 02f2 7B6B     		ldr	r3, [r7, #52]
 1561 02f4 022B     		cmp	r3, #2
 1562 02f6 19D1     		bne	.L65
 297:main.c        **** 					dxmax = *argv;
 1563              		.loc 2 297 0
 1564 02f8 BB6A     		ldr	r3, [r7, #40]
 1565 02fa 1A46     		mov	r2, r3
 1566 02fc 40F20003 		movw	r3, #:lower16:dxmax
 1567 0300 C0F20003 		movt	r3, #:upper16:dxmax
 1568 0304 1A60     		str	r2, [r3, #0]
 298:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 1569              		.loc 2 298 0
 1570 0306 40F20003 		movw	r3, #:lower16:_impure_ptr
 1571 030a C0F20003 		movt	r3, #:upper16:_impure_ptr
 1572 030e 1B68     		ldr	r3, [r3, #0]
 1573 0310 DA68     		ldr	r2, [r3, #12]
 1574 0312 40F20003 		movw	r3, #:lower16:dxmax
 1575 0316 C0F20003 		movt	r3, #:upper16:dxmax
 1576 031a 1B68     		ldr	r3, [r3, #0]
 1577 031c 1046     		mov	r0, r2
 1578 031e 40F20001 		movw	r1, #:lower16:.LC20
 1579 0322 C0F20001 		movt	r1, #:upper16:.LC20
 1580 0326 1A46     		mov	r2, r3
 1581 0328 FFF7FEFF 		bl	fiprintf
 1582              	.L65:
 300:main.c        **** 				printf("%u\n", dxmax);
 1583              		.loc 2 300 0
 1584 032c 40F20003 		movw	r3, #:lower16:dxmax
 1585 0330 C0F20003 		movt	r3, #:upper16:dxmax
 1586 0334 1B68     		ldr	r3, [r3, #0]
 1587 0336 40F20000 		movw	r0, #:lower16:.LC15
 1588 033a C0F20000 		movt	r0, #:upper16:.LC15
 1589 033e 1946     		mov	r1, r3
ARM GAS  /tmp/ccKa46D2.s 			page 64


 1590 0340 FFF7FEFF 		bl	iprintf
 1591              		.loc 2 302 0
 1592 0344 39E0     		b	.L71
 1593              	.L50:
 303:main.c        **** 
 304:main.c        **** 		case HOLD:
 305:main.c        **** 			if (cmd == 'w') {
 1594              		.loc 2 305 0
 1595 0346 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1596 0348 772B     		cmp	r3, #119
 1597 034a 38D1     		bne	.L72
 306:main.c        **** 				if (argc == 1) {
 1598              		.loc 2 306 0
 1599 034c 7B6B     		ldr	r3, [r7, #52]
 1600 034e 012B     		cmp	r3, #1
 1601 0350 24D1     		bne	.L67
 307:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1602              		.loc 2 307 0
 1603 0352 BB6A     		ldr	r3, [r7, #40]
 1604 0354 002B     		cmp	r3, #0
 1605 0356 07DB     		blt	.L68
 1606              		.loc 2 307 0 is_stmt 0 discriminator 1
 1607 0358 BA6A     		ldr	r2, [r7, #40]
 1608 035a 40F6FF73 		movw	r3, #4095
 1609 035e 9A42     		cmp	r2, r3
 1610 0360 B8BF     		it	lt
 1611 0362 1346     		movlt	r3, r2
 1612 0364 9AB2     		uxth	r2, r3
 1613 0366 01E0     		b	.L69
 1614              	.L68:
 1615              		.loc 2 307 0 discriminator 2
 1616 0368 4FF00002 		mov	r2, #0
 1617              	.L69:
 1618              		.loc 2 307 0 discriminator 3
 1619 036c 40F20003 		movw	r3, #:lower16:loop
 1620 0370 C0F20003 		movt	r3, #:upper16:loop
 1621 0374 5A80     		strh	r2, [r3, #2]	@ movhi
 308:main.c        **** 					TRACE_INFO("set setpoint to %u\n", loop.SP);
 1622              		.loc 2 308 0 is_stmt 1 discriminator 3
 1623 0376 40F20003 		movw	r3, #:lower16:_impure_ptr
 1624 037a C0F20003 		movt	r3, #:upper16:_impure_ptr
 1625 037e 1B68     		ldr	r3, [r3, #0]
 1626 0380 DA68     		ldr	r2, [r3, #12]
 1627 0382 40F20003 		movw	r3, #:lower16:loop
 1628 0386 C0F20003 		movt	r3, #:upper16:loop
 1629 038a 5B88     		ldrh	r3, [r3, #2]
 1630 038c 1046     		mov	r0, r2
 1631 038e 40F20001 		movw	r1, #:lower16:.LC21
 1632 0392 C0F20001 		movt	r1, #:upper16:.LC21
 1633 0396 1A46     		mov	r2, r3
 1634 0398 FFF7FEFF 		bl	fiprintf
 1635              	.L67:
 309:main.c        **** 				}
 310:main.c        **** 				printf("%u\n", loop.SP);
 1636              		.loc 2 310 0
 1637 039c 40F20003 		movw	r3, #:lower16:loop
 1638 03a0 C0F20003 		movt	r3, #:upper16:loop
ARM GAS  /tmp/ccKa46D2.s 			page 65


 1639 03a4 5B88     		ldrh	r3, [r3, #2]
 1640 03a6 40F20000 		movw	r0, #:lower16:.LC15
 1641 03aa C0F20000 		movt	r0, #:upper16:.LC15
 1642 03ae 1946     		mov	r1, r3
 1643 03b0 FFF7FEFF 		bl	iprintf
 311:main.c        **** 			}
 312:main.c        **** 			break;
 1644              		.loc 2 312 0
 1645 03b4 03E0     		b	.L72
 1646              	.L70:
 242:main.c        **** 		return;
 1647              		.loc 2 242 0
 1648 03b6 00BF     		nop
 1649 03b8 02E0     		b	.L42
 1650              	.L71:
 302:main.c        **** 			break;
 1651              		.loc 2 302 0
 1652 03ba 00BF     		nop
 1653 03bc 00E0     		b	.L42
 1654              	.L72:
 1655              		.loc 2 312 0
 1656 03be 00BF     		nop
 1657              	.L42:
 313:main.c        **** 
 314:main.c        **** 		case RUN:
 315:main.c        **** 		case RELEASE:
 316:main.c        **** 			break;
 317:main.c        **** 	}
 318:main.c        **** }
 1658              		.loc 2 318 0
 1659 03c0 07F13C07 		add	r7, r7, #60
 1660 03c4 BD46     		mov	sp, r7
 1661 03c6 90BD     		pop	{r4, r7, pc}
 1662              		.cfi_endproc
 1663              	.LFE41:
 1664              		.size	cli, .-cli
 1665              		.text
 1666              	.Letext0:
 1667              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1668              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1669              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 1670              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1671              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1672              		.file 8 "libchip/include/SAM3S.h"
 1673              		.file 9 "libchip/include/pio.h"
 1674              		.file 10 "controller.h"
 1675              		.section	.debug_info,"",%progbits
 1676              	.Ldebug_info0:
 1677 0000 DE1F0000 		.4byte	0x1fde
 1678 0004 0200     		.2byte	0x2
 1679 0006 00000000 		.4byte	.Ldebug_abbrev0
 1680 000a 04       		.byte	0x4
 1681 000b 01       		.uleb128 0x1
 1682 000c 790D0000 		.4byte	.LASF418
 1683 0010 01       		.byte	0x1
 1684 0011 D5070000 		.4byte	.LASF419
 1685 0015 320C0000 		.4byte	.LASF420
ARM GAS  /tmp/ccKa46D2.s 			page 66


 1686 0019 00000000 		.4byte	0
 1687 001d 00000000 		.4byte	0
 1688 0021 00000000 		.4byte	.Ldebug_ranges0+0
 1689 0025 00000000 		.4byte	.Ldebug_line0
 1690 0029 02       		.uleb128 0x2
 1691 002a 01       		.byte	0x1
 1692 002b 06       		.byte	0x6
 1693 002c E1020000 		.4byte	.LASF0
 1694 0030 02       		.uleb128 0x2
 1695 0031 01       		.byte	0x1
 1696 0032 08       		.byte	0x8
 1697 0033 37030000 		.4byte	.LASF1
 1698 0037 02       		.uleb128 0x2
 1699 0038 02       		.byte	0x2
 1700 0039 05       		.byte	0x5
 1701 003a BC0C0000 		.4byte	.LASF2
 1702 003e 02       		.uleb128 0x2
 1703 003f 02       		.byte	0x2
 1704 0040 07       		.byte	0x7
 1705 0041 170E0000 		.4byte	.LASF3
 1706 0045 03       		.uleb128 0x3
 1707 0046 04       		.byte	0x4
 1708 0047 05       		.byte	0x5
 1709 0048 696E7400 		.ascii	"int\000"
 1710 004c 02       		.uleb128 0x2
 1711 004d 04       		.byte	0x4
 1712 004e 07       		.byte	0x7
 1713 004f 92080000 		.4byte	.LASF4
 1714 0053 02       		.uleb128 0x2
 1715 0054 08       		.byte	0x8
 1716 0055 05       		.byte	0x5
 1717 0056 62070000 		.4byte	.LASF5
 1718 005a 02       		.uleb128 0x2
 1719 005b 08       		.byte	0x8
 1720 005c 07       		.byte	0x7
 1721 005d F2090000 		.4byte	.LASF6
 1722 0061 04       		.uleb128 0x4
 1723 0062 95060000 		.4byte	.LASF8
 1724 0066 03       		.byte	0x3
 1725 0067 07       		.byte	0x7
 1726 0068 45000000 		.4byte	0x45
 1727 006c 02       		.uleb128 0x2
 1728 006d 04       		.byte	0x4
 1729 006e 05       		.byte	0x5
 1730 006f F6010000 		.4byte	.LASF7
 1731 0073 04       		.uleb128 0x4
 1732 0074 A4090000 		.4byte	.LASF9
 1733 0078 04       		.byte	0x4
 1734 0079 2C       		.byte	0x2c
 1735 007a 6C000000 		.4byte	0x6c
 1736 007e 05       		.uleb128 0x5
 1737 007f 420B0000 		.4byte	.LASF10
 1738 0083 05       		.byte	0x5
 1739 0084 6101     		.2byte	0x161
 1740 0086 4C000000 		.4byte	0x4c
 1741 008a 06       		.uleb128 0x6
 1742 008b 04       		.byte	0x4
ARM GAS  /tmp/ccKa46D2.s 			page 67


 1743 008c 04       		.byte	0x4
 1744 008d 46       		.byte	0x46
 1745 008e A9000000 		.4byte	0xa9
 1746 0092 07       		.uleb128 0x7
 1747 0093 7E010000 		.4byte	.LASF11
 1748 0097 04       		.byte	0x4
 1749 0098 48       		.byte	0x48
 1750 0099 7E000000 		.4byte	0x7e
 1751 009d 07       		.uleb128 0x7
 1752 009e AC090000 		.4byte	.LASF12
 1753 00a2 04       		.byte	0x4
 1754 00a3 49       		.byte	0x49
 1755 00a4 A9000000 		.4byte	0xa9
 1756 00a8 00       		.byte	0
 1757 00a9 08       		.uleb128 0x8
 1758 00aa 30000000 		.4byte	0x30
 1759 00ae B9000000 		.4byte	0xb9
 1760 00b2 09       		.uleb128 0x9
 1761 00b3 4C000000 		.4byte	0x4c
 1762 00b7 03       		.byte	0x3
 1763 00b8 00       		.byte	0
 1764 00b9 0A       		.uleb128 0xa
 1765 00ba 08       		.byte	0x8
 1766 00bb 04       		.byte	0x4
 1767 00bc 43       		.byte	0x43
 1768 00bd DE000000 		.4byte	0xde
 1769 00c1 0B       		.uleb128 0xb
 1770 00c2 51090000 		.4byte	.LASF13
 1771 00c6 04       		.byte	0x4
 1772 00c7 45       		.byte	0x45
 1773 00c8 45000000 		.4byte	0x45
 1774 00cc 02       		.byte	0x2
 1775 00cd 23       		.byte	0x23
 1776 00ce 00       		.uleb128 0
 1777 00cf 0B       		.uleb128 0xb
 1778 00d0 2A000000 		.4byte	.LASF14
 1779 00d4 04       		.byte	0x4
 1780 00d5 4A       		.byte	0x4a
 1781 00d6 8A000000 		.4byte	0x8a
 1782 00da 02       		.byte	0x2
 1783 00db 23       		.byte	0x23
 1784 00dc 04       		.uleb128 0x4
 1785 00dd 00       		.byte	0
 1786 00de 04       		.uleb128 0x4
 1787 00df 1F0B0000 		.4byte	.LASF15
 1788 00e3 04       		.byte	0x4
 1789 00e4 4B       		.byte	0x4b
 1790 00e5 B9000000 		.4byte	0xb9
 1791 00e9 04       		.uleb128 0x4
 1792 00ea FE0A0000 		.4byte	.LASF16
 1793 00ee 04       		.byte	0x4
 1794 00ef 4F       		.byte	0x4f
 1795 00f0 61000000 		.4byte	0x61
 1796 00f4 0C       		.uleb128 0xc
 1797 00f5 04       		.byte	0x4
 1798 00f6 04       		.uleb128 0x4
 1799 00f7 990D0000 		.4byte	.LASF17
ARM GAS  /tmp/ccKa46D2.s 			page 68


 1800 00fb 06       		.byte	0x6
 1801 00fc 15       		.byte	0x15
 1802 00fd 01010000 		.4byte	0x101
 1803 0101 02       		.uleb128 0x2
 1804 0102 04       		.byte	0x4
 1805 0103 07       		.byte	0x7
 1806 0104 1E060000 		.4byte	.LASF18
 1807 0108 0D       		.uleb128 0xd
 1808 0109 09070000 		.4byte	.LASF23
 1809 010d 18       		.byte	0x18
 1810 010e 06       		.byte	0x6
 1811 010f 2C       		.byte	0x2c
 1812 0110 67010000 		.4byte	0x167
 1813 0114 0B       		.uleb128 0xb
 1814 0115 620B0000 		.4byte	.LASF19
 1815 0119 06       		.byte	0x6
 1816 011a 2E       		.byte	0x2e
 1817 011b 67010000 		.4byte	0x167
 1818 011f 02       		.byte	0x2
 1819 0120 23       		.byte	0x23
 1820 0121 00       		.uleb128 0
 1821 0122 0E       		.uleb128 0xe
 1822 0123 5F6B00   		.ascii	"_k\000"
 1823 0126 06       		.byte	0x6
 1824 0127 2F       		.byte	0x2f
 1825 0128 45000000 		.4byte	0x45
 1826 012c 02       		.byte	0x2
 1827 012d 23       		.byte	0x23
 1828 012e 04       		.uleb128 0x4
 1829 012f 0B       		.uleb128 0xb
 1830 0130 1A070000 		.4byte	.LASF20
 1831 0134 06       		.byte	0x6
 1832 0135 2F       		.byte	0x2f
 1833 0136 45000000 		.4byte	0x45
 1834 013a 02       		.byte	0x2
 1835 013b 23       		.byte	0x23
 1836 013c 08       		.uleb128 0x8
 1837 013d 0B       		.uleb128 0xb
 1838 013e 5D080000 		.4byte	.LASF21
 1839 0142 06       		.byte	0x6
 1840 0143 2F       		.byte	0x2f
 1841 0144 45000000 		.4byte	0x45
 1842 0148 02       		.byte	0x2
 1843 0149 23       		.byte	0x23
 1844 014a 0C       		.uleb128 0xc
 1845 014b 0B       		.uleb128 0xb
 1846 014c 52050000 		.4byte	.LASF22
 1847 0150 06       		.byte	0x6
 1848 0151 2F       		.byte	0x2f
 1849 0152 45000000 		.4byte	0x45
 1850 0156 02       		.byte	0x2
 1851 0157 23       		.byte	0x23
 1852 0158 10       		.uleb128 0x10
 1853 0159 0E       		.uleb128 0xe
 1854 015a 5F7800   		.ascii	"_x\000"
 1855 015d 06       		.byte	0x6
 1856 015e 30       		.byte	0x30
ARM GAS  /tmp/ccKa46D2.s 			page 69


 1857 015f 6D010000 		.4byte	0x16d
 1858 0163 02       		.byte	0x2
 1859 0164 23       		.byte	0x23
 1860 0165 14       		.uleb128 0x14
 1861 0166 00       		.byte	0
 1862 0167 0F       		.uleb128 0xf
 1863 0168 04       		.byte	0x4
 1864 0169 08010000 		.4byte	0x108
 1865 016d 08       		.uleb128 0x8
 1866 016e F6000000 		.4byte	0xf6
 1867 0172 7D010000 		.4byte	0x17d
 1868 0176 09       		.uleb128 0x9
 1869 0177 4C000000 		.4byte	0x4c
 1870 017b 00       		.byte	0
 1871 017c 00       		.byte	0
 1872 017d 0D       		.uleb128 0xd
 1873 017e AC000000 		.4byte	.LASF24
 1874 0182 24       		.byte	0x24
 1875 0183 06       		.byte	0x6
 1876 0184 34       		.byte	0x34
 1877 0185 08020000 		.4byte	0x208
 1878 0189 0B       		.uleb128 0xb
 1879 018a C8000000 		.4byte	.LASF25
 1880 018e 06       		.byte	0x6
 1881 018f 36       		.byte	0x36
 1882 0190 45000000 		.4byte	0x45
 1883 0194 02       		.byte	0x2
 1884 0195 23       		.byte	0x23
 1885 0196 00       		.uleb128 0
 1886 0197 0B       		.uleb128 0xb
 1887 0198 AA0E0000 		.4byte	.LASF26
 1888 019c 06       		.byte	0x6
 1889 019d 37       		.byte	0x37
 1890 019e 45000000 		.4byte	0x45
 1891 01a2 02       		.byte	0x2
 1892 01a3 23       		.byte	0x23
 1893 01a4 04       		.uleb128 0x4
 1894 01a5 0B       		.uleb128 0xb
 1895 01a6 330E0000 		.4byte	.LASF27
 1896 01aa 06       		.byte	0x6
 1897 01ab 38       		.byte	0x38
 1898 01ac 45000000 		.4byte	0x45
 1899 01b0 02       		.byte	0x2
 1900 01b1 23       		.byte	0x23
 1901 01b2 08       		.uleb128 0x8
 1902 01b3 0B       		.uleb128 0xb
 1903 01b4 D2080000 		.4byte	.LASF28
 1904 01b8 06       		.byte	0x6
 1905 01b9 39       		.byte	0x39
 1906 01ba 45000000 		.4byte	0x45
 1907 01be 02       		.byte	0x2
 1908 01bf 23       		.byte	0x23
 1909 01c0 0C       		.uleb128 0xc
 1910 01c1 0B       		.uleb128 0xb
 1911 01c2 8F020000 		.4byte	.LASF29
 1912 01c6 06       		.byte	0x6
 1913 01c7 3A       		.byte	0x3a
ARM GAS  /tmp/ccKa46D2.s 			page 70


 1914 01c8 45000000 		.4byte	0x45
 1915 01cc 02       		.byte	0x2
 1916 01cd 23       		.byte	0x23
 1917 01ce 10       		.uleb128 0x10
 1918 01cf 0B       		.uleb128 0xb
 1919 01d0 0C0D0000 		.4byte	.LASF30
 1920 01d4 06       		.byte	0x6
 1921 01d5 3B       		.byte	0x3b
 1922 01d6 45000000 		.4byte	0x45
 1923 01da 02       		.byte	0x2
 1924 01db 23       		.byte	0x23
 1925 01dc 14       		.uleb128 0x14
 1926 01dd 0B       		.uleb128 0xb
 1927 01de 6A090000 		.4byte	.LASF31
 1928 01e2 06       		.byte	0x6
 1929 01e3 3C       		.byte	0x3c
 1930 01e4 45000000 		.4byte	0x45
 1931 01e8 02       		.byte	0x2
 1932 01e9 23       		.byte	0x23
 1933 01ea 18       		.uleb128 0x18
 1934 01eb 0B       		.uleb128 0xb
 1935 01ec 74090000 		.4byte	.LASF32
 1936 01f0 06       		.byte	0x6
 1937 01f1 3D       		.byte	0x3d
 1938 01f2 45000000 		.4byte	0x45
 1939 01f6 02       		.byte	0x2
 1940 01f7 23       		.byte	0x23
 1941 01f8 1C       		.uleb128 0x1c
 1942 01f9 0B       		.uleb128 0xb
 1943 01fa 950E0000 		.4byte	.LASF33
 1944 01fe 06       		.byte	0x6
 1945 01ff 3E       		.byte	0x3e
 1946 0200 45000000 		.4byte	0x45
 1947 0204 02       		.byte	0x2
 1948 0205 23       		.byte	0x23
 1949 0206 20       		.uleb128 0x20
 1950 0207 00       		.byte	0
 1951 0208 10       		.uleb128 0x10
 1952 0209 9E010000 		.4byte	.LASF34
 1953 020d 0801     		.2byte	0x108
 1954 020f 06       		.byte	0x6
 1955 0210 47       		.byte	0x47
 1956 0211 51020000 		.4byte	0x251
 1957 0215 0B       		.uleb128 0xb
 1958 0216 850E0000 		.4byte	.LASF35
 1959 021a 06       		.byte	0x6
 1960 021b 48       		.byte	0x48
 1961 021c 51020000 		.4byte	0x251
 1962 0220 02       		.byte	0x2
 1963 0221 23       		.byte	0x23
 1964 0222 00       		.uleb128 0
 1965 0223 0B       		.uleb128 0xb
 1966 0224 3B0A0000 		.4byte	.LASF36
 1967 0228 06       		.byte	0x6
 1968 0229 49       		.byte	0x49
 1969 022a 51020000 		.4byte	0x251
 1970 022e 03       		.byte	0x3
ARM GAS  /tmp/ccKa46D2.s 			page 71


 1971 022f 23       		.byte	0x23
 1972 0230 8001     		.uleb128 0x80
 1973 0232 0B       		.uleb128 0xb
 1974 0233 F20C0000 		.4byte	.LASF37
 1975 0237 06       		.byte	0x6
 1976 0238 4B       		.byte	0x4b
 1977 0239 F6000000 		.4byte	0xf6
 1978 023d 03       		.byte	0x3
 1979 023e 23       		.byte	0x23
 1980 023f 8002     		.uleb128 0x100
 1981 0241 0B       		.uleb128 0xb
 1982 0242 650D0000 		.4byte	.LASF38
 1983 0246 06       		.byte	0x6
 1984 0247 4E       		.byte	0x4e
 1985 0248 F6000000 		.4byte	0xf6
 1986 024c 03       		.byte	0x3
 1987 024d 23       		.byte	0x23
 1988 024e 8402     		.uleb128 0x104
 1989 0250 00       		.byte	0
 1990 0251 08       		.uleb128 0x8
 1991 0252 F4000000 		.4byte	0xf4
 1992 0256 61020000 		.4byte	0x261
 1993 025a 09       		.uleb128 0x9
 1994 025b 4C000000 		.4byte	0x4c
 1995 025f 1F       		.byte	0x1f
 1996 0260 00       		.byte	0
 1997 0261 0D       		.uleb128 0xd
 1998 0262 36090000 		.4byte	.LASF39
 1999 0266 8C       		.byte	0x8c
 2000 0267 06       		.byte	0x6
 2001 0268 52       		.byte	0x52
 2002 0269 A7020000 		.4byte	0x2a7
 2003 026d 0B       		.uleb128 0xb
 2004 026e 620B0000 		.4byte	.LASF19
 2005 0272 06       		.byte	0x6
 2006 0273 53       		.byte	0x53
 2007 0274 A7020000 		.4byte	0x2a7
 2008 0278 02       		.byte	0x2
 2009 0279 23       		.byte	0x23
 2010 027a 00       		.uleb128 0
 2011 027b 0B       		.uleb128 0xb
 2012 027c 330D0000 		.4byte	.LASF40
 2013 0280 06       		.byte	0x6
 2014 0281 54       		.byte	0x54
 2015 0282 45000000 		.4byte	0x45
 2016 0286 02       		.byte	0x2
 2017 0287 23       		.byte	0x23
 2018 0288 04       		.uleb128 0x4
 2019 0289 0B       		.uleb128 0xb
 2020 028a E4030000 		.4byte	.LASF41
 2021 028e 06       		.byte	0x6
 2022 028f 55       		.byte	0x55
 2023 0290 AD020000 		.4byte	0x2ad
 2024 0294 02       		.byte	0x2
 2025 0295 23       		.byte	0x23
 2026 0296 08       		.uleb128 0x8
 2027 0297 0B       		.uleb128 0xb
ARM GAS  /tmp/ccKa46D2.s 			page 72


 2028 0298 78070000 		.4byte	.LASF42
 2029 029c 06       		.byte	0x6
 2030 029d 56       		.byte	0x56
 2031 029e C5020000 		.4byte	0x2c5
 2032 02a2 03       		.byte	0x3
 2033 02a3 23       		.byte	0x23
 2034 02a4 8801     		.uleb128 0x88
 2035 02a6 00       		.byte	0
 2036 02a7 0F       		.uleb128 0xf
 2037 02a8 04       		.byte	0x4
 2038 02a9 61020000 		.4byte	0x261
 2039 02ad 08       		.uleb128 0x8
 2040 02ae BF020000 		.4byte	0x2bf
 2041 02b2 BD020000 		.4byte	0x2bd
 2042 02b6 09       		.uleb128 0x9
 2043 02b7 4C000000 		.4byte	0x4c
 2044 02bb 1F       		.byte	0x1f
 2045 02bc 00       		.byte	0
 2046 02bd 11       		.uleb128 0x11
 2047 02be 01       		.byte	0x1
 2048 02bf 0F       		.uleb128 0xf
 2049 02c0 04       		.byte	0x4
 2050 02c1 BD020000 		.4byte	0x2bd
 2051 02c5 0F       		.uleb128 0xf
 2052 02c6 04       		.byte	0x4
 2053 02c7 08020000 		.4byte	0x208
 2054 02cb 0D       		.uleb128 0xd
 2055 02cc 5E0D0000 		.4byte	.LASF43
 2056 02d0 08       		.byte	0x8
 2057 02d1 06       		.byte	0x6
 2058 02d2 69       		.byte	0x69
 2059 02d3 F4020000 		.4byte	0x2f4
 2060 02d7 0B       		.uleb128 0xb
 2061 02d8 A50A0000 		.4byte	.LASF44
 2062 02dc 06       		.byte	0x6
 2063 02dd 6A       		.byte	0x6a
 2064 02de F4020000 		.4byte	0x2f4
 2065 02e2 02       		.byte	0x2
 2066 02e3 23       		.byte	0x23
 2067 02e4 00       		.uleb128 0
 2068 02e5 0B       		.uleb128 0xb
 2069 02e6 26020000 		.4byte	.LASF45
 2070 02ea 06       		.byte	0x6
 2071 02eb 6B       		.byte	0x6b
 2072 02ec 45000000 		.4byte	0x45
 2073 02f0 02       		.byte	0x2
 2074 02f1 23       		.byte	0x23
 2075 02f2 04       		.uleb128 0x4
 2076 02f3 00       		.byte	0
 2077 02f4 0F       		.uleb128 0xf
 2078 02f5 04       		.byte	0x4
 2079 02f6 30000000 		.4byte	0x30
 2080 02fa 12       		.uleb128 0x12
 2081 02fb 94030000 		.4byte	.LASF46
 2082 02ff F0       		.byte	0xf0
 2083 0300 06       		.byte	0x6
 2084 0301 7B01     		.2byte	0x17b
ARM GAS  /tmp/ccKa46D2.s 			page 73


 2085 0303 74040000 		.4byte	0x474
 2086 0307 13       		.uleb128 0x13
 2087 0308 A7060000 		.4byte	.LASF47
 2088 030c 06       		.byte	0x6
 2089 030d 7F01     		.2byte	0x17f
 2090 030f 45000000 		.4byte	0x45
 2091 0313 02       		.byte	0x2
 2092 0314 23       		.byte	0x23
 2093 0315 00       		.uleb128 0
 2094 0316 13       		.uleb128 0x13
 2095 0317 79040000 		.4byte	.LASF48
 2096 031b 06       		.byte	0x6
 2097 031c 8401     		.2byte	0x184
 2098 031e E3060000 		.4byte	0x6e3
 2099 0322 02       		.byte	0x2
 2100 0323 23       		.byte	0x23
 2101 0324 04       		.uleb128 0x4
 2102 0325 13       		.uleb128 0x13
 2103 0326 740A0000 		.4byte	.LASF49
 2104 032a 06       		.byte	0x6
 2105 032b 8401     		.2byte	0x184
 2106 032d E3060000 		.4byte	0x6e3
 2107 0331 02       		.byte	0x2
 2108 0332 23       		.byte	0x23
 2109 0333 08       		.uleb128 0x8
 2110 0334 13       		.uleb128 0x13
 2111 0335 FD080000 		.4byte	.LASF50
 2112 0339 06       		.byte	0x6
 2113 033a 8401     		.2byte	0x184
 2114 033c E3060000 		.4byte	0x6e3
 2115 0340 02       		.byte	0x2
 2116 0341 23       		.byte	0x23
 2117 0342 0C       		.uleb128 0xc
 2118 0343 13       		.uleb128 0x13
 2119 0344 2E0D0000 		.4byte	.LASF51
 2120 0348 06       		.byte	0x6
 2121 0349 8601     		.2byte	0x186
 2122 034b 45000000 		.4byte	0x45
 2123 034f 02       		.byte	0x2
 2124 0350 23       		.byte	0x23
 2125 0351 10       		.uleb128 0x10
 2126 0352 13       		.uleb128 0x13
 2127 0353 57070000 		.4byte	.LASF52
 2128 0357 06       		.byte	0x6
 2129 0358 8801     		.2byte	0x188
 2130 035a F3050000 		.4byte	0x5f3
 2131 035e 02       		.byte	0x2
 2132 035f 23       		.byte	0x23
 2133 0360 14       		.uleb128 0x14
 2134 0361 13       		.uleb128 0x13
 2135 0362 6A060000 		.4byte	.LASF53
 2136 0366 06       		.byte	0x6
 2137 0367 8A01     		.2byte	0x18a
 2138 0369 45000000 		.4byte	0x45
 2139 036d 02       		.byte	0x2
 2140 036e 23       		.byte	0x23
 2141 036f 18       		.uleb128 0x18
ARM GAS  /tmp/ccKa46D2.s 			page 74


 2142 0370 13       		.uleb128 0x13
 2143 0371 CA020000 		.4byte	.LASF54
 2144 0375 06       		.byte	0x6
 2145 0376 8C01     		.2byte	0x18c
 2146 0378 45000000 		.4byte	0x45
 2147 037c 02       		.byte	0x2
 2148 037d 23       		.byte	0x23
 2149 037e 1C       		.uleb128 0x1c
 2150 037f 13       		.uleb128 0x13
 2151 0380 20080000 		.4byte	.LASF55
 2152 0384 06       		.byte	0x6
 2153 0385 8D01     		.2byte	0x18d
 2154 0387 25060000 		.4byte	0x625
 2155 038b 02       		.byte	0x2
 2156 038c 23       		.byte	0x23
 2157 038d 20       		.uleb128 0x20
 2158 038e 14       		.uleb128 0x14
 2159 038f 5F6D7000 		.ascii	"_mp\000"
 2160 0393 06       		.byte	0x6
 2161 0394 8F01     		.2byte	0x18f
 2162 0396 56080000 		.4byte	0x856
 2163 039a 02       		.byte	0x2
 2164 039b 23       		.byte	0x23
 2165 039c 24       		.uleb128 0x24
 2166 039d 13       		.uleb128 0x13
 2167 039e 27070000 		.4byte	.LASF56
 2168 03a2 06       		.byte	0x6
 2169 03a3 9101     		.2byte	0x191
 2170 03a5 68080000 		.4byte	0x868
 2171 03a9 02       		.byte	0x2
 2172 03aa 23       		.byte	0x23
 2173 03ab 28       		.uleb128 0x28
 2174 03ac 13       		.uleb128 0x13
 2175 03ad E8070000 		.4byte	.LASF57
 2176 03b1 06       		.byte	0x6
 2177 03b2 9301     		.2byte	0x193
 2178 03b4 45000000 		.4byte	0x45
 2179 03b8 02       		.byte	0x2
 2180 03b9 23       		.byte	0x23
 2181 03ba 2C       		.uleb128 0x2c
 2182 03bb 13       		.uleb128 0x13
 2183 03bc 7A000000 		.4byte	.LASF58
 2184 03c0 06       		.byte	0x6
 2185 03c1 9601     		.2byte	0x196
 2186 03c3 45000000 		.4byte	0x45
 2187 03c7 02       		.byte	0x2
 2188 03c8 23       		.byte	0x23
 2189 03c9 30       		.uleb128 0x30
 2190 03ca 13       		.uleb128 0x13
 2191 03cb 7B050000 		.4byte	.LASF59
 2192 03cf 06       		.byte	0x6
 2193 03d0 9701     		.2byte	0x197
 2194 03d2 F3050000 		.4byte	0x5f3
 2195 03d6 02       		.byte	0x2
 2196 03d7 23       		.byte	0x23
 2197 03d8 34       		.uleb128 0x34
 2198 03d9 13       		.uleb128 0x13
ARM GAS  /tmp/ccKa46D2.s 			page 75


 2199 03da 350B0000 		.4byte	.LASF60
 2200 03de 06       		.byte	0x6
 2201 03df 9901     		.2byte	0x199
 2202 03e1 6E080000 		.4byte	0x86e
 2203 03e5 02       		.byte	0x2
 2204 03e6 23       		.byte	0x23
 2205 03e7 38       		.uleb128 0x38
 2206 03e8 13       		.uleb128 0x13
 2207 03e9 41020000 		.4byte	.LASF61
 2208 03ed 06       		.byte	0x6
 2209 03ee 9A01     		.2byte	0x19a
 2210 03f0 74080000 		.4byte	0x874
 2211 03f4 02       		.byte	0x2
 2212 03f5 23       		.byte	0x23
 2213 03f6 3C       		.uleb128 0x3c
 2214 03f7 13       		.uleb128 0x13
 2215 03f8 6D000000 		.4byte	.LASF62
 2216 03fc 06       		.byte	0x6
 2217 03fd 9B01     		.2byte	0x19b
 2218 03ff F3050000 		.4byte	0x5f3
 2219 0403 02       		.byte	0x2
 2220 0404 23       		.byte	0x23
 2221 0405 40       		.uleb128 0x40
 2222 0406 13       		.uleb128 0x13
 2223 0407 69050000 		.4byte	.LASF63
 2224 040b 06       		.byte	0x6
 2225 040c 9E01     		.2byte	0x19e
 2226 040e 86080000 		.4byte	0x886
 2227 0412 02       		.byte	0x2
 2228 0413 23       		.byte	0x23
 2229 0414 44       		.uleb128 0x44
 2230 0415 13       		.uleb128 0x13
 2231 0416 36090000 		.4byte	.LASF39
 2232 041a 06       		.byte	0x6
 2233 041b A101     		.2byte	0x1a1
 2234 041d A7020000 		.4byte	0x2a7
 2235 0421 02       		.byte	0x2
 2236 0422 23       		.byte	0x23
 2237 0423 48       		.uleb128 0x48
 2238 0424 13       		.uleb128 0x13
 2239 0425 46070000 		.4byte	.LASF64
 2240 0429 06       		.byte	0x6
 2241 042a A201     		.2byte	0x1a2
 2242 042c 61020000 		.4byte	0x261
 2243 0430 02       		.byte	0x2
 2244 0431 23       		.byte	0x23
 2245 0432 4C       		.uleb128 0x4c
 2246 0433 13       		.uleb128 0x13
 2247 0434 B9070000 		.4byte	.LASF65
 2248 0438 06       		.byte	0x6
 2249 0439 A401     		.2byte	0x1a4
 2250 043b A2060000 		.4byte	0x6a2
 2251 043f 03       		.byte	0x3
 2252 0440 23       		.byte	0x23
 2253 0441 D801     		.uleb128 0xd8
 2254 0443 13       		.uleb128 0x13
 2255 0444 32000000 		.4byte	.LASF66
ARM GAS  /tmp/ccKa46D2.s 			page 76


 2256 0448 06       		.byte	0x6
 2257 0449 A501     		.2byte	0x1a5
 2258 044b E3060000 		.4byte	0x6e3
 2259 044f 03       		.byte	0x3
 2260 0450 23       		.byte	0x23
 2261 0451 E401     		.uleb128 0xe4
 2262 0453 13       		.uleb128 0x13
 2263 0454 930D0000 		.4byte	.LASF67
 2264 0458 06       		.byte	0x6
 2265 0459 A601     		.2byte	0x1a6
 2266 045b 92080000 		.4byte	0x892
 2267 045f 03       		.byte	0x3
 2268 0460 23       		.byte	0x23
 2269 0461 E801     		.uleb128 0xe8
 2270 0463 13       		.uleb128 0x13
 2271 0464 C3060000 		.4byte	.LASF68
 2272 0468 06       		.byte	0x6
 2273 0469 A701     		.2byte	0x1a7
 2274 046b F3050000 		.4byte	0x5f3
 2275 046f 03       		.byte	0x3
 2276 0470 23       		.byte	0x23
 2277 0471 EC01     		.uleb128 0xec
 2278 0473 00       		.byte	0
 2279 0474 0F       		.uleb128 0xf
 2280 0475 04       		.byte	0x4
 2281 0476 FA020000 		.4byte	0x2fa
 2282 047a 0D       		.uleb128 0xd
 2283 047b 62060000 		.4byte	.LASF69
 2284 047f 68       		.byte	0x68
 2285 0480 06       		.byte	0x6
 2286 0481 B3       		.byte	0xb3
 2287 0482 D4050000 		.4byte	0x5d4
 2288 0486 0E       		.uleb128 0xe
 2289 0487 5F7000   		.ascii	"_p\000"
 2290 048a 06       		.byte	0x6
 2291 048b B4       		.byte	0xb4
 2292 048c F4020000 		.4byte	0x2f4
 2293 0490 02       		.byte	0x2
 2294 0491 23       		.byte	0x23
 2295 0492 00       		.uleb128 0
 2296 0493 0E       		.uleb128 0xe
 2297 0494 5F7200   		.ascii	"_r\000"
 2298 0497 06       		.byte	0x6
 2299 0498 B5       		.byte	0xb5
 2300 0499 45000000 		.4byte	0x45
 2301 049d 02       		.byte	0x2
 2302 049e 23       		.byte	0x23
 2303 049f 04       		.uleb128 0x4
 2304 04a0 0E       		.uleb128 0xe
 2305 04a1 5F7700   		.ascii	"_w\000"
 2306 04a4 06       		.byte	0x6
 2307 04a5 B6       		.byte	0xb6
 2308 04a6 45000000 		.4byte	0x45
 2309 04aa 02       		.byte	0x2
 2310 04ab 23       		.byte	0x23
 2311 04ac 08       		.uleb128 0x8
 2312 04ad 0B       		.uleb128 0xb
ARM GAS  /tmp/ccKa46D2.s 			page 77


 2313 04ae 27090000 		.4byte	.LASF70
 2314 04b2 06       		.byte	0x6
 2315 04b3 B7       		.byte	0xb7
 2316 04b4 37000000 		.4byte	0x37
 2317 04b8 02       		.byte	0x2
 2318 04b9 23       		.byte	0x23
 2319 04ba 0C       		.uleb128 0xc
 2320 04bb 0B       		.uleb128 0xb
 2321 04bc 98010000 		.4byte	.LASF71
 2322 04c0 06       		.byte	0x6
 2323 04c1 B8       		.byte	0xb8
 2324 04c2 37000000 		.4byte	0x37
 2325 04c6 02       		.byte	0x2
 2326 04c7 23       		.byte	0x23
 2327 04c8 0E       		.uleb128 0xe
 2328 04c9 0E       		.uleb128 0xe
 2329 04ca 5F626600 		.ascii	"_bf\000"
 2330 04ce 06       		.byte	0x6
 2331 04cf B9       		.byte	0xb9
 2332 04d0 CB020000 		.4byte	0x2cb
 2333 04d4 02       		.byte	0x2
 2334 04d5 23       		.byte	0x23
 2335 04d6 10       		.uleb128 0x10
 2336 04d7 0B       		.uleb128 0xb
 2337 04d8 250D0000 		.4byte	.LASF72
 2338 04dc 06       		.byte	0x6
 2339 04dd BA       		.byte	0xba
 2340 04de 45000000 		.4byte	0x45
 2341 04e2 02       		.byte	0x2
 2342 04e3 23       		.byte	0x23
 2343 04e4 18       		.uleb128 0x18
 2344 04e5 0B       		.uleb128 0xb
 2345 04e6 680B0000 		.4byte	.LASF73
 2346 04ea 06       		.byte	0x6
 2347 04eb BD       		.byte	0xbd
 2348 04ec 74040000 		.4byte	0x474
 2349 04f0 02       		.byte	0x2
 2350 04f1 23       		.byte	0x23
 2351 04f2 1C       		.uleb128 0x1c
 2352 04f3 0B       		.uleb128 0xb
 2353 04f4 4A050000 		.4byte	.LASF74
 2354 04f8 06       		.byte	0x6
 2355 04f9 C1       		.byte	0xc1
 2356 04fa F4000000 		.4byte	0xf4
 2357 04fe 02       		.byte	0x2
 2358 04ff 23       		.byte	0x23
 2359 0500 20       		.uleb128 0x20
 2360 0501 0B       		.uleb128 0xb
 2361 0502 3C000000 		.4byte	.LASF75
 2362 0506 06       		.byte	0x6
 2363 0507 C3       		.byte	0xc3
 2364 0508 00060000 		.4byte	0x600
 2365 050c 02       		.byte	0x2
 2366 050d 23       		.byte	0x23
 2367 050e 24       		.uleb128 0x24
 2368 050f 0B       		.uleb128 0xb
 2369 0510 5E000000 		.4byte	.LASF76
ARM GAS  /tmp/ccKa46D2.s 			page 78


 2370 0514 06       		.byte	0x6
 2371 0515 C5       		.byte	0xc5
 2372 0516 30060000 		.4byte	0x630
 2373 051a 02       		.byte	0x2
 2374 051b 23       		.byte	0x23
 2375 051c 28       		.uleb128 0x28
 2376 051d 0B       		.uleb128 0xb
 2377 051e 8D090000 		.4byte	.LASF77
 2378 0522 06       		.byte	0x6
 2379 0523 C7       		.byte	0xc7
 2380 0524 55060000 		.4byte	0x655
 2381 0528 02       		.byte	0x2
 2382 0529 23       		.byte	0x23
 2383 052a 2C       		.uleb128 0x2c
 2384 052b 0B       		.uleb128 0xb
 2385 052c 01040000 		.4byte	.LASF78
 2386 0530 06       		.byte	0x6
 2387 0531 C8       		.byte	0xc8
 2388 0532 70060000 		.4byte	0x670
 2389 0536 02       		.byte	0x2
 2390 0537 23       		.byte	0x23
 2391 0538 30       		.uleb128 0x30
 2392 0539 0E       		.uleb128 0xe
 2393 053a 5F756200 		.ascii	"_ub\000"
 2394 053e 06       		.byte	0x6
 2395 053f CB       		.byte	0xcb
 2396 0540 CB020000 		.4byte	0x2cb
 2397 0544 02       		.byte	0x2
 2398 0545 23       		.byte	0x23
 2399 0546 34       		.uleb128 0x34
 2400 0547 0E       		.uleb128 0xe
 2401 0548 5F757000 		.ascii	"_up\000"
 2402 054c 06       		.byte	0x6
 2403 054d CC       		.byte	0xcc
 2404 054e F4020000 		.4byte	0x2f4
 2405 0552 02       		.byte	0x2
 2406 0553 23       		.byte	0x23
 2407 0554 3C       		.uleb128 0x3c
 2408 0555 0E       		.uleb128 0xe
 2409 0556 5F757200 		.ascii	"_ur\000"
 2410 055a 06       		.byte	0x6
 2411 055b CD       		.byte	0xcd
 2412 055c 45000000 		.4byte	0x45
 2413 0560 02       		.byte	0x2
 2414 0561 23       		.byte	0x23
 2415 0562 40       		.uleb128 0x40
 2416 0563 0B       		.uleb128 0xb
 2417 0564 EC080000 		.4byte	.LASF79
 2418 0568 06       		.byte	0x6
 2419 0569 D0       		.byte	0xd0
 2420 056a 76060000 		.4byte	0x676
 2421 056e 02       		.byte	0x2
 2422 056f 23       		.byte	0x23
 2423 0570 44       		.uleb128 0x44
 2424 0571 0B       		.uleb128 0xb
 2425 0572 C2000000 		.4byte	.LASF80
 2426 0576 06       		.byte	0x6
ARM GAS  /tmp/ccKa46D2.s 			page 79


 2427 0577 D1       		.byte	0xd1
 2428 0578 86060000 		.4byte	0x686
 2429 057c 02       		.byte	0x2
 2430 057d 23       		.byte	0x23
 2431 057e 47       		.uleb128 0x47
 2432 057f 0E       		.uleb128 0xe
 2433 0580 5F6C6200 		.ascii	"_lb\000"
 2434 0584 06       		.byte	0x6
 2435 0585 D4       		.byte	0xd4
 2436 0586 CB020000 		.4byte	0x2cb
 2437 058a 02       		.byte	0x2
 2438 058b 23       		.byte	0x23
 2439 058c 48       		.uleb128 0x48
 2440 058d 0B       		.uleb128 0xb
 2441 058e 880A0000 		.4byte	.LASF81
 2442 0592 06       		.byte	0x6
 2443 0593 D7       		.byte	0xd7
 2444 0594 45000000 		.4byte	0x45
 2445 0598 02       		.byte	0x2
 2446 0599 23       		.byte	0x23
 2447 059a 50       		.uleb128 0x50
 2448 059b 0B       		.uleb128 0xb
 2449 059c 73050000 		.4byte	.LASF82
 2450 05a0 06       		.byte	0x6
 2451 05a1 D8       		.byte	0xd8
 2452 05a2 45000000 		.4byte	0x45
 2453 05a6 02       		.byte	0x2
 2454 05a7 23       		.byte	0x23
 2455 05a8 54       		.uleb128 0x54
 2456 05a9 0B       		.uleb128 0xb
 2457 05aa EE000000 		.4byte	.LASF83
 2458 05ae 06       		.byte	0x6
 2459 05af DF       		.byte	0xdf
 2460 05b0 E9000000 		.4byte	0xe9
 2461 05b4 02       		.byte	0x2
 2462 05b5 23       		.byte	0x23
 2463 05b6 58       		.uleb128 0x58
 2464 05b7 0B       		.uleb128 0xb
 2465 05b8 13090000 		.4byte	.LASF84
 2466 05bc 06       		.byte	0x6
 2467 05bd E1       		.byte	0xe1
 2468 05be DE000000 		.4byte	0xde
 2469 05c2 02       		.byte	0x2
 2470 05c3 23       		.byte	0x23
 2471 05c4 5C       		.uleb128 0x5c
 2472 05c5 0B       		.uleb128 0xb
 2473 05c6 75060000 		.4byte	.LASF85
 2474 05ca 06       		.byte	0x6
 2475 05cb E2       		.byte	0xe2
 2476 05cc 45000000 		.4byte	0x45
 2477 05d0 02       		.byte	0x2
 2478 05d1 23       		.byte	0x23
 2479 05d2 64       		.uleb128 0x64
 2480 05d3 00       		.byte	0
 2481 05d4 15       		.uleb128 0x15
 2482 05d5 01       		.byte	0x1
 2483 05d6 45000000 		.4byte	0x45
ARM GAS  /tmp/ccKa46D2.s 			page 80


 2484 05da F3050000 		.4byte	0x5f3
 2485 05de 16       		.uleb128 0x16
 2486 05df 74040000 		.4byte	0x474
 2487 05e3 16       		.uleb128 0x16
 2488 05e4 F4000000 		.4byte	0xf4
 2489 05e8 16       		.uleb128 0x16
 2490 05e9 F3050000 		.4byte	0x5f3
 2491 05ed 16       		.uleb128 0x16
 2492 05ee 45000000 		.4byte	0x45
 2493 05f2 00       		.byte	0
 2494 05f3 0F       		.uleb128 0xf
 2495 05f4 04       		.byte	0x4
 2496 05f5 F9050000 		.4byte	0x5f9
 2497 05f9 02       		.uleb128 0x2
 2498 05fa 01       		.byte	0x1
 2499 05fb 08       		.byte	0x8
 2500 05fc DF030000 		.4byte	.LASF86
 2501 0600 0F       		.uleb128 0xf
 2502 0601 04       		.byte	0x4
 2503 0602 D4050000 		.4byte	0x5d4
 2504 0606 15       		.uleb128 0x15
 2505 0607 01       		.byte	0x1
 2506 0608 45000000 		.4byte	0x45
 2507 060c 25060000 		.4byte	0x625
 2508 0610 16       		.uleb128 0x16
 2509 0611 74040000 		.4byte	0x474
 2510 0615 16       		.uleb128 0x16
 2511 0616 F4000000 		.4byte	0xf4
 2512 061a 16       		.uleb128 0x16
 2513 061b 25060000 		.4byte	0x625
 2514 061f 16       		.uleb128 0x16
 2515 0620 45000000 		.4byte	0x45
 2516 0624 00       		.byte	0
 2517 0625 0F       		.uleb128 0xf
 2518 0626 04       		.byte	0x4
 2519 0627 2B060000 		.4byte	0x62b
 2520 062b 17       		.uleb128 0x17
 2521 062c F9050000 		.4byte	0x5f9
 2522 0630 0F       		.uleb128 0xf
 2523 0631 04       		.byte	0x4
 2524 0632 06060000 		.4byte	0x606
 2525 0636 15       		.uleb128 0x15
 2526 0637 01       		.byte	0x1
 2527 0638 73000000 		.4byte	0x73
 2528 063c 55060000 		.4byte	0x655
 2529 0640 16       		.uleb128 0x16
 2530 0641 74040000 		.4byte	0x474
 2531 0645 16       		.uleb128 0x16
 2532 0646 F4000000 		.4byte	0xf4
 2533 064a 16       		.uleb128 0x16
 2534 064b 73000000 		.4byte	0x73
 2535 064f 16       		.uleb128 0x16
 2536 0650 45000000 		.4byte	0x45
 2537 0654 00       		.byte	0
 2538 0655 0F       		.uleb128 0xf
 2539 0656 04       		.byte	0x4
 2540 0657 36060000 		.4byte	0x636
ARM GAS  /tmp/ccKa46D2.s 			page 81


 2541 065b 15       		.uleb128 0x15
 2542 065c 01       		.byte	0x1
 2543 065d 45000000 		.4byte	0x45
 2544 0661 70060000 		.4byte	0x670
 2545 0665 16       		.uleb128 0x16
 2546 0666 74040000 		.4byte	0x474
 2547 066a 16       		.uleb128 0x16
 2548 066b F4000000 		.4byte	0xf4
 2549 066f 00       		.byte	0
 2550 0670 0F       		.uleb128 0xf
 2551 0671 04       		.byte	0x4
 2552 0672 5B060000 		.4byte	0x65b
 2553 0676 08       		.uleb128 0x8
 2554 0677 30000000 		.4byte	0x30
 2555 067b 86060000 		.4byte	0x686
 2556 067f 09       		.uleb128 0x9
 2557 0680 4C000000 		.4byte	0x4c
 2558 0684 02       		.byte	0x2
 2559 0685 00       		.byte	0
 2560 0686 08       		.uleb128 0x8
 2561 0687 30000000 		.4byte	0x30
 2562 068b 96060000 		.4byte	0x696
 2563 068f 09       		.uleb128 0x9
 2564 0690 4C000000 		.4byte	0x4c
 2565 0694 00       		.byte	0
 2566 0695 00       		.byte	0
 2567 0696 05       		.uleb128 0x5
 2568 0697 0E0B0000 		.4byte	.LASF87
 2569 069b 06       		.byte	0x6
 2570 069c 1E01     		.2byte	0x11e
 2571 069e 7A040000 		.4byte	0x47a
 2572 06a2 12       		.uleb128 0x12
 2573 06a3 4A080000 		.4byte	.LASF88
 2574 06a7 0C       		.byte	0xc
 2575 06a8 06       		.byte	0x6
 2576 06a9 2201     		.2byte	0x122
 2577 06ab DD060000 		.4byte	0x6dd
 2578 06af 13       		.uleb128 0x13
 2579 06b0 620B0000 		.4byte	.LASF19
 2580 06b4 06       		.byte	0x6
 2581 06b5 2401     		.2byte	0x124
 2582 06b7 DD060000 		.4byte	0x6dd
 2583 06bb 02       		.byte	0x2
 2584 06bc 23       		.byte	0x23
 2585 06bd 00       		.uleb128 0
 2586 06be 13       		.uleb128 0x13
 2587 06bf A8070000 		.4byte	.LASF89
 2588 06c3 06       		.byte	0x6
 2589 06c4 2501     		.2byte	0x125
 2590 06c6 45000000 		.4byte	0x45
 2591 06ca 02       		.byte	0x2
 2592 06cb 23       		.byte	0x23
 2593 06cc 04       		.uleb128 0x4
 2594 06cd 13       		.uleb128 0x13
 2595 06ce 44080000 		.4byte	.LASF90
 2596 06d2 06       		.byte	0x6
 2597 06d3 2601     		.2byte	0x126
ARM GAS  /tmp/ccKa46D2.s 			page 82


 2598 06d5 E3060000 		.4byte	0x6e3
 2599 06d9 02       		.byte	0x2
 2600 06da 23       		.byte	0x23
 2601 06db 08       		.uleb128 0x8
 2602 06dc 00       		.byte	0
 2603 06dd 0F       		.uleb128 0xf
 2604 06de 04       		.byte	0x4
 2605 06df A2060000 		.4byte	0x6a2
 2606 06e3 0F       		.uleb128 0xf
 2607 06e4 04       		.byte	0x4
 2608 06e5 96060000 		.4byte	0x696
 2609 06e9 12       		.uleb128 0x12
 2610 06ea 590A0000 		.4byte	.LASF91
 2611 06ee 18       		.byte	0x18
 2612 06ef 06       		.byte	0x6
 2613 06f0 3E01     		.2byte	0x13e
 2614 06f2 33070000 		.4byte	0x733
 2615 06f6 13       		.uleb128 0x13
 2616 06f7 87090000 		.4byte	.LASF92
 2617 06fb 06       		.byte	0x6
 2618 06fc 3F01     		.2byte	0x13f
 2619 06fe 33070000 		.4byte	0x733
 2620 0702 02       		.byte	0x2
 2621 0703 23       		.byte	0x23
 2622 0704 00       		.uleb128 0
 2623 0705 13       		.uleb128 0x13
 2624 0706 26010000 		.4byte	.LASF93
 2625 070a 06       		.byte	0x6
 2626 070b 4001     		.2byte	0x140
 2627 070d 33070000 		.4byte	0x733
 2628 0711 02       		.byte	0x2
 2629 0712 23       		.byte	0x23
 2630 0713 06       		.uleb128 0x6
 2631 0714 13       		.uleb128 0x13
 2632 0715 120E0000 		.4byte	.LASF94
 2633 0719 06       		.byte	0x6
 2634 071a 4101     		.2byte	0x141
 2635 071c 3E000000 		.4byte	0x3e
 2636 0720 02       		.byte	0x2
 2637 0721 23       		.byte	0x23
 2638 0722 0C       		.uleb128 0xc
 2639 0723 13       		.uleb128 0x13
 2640 0724 1C090000 		.4byte	.LASF95
 2641 0728 06       		.byte	0x6
 2642 0729 4401     		.2byte	0x144
 2643 072b 5A000000 		.4byte	0x5a
 2644 072f 02       		.byte	0x2
 2645 0730 23       		.byte	0x23
 2646 0731 10       		.uleb128 0x10
 2647 0732 00       		.byte	0
 2648 0733 08       		.uleb128 0x8
 2649 0734 3E000000 		.4byte	0x3e
 2650 0738 43070000 		.4byte	0x743
 2651 073c 09       		.uleb128 0x9
 2652 073d 4C000000 		.4byte	0x4c
 2653 0741 02       		.byte	0x2
 2654 0742 00       		.byte	0
ARM GAS  /tmp/ccKa46D2.s 			page 83


 2655 0743 12       		.uleb128 0x12
 2656 0744 850D0000 		.4byte	.LASF96
 2657 0748 10       		.byte	0x10
 2658 0749 06       		.byte	0x6
 2659 074a 5F01     		.2byte	0x15f
 2660 074c 8D070000 		.4byte	0x78d
 2661 0750 13       		.uleb128 0x13
 2662 0751 DE0D0000 		.4byte	.LASF97
 2663 0755 06       		.byte	0x6
 2664 0756 6201     		.2byte	0x162
 2665 0758 67010000 		.4byte	0x167
 2666 075c 02       		.byte	0x2
 2667 075d 23       		.byte	0x23
 2668 075e 00       		.uleb128 0
 2669 075f 13       		.uleb128 0x13
 2670 0760 13020000 		.4byte	.LASF98
 2671 0764 06       		.byte	0x6
 2672 0765 6301     		.2byte	0x163
 2673 0767 45000000 		.4byte	0x45
 2674 076b 02       		.byte	0x2
 2675 076c 23       		.byte	0x23
 2676 076d 04       		.uleb128 0x4
 2677 076e 13       		.uleb128 0x13
 2678 076f 19060000 		.4byte	.LASF99
 2679 0773 06       		.byte	0x6
 2680 0774 6401     		.2byte	0x164
 2681 0776 67010000 		.4byte	0x167
 2682 077a 02       		.byte	0x2
 2683 077b 23       		.byte	0x23
 2684 077c 08       		.uleb128 0x8
 2685 077d 13       		.uleb128 0x13
 2686 077e 30080000 		.4byte	.LASF100
 2687 0782 06       		.byte	0x6
 2688 0783 6501     		.2byte	0x165
 2689 0785 8D070000 		.4byte	0x78d
 2690 0789 02       		.byte	0x2
 2691 078a 23       		.byte	0x23
 2692 078b 0C       		.uleb128 0xc
 2693 078c 00       		.byte	0
 2694 078d 0F       		.uleb128 0xf
 2695 078e 04       		.byte	0x4
 2696 078f 67010000 		.4byte	0x167
 2697 0793 12       		.uleb128 0x12
 2698 0794 B1020000 		.4byte	.LASF101
 2699 0798 50       		.byte	0x50
 2700 0799 06       		.byte	0x6
 2701 079a 6901     		.2byte	0x169
 2702 079c 46080000 		.4byte	0x846
 2703 07a0 13       		.uleb128 0x13
 2704 07a1 BA0A0000 		.4byte	.LASF102
 2705 07a5 06       		.byte	0x6
 2706 07a6 6C01     		.2byte	0x16c
 2707 07a8 F3050000 		.4byte	0x5f3
 2708 07ac 02       		.byte	0x2
 2709 07ad 23       		.byte	0x23
 2710 07ae 00       		.uleb128 0
 2711 07af 13       		.uleb128 0x13
ARM GAS  /tmp/ccKa46D2.s 			page 84


 2712 07b0 A30C0000 		.4byte	.LASF103
 2713 07b4 06       		.byte	0x6
 2714 07b5 6D01     		.2byte	0x16d
 2715 07b7 DE000000 		.4byte	0xde
 2716 07bb 02       		.byte	0x2
 2717 07bc 23       		.byte	0x23
 2718 07bd 04       		.uleb128 0x4
 2719 07be 13       		.uleb128 0x13
 2720 07bf 05090000 		.4byte	.LASF104
 2721 07c3 06       		.byte	0x6
 2722 07c4 6E01     		.2byte	0x16e
 2723 07c6 DE000000 		.4byte	0xde
 2724 07ca 02       		.byte	0x2
 2725 07cb 23       		.byte	0x23
 2726 07cc 0C       		.uleb128 0xc
 2727 07cd 13       		.uleb128 0x13
 2728 07ce D4090000 		.4byte	.LASF105
 2729 07d2 06       		.byte	0x6
 2730 07d3 6F01     		.2byte	0x16f
 2731 07d5 DE000000 		.4byte	0xde
 2732 07d9 02       		.byte	0x2
 2733 07da 23       		.byte	0x23
 2734 07db 14       		.uleb128 0x14
 2735 07dc 13       		.uleb128 0x13
 2736 07dd D1000000 		.4byte	.LASF106
 2737 07e1 06       		.byte	0x6
 2738 07e2 7001     		.2byte	0x170
 2739 07e4 46080000 		.4byte	0x846
 2740 07e8 02       		.byte	0x2
 2741 07e9 23       		.byte	0x23
 2742 07ea 1C       		.uleb128 0x1c
 2743 07eb 13       		.uleb128 0x13
 2744 07ec CD0E0000 		.4byte	.LASF107
 2745 07f0 06       		.byte	0x6
 2746 07f1 7101     		.2byte	0x171
 2747 07f3 45000000 		.4byte	0x45
 2748 07f7 02       		.byte	0x2
 2749 07f8 23       		.byte	0x23
 2750 07f9 24       		.uleb128 0x24
 2751 07fa 13       		.uleb128 0x13
 2752 07fb E8010000 		.4byte	.LASF108
 2753 07ff 06       		.byte	0x6
 2754 0800 7201     		.2byte	0x172
 2755 0802 DE000000 		.4byte	0xde
 2756 0806 02       		.byte	0x2
 2757 0807 23       		.byte	0x23
 2758 0808 28       		.uleb128 0x28
 2759 0809 13       		.uleb128 0x13
 2760 080a D80A0000 		.4byte	.LASF109
 2761 080e 06       		.byte	0x6
 2762 080f 7301     		.2byte	0x173
 2763 0811 DE000000 		.4byte	0xde
 2764 0815 02       		.byte	0x2
 2765 0816 23       		.byte	0x23
 2766 0817 30       		.uleb128 0x30
 2767 0818 13       		.uleb128 0x13
 2768 0819 510E0000 		.4byte	.LASF110
ARM GAS  /tmp/ccKa46D2.s 			page 85


 2769 081d 06       		.byte	0x6
 2770 081e 7401     		.2byte	0x174
 2771 0820 DE000000 		.4byte	0xde
 2772 0824 02       		.byte	0x2
 2773 0825 23       		.byte	0x23
 2774 0826 38       		.uleb128 0x38
 2775 0827 13       		.uleb128 0x13
 2776 0828 B9080000 		.4byte	.LASF111
 2777 082c 06       		.byte	0x6
 2778 082d 7501     		.2byte	0x175
 2779 082f DE000000 		.4byte	0xde
 2780 0833 02       		.byte	0x2
 2781 0834 23       		.byte	0x23
 2782 0835 40       		.uleb128 0x40
 2783 0836 13       		.uleb128 0x13
 2784 0837 B1000000 		.4byte	.LASF112
 2785 083b 06       		.byte	0x6
 2786 083c 7601     		.2byte	0x176
 2787 083e DE000000 		.4byte	0xde
 2788 0842 02       		.byte	0x2
 2789 0843 23       		.byte	0x23
 2790 0844 48       		.uleb128 0x48
 2791 0845 00       		.byte	0
 2792 0846 08       		.uleb128 0x8
 2793 0847 F9050000 		.4byte	0x5f9
 2794 084b 56080000 		.4byte	0x856
 2795 084f 09       		.uleb128 0x9
 2796 0850 4C000000 		.4byte	0x4c
 2797 0854 07       		.byte	0x7
 2798 0855 00       		.byte	0
 2799 0856 0F       		.uleb128 0xf
 2800 0857 04       		.byte	0x4
 2801 0858 43070000 		.4byte	0x743
 2802 085c 18       		.uleb128 0x18
 2803 085d 01       		.byte	0x1
 2804 085e 68080000 		.4byte	0x868
 2805 0862 16       		.uleb128 0x16
 2806 0863 74040000 		.4byte	0x474
 2807 0867 00       		.byte	0
 2808 0868 0F       		.uleb128 0xf
 2809 0869 04       		.byte	0x4
 2810 086a 5C080000 		.4byte	0x85c
 2811 086e 0F       		.uleb128 0xf
 2812 086f 04       		.byte	0x4
 2813 0870 E9060000 		.4byte	0x6e9
 2814 0874 0F       		.uleb128 0xf
 2815 0875 04       		.byte	0x4
 2816 0876 7D010000 		.4byte	0x17d
 2817 087a 18       		.uleb128 0x18
 2818 087b 01       		.byte	0x1
 2819 087c 86080000 		.4byte	0x886
 2820 0880 16       		.uleb128 0x16
 2821 0881 45000000 		.4byte	0x45
 2822 0885 00       		.byte	0
 2823 0886 0F       		.uleb128 0xf
 2824 0887 04       		.byte	0x4
 2825 0888 8C080000 		.4byte	0x88c
ARM GAS  /tmp/ccKa46D2.s 			page 86


 2826 088c 0F       		.uleb128 0xf
 2827 088d 04       		.byte	0x4
 2828 088e 7A080000 		.4byte	0x87a
 2829 0892 0F       		.uleb128 0xf
 2830 0893 04       		.byte	0x4
 2831 0894 93070000 		.4byte	0x793
 2832 0898 04       		.uleb128 0x4
 2833 0899 ED020000 		.4byte	.LASF113
 2834 089d 07       		.byte	0x7
 2835 089e 2A       		.byte	0x2a
 2836 089f 30000000 		.4byte	0x30
 2837 08a3 04       		.uleb128 0x4
 2838 08a4 D40C0000 		.4byte	.LASF114
 2839 08a8 07       		.byte	0x7
 2840 08a9 35       		.byte	0x35
 2841 08aa 37000000 		.4byte	0x37
 2842 08ae 04       		.uleb128 0x4
 2843 08af 180A0000 		.4byte	.LASF115
 2844 08b3 07       		.byte	0x7
 2845 08b4 36       		.byte	0x36
 2846 08b5 3E000000 		.4byte	0x3e
 2847 08b9 04       		.uleb128 0x4
 2848 08ba 65000000 		.4byte	.LASF116
 2849 08be 07       		.byte	0x7
 2850 08bf 4F       		.byte	0x4f
 2851 08c0 6C000000 		.4byte	0x6c
 2852 08c4 04       		.uleb128 0x4
 2853 08c5 C60D0000 		.4byte	.LASF117
 2854 08c9 07       		.byte	0x7
 2855 08ca 50       		.byte	0x50
 2856 08cb 01010000 		.4byte	0x101
 2857 08cf 17       		.uleb128 0x17
 2858 08d0 D4080000 		.4byte	0x8d4
 2859 08d4 19       		.uleb128 0x19
 2860 08d5 C4080000 		.4byte	0x8c4
 2861 08d9 19       		.uleb128 0x19
 2862 08da C4080000 		.4byte	0x8c4
 2863 08de 1A       		.uleb128 0x1a
 2864 08df 6F020000 		.4byte	.LASF393
 2865 08e3 01       		.byte	0x1
 2866 08e4 08       		.byte	0x8
 2867 08e5 49       		.byte	0x49
 2868 08e6 DB090000 		.4byte	0x9db
 2869 08ea 1B       		.uleb128 0x1b
 2870 08eb EC050000 		.4byte	.LASF118
 2871 08ef 72       		.sleb128 -14
 2872 08f0 1B       		.uleb128 0x1b
 2873 08f1 45060000 		.4byte	.LASF119
 2874 08f5 74       		.sleb128 -12
 2875 08f6 1B       		.uleb128 0x1b
 2876 08f7 31070000 		.4byte	.LASF120
 2877 08fb 75       		.sleb128 -11
 2878 08fc 1B       		.uleb128 0x1b
 2879 08fd BD030000 		.4byte	.LASF121
 2880 0901 76       		.sleb128 -10
 2881 0902 1B       		.uleb128 0x1b
 2882 0903 DC070000 		.4byte	.LASF122
ARM GAS  /tmp/ccKa46D2.s 			page 87


 2883 0907 7B       		.sleb128 -5
 2884 0908 1B       		.uleb128 0x1b
 2885 0909 170C0000 		.4byte	.LASF123
 2886 090d 7C       		.sleb128 -4
 2887 090e 1B       		.uleb128 0x1b
 2888 090f 450E0000 		.4byte	.LASF124
 2889 0913 7E       		.sleb128 -2
 2890 0914 1B       		.uleb128 0x1b
 2891 0915 BD020000 		.4byte	.LASF125
 2892 0919 7F       		.sleb128 -1
 2893 091a 1B       		.uleb128 0x1b
 2894 091b 83050000 		.4byte	.LASF126
 2895 091f 00       		.sleb128 0
 2896 0920 1B       		.uleb128 0x1b
 2897 0921 34010000 		.4byte	.LASF127
 2898 0925 01       		.sleb128 1
 2899 0926 1B       		.uleb128 0x1b
 2900 0927 E30E0000 		.4byte	.LASF128
 2901 092b 02       		.sleb128 2
 2902 092c 1B       		.uleb128 0x1b
 2903 092d C7050000 		.4byte	.LASF129
 2904 0931 03       		.sleb128 3
 2905 0932 1B       		.uleb128 0x1b
 2906 0933 F6060000 		.4byte	.LASF130
 2907 0937 04       		.sleb128 4
 2908 0938 1B       		.uleb128 0x1b
 2909 0939 57050000 		.4byte	.LASF131
 2910 093d 05       		.sleb128 5
 2911 093e 1B       		.uleb128 0x1b
 2912 093f 60050000 		.4byte	.LASF132
 2913 0943 06       		.sleb128 6
 2914 0944 1B       		.uleb128 0x1b
 2915 0945 2A0B0000 		.4byte	.LASF133
 2916 0949 08       		.sleb128 8
 2917 094a 1B       		.uleb128 0x1b
 2918 094b 93090000 		.4byte	.LASF134
 2919 094f 09       		.sleb128 9
 2920 0950 1B       		.uleb128 0x1b
 2921 0951 0D040000 		.4byte	.LASF135
 2922 0955 0A       		.sleb128 10
 2923 0956 1B       		.uleb128 0x1b
 2924 0957 FB0C0000 		.4byte	.LASF136
 2925 095b 0B       		.sleb128 11
 2926 095c 1B       		.uleb128 0x1b
 2927 095d E30B0000 		.4byte	.LASF137
 2928 0961 0C       		.sleb128 12
 2929 0962 1B       		.uleb128 0x1b
 2930 0963 9D050000 		.4byte	.LASF138
 2931 0967 0D       		.sleb128 13
 2932 0968 1B       		.uleb128 0x1b
 2933 0969 830B0000 		.4byte	.LASF139
 2934 096d 0E       		.sleb128 14
 2935 096e 1B       		.uleb128 0x1b
 2936 096f 7C0A0000 		.4byte	.LASF140
 2937 0973 0F       		.sleb128 15
 2938 0974 1B       		.uleb128 0x1b
 2939 0975 690A0000 		.4byte	.LASF141
ARM GAS  /tmp/ccKa46D2.s 			page 88


 2940 0979 12       		.sleb128 18
 2941 097a 1B       		.uleb128 0x1b
 2942 097b A8080000 		.4byte	.LASF142
 2943 097f 13       		.sleb128 19
 2944 0980 1B       		.uleb128 0x1b
 2945 0981 AF070000 		.4byte	.LASF143
 2946 0985 14       		.sleb128 20
 2947 0986 1B       		.uleb128 0x1b
 2948 0987 750B0000 		.4byte	.LASF144
 2949 098b 15       		.sleb128 21
 2950 098c 1B       		.uleb128 0x1b
 2951 098d B30D0000 		.4byte	.LASF145
 2952 0991 16       		.sleb128 22
 2953 0992 1B       		.uleb128 0x1b
 2954 0993 C60B0000 		.4byte	.LASF146
 2955 0997 17       		.sleb128 23
 2956 0998 1B       		.uleb128 0x1b
 2957 0999 94050000 		.4byte	.LASF147
 2958 099d 18       		.sleb128 24
 2959 099e 1B       		.uleb128 0x1b
 2960 099f 18000000 		.4byte	.LASF148
 2961 09a3 19       		.sleb128 25
 2962 09a4 1B       		.uleb128 0x1b
 2963 09a5 690E0000 		.4byte	.LASF149
 2964 09a9 1A       		.sleb128 26
 2965 09aa 1B       		.uleb128 0x1b
 2966 09ab 9F080000 		.4byte	.LASF150
 2967 09af 1B       		.sleb128 27
 2968 09b0 1B       		.uleb128 0x1b
 2969 09b1 86020000 		.4byte	.LASF151
 2970 09b5 1C       		.sleb128 28
 2971 09b6 1B       		.uleb128 0x1b
 2972 09b7 C70A0000 		.4byte	.LASF152
 2973 09bb 1D       		.sleb128 29
 2974 09bc 1B       		.uleb128 0x1b
 2975 09bd E2050000 		.4byte	.LASF153
 2976 09c1 1E       		.sleb128 30
 2977 09c2 1B       		.uleb128 0x1b
 2978 09c3 E9040000 		.4byte	.LASF154
 2979 09c7 1F       		.sleb128 31
 2980 09c8 1B       		.uleb128 0x1b
 2981 09c9 C7010000 		.4byte	.LASF155
 2982 09cd 20       		.sleb128 32
 2983 09ce 1B       		.uleb128 0x1b
 2984 09cf 41050000 		.4byte	.LASF156
 2985 09d3 21       		.sleb128 33
 2986 09d4 1B       		.uleb128 0x1b
 2987 09d5 D9050000 		.4byte	.LASF157
 2988 09d9 22       		.sleb128 34
 2989 09da 00       		.byte	0
 2990 09db 04       		.uleb128 0x4
 2991 09dc 86060000 		.4byte	.LASF158
 2992 09e0 08       		.byte	0x8
 2993 09e1 76       		.byte	0x76
 2994 09e2 DE080000 		.4byte	0x8de
 2995 09e6 1C       		.uleb128 0x1c
 2996 09e7 040E     		.2byte	0xe04
ARM GAS  /tmp/ccKa46D2.s 			page 89


 2997 09e9 01       		.byte	0x1
 2998 09ea 84       		.byte	0x84
 2999 09eb B00A0000 		.4byte	0xab0
 3000 09ef 0B       		.uleb128 0xb
 3001 09f0 800E0000 		.4byte	.LASF159
 3002 09f4 01       		.byte	0x1
 3003 09f5 86       		.byte	0x86
 3004 09f6 C00A0000 		.4byte	0xac0
 3005 09fa 02       		.byte	0x2
 3006 09fb 23       		.byte	0x23
 3007 09fc 00       		.uleb128 0
 3008 09fd 0B       		.uleb128 0xb
 3009 09fe 2D030000 		.4byte	.LASF160
 3010 0a02 01       		.byte	0x1
 3011 0a03 87       		.byte	0x87
 3012 0a04 C50A0000 		.4byte	0xac5
 3013 0a08 02       		.byte	0x2
 3014 0a09 23       		.byte	0x23
 3015 0a0a 20       		.uleb128 0x20
 3016 0a0b 0B       		.uleb128 0xb
 3017 0a0c F90A0000 		.4byte	.LASF161
 3018 0a10 01       		.byte	0x1
 3019 0a11 88       		.byte	0x88
 3020 0a12 D50A0000 		.4byte	0xad5
 3021 0a16 03       		.byte	0x3
 3022 0a17 23       		.byte	0x23
 3023 0a18 8001     		.uleb128 0x80
 3024 0a1a 0B       		.uleb128 0xb
 3025 0a1b 00000000 		.4byte	.LASF162
 3026 0a1f 01       		.byte	0x1
 3027 0a20 89       		.byte	0x89
 3028 0a21 C50A0000 		.4byte	0xac5
 3029 0a25 03       		.byte	0x3
 3030 0a26 23       		.byte	0x23
 3031 0a27 A001     		.uleb128 0xa0
 3032 0a29 0B       		.uleb128 0xb
 3033 0a2a FB040000 		.4byte	.LASF163
 3034 0a2e 01       		.byte	0x1
 3035 0a2f 8A       		.byte	0x8a
 3036 0a30 DA0A0000 		.4byte	0xada
 3037 0a34 03       		.byte	0x3
 3038 0a35 23       		.byte	0x23
 3039 0a36 8002     		.uleb128 0x100
 3040 0a38 0B       		.uleb128 0xb
 3041 0a39 B3030000 		.4byte	.LASF164
 3042 0a3d 01       		.byte	0x1
 3043 0a3e 8B       		.byte	0x8b
 3044 0a3f C50A0000 		.4byte	0xac5
 3045 0a43 03       		.byte	0x3
 3046 0a44 23       		.byte	0x23
 3047 0a45 A002     		.uleb128 0x120
 3048 0a47 0B       		.uleb128 0xb
 3049 0a48 4C010000 		.4byte	.LASF165
 3050 0a4c 01       		.byte	0x1
 3051 0a4d 8C       		.byte	0x8c
 3052 0a4e DF0A0000 		.4byte	0xadf
 3053 0a52 03       		.byte	0x3
ARM GAS  /tmp/ccKa46D2.s 			page 90


 3054 0a53 23       		.byte	0x23
 3055 0a54 8003     		.uleb128 0x180
 3056 0a56 0B       		.uleb128 0xb
 3057 0a57 45030000 		.4byte	.LASF166
 3058 0a5b 01       		.byte	0x1
 3059 0a5c 8D       		.byte	0x8d
 3060 0a5d C50A0000 		.4byte	0xac5
 3061 0a61 03       		.byte	0x3
 3062 0a62 23       		.byte	0x23
 3063 0a63 A003     		.uleb128 0x1a0
 3064 0a65 0B       		.uleb128 0xb
 3065 0a66 7D030000 		.4byte	.LASF167
 3066 0a6a 01       		.byte	0x1
 3067 0a6b 8E       		.byte	0x8e
 3068 0a6c E40A0000 		.4byte	0xae4
 3069 0a70 03       		.byte	0x3
 3070 0a71 23       		.byte	0x23
 3071 0a72 8004     		.uleb128 0x200
 3072 0a74 0B       		.uleb128 0xb
 3073 0a75 4F030000 		.4byte	.LASF168
 3074 0a79 01       		.byte	0x1
 3075 0a7a 8F       		.byte	0x8f
 3076 0a7b E90A0000 		.4byte	0xae9
 3077 0a7f 03       		.byte	0x3
 3078 0a80 23       		.byte	0x23
 3079 0a81 A004     		.uleb128 0x220
 3080 0a83 0E       		.uleb128 0xe
 3081 0a84 495000   		.ascii	"IP\000"
 3082 0a87 01       		.byte	0x1
 3083 0a88 90       		.byte	0x90
 3084 0a89 090B0000 		.4byte	0xb09
 3085 0a8d 03       		.byte	0x3
 3086 0a8e 23       		.byte	0x23
 3087 0a8f 8006     		.uleb128 0x300
 3088 0a91 0B       		.uleb128 0xb
 3089 0a92 59030000 		.4byte	.LASF169
 3090 0a96 01       		.byte	0x1
 3091 0a97 91       		.byte	0x91
 3092 0a98 0E0B0000 		.4byte	0xb0e
 3093 0a9c 03       		.byte	0x3
 3094 0a9d 23       		.byte	0x23
 3095 0a9e F007     		.uleb128 0x3f0
 3096 0aa0 0B       		.uleb128 0xb
 3097 0aa1 33050000 		.4byte	.LASF170
 3098 0aa5 01       		.byte	0x1
 3099 0aa6 92       		.byte	0x92
 3100 0aa7 D9080000 		.4byte	0x8d9
 3101 0aab 03       		.byte	0x3
 3102 0aac 23       		.byte	0x23
 3103 0aad 801C     		.uleb128 0xe00
 3104 0aaf 00       		.byte	0
 3105 0ab0 08       		.uleb128 0x8
 3106 0ab1 C4080000 		.4byte	0x8c4
 3107 0ab5 C00A0000 		.4byte	0xac0
 3108 0ab9 09       		.uleb128 0x9
 3109 0aba 4C000000 		.4byte	0x4c
 3110 0abe 07       		.byte	0x7
ARM GAS  /tmp/ccKa46D2.s 			page 91


 3111 0abf 00       		.byte	0
 3112 0ac0 19       		.uleb128 0x19
 3113 0ac1 B00A0000 		.4byte	0xab0
 3114 0ac5 08       		.uleb128 0x8
 3115 0ac6 C4080000 		.4byte	0x8c4
 3116 0aca D50A0000 		.4byte	0xad5
 3117 0ace 09       		.uleb128 0x9
 3118 0acf 4C000000 		.4byte	0x4c
 3119 0ad3 17       		.byte	0x17
 3120 0ad4 00       		.byte	0
 3121 0ad5 19       		.uleb128 0x19
 3122 0ad6 B00A0000 		.4byte	0xab0
 3123 0ada 19       		.uleb128 0x19
 3124 0adb B00A0000 		.4byte	0xab0
 3125 0adf 19       		.uleb128 0x19
 3126 0ae0 B00A0000 		.4byte	0xab0
 3127 0ae4 19       		.uleb128 0x19
 3128 0ae5 B00A0000 		.4byte	0xab0
 3129 0ae9 08       		.uleb128 0x8
 3130 0aea C4080000 		.4byte	0x8c4
 3131 0aee F90A0000 		.4byte	0xaf9
 3132 0af2 09       		.uleb128 0x9
 3133 0af3 4C000000 		.4byte	0x4c
 3134 0af7 37       		.byte	0x37
 3135 0af8 00       		.byte	0
 3136 0af9 08       		.uleb128 0x8
 3137 0afa 98080000 		.4byte	0x898
 3138 0afe 090B0000 		.4byte	0xb09
 3139 0b02 09       		.uleb128 0x9
 3140 0b03 4C000000 		.4byte	0x4c
 3141 0b07 EF       		.byte	0xef
 3142 0b08 00       		.byte	0
 3143 0b09 19       		.uleb128 0x19
 3144 0b0a F90A0000 		.4byte	0xaf9
 3145 0b0e 08       		.uleb128 0x8
 3146 0b0f C4080000 		.4byte	0x8c4
 3147 0b13 1F0B0000 		.4byte	0xb1f
 3148 0b17 1D       		.uleb128 0x1d
 3149 0b18 4C000000 		.4byte	0x4c
 3150 0b1c 8302     		.2byte	0x283
 3151 0b1e 00       		.byte	0
 3152 0b1f 04       		.uleb128 0x4
 3153 0b20 42000000 		.4byte	.LASF171
 3154 0b24 01       		.byte	0x1
 3155 0b25 93       		.byte	0x93
 3156 0b26 E6090000 		.4byte	0x9e6
 3157 0b2a 0A       		.uleb128 0xa
 3158 0b2b 74       		.byte	0x74
 3159 0b2c 01       		.byte	0x1
 3160 0b2d 9B       		.byte	0x9b
 3161 0b2e 3D0C0000 		.4byte	0xc3d
 3162 0b32 0B       		.uleb128 0xb
 3163 0b33 2C020000 		.4byte	.LASF172
 3164 0b37 01       		.byte	0x1
 3165 0b38 9D       		.byte	0x9d
 3166 0b39 CF080000 		.4byte	0x8cf
 3167 0b3d 02       		.byte	0x2
ARM GAS  /tmp/ccKa46D2.s 			page 92


 3168 0b3e 23       		.byte	0x23
 3169 0b3f 00       		.uleb128 0
 3170 0b40 0B       		.uleb128 0xb
 3171 0b41 DC020000 		.4byte	.LASF173
 3172 0b45 01       		.byte	0x1
 3173 0b46 9E       		.byte	0x9e
 3174 0b47 D9080000 		.4byte	0x8d9
 3175 0b4b 02       		.byte	0x2
 3176 0b4c 23       		.byte	0x23
 3177 0b4d 04       		.uleb128 0x4
 3178 0b4e 0B       		.uleb128 0xb
 3179 0b4f DB000000 		.4byte	.LASF174
 3180 0b53 01       		.byte	0x1
 3181 0b54 9F       		.byte	0x9f
 3182 0b55 D9080000 		.4byte	0x8d9
 3183 0b59 02       		.byte	0x2
 3184 0b5a 23       		.byte	0x23
 3185 0b5b 08       		.uleb128 0x8
 3186 0b5c 0B       		.uleb128 0xb
 3187 0b5d AC010000 		.4byte	.LASF175
 3188 0b61 01       		.byte	0x1
 3189 0b62 A0       		.byte	0xa0
 3190 0b63 D9080000 		.4byte	0x8d9
 3191 0b67 02       		.byte	0x2
 3192 0b68 23       		.byte	0x23
 3193 0b69 0C       		.uleb128 0xc
 3194 0b6a 0E       		.uleb128 0xe
 3195 0b6b 53435200 		.ascii	"SCR\000"
 3196 0b6f 01       		.byte	0x1
 3197 0b70 A1       		.byte	0xa1
 3198 0b71 D9080000 		.4byte	0x8d9
 3199 0b75 02       		.byte	0x2
 3200 0b76 23       		.byte	0x23
 3201 0b77 10       		.uleb128 0x10
 3202 0b78 0E       		.uleb128 0xe
 3203 0b79 43435200 		.ascii	"CCR\000"
 3204 0b7d 01       		.byte	0x1
 3205 0b7e A2       		.byte	0xa2
 3206 0b7f D9080000 		.4byte	0x8d9
 3207 0b83 02       		.byte	0x2
 3208 0b84 23       		.byte	0x23
 3209 0b85 14       		.uleb128 0x14
 3210 0b86 0E       		.uleb128 0xe
 3211 0b87 53485000 		.ascii	"SHP\000"
 3212 0b8b 01       		.byte	0x1
 3213 0b8c A3       		.byte	0xa3
 3214 0b8d 4D0C0000 		.4byte	0xc4d
 3215 0b91 02       		.byte	0x2
 3216 0b92 23       		.byte	0x23
 3217 0b93 18       		.uleb128 0x18
 3218 0b94 0B       		.uleb128 0xb
 3219 0b95 25050000 		.4byte	.LASF176
 3220 0b99 01       		.byte	0x1
 3221 0b9a A4       		.byte	0xa4
 3222 0b9b D9080000 		.4byte	0x8d9
 3223 0b9f 02       		.byte	0x2
 3224 0ba0 23       		.byte	0x23
ARM GAS  /tmp/ccKa46D2.s 			page 93


 3225 0ba1 24       		.uleb128 0x24
 3226 0ba2 0B       		.uleb128 0xb
 3227 0ba3 A30B0000 		.4byte	.LASF177
 3228 0ba7 01       		.byte	0x1
 3229 0ba8 A5       		.byte	0xa5
 3230 0ba9 D9080000 		.4byte	0x8d9
 3231 0bad 02       		.byte	0x2
 3232 0bae 23       		.byte	0x23
 3233 0baf 28       		.uleb128 0x28
 3234 0bb0 0B       		.uleb128 0xb
 3235 0bb1 96040000 		.4byte	.LASF178
 3236 0bb5 01       		.byte	0x1
 3237 0bb6 A6       		.byte	0xa6
 3238 0bb7 D9080000 		.4byte	0x8d9
 3239 0bbb 02       		.byte	0x2
 3240 0bbc 23       		.byte	0x23
 3241 0bbd 2C       		.uleb128 0x2c
 3242 0bbe 0B       		.uleb128 0xb
 3243 0bbf 08040000 		.4byte	.LASF179
 3244 0bc3 01       		.byte	0x1
 3245 0bc4 A7       		.byte	0xa7
 3246 0bc5 D9080000 		.4byte	0x8d9
 3247 0bc9 02       		.byte	0x2
 3248 0bca 23       		.byte	0x23
 3249 0bcb 30       		.uleb128 0x30
 3250 0bcc 0B       		.uleb128 0xb
 3251 0bcd 9D0C0000 		.4byte	.LASF180
 3252 0bd1 01       		.byte	0x1
 3253 0bd2 A8       		.byte	0xa8
 3254 0bd3 D9080000 		.4byte	0x8d9
 3255 0bd7 02       		.byte	0x2
 3256 0bd8 23       		.byte	0x23
 3257 0bd9 34       		.uleb128 0x34
 3258 0bda 0B       		.uleb128 0xb
 3259 0bdb CF090000 		.4byte	.LASF181
 3260 0bdf 01       		.byte	0x1
 3261 0be0 A9       		.byte	0xa9
 3262 0be1 D9080000 		.4byte	0x8d9
 3263 0be5 02       		.byte	0x2
 3264 0be6 23       		.byte	0x23
 3265 0be7 38       		.uleb128 0x38
 3266 0be8 0B       		.uleb128 0xb
 3267 0be9 490B0000 		.4byte	.LASF182
 3268 0bed 01       		.byte	0x1
 3269 0bee AA       		.byte	0xaa
 3270 0bef D9080000 		.4byte	0x8d9
 3271 0bf3 02       		.byte	0x2
 3272 0bf4 23       		.byte	0x23
 3273 0bf5 3C       		.uleb128 0x3c
 3274 0bf6 0E       		.uleb128 0xe
 3275 0bf7 50465200 		.ascii	"PFR\000"
 3276 0bfb 01       		.byte	0x1
 3277 0bfc AB       		.byte	0xab
 3278 0bfd 620C0000 		.4byte	0xc62
 3279 0c01 02       		.byte	0x2
 3280 0c02 23       		.byte	0x23
 3281 0c03 40       		.uleb128 0x40
ARM GAS  /tmp/ccKa46D2.s 			page 94


 3282 0c04 0E       		.uleb128 0xe
 3283 0c05 44465200 		.ascii	"DFR\000"
 3284 0c09 01       		.byte	0x1
 3285 0c0a AC       		.byte	0xac
 3286 0c0b CF080000 		.4byte	0x8cf
 3287 0c0f 02       		.byte	0x2
 3288 0c10 23       		.byte	0x23
 3289 0c11 48       		.uleb128 0x48
 3290 0c12 0E       		.uleb128 0xe
 3291 0c13 41445200 		.ascii	"ADR\000"
 3292 0c17 01       		.byte	0x1
 3293 0c18 AD       		.byte	0xad
 3294 0c19 CF080000 		.4byte	0x8cf
 3295 0c1d 02       		.byte	0x2
 3296 0c1e 23       		.byte	0x23
 3297 0c1f 4C       		.uleb128 0x4c
 3298 0c20 0B       		.uleb128 0xb
 3299 0c21 8B0C0000 		.4byte	.LASF183
 3300 0c25 01       		.byte	0x1
 3301 0c26 AE       		.byte	0xae
 3302 0c27 7C0C0000 		.4byte	0xc7c
 3303 0c2b 02       		.byte	0x2
 3304 0c2c 23       		.byte	0x23
 3305 0c2d 50       		.uleb128 0x50
 3306 0c2e 0B       		.uleb128 0xb
 3307 0c2f E40C0000 		.4byte	.LASF184
 3308 0c33 01       		.byte	0x1
 3309 0c34 AF       		.byte	0xaf
 3310 0c35 960C0000 		.4byte	0xc96
 3311 0c39 02       		.byte	0x2
 3312 0c3a 23       		.byte	0x23
 3313 0c3b 60       		.uleb128 0x60
 3314 0c3c 00       		.byte	0
 3315 0c3d 08       		.uleb128 0x8
 3316 0c3e 98080000 		.4byte	0x898
 3317 0c42 4D0C0000 		.4byte	0xc4d
 3318 0c46 09       		.uleb128 0x9
 3319 0c47 4C000000 		.4byte	0x4c
 3320 0c4b 0B       		.byte	0xb
 3321 0c4c 00       		.byte	0
 3322 0c4d 19       		.uleb128 0x19
 3323 0c4e 3D0C0000 		.4byte	0xc3d
 3324 0c52 08       		.uleb128 0x8
 3325 0c53 C4080000 		.4byte	0x8c4
 3326 0c57 620C0000 		.4byte	0xc62
 3327 0c5b 09       		.uleb128 0x9
 3328 0c5c 4C000000 		.4byte	0x4c
 3329 0c60 01       		.byte	0x1
 3330 0c61 00       		.byte	0
 3331 0c62 17       		.uleb128 0x17
 3332 0c63 670C0000 		.4byte	0xc67
 3333 0c67 19       		.uleb128 0x19
 3334 0c68 520C0000 		.4byte	0xc52
 3335 0c6c 08       		.uleb128 0x8
 3336 0c6d C4080000 		.4byte	0x8c4
 3337 0c71 7C0C0000 		.4byte	0xc7c
 3338 0c75 09       		.uleb128 0x9
ARM GAS  /tmp/ccKa46D2.s 			page 95


 3339 0c76 4C000000 		.4byte	0x4c
 3340 0c7a 03       		.byte	0x3
 3341 0c7b 00       		.byte	0
 3342 0c7c 17       		.uleb128 0x17
 3343 0c7d 810C0000 		.4byte	0xc81
 3344 0c81 19       		.uleb128 0x19
 3345 0c82 6C0C0000 		.4byte	0xc6c
 3346 0c86 08       		.uleb128 0x8
 3347 0c87 C4080000 		.4byte	0x8c4
 3348 0c8b 960C0000 		.4byte	0xc96
 3349 0c8f 09       		.uleb128 0x9
 3350 0c90 4C000000 		.4byte	0x4c
 3351 0c94 04       		.byte	0x4
 3352 0c95 00       		.byte	0
 3353 0c96 17       		.uleb128 0x17
 3354 0c97 9B0C0000 		.4byte	0xc9b
 3355 0c9b 19       		.uleb128 0x19
 3356 0c9c 860C0000 		.4byte	0xc86
 3357 0ca0 04       		.uleb128 0x4
 3358 0ca1 F1030000 		.4byte	.LASF185
 3359 0ca5 01       		.byte	0x1
 3360 0ca6 B0       		.byte	0xb0
 3361 0ca7 2A0B0000 		.4byte	0xb2a
 3362 0cab 19       		.uleb128 0x19
 3363 0cac 01010000 		.4byte	0x101
 3364 0cb0 17       		.uleb128 0x17
 3365 0cb1 AB0C0000 		.4byte	0xcab
 3366 0cb5 08       		.uleb128 0x8
 3367 0cb6 01010000 		.4byte	0x101
 3368 0cba C50C0000 		.4byte	0xcc5
 3369 0cbe 09       		.uleb128 0x9
 3370 0cbf 4C000000 		.4byte	0x4c
 3371 0cc3 12       		.byte	0x12
 3372 0cc4 00       		.byte	0
 3373 0cc5 1C       		.uleb128 0x1c
 3374 0cc6 2801     		.2byte	0x128
 3375 0cc8 08       		.byte	0x8
 3376 0cc9 EF       		.byte	0xef
 3377 0cca EB0E0000 		.4byte	0xeeb
 3378 0cce 0B       		.uleb128 0xb
 3379 0ccf 1E0D0000 		.4byte	.LASF186
 3380 0cd3 08       		.byte	0x8
 3381 0cd4 F0       		.byte	0xf0
 3382 0cd5 AB0C0000 		.4byte	0xcab
 3383 0cd9 02       		.byte	0x2
 3384 0cda 23       		.byte	0x23
 3385 0cdb 00       		.uleb128 0
 3386 0cdc 0B       		.uleb128 0xb
 3387 0cdd DD060000 		.4byte	.LASF187
 3388 0ce1 08       		.byte	0x8
 3389 0ce2 F1       		.byte	0xf1
 3390 0ce3 AB0C0000 		.4byte	0xcab
 3391 0ce7 02       		.byte	0x2
 3392 0ce8 23       		.byte	0x23
 3393 0ce9 04       		.uleb128 0x4
 3394 0cea 0B       		.uleb128 0xb
 3395 0ceb 4E0B0000 		.4byte	.LASF188
ARM GAS  /tmp/ccKa46D2.s 			page 96


 3396 0cef 08       		.byte	0x8
 3397 0cf0 F2       		.byte	0xf2
 3398 0cf1 AB0C0000 		.4byte	0xcab
 3399 0cf5 02       		.byte	0x2
 3400 0cf6 23       		.byte	0x23
 3401 0cf7 08       		.uleb128 0x8
 3402 0cf8 0B       		.uleb128 0xb
 3403 0cf9 580B0000 		.4byte	.LASF189
 3404 0cfd 08       		.byte	0x8
 3405 0cfe F3       		.byte	0xf3
 3406 0cff AB0C0000 		.4byte	0xcab
 3407 0d03 02       		.byte	0x2
 3408 0d04 23       		.byte	0x23
 3409 0d05 0C       		.uleb128 0xc
 3410 0d06 0B       		.uleb128 0xb
 3411 0d07 770E0000 		.4byte	.LASF190
 3412 0d0b 08       		.byte	0x8
 3413 0d0c F4       		.byte	0xf4
 3414 0d0d AB0C0000 		.4byte	0xcab
 3415 0d11 02       		.byte	0x2
 3416 0d12 23       		.byte	0x23
 3417 0d13 10       		.uleb128 0x10
 3418 0d14 0B       		.uleb128 0xb
 3419 0d15 F60D0000 		.4byte	.LASF191
 3420 0d19 08       		.byte	0x8
 3421 0d1a F5       		.byte	0xf5
 3422 0d1b AB0C0000 		.4byte	0xcab
 3423 0d1f 02       		.byte	0x2
 3424 0d20 23       		.byte	0x23
 3425 0d21 14       		.uleb128 0x14
 3426 0d22 0B       		.uleb128 0xb
 3427 0d23 10060000 		.4byte	.LASF192
 3428 0d27 08       		.byte	0x8
 3429 0d28 F6       		.byte	0xf6
 3430 0d29 B00C0000 		.4byte	0xcb0
 3431 0d2d 02       		.byte	0x2
 3432 0d2e 23       		.byte	0x23
 3433 0d2f 18       		.uleb128 0x18
 3434 0d30 0B       		.uleb128 0xb
 3435 0d31 8F0B0000 		.4byte	.LASF193
 3436 0d35 08       		.byte	0x8
 3437 0d36 F7       		.byte	0xf7
 3438 0d37 FB0E0000 		.4byte	0xefb
 3439 0d3b 02       		.byte	0x2
 3440 0d3c 23       		.byte	0x23
 3441 0d3d 1C       		.uleb128 0x1c
 3442 0d3e 0B       		.uleb128 0xb
 3443 0d3f E4060000 		.4byte	.LASF194
 3444 0d43 08       		.byte	0x8
 3445 0d44 F8       		.byte	0xf8
 3446 0d45 B00C0000 		.4byte	0xcb0
 3447 0d49 02       		.byte	0x2
 3448 0d4a 23       		.byte	0x23
 3449 0d4b 20       		.uleb128 0x20
 3450 0d4c 0B       		.uleb128 0xb
 3451 0d4d DC080000 		.4byte	.LASF195
 3452 0d51 08       		.byte	0x8
ARM GAS  /tmp/ccKa46D2.s 			page 97


 3453 0d52 F9       		.byte	0xf9
 3454 0d53 AB0C0000 		.4byte	0xcab
 3455 0d57 02       		.byte	0x2
 3456 0d58 23       		.byte	0x23
 3457 0d59 24       		.uleb128 0x24
 3458 0d5a 0B       		.uleb128 0xb
 3459 0d5b 81080000 		.4byte	.LASF196
 3460 0d5f 08       		.byte	0x8
 3461 0d60 FA       		.byte	0xfa
 3462 0d61 AB0C0000 		.4byte	0xcab
 3463 0d65 02       		.byte	0x2
 3464 0d66 23       		.byte	0x23
 3465 0d67 28       		.uleb128 0x28
 3466 0d68 0B       		.uleb128 0xb
 3467 0d69 160D0000 		.4byte	.LASF197
 3468 0d6d 08       		.byte	0x8
 3469 0d6e FB       		.byte	0xfb
 3470 0d6f B00C0000 		.4byte	0xcb0
 3471 0d73 02       		.byte	0x2
 3472 0d74 23       		.byte	0x23
 3473 0d75 2C       		.uleb128 0x2c
 3474 0d76 0B       		.uleb128 0xb
 3475 0d77 9D000000 		.4byte	.LASF198
 3476 0d7b 08       		.byte	0x8
 3477 0d7c FC       		.byte	0xfc
 3478 0d7d B00C0000 		.4byte	0xcb0
 3479 0d81 02       		.byte	0x2
 3480 0d82 23       		.byte	0x23
 3481 0d83 30       		.uleb128 0x30
 3482 0d84 0B       		.uleb128 0xb
 3483 0d85 990B0000 		.4byte	.LASF199
 3484 0d89 08       		.byte	0x8
 3485 0d8a FD       		.byte	0xfd
 3486 0d8b 100F0000 		.4byte	0xf10
 3487 0d8f 02       		.byte	0x2
 3488 0d90 23       		.byte	0x23
 3489 0d91 34       		.uleb128 0x34
 3490 0d92 0B       		.uleb128 0xb
 3491 0d93 E90C0000 		.4byte	.LASF200
 3492 0d97 08       		.byte	0x8
 3493 0d98 FE       		.byte	0xfe
 3494 0d99 B00C0000 		.4byte	0xcb0
 3495 0d9d 02       		.byte	0x2
 3496 0d9e 23       		.byte	0x23
 3497 0d9f 3C       		.uleb128 0x3c
 3498 0da0 0B       		.uleb128 0xb
 3499 0da1 95000000 		.4byte	.LASF201
 3500 0da5 08       		.byte	0x8
 3501 0da6 FF       		.byte	0xff
 3502 0da7 AB0C0000 		.4byte	0xcab
 3503 0dab 02       		.byte	0x2
 3504 0dac 23       		.byte	0x23
 3505 0dad 40       		.uleb128 0x40
 3506 0dae 13       		.uleb128 0x13
 3507 0daf 8D0E0000 		.4byte	.LASF202
 3508 0db3 08       		.byte	0x8
 3509 0db4 0001     		.2byte	0x100
ARM GAS  /tmp/ccKa46D2.s 			page 98


 3510 0db6 AB0C0000 		.4byte	0xcab
 3511 0dba 02       		.byte	0x2
 3512 0dbb 23       		.byte	0x23
 3513 0dbc 44       		.uleb128 0x44
 3514 0dbd 13       		.uleb128 0x13
 3515 0dbe AE060000 		.4byte	.LASF203
 3516 0dc2 08       		.byte	0x8
 3517 0dc3 0101     		.2byte	0x101
 3518 0dc5 AB0C0000 		.4byte	0xcab
 3519 0dc9 02       		.byte	0x2
 3520 0dca 23       		.byte	0x23
 3521 0dcb 48       		.uleb128 0x48
 3522 0dcc 13       		.uleb128 0x13
 3523 0dcd 610A0000 		.4byte	.LASF204
 3524 0dd1 08       		.byte	0x8
 3525 0dd2 0201     		.2byte	0x102
 3526 0dd4 AB0C0000 		.4byte	0xcab
 3527 0dd8 02       		.byte	0x2
 3528 0dd9 23       		.byte	0x23
 3529 0dda 4C       		.uleb128 0x4c
 3530 0ddb 13       		.uleb128 0x13
 3531 0ddc 2B050000 		.4byte	.LASF205
 3532 0de0 08       		.byte	0x8
 3533 0de1 0301     		.2byte	0x103
 3534 0de3 250F0000 		.4byte	0xf25
 3535 0de7 02       		.byte	0x2
 3536 0de8 23       		.byte	0x23
 3537 0de9 50       		.uleb128 0x50
 3538 0dea 13       		.uleb128 0x13
 3539 0deb 0D010000 		.4byte	.LASF206
 3540 0def 08       		.byte	0x8
 3541 0df0 0401     		.2byte	0x104
 3542 0df2 2F0F0000 		.4byte	0xf2f
 3543 0df6 03       		.byte	0x3
 3544 0df7 23       		.byte	0x23
 3545 0df8 9001     		.uleb128 0x90
 3546 0dfa 13       		.uleb128 0x13
 3547 0dfb E60D0000 		.4byte	.LASF207
 3548 0dff 08       		.byte	0x8
 3549 0e00 0501     		.2byte	0x105
 3550 0e02 AB0C0000 		.4byte	0xcab
 3551 0e06 03       		.byte	0x3
 3552 0e07 23       		.byte	0x23
 3553 0e08 9401     		.uleb128 0x94
 3554 0e0a 13       		.uleb128 0x13
 3555 0e0b A80B0000 		.4byte	.LASF208
 3556 0e0f 08       		.byte	0x8
 3557 0e10 0601     		.2byte	0x106
 3558 0e12 340F0000 		.4byte	0xf34
 3559 0e16 03       		.byte	0x3
 3560 0e17 23       		.byte	0x23
 3561 0e18 9801     		.uleb128 0x98
 3562 0e1a 13       		.uleb128 0x13
 3563 0e1b 2A0E0000 		.4byte	.LASF209
 3564 0e1f 08       		.byte	0x8
 3565 0e20 0701     		.2byte	0x107
 3566 0e22 AB0C0000 		.4byte	0xcab
ARM GAS  /tmp/ccKa46D2.s 			page 99


 3567 0e26 03       		.byte	0x3
 3568 0e27 23       		.byte	0x23
 3569 0e28 E401     		.uleb128 0xe4
 3570 0e2a 13       		.uleb128 0x13
 3571 0e2b 8F010000 		.4byte	.LASF210
 3572 0e2f 08       		.byte	0x8
 3573 0e30 0801     		.2byte	0x108
 3574 0e32 B00C0000 		.4byte	0xcb0
 3575 0e36 03       		.byte	0x3
 3576 0e37 23       		.byte	0x23
 3577 0e38 E801     		.uleb128 0xe8
 3578 0e3a 13       		.uleb128 0x13
 3579 0e3b B20B0000 		.4byte	.LASF211
 3580 0e3f 08       		.byte	0x8
 3581 0e40 0901     		.2byte	0x109
 3582 0e42 490F0000 		.4byte	0xf49
 3583 0e46 03       		.byte	0x3
 3584 0e47 23       		.byte	0x23
 3585 0e48 EC01     		.uleb128 0xec
 3586 0e4a 13       		.uleb128 0x13
 3587 0e4b 2C010000 		.4byte	.LASF212
 3588 0e4f 08       		.byte	0x8
 3589 0e50 0A01     		.2byte	0x10a
 3590 0e52 AB0C0000 		.4byte	0xcab
 3591 0e56 03       		.byte	0x3
 3592 0e57 23       		.byte	0x23
 3593 0e58 8002     		.uleb128 0x100
 3594 0e5a 13       		.uleb128 0x13
 3595 0e5b 16050000 		.4byte	.LASF213
 3596 0e5f 08       		.byte	0x8
 3597 0e60 0B01     		.2byte	0x10b
 3598 0e62 AB0C0000 		.4byte	0xcab
 3599 0e66 03       		.byte	0x3
 3600 0e67 23       		.byte	0x23
 3601 0e68 8402     		.uleb128 0x104
 3602 0e6a 13       		.uleb128 0x13
 3603 0e6b 59020000 		.4byte	.LASF214
 3604 0e6f 08       		.byte	0x8
 3605 0e70 0C01     		.2byte	0x10c
 3606 0e72 AB0C0000 		.4byte	0xcab
 3607 0e76 03       		.byte	0x3
 3608 0e77 23       		.byte	0x23
 3609 0e78 8802     		.uleb128 0x108
 3610 0e7a 13       		.uleb128 0x13
 3611 0e7b F10A0000 		.4byte	.LASF215
 3612 0e7f 08       		.byte	0x8
 3613 0e80 0D01     		.2byte	0x10d
 3614 0e82 AB0C0000 		.4byte	0xcab
 3615 0e86 03       		.byte	0x3
 3616 0e87 23       		.byte	0x23
 3617 0e88 8C02     		.uleb128 0x10c
 3618 0e8a 13       		.uleb128 0x13
 3619 0e8b 43010000 		.4byte	.LASF216
 3620 0e8f 08       		.byte	0x8
 3621 0e90 0E01     		.2byte	0x10e
 3622 0e92 AB0C0000 		.4byte	0xcab
 3623 0e96 03       		.byte	0x3
ARM GAS  /tmp/ccKa46D2.s 			page 100


 3624 0e97 23       		.byte	0x23
 3625 0e98 9002     		.uleb128 0x110
 3626 0e9a 13       		.uleb128 0x13
 3627 0e9b B3090000 		.4byte	.LASF217
 3628 0e9f 08       		.byte	0x8
 3629 0ea0 0F01     		.2byte	0x10f
 3630 0ea2 AB0C0000 		.4byte	0xcab
 3631 0ea6 03       		.byte	0x3
 3632 0ea7 23       		.byte	0x23
 3633 0ea8 9402     		.uleb128 0x114
 3634 0eaa 13       		.uleb128 0x13
 3635 0eab 61010000 		.4byte	.LASF218
 3636 0eaf 08       		.byte	0x8
 3637 0eb0 1001     		.2byte	0x110
 3638 0eb2 AB0C0000 		.4byte	0xcab
 3639 0eb6 03       		.byte	0x3
 3640 0eb7 23       		.byte	0x23
 3641 0eb8 9802     		.uleb128 0x118
 3642 0eba 13       		.uleb128 0x13
 3643 0ebb E2090000 		.4byte	.LASF219
 3644 0ebf 08       		.byte	0x8
 3645 0ec0 1101     		.2byte	0x111
 3646 0ec2 AB0C0000 		.4byte	0xcab
 3647 0ec6 03       		.byte	0x3
 3648 0ec7 23       		.byte	0x23
 3649 0ec8 9C02     		.uleb128 0x11c
 3650 0eca 13       		.uleb128 0x13
 3651 0ecb 380D0000 		.4byte	.LASF220
 3652 0ecf 08       		.byte	0x8
 3653 0ed0 1201     		.2byte	0x112
 3654 0ed2 AB0C0000 		.4byte	0xcab
 3655 0ed6 03       		.byte	0x3
 3656 0ed7 23       		.byte	0x23
 3657 0ed8 A002     		.uleb128 0x120
 3658 0eda 13       		.uleb128 0x13
 3659 0edb BE050000 		.4byte	.LASF221
 3660 0edf 08       		.byte	0x8
 3661 0ee0 1301     		.2byte	0x113
 3662 0ee2 B00C0000 		.4byte	0xcb0
 3663 0ee6 03       		.byte	0x3
 3664 0ee7 23       		.byte	0x23
 3665 0ee8 A402     		.uleb128 0x124
 3666 0eea 00       		.byte	0
 3667 0eeb 08       		.uleb128 0x8
 3668 0eec 01010000 		.4byte	0x101
 3669 0ef0 FB0E0000 		.4byte	0xefb
 3670 0ef4 09       		.uleb128 0x9
 3671 0ef5 4C000000 		.4byte	0x4c
 3672 0ef9 00       		.byte	0
 3673 0efa 00       		.byte	0
 3674 0efb 19       		.uleb128 0x19
 3675 0efc EB0E0000 		.4byte	0xeeb
 3676 0f00 08       		.uleb128 0x8
 3677 0f01 01010000 		.4byte	0x101
 3678 0f05 100F0000 		.4byte	0xf10
 3679 0f09 09       		.uleb128 0x9
 3680 0f0a 4C000000 		.4byte	0x4c
ARM GAS  /tmp/ccKa46D2.s 			page 101


 3681 0f0e 01       		.byte	0x1
 3682 0f0f 00       		.byte	0
 3683 0f10 19       		.uleb128 0x19
 3684 0f11 000F0000 		.4byte	0xf00
 3685 0f15 08       		.uleb128 0x8
 3686 0f16 01010000 		.4byte	0x101
 3687 0f1a 250F0000 		.4byte	0xf25
 3688 0f1e 09       		.uleb128 0x9
 3689 0f1f 4C000000 		.4byte	0x4c
 3690 0f23 0F       		.byte	0xf
 3691 0f24 00       		.byte	0
 3692 0f25 17       		.uleb128 0x17
 3693 0f26 2A0F0000 		.4byte	0xf2a
 3694 0f2a 19       		.uleb128 0x19
 3695 0f2b 150F0000 		.4byte	0xf15
 3696 0f2f 19       		.uleb128 0x19
 3697 0f30 EB0E0000 		.4byte	0xeeb
 3698 0f34 19       		.uleb128 0x19
 3699 0f35 B50C0000 		.4byte	0xcb5
 3700 0f39 08       		.uleb128 0x8
 3701 0f3a 01010000 		.4byte	0x101
 3702 0f3e 490F0000 		.4byte	0xf49
 3703 0f42 09       		.uleb128 0x9
 3704 0f43 4C000000 		.4byte	0x4c
 3705 0f47 04       		.byte	0x4
 3706 0f48 00       		.byte	0
 3707 0f49 19       		.uleb128 0x19
 3708 0f4a 390F0000 		.4byte	0xf39
 3709 0f4e 1E       		.uleb128 0x1e
 3710 0f4f 41646300 		.ascii	"Adc\000"
 3711 0f53 08       		.byte	0x8
 3712 0f54 1401     		.2byte	0x114
 3713 0f56 C50C0000 		.4byte	0xcc5
 3714 0f5a 08       		.uleb128 0x8
 3715 0f5b 01010000 		.4byte	0x101
 3716 0f5f 6A0F0000 		.4byte	0xf6a
 3717 0f63 09       		.uleb128 0x9
 3718 0f64 4C000000 		.4byte	0x4c
 3719 0f68 03       		.byte	0x3
 3720 0f69 00       		.byte	0
 3721 0f6a 08       		.uleb128 0x8
 3722 0f6b 01010000 		.4byte	0x101
 3723 0f6f 7A0F0000 		.4byte	0xf7a
 3724 0f73 09       		.uleb128 0x9
 3725 0f74 4C000000 		.4byte	0x4c
 3726 0f78 0B       		.byte	0xb
 3727 0f79 00       		.byte	0
 3728 0f7a 08       		.uleb128 0x8
 3729 0f7b 01010000 		.4byte	0x101
 3730 0f7f 8A0F0000 		.4byte	0xf8a
 3731 0f83 09       		.uleb128 0x9
 3732 0f84 4C000000 		.4byte	0x4c
 3733 0f88 0A       		.byte	0xa
 3734 0f89 00       		.byte	0
 3735 0f8a 1F       		.uleb128 0x1f
 3736 0f8b 9001     		.2byte	0x190
 3737 0f8d 08       		.byte	0x8
ARM GAS  /tmp/ccKa46D2.s 			page 102


 3738 0f8e E006     		.2byte	0x6e0
 3739 0f90 37140000 		.4byte	0x1437
 3740 0f94 13       		.uleb128 0x13
 3741 0f95 3D0E0000 		.4byte	.LASF222
 3742 0f99 08       		.byte	0x8
 3743 0f9a E106     		.2byte	0x6e1
 3744 0f9c AB0C0000 		.4byte	0xcab
 3745 0fa0 02       		.byte	0x2
 3746 0fa1 23       		.byte	0x23
 3747 0fa2 00       		.uleb128 0
 3748 0fa3 13       		.uleb128 0x13
 3749 0fa4 00050000 		.4byte	.LASF223
 3750 0fa8 08       		.byte	0x8
 3751 0fa9 E206     		.2byte	0x6e2
 3752 0fab AB0C0000 		.4byte	0xcab
 3753 0faf 02       		.byte	0x2
 3754 0fb0 23       		.byte	0x23
 3755 0fb1 04       		.uleb128 0x4
 3756 0fb2 13       		.uleb128 0x13
 3757 0fb3 A7050000 		.4byte	.LASF224
 3758 0fb7 08       		.byte	0x8
 3759 0fb8 E306     		.2byte	0x6e3
 3760 0fba B00C0000 		.4byte	0xcb0
 3761 0fbe 02       		.byte	0x2
 3762 0fbf 23       		.byte	0x23
 3763 0fc0 08       		.uleb128 0x8
 3764 0fc1 13       		.uleb128 0x13
 3765 0fc2 8F0B0000 		.4byte	.LASF193
 3766 0fc6 08       		.byte	0x8
 3767 0fc7 E406     		.2byte	0x6e4
 3768 0fc9 37140000 		.4byte	0x1437
 3769 0fcd 02       		.byte	0x2
 3770 0fce 23       		.byte	0x23
 3771 0fcf 0C       		.uleb128 0xc
 3772 0fd0 13       		.uleb128 0x13
 3773 0fd1 D00A0000 		.4byte	.LASF225
 3774 0fd5 08       		.byte	0x8
 3775 0fd6 E506     		.2byte	0x6e5
 3776 0fd8 AB0C0000 		.4byte	0xcab
 3777 0fdc 02       		.byte	0x2
 3778 0fdd 23       		.byte	0x23
 3779 0fde 10       		.uleb128 0x10
 3780 0fdf 13       		.uleb128 0x13
 3781 0fe0 330A0000 		.4byte	.LASF226
 3782 0fe4 08       		.byte	0x8
 3783 0fe5 E606     		.2byte	0x6e6
 3784 0fe7 AB0C0000 		.4byte	0xcab
 3785 0feb 02       		.byte	0x2
 3786 0fec 23       		.byte	0x23
 3787 0fed 14       		.uleb128 0x14
 3788 0fee 13       		.uleb128 0x13
 3789 0fef A9020000 		.4byte	.LASF227
 3790 0ff3 08       		.byte	0x8
 3791 0ff4 E706     		.2byte	0x6e7
 3792 0ff6 B00C0000 		.4byte	0xcb0
 3793 0ffa 02       		.byte	0x2
 3794 0ffb 23       		.byte	0x23
ARM GAS  /tmp/ccKa46D2.s 			page 103


 3795 0ffc 18       		.uleb128 0x18
 3796 0ffd 13       		.uleb128 0x13
 3797 0ffe 990B0000 		.4byte	.LASF199
 3798 1002 08       		.byte	0x8
 3799 1003 E806     		.2byte	0x6e8
 3800 1005 3C140000 		.4byte	0x143c
 3801 1009 02       		.byte	0x2
 3802 100a 23       		.byte	0x23
 3803 100b 1C       		.uleb128 0x1c
 3804 100c 13       		.uleb128 0x13
 3805 100d 500A0000 		.4byte	.LASF228
 3806 1011 08       		.byte	0x8
 3807 1012 E906     		.2byte	0x6e9
 3808 1014 AB0C0000 		.4byte	0xcab
 3809 1018 02       		.byte	0x2
 3810 1019 23       		.byte	0x23
 3811 101a 20       		.uleb128 0x20
 3812 101b 13       		.uleb128 0x13
 3813 101c 66020000 		.4byte	.LASF229
 3814 1020 08       		.byte	0x8
 3815 1021 EA06     		.2byte	0x6ea
 3816 1023 AB0C0000 		.4byte	0xcab
 3817 1027 02       		.byte	0x2
 3818 1028 23       		.byte	0x23
 3819 1029 24       		.uleb128 0x24
 3820 102a 13       		.uleb128 0x13
 3821 102b 50020000 		.4byte	.LASF230
 3822 102f 08       		.byte	0x8
 3823 1030 EB06     		.2byte	0x6eb
 3824 1032 B00C0000 		.4byte	0xcb0
 3825 1036 02       		.byte	0x2
 3826 1037 23       		.byte	0x23
 3827 1038 28       		.uleb128 0x28
 3828 1039 13       		.uleb128 0x13
 3829 103a 0D010000 		.4byte	.LASF206
 3830 103e 08       		.byte	0x8
 3831 103f EC06     		.2byte	0x6ec
 3832 1041 41140000 		.4byte	0x1441
 3833 1045 02       		.byte	0x2
 3834 1046 23       		.byte	0x23
 3835 1047 2C       		.uleb128 0x2c
 3836 1048 13       		.uleb128 0x13
 3837 1049 63080000 		.4byte	.LASF231
 3838 104d 08       		.byte	0x8
 3839 104e ED06     		.2byte	0x6ed
 3840 1050 AB0C0000 		.4byte	0xcab
 3841 1054 02       		.byte	0x2
 3842 1055 23       		.byte	0x23
 3843 1056 30       		.uleb128 0x30
 3844 1057 13       		.uleb128 0x13
 3845 1058 D4060000 		.4byte	.LASF232
 3846 105c 08       		.byte	0x8
 3847 105d EE06     		.2byte	0x6ee
 3848 105f AB0C0000 		.4byte	0xcab
 3849 1063 02       		.byte	0x2
 3850 1064 23       		.byte	0x23
 3851 1065 34       		.uleb128 0x34
ARM GAS  /tmp/ccKa46D2.s 			page 104


 3852 1066 13       		.uleb128 0x13
 3853 1067 290C0000 		.4byte	.LASF233
 3854 106b 08       		.byte	0x8
 3855 106c EF06     		.2byte	0x6ef
 3856 106e AB0C0000 		.4byte	0xcab
 3857 1072 02       		.byte	0x2
 3858 1073 23       		.byte	0x23
 3859 1074 38       		.uleb128 0x38
 3860 1075 13       		.uleb128 0x13
 3861 1076 80040000 		.4byte	.LASF234
 3862 107a 08       		.byte	0x8
 3863 107b F006     		.2byte	0x6f0
 3864 107d B00C0000 		.4byte	0xcb0
 3865 1081 02       		.byte	0x2
 3866 1082 23       		.byte	0x23
 3867 1083 3C       		.uleb128 0x3c
 3868 1084 13       		.uleb128 0x13
 3869 1085 0A080000 		.4byte	.LASF235
 3870 1089 08       		.byte	0x8
 3871 108a F106     		.2byte	0x6f1
 3872 108c AB0C0000 		.4byte	0xcab
 3873 1090 02       		.byte	0x2
 3874 1091 23       		.byte	0x23
 3875 1092 40       		.uleb128 0x40
 3876 1093 13       		.uleb128 0x13
 3877 1094 4F070000 		.4byte	.LASF236
 3878 1098 08       		.byte	0x8
 3879 1099 F206     		.2byte	0x6f2
 3880 109b AB0C0000 		.4byte	0xcab
 3881 109f 02       		.byte	0x2
 3882 10a0 23       		.byte	0x23
 3883 10a1 44       		.uleb128 0x44
 3884 10a2 13       		.uleb128 0x13
 3885 10a3 0F0C0000 		.4byte	.LASF237
 3886 10a7 08       		.byte	0x8
 3887 10a8 F306     		.2byte	0x6f3
 3888 10aa B00C0000 		.4byte	0xcb0
 3889 10ae 02       		.byte	0x2
 3890 10af 23       		.byte	0x23
 3891 10b0 48       		.uleb128 0x48
 3892 10b1 13       		.uleb128 0x13
 3893 10b2 BC0E0000 		.4byte	.LASF238
 3894 10b6 08       		.byte	0x8
 3895 10b7 F406     		.2byte	0x6f4
 3896 10b9 B00C0000 		.4byte	0xcb0
 3897 10bd 02       		.byte	0x2
 3898 10be 23       		.byte	0x23
 3899 10bf 4C       		.uleb128 0x4c
 3900 10c0 13       		.uleb128 0x13
 3901 10c1 F2040000 		.4byte	.LASF239
 3902 10c5 08       		.byte	0x8
 3903 10c6 F506     		.2byte	0x6f5
 3904 10c8 AB0C0000 		.4byte	0xcab
 3905 10cc 02       		.byte	0x2
 3906 10cd 23       		.byte	0x23
 3907 10ce 50       		.uleb128 0x50
 3908 10cf 13       		.uleb128 0x13
ARM GAS  /tmp/ccKa46D2.s 			page 105


 3909 10d0 4B040000 		.4byte	.LASF240
 3910 10d4 08       		.byte	0x8
 3911 10d5 F606     		.2byte	0x6f6
 3912 10d7 AB0C0000 		.4byte	0xcab
 3913 10db 02       		.byte	0x2
 3914 10dc 23       		.byte	0x23
 3915 10dd 54       		.uleb128 0x54
 3916 10de 13       		.uleb128 0x13
 3917 10df F70B0000 		.4byte	.LASF241
 3918 10e3 08       		.byte	0x8
 3919 10e4 F706     		.2byte	0x6f7
 3920 10e6 B00C0000 		.4byte	0xcb0
 3921 10ea 02       		.byte	0x2
 3922 10eb 23       		.byte	0x23
 3923 10ec 58       		.uleb128 0x58
 3924 10ed 13       		.uleb128 0x13
 3925 10ee A80B0000 		.4byte	.LASF208
 3926 10f2 08       		.byte	0x8
 3927 10f3 F806     		.2byte	0x6f8
 3928 10f5 46140000 		.4byte	0x1446
 3929 10f9 02       		.byte	0x2
 3930 10fa 23       		.byte	0x23
 3931 10fb 5C       		.uleb128 0x5c
 3932 10fc 13       		.uleb128 0x13
 3933 10fd 6B030000 		.4byte	.LASF242
 3934 1101 08       		.byte	0x8
 3935 1102 F906     		.2byte	0x6f9
 3936 1104 AB0C0000 		.4byte	0xcab
 3937 1108 02       		.byte	0x2
 3938 1109 23       		.byte	0x23
 3939 110a 60       		.uleb128 0x60
 3940 110b 13       		.uleb128 0x13
 3941 110c D0050000 		.4byte	.LASF243
 3942 1110 08       		.byte	0x8
 3943 1111 FA06     		.2byte	0x6fa
 3944 1113 AB0C0000 		.4byte	0xcab
 3945 1117 02       		.byte	0x2
 3946 1118 23       		.byte	0x23
 3947 1119 64       		.uleb128 0x64
 3948 111a 13       		.uleb128 0x13
 3949 111b 9C0A0000 		.4byte	.LASF244
 3950 111f 08       		.byte	0x8
 3951 1120 FB06     		.2byte	0x6fb
 3952 1122 B00C0000 		.4byte	0xcb0
 3953 1126 02       		.byte	0x2
 3954 1127 23       		.byte	0x23
 3955 1128 68       		.uleb128 0x68
 3956 1129 13       		.uleb128 0x13
 3957 112a B20B0000 		.4byte	.LASF211
 3958 112e 08       		.byte	0x8
 3959 112f FC06     		.2byte	0x6fc
 3960 1131 4B140000 		.4byte	0x144b
 3961 1135 02       		.byte	0x2
 3962 1136 23       		.byte	0x23
 3963 1137 6C       		.uleb128 0x6c
 3964 1138 13       		.uleb128 0x13
 3965 1139 19030000 		.4byte	.LASF245
ARM GAS  /tmp/ccKa46D2.s 			page 106


 3966 113d 08       		.byte	0x8
 3967 113e FD06     		.2byte	0x6fd
 3968 1140 50140000 		.4byte	0x1450
 3969 1144 02       		.byte	0x2
 3970 1145 23       		.byte	0x23
 3971 1146 70       		.uleb128 0x70
 3972 1147 13       		.uleb128 0x13
 3973 1148 BC0B0000 		.4byte	.LASF246
 3974 114c 08       		.byte	0x8
 3975 114d FE06     		.2byte	0x6fe
 3976 114f 55140000 		.4byte	0x1455
 3977 1153 02       		.byte	0x2
 3978 1154 23       		.byte	0x23
 3979 1155 78       		.uleb128 0x78
 3980 1156 13       		.uleb128 0x13
 3981 1157 910A0000 		.4byte	.LASF247
 3982 115b 08       		.byte	0x8
 3983 115c FF06     		.2byte	0x6ff
 3984 115e AB0C0000 		.4byte	0xcab
 3985 1162 03       		.byte	0x3
 3986 1163 23       		.byte	0x23
 3987 1164 8001     		.uleb128 0x80
 3988 1166 13       		.uleb128 0x13
 3989 1167 6C080000 		.4byte	.LASF248
 3990 116b 08       		.byte	0x8
 3991 116c 0007     		.2byte	0x700
 3992 116e AB0C0000 		.4byte	0xcab
 3993 1172 03       		.byte	0x3
 3994 1173 23       		.byte	0x23
 3995 1174 8401     		.uleb128 0x84
 3996 1176 13       		.uleb128 0x13
 3997 1177 73010000 		.4byte	.LASF249
 3998 117b 08       		.byte	0x8
 3999 117c 0107     		.2byte	0x701
 4000 117e B00C0000 		.4byte	0xcb0
 4001 1182 03       		.byte	0x3
 4002 1183 23       		.byte	0x23
 4003 1184 8801     		.uleb128 0x88
 4004 1186 13       		.uleb128 0x13
 4005 1187 6A010000 		.4byte	.LASF250
 4006 118b 08       		.byte	0x8
 4007 118c 0207     		.2byte	0x702
 4008 118e AB0C0000 		.4byte	0xcab
 4009 1192 03       		.byte	0x3
 4010 1193 23       		.byte	0x23
 4011 1194 8C01     		.uleb128 0x8c
 4012 1196 13       		.uleb128 0x13
 4013 1197 D2010000 		.4byte	.LASF251
 4014 119b 08       		.byte	0x8
 4015 119c 0307     		.2byte	0x703
 4016 119e AB0C0000 		.4byte	0xcab
 4017 11a2 03       		.byte	0x3
 4018 11a3 23       		.byte	0x23
 4019 11a4 9001     		.uleb128 0x90
 4020 11a6 13       		.uleb128 0x13
 4021 11a7 74020000 		.4byte	.LASF252
 4022 11ab 08       		.byte	0x8
ARM GAS  /tmp/ccKa46D2.s 			page 107


 4023 11ac 0407     		.2byte	0x704
 4024 11ae AB0C0000 		.4byte	0xcab
 4025 11b2 03       		.byte	0x3
 4026 11b3 23       		.byte	0x23
 4027 11b4 9401     		.uleb128 0x94
 4028 11b6 13       		.uleb128 0x13
 4029 11b7 60090000 		.4byte	.LASF253
 4030 11bb 08       		.byte	0x8
 4031 11bc 0507     		.2byte	0x705
 4032 11be B00C0000 		.4byte	0xcb0
 4033 11c2 03       		.byte	0x3
 4034 11c3 23       		.byte	0x23
 4035 11c4 9801     		.uleb128 0x98
 4036 11c6 13       		.uleb128 0x13
 4037 11c7 17010000 		.4byte	.LASF254
 4038 11cb 08       		.byte	0x8
 4039 11cc 0607     		.2byte	0x706
 4040 11ce 5A140000 		.4byte	0x145a
 4041 11d2 03       		.byte	0x3
 4042 11d3 23       		.byte	0x23
 4043 11d4 9C01     		.uleb128 0x9c
 4044 11d6 13       		.uleb128 0x13
 4045 11d7 38020000 		.4byte	.LASF255
 4046 11db 08       		.byte	0x8
 4047 11dc 0707     		.2byte	0x707
 4048 11de AB0C0000 		.4byte	0xcab
 4049 11e2 03       		.byte	0x3
 4050 11e3 23       		.byte	0x23
 4051 11e4 A001     		.uleb128 0xa0
 4052 11e6 13       		.uleb128 0x13
 4053 11e7 DA0E0000 		.4byte	.LASF256
 4054 11eb 08       		.byte	0x8
 4055 11ec 0807     		.2byte	0x708
 4056 11ee AB0C0000 		.4byte	0xcab
 4057 11f2 03       		.byte	0x3
 4058 11f3 23       		.byte	0x23
 4059 11f4 A401     		.uleb128 0xa4
 4060 11f6 13       		.uleb128 0x13
 4061 11f7 48090000 		.4byte	.LASF257
 4062 11fb 08       		.byte	0x8
 4063 11fc 0907     		.2byte	0x709
 4064 11fe B00C0000 		.4byte	0xcb0
 4065 1202 03       		.byte	0x3
 4066 1203 23       		.byte	0x23
 4067 1204 A801     		.uleb128 0xa8
 4068 1206 13       		.uleb128 0x13
 4069 1207 CF0B0000 		.4byte	.LASF258
 4070 120b 08       		.byte	0x8
 4071 120c 0A07     		.2byte	0x70a
 4072 120e 5F140000 		.4byte	0x145f
 4073 1212 03       		.byte	0x3
 4074 1213 23       		.byte	0x23
 4075 1214 AC01     		.uleb128 0xac
 4076 1216 13       		.uleb128 0x13
 4077 1217 ED0B0000 		.4byte	.LASF259
 4078 121b 08       		.byte	0x8
 4079 121c 0B07     		.2byte	0x70b
ARM GAS  /tmp/ccKa46D2.s 			page 108


 4080 121e AB0C0000 		.4byte	0xcab
 4081 1222 03       		.byte	0x3
 4082 1223 23       		.byte	0x23
 4083 1224 B001     		.uleb128 0xb0
 4084 1226 13       		.uleb128 0x13
 4085 1227 150B0000 		.4byte	.LASF260
 4086 122b 08       		.byte	0x8
 4087 122c 0C07     		.2byte	0x70c
 4088 122e AB0C0000 		.4byte	0xcab
 4089 1232 03       		.byte	0x3
 4090 1233 23       		.byte	0x23
 4091 1234 B401     		.uleb128 0xb4
 4092 1236 13       		.uleb128 0x13
 4093 1237 8B000000 		.4byte	.LASF261
 4094 123b 08       		.byte	0x8
 4095 123c 0D07     		.2byte	0x70d
 4096 123e B00C0000 		.4byte	0xcb0
 4097 1242 03       		.byte	0x3
 4098 1243 23       		.byte	0x23
 4099 1244 B801     		.uleb128 0xb8
 4100 1246 13       		.uleb128 0x13
 4101 1247 D90B0000 		.4byte	.LASF262
 4102 124b 08       		.byte	0x8
 4103 124c 0E07     		.2byte	0x70e
 4104 124e 64140000 		.4byte	0x1464
 4105 1252 03       		.byte	0x3
 4106 1253 23       		.byte	0x23
 4107 1254 BC01     		.uleb128 0xbc
 4108 1256 13       		.uleb128 0x13
 4109 1257 7E020000 		.4byte	.LASF263
 4110 125b 08       		.byte	0x8
 4111 125c 0F07     		.2byte	0x70f
 4112 125e AB0C0000 		.4byte	0xcab
 4113 1262 03       		.byte	0x3
 4114 1263 23       		.byte	0x23
 4115 1264 C001     		.uleb128 0xc0
 4116 1266 13       		.uleb128 0x13
 4117 1267 E4080000 		.4byte	.LASF264
 4118 126b 08       		.byte	0x8
 4119 126c 1007     		.2byte	0x710
 4120 126e AB0C0000 		.4byte	0xcab
 4121 1272 03       		.byte	0x3
 4122 1273 23       		.byte	0x23
 4123 1274 C401     		.uleb128 0xc4
 4124 1276 13       		.uleb128 0x13
 4125 1277 38050000 		.4byte	.LASF265
 4126 127b 08       		.byte	0x8
 4127 127c 1107     		.2byte	0x711
 4128 127e B00C0000 		.4byte	0xcb0
 4129 1282 03       		.byte	0x3
 4130 1283 23       		.byte	0x23
 4131 1284 C801     		.uleb128 0xc8
 4132 1286 13       		.uleb128 0x13
 4133 1287 16040000 		.4byte	.LASF266
 4134 128b 08       		.byte	0x8
 4135 128c 1207     		.2byte	0x712
 4136 128e 69140000 		.4byte	0x1469
ARM GAS  /tmp/ccKa46D2.s 			page 109


 4137 1292 03       		.byte	0x3
 4138 1293 23       		.byte	0x23
 4139 1294 CC01     		.uleb128 0xcc
 4140 1296 13       		.uleb128 0x13
 4141 1297 CC040000 		.4byte	.LASF267
 4142 129b 08       		.byte	0x8
 4143 129c 1307     		.2byte	0x713
 4144 129e AB0C0000 		.4byte	0xcab
 4145 12a2 03       		.byte	0x3
 4146 12a3 23       		.byte	0x23
 4147 12a4 D001     		.uleb128 0xd0
 4148 12a6 13       		.uleb128 0x13
 4149 12a7 070E0000 		.4byte	.LASF268
 4150 12ab 08       		.byte	0x8
 4151 12ac 1407     		.2byte	0x714
 4152 12ae AB0C0000 		.4byte	0xcab
 4153 12b2 03       		.byte	0x3
 4154 12b3 23       		.byte	0x23
 4155 12b4 D401     		.uleb128 0xd4
 4156 12b6 13       		.uleb128 0x13
 4157 12b7 9B040000 		.4byte	.LASF269
 4158 12bb 08       		.byte	0x8
 4159 12bc 1507     		.2byte	0x715
 4160 12be B00C0000 		.4byte	0xcb0
 4161 12c2 03       		.byte	0x3
 4162 12c3 23       		.byte	0x23
 4163 12c4 D801     		.uleb128 0xd8
 4164 12c6 13       		.uleb128 0x13
 4165 12c7 21040000 		.4byte	.LASF270
 4166 12cb 08       		.byte	0x8
 4167 12cc 1607     		.2byte	0x716
 4168 12ce 6E140000 		.4byte	0x146e
 4169 12d2 03       		.byte	0x3
 4170 12d3 23       		.byte	0x23
 4171 12d4 DC01     		.uleb128 0xdc
 4172 12d6 13       		.uleb128 0x13
 4173 12d7 B8040000 		.4byte	.LASF271
 4174 12db 08       		.byte	0x8
 4175 12dc 1707     		.2byte	0x717
 4176 12de B00C0000 		.4byte	0xcb0
 4177 12e2 03       		.byte	0x3
 4178 12e3 23       		.byte	0x23
 4179 12e4 E001     		.uleb128 0xe0
 4180 12e6 13       		.uleb128 0x13
 4181 12e7 C40E0000 		.4byte	.LASF272
 4182 12eb 08       		.byte	0x8
 4183 12ec 1807     		.2byte	0x718
 4184 12ee AB0C0000 		.4byte	0xcab
 4185 12f2 03       		.byte	0x3
 4186 12f3 23       		.byte	0x23
 4187 12f4 E401     		.uleb128 0xe4
 4188 12f6 13       		.uleb128 0x13
 4189 12f7 AA030000 		.4byte	.LASF273
 4190 12fb 08       		.byte	0x8
 4191 12fc 1907     		.2byte	0x719
 4192 12fe B00C0000 		.4byte	0xcb0
 4193 1302 03       		.byte	0x3
ARM GAS  /tmp/ccKa46D2.s 			page 110


 4194 1303 23       		.byte	0x23
 4195 1304 E801     		.uleb128 0xe8
 4196 1306 13       		.uleb128 0x13
 4197 1307 2C040000 		.4byte	.LASF274
 4198 130b 08       		.byte	0x8
 4199 130c 1A07     		.2byte	0x71a
 4200 130e 73140000 		.4byte	0x1473
 4201 1312 03       		.byte	0x3
 4202 1313 23       		.byte	0x23
 4203 1314 EC01     		.uleb128 0xec
 4204 1316 13       		.uleb128 0x13
 4205 1317 B00C0000 		.4byte	.LASF275
 4206 131b 08       		.byte	0x8
 4207 131c 1B07     		.2byte	0x71b
 4208 131e AB0C0000 		.4byte	0xcab
 4209 1322 03       		.byte	0x3
 4210 1323 23       		.byte	0x23
 4211 1324 8002     		.uleb128 0x100
 4212 1326 13       		.uleb128 0x13
 4213 1327 37040000 		.4byte	.LASF276
 4214 132b 08       		.byte	0x8
 4215 132c 1C07     		.2byte	0x71c
 4216 132e 78140000 		.4byte	0x1478
 4217 1332 03       		.byte	0x3
 4218 1333 23       		.byte	0x23
 4219 1334 8402     		.uleb128 0x104
 4220 1336 13       		.uleb128 0x13
 4221 1337 AA0D0000 		.4byte	.LASF277
 4222 133b 08       		.byte	0x8
 4223 133c 1D07     		.2byte	0x71d
 4224 133e AB0C0000 		.4byte	0xcab
 4225 1342 03       		.byte	0x3
 4226 1343 23       		.byte	0x23
 4227 1344 D002     		.uleb128 0x150
 4228 1346 13       		.uleb128 0x13
 4229 1347 3E090000 		.4byte	.LASF278
 4230 134b 08       		.byte	0x8
 4231 134c 1E07     		.2byte	0x71e
 4232 134e AB0C0000 		.4byte	0xcab
 4233 1352 03       		.byte	0x3
 4234 1353 23       		.byte	0x23
 4235 1354 D402     		.uleb128 0x154
 4236 1356 13       		.uleb128 0x13
 4237 1357 C8080000 		.4byte	.LASF279
 4238 135b 08       		.byte	0x8
 4239 135c 1F07     		.2byte	0x71f
 4240 135e AB0C0000 		.4byte	0xcab
 4241 1362 03       		.byte	0x3
 4242 1363 23       		.byte	0x23
 4243 1364 D802     		.uleb128 0x158
 4244 1366 13       		.uleb128 0x13
 4245 1367 00080000 		.4byte	.LASF280
 4246 136b 08       		.byte	0x8
 4247 136c 2007     		.2byte	0x720
 4248 136e B00C0000 		.4byte	0xcb0
 4249 1372 03       		.byte	0x3
 4250 1373 23       		.byte	0x23
ARM GAS  /tmp/ccKa46D2.s 			page 111


 4251 1374 DC02     		.uleb128 0x15c
 4252 1376 13       		.uleb128 0x13
 4253 1377 F4000000 		.4byte	.LASF281
 4254 137b 08       		.byte	0x8
 4255 137c 2107     		.2byte	0x721
 4256 137e B00C0000 		.4byte	0xcb0
 4257 1382 03       		.byte	0x3
 4258 1383 23       		.byte	0x23
 4259 1384 E002     		.uleb128 0x160
 4260 1386 13       		.uleb128 0x13
 4261 1387 3A080000 		.4byte	.LASF282
 4262 138b 08       		.byte	0x8
 4263 138c 2207     		.2byte	0x722
 4264 138e B00C0000 		.4byte	0xcb0
 4265 1392 03       		.byte	0x3
 4266 1393 23       		.byte	0x23
 4267 1394 E402     		.uleb128 0x164
 4268 1396 13       		.uleb128 0x13
 4269 1397 2B0A0000 		.4byte	.LASF283
 4270 139b 08       		.byte	0x8
 4271 139c 2307     		.2byte	0x723
 4272 139e AB0C0000 		.4byte	0xcab
 4273 13a2 03       		.byte	0x3
 4274 13a3 23       		.byte	0x23
 4275 13a4 E802     		.uleb128 0x168
 4276 13a6 13       		.uleb128 0x13
 4277 13a7 E9030000 		.4byte	.LASF284
 4278 13ab 08       		.byte	0x8
 4279 13ac 2407     		.2byte	0x724
 4280 13ae AB0C0000 		.4byte	0xcab
 4281 13b2 03       		.byte	0x3
 4282 13b3 23       		.byte	0x23
 4283 13b4 EC02     		.uleb128 0x16c
 4284 13b6 13       		.uleb128 0x13
 4285 13b7 51010000 		.4byte	.LASF285
 4286 13bb 08       		.byte	0x8
 4287 13bc 2507     		.2byte	0x725
 4288 13be AB0C0000 		.4byte	0xcab
 4289 13c2 03       		.byte	0x3
 4290 13c3 23       		.byte	0x23
 4291 13c4 F002     		.uleb128 0x170
 4292 13c6 13       		.uleb128 0x13
 4293 13c7 C7090000 		.4byte	.LASF286
 4294 13cb 08       		.byte	0x8
 4295 13cc 2607     		.2byte	0x726
 4296 13ce AB0C0000 		.4byte	0xcab
 4297 13d2 03       		.byte	0x3
 4298 13d3 23       		.byte	0x23
 4299 13d4 F402     		.uleb128 0x174
 4300 13d6 13       		.uleb128 0x13
 4301 13d7 24030000 		.4byte	.LASF287
 4302 13db 08       		.byte	0x8
 4303 13dc 2707     		.2byte	0x727
 4304 13de AB0C0000 		.4byte	0xcab
 4305 13e2 03       		.byte	0x3
 4306 13e3 23       		.byte	0x23
 4307 13e4 F802     		.uleb128 0x178
ARM GAS  /tmp/ccKa46D2.s 			page 112


 4308 13e6 13       		.uleb128 0x13
 4309 13e7 610C0000 		.4byte	.LASF288
 4310 13eb 08       		.byte	0x8
 4311 13ec 2807     		.2byte	0x728
 4312 13ee AB0C0000 		.4byte	0xcab
 4313 13f2 03       		.byte	0x3
 4314 13f3 23       		.byte	0x23
 4315 13f4 FC02     		.uleb128 0x17c
 4316 13f6 13       		.uleb128 0x13
 4317 13f7 74030000 		.4byte	.LASF289
 4318 13fb 08       		.byte	0x8
 4319 13fc 2907     		.2byte	0x729
 4320 13fe AB0C0000 		.4byte	0xcab
 4321 1402 03       		.byte	0x3
 4322 1403 23       		.byte	0x23
 4323 1404 8003     		.uleb128 0x180
 4324 1406 13       		.uleb128 0x13
 4325 1407 820C0000 		.4byte	.LASF290
 4326 140b 08       		.byte	0x8
 4327 140c 2A07     		.2byte	0x72a
 4328 140e AB0C0000 		.4byte	0xcab
 4329 1412 03       		.byte	0x3
 4330 1413 23       		.byte	0x23
 4331 1414 8403     		.uleb128 0x184
 4332 1416 13       		.uleb128 0x13
 4333 1417 EC0E0000 		.4byte	.LASF291
 4334 141b 08       		.byte	0x8
 4335 141c 2B07     		.2byte	0x72b
 4336 141e AB0C0000 		.4byte	0xcab
 4337 1422 03       		.byte	0x3
 4338 1423 23       		.byte	0x23
 4339 1424 8803     		.uleb128 0x188
 4340 1426 13       		.uleb128 0x13
 4341 1427 F7070000 		.4byte	.LASF292
 4342 142b 08       		.byte	0x8
 4343 142c 2C07     		.2byte	0x72c
 4344 142e B00C0000 		.4byte	0xcb0
 4345 1432 03       		.byte	0x3
 4346 1433 23       		.byte	0x23
 4347 1434 8C03     		.uleb128 0x18c
 4348 1436 00       		.byte	0
 4349 1437 19       		.uleb128 0x19
 4350 1438 EB0E0000 		.4byte	0xeeb
 4351 143c 19       		.uleb128 0x19
 4352 143d EB0E0000 		.4byte	0xeeb
 4353 1441 19       		.uleb128 0x19
 4354 1442 EB0E0000 		.4byte	0xeeb
 4355 1446 19       		.uleb128 0x19
 4356 1447 EB0E0000 		.4byte	0xeeb
 4357 144b 19       		.uleb128 0x19
 4358 144c EB0E0000 		.4byte	0xeeb
 4359 1450 19       		.uleb128 0x19
 4360 1451 000F0000 		.4byte	0xf00
 4361 1455 19       		.uleb128 0x19
 4362 1456 000F0000 		.4byte	0xf00
 4363 145a 19       		.uleb128 0x19
 4364 145b EB0E0000 		.4byte	0xeeb
ARM GAS  /tmp/ccKa46D2.s 			page 113


 4365 145f 19       		.uleb128 0x19
 4366 1460 EB0E0000 		.4byte	0xeeb
 4367 1464 19       		.uleb128 0x19
 4368 1465 EB0E0000 		.4byte	0xeeb
 4369 1469 19       		.uleb128 0x19
 4370 146a EB0E0000 		.4byte	0xeeb
 4371 146e 19       		.uleb128 0x19
 4372 146f EB0E0000 		.4byte	0xeeb
 4373 1473 19       		.uleb128 0x19
 4374 1474 390F0000 		.4byte	0xf39
 4375 1478 19       		.uleb128 0x19
 4376 1479 B50C0000 		.4byte	0xcb5
 4377 147d 1E       		.uleb128 0x1e
 4378 147e 50696F00 		.ascii	"Pio\000"
 4379 1482 08       		.byte	0x8
 4380 1483 2D07     		.2byte	0x72d
 4381 1485 8A0F0000 		.4byte	0xf8a
 4382 1489 08       		.uleb128 0x8
 4383 148a 01010000 		.4byte	0x101
 4384 148e 99140000 		.4byte	0x1499
 4385 1492 09       		.uleb128 0x9
 4386 1493 4C000000 		.4byte	0x4c
 4387 1497 02       		.byte	0x2
 4388 1498 00       		.byte	0
 4389 1499 20       		.uleb128 0x20
 4390 149a 20       		.byte	0x20
 4391 149b 08       		.byte	0x8
 4392 149c 050F     		.2byte	0xf05
 4393 149e 1B150000 		.4byte	0x151b
 4394 14a2 13       		.uleb128 0x13
 4395 14a3 7A0C0000 		.4byte	.LASF293
 4396 14a7 08       		.byte	0x8
 4397 14a8 060F     		.2byte	0xf06
 4398 14aa AB0C0000 		.4byte	0xcab
 4399 14ae 02       		.byte	0x2
 4400 14af 23       		.byte	0x23
 4401 14b0 00       		.uleb128 0
 4402 14b1 13       		.uleb128 0x13
 4403 14b2 89080000 		.4byte	.LASF294
 4404 14b6 08       		.byte	0x8
 4405 14b7 070F     		.2byte	0xf07
 4406 14b9 AB0C0000 		.4byte	0xcab
 4407 14bd 02       		.byte	0x2
 4408 14be 23       		.byte	0x23
 4409 14bf 04       		.uleb128 0x4
 4410 14c0 13       		.uleb128 0x13
 4411 14c1 9C070000 		.4byte	.LASF295
 4412 14c5 08       		.byte	0x8
 4413 14c6 080F     		.2byte	0xf08
 4414 14c8 AB0C0000 		.4byte	0xcab
 4415 14cc 02       		.byte	0x2
 4416 14cd 23       		.byte	0x23
 4417 14ce 08       		.uleb128 0x8
 4418 14cf 13       		.uleb128 0x13
 4419 14d0 A10D0000 		.4byte	.LASF296
 4420 14d4 08       		.byte	0x8
 4421 14d5 090F     		.2byte	0xf09
ARM GAS  /tmp/ccKa46D2.s 			page 114


 4422 14d7 AB0C0000 		.4byte	0xcab
 4423 14db 02       		.byte	0x2
 4424 14dc 23       		.byte	0x23
 4425 14dd 0C       		.uleb128 0xc
 4426 14de 13       		.uleb128 0x13
 4427 14df 6D0D0000 		.4byte	.LASF297
 4428 14e3 08       		.byte	0x8
 4429 14e4 0A0F     		.2byte	0xf0a
 4430 14e6 AB0C0000 		.4byte	0xcab
 4431 14ea 02       		.byte	0x2
 4432 14eb 23       		.byte	0x23
 4433 14ec 10       		.uleb128 0x10
 4434 14ed 13       		.uleb128 0x13
 4435 14ee 1D020000 		.4byte	.LASF298
 4436 14f2 08       		.byte	0x8
 4437 14f3 0B0F     		.2byte	0xf0b
 4438 14f5 AB0C0000 		.4byte	0xcab
 4439 14f9 02       		.byte	0x2
 4440 14fa 23       		.byte	0x23
 4441 14fb 14       		.uleb128 0x14
 4442 14fc 13       		.uleb128 0x13
 4443 14fd 050D0000 		.4byte	.LASF299
 4444 1501 08       		.byte	0x8
 4445 1502 0C0F     		.2byte	0xf0c
 4446 1504 AB0C0000 		.4byte	0xcab
 4447 1508 02       		.byte	0x2
 4448 1509 23       		.byte	0x23
 4449 150a 18       		.uleb128 0x18
 4450 150b 13       		.uleb128 0x13
 4451 150c A00E0000 		.4byte	.LASF300
 4452 1510 08       		.byte	0x8
 4453 1511 0D0F     		.2byte	0xf0d
 4454 1513 AB0C0000 		.4byte	0xcab
 4455 1517 02       		.byte	0x2
 4456 1518 23       		.byte	0x23
 4457 1519 1C       		.uleb128 0x1c
 4458 151a 00       		.byte	0
 4459 151b 05       		.uleb128 0x5
 4460 151c 64040000 		.4byte	.LASF301
 4461 1520 08       		.byte	0x8
 4462 1521 0E0F     		.2byte	0xf0e
 4463 1523 99140000 		.4byte	0x1499
 4464 1527 20       		.uleb128 0x20
 4465 1528 10       		.byte	0x10
 4466 1529 08       		.byte	0x8
 4467 152a 100F     		.2byte	0xf10
 4468 152c 6D150000 		.4byte	0x156d
 4469 1530 13       		.uleb128 0x13
 4470 1531 D40D0000 		.4byte	.LASF302
 4471 1535 08       		.byte	0x8
 4472 1536 110F     		.2byte	0xf11
 4473 1538 AB0C0000 		.4byte	0xcab
 4474 153c 02       		.byte	0x2
 4475 153d 23       		.byte	0x23
 4476 153e 00       		.uleb128 0
 4477 153f 13       		.uleb128 0x13
 4478 1540 38060000 		.4byte	.LASF303
ARM GAS  /tmp/ccKa46D2.s 			page 115


 4479 1544 08       		.byte	0x8
 4480 1545 120F     		.2byte	0xf12
 4481 1547 AB0C0000 		.4byte	0xcab
 4482 154b 02       		.byte	0x2
 4483 154c 23       		.byte	0x23
 4484 154d 04       		.uleb128 0x4
 4485 154e 13       		.uleb128 0x13
 4486 154f BC0D0000 		.4byte	.LASF304
 4487 1553 08       		.byte	0x8
 4488 1554 130F     		.2byte	0xf13
 4489 1556 AB0C0000 		.4byte	0xcab
 4490 155a 02       		.byte	0x2
 4491 155b 23       		.byte	0x23
 4492 155c 08       		.uleb128 0x8
 4493 155d 13       		.uleb128 0x13
 4494 155e 510D0000 		.4byte	.LASF305
 4495 1562 08       		.byte	0x8
 4496 1563 140F     		.2byte	0xf14
 4497 1565 AB0C0000 		.4byte	0xcab
 4498 1569 02       		.byte	0x2
 4499 156a 23       		.byte	0x23
 4500 156b 0C       		.uleb128 0xc
 4501 156c 00       		.byte	0
 4502 156d 05       		.uleb128 0x5
 4503 156e 6E0B0000 		.4byte	.LASF306
 4504 1572 08       		.byte	0x8
 4505 1573 150F     		.2byte	0xf15
 4506 1575 27150000 		.4byte	0x1527
 4507 1579 1F       		.uleb128 0x1f
 4508 157a 8002     		.2byte	0x280
 4509 157c 08       		.byte	0x8
 4510 157d 170F     		.2byte	0xf17
 4511 157f 86180000 		.4byte	0x1886
 4512 1583 13       		.uleb128 0x13
 4513 1584 3A0B0000 		.4byte	.LASF307
 4514 1588 08       		.byte	0x8
 4515 1589 180F     		.2byte	0xf18
 4516 158b AB0C0000 		.4byte	0xcab
 4517 158f 02       		.byte	0x2
 4518 1590 23       		.byte	0x23
 4519 1591 00       		.uleb128 0
 4520 1592 13       		.uleb128 0x13
 4521 1593 FF010000 		.4byte	.LASF308
 4522 1597 08       		.byte	0x8
 4523 1598 190F     		.2byte	0xf19
 4524 159a AB0C0000 		.4byte	0xcab
 4525 159e 02       		.byte	0x2
 4526 159f 23       		.byte	0x23
 4527 15a0 04       		.uleb128 0x4
 4528 15a1 13       		.uleb128 0x13
 4529 15a2 490D0000 		.4byte	.LASF309
 4530 15a6 08       		.byte	0x8
 4531 15a7 1A0F     		.2byte	0xf1a
 4532 15a9 AB0C0000 		.4byte	0xcab
 4533 15ad 02       		.byte	0x2
 4534 15ae 23       		.byte	0x23
 4535 15af 08       		.uleb128 0x8
ARM GAS  /tmp/ccKa46D2.s 			page 116


 4536 15b0 13       		.uleb128 0x13
 4537 15b1 1E050000 		.4byte	.LASF310
 4538 15b5 08       		.byte	0x8
 4539 15b6 1B0F     		.2byte	0xf1b
 4540 15b8 B00C0000 		.4byte	0xcb0
 4541 15bc 02       		.byte	0x2
 4542 15bd 23       		.byte	0x23
 4543 15be 0C       		.uleb128 0xc
 4544 15bf 13       		.uleb128 0x13
 4545 15c0 4C000000 		.4byte	.LASF311
 4546 15c4 08       		.byte	0x8
 4547 15c5 1C0F     		.2byte	0xf1c
 4548 15c7 AB0C0000 		.4byte	0xcab
 4549 15cb 02       		.byte	0x2
 4550 15cc 23       		.byte	0x23
 4551 15cd 10       		.uleb128 0x10
 4552 15ce 13       		.uleb128 0x13
 4553 15cf 8A070000 		.4byte	.LASF312
 4554 15d3 08       		.byte	0x8
 4555 15d4 1D0F     		.2byte	0xf1d
 4556 15d6 AB0C0000 		.4byte	0xcab
 4557 15da 02       		.byte	0x2
 4558 15db 23       		.byte	0x23
 4559 15dc 14       		.uleb128 0x14
 4560 15dd 13       		.uleb128 0x13
 4561 15de D7040000 		.4byte	.LASF313
 4562 15e2 08       		.byte	0x8
 4563 15e3 1E0F     		.2byte	0xf1e
 4564 15e5 B00C0000 		.4byte	0xcb0
 4565 15e9 02       		.byte	0x2
 4566 15ea 23       		.byte	0x23
 4567 15eb 18       		.uleb128 0x18
 4568 15ec 13       		.uleb128 0x13
 4569 15ed 470A0000 		.4byte	.LASF314
 4570 15f1 08       		.byte	0x8
 4571 15f2 1F0F     		.2byte	0xf1f
 4572 15f4 B00C0000 		.4byte	0xcb0
 4573 15f8 02       		.byte	0x2
 4574 15f9 23       		.byte	0x23
 4575 15fa 1C       		.uleb128 0x1c
 4576 15fb 13       		.uleb128 0x13
 4577 15fc 100A0000 		.4byte	.LASF315
 4578 1600 08       		.byte	0x8
 4579 1601 200F     		.2byte	0xf20
 4580 1603 AB0C0000 		.4byte	0xcab
 4581 1607 02       		.byte	0x2
 4582 1608 23       		.byte	0x23
 4583 1609 20       		.uleb128 0x20
 4584 160a 13       		.uleb128 0x13
 4585 160b 8F0B0000 		.4byte	.LASF193
 4586 160f 08       		.byte	0x8
 4587 1610 210F     		.2byte	0xf21
 4588 1612 86180000 		.4byte	0x1886
 4589 1616 02       		.byte	0x2
 4590 1617 23       		.byte	0x23
 4591 1618 24       		.uleb128 0x24
 4592 1619 13       		.uleb128 0x13
ARM GAS  /tmp/ccKa46D2.s 			page 117


 4593 161a B30E0000 		.4byte	.LASF316
 4594 161e 08       		.byte	0x8
 4595 161f 220F     		.2byte	0xf22
 4596 1621 AB0C0000 		.4byte	0xcab
 4597 1625 02       		.byte	0x2
 4598 1626 23       		.byte	0x23
 4599 1627 28       		.uleb128 0x28
 4600 1628 13       		.uleb128 0x13
 4601 1629 11070000 		.4byte	.LASF317
 4602 162d 08       		.byte	0x8
 4603 162e 230F     		.2byte	0xf23
 4604 1630 AB0C0000 		.4byte	0xcab
 4605 1634 02       		.byte	0x2
 4606 1635 23       		.byte	0x23
 4607 1636 2C       		.uleb128 0x2c
 4608 1637 13       		.uleb128 0x13
 4609 1638 A6040000 		.4byte	.LASF318
 4610 163c 08       		.byte	0x8
 4611 163d 240F     		.2byte	0xf24
 4612 163f AB0C0000 		.4byte	0xcab
 4613 1643 02       		.byte	0x2
 4614 1644 23       		.byte	0x23
 4615 1645 30       		.uleb128 0x30
 4616 1646 13       		.uleb128 0x13
 4617 1647 55000000 		.4byte	.LASF319
 4618 164b 08       		.byte	0x8
 4619 164c 250F     		.2byte	0xf25
 4620 164e AB0C0000 		.4byte	0xcab
 4621 1652 02       		.byte	0x2
 4622 1653 23       		.byte	0x23
 4623 1654 34       		.uleb128 0x34
 4624 1655 13       		.uleb128 0x13
 4625 1656 93070000 		.4byte	.LASF320
 4626 165a 08       		.byte	0x8
 4627 165b 260F     		.2byte	0xf26
 4628 165d AB0C0000 		.4byte	0xcab
 4629 1661 02       		.byte	0x2
 4630 1662 23       		.byte	0x23
 4631 1663 38       		.uleb128 0x38
 4632 1664 13       		.uleb128 0x13
 4633 1665 E0040000 		.4byte	.LASF321
 4634 1669 08       		.byte	0x8
 4635 166a 270F     		.2byte	0xf27
 4636 166c B00C0000 		.4byte	0xcb0
 4637 1670 02       		.byte	0x2
 4638 1671 23       		.byte	0x23
 4639 1672 3C       		.uleb128 0x3c
 4640 1673 13       		.uleb128 0x13
 4641 1674 12080000 		.4byte	.LASF322
 4642 1678 08       		.byte	0x8
 4643 1679 280F     		.2byte	0xf28
 4644 167b B00C0000 		.4byte	0xcb0
 4645 167f 02       		.byte	0x2
 4646 1680 23       		.byte	0x23
 4647 1681 40       		.uleb128 0x40
 4648 1682 13       		.uleb128 0x13
 4649 1683 54040000 		.4byte	.LASF323
ARM GAS  /tmp/ccKa46D2.s 			page 118


 4650 1687 08       		.byte	0x8
 4651 1688 290F     		.2byte	0xf29
 4652 168a AB0C0000 		.4byte	0xcab
 4653 168e 02       		.byte	0x2
 4654 168f 23       		.byte	0x23
 4655 1690 44       		.uleb128 0x44
 4656 1691 13       		.uleb128 0x13
 4657 1692 F5020000 		.4byte	.LASF324
 4658 1696 08       		.byte	0x8
 4659 1697 2A0F     		.2byte	0xf2a
 4660 1699 AB0C0000 		.4byte	0xcab
 4661 169d 02       		.byte	0x2
 4662 169e 23       		.byte	0x23
 4663 169f 48       		.uleb128 0x48
 4664 16a0 13       		.uleb128 0x13
 4665 16a1 30060000 		.4byte	.LASF325
 4666 16a5 08       		.byte	0x8
 4667 16a6 2B0F     		.2byte	0xf2b
 4668 16a8 AB0C0000 		.4byte	0xcab
 4669 16ac 02       		.byte	0x2
 4670 16ad 23       		.byte	0x23
 4671 16ae 4C       		.uleb128 0x4c
 4672 16af 13       		.uleb128 0x13
 4673 16b0 08060000 		.4byte	.LASF326
 4674 16b4 08       		.byte	0x8
 4675 16b5 2C0F     		.2byte	0xf2c
 4676 16b7 AB0C0000 		.4byte	0xcab
 4677 16bb 02       		.byte	0x2
 4678 16bc 23       		.byte	0x23
 4679 16bd 50       		.uleb128 0x50
 4680 16be 13       		.uleb128 0x13
 4681 16bf BC090000 		.4byte	.LASF327
 4682 16c3 08       		.byte	0x8
 4683 16c4 2D0F     		.2byte	0xf2d
 4684 16c6 AB0C0000 		.4byte	0xcab
 4685 16ca 02       		.byte	0x2
 4686 16cb 23       		.byte	0x23
 4687 16cc 54       		.uleb128 0x54
 4688 16cd 13       		.uleb128 0x13
 4689 16ce F2080000 		.4byte	.LASF328
 4690 16d2 08       		.byte	0x8
 4691 16d3 2E0F     		.2byte	0xf2e
 4692 16d5 AB0C0000 		.4byte	0xcab
 4693 16d9 02       		.byte	0x2
 4694 16da 23       		.byte	0x23
 4695 16db 58       		.uleb128 0x58
 4696 16dc 13       		.uleb128 0x13
 4697 16dd 00060000 		.4byte	.LASF329
 4698 16e1 08       		.byte	0x8
 4699 16e2 2F0F     		.2byte	0xf2f
 4700 16e4 AB0C0000 		.4byte	0xcab
 4701 16e8 02       		.byte	0x2
 4702 16e9 23       		.byte	0x23
 4703 16ea 5C       		.uleb128 0x5c
 4704 16eb 13       		.uleb128 0x13
 4705 16ec 2E090000 		.4byte	.LASF330
 4706 16f0 08       		.byte	0x8
ARM GAS  /tmp/ccKa46D2.s 			page 119


 4707 16f1 300F     		.2byte	0xf30
 4708 16f3 B00C0000 		.4byte	0xcb0
 4709 16f7 02       		.byte	0x2
 4710 16f8 23       		.byte	0x23
 4711 16f9 60       		.uleb128 0x60
 4712 16fa 13       		.uleb128 0x13
 4713 16fb FE000000 		.4byte	.LASF331
 4714 16ff 08       		.byte	0x8
 4715 1700 310F     		.2byte	0xf31
 4716 1702 AB0C0000 		.4byte	0xcab
 4717 1706 02       		.byte	0x2
 4718 1707 23       		.byte	0x23
 4719 1708 64       		.uleb128 0x64
 4720 1709 13       		.uleb128 0x13
 4721 170a 9B030000 		.4byte	.LASF332
 4722 170e 08       		.byte	0x8
 4723 170f 320F     		.2byte	0xf32
 4724 1711 AB0C0000 		.4byte	0xcab
 4725 1715 02       		.byte	0x2
 4726 1716 23       		.byte	0x23
 4727 1717 68       		.uleb128 0x68
 4728 1718 13       		.uleb128 0x13
 4729 1719 63030000 		.4byte	.LASF333
 4730 171d 08       		.byte	0x8
 4731 171e 330F     		.2byte	0xf33
 4732 1720 AB0C0000 		.4byte	0xcab
 4733 1724 02       		.byte	0x2
 4734 1725 23       		.byte	0x23
 4735 1726 6C       		.uleb128 0x6c
 4736 1727 13       		.uleb128 0x13
 4737 1728 990B0000 		.4byte	.LASF199
 4738 172c 08       		.byte	0x8
 4739 172d 340F     		.2byte	0xf34
 4740 172f 8B180000 		.4byte	0x188b
 4741 1733 02       		.byte	0x2
 4742 1734 23       		.byte	0x23
 4743 1735 70       		.uleb128 0x70
 4744 1736 13       		.uleb128 0x13
 4745 1737 E70A0000 		.4byte	.LASF334
 4746 173b 08       		.byte	0x8
 4747 173c 350F     		.2byte	0xf35
 4748 173e 90180000 		.4byte	0x1890
 4749 1742 02       		.byte	0x2
 4750 1743 23       		.byte	0x23
 4751 1744 7C       		.uleb128 0x7c
 4752 1745 13       		.uleb128 0x13
 4753 1746 0D010000 		.4byte	.LASF206
 4754 174a 08       		.byte	0x8
 4755 174b 360F     		.2byte	0xf36
 4756 174d 95180000 		.4byte	0x1895
 4757 1751 03       		.byte	0x3
 4758 1752 23       		.byte	0x23
 4759 1753 8401     		.uleb128 0x84
 4760 1755 13       		.uleb128 0x13
 4761 1756 10030000 		.4byte	.LASF335
 4762 175a 08       		.byte	0x8
 4763 175b 370F     		.2byte	0xf37
ARM GAS  /tmp/ccKa46D2.s 			page 120


 4764 175d AB0C0000 		.4byte	0xcab
 4765 1761 03       		.byte	0x3
 4766 1762 23       		.byte	0x23
 4767 1763 B001     		.uleb128 0xb0
 4768 1765 13       		.uleb128 0x13
 4769 1766 A80B0000 		.4byte	.LASF208
 4770 176a 08       		.byte	0x8
 4771 176b 380F     		.2byte	0xf38
 4772 176d 9A180000 		.4byte	0x189a
 4773 1771 03       		.byte	0x3
 4774 1772 23       		.byte	0x23
 4775 1773 B401     		.uleb128 0xb4
 4776 1775 13       		.uleb128 0x13
 4777 1776 C1070000 		.4byte	.LASF336
 4778 177a 08       		.byte	0x8
 4779 177b 390F     		.2byte	0xf39
 4780 177d AB0C0000 		.4byte	0xcab
 4781 1781 03       		.byte	0x3
 4782 1782 23       		.byte	0x23
 4783 1783 E401     		.uleb128 0xe4
 4784 1785 13       		.uleb128 0x13
 4785 1786 82000000 		.4byte	.LASF337
 4786 178a 08       		.byte	0x8
 4787 178b 3A0F     		.2byte	0xf3a
 4788 178d B00C0000 		.4byte	0xcb0
 4789 1791 03       		.byte	0x3
 4790 1792 23       		.byte	0x23
 4791 1793 E801     		.uleb128 0xe8
 4792 1795 13       		.uleb128 0x13
 4793 1796 B20B0000 		.4byte	.LASF211
 4794 179a 08       		.byte	0x8
 4795 179b 3B0F     		.2byte	0xf3b
 4796 179d 9F180000 		.4byte	0x189f
 4797 17a1 03       		.byte	0x3
 4798 17a2 23       		.byte	0x23
 4799 17a3 EC01     		.uleb128 0xec
 4800 17a5 13       		.uleb128 0x13
 4801 17a6 FF0D0000 		.4byte	.LASF338
 4802 17aa 08       		.byte	0x8
 4803 17ab 3C0F     		.2byte	0xf3c
 4804 17ad AB0C0000 		.4byte	0xcab
 4805 17b1 03       		.byte	0x3
 4806 17b2 23       		.byte	0x23
 4807 17b3 8002     		.uleb128 0x100
 4808 17b5 13       		.uleb128 0x13
 4809 17b6 70070000 		.4byte	.LASF339
 4810 17ba 08       		.byte	0x8
 4811 17bb 3D0F     		.2byte	0xf3d
 4812 17bd AB0C0000 		.4byte	0xcab
 4813 17c1 03       		.byte	0x3
 4814 17c2 23       		.byte	0x23
 4815 17c3 8402     		.uleb128 0x104
 4816 17c5 13       		.uleb128 0x13
 4817 17c6 08050000 		.4byte	.LASF340
 4818 17ca 08       		.byte	0x8
 4819 17cb 3E0F     		.2byte	0xf3e
 4820 17cd AB0C0000 		.4byte	0xcab
ARM GAS  /tmp/ccKa46D2.s 			page 121


 4821 17d1 03       		.byte	0x3
 4822 17d2 23       		.byte	0x23
 4823 17d3 8802     		.uleb128 0x108
 4824 17d5 13       		.uleb128 0x13
 4825 17d6 E0000000 		.4byte	.LASF341
 4826 17da 08       		.byte	0x8
 4827 17db 3F0F     		.2byte	0xf3f
 4828 17dd AB0C0000 		.4byte	0xcab
 4829 17e1 03       		.byte	0x3
 4830 17e2 23       		.byte	0x23
 4831 17e3 8C02     		.uleb128 0x10c
 4832 17e5 13       		.uleb128 0x13
 4833 17e6 21000000 		.4byte	.LASF342
 4834 17ea 08       		.byte	0x8
 4835 17eb 400F     		.2byte	0xf40
 4836 17ed AB0C0000 		.4byte	0xcab
 4837 17f1 03       		.byte	0x3
 4838 17f2 23       		.byte	0x23
 4839 17f3 9002     		.uleb128 0x110
 4840 17f5 13       		.uleb128 0x13
 4841 17f6 7E090000 		.4byte	.LASF343
 4842 17fa 08       		.byte	0x8
 4843 17fb 410F     		.2byte	0xf41
 4844 17fd AB0C0000 		.4byte	0xcab
 4845 1801 03       		.byte	0x3
 4846 1802 23       		.byte	0x23
 4847 1803 9402     		.uleb128 0x114
 4848 1805 13       		.uleb128 0x13
 4849 1806 42040000 		.4byte	.LASF344
 4850 180a 08       		.byte	0x8
 4851 180b 420F     		.2byte	0xf42
 4852 180d AB0C0000 		.4byte	0xcab
 4853 1811 03       		.byte	0x3
 4854 1812 23       		.byte	0x23
 4855 1813 9802     		.uleb128 0x118
 4856 1815 13       		.uleb128 0x13
 4857 1816 7D060000 		.4byte	.LASF345
 4858 181a 08       		.byte	0x8
 4859 181b 430F     		.2byte	0xf43
 4860 181d AB0C0000 		.4byte	0xcab
 4861 1821 03       		.byte	0x3
 4862 1822 23       		.byte	0x23
 4863 1823 9C02     		.uleb128 0x11c
 4864 1825 13       		.uleb128 0x13
 4865 1826 060C0000 		.4byte	.LASF346
 4866 182a 08       		.byte	0x8
 4867 182b 440F     		.2byte	0xf44
 4868 182d AB0C0000 		.4byte	0xcab
 4869 1831 03       		.byte	0x3
 4870 1832 23       		.byte	0x23
 4871 1833 A002     		.uleb128 0x120
 4872 1835 13       		.uleb128 0x13
 4873 1836 C3040000 		.4byte	.LASF347
 4874 183a 08       		.byte	0x8
 4875 183b 450F     		.2byte	0xf45
 4876 183d B00C0000 		.4byte	0xcb0
 4877 1841 03       		.byte	0x3
ARM GAS  /tmp/ccKa46D2.s 			page 122


 4878 1842 23       		.byte	0x23
 4879 1843 A402     		.uleb128 0x124
 4880 1845 13       		.uleb128 0x13
 4881 1846 BC0B0000 		.4byte	.LASF246
 4882 184a 08       		.byte	0x8
 4883 184b 460F     		.2byte	0xf46
 4884 184d A4180000 		.4byte	0x18a4
 4885 1851 03       		.byte	0x3
 4886 1852 23       		.byte	0x23
 4887 1853 A802     		.uleb128 0x128
 4888 1855 13       		.uleb128 0x13
 4889 1856 720C0000 		.4byte	.LASF348
 4890 185a 08       		.byte	0x8
 4891 185b 470F     		.2byte	0xf47
 4892 185d A9180000 		.4byte	0x18a9
 4893 1861 03       		.byte	0x3
 4894 1862 23       		.byte	0x23
 4895 1863 B002     		.uleb128 0x130
 4896 1865 13       		.uleb128 0x13
 4897 1866 17010000 		.4byte	.LASF254
 4898 186a 08       		.byte	0x8
 4899 186b 480F     		.2byte	0xf48
 4900 186d C9180000 		.4byte	0x18c9
 4901 1871 03       		.byte	0x3
 4902 1872 23       		.byte	0x23
 4903 1873 B003     		.uleb128 0x1b0
 4904 1875 13       		.uleb128 0x13
 4905 1876 CA070000 		.4byte	.LASF349
 4906 187a 08       		.byte	0x8
 4907 187b 490F     		.2byte	0xf49
 4908 187d CE180000 		.4byte	0x18ce
 4909 1881 03       		.byte	0x3
 4910 1882 23       		.byte	0x23
 4911 1883 8004     		.uleb128 0x200
 4912 1885 00       		.byte	0
 4913 1886 19       		.uleb128 0x19
 4914 1887 EB0E0000 		.4byte	0xeeb
 4915 188b 19       		.uleb128 0x19
 4916 188c 89140000 		.4byte	0x1489
 4917 1890 19       		.uleb128 0x19
 4918 1891 000F0000 		.4byte	0xf00
 4919 1895 19       		.uleb128 0x19
 4920 1896 7A0F0000 		.4byte	0xf7a
 4921 189a 19       		.uleb128 0x19
 4922 189b 6A0F0000 		.4byte	0xf6a
 4923 189f 19       		.uleb128 0x19
 4924 18a0 390F0000 		.4byte	0xf39
 4925 18a4 19       		.uleb128 0x19
 4926 18a5 000F0000 		.4byte	0xf00
 4927 18a9 08       		.uleb128 0x8
 4928 18aa 6D150000 		.4byte	0x156d
 4929 18ae B9180000 		.4byte	0x18b9
 4930 18b2 09       		.uleb128 0x9
 4931 18b3 4C000000 		.4byte	0x4c
 4932 18b7 07       		.byte	0x7
 4933 18b8 00       		.byte	0
 4934 18b9 08       		.uleb128 0x8
ARM GAS  /tmp/ccKa46D2.s 			page 123


 4935 18ba 01010000 		.4byte	0x101
 4936 18be C9180000 		.4byte	0x18c9
 4937 18c2 09       		.uleb128 0x9
 4938 18c3 4C000000 		.4byte	0x4c
 4939 18c7 13       		.byte	0x13
 4940 18c8 00       		.byte	0
 4941 18c9 19       		.uleb128 0x19
 4942 18ca B9180000 		.4byte	0x18b9
 4943 18ce 08       		.uleb128 0x8
 4944 18cf 1B150000 		.4byte	0x151b
 4945 18d3 DE180000 		.4byte	0x18de
 4946 18d7 09       		.uleb128 0x9
 4947 18d8 4C000000 		.4byte	0x4c
 4948 18dc 03       		.byte	0x3
 4949 18dd 00       		.byte	0
 4950 18de 1E       		.uleb128 0x1e
 4951 18df 50776D00 		.ascii	"Pwm\000"
 4952 18e3 08       		.byte	0x8
 4953 18e4 4A0F     		.2byte	0xf4a
 4954 18e6 79150000 		.4byte	0x1579
 4955 18ea 20       		.uleb128 0x20
 4956 18eb 40       		.byte	0x40
 4957 18ec 08       		.byte	0x8
 4958 18ed 4B15     		.2byte	0x154b
 4959 18ef B7190000 		.4byte	0x19b7
 4960 18f3 13       		.uleb128 0x13
 4961 18f4 E1010000 		.4byte	.LASF350
 4962 18f8 08       		.byte	0x8
 4963 18f9 4C15     		.2byte	0x154c
 4964 18fb AB0C0000 		.4byte	0xcab
 4965 18ff 02       		.byte	0x2
 4966 1900 23       		.byte	0x23
 4967 1901 00       		.uleb128 0
 4968 1902 13       		.uleb128 0x13
 4969 1903 3F070000 		.4byte	.LASF351
 4970 1907 08       		.byte	0x8
 4971 1908 4D15     		.2byte	0x154d
 4972 190a AB0C0000 		.4byte	0xcab
 4973 190e 02       		.byte	0x2
 4974 190f 23       		.byte	0x23
 4975 1910 04       		.uleb128 0x4
 4976 1911 13       		.uleb128 0x13
 4977 1912 EE0D0000 		.4byte	.LASF352
 4978 1916 08       		.byte	0x8
 4979 1917 4E15     		.2byte	0x154e
 4980 1919 AB0C0000 		.4byte	0xcab
 4981 191d 02       		.byte	0x2
 4982 191e 23       		.byte	0x23
 4983 191f 08       		.uleb128 0x8
 4984 1920 13       		.uleb128 0x13
 4985 1921 8F0B0000 		.4byte	.LASF193
 4986 1925 08       		.byte	0x8
 4987 1926 4F15     		.2byte	0x154f
 4988 1928 B7190000 		.4byte	0x19b7
 4989 192c 02       		.byte	0x2
 4990 192d 23       		.byte	0x23
 4991 192e 0C       		.uleb128 0xc
ARM GAS  /tmp/ccKa46D2.s 			page 124


 4992 192f 13       		.uleb128 0x13
 4993 1930 000C0000 		.4byte	.LASF353
 4994 1934 08       		.byte	0x8
 4995 1935 5015     		.2byte	0x1550
 4996 1937 AB0C0000 		.4byte	0xcab
 4997 193b 02       		.byte	0x2
 4998 193c 23       		.byte	0x23
 4999 193d 10       		.uleb128 0x10
 5000 193e 13       		.uleb128 0x13
 5001 193f CD030000 		.4byte	.LASF354
 5002 1943 08       		.byte	0x8
 5003 1944 5115     		.2byte	0x1551
 5004 1946 AB0C0000 		.4byte	0xcab
 5005 194a 02       		.byte	0x2
 5006 194b 23       		.byte	0x23
 5007 194c 14       		.uleb128 0x14
 5008 194d 13       		.uleb128 0x13
 5009 194e D3030000 		.4byte	.LASF355
 5010 1952 08       		.byte	0x8
 5011 1953 5215     		.2byte	0x1552
 5012 1955 AB0C0000 		.4byte	0xcab
 5013 1959 02       		.byte	0x2
 5014 195a 23       		.byte	0x23
 5015 195b 18       		.uleb128 0x18
 5016 195c 13       		.uleb128 0x13
 5017 195d D9030000 		.4byte	.LASF356
 5018 1961 08       		.byte	0x8
 5019 1962 5315     		.2byte	0x1553
 5020 1964 AB0C0000 		.4byte	0xcab
 5021 1968 02       		.byte	0x2
 5022 1969 23       		.byte	0x23
 5023 196a 1C       		.uleb128 0x1c
 5024 196b 13       		.uleb128 0x13
 5025 196c B2040000 		.4byte	.LASF357
 5026 1970 08       		.byte	0x8
 5027 1971 5415     		.2byte	0x1554
 5028 1973 AB0C0000 		.4byte	0xcab
 5029 1977 02       		.byte	0x2
 5030 1978 23       		.byte	0x23
 5031 1979 20       		.uleb128 0x20
 5032 197a 13       		.uleb128 0x13
 5033 197b 5B060000 		.4byte	.LASF358
 5034 197f 08       		.byte	0x8
 5035 1980 5515     		.2byte	0x1555
 5036 1982 AB0C0000 		.4byte	0xcab
 5037 1986 02       		.byte	0x2
 5038 1987 23       		.byte	0x23
 5039 1988 24       		.uleb128 0x24
 5040 1989 13       		.uleb128 0x13
 5041 198a 8D050000 		.4byte	.LASF359
 5042 198e 08       		.byte	0x8
 5043 198f 5615     		.2byte	0x1556
 5044 1991 AB0C0000 		.4byte	0xcab
 5045 1995 02       		.byte	0x2
 5046 1996 23       		.byte	0x23
 5047 1997 28       		.uleb128 0x28
 5048 1998 13       		.uleb128 0x13
ARM GAS  /tmp/ccKa46D2.s 			page 125


 5049 1999 EB090000 		.4byte	.LASF360
 5050 199d 08       		.byte	0x8
 5051 199e 5715     		.2byte	0x1557
 5052 19a0 AB0C0000 		.4byte	0xcab
 5053 19a4 02       		.byte	0x2
 5054 19a5 23       		.byte	0x23
 5055 19a6 2C       		.uleb128 0x2c
 5056 19a7 13       		.uleb128 0x13
 5057 19a8 990B0000 		.4byte	.LASF199
 5058 19ac 08       		.byte	0x8
 5059 19ad 5815     		.2byte	0x1558
 5060 19af BC190000 		.4byte	0x19bc
 5061 19b3 02       		.byte	0x2
 5062 19b4 23       		.byte	0x23
 5063 19b5 30       		.uleb128 0x30
 5064 19b6 00       		.byte	0
 5065 19b7 19       		.uleb128 0x19
 5066 19b8 EB0E0000 		.4byte	0xeeb
 5067 19bc 19       		.uleb128 0x19
 5068 19bd 5A0F0000 		.4byte	0xf5a
 5069 19c1 05       		.uleb128 0x5
 5070 19c2 06030000 		.4byte	.LASF361
 5071 19c6 08       		.byte	0x8
 5072 19c7 5915     		.2byte	0x1559
 5073 19c9 EA180000 		.4byte	0x18ea
 5074 19cd 20       		.uleb128 0x20
 5075 19ce E8       		.byte	0xe8
 5076 19cf 08       		.byte	0x8
 5077 19d0 5B15     		.2byte	0x155b
 5078 19d2 761A0000 		.4byte	0x1a76
 5079 19d6 13       		.uleb128 0x13
 5080 19d7 84010000 		.4byte	.LASF362
 5081 19db 08       		.byte	0x8
 5082 19dc 5C15     		.2byte	0x155c
 5083 19de 761A0000 		.4byte	0x1a76
 5084 19e2 02       		.byte	0x2
 5085 19e3 23       		.byte	0x23
 5086 19e4 00       		.uleb128 0
 5087 19e5 13       		.uleb128 0x13
 5088 19e6 620E0000 		.4byte	.LASF363
 5089 19ea 08       		.byte	0x8
 5090 19eb 5D15     		.2byte	0x155d
 5091 19ed AB0C0000 		.4byte	0xcab
 5092 19f1 03       		.byte	0x3
 5093 19f2 23       		.byte	0x23
 5094 19f3 C001     		.uleb128 0xc0
 5095 19f5 13       		.uleb128 0x13
 5096 19f6 FA030000 		.4byte	.LASF364
 5097 19fa 08       		.byte	0x8
 5098 19fb 5E15     		.2byte	0x155e
 5099 19fd AB0C0000 		.4byte	0xcab
 5100 1a01 03       		.byte	0x3
 5101 1a02 23       		.byte	0x23
 5102 1a03 C401     		.uleb128 0xc4
 5103 1a05 13       		.uleb128 0x13
 5104 1a06 DC0C0000 		.4byte	.LASF365
 5105 1a0a 08       		.byte	0x8
ARM GAS  /tmp/ccKa46D2.s 			page 126


 5106 1a0b 5F15     		.2byte	0x155f
 5107 1a0d AB0C0000 		.4byte	0xcab
 5108 1a11 03       		.byte	0x3
 5109 1a12 23       		.byte	0x23
 5110 1a13 C801     		.uleb128 0xc8
 5111 1a15 13       		.uleb128 0x13
 5112 1a16 6A0C0000 		.4byte	.LASF366
 5113 1a1a 08       		.byte	0x8
 5114 1a1b 6015     		.2byte	0x1560
 5115 1a1d AB0C0000 		.4byte	0xcab
 5116 1a21 03       		.byte	0x3
 5117 1a22 23       		.byte	0x23
 5118 1a23 CC01     		.uleb128 0xcc
 5119 1a25 13       		.uleb128 0x13
 5120 1a26 59010000 		.4byte	.LASF367
 5121 1a2a 08       		.byte	0x8
 5122 1a2b 6115     		.2byte	0x1561
 5123 1a2d B00C0000 		.4byte	0xcb0
 5124 1a31 03       		.byte	0x3
 5125 1a32 23       		.byte	0x23
 5126 1a33 D001     		.uleb128 0xd0
 5127 1a35 13       		.uleb128 0x13
 5128 1a36 5C040000 		.4byte	.LASF368
 5129 1a3a 08       		.byte	0x8
 5130 1a3b 6215     		.2byte	0x1562
 5131 1a3d B00C0000 		.4byte	0xcb0
 5132 1a41 03       		.byte	0x3
 5133 1a42 23       		.byte	0x23
 5134 1a43 D401     		.uleb128 0xd4
 5135 1a45 13       		.uleb128 0x13
 5136 1a46 06010000 		.4byte	.LASF369
 5137 1a4a 08       		.byte	0x8
 5138 1a4b 6315     		.2byte	0x1563
 5139 1a4d AB0C0000 		.4byte	0xcab
 5140 1a51 03       		.byte	0x3
 5141 1a52 23       		.byte	0x23
 5142 1a53 D801     		.uleb128 0xd8
 5143 1a55 13       		.uleb128 0x13
 5144 1a56 8F0B0000 		.4byte	.LASF193
 5145 1a5a 08       		.byte	0x8
 5146 1a5b 6415     		.2byte	0x1564
 5147 1a5d 861A0000 		.4byte	0x1a86
 5148 1a61 03       		.byte	0x3
 5149 1a62 23       		.byte	0x23
 5150 1a63 DC01     		.uleb128 0xdc
 5151 1a65 13       		.uleb128 0x13
 5152 1a66 410D0000 		.4byte	.LASF370
 5153 1a6a 08       		.byte	0x8
 5154 1a6b 6515     		.2byte	0x1565
 5155 1a6d AB0C0000 		.4byte	0xcab
 5156 1a71 03       		.byte	0x3
 5157 1a72 23       		.byte	0x23
 5158 1a73 E401     		.uleb128 0xe4
 5159 1a75 00       		.byte	0
 5160 1a76 08       		.uleb128 0x8
 5161 1a77 C1190000 		.4byte	0x19c1
 5162 1a7b 861A0000 		.4byte	0x1a86
ARM GAS  /tmp/ccKa46D2.s 			page 127


 5163 1a7f 09       		.uleb128 0x9
 5164 1a80 4C000000 		.4byte	0x4c
 5165 1a84 02       		.byte	0x2
 5166 1a85 00       		.byte	0
 5167 1a86 19       		.uleb128 0x19
 5168 1a87 000F0000 		.4byte	0xf00
 5169 1a8b 1E       		.uleb128 0x1e
 5170 1a8c 546300   		.ascii	"Tc\000"
 5171 1a8f 08       		.byte	0x8
 5172 1a90 6615     		.2byte	0x1566
 5173 1a92 CD190000 		.4byte	0x19cd
 5174 1a96 20       		.uleb128 0x20
 5175 1a97 0C       		.byte	0xc
 5176 1a98 08       		.byte	0x8
 5177 1a99 7C19     		.2byte	0x197c
 5178 1a9b CD1A0000 		.4byte	0x1acd
 5179 1a9f 13       		.uleb128 0x13
 5180 1aa0 A3030000 		.4byte	.LASF371
 5181 1aa4 08       		.byte	0x8
 5182 1aa5 7D19     		.2byte	0x197d
 5183 1aa7 AB0C0000 		.4byte	0xcab
 5184 1aab 02       		.byte	0x2
 5185 1aac 23       		.byte	0x23
 5186 1aad 00       		.uleb128 0
 5187 1aae 13       		.uleb128 0x13
 5188 1aaf B2080000 		.4byte	.LASF372
 5189 1ab3 08       		.byte	0x8
 5190 1ab4 7E19     		.2byte	0x197e
 5191 1ab6 AB0C0000 		.4byte	0xcab
 5192 1aba 02       		.byte	0x2
 5193 1abb 23       		.byte	0x23
 5194 1abc 04       		.uleb128 0x4
 5195 1abd 13       		.uleb128 0x13
 5196 1abe 900C0000 		.4byte	.LASF373
 5197 1ac2 08       		.byte	0x8
 5198 1ac3 7F19     		.2byte	0x197f
 5199 1ac5 B00C0000 		.4byte	0xcb0
 5200 1ac9 02       		.byte	0x2
 5201 1aca 23       		.byte	0x23
 5202 1acb 08       		.uleb128 0x8
 5203 1acc 00       		.byte	0
 5204 1acd 1E       		.uleb128 0x1e
 5205 1ace 57647400 		.ascii	"Wdt\000"
 5206 1ad2 08       		.byte	0x8
 5207 1ad3 8019     		.2byte	0x1980
 5208 1ad5 961A0000 		.4byte	0x1a96
 5209 1ad9 0D       		.uleb128 0xd
 5210 1ada 720E0000 		.4byte	.LASF374
 5211 1ade 0C       		.byte	0xc
 5212 1adf 09       		.byte	0x9
 5213 1ae0 A7       		.byte	0xa7
 5214 1ae1 2B1B0000 		.4byte	0x1b2b
 5215 1ae5 0B       		.uleb128 0xb
 5216 1ae6 1B080000 		.4byte	.LASF375
 5217 1aea 09       		.byte	0x9
 5218 1aeb AA       		.byte	0xaa
 5219 1aec C4080000 		.4byte	0x8c4
ARM GAS  /tmp/ccKa46D2.s 			page 128


 5220 1af0 02       		.byte	0x2
 5221 1af1 23       		.byte	0x23
 5222 1af2 00       		.uleb128 0
 5223 1af3 0E       		.uleb128 0xe
 5224 1af4 70696F00 		.ascii	"pio\000"
 5225 1af8 09       		.byte	0x9
 5226 1af9 AC       		.byte	0xac
 5227 1afa 2B1B0000 		.4byte	0x1b2b
 5228 1afe 02       		.byte	0x2
 5229 1aff 23       		.byte	0x23
 5230 1b00 04       		.uleb128 0x4
 5231 1b01 0E       		.uleb128 0xe
 5232 1b02 696400   		.ascii	"id\000"
 5233 1b05 09       		.byte	0x9
 5234 1b06 AE       		.byte	0xae
 5235 1b07 98080000 		.4byte	0x898
 5236 1b0b 02       		.byte	0x2
 5237 1b0c 23       		.byte	0x23
 5238 1b0d 08       		.uleb128 0x8
 5239 1b0e 0B       		.uleb128 0xb
 5240 1b0f 21010000 		.4byte	.LASF376
 5241 1b13 09       		.byte	0x9
 5242 1b14 B0       		.byte	0xb0
 5243 1b15 98080000 		.4byte	0x898
 5244 1b19 02       		.byte	0x2
 5245 1b1a 23       		.byte	0x23
 5246 1b1b 09       		.uleb128 0x9
 5247 1b1c 0B       		.uleb128 0xb
 5248 1b1d 210A0000 		.4byte	.LASF377
 5249 1b21 09       		.byte	0x9
 5250 1b22 B2       		.byte	0xb2
 5251 1b23 98080000 		.4byte	0x898
 5252 1b27 02       		.byte	0x2
 5253 1b28 23       		.byte	0x23
 5254 1b29 0A       		.uleb128 0xa
 5255 1b2a 00       		.byte	0
 5256 1b2b 0F       		.uleb128 0xf
 5257 1b2c 04       		.byte	0x4
 5258 1b2d 7D140000 		.4byte	0x147d
 5259 1b31 21       		.uleb128 0x21
 5260 1b32 50696E00 		.ascii	"Pin\000"
 5261 1b36 09       		.byte	0x9
 5262 1b37 B3       		.byte	0xb3
 5263 1b38 D91A0000 		.4byte	0x1ad9
 5264 1b3c 04       		.uleb128 0x4
 5265 1b3d ED060000 		.4byte	.LASF378
 5266 1b41 0A       		.byte	0xa
 5267 1b42 10       		.byte	0x10
 5268 1b43 AE080000 		.4byte	0x8ae
 5269 1b47 22       		.uleb128 0x22
 5270 1b48 01       		.byte	0x1
 5271 1b49 0A       		.byte	0xa
 5272 1b4a 12       		.byte	0x12
 5273 1b4b 681B0000 		.4byte	0x1b68
 5274 1b4f 23       		.uleb128 0x23
 5275 1b50 4F464600 		.ascii	"OFF\000"
 5276 1b54 00       		.sleb128 0
ARM GAS  /tmp/ccKa46D2.s 			page 129


 5277 1b55 1B       		.uleb128 0x1b
 5278 1b56 59090000 		.4byte	.LASF379
 5279 1b5a 01       		.sleb128 1
 5280 1b5b 1B       		.uleb128 0x1b
 5281 1b5c DC010000 		.4byte	.LASF380
 5282 1b60 02       		.sleb128 2
 5283 1b61 1B       		.uleb128 0x1b
 5284 1b62 7C080000 		.4byte	.LASF381
 5285 1b66 03       		.sleb128 3
 5286 1b67 00       		.byte	0
 5287 1b68 04       		.uleb128 0x4
 5288 1b69 6E040000 		.4byte	.LASF382
 5289 1b6d 0A       		.byte	0xa
 5290 1b6e 12       		.byte	0x12
 5291 1b6f 471B0000 		.4byte	0x1b47
 5292 1b73 0D       		.uleb128 0xd
 5293 1b74 82030000 		.4byte	.LASF383
 5294 1b78 2C       		.byte	0x2c
 5295 1b79 0A       		.byte	0xa
 5296 1b7a 15       		.byte	0x15
 5297 1b7b 3E1C0000 		.4byte	0x1c3e
 5298 1b7f 0B       		.uleb128 0xb
 5299 1b80 C60C0000 		.4byte	.LASF384
 5300 1b84 0A       		.byte	0xa
 5301 1b85 16       		.byte	0x16
 5302 1b86 681B0000 		.4byte	0x1b68
 5303 1b8a 02       		.byte	0x2
 5304 1b8b 23       		.byte	0x23
 5305 1b8c 00       		.uleb128 0
 5306 1b8d 0E       		.uleb128 0xe
 5307 1b8e 535000   		.ascii	"SP\000"
 5308 1b91 0A       		.byte	0xa
 5309 1b92 17       		.byte	0x17
 5310 1b93 3C1B0000 		.4byte	0x1b3c
 5311 1b97 02       		.byte	0x2
 5312 1b98 23       		.byte	0x23
 5313 1b99 02       		.uleb128 0x2
 5314 1b9a 0E       		.uleb128 0xe
 5315 1b9b 72535000 		.ascii	"rSP\000"
 5316 1b9f 0A       		.byte	0xa
 5317 1ba0 18       		.byte	0x18
 5318 1ba1 3C1B0000 		.4byte	0x1b3c
 5319 1ba5 02       		.byte	0x2
 5320 1ba6 23       		.byte	0x23
 5321 1ba7 04       		.uleb128 0x4
 5322 1ba8 0B       		.uleb128 0xb
 5323 1ba9 89040000 		.4byte	.LASF385
 5324 1bad 0A       		.byte	0xa
 5325 1bae 19       		.byte	0x19
 5326 1baf 45000000 		.4byte	0x45
 5327 1bb3 02       		.byte	0x2
 5328 1bb4 23       		.byte	0x23
 5329 1bb5 08       		.uleb128 0x8
 5330 1bb6 0E       		.uleb128 0xe
 5331 1bb7 4B7000   		.ascii	"Kp\000"
 5332 1bba 0A       		.byte	0xa
 5333 1bbb 1B       		.byte	0x1b
ARM GAS  /tmp/ccKa46D2.s 			page 130


 5334 1bbc 3C1B0000 		.4byte	0x1b3c
 5335 1bc0 02       		.byte	0x2
 5336 1bc1 23       		.byte	0x23
 5337 1bc2 0C       		.uleb128 0xc
 5338 1bc3 0E       		.uleb128 0xe
 5339 1bc4 4B6900   		.ascii	"Ki\000"
 5340 1bc7 0A       		.byte	0xa
 5341 1bc8 1C       		.byte	0x1c
 5342 1bc9 3C1B0000 		.4byte	0x1b3c
 5343 1bcd 02       		.byte	0x2
 5344 1bce 23       		.byte	0x23
 5345 1bcf 0E       		.uleb128 0xe
 5346 1bd0 0E       		.uleb128 0xe
 5347 1bd1 4B6400   		.ascii	"Kd\000"
 5348 1bd4 0A       		.byte	0xa
 5349 1bd5 1D       		.byte	0x1d
 5350 1bd6 3C1B0000 		.4byte	0x1b3c
 5351 1bda 02       		.byte	0x2
 5352 1bdb 23       		.byte	0x23
 5353 1bdc 10       		.uleb128 0x10
 5354 1bdd 0E       		.uleb128 0xe
 5355 1bde 5F6500   		.ascii	"_e\000"
 5356 1be1 0A       		.byte	0xa
 5357 1be2 1F       		.byte	0x1f
 5358 1be3 45000000 		.4byte	0x45
 5359 1be7 02       		.byte	0x2
 5360 1be8 23       		.byte	0x23
 5361 1be9 14       		.uleb128 0x14
 5362 1bea 0E       		.uleb128 0xe
 5363 1beb 5F647800 		.ascii	"_dx\000"
 5364 1bef 0A       		.byte	0xa
 5365 1bf0 20       		.byte	0x20
 5366 1bf1 45000000 		.4byte	0x45
 5367 1bf5 02       		.byte	0x2
 5368 1bf6 23       		.byte	0x23
 5369 1bf7 18       		.uleb128 0x18
 5370 1bf8 0E       		.uleb128 0xe
 5371 1bf9 5F646500 		.ascii	"_de\000"
 5372 1bfd 0A       		.byte	0xa
 5373 1bfe 21       		.byte	0x21
 5374 1bff 45000000 		.4byte	0x45
 5375 1c03 02       		.byte	0x2
 5376 1c04 23       		.byte	0x23
 5377 1c05 1C       		.uleb128 0x1c
 5378 1c06 0B       		.uleb128 0xb
 5379 1c07 77080000 		.4byte	.LASF386
 5380 1c0b 0A       		.byte	0xa
 5381 1c0c 22       		.byte	0x22
 5382 1c0d 45000000 		.4byte	0x45
 5383 1c11 02       		.byte	0x2
 5384 1c12 23       		.byte	0x23
 5385 1c13 20       		.uleb128 0x20
 5386 1c14 0E       		.uleb128 0xe
 5387 1c15 5F7800   		.ascii	"_x\000"
 5388 1c18 0A       		.byte	0xa
 5389 1c19 23       		.byte	0x23
 5390 1c1a 3C1B0000 		.4byte	0x1b3c
ARM GAS  /tmp/ccKa46D2.s 			page 131


 5391 1c1e 02       		.byte	0x2
 5392 1c1f 23       		.byte	0x23
 5393 1c20 24       		.uleb128 0x24
 5394 1c21 0B       		.uleb128 0xb
 5395 1c22 090A0000 		.4byte	.LASF387
 5396 1c26 0A       		.byte	0xa
 5397 1c27 25       		.byte	0x25
 5398 1c28 37000000 		.4byte	0x37
 5399 1c2c 02       		.byte	0x2
 5400 1c2d 23       		.byte	0x23
 5401 1c2e 26       		.uleb128 0x26
 5402 1c2f 0B       		.uleb128 0xb
 5403 1c30 B2010000 		.4byte	.LASF388
 5404 1c34 0A       		.byte	0xa
 5405 1c35 27       		.byte	0x27
 5406 1c36 821C0000 		.4byte	0x1c82
 5407 1c3a 02       		.byte	0x2
 5408 1c3b 23       		.byte	0x23
 5409 1c3c 28       		.uleb128 0x28
 5410 1c3d 00       		.byte	0
 5411 1c3e 0D       		.uleb128 0xd
 5412 1c3f CF060000 		.4byte	.LASF389
 5413 1c43 10       		.byte	0x10
 5414 1c44 0A       		.byte	0xa
 5415 1c45 2B       		.byte	0x2b
 5416 1c46 821C0000 		.4byte	0x1c82
 5417 1c4a 0B       		.uleb128 0xb
 5418 1c4b 10050000 		.4byte	.LASF390
 5419 1c4f 0A       		.byte	0xa
 5420 1c50 2C       		.byte	0x2c
 5421 1c51 881C0000 		.4byte	0x1c88
 5422 1c55 02       		.byte	0x2
 5423 1c56 23       		.byte	0x23
 5424 1c57 00       		.uleb128 0
 5425 1c58 0B       		.uleb128 0xb
 5426 1c59 090A0000 		.4byte	.LASF387
 5427 1c5d 0A       		.byte	0xa
 5428 1c5e 2D       		.byte	0x2d
 5429 1c5f 45000000 		.4byte	0x45
 5430 1c63 02       		.byte	0x2
 5431 1c64 23       		.byte	0x23
 5432 1c65 04       		.uleb128 0x4
 5433 1c66 0E       		.uleb128 0xe
 5434 1c67 6F6E00   		.ascii	"on\000"
 5435 1c6a 0A       		.byte	0xa
 5436 1c6b 2E       		.byte	0x2e
 5437 1c6c 45000000 		.4byte	0x45
 5438 1c70 02       		.byte	0x2
 5439 1c71 23       		.byte	0x23
 5440 1c72 08       		.uleb128 0x8
 5441 1c73 0E       		.uleb128 0xe
 5442 1c74 6F666600 		.ascii	"off\000"
 5443 1c78 0A       		.byte	0xa
 5444 1c79 2F       		.byte	0x2f
 5445 1c7a 45000000 		.4byte	0x45
 5446 1c7e 02       		.byte	0x2
 5447 1c7f 23       		.byte	0x23
ARM GAS  /tmp/ccKa46D2.s 			page 132


 5448 1c80 0C       		.uleb128 0xc
 5449 1c81 00       		.byte	0
 5450 1c82 0F       		.uleb128 0xf
 5451 1c83 04       		.byte	0x4
 5452 1c84 3E1C0000 		.4byte	0x1c3e
 5453 1c88 0F       		.uleb128 0xf
 5454 1c89 04       		.byte	0x4
 5455 1c8a 45000000 		.4byte	0x45
 5456 1c8e 24       		.uleb128 0x24
 5457 1c8f 09000000 		.4byte	.LASF391
 5458 1c93 01       		.byte	0x1
 5459 1c94 DE05     		.2byte	0x5de
 5460 1c96 01       		.byte	0x1
 5461 1c97 00000000 		.4byte	.LFB14
 5462 1c9b 36000000 		.4byte	.LFE14
 5463 1c9f 00000000 		.4byte	.LLST0
 5464 1ca3 B71C0000 		.4byte	0x1cb7
 5465 1ca7 25       		.uleb128 0x25
 5466 1ca8 6F020000 		.4byte	.LASF393
 5467 1cac 01       		.byte	0x1
 5468 1cad DE05     		.2byte	0x5de
 5469 1caf DB090000 		.4byte	0x9db
 5470 1cb3 02       		.byte	0x2
 5471 1cb4 91       		.byte	0x91
 5472 1cb5 77       		.sleb128 -9
 5473 1cb6 00       		.byte	0
 5474 1cb7 24       		.uleb128 0x24
 5475 1cb8 98020000 		.4byte	.LASF392
 5476 1cbc 01       		.byte	0x1
 5477 1cbd 3206     		.2byte	0x632
 5478 1cbf 01       		.byte	0x1
 5479 1cc0 00000000 		.4byte	.LFB20
 5480 1cc4 5C000000 		.4byte	.LFE20
 5481 1cc8 38000000 		.4byte	.LLST1
 5482 1ccc EF1C0000 		.4byte	0x1cef
 5483 1cd0 25       		.uleb128 0x25
 5484 1cd1 6F020000 		.4byte	.LASF393
 5485 1cd5 01       		.byte	0x1
 5486 1cd6 3206     		.2byte	0x632
 5487 1cd8 DB090000 		.4byte	0x9db
 5488 1cdc 02       		.byte	0x2
 5489 1cdd 91       		.byte	0x91
 5490 1cde 77       		.sleb128 -9
 5491 1cdf 25       		.uleb128 0x25
 5492 1ce0 CB0C0000 		.4byte	.LASF394
 5493 1ce4 01       		.byte	0x1
 5494 1ce5 3206     		.2byte	0x632
 5495 1ce7 C4080000 		.4byte	0x8c4
 5496 1ceb 02       		.byte	0x2
 5497 1cec 91       		.byte	0x91
 5498 1ced 70       		.sleb128 -16
 5499 1cee 00       		.byte	0
 5500 1cef 26       		.uleb128 0x26
 5501 1cf0 01       		.byte	0x1
 5502 1cf1 61020000 		.4byte	.LASF395
 5503 1cf5 02       		.byte	0x2
 5504 1cf6 20       		.byte	0x20
ARM GAS  /tmp/ccKa46D2.s 			page 133


 5505 1cf7 45000000 		.4byte	0x45
 5506 1cfb 00000000 		.4byte	.LFB35
 5507 1cff 50020000 		.4byte	.LFE35
 5508 1d03 70000000 		.4byte	.LLST2
 5509 1d07 1A1D0000 		.4byte	0x1d1a
 5510 1d0b 27       		.uleb128 0x27
 5511 1d0c FC020000 		.4byte	.LASF397
 5512 1d10 02       		.byte	0x2
 5513 1d11 22       		.byte	0x22
 5514 1d12 C4080000 		.4byte	0x8c4
 5515 1d16 02       		.byte	0x2
 5516 1d17 91       		.byte	0x91
 5517 1d18 74       		.sleb128 -12
 5518 1d19 00       		.byte	0
 5519 1d1a 28       		.uleb128 0x28
 5520 1d1b 01       		.byte	0x1
 5521 1d1c AB0A0000 		.4byte	.LASF421
 5522 1d20 02       		.byte	0x2
 5523 1d21 5F       		.byte	0x5f
 5524 1d22 01       		.byte	0x1
 5525 1d23 00000000 		.4byte	.LFB36
 5526 1d27 2C000000 		.4byte	.LFE36
 5527 1d2b A8000000 		.4byte	.LLST3
 5528 1d2f 29       		.uleb128 0x29
 5529 1d30 01       		.byte	0x1
 5530 1d31 AF050000 		.4byte	.LASF396
 5531 1d35 02       		.byte	0x2
 5532 1d36 65       		.byte	0x65
 5533 1d37 01       		.byte	0x1
 5534 1d38 00000000 		.4byte	.LFB37
 5535 1d3c B0000000 		.4byte	.LFE37
 5536 1d40 D4000000 		.4byte	.LLST4
 5537 1d44 651D0000 		.4byte	0x1d65
 5538 1d48 27       		.uleb128 0x27
 5539 1d49 37000000 		.4byte	.LASF398
 5540 1d4d 02       		.byte	0x2
 5541 1d4e 67       		.byte	0x67
 5542 1d4f B9080000 		.4byte	0x8b9
 5543 1d53 02       		.byte	0x2
 5544 1d54 91       		.byte	0x91
 5545 1d55 74       		.sleb128 -12
 5546 1d56 27       		.uleb128 0x27
 5547 1d57 8C0D0000 		.4byte	.LASF399
 5548 1d5b 02       		.byte	0x2
 5549 1d5c 68       		.byte	0x68
 5550 1d5d C4080000 		.4byte	0x8c4
 5551 1d61 02       		.byte	0x2
 5552 1d62 91       		.byte	0x91
 5553 1d63 70       		.sleb128 -16
 5554 1d64 00       		.byte	0
 5555 1d65 2A       		.uleb128 0x2a
 5556 1d66 7E0B0000 		.4byte	.LASF406
 5557 1d6a 02       		.byte	0x2
 5558 1d6b 77       		.byte	0x77
 5559 1d6c 00000000 		.4byte	.LFB38
 5560 1d70 98020000 		.4byte	.LFE38
 5561 1d74 0C010000 		.4byte	.LLST5
ARM GAS  /tmp/ccKa46D2.s 			page 134


 5562 1d78 B21D0000 		.4byte	0x1db2
 5563 1d7c 2B       		.uleb128 0x2b
 5564 1d7d 64697600 		.ascii	"div\000"
 5565 1d81 02       		.byte	0x2
 5566 1d82 79       		.byte	0x79
 5567 1d83 C4080000 		.4byte	0x8c4
 5568 1d87 02       		.byte	0x2
 5569 1d88 91       		.byte	0x91
 5570 1d89 6C       		.sleb128 -20
 5571 1d8a 27       		.uleb128 0x27
 5572 1d8b 070B0000 		.4byte	.LASF400
 5573 1d8f 02       		.byte	0x2
 5574 1d90 7A       		.byte	0x7a
 5575 1d91 C4080000 		.4byte	0x8c4
 5576 1d95 02       		.byte	0x2
 5577 1d96 91       		.byte	0x91
 5578 1d97 68       		.sleb128 -24
 5579 1d98 27       		.uleb128 0x27
 5580 1d99 04070000 		.4byte	.LASF401
 5581 1d9d 02       		.byte	0x2
 5582 1d9e 7B       		.byte	0x7b
 5583 1d9f C21D0000 		.4byte	0x1dc2
 5584 1da3 03       		.byte	0x3
 5585 1da4 91       		.byte	0x91
 5586 1da5 A07F     		.sleb128 -96
 5587 1da7 2C       		.uleb128 0x2c
 5588 1da8 87030000 		.4byte	.LASF422
 5589 1dac D71D0000 		.4byte	0x1dd7
 5590 1db0 01       		.byte	0x1
 5591 1db1 00       		.byte	0
 5592 1db2 08       		.uleb128 0x8
 5593 1db3 311B0000 		.4byte	0x1b31
 5594 1db7 C21D0000 		.4byte	0x1dc2
 5595 1dbb 09       		.uleb128 0x9
 5596 1dbc 4C000000 		.4byte	0x4c
 5597 1dc0 05       		.byte	0x5
 5598 1dc1 00       		.byte	0
 5599 1dc2 17       		.uleb128 0x17
 5600 1dc3 B21D0000 		.4byte	0x1db2
 5601 1dc7 08       		.uleb128 0x8
 5602 1dc8 F9050000 		.4byte	0x5f9
 5603 1dcc D71D0000 		.4byte	0x1dd7
 5604 1dd0 09       		.uleb128 0x9
 5605 1dd1 4C000000 		.4byte	0x4c
 5606 1dd5 04       		.byte	0x4
 5607 1dd6 00       		.byte	0
 5608 1dd7 17       		.uleb128 0x17
 5609 1dd8 C71D0000 		.4byte	0x1dc7
 5610 1ddc 2D       		.uleb128 0x2d
 5611 1ddd B6060000 		.4byte	.LASF402
 5612 1de1 02       		.byte	0x2
 5613 1de2 B1       		.byte	0xb1
 5614 1de3 01       		.byte	0x1
 5615 1de4 00000000 		.4byte	.LFB39
 5616 1de8 00010000 		.4byte	.LFE39
 5617 1dec 46010000 		.4byte	.LLST6
 5618 1df0 1E1E0000 		.4byte	0x1e1e
ARM GAS  /tmp/ccKa46D2.s 			page 135


 5619 1df4 2E       		.uleb128 0x2e
 5620 1df5 32020000 		.4byte	.LASF403
 5621 1df9 02       		.byte	0x2
 5622 1dfa B1       		.byte	0xb1
 5623 1dfb B9080000 		.4byte	0x8b9
 5624 1dff 02       		.byte	0x2
 5625 1e00 91       		.byte	0x91
 5626 1e01 54       		.sleb128 -44
 5627 1e02 2B       		.uleb128 0x2b
 5628 1e03 757000   		.ascii	"up\000"
 5629 1e06 02       		.byte	0x2
 5630 1e07 B3       		.byte	0xb3
 5631 1e08 1E1E0000 		.4byte	0x1e1e
 5632 1e0c 02       		.byte	0x2
 5633 1e0d 91       		.byte	0x91
 5634 1e0e 64       		.sleb128 -28
 5635 1e0f 27       		.uleb128 0x27
 5636 1e10 CF0D0000 		.4byte	.LASF404
 5637 1e14 02       		.byte	0x2
 5638 1e15 B4       		.byte	0xb4
 5639 1e16 1E1E0000 		.4byte	0x1e1e
 5640 1e1a 02       		.byte	0x2
 5641 1e1b 91       		.byte	0x91
 5642 1e1c 58       		.sleb128 -40
 5643 1e1d 00       		.byte	0
 5644 1e1e 17       		.uleb128 0x17
 5645 1e1f 311B0000 		.4byte	0x1b31
 5646 1e23 2D       		.uleb128 0x2d
 5647 1e24 E8000000 		.4byte	.LASF405
 5648 1e28 02       		.byte	0x2
 5649 1e29 CA       		.byte	0xca
 5650 1e2a 01       		.byte	0x1
 5651 1e2b 00000000 		.4byte	.LFB40
 5652 1e2f 72010000 		.4byte	.LFE40
 5653 1e33 7E010000 		.4byte	.LLST7
 5654 1e37 4A1E0000 		.4byte	0x1e4a
 5655 1e3b 2F       		.uleb128 0x2f
 5656 1e3c 6E657700 		.ascii	"new\000"
 5657 1e40 02       		.byte	0x2
 5658 1e41 CA       		.byte	0xca
 5659 1e42 98080000 		.4byte	0x898
 5660 1e46 02       		.byte	0x2
 5661 1e47 91       		.byte	0x91
 5662 1e48 77       		.sleb128 -9
 5663 1e49 00       		.byte	0
 5664 1e4a 30       		.uleb128 0x30
 5665 1e4b 636C6900 		.ascii	"cli\000"
 5666 1e4f 02       		.byte	0x2
 5667 1e50 EA       		.byte	0xea
 5668 1e51 00000000 		.4byte	.LFB41
 5669 1e55 C8030000 		.4byte	.LFE41
 5670 1e59 B6010000 		.4byte	.LLST8
 5671 1e5d 9B1E0000 		.4byte	0x1e9b
 5672 1e61 27       		.uleb128 0x27
 5673 1e62 FF060000 		.4byte	.LASF407
 5674 1e66 02       		.byte	0x2
 5675 1e67 EC       		.byte	0xec
ARM GAS  /tmp/ccKa46D2.s 			page 136


 5676 1e68 45000000 		.4byte	0x45
 5677 1e6c 02       		.byte	0x2
 5678 1e6d 91       		.byte	0x91
 5679 1e6e 6C       		.sleb128 -20
 5680 1e6f 27       		.uleb128 0x27
 5681 1e70 22070000 		.4byte	.LASF408
 5682 1e74 02       		.byte	0x2
 5683 1e75 ED       		.byte	0xed
 5684 1e76 9B1E0000 		.4byte	0x1e9b
 5685 1e7a 02       		.byte	0x2
 5686 1e7b 91       		.byte	0x91
 5687 1e7c 60       		.sleb128 -32
 5688 1e7d 27       		.uleb128 0x27
 5689 1e7e 90060000 		.4byte	.LASF409
 5690 1e82 02       		.byte	0x2
 5691 1e83 EE       		.byte	0xee
 5692 1e84 AB1E0000 		.4byte	0x1eab
 5693 1e88 02       		.byte	0x2
 5694 1e89 91       		.byte	0x91
 5695 1e8a 40       		.sleb128 -64
 5696 1e8b 2B       		.uleb128 0x2b
 5697 1e8c 636D6400 		.ascii	"cmd\000"
 5698 1e90 02       		.byte	0x2
 5699 1e91 EF       		.byte	0xef
 5700 1e92 F9050000 		.4byte	0x5f9
 5701 1e96 03       		.byte	0x3
 5702 1e97 91       		.byte	0x91
 5703 1e98 BF7F     		.sleb128 -65
 5704 1e9a 00       		.byte	0
 5705 1e9b 08       		.uleb128 0x8
 5706 1e9c 45000000 		.4byte	0x45
 5707 1ea0 AB1E0000 		.4byte	0x1eab
 5708 1ea4 09       		.uleb128 0x9
 5709 1ea5 4C000000 		.4byte	0x4c
 5710 1ea9 02       		.byte	0x2
 5711 1eaa 00       		.byte	0
 5712 1eab 08       		.uleb128 0x8
 5713 1eac F9050000 		.4byte	0x5f9
 5714 1eb0 BB1E0000 		.4byte	0x1ebb
 5715 1eb4 09       		.uleb128 0x9
 5716 1eb5 4C000000 		.4byte	0x4c
 5717 1eb9 1F       		.byte	0x1f
 5718 1eba 00       		.byte	0
 5719 1ebb 31       		.uleb128 0x31
 5720 1ebc 07020000 		.4byte	.LASF410
 5721 1ec0 06       		.byte	0x6
 5722 1ec1 4803     		.2byte	0x348
 5723 1ec3 74040000 		.4byte	0x474
 5724 1ec7 01       		.byte	0x1
 5725 1ec8 01       		.byte	0x1
 5726 1ec9 31       		.uleb128 0x31
 5727 1eca 50080000 		.4byte	.LASF411
 5728 1ece 01       		.byte	0x1
 5729 1ecf CE06     		.2byte	0x6ce
 5730 1ed1 D71E0000 		.4byte	0x1ed7
 5731 1ed5 01       		.byte	0x1
 5732 1ed6 01       		.byte	0x1
ARM GAS  /tmp/ccKa46D2.s 			page 137


 5733 1ed7 19       		.uleb128 0x19
 5734 1ed8 45000000 		.4byte	0x45
 5735 1edc 08       		.uleb128 0x8
 5736 1edd 3C1B0000 		.4byte	0x1b3c
 5737 1ee1 EC1E0000 		.4byte	0x1eec
 5738 1ee5 09       		.uleb128 0x9
 5739 1ee6 4C000000 		.4byte	0x4c
 5740 1eea 01       		.byte	0x1
 5741 1eeb 00       		.byte	0
 5742 1eec 32       		.uleb128 0x32
 5743 1eed 10050000 		.4byte	.LASF390
 5744 1ef1 02       		.byte	0x2
 5745 1ef2 11       		.byte	0x11
 5746 1ef3 DC1E0000 		.4byte	0x1edc
 5747 1ef7 01       		.byte	0x1
 5748 1ef8 01       		.byte	0x1
 5749 1ef9 32       		.uleb128 0x32
 5750 1efa A5000000 		.4byte	.LASF412
 5751 1efe 02       		.byte	0x2
 5752 1eff 12       		.byte	0x12
 5753 1f00 98080000 		.4byte	0x898
 5754 1f04 01       		.byte	0x1
 5755 1f05 01       		.byte	0x1
 5756 1f06 32       		.uleb128 0x32
 5757 1f07 3E010000 		.4byte	.LASF413
 5758 1f0b 02       		.byte	0x2
 5759 1f0c 14       		.byte	0x14
 5760 1f0d 731B0000 		.4byte	0x1b73
 5761 1f11 01       		.byte	0x1
 5762 1f12 01       		.byte	0x1
 5763 1f13 32       		.uleb128 0x32
 5764 1f14 9E090000 		.4byte	.LASF414
 5765 1f18 02       		.byte	0x2
 5766 1f19 15       		.byte	0x15
 5767 1f1a 3E1C0000 		.4byte	0x1c3e
 5768 1f1e 01       		.byte	0x1
 5769 1f1f 01       		.byte	0x1
 5770 1f20 32       		.uleb128 0x32
 5771 1f21 90040000 		.4byte	.LASF415
 5772 1f25 02       		.byte	0x2
 5773 1f26 16       		.byte	0x16
 5774 1f27 3E1C0000 		.4byte	0x1c3e
 5775 1f2b 01       		.byte	0x1
 5776 1f2c 01       		.byte	0x1
 5777 1f2d 32       		.uleb128 0x32
 5778 1f2e BB010000 		.4byte	.LASF416
 5779 1f32 02       		.byte	0x2
 5780 1f33 18       		.byte	0x18
 5781 1f34 C4080000 		.4byte	0x8c4
 5782 1f38 01       		.byte	0x1
 5783 1f39 01       		.byte	0x1
 5784 1f3a 32       		.uleb128 0x32
 5785 1f3b 970C0000 		.4byte	.LASF417
 5786 1f3f 02       		.byte	0x2
 5787 1f40 19       		.byte	0x19
 5788 1f41 C4080000 		.4byte	0x8c4
 5789 1f45 01       		.byte	0x1
ARM GAS  /tmp/ccKa46D2.s 			page 138


 5790 1f46 01       		.byte	0x1
 5791 1f47 31       		.uleb128 0x31
 5792 1f48 07020000 		.4byte	.LASF410
 5793 1f4c 06       		.byte	0x6
 5794 1f4d 4803     		.2byte	0x348
 5795 1f4f 74040000 		.4byte	0x474
 5796 1f53 01       		.byte	0x1
 5797 1f54 01       		.byte	0x1
 5798 1f55 31       		.uleb128 0x31
 5799 1f56 50080000 		.4byte	.LASF411
 5800 1f5a 01       		.byte	0x1
 5801 1f5b CE06     		.2byte	0x6ce
 5802 1f5d D71E0000 		.4byte	0x1ed7
 5803 1f61 01       		.byte	0x1
 5804 1f62 01       		.byte	0x1
 5805 1f63 33       		.uleb128 0x33
 5806 1f64 10050000 		.4byte	.LASF390
 5807 1f68 02       		.byte	0x2
 5808 1f69 11       		.byte	0x11
 5809 1f6a DC1E0000 		.4byte	0x1edc
 5810 1f6e 01       		.byte	0x1
 5811 1f6f 05       		.byte	0x5
 5812 1f70 03       		.byte	0x3
 5813 1f71 00000000 		.4byte	input
 5814 1f75 33       		.uleb128 0x33
 5815 1f76 A5000000 		.4byte	.LASF412
 5816 1f7a 02       		.byte	0x2
 5817 1f7b 12       		.byte	0x12
 5818 1f7c 98080000 		.4byte	0x898
 5819 1f80 01       		.byte	0x1
 5820 1f81 05       		.byte	0x5
 5821 1f82 03       		.byte	0x3
 5822 1f83 00000000 		.4byte	_state
 5823 1f87 33       		.uleb128 0x33
 5824 1f88 3E010000 		.4byte	.LASF413
 5825 1f8c 02       		.byte	0x2
 5826 1f8d 14       		.byte	0x14
 5827 1f8e 731B0000 		.4byte	0x1b73
 5828 1f92 01       		.byte	0x1
 5829 1f93 05       		.byte	0x5
 5830 1f94 03       		.byte	0x3
 5831 1f95 00000000 		.4byte	loop
 5832 1f99 33       		.uleb128 0x33
 5833 1f9a 9E090000 		.4byte	.LASF414
 5834 1f9e 02       		.byte	0x2
 5835 1f9f 15       		.byte	0x15
 5836 1fa0 3E1C0000 		.4byte	0x1c3e
 5837 1fa4 01       		.byte	0x1
 5838 1fa5 05       		.byte	0x5
 5839 1fa6 03       		.byte	0x3
 5840 1fa7 00000000 		.4byte	ntrip
 5841 1fab 33       		.uleb128 0x33
 5842 1fac 90040000 		.4byte	.LASF415
 5843 1fb0 02       		.byte	0x2
 5844 1fb1 16       		.byte	0x16
 5845 1fb2 3E1C0000 		.4byte	0x1c3e
 5846 1fb6 01       		.byte	0x1
ARM GAS  /tmp/ccKa46D2.s 			page 139


 5847 1fb7 05       		.byte	0x5
 5848 1fb8 03       		.byte	0x3
 5849 1fb9 00000000 		.4byte	rtrip
 5850 1fbd 33       		.uleb128 0x33
 5851 1fbe BB010000 		.4byte	.LASF416
 5852 1fc2 02       		.byte	0x2
 5853 1fc3 18       		.byte	0x18
 5854 1fc4 C4080000 		.4byte	0x8c4
 5855 1fc8 01       		.byte	0x1
 5856 1fc9 05       		.byte	0x5
 5857 1fca 03       		.byte	0x3
 5858 1fcb 00000000 		.4byte	releasetime
 5859 1fcf 33       		.uleb128 0x33
 5860 1fd0 970C0000 		.4byte	.LASF417
 5861 1fd4 02       		.byte	0x2
 5862 1fd5 19       		.byte	0x19
 5863 1fd6 C4080000 		.4byte	0x8c4
 5864 1fda 01       		.byte	0x1
 5865 1fdb 05       		.byte	0x5
 5866 1fdc 03       		.byte	0x3
 5867 1fdd 00000000 		.4byte	dxmax
 5868 1fe1 00       		.byte	0
 5869              		.section	.debug_abbrev,"",%progbits
 5870              	.Ldebug_abbrev0:
 5871 0000 01       		.uleb128 0x1
 5872 0001 11       		.uleb128 0x11
 5873 0002 01       		.byte	0x1
 5874 0003 25       		.uleb128 0x25
 5875 0004 0E       		.uleb128 0xe
 5876 0005 13       		.uleb128 0x13
 5877 0006 0B       		.uleb128 0xb
 5878 0007 03       		.uleb128 0x3
 5879 0008 0E       		.uleb128 0xe
 5880 0009 1B       		.uleb128 0x1b
 5881 000a 0E       		.uleb128 0xe
 5882 000b 11       		.uleb128 0x11
 5883 000c 01       		.uleb128 0x1
 5884 000d 52       		.uleb128 0x52
 5885 000e 01       		.uleb128 0x1
 5886 000f 55       		.uleb128 0x55
 5887 0010 06       		.uleb128 0x6
 5888 0011 10       		.uleb128 0x10
 5889 0012 06       		.uleb128 0x6
 5890 0013 00       		.byte	0
 5891 0014 00       		.byte	0
 5892 0015 02       		.uleb128 0x2
 5893 0016 24       		.uleb128 0x24
 5894 0017 00       		.byte	0
 5895 0018 0B       		.uleb128 0xb
 5896 0019 0B       		.uleb128 0xb
 5897 001a 3E       		.uleb128 0x3e
 5898 001b 0B       		.uleb128 0xb
 5899 001c 03       		.uleb128 0x3
 5900 001d 0E       		.uleb128 0xe
 5901 001e 00       		.byte	0
 5902 001f 00       		.byte	0
 5903 0020 03       		.uleb128 0x3
ARM GAS  /tmp/ccKa46D2.s 			page 140


 5904 0021 24       		.uleb128 0x24
 5905 0022 00       		.byte	0
 5906 0023 0B       		.uleb128 0xb
 5907 0024 0B       		.uleb128 0xb
 5908 0025 3E       		.uleb128 0x3e
 5909 0026 0B       		.uleb128 0xb
 5910 0027 03       		.uleb128 0x3
 5911 0028 08       		.uleb128 0x8
 5912 0029 00       		.byte	0
 5913 002a 00       		.byte	0
 5914 002b 04       		.uleb128 0x4
 5915 002c 16       		.uleb128 0x16
 5916 002d 00       		.byte	0
 5917 002e 03       		.uleb128 0x3
 5918 002f 0E       		.uleb128 0xe
 5919 0030 3A       		.uleb128 0x3a
 5920 0031 0B       		.uleb128 0xb
 5921 0032 3B       		.uleb128 0x3b
 5922 0033 0B       		.uleb128 0xb
 5923 0034 49       		.uleb128 0x49
 5924 0035 13       		.uleb128 0x13
 5925 0036 00       		.byte	0
 5926 0037 00       		.byte	0
 5927 0038 05       		.uleb128 0x5
 5928 0039 16       		.uleb128 0x16
 5929 003a 00       		.byte	0
 5930 003b 03       		.uleb128 0x3
 5931 003c 0E       		.uleb128 0xe
 5932 003d 3A       		.uleb128 0x3a
 5933 003e 0B       		.uleb128 0xb
 5934 003f 3B       		.uleb128 0x3b
 5935 0040 05       		.uleb128 0x5
 5936 0041 49       		.uleb128 0x49
 5937 0042 13       		.uleb128 0x13
 5938 0043 00       		.byte	0
 5939 0044 00       		.byte	0
 5940 0045 06       		.uleb128 0x6
 5941 0046 17       		.uleb128 0x17
 5942 0047 01       		.byte	0x1
 5943 0048 0B       		.uleb128 0xb
 5944 0049 0B       		.uleb128 0xb
 5945 004a 3A       		.uleb128 0x3a
 5946 004b 0B       		.uleb128 0xb
 5947 004c 3B       		.uleb128 0x3b
 5948 004d 0B       		.uleb128 0xb
 5949 004e 01       		.uleb128 0x1
 5950 004f 13       		.uleb128 0x13
 5951 0050 00       		.byte	0
 5952 0051 00       		.byte	0
 5953 0052 07       		.uleb128 0x7
 5954 0053 0D       		.uleb128 0xd
 5955 0054 00       		.byte	0
 5956 0055 03       		.uleb128 0x3
 5957 0056 0E       		.uleb128 0xe
 5958 0057 3A       		.uleb128 0x3a
 5959 0058 0B       		.uleb128 0xb
 5960 0059 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccKa46D2.s 			page 141


 5961 005a 0B       		.uleb128 0xb
 5962 005b 49       		.uleb128 0x49
 5963 005c 13       		.uleb128 0x13
 5964 005d 00       		.byte	0
 5965 005e 00       		.byte	0
 5966 005f 08       		.uleb128 0x8
 5967 0060 01       		.uleb128 0x1
 5968 0061 01       		.byte	0x1
 5969 0062 49       		.uleb128 0x49
 5970 0063 13       		.uleb128 0x13
 5971 0064 01       		.uleb128 0x1
 5972 0065 13       		.uleb128 0x13
 5973 0066 00       		.byte	0
 5974 0067 00       		.byte	0
 5975 0068 09       		.uleb128 0x9
 5976 0069 21       		.uleb128 0x21
 5977 006a 00       		.byte	0
 5978 006b 49       		.uleb128 0x49
 5979 006c 13       		.uleb128 0x13
 5980 006d 2F       		.uleb128 0x2f
 5981 006e 0B       		.uleb128 0xb
 5982 006f 00       		.byte	0
 5983 0070 00       		.byte	0
 5984 0071 0A       		.uleb128 0xa
 5985 0072 13       		.uleb128 0x13
 5986 0073 01       		.byte	0x1
 5987 0074 0B       		.uleb128 0xb
 5988 0075 0B       		.uleb128 0xb
 5989 0076 3A       		.uleb128 0x3a
 5990 0077 0B       		.uleb128 0xb
 5991 0078 3B       		.uleb128 0x3b
 5992 0079 0B       		.uleb128 0xb
 5993 007a 01       		.uleb128 0x1
 5994 007b 13       		.uleb128 0x13
 5995 007c 00       		.byte	0
 5996 007d 00       		.byte	0
 5997 007e 0B       		.uleb128 0xb
 5998 007f 0D       		.uleb128 0xd
 5999 0080 00       		.byte	0
 6000 0081 03       		.uleb128 0x3
 6001 0082 0E       		.uleb128 0xe
 6002 0083 3A       		.uleb128 0x3a
 6003 0084 0B       		.uleb128 0xb
 6004 0085 3B       		.uleb128 0x3b
 6005 0086 0B       		.uleb128 0xb
 6006 0087 49       		.uleb128 0x49
 6007 0088 13       		.uleb128 0x13
 6008 0089 38       		.uleb128 0x38
 6009 008a 0A       		.uleb128 0xa
 6010 008b 00       		.byte	0
 6011 008c 00       		.byte	0
 6012 008d 0C       		.uleb128 0xc
 6013 008e 0F       		.uleb128 0xf
 6014 008f 00       		.byte	0
 6015 0090 0B       		.uleb128 0xb
 6016 0091 0B       		.uleb128 0xb
 6017 0092 00       		.byte	0
ARM GAS  /tmp/ccKa46D2.s 			page 142


 6018 0093 00       		.byte	0
 6019 0094 0D       		.uleb128 0xd
 6020 0095 13       		.uleb128 0x13
 6021 0096 01       		.byte	0x1
 6022 0097 03       		.uleb128 0x3
 6023 0098 0E       		.uleb128 0xe
 6024 0099 0B       		.uleb128 0xb
 6025 009a 0B       		.uleb128 0xb
 6026 009b 3A       		.uleb128 0x3a
 6027 009c 0B       		.uleb128 0xb
 6028 009d 3B       		.uleb128 0x3b
 6029 009e 0B       		.uleb128 0xb
 6030 009f 01       		.uleb128 0x1
 6031 00a0 13       		.uleb128 0x13
 6032 00a1 00       		.byte	0
 6033 00a2 00       		.byte	0
 6034 00a3 0E       		.uleb128 0xe
 6035 00a4 0D       		.uleb128 0xd
 6036 00a5 00       		.byte	0
 6037 00a6 03       		.uleb128 0x3
 6038 00a7 08       		.uleb128 0x8
 6039 00a8 3A       		.uleb128 0x3a
 6040 00a9 0B       		.uleb128 0xb
 6041 00aa 3B       		.uleb128 0x3b
 6042 00ab 0B       		.uleb128 0xb
 6043 00ac 49       		.uleb128 0x49
 6044 00ad 13       		.uleb128 0x13
 6045 00ae 38       		.uleb128 0x38
 6046 00af 0A       		.uleb128 0xa
 6047 00b0 00       		.byte	0
 6048 00b1 00       		.byte	0
 6049 00b2 0F       		.uleb128 0xf
 6050 00b3 0F       		.uleb128 0xf
 6051 00b4 00       		.byte	0
 6052 00b5 0B       		.uleb128 0xb
 6053 00b6 0B       		.uleb128 0xb
 6054 00b7 49       		.uleb128 0x49
 6055 00b8 13       		.uleb128 0x13
 6056 00b9 00       		.byte	0
 6057 00ba 00       		.byte	0
 6058 00bb 10       		.uleb128 0x10
 6059 00bc 13       		.uleb128 0x13
 6060 00bd 01       		.byte	0x1
 6061 00be 03       		.uleb128 0x3
 6062 00bf 0E       		.uleb128 0xe
 6063 00c0 0B       		.uleb128 0xb
 6064 00c1 05       		.uleb128 0x5
 6065 00c2 3A       		.uleb128 0x3a
 6066 00c3 0B       		.uleb128 0xb
 6067 00c4 3B       		.uleb128 0x3b
 6068 00c5 0B       		.uleb128 0xb
 6069 00c6 01       		.uleb128 0x1
 6070 00c7 13       		.uleb128 0x13
 6071 00c8 00       		.byte	0
 6072 00c9 00       		.byte	0
 6073 00ca 11       		.uleb128 0x11
 6074 00cb 15       		.uleb128 0x15
ARM GAS  /tmp/ccKa46D2.s 			page 143


 6075 00cc 00       		.byte	0
 6076 00cd 27       		.uleb128 0x27
 6077 00ce 0C       		.uleb128 0xc
 6078 00cf 00       		.byte	0
 6079 00d0 00       		.byte	0
 6080 00d1 12       		.uleb128 0x12
 6081 00d2 13       		.uleb128 0x13
 6082 00d3 01       		.byte	0x1
 6083 00d4 03       		.uleb128 0x3
 6084 00d5 0E       		.uleb128 0xe
 6085 00d6 0B       		.uleb128 0xb
 6086 00d7 0B       		.uleb128 0xb
 6087 00d8 3A       		.uleb128 0x3a
 6088 00d9 0B       		.uleb128 0xb
 6089 00da 3B       		.uleb128 0x3b
 6090 00db 05       		.uleb128 0x5
 6091 00dc 01       		.uleb128 0x1
 6092 00dd 13       		.uleb128 0x13
 6093 00de 00       		.byte	0
 6094 00df 00       		.byte	0
 6095 00e0 13       		.uleb128 0x13
 6096 00e1 0D       		.uleb128 0xd
 6097 00e2 00       		.byte	0
 6098 00e3 03       		.uleb128 0x3
 6099 00e4 0E       		.uleb128 0xe
 6100 00e5 3A       		.uleb128 0x3a
 6101 00e6 0B       		.uleb128 0xb
 6102 00e7 3B       		.uleb128 0x3b
 6103 00e8 05       		.uleb128 0x5
 6104 00e9 49       		.uleb128 0x49
 6105 00ea 13       		.uleb128 0x13
 6106 00eb 38       		.uleb128 0x38
 6107 00ec 0A       		.uleb128 0xa
 6108 00ed 00       		.byte	0
 6109 00ee 00       		.byte	0
 6110 00ef 14       		.uleb128 0x14
 6111 00f0 0D       		.uleb128 0xd
 6112 00f1 00       		.byte	0
 6113 00f2 03       		.uleb128 0x3
 6114 00f3 08       		.uleb128 0x8
 6115 00f4 3A       		.uleb128 0x3a
 6116 00f5 0B       		.uleb128 0xb
 6117 00f6 3B       		.uleb128 0x3b
 6118 00f7 05       		.uleb128 0x5
 6119 00f8 49       		.uleb128 0x49
 6120 00f9 13       		.uleb128 0x13
 6121 00fa 38       		.uleb128 0x38
 6122 00fb 0A       		.uleb128 0xa
 6123 00fc 00       		.byte	0
 6124 00fd 00       		.byte	0
 6125 00fe 15       		.uleb128 0x15
 6126 00ff 15       		.uleb128 0x15
 6127 0100 01       		.byte	0x1
 6128 0101 27       		.uleb128 0x27
 6129 0102 0C       		.uleb128 0xc
 6130 0103 49       		.uleb128 0x49
 6131 0104 13       		.uleb128 0x13
ARM GAS  /tmp/ccKa46D2.s 			page 144


 6132 0105 01       		.uleb128 0x1
 6133 0106 13       		.uleb128 0x13
 6134 0107 00       		.byte	0
 6135 0108 00       		.byte	0
 6136 0109 16       		.uleb128 0x16
 6137 010a 05       		.uleb128 0x5
 6138 010b 00       		.byte	0
 6139 010c 49       		.uleb128 0x49
 6140 010d 13       		.uleb128 0x13
 6141 010e 00       		.byte	0
 6142 010f 00       		.byte	0
 6143 0110 17       		.uleb128 0x17
 6144 0111 26       		.uleb128 0x26
 6145 0112 00       		.byte	0
 6146 0113 49       		.uleb128 0x49
 6147 0114 13       		.uleb128 0x13
 6148 0115 00       		.byte	0
 6149 0116 00       		.byte	0
 6150 0117 18       		.uleb128 0x18
 6151 0118 15       		.uleb128 0x15
 6152 0119 01       		.byte	0x1
 6153 011a 27       		.uleb128 0x27
 6154 011b 0C       		.uleb128 0xc
 6155 011c 01       		.uleb128 0x1
 6156 011d 13       		.uleb128 0x13
 6157 011e 00       		.byte	0
 6158 011f 00       		.byte	0
 6159 0120 19       		.uleb128 0x19
 6160 0121 35       		.uleb128 0x35
 6161 0122 00       		.byte	0
 6162 0123 49       		.uleb128 0x49
 6163 0124 13       		.uleb128 0x13
 6164 0125 00       		.byte	0
 6165 0126 00       		.byte	0
 6166 0127 1A       		.uleb128 0x1a
 6167 0128 04       		.uleb128 0x4
 6168 0129 01       		.byte	0x1
 6169 012a 03       		.uleb128 0x3
 6170 012b 0E       		.uleb128 0xe
 6171 012c 0B       		.uleb128 0xb
 6172 012d 0B       		.uleb128 0xb
 6173 012e 3A       		.uleb128 0x3a
 6174 012f 0B       		.uleb128 0xb
 6175 0130 3B       		.uleb128 0x3b
 6176 0131 0B       		.uleb128 0xb
 6177 0132 01       		.uleb128 0x1
 6178 0133 13       		.uleb128 0x13
 6179 0134 00       		.byte	0
 6180 0135 00       		.byte	0
 6181 0136 1B       		.uleb128 0x1b
 6182 0137 28       		.uleb128 0x28
 6183 0138 00       		.byte	0
 6184 0139 03       		.uleb128 0x3
 6185 013a 0E       		.uleb128 0xe
 6186 013b 1C       		.uleb128 0x1c
 6187 013c 0D       		.uleb128 0xd
 6188 013d 00       		.byte	0
ARM GAS  /tmp/ccKa46D2.s 			page 145


 6189 013e 00       		.byte	0
 6190 013f 1C       		.uleb128 0x1c
 6191 0140 13       		.uleb128 0x13
 6192 0141 01       		.byte	0x1
 6193 0142 0B       		.uleb128 0xb
 6194 0143 05       		.uleb128 0x5
 6195 0144 3A       		.uleb128 0x3a
 6196 0145 0B       		.uleb128 0xb
 6197 0146 3B       		.uleb128 0x3b
 6198 0147 0B       		.uleb128 0xb
 6199 0148 01       		.uleb128 0x1
 6200 0149 13       		.uleb128 0x13
 6201 014a 00       		.byte	0
 6202 014b 00       		.byte	0
 6203 014c 1D       		.uleb128 0x1d
 6204 014d 21       		.uleb128 0x21
 6205 014e 00       		.byte	0
 6206 014f 49       		.uleb128 0x49
 6207 0150 13       		.uleb128 0x13
 6208 0151 2F       		.uleb128 0x2f
 6209 0152 05       		.uleb128 0x5
 6210 0153 00       		.byte	0
 6211 0154 00       		.byte	0
 6212 0155 1E       		.uleb128 0x1e
 6213 0156 16       		.uleb128 0x16
 6214 0157 00       		.byte	0
 6215 0158 03       		.uleb128 0x3
 6216 0159 08       		.uleb128 0x8
 6217 015a 3A       		.uleb128 0x3a
 6218 015b 0B       		.uleb128 0xb
 6219 015c 3B       		.uleb128 0x3b
 6220 015d 05       		.uleb128 0x5
 6221 015e 49       		.uleb128 0x49
 6222 015f 13       		.uleb128 0x13
 6223 0160 00       		.byte	0
 6224 0161 00       		.byte	0
 6225 0162 1F       		.uleb128 0x1f
 6226 0163 13       		.uleb128 0x13
 6227 0164 01       		.byte	0x1
 6228 0165 0B       		.uleb128 0xb
 6229 0166 05       		.uleb128 0x5
 6230 0167 3A       		.uleb128 0x3a
 6231 0168 0B       		.uleb128 0xb
 6232 0169 3B       		.uleb128 0x3b
 6233 016a 05       		.uleb128 0x5
 6234 016b 01       		.uleb128 0x1
 6235 016c 13       		.uleb128 0x13
 6236 016d 00       		.byte	0
 6237 016e 00       		.byte	0
 6238 016f 20       		.uleb128 0x20
 6239 0170 13       		.uleb128 0x13
 6240 0171 01       		.byte	0x1
 6241 0172 0B       		.uleb128 0xb
 6242 0173 0B       		.uleb128 0xb
 6243 0174 3A       		.uleb128 0x3a
 6244 0175 0B       		.uleb128 0xb
 6245 0176 3B       		.uleb128 0x3b
ARM GAS  /tmp/ccKa46D2.s 			page 146


 6246 0177 05       		.uleb128 0x5
 6247 0178 01       		.uleb128 0x1
 6248 0179 13       		.uleb128 0x13
 6249 017a 00       		.byte	0
 6250 017b 00       		.byte	0
 6251 017c 21       		.uleb128 0x21
 6252 017d 16       		.uleb128 0x16
 6253 017e 00       		.byte	0
 6254 017f 03       		.uleb128 0x3
 6255 0180 08       		.uleb128 0x8
 6256 0181 3A       		.uleb128 0x3a
 6257 0182 0B       		.uleb128 0xb
 6258 0183 3B       		.uleb128 0x3b
 6259 0184 0B       		.uleb128 0xb
 6260 0185 49       		.uleb128 0x49
 6261 0186 13       		.uleb128 0x13
 6262 0187 00       		.byte	0
 6263 0188 00       		.byte	0
 6264 0189 22       		.uleb128 0x22
 6265 018a 04       		.uleb128 0x4
 6266 018b 01       		.byte	0x1
 6267 018c 0B       		.uleb128 0xb
 6268 018d 0B       		.uleb128 0xb
 6269 018e 3A       		.uleb128 0x3a
 6270 018f 0B       		.uleb128 0xb
 6271 0190 3B       		.uleb128 0x3b
 6272 0191 0B       		.uleb128 0xb
 6273 0192 01       		.uleb128 0x1
 6274 0193 13       		.uleb128 0x13
 6275 0194 00       		.byte	0
 6276 0195 00       		.byte	0
 6277 0196 23       		.uleb128 0x23
 6278 0197 28       		.uleb128 0x28
 6279 0198 00       		.byte	0
 6280 0199 03       		.uleb128 0x3
 6281 019a 08       		.uleb128 0x8
 6282 019b 1C       		.uleb128 0x1c
 6283 019c 0D       		.uleb128 0xd
 6284 019d 00       		.byte	0
 6285 019e 00       		.byte	0
 6286 019f 24       		.uleb128 0x24
 6287 01a0 2E       		.uleb128 0x2e
 6288 01a1 01       		.byte	0x1
 6289 01a2 03       		.uleb128 0x3
 6290 01a3 0E       		.uleb128 0xe
 6291 01a4 3A       		.uleb128 0x3a
 6292 01a5 0B       		.uleb128 0xb
 6293 01a6 3B       		.uleb128 0x3b
 6294 01a7 05       		.uleb128 0x5
 6295 01a8 27       		.uleb128 0x27
 6296 01a9 0C       		.uleb128 0xc
 6297 01aa 11       		.uleb128 0x11
 6298 01ab 01       		.uleb128 0x1
 6299 01ac 12       		.uleb128 0x12
 6300 01ad 01       		.uleb128 0x1
 6301 01ae 40       		.uleb128 0x40
 6302 01af 06       		.uleb128 0x6
ARM GAS  /tmp/ccKa46D2.s 			page 147


 6303 01b0 01       		.uleb128 0x1
 6304 01b1 13       		.uleb128 0x13
 6305 01b2 00       		.byte	0
 6306 01b3 00       		.byte	0
 6307 01b4 25       		.uleb128 0x25
 6308 01b5 05       		.uleb128 0x5
 6309 01b6 00       		.byte	0
 6310 01b7 03       		.uleb128 0x3
 6311 01b8 0E       		.uleb128 0xe
 6312 01b9 3A       		.uleb128 0x3a
 6313 01ba 0B       		.uleb128 0xb
 6314 01bb 3B       		.uleb128 0x3b
 6315 01bc 05       		.uleb128 0x5
 6316 01bd 49       		.uleb128 0x49
 6317 01be 13       		.uleb128 0x13
 6318 01bf 02       		.uleb128 0x2
 6319 01c0 0A       		.uleb128 0xa
 6320 01c1 00       		.byte	0
 6321 01c2 00       		.byte	0
 6322 01c3 26       		.uleb128 0x26
 6323 01c4 2E       		.uleb128 0x2e
 6324 01c5 01       		.byte	0x1
 6325 01c6 3F       		.uleb128 0x3f
 6326 01c7 0C       		.uleb128 0xc
 6327 01c8 03       		.uleb128 0x3
 6328 01c9 0E       		.uleb128 0xe
 6329 01ca 3A       		.uleb128 0x3a
 6330 01cb 0B       		.uleb128 0xb
 6331 01cc 3B       		.uleb128 0x3b
 6332 01cd 0B       		.uleb128 0xb
 6333 01ce 49       		.uleb128 0x49
 6334 01cf 13       		.uleb128 0x13
 6335 01d0 11       		.uleb128 0x11
 6336 01d1 01       		.uleb128 0x1
 6337 01d2 12       		.uleb128 0x12
 6338 01d3 01       		.uleb128 0x1
 6339 01d4 40       		.uleb128 0x40
 6340 01d5 06       		.uleb128 0x6
 6341 01d6 01       		.uleb128 0x1
 6342 01d7 13       		.uleb128 0x13
 6343 01d8 00       		.byte	0
 6344 01d9 00       		.byte	0
 6345 01da 27       		.uleb128 0x27
 6346 01db 34       		.uleb128 0x34
 6347 01dc 00       		.byte	0
 6348 01dd 03       		.uleb128 0x3
 6349 01de 0E       		.uleb128 0xe
 6350 01df 3A       		.uleb128 0x3a
 6351 01e0 0B       		.uleb128 0xb
 6352 01e1 3B       		.uleb128 0x3b
 6353 01e2 0B       		.uleb128 0xb
 6354 01e3 49       		.uleb128 0x49
 6355 01e4 13       		.uleb128 0x13
 6356 01e5 02       		.uleb128 0x2
 6357 01e6 0A       		.uleb128 0xa
 6358 01e7 00       		.byte	0
 6359 01e8 00       		.byte	0
ARM GAS  /tmp/ccKa46D2.s 			page 148


 6360 01e9 28       		.uleb128 0x28
 6361 01ea 2E       		.uleb128 0x2e
 6362 01eb 00       		.byte	0
 6363 01ec 3F       		.uleb128 0x3f
 6364 01ed 0C       		.uleb128 0xc
 6365 01ee 03       		.uleb128 0x3
 6366 01ef 0E       		.uleb128 0xe
 6367 01f0 3A       		.uleb128 0x3a
 6368 01f1 0B       		.uleb128 0xb
 6369 01f2 3B       		.uleb128 0x3b
 6370 01f3 0B       		.uleb128 0xb
 6371 01f4 27       		.uleb128 0x27
 6372 01f5 0C       		.uleb128 0xc
 6373 01f6 11       		.uleb128 0x11
 6374 01f7 01       		.uleb128 0x1
 6375 01f8 12       		.uleb128 0x12
 6376 01f9 01       		.uleb128 0x1
 6377 01fa 40       		.uleb128 0x40
 6378 01fb 06       		.uleb128 0x6
 6379 01fc 00       		.byte	0
 6380 01fd 00       		.byte	0
 6381 01fe 29       		.uleb128 0x29
 6382 01ff 2E       		.uleb128 0x2e
 6383 0200 01       		.byte	0x1
 6384 0201 3F       		.uleb128 0x3f
 6385 0202 0C       		.uleb128 0xc
 6386 0203 03       		.uleb128 0x3
 6387 0204 0E       		.uleb128 0xe
 6388 0205 3A       		.uleb128 0x3a
 6389 0206 0B       		.uleb128 0xb
 6390 0207 3B       		.uleb128 0x3b
 6391 0208 0B       		.uleb128 0xb
 6392 0209 27       		.uleb128 0x27
 6393 020a 0C       		.uleb128 0xc
 6394 020b 11       		.uleb128 0x11
 6395 020c 01       		.uleb128 0x1
 6396 020d 12       		.uleb128 0x12
 6397 020e 01       		.uleb128 0x1
 6398 020f 40       		.uleb128 0x40
 6399 0210 06       		.uleb128 0x6
 6400 0211 01       		.uleb128 0x1
 6401 0212 13       		.uleb128 0x13
 6402 0213 00       		.byte	0
 6403 0214 00       		.byte	0
 6404 0215 2A       		.uleb128 0x2a
 6405 0216 2E       		.uleb128 0x2e
 6406 0217 01       		.byte	0x1
 6407 0218 03       		.uleb128 0x3
 6408 0219 0E       		.uleb128 0xe
 6409 021a 3A       		.uleb128 0x3a
 6410 021b 0B       		.uleb128 0xb
 6411 021c 3B       		.uleb128 0x3b
 6412 021d 0B       		.uleb128 0xb
 6413 021e 11       		.uleb128 0x11
 6414 021f 01       		.uleb128 0x1
 6415 0220 12       		.uleb128 0x12
 6416 0221 01       		.uleb128 0x1
ARM GAS  /tmp/ccKa46D2.s 			page 149


 6417 0222 40       		.uleb128 0x40
 6418 0223 06       		.uleb128 0x6
 6419 0224 01       		.uleb128 0x1
 6420 0225 13       		.uleb128 0x13
 6421 0226 00       		.byte	0
 6422 0227 00       		.byte	0
 6423 0228 2B       		.uleb128 0x2b
 6424 0229 34       		.uleb128 0x34
 6425 022a 00       		.byte	0
 6426 022b 03       		.uleb128 0x3
 6427 022c 08       		.uleb128 0x8
 6428 022d 3A       		.uleb128 0x3a
 6429 022e 0B       		.uleb128 0xb
 6430 022f 3B       		.uleb128 0x3b
 6431 0230 0B       		.uleb128 0xb
 6432 0231 49       		.uleb128 0x49
 6433 0232 13       		.uleb128 0x13
 6434 0233 02       		.uleb128 0x2
 6435 0234 0A       		.uleb128 0xa
 6436 0235 00       		.byte	0
 6437 0236 00       		.byte	0
 6438 0237 2C       		.uleb128 0x2c
 6439 0238 34       		.uleb128 0x34
 6440 0239 00       		.byte	0
 6441 023a 03       		.uleb128 0x3
 6442 023b 0E       		.uleb128 0xe
 6443 023c 49       		.uleb128 0x49
 6444 023d 13       		.uleb128 0x13
 6445 023e 34       		.uleb128 0x34
 6446 023f 0C       		.uleb128 0xc
 6447 0240 00       		.byte	0
 6448 0241 00       		.byte	0
 6449 0242 2D       		.uleb128 0x2d
 6450 0243 2E       		.uleb128 0x2e
 6451 0244 01       		.byte	0x1
 6452 0245 03       		.uleb128 0x3
 6453 0246 0E       		.uleb128 0xe
 6454 0247 3A       		.uleb128 0x3a
 6455 0248 0B       		.uleb128 0xb
 6456 0249 3B       		.uleb128 0x3b
 6457 024a 0B       		.uleb128 0xb
 6458 024b 27       		.uleb128 0x27
 6459 024c 0C       		.uleb128 0xc
 6460 024d 11       		.uleb128 0x11
 6461 024e 01       		.uleb128 0x1
 6462 024f 12       		.uleb128 0x12
 6463 0250 01       		.uleb128 0x1
 6464 0251 40       		.uleb128 0x40
 6465 0252 06       		.uleb128 0x6
 6466 0253 01       		.uleb128 0x1
 6467 0254 13       		.uleb128 0x13
 6468 0255 00       		.byte	0
 6469 0256 00       		.byte	0
 6470 0257 2E       		.uleb128 0x2e
 6471 0258 05       		.uleb128 0x5
 6472 0259 00       		.byte	0
 6473 025a 03       		.uleb128 0x3
ARM GAS  /tmp/ccKa46D2.s 			page 150


 6474 025b 0E       		.uleb128 0xe
 6475 025c 3A       		.uleb128 0x3a
 6476 025d 0B       		.uleb128 0xb
 6477 025e 3B       		.uleb128 0x3b
 6478 025f 0B       		.uleb128 0xb
 6479 0260 49       		.uleb128 0x49
 6480 0261 13       		.uleb128 0x13
 6481 0262 02       		.uleb128 0x2
 6482 0263 0A       		.uleb128 0xa
 6483 0264 00       		.byte	0
 6484 0265 00       		.byte	0
 6485 0266 2F       		.uleb128 0x2f
 6486 0267 05       		.uleb128 0x5
 6487 0268 00       		.byte	0
 6488 0269 03       		.uleb128 0x3
 6489 026a 08       		.uleb128 0x8
 6490 026b 3A       		.uleb128 0x3a
 6491 026c 0B       		.uleb128 0xb
 6492 026d 3B       		.uleb128 0x3b
 6493 026e 0B       		.uleb128 0xb
 6494 026f 49       		.uleb128 0x49
 6495 0270 13       		.uleb128 0x13
 6496 0271 02       		.uleb128 0x2
 6497 0272 0A       		.uleb128 0xa
 6498 0273 00       		.byte	0
 6499 0274 00       		.byte	0
 6500 0275 30       		.uleb128 0x30
 6501 0276 2E       		.uleb128 0x2e
 6502 0277 01       		.byte	0x1
 6503 0278 03       		.uleb128 0x3
 6504 0279 08       		.uleb128 0x8
 6505 027a 3A       		.uleb128 0x3a
 6506 027b 0B       		.uleb128 0xb
 6507 027c 3B       		.uleb128 0x3b
 6508 027d 0B       		.uleb128 0xb
 6509 027e 11       		.uleb128 0x11
 6510 027f 01       		.uleb128 0x1
 6511 0280 12       		.uleb128 0x12
 6512 0281 01       		.uleb128 0x1
 6513 0282 40       		.uleb128 0x40
 6514 0283 06       		.uleb128 0x6
 6515 0284 01       		.uleb128 0x1
 6516 0285 13       		.uleb128 0x13
 6517 0286 00       		.byte	0
 6518 0287 00       		.byte	0
 6519 0288 31       		.uleb128 0x31
 6520 0289 34       		.uleb128 0x34
 6521 028a 00       		.byte	0
 6522 028b 03       		.uleb128 0x3
 6523 028c 0E       		.uleb128 0xe
 6524 028d 3A       		.uleb128 0x3a
 6525 028e 0B       		.uleb128 0xb
 6526 028f 3B       		.uleb128 0x3b
 6527 0290 05       		.uleb128 0x5
 6528 0291 49       		.uleb128 0x49
 6529 0292 13       		.uleb128 0x13
 6530 0293 3F       		.uleb128 0x3f
ARM GAS  /tmp/ccKa46D2.s 			page 151


 6531 0294 0C       		.uleb128 0xc
 6532 0295 3C       		.uleb128 0x3c
 6533 0296 0C       		.uleb128 0xc
 6534 0297 00       		.byte	0
 6535 0298 00       		.byte	0
 6536 0299 32       		.uleb128 0x32
 6537 029a 34       		.uleb128 0x34
 6538 029b 00       		.byte	0
 6539 029c 03       		.uleb128 0x3
 6540 029d 0E       		.uleb128 0xe
 6541 029e 3A       		.uleb128 0x3a
 6542 029f 0B       		.uleb128 0xb
 6543 02a0 3B       		.uleb128 0x3b
 6544 02a1 0B       		.uleb128 0xb
 6545 02a2 49       		.uleb128 0x49
 6546 02a3 13       		.uleb128 0x13
 6547 02a4 3F       		.uleb128 0x3f
 6548 02a5 0C       		.uleb128 0xc
 6549 02a6 3C       		.uleb128 0x3c
 6550 02a7 0C       		.uleb128 0xc
 6551 02a8 00       		.byte	0
 6552 02a9 00       		.byte	0
 6553 02aa 33       		.uleb128 0x33
 6554 02ab 34       		.uleb128 0x34
 6555 02ac 00       		.byte	0
 6556 02ad 03       		.uleb128 0x3
 6557 02ae 0E       		.uleb128 0xe
 6558 02af 3A       		.uleb128 0x3a
 6559 02b0 0B       		.uleb128 0xb
 6560 02b1 3B       		.uleb128 0x3b
 6561 02b2 0B       		.uleb128 0xb
 6562 02b3 49       		.uleb128 0x49
 6563 02b4 13       		.uleb128 0x13
 6564 02b5 3F       		.uleb128 0x3f
 6565 02b6 0C       		.uleb128 0xc
 6566 02b7 02       		.uleb128 0x2
 6567 02b8 0A       		.uleb128 0xa
 6568 02b9 00       		.byte	0
 6569 02ba 00       		.byte	0
 6570 02bb 00       		.byte	0
 6571              		.section	.debug_loc,"",%progbits
 6572              	.Ldebug_loc0:
 6573              	.LLST0:
 6574 0000 00000000 		.4byte	.LFB14
 6575 0004 02000000 		.4byte	.LCFI0
 6576 0008 0200     		.2byte	0x2
 6577 000a 7D       		.byte	0x7d
 6578 000b 00       		.sleb128 0
 6579 000c 02000000 		.4byte	.LCFI0
 6580 0010 04000000 		.4byte	.LCFI1
 6581 0014 0200     		.2byte	0x2
 6582 0016 7D       		.byte	0x7d
 6583 0017 04       		.sleb128 4
 6584 0018 04000000 		.4byte	.LCFI1
 6585 001c 06000000 		.4byte	.LCFI2
 6586 0020 0200     		.2byte	0x2
 6587 0022 7D       		.byte	0x7d
ARM GAS  /tmp/ccKa46D2.s 			page 152


 6588 0023 10       		.sleb128 16
 6589 0024 06000000 		.4byte	.LCFI2
 6590 0028 36000000 		.4byte	.LFE14
 6591 002c 0200     		.2byte	0x2
 6592 002e 77       		.byte	0x77
 6593 002f 10       		.sleb128 16
 6594 0030 00000000 		.4byte	0
 6595 0034 00000000 		.4byte	0
 6596              	.LLST1:
 6597 0038 00000000 		.4byte	.LFB20
 6598 003c 02000000 		.4byte	.LCFI3
 6599 0040 0200     		.2byte	0x2
 6600 0042 7D       		.byte	0x7d
 6601 0043 00       		.sleb128 0
 6602 0044 02000000 		.4byte	.LCFI3
 6603 0048 04000000 		.4byte	.LCFI4
 6604 004c 0200     		.2byte	0x2
 6605 004e 7D       		.byte	0x7d
 6606 004f 04       		.sleb128 4
 6607 0050 04000000 		.4byte	.LCFI4
 6608 0054 06000000 		.4byte	.LCFI5
 6609 0058 0200     		.2byte	0x2
 6610 005a 7D       		.byte	0x7d
 6611 005b 10       		.sleb128 16
 6612 005c 06000000 		.4byte	.LCFI5
 6613 0060 5C000000 		.4byte	.LFE20
 6614 0064 0200     		.2byte	0x2
 6615 0066 77       		.byte	0x77
 6616 0067 10       		.sleb128 16
 6617 0068 00000000 		.4byte	0
 6618 006c 00000000 		.4byte	0
 6619              	.LLST2:
 6620 0070 00000000 		.4byte	.LFB35
 6621 0074 02000000 		.4byte	.LCFI6
 6622 0078 0200     		.2byte	0x2
 6623 007a 7D       		.byte	0x7d
 6624 007b 00       		.sleb128 0
 6625 007c 02000000 		.4byte	.LCFI6
 6626 0080 04000000 		.4byte	.LCFI7
 6627 0084 0200     		.2byte	0x2
 6628 0086 7D       		.byte	0x7d
 6629 0087 08       		.sleb128 8
 6630 0088 04000000 		.4byte	.LCFI7
 6631 008c 06000000 		.4byte	.LCFI8
 6632 0090 0200     		.2byte	0x2
 6633 0092 7D       		.byte	0x7d
 6634 0093 10       		.sleb128 16
 6635 0094 06000000 		.4byte	.LCFI8
 6636 0098 50020000 		.4byte	.LFE35
 6637 009c 0200     		.2byte	0x2
 6638 009e 77       		.byte	0x77
 6639 009f 10       		.sleb128 16
 6640 00a0 00000000 		.4byte	0
 6641 00a4 00000000 		.4byte	0
 6642              	.LLST3:
 6643 00a8 00000000 		.4byte	.LFB36
 6644 00ac 02000000 		.4byte	.LCFI9
ARM GAS  /tmp/ccKa46D2.s 			page 153


 6645 00b0 0200     		.2byte	0x2
 6646 00b2 7D       		.byte	0x7d
 6647 00b3 00       		.sleb128 0
 6648 00b4 02000000 		.4byte	.LCFI9
 6649 00b8 04000000 		.4byte	.LCFI10
 6650 00bc 0200     		.2byte	0x2
 6651 00be 7D       		.byte	0x7d
 6652 00bf 08       		.sleb128 8
 6653 00c0 04000000 		.4byte	.LCFI10
 6654 00c4 2C000000 		.4byte	.LFE36
 6655 00c8 0200     		.2byte	0x2
 6656 00ca 77       		.byte	0x77
 6657 00cb 08       		.sleb128 8
 6658 00cc 00000000 		.4byte	0
 6659 00d0 00000000 		.4byte	0
 6660              	.LLST4:
 6661 00d4 00000000 		.4byte	.LFB37
 6662 00d8 02000000 		.4byte	.LCFI11
 6663 00dc 0200     		.2byte	0x2
 6664 00de 7D       		.byte	0x7d
 6665 00df 00       		.sleb128 0
 6666 00e0 02000000 		.4byte	.LCFI11
 6667 00e4 04000000 		.4byte	.LCFI12
 6668 00e8 0200     		.2byte	0x2
 6669 00ea 7D       		.byte	0x7d
 6670 00eb 08       		.sleb128 8
 6671 00ec 04000000 		.4byte	.LCFI12
 6672 00f0 06000000 		.4byte	.LCFI13
 6673 00f4 0200     		.2byte	0x2
 6674 00f6 7D       		.byte	0x7d
 6675 00f7 10       		.sleb128 16
 6676 00f8 06000000 		.4byte	.LCFI13
 6677 00fc B0000000 		.4byte	.LFE37
 6678 0100 0200     		.2byte	0x2
 6679 0102 77       		.byte	0x77
 6680 0103 10       		.sleb128 16
 6681 0104 00000000 		.4byte	0
 6682 0108 00000000 		.4byte	0
 6683              	.LLST5:
 6684 010c 00000000 		.4byte	.LFB38
 6685 0110 02000000 		.4byte	.LCFI14
 6686 0114 0200     		.2byte	0x2
 6687 0116 7D       		.byte	0x7d
 6688 0117 00       		.sleb128 0
 6689 0118 02000000 		.4byte	.LCFI14
 6690 011c 04000000 		.4byte	.LCFI15
 6691 0120 0200     		.2byte	0x2
 6692 0122 7D       		.byte	0x7d
 6693 0123 0C       		.sleb128 12
 6694 0124 04000000 		.4byte	.LCFI15
 6695 0128 06000000 		.4byte	.LCFI16
 6696 012c 0300     		.2byte	0x3
 6697 012e 7D       		.byte	0x7d
 6698 012f F800     		.sleb128 120
 6699 0131 06000000 		.4byte	.LCFI16
 6700 0135 98020000 		.4byte	.LFE38
 6701 0139 0300     		.2byte	0x3
ARM GAS  /tmp/ccKa46D2.s 			page 154


 6702 013b 77       		.byte	0x77
 6703 013c E000     		.sleb128 96
 6704 013e 00000000 		.4byte	0
 6705 0142 00000000 		.4byte	0
 6706              	.LLST6:
 6707 0146 00000000 		.4byte	.LFB39
 6708 014a 02000000 		.4byte	.LCFI17
 6709 014e 0200     		.2byte	0x2
 6710 0150 7D       		.byte	0x7d
 6711 0151 00       		.sleb128 0
 6712 0152 02000000 		.4byte	.LCFI17
 6713 0156 04000000 		.4byte	.LCFI18
 6714 015a 0200     		.2byte	0x2
 6715 015c 7D       		.byte	0x7d
 6716 015d 0C       		.sleb128 12
 6717 015e 04000000 		.4byte	.LCFI18
 6718 0162 06000000 		.4byte	.LCFI19
 6719 0166 0200     		.2byte	0x2
 6720 0168 7D       		.byte	0x7d
 6721 0169 30       		.sleb128 48
 6722 016a 06000000 		.4byte	.LCFI19
 6723 016e 00010000 		.4byte	.LFE39
 6724 0172 0200     		.2byte	0x2
 6725 0174 77       		.byte	0x77
 6726 0175 30       		.sleb128 48
 6727 0176 00000000 		.4byte	0
 6728 017a 00000000 		.4byte	0
 6729              	.LLST7:
 6730 017e 00000000 		.4byte	.LFB40
 6731 0182 02000000 		.4byte	.LCFI20
 6732 0186 0200     		.2byte	0x2
 6733 0188 7D       		.byte	0x7d
 6734 0189 00       		.sleb128 0
 6735 018a 02000000 		.4byte	.LCFI20
 6736 018e 04000000 		.4byte	.LCFI21
 6737 0192 0200     		.2byte	0x2
 6738 0194 7D       		.byte	0x7d
 6739 0195 08       		.sleb128 8
 6740 0196 04000000 		.4byte	.LCFI21
 6741 019a 06000000 		.4byte	.LCFI22
 6742 019e 0200     		.2byte	0x2
 6743 01a0 7D       		.byte	0x7d
 6744 01a1 10       		.sleb128 16
 6745 01a2 06000000 		.4byte	.LCFI22
 6746 01a6 72010000 		.4byte	.LFE40
 6747 01aa 0200     		.2byte	0x2
 6748 01ac 77       		.byte	0x77
 6749 01ad 10       		.sleb128 16
 6750 01ae 00000000 		.4byte	0
 6751 01b2 00000000 		.4byte	0
 6752              	.LLST8:
 6753 01b6 00000000 		.4byte	.LFB41
 6754 01ba 02000000 		.4byte	.LCFI23
 6755 01be 0200     		.2byte	0x2
 6756 01c0 7D       		.byte	0x7d
 6757 01c1 00       		.sleb128 0
 6758 01c2 02000000 		.4byte	.LCFI23
ARM GAS  /tmp/ccKa46D2.s 			page 155


 6759 01c6 04000000 		.4byte	.LCFI24
 6760 01ca 0200     		.2byte	0x2
 6761 01cc 7D       		.byte	0x7d
 6762 01cd 0C       		.sleb128 12
 6763 01ce 04000000 		.4byte	.LCFI24
 6764 01d2 06000000 		.4byte	.LCFI25
 6765 01d6 0300     		.2byte	0x3
 6766 01d8 7D       		.byte	0x7d
 6767 01d9 D000     		.sleb128 80
 6768 01db 06000000 		.4byte	.LCFI25
 6769 01df C8030000 		.4byte	.LFE41
 6770 01e3 0300     		.2byte	0x3
 6771 01e5 77       		.byte	0x77
 6772 01e6 C800     		.sleb128 72
 6773 01e8 00000000 		.4byte	0
 6774 01ec 00000000 		.4byte	0
 6775              		.section	.debug_aranges,"",%progbits
 6776 0000 5C000000 		.4byte	0x5c
 6777 0004 0200     		.2byte	0x2
 6778 0006 00000000 		.4byte	.Ldebug_info0
 6779 000a 04       		.byte	0x4
 6780 000b 00       		.byte	0
 6781 000c 0000     		.2byte	0
 6782 000e 0000     		.2byte	0
 6783 0010 00000000 		.4byte	.LFB14
 6784 0014 36000000 		.4byte	.LFE14-.LFB14
 6785 0018 00000000 		.4byte	.LFB20
 6786 001c 5C000000 		.4byte	.LFE20-.LFB20
 6787 0020 00000000 		.4byte	.LFB35
 6788 0024 50020000 		.4byte	.LFE35-.LFB35
 6789 0028 00000000 		.4byte	.LFB36
 6790 002c 2C000000 		.4byte	.LFE36-.LFB36
 6791 0030 00000000 		.4byte	.LFB37
 6792 0034 B0000000 		.4byte	.LFE37-.LFB37
 6793 0038 00000000 		.4byte	.LFB38
 6794 003c 98020000 		.4byte	.LFE38-.LFB38
 6795 0040 00000000 		.4byte	.LFB39
 6796 0044 00010000 		.4byte	.LFE39-.LFB39
 6797 0048 00000000 		.4byte	.LFB40
 6798 004c 72010000 		.4byte	.LFE40-.LFB40
 6799 0050 00000000 		.4byte	.LFB41
 6800 0054 C8030000 		.4byte	.LFE41-.LFB41
 6801 0058 00000000 		.4byte	0
 6802 005c 00000000 		.4byte	0
 6803              		.section	.debug_ranges,"",%progbits
 6804              	.Ldebug_ranges0:
 6805 0000 00000000 		.4byte	.LFB14
 6806 0004 36000000 		.4byte	.LFE14
 6807 0008 00000000 		.4byte	.LFB20
 6808 000c 5C000000 		.4byte	.LFE20
 6809 0010 00000000 		.4byte	.LFB35
 6810 0014 50020000 		.4byte	.LFE35
 6811 0018 00000000 		.4byte	.LFB36
 6812 001c 2C000000 		.4byte	.LFE36
 6813 0020 00000000 		.4byte	.LFB37
 6814 0024 B0000000 		.4byte	.LFE37
 6815 0028 00000000 		.4byte	.LFB38
ARM GAS  /tmp/ccKa46D2.s 			page 156


 6816 002c 98020000 		.4byte	.LFE38
 6817 0030 00000000 		.4byte	.LFB39
 6818 0034 00010000 		.4byte	.LFE39
 6819 0038 00000000 		.4byte	.LFB40
 6820 003c 72010000 		.4byte	.LFE40
 6821 0040 00000000 		.4byte	.LFB41
 6822 0044 C8030000 		.4byte	.LFE41
 6823 0048 00000000 		.4byte	0
 6824 004c 00000000 		.4byte	0
 6825              		.section	.debug_line,"",%progbits
 6826              	.Ldebug_line0:
 6827 0000 6F030000 		.section	.debug_str,"MS",%progbits,1
 6827      02009B01 
 6827      00000201 
 6827      FB0E0D00 
 6827      01010101 
 6828              	.LASF162:
 6829 0000 52534552 		.ascii	"RSERVED1\000"
 6829      56454431 
 6829      00
 6830              	.LASF391:
 6831 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 6831      5F456E61 
 6831      626C6549 
 6831      525100
 6832              	.LASF148:
 6833 0018 5443325F 		.ascii	"TC2_IRQn\000"
 6833      4952516E 
 6833      00
 6834              	.LASF342:
 6835 0021 50574D5F 		.ascii	"PWM_RNPR\000"
 6835      524E5052 
 6835      00
 6836              	.LASF14:
 6837 002a 5F5F7661 		.ascii	"__value\000"
 6837      6C756500 
 6838              	.LASF66:
 6839 0032 5F5F7366 		.ascii	"__sf\000"
 6839      00
 6840              	.LASF398:
 6841 0037 64757479 		.ascii	"duty\000"
 6841      00
 6842              	.LASF75:
 6843 003c 5F726561 		.ascii	"_read\000"
 6843      6400
 6844              	.LASF171:
 6845 0042 4E564943 		.ascii	"NVIC_Type\000"
 6845      5F547970 
 6845      6500
 6846              	.LASF311:
 6847 004c 50574D5F 		.ascii	"PWM_IER1\000"
 6847      49455231 
 6847      00
 6848              	.LASF319:
 6849 0055 50574D5F 		.ascii	"PWM_IER2\000"
 6849      49455232 
 6849      00
ARM GAS  /tmp/ccKa46D2.s 			page 157


 6850              	.LASF76:
 6851 005e 5F777269 		.ascii	"_write\000"
 6851      746500
 6852              	.LASF116:
 6853 0065 696E7433 		.ascii	"int32_t\000"
 6853      325F7400 
 6854              	.LASF62:
 6855 006d 5F617363 		.ascii	"_asctime_buf\000"
 6855      74696D65 
 6855      5F627566 
 6855      00
 6856              	.LASF58:
 6857 007a 5F637674 		.ascii	"_cvtlen\000"
 6857      6C656E00 
 6858              	.LASF337:
 6859 0082 50574D5F 		.ascii	"PWM_WPSR\000"
 6859      57505352 
 6859      00
 6860              	.LASF261:
 6861 008b 50494F5F 		.ascii	"PIO_AIMMR\000"
 6861      41494D4D 
 6861      5200
 6862              	.LASF201:
 6863 0095 4144435F 		.ascii	"ADC_EMR\000"
 6863      454D5200 
 6864              	.LASF198:
 6865 009d 4144435F 		.ascii	"ADC_ISR\000"
 6865      49535200 
 6866              	.LASF412:
 6867 00a5 5F737461 		.ascii	"_state\000"
 6867      746500
 6868              	.LASF24:
 6869 00ac 5F5F746D 		.ascii	"__tm\000"
 6869      00
 6870              	.LASF112:
 6871 00b1 5F776373 		.ascii	"_wcsrtombs_state\000"
 6871      72746F6D 
 6871      62735F73 
 6871      74617465 
 6871      00
 6872              	.LASF80:
 6873 00c2 5F6E6275 		.ascii	"_nbuf\000"
 6873      6600
 6874              	.LASF25:
 6875 00c8 5F5F746D 		.ascii	"__tm_sec\000"
 6875      5F736563 
 6875      00
 6876              	.LASF106:
 6877 00d1 5F6C3634 		.ascii	"_l64a_buf\000"
 6877      615F6275 
 6877      6600
 6878              	.LASF174:
 6879 00db 56544F52 		.ascii	"VTOR\000"
 6879      00
 6880              	.LASF341:
 6881 00e0 50574D5F 		.ascii	"PWM_TCR\000"
 6881      54435200 
ARM GAS  /tmp/ccKa46D2.s 			page 158


 6882              	.LASF405:
 6883 00e8 73746174 		.ascii	"state\000"
 6883      6500
 6884              	.LASF83:
 6885 00ee 5F6C6F63 		.ascii	"_lock\000"
 6885      6B00
 6886              	.LASF281:
 6887 00f4 50494F5F 		.ascii	"PIO_PCISR\000"
 6887      50434953 
 6887      5200
 6888              	.LASF331:
 6889 00fe 50574D5F 		.ascii	"PWM_FCR\000"
 6889      46435200 
 6890              	.LASF369:
 6891 0106 54435F46 		.ascii	"TC_FMR\000"
 6891      4D5200
 6892              	.LASF206:
 6893 010d 52657365 		.ascii	"Reserved3\000"
 6893      72766564 
 6893      3300
 6894              	.LASF254:
 6895 0117 52657365 		.ascii	"Reserved7\000"
 6895      72766564 
 6895      3700
 6896              	.LASF376:
 6897 0121 74797065 		.ascii	"type\000"
 6897      00
 6898              	.LASF93:
 6899 0126 5F6D756C 		.ascii	"_mult\000"
 6899      7400
 6900              	.LASF212:
 6901 012c 4144435F 		.ascii	"ADC_RPR\000"
 6901      52505200 
 6902              	.LASF127:
 6903 0134 52535443 		.ascii	"RSTC_IRQn\000"
 6903      5F495251 
 6903      6E00
 6904              	.LASF413:
 6905 013e 6C6F6F70 		.ascii	"loop\000"
 6905      00
 6906              	.LASF216:
 6907 0143 4144435F 		.ascii	"ADC_RNPR\000"
 6907      524E5052 
 6907      00
 6908              	.LASF165:
 6909 014c 49435052 		.ascii	"ICPR\000"
 6909      00
 6910              	.LASF285:
 6911 0151 50494F5F 		.ascii	"PIO_TPR\000"
 6911      54505200 
 6912              	.LASF367:
 6913 0159 54435F51 		.ascii	"TC_QIMR\000"
 6913      494D5200 
 6914              	.LASF218:
 6915 0161 4144435F 		.ascii	"ADC_TNPR\000"
 6915      544E5052 
 6915      00
ARM GAS  /tmp/ccKa46D2.s 			page 159


 6916              	.LASF250:
 6917 016a 50494F5F 		.ascii	"PIO_SCDR\000"
 6917      53434452 
 6917      00
 6918              	.LASF249:
 6919 0173 50494F5F 		.ascii	"PIO_IFSCSR\000"
 6919      49465343 
 6919      535200
 6920              	.LASF11:
 6921 017e 5F5F7763 		.ascii	"__wch\000"
 6921      6800
 6922              	.LASF362:
 6923 0184 54435F43 		.ascii	"TC_CHANNEL\000"
 6923      48414E4E 
 6923      454C00
 6924              	.LASF210:
 6925 018f 4144435F 		.ascii	"ADC_WPSR\000"
 6925      57505352 
 6925      00
 6926              	.LASF71:
 6927 0198 5F66696C 		.ascii	"_file\000"
 6927      6500
 6928              	.LASF34:
 6929 019e 5F6F6E5F 		.ascii	"_on_exit_args\000"
 6929      65786974 
 6929      5F617267 
 6929      7300
 6930              	.LASF175:
 6931 01ac 41495243 		.ascii	"AIRCR\000"
 6931      5200
 6932              	.LASF388:
 6933 01b2 74726973 		.ascii	"tristate\000"
 6933      74617465 
 6933      00
 6934              	.LASF416:
 6935 01bb 72656C65 		.ascii	"releasetime\000"
 6935      61736574 
 6935      696D6500 
 6936              	.LASF155:
 6937 01c7 43524343 		.ascii	"CRCCU_IRQn\000"
 6937      555F4952 
 6937      516E00
 6938              	.LASF251:
 6939 01d2 50494F5F 		.ascii	"PIO_PPDDR\000"
 6939      50504444 
 6939      5200
 6940              	.LASF380:
 6941 01dc 52414D50 		.ascii	"RAMP\000"
 6941      00
 6942              	.LASF350:
 6943 01e1 54435F43 		.ascii	"TC_CCR\000"
 6943      435200
 6944              	.LASF108:
 6945 01e8 5F6D6272 		.ascii	"_mbrlen_state\000"
 6945      6C656E5F 
 6945      73746174 
 6945      6500
ARM GAS  /tmp/ccKa46D2.s 			page 160


 6946              	.LASF7:
 6947 01f6 6C6F6E67 		.ascii	"long int\000"
 6947      20696E74 
 6947      00
 6948              	.LASF308:
 6949 01ff 50574D5F 		.ascii	"PWM_ENA\000"
 6949      454E4100 
 6950              	.LASF410:
 6951 0207 5F696D70 		.ascii	"_impure_ptr\000"
 6951      7572655F 
 6951      70747200 
 6952              	.LASF98:
 6953 0213 5F726573 		.ascii	"_result_k\000"
 6953      756C745F 
 6953      6B00
 6954              	.LASF298:
 6955 021d 50574D5F 		.ascii	"PWM_CCNT\000"
 6955      43434E54 
 6955      00
 6956              	.LASF45:
 6957 0226 5F73697A 		.ascii	"_size\000"
 6957      6500
 6958              	.LASF172:
 6959 022c 43505549 		.ascii	"CPUID\000"
 6959      4400
 6960              	.LASF403:
 6961 0232 76616C75 		.ascii	"value\000"
 6961      6500
 6962              	.LASF255:
 6963 0238 50494F5F 		.ascii	"PIO_OWER\000"
 6963      4F574552 
 6963      00
 6964              	.LASF61:
 6965 0241 5F6C6F63 		.ascii	"_localtime_buf\000"
 6965      616C7469 
 6965      6D655F62 
 6965      756600
 6966              	.LASF230:
 6967 0250 50494F5F 		.ascii	"PIO_IFSR\000"
 6967      49465352 
 6967      00
 6968              	.LASF214:
 6969 0259 4144435F 		.ascii	"ADC_TPR\000"
 6969      54505200 
 6970              	.LASF395:
 6971 0261 6D61696E 		.ascii	"main\000"
 6971      00
 6972              	.LASF229:
 6973 0266 50494F5F 		.ascii	"PIO_IFDR\000"
 6973      49464452 
 6973      00
 6974              	.LASF393:
 6975 026f 4952516E 		.ascii	"IRQn\000"
 6975      00
 6976              	.LASF252:
 6977 0274 50494F5F 		.ascii	"PIO_PPDER\000"
 6977      50504445 
ARM GAS  /tmp/ccKa46D2.s 			page 161


 6977      5200
 6978              	.LASF263:
 6979 027e 50494F5F 		.ascii	"PIO_ESR\000"
 6979      45535200 
 6980              	.LASF151:
 6981 0286 5443355F 		.ascii	"TC5_IRQn\000"
 6981      4952516E 
 6981      00
 6982              	.LASF29:
 6983 028f 5F5F746D 		.ascii	"__tm_mon\000"
 6983      5F6D6F6E 
 6983      00
 6984              	.LASF392:
 6985 0298 4E564943 		.ascii	"NVIC_SetPriority\000"
 6985      5F536574 
 6985      5072696F 
 6985      72697479 
 6985      00
 6986              	.LASF227:
 6987 02a9 50494F5F 		.ascii	"PIO_OSR\000"
 6987      4F535200 
 6988              	.LASF101:
 6989 02b1 5F6D6973 		.ascii	"_misc_reent\000"
 6989      635F7265 
 6989      656E7400 
 6990              	.LASF125:
 6991 02bd 53797354 		.ascii	"SysTick_IRQn\000"
 6991      69636B5F 
 6991      4952516E 
 6991      00
 6992              	.LASF54:
 6993 02ca 5F637572 		.ascii	"_current_category\000"
 6993      72656E74 
 6993      5F636174 
 6993      65676F72 
 6993      7900
 6994              	.LASF173:
 6995 02dc 49435352 		.ascii	"ICSR\000"
 6995      00
 6996              	.LASF0:
 6997 02e1 7369676E 		.ascii	"signed char\000"
 6997      65642063 
 6997      68617200 
 6998              	.LASF113:
 6999 02ed 75696E74 		.ascii	"uint8_t\000"
 6999      385F7400 
 7000              	.LASF324:
 7001 02f5 50574D5F 		.ascii	"PWM_OS\000"
 7001      4F5300
 7002              	.LASF397:
 7003 02fc 74696D65 		.ascii	"timestamp\000"
 7003      7374616D 
 7003      7000
 7004              	.LASF361:
 7005 0306 54634368 		.ascii	"TcChannel\000"
 7005      616E6E65 
 7005      6C00
ARM GAS  /tmp/ccKa46D2.s 			page 162


 7006              	.LASF335:
 7007 0310 50574D5F 		.ascii	"PWM_SMMR\000"
 7007      534D4D52 
 7007      00
 7008              	.LASF245:
 7009 0319 50494F5F 		.ascii	"PIO_ABCDSR\000"
 7009      41424344 
 7009      535200
 7010              	.LASF287:
 7011 0324 50494F5F 		.ascii	"PIO_RNPR\000"
 7011      524E5052 
 7011      00
 7012              	.LASF160:
 7013 032d 52455345 		.ascii	"RESERVED0\000"
 7013      52564544 
 7013      3000
 7014              	.LASF1:
 7015 0337 756E7369 		.ascii	"unsigned char\000"
 7015      676E6564 
 7015      20636861 
 7015      7200
 7016              	.LASF166:
 7017 0345 52455345 		.ascii	"RESERVED3\000"
 7017      52564544 
 7017      3300
 7018              	.LASF168:
 7019 034f 52455345 		.ascii	"RESERVED4\000"
 7019      52564544 
 7019      3400
 7020              	.LASF169:
 7021 0359 52455345 		.ascii	"RESERVED5\000"
 7021      52564544 
 7021      3500
 7022              	.LASF333:
 7023 0363 50574D5F 		.ascii	"PWM_FPE\000"
 7023      46504500 
 7024              	.LASF242:
 7025 036b 50494F5F 		.ascii	"PIO_PUDR\000"
 7025      50554452 
 7025      00
 7026              	.LASF289:
 7027 0374 50494F5F 		.ascii	"PIO_TNPR\000"
 7027      544E5052 
 7027      00
 7028              	.LASF167:
 7029 037d 49414252 		.ascii	"IABR\000"
 7029      00
 7030              	.LASF383:
 7031 0382 6374726C 		.ascii	"ctrl\000"
 7031      00
 7032              	.LASF422:
 7033 0387 5F5F4655 		.ascii	"__FUNCTION__\000"
 7033      4E435449 
 7033      4F4E5F5F 
 7033      00
 7034              	.LASF46:
 7035 0394 5F726565 		.ascii	"_reent\000"
ARM GAS  /tmp/ccKa46D2.s 			page 163


 7035      6E7400
 7036              	.LASF332:
 7037 039b 50574D5F 		.ascii	"PWM_FPV\000"
 7037      46505600 
 7038              	.LASF371:
 7039 03a3 5744545F 		.ascii	"WDT_CR\000"
 7039      435200
 7040              	.LASF273:
 7041 03aa 50494F5F 		.ascii	"PIO_WPSR\000"
 7041      57505352 
 7041      00
 7042              	.LASF164:
 7043 03b3 52455345 		.ascii	"RESERVED2\000"
 7043      52564544 
 7043      3200
 7044              	.LASF121:
 7045 03bd 55736167 		.ascii	"UsageFault_IRQn\000"
 7045      65466175 
 7045      6C745F49 
 7045      52516E00 
 7046              	.LASF354:
 7047 03cd 54435F52 		.ascii	"TC_RA\000"
 7047      4100
 7048              	.LASF355:
 7049 03d3 54435F52 		.ascii	"TC_RB\000"
 7049      4200
 7050              	.LASF356:
 7051 03d9 54435F52 		.ascii	"TC_RC\000"
 7051      4300
 7052              	.LASF86:
 7053 03df 63686172 		.ascii	"char\000"
 7053      00
 7054              	.LASF41:
 7055 03e4 5F666E73 		.ascii	"_fns\000"
 7055      00
 7056              	.LASF284:
 7057 03e9 50494F5F 		.ascii	"PIO_RCR\000"
 7057      52435200 
 7058              	.LASF185:
 7059 03f1 5343425F 		.ascii	"SCB_Type\000"
 7059      54797065 
 7059      00
 7060              	.LASF364:
 7061 03fa 54435F42 		.ascii	"TC_BMR\000"
 7061      4D5200
 7062              	.LASF78:
 7063 0401 5F636C6F 		.ascii	"_close\000"
 7063      736500
 7064              	.LASF179:
 7065 0408 44465352 		.ascii	"DFSR\000"
 7065      00
 7066              	.LASF135:
 7067 040d 534D435F 		.ascii	"SMC_IRQn\000"
 7067      4952516E 
 7067      00
 7068              	.LASF266:
 7069 0416 52657365 		.ascii	"Reserved10\000"
ARM GAS  /tmp/ccKa46D2.s 			page 164


 7069      72766564 
 7069      313000
 7070              	.LASF270:
 7071 0421 52657365 		.ascii	"Reserved11\000"
 7071      72766564 
 7071      313100
 7072              	.LASF274:
 7073 042c 52657365 		.ascii	"Reserved12\000"
 7073      72766564 
 7073      313200
 7074              	.LASF276:
 7075 0437 52657365 		.ascii	"Reserved13\000"
 7075      72766564 
 7075      313300
 7076              	.LASF344:
 7077 0442 50574D5F 		.ascii	"PWM_TNPR\000"
 7077      544E5052 
 7077      00
 7078              	.LASF240:
 7079 044b 50494F5F 		.ascii	"PIO_MDDR\000"
 7079      4D444452 
 7079      00
 7080              	.LASF323:
 7081 0454 50574D5F 		.ascii	"PWM_OOV\000"
 7081      4F4F5600 
 7082              	.LASF368:
 7083 045c 54435F51 		.ascii	"TC_QISR\000"
 7083      49535200 
 7084              	.LASF301:
 7085 0464 50776D43 		.ascii	"PwmCh_num\000"
 7085      685F6E75 
 7085      6D00
 7086              	.LASF382:
 7087 046e 6374726C 		.ascii	"ctrlmode_t\000"
 7087      6D6F6465 
 7087      5F7400
 7088              	.LASF48:
 7089 0479 5F737464 		.ascii	"_stdin\000"
 7089      696E00
 7090              	.LASF234:
 7091 0480 50494F5F 		.ascii	"PIO_PDSR\000"
 7091      50445352 
 7091      00
 7092              	.LASF385:
 7093 0489 72536C6F 		.ascii	"rSlope\000"
 7093      706500
 7094              	.LASF415:
 7095 0490 72747269 		.ascii	"rtrip\000"
 7095      7000
 7096              	.LASF178:
 7097 0496 48465352 		.ascii	"HFSR\000"
 7097      00
 7098              	.LASF269:
 7099 049b 50494F5F 		.ascii	"PIO_FRLHSR\000"
 7099      46524C48 
 7099      535200
 7100              	.LASF318:
ARM GAS  /tmp/ccKa46D2.s 			page 165


 7101 04a6 50574D5F 		.ascii	"PWM_SCUPUPD\000"
 7101      53435550 
 7101      55504400 
 7102              	.LASF357:
 7103 04b2 54435F53 		.ascii	"TC_SR\000"
 7103      5200
 7104              	.LASF271:
 7105 04b8 50494F5F 		.ascii	"PIO_LOCKSR\000"
 7105      4C4F434B 
 7105      535200
 7106              	.LASF347:
 7107 04c3 50574D5F 		.ascii	"PWM_PTSR\000"
 7107      50545352 
 7107      00
 7108              	.LASF267:
 7109 04cc 50494F5F 		.ascii	"PIO_FELLSR\000"
 7109      46454C4C 
 7109      535200
 7110              	.LASF313:
 7111 04d7 50574D5F 		.ascii	"PWM_IMR1\000"
 7111      494D5231 
 7111      00
 7112              	.LASF321:
 7113 04e0 50574D5F 		.ascii	"PWM_IMR2\000"
 7113      494D5232 
 7113      00
 7114              	.LASF154:
 7115 04e9 50574D5F 		.ascii	"PWM_IRQn\000"
 7115      4952516E 
 7115      00
 7116              	.LASF239:
 7117 04f2 50494F5F 		.ascii	"PIO_MDER\000"
 7117      4D444552 
 7117      00
 7118              	.LASF163:
 7119 04fb 49535052 		.ascii	"ISPR\000"
 7119      00
 7120              	.LASF223:
 7121 0500 50494F5F 		.ascii	"PIO_PDR\000"
 7121      50445200 
 7122              	.LASF340:
 7123 0508 50574D5F 		.ascii	"PWM_TPR\000"
 7123      54505200 
 7124              	.LASF390:
 7125 0510 696E7075 		.ascii	"input\000"
 7125      7400
 7126              	.LASF213:
 7127 0516 4144435F 		.ascii	"ADC_RCR\000"
 7127      52435200 
 7128              	.LASF310:
 7129 051e 50574D5F 		.ascii	"PWM_SR\000"
 7129      535200
 7130              	.LASF176:
 7131 0525 53484353 		.ascii	"SHCSR\000"
 7131      5200
 7132              	.LASF205:
 7133 052b 4144435F 		.ascii	"ADC_CDR\000"
ARM GAS  /tmp/ccKa46D2.s 			page 166


 7133      43445200 
 7134              	.LASF170:
 7135 0533 53544952 		.ascii	"STIR\000"
 7135      00
 7136              	.LASF265:
 7137 0538 50494F5F 		.ascii	"PIO_ELSR\000"
 7137      454C5352 
 7137      00
 7138              	.LASF156:
 7139 0541 4143435F 		.ascii	"ACC_IRQn\000"
 7139      4952516E 
 7139      00
 7140              	.LASF74:
 7141 054a 5F636F6F 		.ascii	"_cookie\000"
 7141      6B696500 
 7142              	.LASF22:
 7143 0552 5F776473 		.ascii	"_wds\000"
 7143      00
 7144              	.LASF131:
 7145 0557 504D435F 		.ascii	"PMC_IRQn\000"
 7145      4952516E 
 7145      00
 7146              	.LASF132:
 7147 0560 4546435F 		.ascii	"EFC_IRQn\000"
 7147      4952516E 
 7147      00
 7148              	.LASF63:
 7149 0569 5F736967 		.ascii	"_sig_func\000"
 7149      5F66756E 
 7149      6300
 7150              	.LASF82:
 7151 0573 5F6F6666 		.ascii	"_offset\000"
 7151      73657400 
 7152              	.LASF59:
 7153 057b 5F637674 		.ascii	"_cvtbuf\000"
 7153      62756600 
 7154              	.LASF126:
 7155 0583 53555043 		.ascii	"SUPC_IRQn\000"
 7155      5F495251 
 7155      6E00
 7156              	.LASF359:
 7157 058d 54435F49 		.ascii	"TC_IDR\000"
 7157      445200
 7158              	.LASF147:
 7159 0594 5443315F 		.ascii	"TC1_IRQn\000"
 7159      4952516E 
 7159      00
 7160              	.LASF138:
 7161 059d 50494F43 		.ascii	"PIOC_IRQn\000"
 7161      5F495251 
 7161      6E00
 7162              	.LASF224:
 7163 05a7 50494F5F 		.ascii	"PIO_PSR\000"
 7163      50535200 
 7164              	.LASF396:
 7165 05af 4144435F 		.ascii	"ADC_IrqHandler\000"
 7165      49727148 
ARM GAS  /tmp/ccKa46D2.s 			page 167


 7165      616E646C 
 7165      657200
 7166              	.LASF221:
 7167 05be 4144435F 		.ascii	"ADC_PTSR\000"
 7167      50545352 
 7167      00
 7168              	.LASF129:
 7169 05c7 5254545F 		.ascii	"RTT_IRQn\000"
 7169      4952516E 
 7169      00
 7170              	.LASF243:
 7171 05d0 50494F5F 		.ascii	"PIO_PUER\000"
 7171      50554552 
 7171      00
 7172              	.LASF157:
 7173 05d9 5544505F 		.ascii	"UDP_IRQn\000"
 7173      4952516E 
 7173      00
 7174              	.LASF153:
 7175 05e2 44414343 		.ascii	"DACC_IRQn\000"
 7175      5F495251 
 7175      6E00
 7176              	.LASF118:
 7177 05ec 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 7177      61736B61 
 7177      626C6549 
 7177      6E745F49 
 7177      52516E00 
 7178              	.LASF329:
 7179 0600 50574D5F 		.ascii	"PWM_FMR\000"
 7179      464D5200 
 7180              	.LASF326:
 7181 0608 50574D5F 		.ascii	"PWM_OSC\000"
 7181      4F534300 
 7182              	.LASF192:
 7183 0610 4144435F 		.ascii	"ADC_CHSR\000"
 7183      43485352 
 7183      00
 7184              	.LASF99:
 7185 0619 5F703573 		.ascii	"_p5s\000"
 7185      00
 7186              	.LASF18:
 7187 061e 6C6F6E67 		.ascii	"long unsigned int\000"
 7187      20756E73 
 7187      69676E65 
 7187      6420696E 
 7187      7400
 7188              	.LASF325:
 7189 0630 50574D5F 		.ascii	"PWM_OSS\000"
 7189      4F535300 
 7190              	.LASF303:
 7191 0638 50574D5F 		.ascii	"PWM_CMPxVUPD\000"
 7191      434D5078 
 7191      56555044 
 7191      00
 7192              	.LASF119:
 7193 0645 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
ARM GAS  /tmp/ccKa46D2.s 			page 168


 7193      72794D61 
 7193      6E616765 
 7193      6D656E74 
 7193      5F495251 
 7194              	.LASF358:
 7195 065b 54435F49 		.ascii	"TC_IER\000"
 7195      455200
 7196              	.LASF69:
 7197 0662 5F5F7346 		.ascii	"__sFILE\000"
 7197      494C4500 
 7198              	.LASF53:
 7199 066a 5F5F7364 		.ascii	"__sdidinit\000"
 7199      6964696E 
 7199      697400
 7200              	.LASF85:
 7201 0675 5F666C61 		.ascii	"_flags2\000"
 7201      67733200 
 7202              	.LASF345:
 7203 067d 50574D5F 		.ascii	"PWM_TNCR\000"
 7203      544E4352 
 7203      00
 7204              	.LASF158:
 7205 0686 4952516E 		.ascii	"IRQn_Type\000"
 7205      5F547970 
 7205      6500
 7206              	.LASF409:
 7207 0690 6C696E65 		.ascii	"line\000"
 7207      00
 7208              	.LASF8:
 7209 0695 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 7209      4B5F5245 
 7209      43555253 
 7209      4956455F 
 7209      5400
 7210              	.LASF47:
 7211 06a7 5F657272 		.ascii	"_errno\000"
 7211      6E6F00
 7212              	.LASF203:
 7213 06ae 4144435F 		.ascii	"ADC_CGR\000"
 7213      43475200 
 7214              	.LASF402:
 7215 06b6 77726974 		.ascii	"write_output\000"
 7215      655F6F75 
 7215      74707574 
 7215      00
 7216              	.LASF68:
 7217 06c3 5F736967 		.ascii	"_signal_buf\000"
 7217      6E616C5F 
 7217      62756600 
 7218              	.LASF389:
 7219 06cf 74726970 		.ascii	"trip\000"
 7219      00
 7220              	.LASF232:
 7221 06d4 50494F5F 		.ascii	"PIO_CODR\000"
 7221      434F4452 
 7221      00
 7222              	.LASF187:
ARM GAS  /tmp/ccKa46D2.s 			page 169


 7223 06dd 4144435F 		.ascii	"ADC_MR\000"
 7223      4D5200
 7224              	.LASF194:
 7225 06e4 4144435F 		.ascii	"ADC_LCDR\000"
 7225      4C434452 
 7225      00
 7226              	.LASF378:
 7227 06ed 6374726C 		.ascii	"ctrlio_t\000"
 7227      696F5F74 
 7227      00
 7228              	.LASF130:
 7229 06f6 5744545F 		.ascii	"WDT_IRQn\000"
 7229      4952516E 
 7229      00
 7230              	.LASF407:
 7231 06ff 61726763 		.ascii	"argc\000"
 7231      00
 7232              	.LASF401:
 7233 0704 70696E73 		.ascii	"pins\000"
 7233      00
 7234              	.LASF23:
 7235 0709 5F426967 		.ascii	"_Bigint\000"
 7235      696E7400 
 7236              	.LASF317:
 7237 0711 50574D5F 		.ascii	"PWM_SCUP\000"
 7237      53435550 
 7237      00
 7238              	.LASF20:
 7239 071a 5F6D6178 		.ascii	"_maxwds\000"
 7239      77647300 
 7240              	.LASF408:
 7241 0722 61726776 		.ascii	"argv\000"
 7241      00
 7242              	.LASF56:
 7243 0727 5F5F636C 		.ascii	"__cleanup\000"
 7243      65616E75 
 7243      7000
 7244              	.LASF120:
 7245 0731 42757346 		.ascii	"BusFault_IRQn\000"
 7245      61756C74 
 7245      5F495251 
 7245      6E00
 7246              	.LASF351:
 7247 073f 54435F43 		.ascii	"TC_CMR\000"
 7247      4D5200
 7248              	.LASF64:
 7249 0746 5F617465 		.ascii	"_atexit0\000"
 7249      78697430 
 7249      00
 7250              	.LASF236:
 7251 074f 50494F5F 		.ascii	"PIO_IDR\000"
 7251      49445200 
 7252              	.LASF52:
 7253 0757 5F656D65 		.ascii	"_emergency\000"
 7253      7267656E 
 7253      637900
 7254              	.LASF5:
ARM GAS  /tmp/ccKa46D2.s 			page 170


 7255 0762 6C6F6E67 		.ascii	"long long int\000"
 7255      206C6F6E 
 7255      6720696E 
 7255      7400
 7256              	.LASF339:
 7257 0770 50574D5F 		.ascii	"PWM_RCR\000"
 7257      52435200 
 7258              	.LASF42:
 7259 0778 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 7259      65786974 
 7259      5F617267 
 7259      735F7074 
 7259      7200
 7260              	.LASF312:
 7261 078a 50574D5F 		.ascii	"PWM_IDR1\000"
 7261      49445231 
 7261      00
 7262              	.LASF320:
 7263 0793 50574D5F 		.ascii	"PWM_IDR2\000"
 7263      49445232 
 7263      00
 7264              	.LASF295:
 7265 079c 50574D5F 		.ascii	"PWM_CDTYUPD\000"
 7265      43445459 
 7265      55504400 
 7266              	.LASF89:
 7267 07a8 5F6E696F 		.ascii	"_niobs\000"
 7267      627300
 7268              	.LASF143:
 7269 07af 54574931 		.ascii	"TWI1_IRQn\000"
 7269      5F495251 
 7269      6E00
 7270              	.LASF65:
 7271 07b9 5F5F7367 		.ascii	"__sglue\000"
 7271      6C756500 
 7272              	.LASF336:
 7273 07c1 50574D5F 		.ascii	"PWM_WPCR\000"
 7273      57504352 
 7273      00
 7274              	.LASF349:
 7275 07ca 50574D5F 		.ascii	"PWM_CH_NUM\000"
 7275      43485F4E 
 7275      554D00
 7276              	.LASF419:
 7277 07d5 6D61696E 		.ascii	"main.c\000"
 7277      2E6300
 7278              	.LASF122:
 7279 07dc 53564361 		.ascii	"SVCall_IRQn\000"
 7279      6C6C5F49 
 7279      52516E00 
 7280              	.LASF57:
 7281 07e8 5F67616D 		.ascii	"_gamma_signgam\000"
 7281      6D615F73 
 7281      69676E67 
 7281      616D00
 7282              	.LASF292:
 7283 07f7 50494F5F 		.ascii	"PIO_PTSR\000"
ARM GAS  /tmp/ccKa46D2.s 			page 171


 7283      50545352 
 7283      00
 7284              	.LASF280:
 7285 0800 50494F5F 		.ascii	"PIO_PCIMR\000"
 7285      5043494D 
 7285      5200
 7286              	.LASF235:
 7287 080a 50494F5F 		.ascii	"PIO_IER\000"
 7287      49455200 
 7288              	.LASF322:
 7289 0812 50574D5F 		.ascii	"PWM_ISR2\000"
 7289      49535232 
 7289      00
 7290              	.LASF375:
 7291 081b 6D61736B 		.ascii	"mask\000"
 7291      00
 7292              	.LASF55:
 7293 0820 5F637572 		.ascii	"_current_locale\000"
 7293      72656E74 
 7293      5F6C6F63 
 7293      616C6500 
 7294              	.LASF100:
 7295 0830 5F667265 		.ascii	"_freelist\000"
 7295      656C6973 
 7295      7400
 7296              	.LASF282:
 7297 083a 50494F5F 		.ascii	"PIO_PCRHR\000"
 7297      50435248 
 7297      5200
 7298              	.LASF90:
 7299 0844 5F696F62 		.ascii	"_iobs\000"
 7299      7300
 7300              	.LASF88:
 7301 084a 5F676C75 		.ascii	"_glue\000"
 7301      6500
 7302              	.LASF411:
 7303 0850 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7303      52784275 
 7303      66666572 
 7303      00
 7304              	.LASF21:
 7305 085d 5F736967 		.ascii	"_sign\000"
 7305      6E00
 7306              	.LASF231:
 7307 0863 50494F5F 		.ascii	"PIO_SODR\000"
 7307      534F4452 
 7307      00
 7308              	.LASF248:
 7309 086c 50494F5F 		.ascii	"PIO_IFSCER\000"
 7309      49465343 
 7309      455200
 7310              	.LASF386:
 7311 0877 5F646478 		.ascii	"_ddx\000"
 7311      00
 7312              	.LASF381:
 7313 087c 53544F50 		.ascii	"STOP\000"
 7313      00
ARM GAS  /tmp/ccKa46D2.s 			page 172


 7314              	.LASF196:
 7315 0881 4144435F 		.ascii	"ADC_IDR\000"
 7315      49445200 
 7316              	.LASF294:
 7317 0889 50574D5F 		.ascii	"PWM_CDTY\000"
 7317      43445459 
 7317      00
 7318              	.LASF4:
 7319 0892 756E7369 		.ascii	"unsigned int\000"
 7319      676E6564 
 7319      20696E74 
 7319      00
 7320              	.LASF150:
 7321 089f 5443345F 		.ascii	"TC4_IRQn\000"
 7321      4952516E 
 7321      00
 7322              	.LASF142:
 7323 08a8 54574930 		.ascii	"TWI0_IRQn\000"
 7323      5F495251 
 7323      6E00
 7324              	.LASF372:
 7325 08b2 5744545F 		.ascii	"WDT_MR\000"
 7325      4D5200
 7326              	.LASF111:
 7327 08b9 5F776372 		.ascii	"_wcrtomb_state\000"
 7327      746F6D62 
 7327      5F737461 
 7327      746500
 7328              	.LASF279:
 7329 08c8 50494F5F 		.ascii	"PIO_PCIDR\000"
 7329      50434944 
 7329      5200
 7330              	.LASF28:
 7331 08d2 5F5F746D 		.ascii	"__tm_mday\000"
 7331      5F6D6461 
 7331      7900
 7332              	.LASF195:
 7333 08dc 4144435F 		.ascii	"ADC_IER\000"
 7333      49455200 
 7334              	.LASF264:
 7335 08e4 50494F5F 		.ascii	"PIO_LSR\000"
 7335      4C535200 
 7336              	.LASF79:
 7337 08ec 5F756275 		.ascii	"_ubuf\000"
 7337      6600
 7338              	.LASF328:
 7339 08f2 50574D5F 		.ascii	"PWM_OSCUPD\000"
 7339      4F534355 
 7339      504400
 7340              	.LASF50:
 7341 08fd 5F737464 		.ascii	"_stderr\000"
 7341      65727200 
 7342              	.LASF104:
 7343 0905 5F776374 		.ascii	"_wctomb_state\000"
 7343      6F6D625F 
 7343      73746174 
 7343      6500
ARM GAS  /tmp/ccKa46D2.s 			page 173


 7344              	.LASF84:
 7345 0913 5F6D6273 		.ascii	"_mbstate\000"
 7345      74617465 
 7345      00
 7346              	.LASF95:
 7347 091c 5F72616E 		.ascii	"_rand_next\000"
 7347      645F6E65 
 7347      787400
 7348              	.LASF70:
 7349 0927 5F666C61 		.ascii	"_flags\000"
 7349      677300
 7350              	.LASF330:
 7351 092e 50574D5F 		.ascii	"PWM_FSR\000"
 7351      46535200 
 7352              	.LASF39:
 7353 0936 5F617465 		.ascii	"_atexit\000"
 7353      78697400 
 7354              	.LASF278:
 7355 093e 50494F5F 		.ascii	"PIO_PCIER\000"
 7355      50434945 
 7355      5200
 7356              	.LASF257:
 7357 0948 50494F5F 		.ascii	"PIO_OWSR\000"
 7357      4F575352 
 7357      00
 7358              	.LASF13:
 7359 0951 5F5F636F 		.ascii	"__count\000"
 7359      756E7400 
 7360              	.LASF379:
 7361 0959 4E4F524D 		.ascii	"NORMAL\000"
 7361      414C00
 7362              	.LASF253:
 7363 0960 50494F5F 		.ascii	"PIO_PPDSR\000"
 7363      50504453 
 7363      5200
 7364              	.LASF31:
 7365 096a 5F5F746D 		.ascii	"__tm_wday\000"
 7365      5F776461 
 7365      7900
 7366              	.LASF32:
 7367 0974 5F5F746D 		.ascii	"__tm_yday\000"
 7367      5F796461 
 7367      7900
 7368              	.LASF343:
 7369 097e 50574D5F 		.ascii	"PWM_RNCR\000"
 7369      524E4352 
 7369      00
 7370              	.LASF92:
 7371 0987 5F736565 		.ascii	"_seed\000"
 7371      6400
 7372              	.LASF77:
 7373 098d 5F736565 		.ascii	"_seek\000"
 7373      6B00
 7374              	.LASF134:
 7375 0993 55415254 		.ascii	"UART1_IRQn\000"
 7375      315F4952 
 7375      516E00
ARM GAS  /tmp/ccKa46D2.s 			page 174


 7376              	.LASF414:
 7377 099e 6E747269 		.ascii	"ntrip\000"
 7377      7000
 7378              	.LASF9:
 7379 09a4 5F66706F 		.ascii	"_fpos_t\000"
 7379      735F7400 
 7380              	.LASF12:
 7381 09ac 5F5F7763 		.ascii	"__wchb\000"
 7381      686200
 7382              	.LASF217:
 7383 09b3 4144435F 		.ascii	"ADC_RNCR\000"
 7383      524E4352 
 7383      00
 7384              	.LASF327:
 7385 09bc 50574D5F 		.ascii	"PWM_OSSUPD\000"
 7385      4F535355 
 7385      504400
 7386              	.LASF286:
 7387 09c7 50494F5F 		.ascii	"PIO_TCR\000"
 7387      54435200 
 7388              	.LASF181:
 7389 09cf 42464152 		.ascii	"BFAR\000"
 7389      00
 7390              	.LASF105:
 7391 09d4 5F6D6274 		.ascii	"_mbtowc_state\000"
 7391      6F77635F 
 7391      73746174 
 7391      6500
 7392              	.LASF219:
 7393 09e2 4144435F 		.ascii	"ADC_TNCR\000"
 7393      544E4352 
 7393      00
 7394              	.LASF360:
 7395 09eb 54435F49 		.ascii	"TC_IMR\000"
 7395      4D5200
 7396              	.LASF6:
 7397 09f2 6C6F6E67 		.ascii	"long long unsigned int\000"
 7397      206C6F6E 
 7397      6720756E 
 7397      7369676E 
 7397      65642069 
 7398              	.LASF387:
 7399 0a09 6F757470 		.ascii	"output\000"
 7399      757400
 7400              	.LASF315:
 7401 0a10 50574D5F 		.ascii	"PWM_SCM\000"
 7401      53434D00 
 7402              	.LASF115:
 7403 0a18 75696E74 		.ascii	"uint16_t\000"
 7403      31365F74 
 7403      00
 7404              	.LASF377:
 7405 0a21 61747472 		.ascii	"attribute\000"
 7405      69627574 
 7405      6500
 7406              	.LASF283:
 7407 0a2b 50494F5F 		.ascii	"PIO_RPR\000"
ARM GAS  /tmp/ccKa46D2.s 			page 175


 7407      52505200 
 7408              	.LASF226:
 7409 0a33 50494F5F 		.ascii	"PIO_ODR\000"
 7409      4F445200 
 7410              	.LASF36:
 7411 0a3b 5F64736F 		.ascii	"_dso_handle\000"
 7411      5F68616E 
 7411      646C6500 
 7412              	.LASF314:
 7413 0a47 50574D5F 		.ascii	"PWM_ISR1\000"
 7413      49535231 
 7413      00
 7414              	.LASF228:
 7415 0a50 50494F5F 		.ascii	"PIO_IFER\000"
 7415      49464552 
 7415      00
 7416              	.LASF91:
 7417 0a59 5F72616E 		.ascii	"_rand48\000"
 7417      64343800 
 7418              	.LASF204:
 7419 0a61 4144435F 		.ascii	"ADC_COR\000"
 7419      434F5200 
 7420              	.LASF141:
 7421 0a69 48534D43 		.ascii	"HSMCI_IRQn\000"
 7421      495F4952 
 7421      516E00
 7422              	.LASF49:
 7423 0a74 5F737464 		.ascii	"_stdout\000"
 7423      6F757400 
 7424              	.LASF140:
 7425 0a7c 55534152 		.ascii	"USART1_IRQn\000"
 7425      54315F49 
 7425      52516E00 
 7426              	.LASF81:
 7427 0a88 5F626C6B 		.ascii	"_blksize\000"
 7427      73697A65 
 7427      00
 7428              	.LASF247:
 7429 0a91 50494F5F 		.ascii	"PIO_IFSCDR\000"
 7429      49465343 
 7429      445200
 7430              	.LASF244:
 7431 0a9c 50494F5F 		.ascii	"PIO_PUSR\000"
 7431      50555352 
 7431      00
 7432              	.LASF44:
 7433 0aa5 5F626173 		.ascii	"_base\000"
 7433      6500
 7434              	.LASF421:
 7435 0aab 5443315F 		.ascii	"TC1_IrqHandler\000"
 7435      49727148 
 7435      616E646C 
 7435      657200
 7436              	.LASF102:
 7437 0aba 5F737472 		.ascii	"_strtok_last\000"
 7437      746F6B5F 
 7437      6C617374 
ARM GAS  /tmp/ccKa46D2.s 			page 176


 7437      00
 7438              	.LASF152:
 7439 0ac7 4144435F 		.ascii	"ADC_IRQn\000"
 7439      4952516E 
 7439      00
 7440              	.LASF225:
 7441 0ad0 50494F5F 		.ascii	"PIO_OER\000"
 7441      4F455200 
 7442              	.LASF109:
 7443 0ad8 5F6D6272 		.ascii	"_mbrtowc_state\000"
 7443      746F7763 
 7443      5F737461 
 7443      746500
 7444              	.LASF334:
 7445 0ae7 50574D5F 		.ascii	"PWM_ELxMR\000"
 7445      454C784D 
 7445      5200
 7446              	.LASF215:
 7447 0af1 4144435F 		.ascii	"ADC_TCR\000"
 7447      54435200 
 7448              	.LASF161:
 7449 0af9 49434552 		.ascii	"ICER\000"
 7449      00
 7450              	.LASF16:
 7451 0afe 5F666C6F 		.ascii	"_flock_t\000"
 7451      636B5F74 
 7451      00
 7452              	.LASF400:
 7453 0b07 7463636C 		.ascii	"tcclks\000"
 7453      6B7300
 7454              	.LASF87:
 7455 0b0e 5F5F4649 		.ascii	"__FILE\000"
 7455      4C4500
 7456              	.LASF260:
 7457 0b15 50494F5F 		.ascii	"PIO_AIMDR\000"
 7457      41494D44 
 7457      5200
 7458              	.LASF15:
 7459 0b1f 5F6D6273 		.ascii	"_mbstate_t\000"
 7459      74617465 
 7459      5F7400
 7460              	.LASF133:
 7461 0b2a 55415254 		.ascii	"UART0_IRQn\000"
 7461      305F4952 
 7461      516E00
 7462              	.LASF60:
 7463 0b35 5F723438 		.ascii	"_r48\000"
 7463      00
 7464              	.LASF307:
 7465 0b3a 50574D5F 		.ascii	"PWM_CLK\000"
 7465      434C4B00 
 7466              	.LASF10:
 7467 0b42 77696E74 		.ascii	"wint_t\000"
 7467      5F7400
 7468              	.LASF182:
 7469 0b49 41465352 		.ascii	"AFSR\000"
 7469      00
ARM GAS  /tmp/ccKa46D2.s 			page 177


 7470              	.LASF188:
 7471 0b4e 4144435F 		.ascii	"ADC_SEQR1\000"
 7471      53455152 
 7471      3100
 7472              	.LASF189:
 7473 0b58 4144435F 		.ascii	"ADC_SEQR2\000"
 7473      53455152 
 7473      3200
 7474              	.LASF19:
 7475 0b62 5F6E6578 		.ascii	"_next\000"
 7475      7400
 7476              	.LASF73:
 7477 0b68 5F646174 		.ascii	"_data\000"
 7477      6100
 7478              	.LASF306:
 7479 0b6e 50776D43 		.ascii	"PwmCmp\000"
 7479      6D7000
 7480              	.LASF144:
 7481 0b75 5350495F 		.ascii	"SPI_IRQn\000"
 7481      4952516E 
 7481      00
 7482              	.LASF406:
 7483 0b7e 696E6974 		.ascii	"init\000"
 7483      00
 7484              	.LASF139:
 7485 0b83 55534152 		.ascii	"USART0_IRQn\000"
 7485      54305F49 
 7485      52516E00 
 7486              	.LASF193:
 7487 0b8f 52657365 		.ascii	"Reserved1\000"
 7487      72766564 
 7487      3100
 7488              	.LASF199:
 7489 0b99 52657365 		.ascii	"Reserved2\000"
 7489      72766564 
 7489      3200
 7490              	.LASF177:
 7491 0ba3 43465352 		.ascii	"CFSR\000"
 7491      00
 7492              	.LASF208:
 7493 0ba8 52657365 		.ascii	"Reserved4\000"
 7493      72766564 
 7493      3400
 7494              	.LASF211:
 7495 0bb2 52657365 		.ascii	"Reserved5\000"
 7495      72766564 
 7495      3500
 7496              	.LASF246:
 7497 0bbc 52657365 		.ascii	"Reserved6\000"
 7497      72766564 
 7497      3600
 7498              	.LASF146:
 7499 0bc6 5443305F 		.ascii	"TC0_IRQn\000"
 7499      4952516E 
 7499      00
 7500              	.LASF258:
 7501 0bcf 52657365 		.ascii	"Reserved8\000"
ARM GAS  /tmp/ccKa46D2.s 			page 178


 7501      72766564 
 7501      3800
 7502              	.LASF262:
 7503 0bd9 52657365 		.ascii	"Reserved9\000"
 7503      72766564 
 7503      3900
 7504              	.LASF137:
 7505 0be3 50494F42 		.ascii	"PIOB_IRQn\000"
 7505      5F495251 
 7505      6E00
 7506              	.LASF259:
 7507 0bed 50494F5F 		.ascii	"PIO_AIMER\000"
 7507      41494D45 
 7507      5200
 7508              	.LASF241:
 7509 0bf7 50494F5F 		.ascii	"PIO_MDSR\000"
 7509      4D445352 
 7509      00
 7510              	.LASF353:
 7511 0c00 54435F43 		.ascii	"TC_CV\000"
 7511      5600
 7512              	.LASF346:
 7513 0c06 50574D5F 		.ascii	"PWM_PTCR\000"
 7513      50544352 
 7513      00
 7514              	.LASF237:
 7515 0c0f 50494F5F 		.ascii	"PIO_IMR\000"
 7515      494D5200 
 7516              	.LASF123:
 7517 0c17 44656275 		.ascii	"DebugMonitor_IRQn\000"
 7517      674D6F6E 
 7517      69746F72 
 7517      5F495251 
 7517      6E00
 7518              	.LASF233:
 7519 0c29 50494F5F 		.ascii	"PIO_ODSR\000"
 7519      4F445352 
 7519      00
 7520              	.LASF420:
 7521 0c32 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 7521      652F6D6F 
 7521      2F646F63 
 7521      2F737475 
 7521      6469756D 
 7522              	.LASF288:
 7523 0c61 50494F5F 		.ascii	"PIO_RNCR\000"
 7523      524E4352 
 7523      00
 7524              	.LASF366:
 7525 0c6a 54435F51 		.ascii	"TC_QIDR\000"
 7525      49445200 
 7526              	.LASF348:
 7527 0c72 50574D5F 		.ascii	"PWM_CMP\000"
 7527      434D5000 
 7528              	.LASF293:
 7529 0c7a 50574D5F 		.ascii	"PWM_CMR\000"
 7529      434D5200 
ARM GAS  /tmp/ccKa46D2.s 			page 179


 7530              	.LASF290:
 7531 0c82 50494F5F 		.ascii	"PIO_TNCR\000"
 7531      544E4352 
 7531      00
 7532              	.LASF183:
 7533 0c8b 4D4D4652 		.ascii	"MMFR\000"
 7533      00
 7534              	.LASF373:
 7535 0c90 5744545F 		.ascii	"WDT_SR\000"
 7535      535200
 7536              	.LASF417:
 7537 0c97 64786D61 		.ascii	"dxmax\000"
 7537      7800
 7538              	.LASF180:
 7539 0c9d 4D4D4641 		.ascii	"MMFAR\000"
 7539      5200
 7540              	.LASF103:
 7541 0ca3 5F6D626C 		.ascii	"_mblen_state\000"
 7541      656E5F73 
 7541      74617465 
 7541      00
 7542              	.LASF275:
 7543 0cb0 50494F5F 		.ascii	"PIO_SCHMITT\000"
 7543      5343484D 
 7543      49545400 
 7544              	.LASF2:
 7545 0cbc 73686F72 		.ascii	"short int\000"
 7545      7420696E 
 7545      7400
 7546              	.LASF384:
 7547 0cc6 6D6F6465 		.ascii	"mode\000"
 7547      00
 7548              	.LASF394:
 7549 0ccb 7072696F 		.ascii	"priority\000"
 7549      72697479 
 7549      00
 7550              	.LASF114:
 7551 0cd4 696E7431 		.ascii	"int16_t\000"
 7551      365F7400 
 7552              	.LASF365:
 7553 0cdc 54435F51 		.ascii	"TC_QIER\000"
 7553      49455200 
 7554              	.LASF184:
 7555 0ce4 49534152 		.ascii	"ISAR\000"
 7555      00
 7556              	.LASF200:
 7557 0ce9 4144435F 		.ascii	"ADC_OVER\000"
 7557      4F564552 
 7557      00
 7558              	.LASF37:
 7559 0cf2 5F666E74 		.ascii	"_fntypes\000"
 7559      79706573 
 7559      00
 7560              	.LASF136:
 7561 0cfb 50494F41 		.ascii	"PIOA_IRQn\000"
 7561      5F495251 
 7561      6E00
ARM GAS  /tmp/ccKa46D2.s 			page 180


 7562              	.LASF299:
 7563 0d05 50574D5F 		.ascii	"PWM_DT\000"
 7563      445400
 7564              	.LASF30:
 7565 0d0c 5F5F746D 		.ascii	"__tm_year\000"
 7565      5F796561 
 7565      7200
 7566              	.LASF197:
 7567 0d16 4144435F 		.ascii	"ADC_IMR\000"
 7567      494D5200 
 7568              	.LASF186:
 7569 0d1e 4144435F 		.ascii	"ADC_CR\000"
 7569      435200
 7570              	.LASF72:
 7571 0d25 5F6C6266 		.ascii	"_lbfsize\000"
 7571      73697A65 
 7571      00
 7572              	.LASF51:
 7573 0d2e 5F696E63 		.ascii	"_inc\000"
 7573      00
 7574              	.LASF40:
 7575 0d33 5F696E64 		.ascii	"_ind\000"
 7575      00
 7576              	.LASF220:
 7577 0d38 4144435F 		.ascii	"ADC_PTCR\000"
 7577      50544352 
 7577      00
 7578              	.LASF370:
 7579 0d41 54435F57 		.ascii	"TC_WPMR\000"
 7579      504D5200 
 7580              	.LASF309:
 7581 0d49 50574D5F 		.ascii	"PWM_DIS\000"
 7581      44495300 
 7582              	.LASF305:
 7583 0d51 50574D5F 		.ascii	"PWM_CMPxMUPD\000"
 7583      434D5078 
 7583      4D555044 
 7583      00
 7584              	.LASF43:
 7585 0d5e 5F5F7362 		.ascii	"__sbuf\000"
 7585      756600
 7586              	.LASF38:
 7587 0d65 5F69735F 		.ascii	"_is_cxa\000"
 7587      63786100 
 7588              	.LASF297:
 7589 0d6d 50574D5F 		.ascii	"PWM_CPRDUPD\000"
 7589      43505244 
 7589      55504400 
 7590              	.LASF418:
 7591 0d79 474E5520 		.ascii	"GNU C 4.6.1\000"
 7591      4320342E 
 7591      362E3100 
 7592              	.LASF96:
 7593 0d85 5F6D7072 		.ascii	"_mprec\000"
 7593      656300
 7594              	.LASF399:
 7595 0d8c 73746174 		.ascii	"status\000"
ARM GAS  /tmp/ccKa46D2.s 			page 181


 7595      757300
 7596              	.LASF67:
 7597 0d93 5F6D6973 		.ascii	"_misc\000"
 7597      6300
 7598              	.LASF17:
 7599 0d99 5F5F554C 		.ascii	"__ULong\000"
 7599      6F6E6700 
 7600              	.LASF296:
 7601 0da1 50574D5F 		.ascii	"PWM_CPRD\000"
 7601      43505244 
 7601      00
 7602              	.LASF277:
 7603 0daa 50494F5F 		.ascii	"PIO_PCMR\000"
 7603      50434D52 
 7603      00
 7604              	.LASF145:
 7605 0db3 5353435F 		.ascii	"SSC_IRQn\000"
 7605      4952516E 
 7605      00
 7606              	.LASF304:
 7607 0dbc 50574D5F 		.ascii	"PWM_CMPxM\000"
 7607      434D5078 
 7607      4D00
 7608              	.LASF117:
 7609 0dc6 75696E74 		.ascii	"uint32_t\000"
 7609      33325F74 
 7609      00
 7610              	.LASF404:
 7611 0dcf 646F776E 		.ascii	"down\000"
 7611      00
 7612              	.LASF302:
 7613 0dd4 50574D5F 		.ascii	"PWM_CMPxV\000"
 7613      434D5078 
 7613      5600
 7614              	.LASF97:
 7615 0dde 5F726573 		.ascii	"_result\000"
 7615      756C7400 
 7616              	.LASF207:
 7617 0de6 4144435F 		.ascii	"ADC_ACR\000"
 7617      41435200 
 7618              	.LASF352:
 7619 0dee 54435F53 		.ascii	"TC_SMMR\000"
 7619      4D4D5200 
 7620              	.LASF191:
 7621 0df6 4144435F 		.ascii	"ADC_CHDR\000"
 7621      43484452 
 7621      00
 7622              	.LASF338:
 7623 0dff 50574D5F 		.ascii	"PWM_RPR\000"
 7623      52505200 
 7624              	.LASF268:
 7625 0e07 50494F5F 		.ascii	"PIO_REHLSR\000"
 7625      5245484C 
 7625      535200
 7626              	.LASF94:
 7627 0e12 5F616464 		.ascii	"_add\000"
 7627      00
ARM GAS  /tmp/ccKa46D2.s 			page 182


 7628              	.LASF3:
 7629 0e17 73686F72 		.ascii	"short unsigned int\000"
 7629      7420756E 
 7629      7369676E 
 7629      65642069 
 7629      6E7400
 7630              	.LASF209:
 7631 0e2a 4144435F 		.ascii	"ADC_WPMR\000"
 7631      57504D52 
 7631      00
 7632              	.LASF27:
 7633 0e33 5F5F746D 		.ascii	"__tm_hour\000"
 7633      5F686F75 
 7633      7200
 7634              	.LASF222:
 7635 0e3d 50494F5F 		.ascii	"PIO_PER\000"
 7635      50455200 
 7636              	.LASF124:
 7637 0e45 50656E64 		.ascii	"PendSV_IRQn\000"
 7637      53565F49 
 7637      52516E00 
 7638              	.LASF110:
 7639 0e51 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 7639      72746F77 
 7639      63735F73 
 7639      74617465 
 7639      00
 7640              	.LASF363:
 7641 0e62 54435F42 		.ascii	"TC_BCR\000"
 7641      435200
 7642              	.LASF149:
 7643 0e69 5443335F 		.ascii	"TC3_IRQn\000"
 7643      4952516E 
 7643      00
 7644              	.LASF374:
 7645 0e72 5F50696E 		.ascii	"_Pin\000"
 7645      00
 7646              	.LASF190:
 7647 0e77 4144435F 		.ascii	"ADC_CHER\000"
 7647      43484552 
 7647      00
 7648              	.LASF159:
 7649 0e80 49534552 		.ascii	"ISER\000"
 7649      00
 7650              	.LASF35:
 7651 0e85 5F666E61 		.ascii	"_fnargs\000"
 7651      72677300 
 7652              	.LASF202:
 7653 0e8d 4144435F 		.ascii	"ADC_CWR\000"
 7653      43575200 
 7654              	.LASF33:
 7655 0e95 5F5F746D 		.ascii	"__tm_isdst\000"
 7655      5F697364 
 7655      737400
 7656              	.LASF300:
 7657 0ea0 50574D5F 		.ascii	"PWM_DTUPD\000"
 7657      44545550 
ARM GAS  /tmp/ccKa46D2.s 			page 183


 7657      4400
 7658              	.LASF26:
 7659 0eaa 5F5F746D 		.ascii	"__tm_min\000"
 7659      5F6D696E 
 7659      00
 7660              	.LASF316:
 7661 0eb3 50574D5F 		.ascii	"PWM_SCUC\000"
 7661      53435543 
 7661      00
 7662              	.LASF238:
 7663 0ebc 50494F5F 		.ascii	"PIO_ISR\000"
 7663      49535200 
 7664              	.LASF272:
 7665 0ec4 50494F5F 		.ascii	"PIO_WPMR\000"
 7665      57504D52 
 7665      00
 7666              	.LASF107:
 7667 0ecd 5F676574 		.ascii	"_getdate_err\000"
 7667      64617465 
 7667      5F657272 
 7667      00
 7668              	.LASF256:
 7669 0eda 50494F5F 		.ascii	"PIO_OWDR\000"
 7669      4F574452 
 7669      00
 7670              	.LASF128:
 7671 0ee3 5254435F 		.ascii	"RTC_IRQn\000"
 7671      4952516E 
 7671      00
 7672              	.LASF291:
 7673 0eec 50494F5F 		.ascii	"PIO_PTCR\000"
 7673      50544352 
 7673      00
 7674              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/ccKa46D2.s 			page 184


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccKa46D2.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/ccKa46D2.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/ccKa46D2.s:62     .text.NVIC_SetPriority:00000000 $t
     /tmp/ccKa46D2.s:66     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
     /tmp/ccKa46D2.s:128    .bss:00000000 input
     /tmp/ccKa46D2.s:125    .bss:00000000 $d
     /tmp/ccKa46D2.s:134    .data:00000000 _state
     /tmp/ccKa46D2.s:141    .bss:00000004 loop
     /tmp/ccKa46D2.s:148    .data:00000004 ntrip
     /tmp/ccKa46D2.s:145    .data:00000001 $d
     /tmp/ccKa46D2.s:157    .data:00000014 rtrip
     /tmp/ccKa46D2.s:166    .data:00000024 releasetime
     /tmp/ccKa46D2.s:172    .data:00000028 dxmax
     /tmp/ccKa46D2.s:175    .rodata:00000000 $d
     /tmp/ccKa46D2.s:176    .rodata:00000000 .LC3
     /tmp/ccKa46D2.s:179    .rodata:00000018 .LC4
     /tmp/ccKa46D2.s:182    .text.main:00000000 $t
     /tmp/ccKa46D2.s:187    .text.main:00000000 main
     /tmp/ccKa46D2.s:624    .text.init:00000000 init
     /tmp/ccKa46D2.s:1025   .text.state:00000000 state
     /tmp/ccKa46D2.s:1222   .text.cli:00000000 cli
     /tmp/ccKa46D2.s:286    .text.main:000000e0 $d
     /tmp/ccKa46D2.s:296    .text.main:00000100 $t
     /tmp/ccKa46D2.s:448    .text.TC1_IrqHandler:00000000 $t
     /tmp/ccKa46D2.s:453    .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/ccKa46D2.s:485    .text.ADC_IrqHandler:00000000 $t
     /tmp/ccKa46D2.s:490    .text.ADC_IrqHandler:00000000 ADC_IrqHandler
     /tmp/ccKa46D2.s:889    .text.write_output:00000000 write_output
     /tmp/ccKa46D2.s:579    .rodata:00000034 .LC5
     /tmp/ccKa46D2.s:582    .rodata:00000060 .LC2
     /tmp/ccKa46D2.s:620    .text.init:00000000 $t
     /tmp/ccKa46D2.s:869    .rodata:000000a8 .LC0
     /tmp/ccKa46D2.s:877    .rodata:000000b4 .LC1
     /tmp/ccKa46D2.s:885    .text.write_output:00000000 $t
     /tmp/ccKa46D2.s:1006   .rodata:000000c0 .LC6
     /tmp/ccKa46D2.s:1009   .rodata:000000d8 .LC7
     /tmp/ccKa46D2.s:1012   .rodata:000000ec .LC8
     /tmp/ccKa46D2.s:1015   .rodata:00000100 .LC9
     /tmp/ccKa46D2.s:1018   .rodata:00000118 .LC10
     /tmp/ccKa46D2.s:1021   .text.state:00000000 $t
     /tmp/ccKa46D2.s:1053   .text.state:0000001c $d
     /tmp/ccKa46D2.s:1063   .text.state:0000003c $t
     /tmp/ccKa46D2.s:1185   .rodata:00000130 .LC11
     /tmp/ccKa46D2.s:1188   .rodata:0000013c .LC12
     /tmp/ccKa46D2.s:1191   .rodata:00000154 .LC13
     /tmp/ccKa46D2.s:1194   .rodata:00000160 .LC14
     /tmp/ccKa46D2.s:1197   .rodata:00000180 .LC15
     /tmp/ccKa46D2.s:1200   .rodata:00000184 .LC16
     /tmp/ccKa46D2.s:1203   .rodata:000001a0 .LC17
     /tmp/ccKa46D2.s:1206   .rodata:000001a4 .LC18
     /tmp/ccKa46D2.s:1209   .rodata:000001c8 .LC19
     /tmp/ccKa46D2.s:1212   .rodata:000001e4 .LC20
     /tmp/ccKa46D2.s:1215   .rodata:000001fc .LC21
     /tmp/ccKa46D2.s:1218   .text.cli:00000000 $t
     /tmp/ccKa46D2.s:1329   .text.cli:000000e4 $d
ARM GAS  /tmp/ccKa46D2.s 			page 185


     /tmp/ccKa46D2.s:1339   .text.cli:00000104 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_impure_ptr
fiprintf
TimeTick_Configure
LEDs_configure
LED_blink
LED_blinkstop
GetTickCount
ADC_ReadBuffer
control
memcpy
PIO_Configure
PMC_EnablePeripheral
TC_FindMckDivisor
TC_Configure
TC_Start
ADC_Initialize
ADC_cfgFrequency
PWMC_ConfigureClocks
PWMC_ConfigureChannelExt
PWMC_SetPeriod
PWMC_SetDutyCycle
PWMC_ConfigureSyncChannel
PWMC_SetSyncChannelUpdatePeriod
USBC_Configure
USBC_isConfigured
setbuf
PIO_Set
PIO_Clear
LED_clr
mode
USBC_hasData
gets
siscanf
iprintf
