ARM GAS  /tmp/ccHZkoRj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/ccHZkoRj.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccHZkoRj.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/ccHZkoRj.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccHZkoRj.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccHZkoRj.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/ccHZkoRj.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/ccHZkoRj.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/ccHZkoRj.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/ccHZkoRj.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/ccHZkoRj.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccHZkoRj.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/ccHZkoRj.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/ccHZkoRj.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/ccHZkoRj.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccHZkoRj.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccHZkoRj.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/ccHZkoRj.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccHZkoRj.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/ccHZkoRj.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccHZkoRj.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccHZkoRj.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccHZkoRj.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccHZkoRj.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccHZkoRj.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccHZkoRj.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccHZkoRj.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/ccHZkoRj.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.bss
  62              		.align	2
  63              	loops:
  64 0000 00000000 		.space	88
  64      00000000 
  64      00000000 
  64      00000000 
  64      00000000 
  65              		.align	2
  66              	conf:
  67 0058 00000000 		.space	16
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.section	.rodata
  69              		.align	2
  70              	.LC0:
  71 0000 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
  71      52756E6E 
  71      696E6720 
  71      61742025 
  71      69204D48 
  72 0017 00       		.align	2
  73              	.LC1:
  74 0018 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
  74      77616974 
  74      696E6720 
  74      756E7469 
  74      6C205553 
  75 0043 00       		.align	2
  76              	.LC2:
ARM GAS  /tmp/ccHZkoRj.s 			page 29


  77 0044 257300   		.ascii	"%s\000"
  78 0047 00       		.align	2
  79              	.LC3:
  80 0048 3F206964 		.ascii	"? id\000"
  80      00
  81 004d 000000   		.align	2
  82              	.LC4:
  83 0050 3F206F70 		.ascii	"? opt\000"
  83      7400
  84 0056 0000     		.align	2
  85              	.LC5:
  86 0058 25692569 		.ascii	"%i%i%i\000"
  86      256900
  87 005f 00       		.align	2
  88              	.LC6:
  89 0060 6D6F6465 		.ascii	"mode\000"
  89      00
  90 0065 000000   		.align	2
  91              	.LC7:
  92 0068 3F206172 		.ascii	"? arg\000"
  92      6700
  93 006e 0000     		.align	2
  94              	.LC8:
  95 0070 25750A00 		.ascii	"%u\012\000"
  96              		.align	2
  97              	.LC9:
  98 0074 737000   		.ascii	"sp\000"
  99 0077 00       		.align	2
 100              	.LC10:
 101 0078 707600   		.ascii	"pv\000"
 102 007b 00       		.align	2
 103              	.LC11:
 104 007c 3F207265 		.ascii	"? read-only\000"
 104      61642D6F 
 104      6E6C7900 
 105              		.align	2
 106              	.LC12:
 107 0088 6572726F 		.ascii	"error\000"
 107      7200
 108 008e 0000     		.align	2
 109              	.LC13:
 110 0090 6B00     		.ascii	"k\000"
 111 0092 0000     		.align	2
 112              	.LC14:
 113 0094 25752025 		.ascii	"%u %u %u\012\000"
 113      75202575 
 113      0A00
 114 009e 0000     		.align	2
 115              	.LC15:
 116 00a0 6C696D69 		.ascii	"limit\000"
 116      7400
 117 00a6 0000     		.align	2
 118              	.LC16:
 119 00a8 25752025 		.ascii	"%u %u\012\000"
 119      750A00
 120 00af 00       		.align	2
 121              	.LC17:
ARM GAS  /tmp/ccHZkoRj.s 			page 30


 122 00b0 3F20636D 		.ascii	"? cmd\000"
 122      6400
 123 00b6 0000     		.section	.text.main,"ax",%progbits
 124              		.align	2
 125              		.global	main
 126              		.thumb
 127              		.thumb_func
 128              		.type	main, %function
 129              	main:
 130              	.LFB35:
 131              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "board.h"
   3:main.c        **** #include "controller.h"
   4:main.c        **** 
   5:main.c        **** #define match(a, b) (strcmp(a, b) == 0)
   6:main.c        **** 
   7:main.c        **** #define LOOPS 2 
   8:main.c        **** #define ADC_EOC_IRQS 3  // = (1 << 0)|(1<<1)|..|(1<<LOOPS-1)
   9:main.c        **** 
  10:main.c        **** static struct ctrl loops[LOOPS] = {{0}};
  11:main.c        **** 
  12:main.c        **** static struct {
  13:main.c        **** 	ctrlio_t min;
  14:main.c        **** 	ctrlio_t max;
  15:main.c        **** 	ctrlio_t yinit;
  16:main.c        **** 	ctrlio_t uinit;
  17:main.c        **** } conf[LOOPS] = {{0}};
  18:main.c        **** 
  19:main.c        **** static void init();
  20:main.c        **** 
  21:main.c        **** int main() 
  22:main.c        **** {
 132              		.loc 2 22 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 40
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136 0000 90B5     		push	{r4, r7, lr}
 137              	.LCFI3:
 138              		.cfi_def_cfa_offset 12
 139              		.cfi_offset 14, -4
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 4, -12
 142 0002 8DB0     		sub	sp, sp, #52
 143              	.LCFI4:
 144              		.cfi_def_cfa_offset 64
 145 0004 02AF     		add	r7, sp, #8
 146              	.LCFI5:
 147              		.cfi_def_cfa 7, 56
  23:main.c        **** 	char *line;
  24:main.c        **** 	char opt[8];
  25:main.c        **** 	char cmd;
  26:main.c        **** 
  27:main.c        **** 	int argc;
  28:main.c        **** 	int argv[3];
  29:main.c        **** 	unsigned id = 0;
 148              		.loc 2 29 0
ARM GAS  /tmp/ccHZkoRj.s 			page 31


 149 0006 4FF00003 		mov	r3, #0
 150 000a 3B62     		str	r3, [r7, #32]
  30:main.c        **** 
  31:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 151              		.loc 2 31 0
 152 000c 40F20003 		movw	r3, #:lower16:_impure_ptr
 153 0010 C0F20003 		movt	r3, #:upper16:_impure_ptr
 154 0014 1B68     		ldr	r3, [r3, #0]
 155 0016 DB68     		ldr	r3, [r3, #12]
 156 0018 1846     		mov	r0, r3
 157 001a 40F20001 		movw	r1, #:lower16:.LC0
 158 001e C0F20001 		movt	r1, #:upper16:.LC0
 159 0022 4FF03002 		mov	r2, #48
 160 0026 FFF7FEFF 		bl	fiprintf
  32:main.c        **** 
  33:main.c        **** 	/* WDT off */
  34:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 161              		.loc 2 34 0
 162 002a 41F25043 		movw	r3, #5200
 163 002e C4F20E03 		movt	r3, 16398
 164 0032 4FF40042 		mov	r2, #32768
 165 0036 5A60     		str	r2, [r3, #4]
  35:main.c        **** 
  36:main.c        **** 	/* configure hardware */
  37:main.c        **** 	init();
 166              		.loc 2 37 0
 167 0038 FFF7FEFF 		bl	init
  38:main.c        **** 
  39:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 168              		.loc 2 39 0
 169 003c 40F20003 		movw	r3, #:lower16:_impure_ptr
 170 0040 C0F20003 		movt	r3, #:upper16:_impure_ptr
 171 0044 1B68     		ldr	r3, [r3, #0]
 172 0046 DB68     		ldr	r3, [r3, #12]
 173 0048 1846     		mov	r0, r3
 174 004a 40F20001 		movw	r1, #:lower16:.LC1
 175 004e C0F20001 		movt	r1, #:upper16:.LC1
 176 0052 FFF7FEFF 		bl	fiprintf
  40:main.c        **** 	while (!USBC_isConfigured());
 177              		.loc 2 40 0
 178 0056 00BF     		nop
 179              	.L3:
 180              		.loc 2 40 0 is_stmt 0 discriminator 1
 181 0058 FFF7FEFF 		bl	USBC_isConfigured
 182 005c 0346     		mov	r3, r0
 183 005e 002B     		cmp	r3, #0
 184 0060 FAD0     		beq	.L3
  41:main.c        **** 
  42:main.c        **** 	LED_blink(statusled, 5);
 185              		.loc 2 42 0 is_stmt 1
 186 0062 4FF00000 		mov	r0, #0
 187 0066 4FF00501 		mov	r1, #5
 188 006a FFF7FEFF 		bl	LED_blink
  43:main.c        **** 
  44:main.c        **** 	setbuf(stdout, NULL);
 189              		.loc 2 44 0
 190 006e 40F20003 		movw	r3, #:lower16:_impure_ptr
ARM GAS  /tmp/ccHZkoRj.s 			page 32


 191 0072 C0F20003 		movt	r3, #:upper16:_impure_ptr
 192 0076 1B68     		ldr	r3, [r3, #0]
 193 0078 9B68     		ldr	r3, [r3, #8]
 194 007a 1846     		mov	r0, r3
 195 007c 4FF00001 		mov	r1, #0
 196 0080 FFF7FEFF 		bl	setbuf
 197              	.L34:
  45:main.c        **** 
  46:main.c        **** 	while (1) {
  47:main.c        **** 		if(!USBC_hasData())
 198              		.loc 2 47 0
 199 0084 FFF7FEFF 		bl	USBC_hasData
 200 0088 0346     		mov	r3, r0
 201 008a 002B     		cmp	r3, #0
 202 008c 00F02E82 		beq	.L36
 203              	.L4:
  48:main.c        **** 			continue;
  49:main.c        **** 
  50:main.c        **** 		gets(line);
 204              		.loc 2 50 0
 205 0090 786A     		ldr	r0, [r7, #36]
 206 0092 FFF7FEFF 		bl	gets
  51:main.c        **** #ifdef ECHO
  52:main.c        **** 		puts(line);
  53:main.c        **** #endif
  54:main.c        **** 		switch ((cmd=*line)) {
 207              		.loc 2 54 0
 208 0096 7B6A     		ldr	r3, [r7, #36]
 209 0098 1B78     		ldrb	r3, [r3, #0]
 210 009a FB77     		strb	r3, [r7, #31]
 211 009c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 212 009e A3F16703 		sub	r3, r3, #103
 213 00a2 0C2B     		cmp	r3, #12
 214 00a4 00F21B82 		bhi	.L6
 215 00a8 01A2     		adr	r2, .L9
 216 00aa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 217 00ae 00BF     		.align	2
 218              	.L9:
 219 00b0 E5000000 		.word	.L7+1
 220 00b4 DF040000 		.word	.L6+1
 221 00b8 DF040000 		.word	.L6+1
 222 00bc DF040000 		.word	.L6+1
 223 00c0 DF040000 		.word	.L6+1
 224 00c4 F1040000 		.word	.L37+1
 225 00c8 DF040000 		.word	.L6+1
 226 00cc DF040000 		.word	.L6+1
 227 00d0 DF040000 		.word	.L6+1
 228 00d4 DF040000 		.word	.L6+1
 229 00d8 F1040000 		.word	.L37+1
 230 00dc DF040000 		.word	.L6+1
 231 00e0 E5000000 		.word	.L7+1
 232              	.L7:
  55:main.c        **** 			case 's':
  56:main.c        **** 			case 'g':
  57:main.c        **** 				// get ID (0-9 for loop setting)
  58:main.c        **** 				if (line[1]-'0' < LOOPS)
 233              		.loc 2 58 0
ARM GAS  /tmp/ccHZkoRj.s 			page 33


 234 00e4 7B6A     		ldr	r3, [r7, #36]
 235 00e6 03F10103 		add	r3, r3, #1
 236 00ea 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 237 00ec A3F13003 		sub	r3, r3, #48
 238 00f0 012B     		cmp	r3, #1
 239 00f2 18DC     		bgt	.L10
  59:main.c        **** 					id = line[1]-'0';
 240              		.loc 2 59 0
 241 00f4 7B6A     		ldr	r3, [r7, #36]
 242 00f6 03F10103 		add	r3, r3, #1
 243 00fa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 244 00fc A3F13003 		sub	r3, r3, #48
 245 0100 3B62     		str	r3, [r7, #32]
  60:main.c        **** 				else {
  61:main.c        **** 					puts("? id");
  62:main.c        **** 					break;
  63:main.c        **** 				}
  64:main.c        **** 				
  65:main.c        **** 				line = line+2;
 246              		.loc 2 65 0
 247 0102 7B6A     		ldr	r3, [r7, #36]
 248 0104 03F10203 		add	r3, r3, #2
 249 0108 7B62     		str	r3, [r7, #36]
  66:main.c        **** 
  67:main.c        **** 				// get option (max 7 characters)
  68:main.c        **** 				if (sscanf(line, "%s", opt) != 1) {
 250              		.loc 2 68 0
 251 010a 07F11003 		add	r3, r7, #16
 252 010e 786A     		ldr	r0, [r7, #36]
 253 0110 40F20001 		movw	r1, #:lower16:.LC2
 254 0114 C0F20001 		movt	r1, #:upper16:.LC2
 255 0118 1A46     		mov	r2, r3
 256 011a FFF7FEFF 		bl	siscanf
 257 011e 0346     		mov	r3, r0
 258 0120 012B     		cmp	r3, #1
 259 0122 07D1     		bne	.L11
 260 0124 0DE0     		b	.L35
 261              	.L10:
  61:main.c        **** 					puts("? id");
 262              		.loc 2 61 0
 263 0126 40F20000 		movw	r0, #:lower16:.LC3
 264 012a C0F20000 		movt	r0, #:upper16:.LC3
 265 012e FFF7FEFF 		bl	puts
  62:main.c        **** 					break;
 266              		.loc 2 62 0
 267 0132 DEE1     		b	.L5
 268              	.L11:
  69:main.c        **** 					puts("? opt");
 269              		.loc 2 69 0
 270 0134 40F20000 		movw	r0, #:lower16:.LC4
 271 0138 C0F20000 		movt	r0, #:upper16:.LC4
 272 013c FFF7FEFF 		bl	puts
  70:main.c        **** 					break;
 273              		.loc 2 70 0
 274 0140 D7E1     		b	.L5
 275              	.L35:
  71:main.c        **** 				}
ARM GAS  /tmp/ccHZkoRj.s 			page 34


  72:main.c        **** 
  73:main.c        **** 				// get arguments (3)
  74:main.c        **** 				argc = sscanf(line, "%i%i%i", argv, argv+1, argv+2);
 276              		.loc 2 74 0
 277 0142 07F10402 		add	r2, r7, #4
 278 0146 07F10403 		add	r3, r7, #4
 279 014a 03F10403 		add	r3, r3, #4
 280 014e 07F10401 		add	r1, r7, #4
 281 0152 01F10801 		add	r1, r1, #8
 282 0156 0091     		str	r1, [sp, #0]
 283 0158 786A     		ldr	r0, [r7, #36]
 284 015a 40F20001 		movw	r1, #:lower16:.LC5
 285 015e C0F20001 		movt	r1, #:upper16:.LC5
 286 0162 FFF7FEFF 		bl	siscanf
 287 0166 B861     		str	r0, [r7, #24]
  75:main.c        **** 
  76:main.c        **** 				// check option
  77:main.c        **** 				if (match("mode", opt)) {
 288              		.loc 2 77 0
 289 0168 07F11003 		add	r3, r7, #16
 290 016c 40F20000 		movw	r0, #:lower16:.LC6
 291 0170 C0F20000 		movt	r0, #:upper16:.LC6
 292 0174 1946     		mov	r1, r3
 293 0176 FFF7FEFF 		bl	strcmp
 294 017a 0346     		mov	r3, r0
 295 017c 002B     		cmp	r3, #0
 296 017e 38D1     		bne	.L13
  78:main.c        **** 					if (cmd == 's') {
 297              		.loc 2 78 0
 298 0180 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 299 0182 732B     		cmp	r3, #115
 300 0184 22D1     		bne	.L14
  79:main.c        **** 						if (argc < 1) {
 301              		.loc 2 79 0
 302 0186 BB69     		ldr	r3, [r7, #24]
 303 0188 002B     		cmp	r3, #0
 304 018a 06DC     		bgt	.L15
  80:main.c        **** 							puts("? arg");
 305              		.loc 2 80 0
 306 018c 40F20000 		movw	r0, #:lower16:.LC7
 307 0190 C0F20000 		movt	r0, #:upper16:.LC7
 308 0194 FFF7FEFF 		bl	puts
  81:main.c        **** 							break;
 309              		.loc 2 81 0
 310 0198 ABE1     		b	.L5
 311              	.L15:
  82:main.c        **** 						}
  83:main.c        **** 						if (*argv > STOP || *argv < OFF)
 312              		.loc 2 83 0
 313 019a 7B68     		ldr	r3, [r7, #4]
 314 019c 032B     		cmp	r3, #3
 315 019e 02DC     		bgt	.L16
 316              		.loc 2 83 0 is_stmt 0 discriminator 1
 317 01a0 7B68     		ldr	r3, [r7, #4]
 318 01a2 002B     		cmp	r3, #0
 319 01a4 02DA     		bge	.L17
 320              	.L16:
ARM GAS  /tmp/ccHZkoRj.s 			page 35


  84:main.c        **** 							*argv = OFF;				
 321              		.loc 2 84 0 is_stmt 1
 322 01a6 4FF00003 		mov	r3, #0
 323 01aa 7B60     		str	r3, [r7, #4]
 324              	.L17:
  85:main.c        **** 						mode(*argv, &loops[id]);
 325              		.loc 2 85 0
 326 01ac 7B68     		ldr	r3, [r7, #4]
 327 01ae DAB2     		uxtb	r2, r3
 328 01b0 3B6A     		ldr	r3, [r7, #32]
 329 01b2 4FF02C01 		mov	r1, #44
 330 01b6 01FB03F1 		mul	r1, r1, r3
 331 01ba 40F20003 		movw	r3, #:lower16:loops
 332 01be C0F20003 		movt	r3, #:upper16:loops
 333 01c2 CB18     		adds	r3, r1, r3
 334 01c4 1046     		mov	r0, r2
 335 01c6 1946     		mov	r1, r3
 336 01c8 FFF7FEFF 		bl	mode
 337              	.L14:
  86:main.c        **** 					}
  87:main.c        **** 					printf("%u\n", loops[id].mode);
 338              		.loc 2 87 0
 339 01cc 40F20003 		movw	r3, #:lower16:loops
 340 01d0 C0F20003 		movt	r3, #:upper16:loops
 341 01d4 3A6A     		ldr	r2, [r7, #32]
 342 01d6 4FF02C01 		mov	r1, #44
 343 01da 01FB02F2 		mul	r2, r1, r2
 344 01de 9B18     		adds	r3, r3, r2
 345 01e0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 346 01e2 40F20000 		movw	r0, #:lower16:.LC8
 347 01e6 C0F20000 		movt	r0, #:upper16:.LC8
 348 01ea 1946     		mov	r1, r3
 349 01ec FFF7FEFF 		bl	iprintf
 350 01f0 1FE1     		b	.L18
 351              	.L13:
  88:main.c        **** 				}
  89:main.c        **** 				else if (match("sp", opt)) {
 352              		.loc 2 89 0
 353 01f2 07F11003 		add	r3, r7, #16
 354 01f6 40F20000 		movw	r0, #:lower16:.LC9
 355 01fa C0F20000 		movt	r0, #:upper16:.LC9
 356 01fe 1946     		mov	r1, r3
 357 0200 FFF7FEFF 		bl	strcmp
 358 0204 0346     		mov	r3, r0
 359 0206 002B     		cmp	r3, #0
 360 0208 4AD1     		bne	.L19
  90:main.c        **** 					if (cmd == 's') {
 361              		.loc 2 90 0
 362 020a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 363 020c 732B     		cmp	r3, #115
 364 020e 34D1     		bne	.L20
  91:main.c        **** 						if (argc < 1) {
 365              		.loc 2 91 0
 366 0210 BB69     		ldr	r3, [r7, #24]
 367 0212 002B     		cmp	r3, #0
 368 0214 06DC     		bgt	.L21
  92:main.c        **** 							puts("? arg");
ARM GAS  /tmp/ccHZkoRj.s 			page 36


 369              		.loc 2 92 0
 370 0216 40F20000 		movw	r0, #:lower16:.LC7
 371 021a C0F20000 		movt	r0, #:upper16:.LC7
 372 021e FFF7FEFF 		bl	puts
  93:main.c        **** 							break;
 373              		.loc 2 93 0
 374 0222 66E1     		b	.L5
 375              	.L21:
  94:main.c        **** 						}
  95:main.c        **** 						loops[id].SP = LIMIT(*argv, conf[id].min, conf[id].max);
 376              		.loc 2 95 0
 377 0224 7A68     		ldr	r2, [r7, #4]
 378 0226 40F20003 		movw	r3, #:lower16:conf
 379 022a C0F20003 		movt	r3, #:upper16:conf
 380 022e 396A     		ldr	r1, [r7, #32]
 381 0230 33F83130 		ldrh	r3, [r3, r1, lsl #3]
 382 0234 9A42     		cmp	r2, r3
 383 0236 07DA     		bge	.L22
 384              		.loc 2 95 0 is_stmt 0 discriminator 1
 385 0238 40F20003 		movw	r3, #:lower16:conf
 386 023c C0F20003 		movt	r3, #:upper16:conf
 387 0240 3A6A     		ldr	r2, [r7, #32]
 388 0242 33F83220 		ldrh	r2, [r3, r2, lsl #3]
 389 0246 0DE0     		b	.L23
 390              	.L22:
 391              		.loc 2 95 0 discriminator 2
 392 0248 7968     		ldr	r1, [r7, #4]
 393 024a 40F20002 		movw	r2, #:lower16:conf
 394 024e C0F20002 		movt	r2, #:upper16:conf
 395 0252 3B6A     		ldr	r3, [r7, #32]
 396 0254 4FEAC303 		lsl	r3, r3, #3
 397 0258 D318     		adds	r3, r2, r3
 398 025a 5B88     		ldrh	r3, [r3, #2]
 399 025c 9942     		cmp	r1, r3
 400 025e B8BF     		it	lt
 401 0260 0B46     		movlt	r3, r1
 402 0262 9AB2     		uxth	r2, r3
 403              	.L23:
 404              		.loc 2 95 0 discriminator 3
 405 0264 40F20003 		movw	r3, #:lower16:loops
 406 0268 C0F20003 		movt	r3, #:upper16:loops
 407 026c 396A     		ldr	r1, [r7, #32]
 408 026e 4FF02C00 		mov	r0, #44
 409 0272 00FB01F1 		mul	r1, r0, r1
 410 0276 5B18     		adds	r3, r3, r1
 411 0278 5A80     		strh	r2, [r3, #2]	@ movhi
 412              	.L20:
  96:main.c        **** 					}
  97:main.c        **** 					printf("%u\n", loops[id].SP);
 413              		.loc 2 97 0 is_stmt 1
 414 027a 40F20003 		movw	r3, #:lower16:loops
 415 027e C0F20003 		movt	r3, #:upper16:loops
 416 0282 3A6A     		ldr	r2, [r7, #32]
 417 0284 4FF02C01 		mov	r1, #44
 418 0288 01FB02F2 		mul	r2, r1, r2
 419 028c 9B18     		adds	r3, r3, r2
 420 028e 5B88     		ldrh	r3, [r3, #2]
ARM GAS  /tmp/ccHZkoRj.s 			page 37


 421 0290 40F20000 		movw	r0, #:lower16:.LC8
 422 0294 C0F20000 		movt	r0, #:upper16:.LC8
 423 0298 1946     		mov	r1, r3
 424 029a FFF7FEFF 		bl	iprintf
 425 029e C8E0     		b	.L18
 426              	.L19:
  98:main.c        **** 				}
  99:main.c        **** 				else if (match("pv", opt)) {
 427              		.loc 2 99 0
 428 02a0 07F11003 		add	r3, r7, #16
 429 02a4 40F20000 		movw	r0, #:lower16:.LC10
 430 02a8 C0F20000 		movt	r0, #:upper16:.LC10
 431 02ac 1946     		mov	r1, r3
 432 02ae FFF7FEFF 		bl	strcmp
 433 02b2 0346     		mov	r3, r0
 434 02b4 002B     		cmp	r3, #0
 435 02b6 1DD1     		bne	.L24
 100:main.c        **** 					if (cmd == 's')
 436              		.loc 2 100 0
 437 02b8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 438 02ba 732B     		cmp	r3, #115
 439 02bc 05D1     		bne	.L25
 101:main.c        **** 						puts("? read-only");
 440              		.loc 2 101 0
 441 02be 40F20000 		movw	r0, #:lower16:.LC11
 442 02c2 C0F20000 		movt	r0, #:upper16:.LC11
 443 02c6 FFF7FEFF 		bl	puts
 444              	.L25:
 102:main.c        **** 					printf("%u\n", loops[id]._x);
 445              		.loc 2 102 0
 446 02ca 40F20003 		movw	r3, #:lower16:loops
 447 02ce C0F20003 		movt	r3, #:upper16:loops
 448 02d2 3A6A     		ldr	r2, [r7, #32]
 449 02d4 4FF02C01 		mov	r1, #44
 450 02d8 01FB02F2 		mul	r2, r1, r2
 451 02dc 9B18     		adds	r3, r3, r2
 452 02de 03F12003 		add	r3, r3, #32
 453 02e2 9B88     		ldrh	r3, [r3, #4]
 454 02e4 40F20000 		movw	r0, #:lower16:.LC8
 455 02e8 C0F20000 		movt	r0, #:upper16:.LC8
 456 02ec 1946     		mov	r1, r3
 457 02ee FFF7FEFF 		bl	iprintf
 458 02f2 9EE0     		b	.L18
 459              	.L24:
 103:main.c        **** 				}
 104:main.c        **** 				else if (match("error", opt)) {
 460              		.loc 2 104 0
 461 02f4 07F11003 		add	r3, r7, #16
 462 02f8 40F20000 		movw	r0, #:lower16:.LC12
 463 02fc C0F20000 		movt	r0, #:upper16:.LC12
 464 0300 1946     		mov	r1, r3
 465 0302 FFF7FEFF 		bl	strcmp
 466 0306 0346     		mov	r3, r0
 467 0308 002B     		cmp	r3, #0
 468 030a 1DD1     		bne	.L26
 105:main.c        **** 					if (cmd == 's')
 469              		.loc 2 105 0
ARM GAS  /tmp/ccHZkoRj.s 			page 38


 470 030c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 471 030e 732B     		cmp	r3, #115
 472 0310 05D1     		bne	.L27
 106:main.c        **** 						puts("? read-only");
 473              		.loc 2 106 0
 474 0312 40F20000 		movw	r0, #:lower16:.LC11
 475 0316 C0F20000 		movt	r0, #:upper16:.LC11
 476 031a FFF7FEFF 		bl	puts
 477              	.L27:
 107:main.c        **** 					printf("%u\n", loops[id]._e);
 478              		.loc 2 107 0
 479 031e 40F20003 		movw	r3, #:lower16:loops
 480 0322 C0F20003 		movt	r3, #:upper16:loops
 481 0326 3A6A     		ldr	r2, [r7, #32]
 482 0328 4FF02C01 		mov	r1, #44
 483 032c 01FB02F2 		mul	r2, r1, r2
 484 0330 9B18     		adds	r3, r3, r2
 485 0332 03F11403 		add	r3, r3, #20
 486 0336 1B68     		ldr	r3, [r3, #0]
 487 0338 40F20000 		movw	r0, #:lower16:.LC8
 488 033c C0F20000 		movt	r0, #:upper16:.LC8
 489 0340 1946     		mov	r1, r3
 490 0342 FFF7FEFF 		bl	iprintf
 491 0346 74E0     		b	.L18
 492              	.L26:
 108:main.c        **** 				}
 109:main.c        **** 				else if (match("k", opt)) {
 493              		.loc 2 109 0
 494 0348 07F11003 		add	r3, r7, #16
 495 034c 40F20000 		movw	r0, #:lower16:.LC13
 496 0350 C0F20000 		movt	r0, #:upper16:.LC13
 497 0354 1946     		mov	r1, r3
 498 0356 FFF7FEFF 		bl	strcmp
 499 035a 0346     		mov	r3, r0
 500 035c 002B     		cmp	r3, #0
 501 035e 68D1     		bne	.L18
 110:main.c        **** 					if (cmd == 's') {
 502              		.loc 2 110 0
 503 0360 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 504 0362 732B     		cmp	r3, #115
 505 0364 36D1     		bne	.L28
 111:main.c        **** 						if (argc < 3) {
 506              		.loc 2 111 0
 507 0366 BB69     		ldr	r3, [r7, #24]
 508 0368 022B     		cmp	r3, #2
 509 036a 06DC     		bgt	.L29
 112:main.c        **** 							puts("? arg");
 510              		.loc 2 112 0
 511 036c 40F20000 		movw	r0, #:lower16:.LC7
 512 0370 C0F20000 		movt	r0, #:upper16:.LC7
 513 0374 FFF7FEFF 		bl	puts
 113:main.c        **** 							break;
 514              		.loc 2 113 0
 515 0378 BBE0     		b	.L5
 516              	.L29:
 114:main.c        **** 						}
 115:main.c        **** 						loops[id].Kp = argv[0];
ARM GAS  /tmp/ccHZkoRj.s 			page 39


 517              		.loc 2 115 0
 518 037a 7B68     		ldr	r3, [r7, #4]
 519 037c 9AB2     		uxth	r2, r3
 520 037e 40F20003 		movw	r3, #:lower16:loops
 521 0382 C0F20003 		movt	r3, #:upper16:loops
 522 0386 396A     		ldr	r1, [r7, #32]
 523 0388 4FF02C00 		mov	r0, #44
 524 038c 00FB01F1 		mul	r1, r0, r1
 525 0390 5B18     		adds	r3, r3, r1
 526 0392 03F10803 		add	r3, r3, #8
 527 0396 9A80     		strh	r2, [r3, #4]	@ movhi
 116:main.c        **** 						loops[id].Ki = argv[1];
 528              		.loc 2 116 0
 529 0398 BB68     		ldr	r3, [r7, #8]
 530 039a 9AB2     		uxth	r2, r3
 531 039c 40F20003 		movw	r3, #:lower16:loops
 532 03a0 C0F20003 		movt	r3, #:upper16:loops
 533 03a4 396A     		ldr	r1, [r7, #32]
 534 03a6 4FF02C00 		mov	r0, #44
 535 03aa 00FB01F1 		mul	r1, r0, r1
 536 03ae 5B18     		adds	r3, r3, r1
 537 03b0 03F10803 		add	r3, r3, #8
 538 03b4 DA80     		strh	r2, [r3, #6]	@ movhi
 117:main.c        **** 						loops[id].Kd = argv[2];
 539              		.loc 2 117 0
 540 03b6 FB68     		ldr	r3, [r7, #12]
 541 03b8 9AB2     		uxth	r2, r3
 542 03ba 40F20003 		movw	r3, #:lower16:loops
 543 03be C0F20003 		movt	r3, #:upper16:loops
 544 03c2 396A     		ldr	r1, [r7, #32]
 545 03c4 4FF02C00 		mov	r0, #44
 546 03c8 00FB01F1 		mul	r1, r0, r1
 547 03cc 5B18     		adds	r3, r3, r1
 548 03ce 03F11003 		add	r3, r3, #16
 549 03d2 1A80     		strh	r2, [r3, #0]	@ movhi
 550              	.L28:
 118:main.c        **** 					}
 119:main.c        **** 					printf("%u %u %u\n", loops[id].Kp, loops[id].Ki, loops[id].Kd);
 551              		.loc 2 119 0
 552 03d4 40F20003 		movw	r3, #:lower16:loops
 553 03d8 C0F20003 		movt	r3, #:upper16:loops
 554 03dc 3A6A     		ldr	r2, [r7, #32]
 555 03de 4FF02C01 		mov	r1, #44
 556 03e2 01FB02F2 		mul	r2, r1, r2
 557 03e6 9B18     		adds	r3, r3, r2
 558 03e8 03F10803 		add	r3, r3, #8
 559 03ec 9B88     		ldrh	r3, [r3, #4]
 560 03ee 1946     		mov	r1, r3
 561 03f0 40F20003 		movw	r3, #:lower16:loops
 562 03f4 C0F20003 		movt	r3, #:upper16:loops
 563 03f8 3A6A     		ldr	r2, [r7, #32]
 564 03fa 4FF02C00 		mov	r0, #44
 565 03fe 00FB02F2 		mul	r2, r0, r2
 566 0402 9B18     		adds	r3, r3, r2
 567 0404 03F10803 		add	r3, r3, #8
 568 0408 DB88     		ldrh	r3, [r3, #6]
 569 040a 1A46     		mov	r2, r3
ARM GAS  /tmp/ccHZkoRj.s 			page 40


 570 040c 40F20003 		movw	r3, #:lower16:loops
 571 0410 C0F20003 		movt	r3, #:upper16:loops
 572 0414 386A     		ldr	r0, [r7, #32]
 573 0416 4FF02C04 		mov	r4, #44
 574 041a 04FB00F0 		mul	r0, r4, r0
 575 041e 1B18     		adds	r3, r3, r0
 576 0420 03F11003 		add	r3, r3, #16
 577 0424 1B88     		ldrh	r3, [r3, #0]
 578 0426 40F20000 		movw	r0, #:lower16:.LC14
 579 042a C0F20000 		movt	r0, #:upper16:.LC14
 580 042e FFF7FEFF 		bl	iprintf
 581              	.L18:
 120:main.c        **** 				}
 121:main.c        **** 				if (match("limit", opt)) {
 582              		.loc 2 121 0
 583 0432 07F11003 		add	r3, r7, #16
 584 0436 40F20000 		movw	r0, #:lower16:.LC15
 585 043a C0F20000 		movt	r0, #:upper16:.LC15
 586 043e 1946     		mov	r1, r3
 587 0440 FFF7FEFF 		bl	strcmp
 588 0444 0346     		mov	r3, r0
 589 0446 002B     		cmp	r3, #0
 590 0448 42D1     		bne	.L30
 122:main.c        **** 					if (cmd == 's') {
 591              		.loc 2 122 0
 592 044a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 593 044c 732B     		cmp	r3, #115
 594 044e 26D1     		bne	.L31
 123:main.c        **** 						if (argc < 2) {
 595              		.loc 2 123 0
 596 0450 BB69     		ldr	r3, [r7, #24]
 597 0452 012B     		cmp	r3, #1
 598 0454 06DC     		bgt	.L32
 124:main.c        **** 							puts("? arg");
 599              		.loc 2 124 0
 600 0456 40F20000 		movw	r0, #:lower16:.LC7
 601 045a C0F20000 		movt	r0, #:upper16:.LC7
 602 045e FFF7FEFF 		bl	puts
 125:main.c        **** 							break;
 603              		.loc 2 125 0
 604 0462 46E0     		b	.L5
 605              	.L32:
 126:main.c        **** 						}
 127:main.c        **** 						conf[id].min = argv[0] < argv[1] ? argv[0] : argv[1];
 606              		.loc 2 127 0
 607 0464 BA68     		ldr	r2, [r7, #8]
 608 0466 7B68     		ldr	r3, [r7, #4]
 609 0468 9A42     		cmp	r2, r3
 610 046a B8BF     		it	lt
 611 046c 1346     		movlt	r3, r2
 612 046e 99B2     		uxth	r1, r3
 613 0470 40F20003 		movw	r3, #:lower16:conf
 614 0474 C0F20003 		movt	r3, #:upper16:conf
 615 0478 3A6A     		ldr	r2, [r7, #32]
 616 047a 23F83210 		strh	r1, [r3, r2, lsl #3]	@ movhi
 128:main.c        **** 						conf[id].max = argv[0] < argv[1] ? argv[1] : argv[0];
 617              		.loc 2 128 0
ARM GAS  /tmp/ccHZkoRj.s 			page 41


 618 047e 7A68     		ldr	r2, [r7, #4]
 619 0480 BB68     		ldr	r3, [r7, #8]
 620 0482 9A42     		cmp	r2, r3
 621 0484 A8BF     		it	ge
 622 0486 1346     		movge	r3, r2
 623 0488 99B2     		uxth	r1, r3
 624 048a 40F20002 		movw	r2, #:lower16:conf
 625 048e C0F20002 		movt	r2, #:upper16:conf
 626 0492 3B6A     		ldr	r3, [r7, #32]
 627 0494 4FEAC303 		lsl	r3, r3, #3
 628 0498 D318     		adds	r3, r2, r3
 629 049a 0A46     		mov	r2, r1	@ movhi
 630 049c 5A80     		strh	r2, [r3, #2]	@ movhi
 631              	.L31:
 129:main.c        **** 					}
 130:main.c        **** 					printf("%u %u\n", conf[id].min, conf[id].max);
 632              		.loc 2 130 0
 633 049e 40F20003 		movw	r3, #:lower16:conf
 634 04a2 C0F20003 		movt	r3, #:upper16:conf
 635 04a6 3A6A     		ldr	r2, [r7, #32]
 636 04a8 33F83230 		ldrh	r3, [r3, r2, lsl #3]
 637 04ac 1946     		mov	r1, r3
 638 04ae 40F20002 		movw	r2, #:lower16:conf
 639 04b2 C0F20002 		movt	r2, #:upper16:conf
 640 04b6 3B6A     		ldr	r3, [r7, #32]
 641 04b8 4FEAC303 		lsl	r3, r3, #3
 642 04bc D318     		adds	r3, r2, r3
 643 04be 5B88     		ldrh	r3, [r3, #2]
 644 04c0 40F20000 		movw	r0, #:lower16:.LC16
 645 04c4 C0F20000 		movt	r0, #:upper16:.LC16
 646 04c8 1A46     		mov	r2, r3
 647 04ca FFF7FEFF 		bl	iprintf
 131:main.c        **** 				}
 132:main.c        **** 				else 
 133:main.c        **** 					puts("? opt");
 134:main.c        **** 				break;
 648              		.loc 2 134 0
 649 04ce 10E0     		b	.L5
 650              	.L30:
 133:main.c        **** 					puts("? opt");
 651              		.loc 2 133 0
 652 04d0 40F20000 		movw	r0, #:lower16:.LC4
 653 04d4 C0F20000 		movt	r0, #:upper16:.LC4
 654 04d8 FFF7FEFF 		bl	puts
 655              		.loc 2 134 0
 656 04dc 09E0     		b	.L5
 657              	.L6:
 135:main.c        **** 			case 'l':
 136:main.c        **** 			case 'q':
 137:main.c        **** 				break;
 138:main.c        **** 			default:
 139:main.c        **** 				puts("? cmd");
 658              		.loc 2 139 0
 659 04de 40F20000 		movw	r0, #:lower16:.LC17
 660 04e2 C0F20000 		movt	r0, #:upper16:.LC17
 661 04e6 FFF7FEFF 		bl	puts
 140:main.c        **** 		}
ARM GAS  /tmp/ccHZkoRj.s 			page 42


 141:main.c        **** 	}
 662              		.loc 2 141 0
 663 04ea CBE5     		b	.L34
 664              	.L36:
  48:main.c        **** 			continue;
 665              		.loc 2 48 0
 666 04ec 00BF     		nop
 667 04ee 00E0     		b	.L5
 668              	.L37:
 137:main.c        **** 				break;
 669              		.loc 2 137 0
 670 04f0 00BF     		nop
 671              	.L5:
 672              		.loc 2 141 0
 673 04f2 C7E5     		b	.L34
 674              		.cfi_endproc
 675              	.LFE35:
 676              		.size	main, .-main
 677              		.section	.text.TC1_IrqHandler,"ax",%progbits
 678              		.align	2
 679              		.global	TC1_IrqHandler
 680              		.thumb
 681              		.thumb_func
 682              		.type	TC1_IrqHandler, %function
 683              	TC1_IrqHandler:
 684              	.LFB36:
 142:main.c        **** 	return 0;
 143:main.c        **** }
 144:main.c        **** 
 145:main.c        **** void TC1_IrqHandler()
 146:main.c        **** {
 685              		.loc 2 146 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 8
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690 0000 80B4     		push	{r7}
 691              	.LCFI6:
 692              		.cfi_def_cfa_offset 4
 693              		.cfi_offset 7, -4
 694 0002 83B0     		sub	sp, sp, #12
 695              	.LCFI7:
 696              		.cfi_def_cfa_offset 16
 697 0004 00AF     		add	r7, sp, #0
 698              	.LCFI8:
 699              		.cfi_def_cfa_register 7
 147:main.c        **** 	uint8_t i;
 148:main.c        **** 	struct ctrl *loop = loops;
 700              		.loc 2 148 0
 701 0006 40F20003 		movw	r3, #:lower16:loops
 702 000a C0F20003 		movt	r3, #:upper16:loops
 703 000e 3B60     		str	r3, [r7, #0]
 149:main.c        **** 
 150:main.c        **** 	for (i=0; i < LOOPS; i++, loop++) {
 704              		.loc 2 150 0
 705 0010 4FF00003 		mov	r3, #0
 706 0014 FB71     		strb	r3, [r7, #7]
ARM GAS  /tmp/ccHZkoRj.s 			page 43


 707 0016 22E0     		b	.L39
 708              	.L41:
 151:main.c        **** 		if ((ADC->ADC_CHSR & (1<<i)) == 0 && loop->mode > OFF)
 709              		.loc 2 151 0
 710 0018 4FF40043 		mov	r3, #32768
 711 001c C4F20303 		movt	r3, 16387
 712 0020 9A69     		ldr	r2, [r3, #24]
 713 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 714 0024 4FF00101 		mov	r1, #1
 715 0028 01FA03F3 		lsl	r3, r1, r3
 716 002c 1340     		ands	r3, r3, r2
 717 002e 002B     		cmp	r3, #0
 718 0030 0DD1     		bne	.L40
 719              		.loc 2 151 0 is_stmt 0 discriminator 1
 720 0032 3B68     		ldr	r3, [r7, #0]
 721 0034 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 722 0036 002B     		cmp	r3, #0
 723 0038 09D0     		beq	.L40
 152:main.c        **** 			ADC->ADC_CHER = (1<<i); // enable channel
 724              		.loc 2 152 0 is_stmt 1
 725 003a 4FF40043 		mov	r3, #32768
 726 003e C4F20303 		movt	r3, 16387
 727 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 728 0044 4FF00101 		mov	r1, #1
 729 0048 01FA02F2 		lsl	r2, r1, r2
 730 004c 1A61     		str	r2, [r3, #16]
 731              	.L40:
 150:main.c        **** 	for (i=0; i < LOOPS; i++, loop++) {
 732              		.loc 2 150 0
 733 004e FB79     		ldrb	r3, [r7, #7]
 734 0050 03F10103 		add	r3, r3, #1
 735 0054 FB71     		strb	r3, [r7, #7]
 736 0056 3B68     		ldr	r3, [r7, #0]
 737 0058 03F12C03 		add	r3, r3, #44
 738 005c 3B60     		str	r3, [r7, #0]
 739              	.L39:
 150:main.c        **** 	for (i=0; i < LOOPS; i++, loop++) {
 740              		.loc 2 150 0 is_stmt 0 discriminator 1
 741 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 742 0060 012B     		cmp	r3, #1
 743 0062 D9D9     		bls	.L41
 153:main.c        **** 	}
 154:main.c        **** 	ADC_StartConversion(ADC);
 744              		.loc 2 154 0 is_stmt 1
 745 0064 4FF40043 		mov	r3, #32768
 746 0068 C4F20303 		movt	r3, 16387
 747 006c 4FF00202 		mov	r2, #2
 748 0070 1A60     		str	r2, [r3, #0]
 155:main.c        **** }
 749              		.loc 2 155 0
 750 0072 07F10C07 		add	r7, r7, #12
 751 0076 BD46     		mov	sp, r7
 752 0078 80BC     		pop	{r7}
 753 007a 7047     		bx	lr
 754              		.cfi_endproc
 755              	.LFE36:
 756              		.size	TC1_IrqHandler, .-TC1_IrqHandler
ARM GAS  /tmp/ccHZkoRj.s 			page 44


 757              		.section	.text.ADC_IrqHandler,"ax",%progbits
 758              		.align	2
 759              		.global	ADC_IrqHandler
 760              		.thumb
 761              		.thumb_func
 762              		.type	ADC_IrqHandler, %function
 763              	ADC_IrqHandler:
 764              	.LFB37:
 156:main.c        **** 
 157:main.c        **** void ADC_IrqHandler(void)
 158:main.c        **** {
 765              		.loc 2 158 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 16
 768              		@ frame_needed = 1, uses_anonymous_args = 0
 769 0000 80B5     		push	{r7, lr}
 770              	.LCFI9:
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 14, -4
 773              		.cfi_offset 7, -8
 774 0002 84B0     		sub	sp, sp, #16
 775              	.LCFI10:
 776              		.cfi_def_cfa_offset 24
 777 0004 00AF     		add	r7, sp, #0
 778              	.LCFI11:
 779              		.cfi_def_cfa_register 7
 159:main.c        **** 	uint8_t i;
 160:main.c        **** 	uint8_t msk;
 161:main.c        ****     uint32_t status;
 162:main.c        **** 	struct ctrl *loop = loops;
 780              		.loc 2 162 0
 781 0006 40F20003 		movw	r3, #:lower16:loops
 782 000a C0F20003 		movt	r3, #:upper16:loops
 783 000e BB60     		str	r3, [r7, #8]
 163:main.c        **** 	ctrlio_t x;
 164:main.c        **** 
 165:main.c        ****     status = ADC_GetStatus(ADC);
 784              		.loc 2 165 0
 785 0010 4FF40043 		mov	r3, #32768
 786 0014 C4F20303 		movt	r3, 16387
 787 0018 1B6B     		ldr	r3, [r3, #48]
 788 001a 7B60     		str	r3, [r7, #4]
 166:main.c        **** 
 167:main.c        **** 	for (i=0, msk=1; i < LOOPS; i++, msk<<=1, loop++) {
 789              		.loc 2 167 0
 790 001c 4FF00003 		mov	r3, #0
 791 0020 FB73     		strb	r3, [r7, #15]
 792 0022 4FF00103 		mov	r3, #1
 793 0026 BB73     		strb	r3, [r7, #14]
 794 0028 4EE0     		b	.L43
 795              	.L49:
 168:main.c        **** 		if (!((status & msk) == msk)) // check End of Conversion flag for channel i
 796              		.loc 2 168 0
 797 002a BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 798 002c 7B68     		ldr	r3, [r7, #4]
 799 002e 1A40     		ands	r2, r2, r3
 800 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
ARM GAS  /tmp/ccHZkoRj.s 			page 45


 801 0032 9A42     		cmp	r2, r3
 802 0034 3BD1     		bne	.L50
 803              	.L44:
 169:main.c        **** 			continue;
 170:main.c        **** 			
 171:main.c        **** 		x = (ctrlio_t) *(ADC->ADC_CDR+i); // read channel data
 804              		.loc 2 171 0
 805 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 806 0038 4FEA8302 		lsl	r2, r3, #2
 807 003c 48F25003 		movw	r3, #32848
 808 0040 C4F20303 		movt	r3, 16387
 809 0044 D318     		adds	r3, r2, r3
 810 0046 1B68     		ldr	r3, [r3, #0]
 811 0048 7B80     		strh	r3, [r7, #2]	@ movhi
 172:main.c        **** 		x = LIMIT(x, conf[i].min, conf[i].max);
 812              		.loc 2 172 0
 813 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 814 004c 40F20003 		movw	r3, #:lower16:conf
 815 0050 C0F20003 		movt	r3, #:upper16:conf
 816 0054 33F83230 		ldrh	r3, [r3, r2, lsl #3]
 817 0058 7A88     		ldrh	r2, [r7, #2]
 818 005a 9A42     		cmp	r2, r3
 819 005c 07D2     		bcs	.L46
 820              		.loc 2 172 0 is_stmt 0 discriminator 1
 821 005e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 822 0060 40F20003 		movw	r3, #:lower16:conf
 823 0064 C0F20003 		movt	r3, #:upper16:conf
 824 0068 33F83230 		ldrh	r3, [r3, r2, lsl #3]
 825 006c 0DE0     		b	.L47
 826              	.L46:
 827              		.loc 2 172 0 discriminator 2
 828 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 829 0070 40F20002 		movw	r2, #:lower16:conf
 830 0074 C0F20002 		movt	r2, #:upper16:conf
 831 0078 4FEAC303 		lsl	r3, r3, #3
 832 007c D318     		adds	r3, r2, r3
 833 007e 5A88     		ldrh	r2, [r3, #2]
 834 0080 7B88     		ldrh	r3, [r7, #2]
 835 0082 9A42     		cmp	r2, r3
 836 0084 38BF     		it	cc
 837 0086 1346     		movcc	r3, r2
 838 0088 9BB2     		uxth	r3, r3
 839              	.L47:
 840              		.loc 2 172 0 discriminator 3
 841 008a 7B80     		strh	r3, [r7, #2]	@ movhi
 173:main.c        **** 
 174:main.c        **** 		if (loop->mode > OFF) {
 842              		.loc 2 174 0 is_stmt 1 discriminator 3
 843 008c BB68     		ldr	r3, [r7, #8]
 844 008e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 845 0090 002B     		cmp	r3, #0
 846 0092 05D0     		beq	.L48
 175:main.c        **** 			control(x, loop);    // run controller
 847              		.loc 2 175 0
 848 0094 7B88     		ldrh	r3, [r7, #2]
 849 0096 1846     		mov	r0, r3
 850 0098 B968     		ldr	r1, [r7, #8]
ARM GAS  /tmp/ccHZkoRj.s 			page 46


 851 009a FFF7FEFF 		bl	control
 852 009e 07E0     		b	.L45
 853              	.L48:
 176:main.c        **** 			// write output here
 177:main.c        **** 		}
 178:main.c        **** 		else {
 179:main.c        **** 			ADC->ADC_CHDR = msk; // disable channel
 854              		.loc 2 179 0
 855 00a0 4FF40043 		mov	r3, #32768
 856 00a4 C4F20303 		movt	r3, 16387
 857 00a8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 858 00aa 5A61     		str	r2, [r3, #20]
 859 00ac 00E0     		b	.L45
 860              	.L50:
 169:main.c        **** 			continue;
 861              		.loc 2 169 0
 862 00ae 00BF     		nop
 863              	.L45:
 167:main.c        **** 	for (i=0, msk=1; i < LOOPS; i++, msk<<=1, loop++) {
 864              		.loc 2 167 0
 865 00b0 FB7B     		ldrb	r3, [r7, #15]
 866 00b2 03F10103 		add	r3, r3, #1
 867 00b6 FB73     		strb	r3, [r7, #15]
 868 00b8 BB7B     		ldrb	r3, [r7, #14]
 869 00ba 4FEA4303 		lsl	r3, r3, #1
 870 00be BB73     		strb	r3, [r7, #14]
 871 00c0 BB68     		ldr	r3, [r7, #8]
 872 00c2 03F12C03 		add	r3, r3, #44
 873 00c6 BB60     		str	r3, [r7, #8]
 874              	.L43:
 167:main.c        **** 	for (i=0, msk=1; i < LOOPS; i++, msk<<=1, loop++) {
 875              		.loc 2 167 0 is_stmt 0 discriminator 1
 876 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 877 00ca 012B     		cmp	r3, #1
 878 00cc ADD9     		bls	.L49
 180:main.c        **** 			// reset output here
 181:main.c        **** 		}
 182:main.c        **** 	}
 183:main.c        **** }
 879              		.loc 2 183 0 is_stmt 1
 880 00ce 07F11007 		add	r7, r7, #16
 881 00d2 BD46     		mov	sp, r7
 882 00d4 80BD     		pop	{r7, pc}
 883              		.cfi_endproc
 884              	.LFE37:
 885              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 886 00d6 00BF     		.section	.text.init,"ax",%progbits
 887              		.align	2
 888              		.thumb
 889              		.thumb_func
 890              		.type	init, %function
 891              	init:
 892              	.LFB38:
 184:main.c        **** 
 185:main.c        **** void init()
 186:main.c        **** {
 893              		.loc 2 186 0
ARM GAS  /tmp/ccHZkoRj.s 			page 47


 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 8
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 90B5     		push	{r4, r7, lr}
 898              	.LCFI12:
 899              		.cfi_def_cfa_offset 12
 900              		.cfi_offset 14, -4
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 4, -12
 903 0002 85B0     		sub	sp, sp, #20
 904              	.LCFI13:
 905              		.cfi_def_cfa_offset 32
 906 0004 02AF     		add	r7, sp, #8
 907              	.LCFI14:
 908              		.cfi_def_cfa 7, 24
 187:main.c        ****     uint32_t div;
 188:main.c        ****     uint32_t tcclks;
 189:main.c        **** 
 190:main.c        ****     /* Enable peripheral clock. */
 191:main.c        ****     PMC->PMC_PCER0 = 1 << ID_TC1;
 909              		.loc 2 191 0
 910 0006 4FF48063 		mov	r3, #1024
 911 000a C4F20E03 		movt	r3, 16398
 912 000e 4FF08072 		mov	r2, #16777216
 913 0012 1A61     		str	r2, [r3, #16]
 192:main.c        **** 
 193:main.c        ****     /* Configure TC */
 194:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 914              		.loc 2 194 0
 915 0014 07F10402 		add	r2, r7, #4
 916 0018 3C46     		mov	r4, r7
 917 001a 4FF4D843 		mov	r3, #27648
 918 001e C0F2DC23 		movt	r3, 732
 919 0022 0093     		str	r3, [sp, #0]
 920 0024 4FF00400 		mov	r0, #4
 921 0028 4FF4D841 		mov	r1, #27648
 922 002c C0F2DC21 		movt	r1, 732
 923 0030 2346     		mov	r3, r4
 924 0032 FFF7FEFF 		bl	TC_FindMckDivisor
 195:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 925              		.loc 2 195 0
 926 0036 3B68     		ldr	r3, [r7, #0]
 927 0038 43F48043 		orr	r3, r3, #16384
 928 003c 4FF48040 		mov	r0, #16384
 929 0040 C4F20100 		movt	r0, 16385
 930 0044 4FF00001 		mov	r1, #0
 931 0048 1A46     		mov	r2, r3
 932 004a FFF7FEFF 		bl	TC_Configure
 196:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
 933              		.loc 2 196 0
 934 004e 4FF48043 		mov	r3, #16384
 935 0052 C4F20103 		movt	r3, 16385
 936 0056 7968     		ldr	r1, [r7, #4]
 937 0058 4FF4D852 		mov	r2, #6912
 938 005c C0F2B702 		movt	r2, 183
 939 0060 B2FBF1F2 		udiv	r2, r2, r1
 940 0064 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccHZkoRj.s 			page 48


 197:main.c        **** 
 198:main.c        ****     /* Configure and enable interrupt on RC compare */
 199:main.c        ****     NVIC_EnableIRQ((IRQn_Type) ID_TC1);
 941              		.loc 2 199 0
 942 0066 4FF01800 		mov	r0, #24
 943 006a FFF7FEFF 		bl	NVIC_EnableIRQ
 200:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 944              		.loc 2 200 0
 945 006e 4FF48043 		mov	r3, #16384
 946 0072 C4F20103 		movt	r3, 16385
 947 0076 4FF01002 		mov	r2, #16
 948 007a 5A62     		str	r2, [r3, #36]
 201:main.c        **** 
 202:main.c        **** 	/* Tick Config */
 203:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 949              		.loc 2 203 0
 950 007c 4FF4D840 		mov	r0, #27648
 951 0080 C0F2DC20 		movt	r0, 732
 952 0084 FFF7FEFF 		bl	TimeTick_Configure
 204:main.c        **** 
 205:main.c        ****     /* Initialize ADC */
 206:main.c        ****     ADC_Initialize( ADC, ID_ADC );
 953              		.loc 2 206 0
 954 0088 4FF40040 		mov	r0, #32768
 955 008c C4F20300 		movt	r0, 16387
 956 0090 4FF01D01 		mov	r1, #29
 957 0094 FFF7FEFF 		bl	ADC_Initialize
 207:main.c        **** 
 208:main.c        ****     /* startup = 15, prescal = 4, ADC clock = 6.4 MHz */
 209:main.c        ****     ADC_cfgFrequency( ADC, 15, 4 );
 958              		.loc 2 209 0
 959 0098 4FF40040 		mov	r0, #32768
 960 009c C4F20300 		movt	r0, 16387
 961 00a0 4FF00F01 		mov	r1, #15
 962 00a4 4FF00402 		mov	r2, #4
 963 00a8 FFF7FEFF 		bl	ADC_cfgFrequency
 210:main.c        **** 
 211:main.c        ****     /* Enable ADC interrupt */
 212:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
 964              		.loc 2 212 0
 965 00ac 4FF01D00 		mov	r0, #29
 966 00b0 FFF7FEFF 		bl	NVIC_EnableIRQ
 213:main.c        ****     ADC->ADC_IER = ADC_EOC_IRQS;
 967              		.loc 2 213 0
 968 00b4 4FF40043 		mov	r3, #32768
 969 00b8 C4F20303 		movt	r3, 16387
 970 00bc 4FF00302 		mov	r2, #3
 971 00c0 5A62     		str	r2, [r3, #36]
 214:main.c        **** 
 215:main.c        **** 	/* LED PIO Config */
 216:main.c        **** 	LEDs_configure();
 972              		.loc 2 216 0
 973 00c2 FFF7FEFF 		bl	LEDs_configure
 217:main.c        **** 	LED_clr(statusled);
 974              		.loc 2 217 0
 975 00c6 4FF00000 		mov	r0, #0
 976 00ca FFF7FEFF 		bl	LED_clr
ARM GAS  /tmp/ccHZkoRj.s 			page 49


 218:main.c        **** 
 219:main.c        **** 	/* USB Console Config */
 220:main.c        **** 	USBC_Configure();
 977              		.loc 2 220 0
 978 00ce FFF7FEFF 		bl	USBC_Configure
 221:main.c        **** 
 222:main.c        **** }
 979              		.loc 2 222 0
 980 00d2 07F10C07 		add	r7, r7, #12
 981 00d6 BD46     		mov	sp, r7
 982 00d8 90BD     		pop	{r4, r7, pc}
 983              		.cfi_endproc
 984              	.LFE38:
 985              		.size	init, .-init
 986 00da 00BF     		.text
 987              	.Letext0:
 988              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 989              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 990              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 991              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 992              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 993              		.file 8 "libchip/include/SAM3S.h"
 994              		.file 9 "controller.h"
 995              		.section	.debug_info,"",%progbits
 996              	.Ldebug_info0:
 997 0000 A4150000 		.4byte	0x15a4
 998 0004 0200     		.2byte	0x2
 999 0006 00000000 		.4byte	.Ldebug_abbrev0
 1000 000a 04       		.byte	0x4
 1001 000b 01       		.uleb128 0x1
 1002 000c 46090000 		.4byte	.LASF287
 1003 0010 01       		.byte	0x1
 1004 0011 4F050000 		.4byte	.LASF288
 1005 0015 6C080000 		.4byte	.LASF289
 1006 0019 00000000 		.4byte	0
 1007 001d 00000000 		.4byte	0
 1008 0021 00000000 		.4byte	.Ldebug_ranges0+0
 1009 0025 00000000 		.4byte	.Ldebug_line0
 1010 0029 02       		.uleb128 0x2
 1011 002a 01       		.byte	0x1
 1012 002b 06       		.byte	0x6
 1013 002c 22020000 		.4byte	.LASF0
 1014 0030 02       		.uleb128 0x2
 1015 0031 01       		.byte	0x1
 1016 0032 08       		.byte	0x8
 1017 0033 4A020000 		.4byte	.LASF1
 1018 0037 02       		.uleb128 0x2
 1019 0038 02       		.byte	0x2
 1020 0039 05       		.byte	0x5
 1021 003a B0080000 		.4byte	.LASF2
 1022 003e 02       		.uleb128 0x2
 1023 003f 02       		.byte	0x2
 1024 0040 07       		.byte	0x7
 1025 0041 B0090000 		.4byte	.LASF3
 1026 0045 03       		.uleb128 0x3
 1027 0046 04       		.byte	0x4
 1028 0047 05       		.byte	0x5
ARM GAS  /tmp/ccHZkoRj.s 			page 50


 1029 0048 696E7400 		.ascii	"int\000"
 1030 004c 02       		.uleb128 0x2
 1031 004d 04       		.byte	0x4
 1032 004e 07       		.byte	0x7
 1033 004f C7050000 		.4byte	.LASF4
 1034 0053 02       		.uleb128 0x2
 1035 0054 08       		.byte	0x8
 1036 0055 05       		.byte	0x5
 1037 0056 0E050000 		.4byte	.LASF5
 1038 005a 02       		.uleb128 0x2
 1039 005b 08       		.byte	0x8
 1040 005c 07       		.byte	0x7
 1041 005d C7060000 		.4byte	.LASF6
 1042 0061 04       		.uleb128 0x4
 1043 0062 65040000 		.4byte	.LASF8
 1044 0066 03       		.byte	0x3
 1045 0067 07       		.byte	0x7
 1046 0068 45000000 		.4byte	0x45
 1047 006c 02       		.uleb128 0x2
 1048 006d 04       		.byte	0x4
 1049 006e 05       		.byte	0x5
 1050 006f 7B010000 		.4byte	.LASF7
 1051 0073 04       		.uleb128 0x4
 1052 0074 91060000 		.4byte	.LASF9
 1053 0078 04       		.byte	0x4
 1054 0079 2C       		.byte	0x2c
 1055 007a 6C000000 		.4byte	0x6c
 1056 007e 05       		.uleb128 0x5
 1057 007f AC070000 		.4byte	.LASF10
 1058 0083 05       		.byte	0x5
 1059 0084 6101     		.2byte	0x161
 1060 0086 4C000000 		.4byte	0x4c
 1061 008a 06       		.uleb128 0x6
 1062 008b 04       		.byte	0x4
 1063 008c 04       		.byte	0x4
 1064 008d 46       		.byte	0x46
 1065 008e A9000000 		.4byte	0xa9
 1066 0092 07       		.uleb128 0x7
 1067 0093 17010000 		.4byte	.LASF11
 1068 0097 04       		.byte	0x4
 1069 0098 48       		.byte	0x48
 1070 0099 7E000000 		.4byte	0x7e
 1071 009d 07       		.uleb128 0x7
 1072 009e 99060000 		.4byte	.LASF12
 1073 00a2 04       		.byte	0x4
 1074 00a3 49       		.byte	0x49
 1075 00a4 A9000000 		.4byte	0xa9
 1076 00a8 00       		.byte	0
 1077 00a9 08       		.uleb128 0x8
 1078 00aa 30000000 		.4byte	0x30
 1079 00ae B9000000 		.4byte	0xb9
 1080 00b2 09       		.uleb128 0x9
 1081 00b3 4C000000 		.4byte	0x4c
 1082 00b7 03       		.byte	0x3
 1083 00b8 00       		.byte	0
 1084 00b9 0A       		.uleb128 0xa
 1085 00ba 08       		.byte	0x8
ARM GAS  /tmp/ccHZkoRj.s 			page 51


 1086 00bb 04       		.byte	0x4
 1087 00bc 43       		.byte	0x43
 1088 00bd DE000000 		.4byte	0xde
 1089 00c1 0B       		.uleb128 0xb
 1090 00c2 4E060000 		.4byte	.LASF13
 1091 00c6 04       		.byte	0x4
 1092 00c7 45       		.byte	0x45
 1093 00c8 45000000 		.4byte	0x45
 1094 00cc 02       		.byte	0x2
 1095 00cd 23       		.byte	0x23
 1096 00ce 00       		.uleb128 0
 1097 00cf 0B       		.uleb128 0xb
 1098 00d0 34000000 		.4byte	.LASF14
 1099 00d4 04       		.byte	0x4
 1100 00d5 4A       		.byte	0x4a
 1101 00d6 8A000000 		.4byte	0x8a
 1102 00da 02       		.byte	0x2
 1103 00db 23       		.byte	0x23
 1104 00dc 04       		.uleb128 0x4
 1105 00dd 00       		.byte	0
 1106 00de 04       		.uleb128 0x4
 1107 00df 89070000 		.4byte	.LASF15
 1108 00e3 04       		.byte	0x4
 1109 00e4 4B       		.byte	0x4b
 1110 00e5 B9000000 		.4byte	0xb9
 1111 00e9 04       		.uleb128 0x4
 1112 00ea 72070000 		.4byte	.LASF16
 1113 00ee 04       		.byte	0x4
 1114 00ef 4F       		.byte	0x4f
 1115 00f0 61000000 		.4byte	0x61
 1116 00f4 0C       		.uleb128 0xc
 1117 00f5 04       		.byte	0x4
 1118 00f6 04       		.uleb128 0x4
 1119 00f7 6F090000 		.4byte	.LASF17
 1120 00fb 06       		.byte	0x6
 1121 00fc 15       		.byte	0x15
 1122 00fd 01010000 		.4byte	0x101
 1123 0101 02       		.uleb128 0x2
 1124 0102 04       		.byte	0x4
 1125 0103 07       		.byte	0x7
 1126 0104 04040000 		.4byte	.LASF18
 1127 0108 0D       		.uleb128 0xd
 1128 0109 C0040000 		.4byte	.LASF23
 1129 010d 18       		.byte	0x18
 1130 010e 06       		.byte	0x6
 1131 010f 2C       		.byte	0x2c
 1132 0110 67010000 		.4byte	0x167
 1133 0114 0B       		.uleb128 0xb
 1134 0115 CF070000 		.4byte	.LASF19
 1135 0119 06       		.byte	0x6
 1136 011a 2E       		.byte	0x2e
 1137 011b 67010000 		.4byte	0x167
 1138 011f 02       		.byte	0x2
 1139 0120 23       		.byte	0x23
 1140 0121 00       		.uleb128 0
 1141 0122 0E       		.uleb128 0xe
 1142 0123 5F6B00   		.ascii	"_k\000"
ARM GAS  /tmp/ccHZkoRj.s 			page 52


 1143 0126 06       		.byte	0x6
 1144 0127 2F       		.byte	0x2f
 1145 0128 45000000 		.4byte	0x45
 1146 012c 02       		.byte	0x2
 1147 012d 23       		.byte	0x23
 1148 012e 04       		.uleb128 0x4
 1149 012f 0B       		.uleb128 0xb
 1150 0130 C8040000 		.4byte	.LASF20
 1151 0134 06       		.byte	0x6
 1152 0135 2F       		.byte	0x2f
 1153 0136 45000000 		.4byte	0x45
 1154 013a 02       		.byte	0x2
 1155 013b 23       		.byte	0x23
 1156 013c 08       		.uleb128 0x8
 1157 013d 0B       		.uleb128 0xb
 1158 013e AF050000 		.4byte	.LASF21
 1159 0142 06       		.byte	0x6
 1160 0143 2F       		.byte	0x2f
 1161 0144 45000000 		.4byte	0x45
 1162 0148 02       		.byte	0x2
 1163 0149 23       		.byte	0x23
 1164 014a 0C       		.uleb128 0xc
 1165 014b 0B       		.uleb128 0xb
 1166 014c 4F030000 		.4byte	.LASF22
 1167 0150 06       		.byte	0x6
 1168 0151 2F       		.byte	0x2f
 1169 0152 45000000 		.4byte	0x45
 1170 0156 02       		.byte	0x2
 1171 0157 23       		.byte	0x23
 1172 0158 10       		.uleb128 0x10
 1173 0159 0E       		.uleb128 0xe
 1174 015a 5F7800   		.ascii	"_x\000"
 1175 015d 06       		.byte	0x6
 1176 015e 30       		.byte	0x30
 1177 015f 6D010000 		.4byte	0x16d
 1178 0163 02       		.byte	0x2
 1179 0164 23       		.byte	0x23
 1180 0165 14       		.uleb128 0x14
 1181 0166 00       		.byte	0
 1182 0167 0F       		.uleb128 0xf
 1183 0168 04       		.byte	0x4
 1184 0169 08010000 		.4byte	0x108
 1185 016d 08       		.uleb128 0x8
 1186 016e F6000000 		.4byte	0xf6
 1187 0172 7D010000 		.4byte	0x17d
 1188 0176 09       		.uleb128 0x9
 1189 0177 4C000000 		.4byte	0x4c
 1190 017b 00       		.byte	0
 1191 017c 00       		.byte	0
 1192 017d 0D       		.uleb128 0xd
 1193 017e 98000000 		.4byte	.LASF24
 1194 0182 24       		.byte	0x24
 1195 0183 06       		.byte	0x6
 1196 0184 34       		.byte	0x34
 1197 0185 08020000 		.4byte	0x208
 1198 0189 0B       		.uleb128 0xb
 1199 018a B4000000 		.4byte	.LASF25
ARM GAS  /tmp/ccHZkoRj.s 			page 53


 1200 018e 06       		.byte	0x6
 1201 018f 36       		.byte	0x36
 1202 0190 45000000 		.4byte	0x45
 1203 0194 02       		.byte	0x2
 1204 0195 23       		.byte	0x23
 1205 0196 00       		.uleb128 0
 1206 0197 0B       		.uleb128 0xb
 1207 0198 490A0000 		.4byte	.LASF26
 1208 019c 06       		.byte	0x6
 1209 019d 37       		.byte	0x37
 1210 019e 45000000 		.4byte	0x45
 1211 01a2 02       		.byte	0x2
 1212 01a3 23       		.byte	0x23
 1213 01a4 04       		.uleb128 0x4
 1214 01a5 0B       		.uleb128 0xb
 1215 01a6 CC090000 		.4byte	.LASF27
 1216 01aa 06       		.byte	0x6
 1217 01ab 38       		.byte	0x38
 1218 01ac 45000000 		.4byte	0x45
 1219 01b0 02       		.byte	0x2
 1220 01b1 23       		.byte	0x23
 1221 01b2 08       		.uleb128 0x8
 1222 01b3 0B       		.uleb128 0xb
 1223 01b4 FD050000 		.4byte	.LASF28
 1224 01b8 06       		.byte	0x6
 1225 01b9 39       		.byte	0x39
 1226 01ba 45000000 		.4byte	0x45
 1227 01be 02       		.byte	0x2
 1228 01bf 23       		.byte	0x23
 1229 01c0 0C       		.uleb128 0xc
 1230 01c1 0B       		.uleb128 0xb
 1231 01c2 EE010000 		.4byte	.LASF29
 1232 01c6 06       		.byte	0x6
 1233 01c7 3A       		.byte	0x3a
 1234 01c8 45000000 		.4byte	0x45
 1235 01cc 02       		.byte	0x2
 1236 01cd 23       		.byte	0x23
 1237 01ce 10       		.uleb128 0x10
 1238 01cf 0B       		.uleb128 0xb
 1239 01d0 EA080000 		.4byte	.LASF30
 1240 01d4 06       		.byte	0x6
 1241 01d5 3B       		.byte	0x3b
 1242 01d6 45000000 		.4byte	0x45
 1243 01da 02       		.byte	0x2
 1244 01db 23       		.byte	0x23
 1245 01dc 14       		.uleb128 0x14
 1246 01dd 0B       		.uleb128 0xb
 1247 01de 5D060000 		.4byte	.LASF31
 1248 01e2 06       		.byte	0x6
 1249 01e3 3C       		.byte	0x3c
 1250 01e4 45000000 		.4byte	0x45
 1251 01e8 02       		.byte	0x2
 1252 01e9 23       		.byte	0x23
 1253 01ea 18       		.uleb128 0x18
 1254 01eb 0B       		.uleb128 0xb
 1255 01ec 67060000 		.4byte	.LASF32
 1256 01f0 06       		.byte	0x6
ARM GAS  /tmp/ccHZkoRj.s 			page 54


 1257 01f1 3D       		.byte	0x3d
 1258 01f2 45000000 		.4byte	0x45
 1259 01f6 02       		.byte	0x2
 1260 01f7 23       		.byte	0x23
 1261 01f8 1C       		.uleb128 0x1c
 1262 01f9 0B       		.uleb128 0xb
 1263 01fa 3E0A0000 		.4byte	.LASF33
 1264 01fe 06       		.byte	0x6
 1265 01ff 3E       		.byte	0x3e
 1266 0200 45000000 		.4byte	0x45
 1267 0204 02       		.byte	0x2
 1268 0205 23       		.byte	0x23
 1269 0206 20       		.uleb128 0x20
 1270 0207 00       		.byte	0
 1271 0208 10       		.uleb128 0x10
 1272 0209 37010000 		.4byte	.LASF34
 1273 020d 0801     		.2byte	0x108
 1274 020f 06       		.byte	0x6
 1275 0210 47       		.byte	0x47
 1276 0211 51020000 		.4byte	0x251
 1277 0215 0B       		.uleb128 0xb
 1278 0216 2E0A0000 		.4byte	.LASF35
 1279 021a 06       		.byte	0x6
 1280 021b 48       		.byte	0x48
 1281 021c 51020000 		.4byte	0x251
 1282 0220 02       		.byte	0x2
 1283 0221 23       		.byte	0x23
 1284 0222 00       		.uleb128 0
 1285 0223 0B       		.uleb128 0xb
 1286 0224 E7060000 		.4byte	.LASF36
 1287 0228 06       		.byte	0x6
 1288 0229 49       		.byte	0x49
 1289 022a 51020000 		.4byte	0x251
 1290 022e 03       		.byte	0x3
 1291 022f 23       		.byte	0x23
 1292 0230 8001     		.uleb128 0x80
 1293 0232 0B       		.uleb128 0xb
 1294 0233 D7080000 		.4byte	.LASF37
 1295 0237 06       		.byte	0x6
 1296 0238 4B       		.byte	0x4b
 1297 0239 F6000000 		.4byte	0xf6
 1298 023d 03       		.byte	0x3
 1299 023e 23       		.byte	0x23
 1300 023f 8002     		.uleb128 0x100
 1301 0241 0B       		.uleb128 0xb
 1302 0242 3E090000 		.4byte	.LASF38
 1303 0246 06       		.byte	0x6
 1304 0247 4E       		.byte	0x4e
 1305 0248 F6000000 		.4byte	0xf6
 1306 024c 03       		.byte	0x3
 1307 024d 23       		.byte	0x23
 1308 024e 8402     		.uleb128 0x104
 1309 0250 00       		.byte	0
 1310 0251 08       		.uleb128 0x8
 1311 0252 F4000000 		.4byte	0xf4
 1312 0256 61020000 		.4byte	0x261
 1313 025a 09       		.uleb128 0x9
ARM GAS  /tmp/ccHZkoRj.s 			page 55


 1314 025b 4C000000 		.4byte	0x4c
 1315 025f 1F       		.byte	0x1f
 1316 0260 00       		.byte	0
 1317 0261 0D       		.uleb128 0xd
 1318 0262 46060000 		.4byte	.LASF39
 1319 0266 8C       		.byte	0x8c
 1320 0267 06       		.byte	0x6
 1321 0268 52       		.byte	0x52
 1322 0269 A7020000 		.4byte	0x2a7
 1323 026d 0B       		.uleb128 0xb
 1324 026e CF070000 		.4byte	.LASF19
 1325 0272 06       		.byte	0x6
 1326 0273 53       		.byte	0x53
 1327 0274 A7020000 		.4byte	0x2a7
 1328 0278 02       		.byte	0x2
 1329 0279 23       		.byte	0x23
 1330 027a 00       		.uleb128 0
 1331 027b 0B       		.uleb128 0xb
 1332 027c 21090000 		.4byte	.LASF40
 1333 0280 06       		.byte	0x6
 1334 0281 54       		.byte	0x54
 1335 0282 45000000 		.4byte	0x45
 1336 0286 02       		.byte	0x2
 1337 0287 23       		.byte	0x23
 1338 0288 04       		.uleb128 0x4
 1339 0289 0B       		.uleb128 0xb
 1340 028a BF020000 		.4byte	.LASF41
 1341 028e 06       		.byte	0x6
 1342 028f 55       		.byte	0x55
 1343 0290 AD020000 		.4byte	0x2ad
 1344 0294 02       		.byte	0x2
 1345 0295 23       		.byte	0x23
 1346 0296 08       		.uleb128 0x8
 1347 0297 0B       		.uleb128 0xb
 1348 0298 1C050000 		.4byte	.LASF42
 1349 029c 06       		.byte	0x6
 1350 029d 56       		.byte	0x56
 1351 029e C5020000 		.4byte	0x2c5
 1352 02a2 03       		.byte	0x3
 1353 02a3 23       		.byte	0x23
 1354 02a4 8801     		.uleb128 0x88
 1355 02a6 00       		.byte	0
 1356 02a7 0F       		.uleb128 0xf
 1357 02a8 04       		.byte	0x4
 1358 02a9 61020000 		.4byte	0x261
 1359 02ad 08       		.uleb128 0x8
 1360 02ae BF020000 		.4byte	0x2bf
 1361 02b2 BD020000 		.4byte	0x2bd
 1362 02b6 09       		.uleb128 0x9
 1363 02b7 4C000000 		.4byte	0x4c
 1364 02bb 1F       		.byte	0x1f
 1365 02bc 00       		.byte	0
 1366 02bd 11       		.uleb128 0x11
 1367 02be 01       		.byte	0x1
 1368 02bf 0F       		.uleb128 0xf
 1369 02c0 04       		.byte	0x4
 1370 02c1 BD020000 		.4byte	0x2bd
ARM GAS  /tmp/ccHZkoRj.s 			page 56


 1371 02c5 0F       		.uleb128 0xf
 1372 02c6 04       		.byte	0x4
 1373 02c7 08020000 		.4byte	0x208
 1374 02cb 0D       		.uleb128 0xd
 1375 02cc 37090000 		.4byte	.LASF43
 1376 02d0 08       		.byte	0x8
 1377 02d1 06       		.byte	0x6
 1378 02d2 69       		.byte	0x69
 1379 02d3 F4020000 		.4byte	0x2f4
 1380 02d7 0B       		.uleb128 0xb
 1381 02d8 2B070000 		.4byte	.LASF44
 1382 02dc 06       		.byte	0x6
 1383 02dd 6A       		.byte	0x6a
 1384 02de F4020000 		.4byte	0x2f4
 1385 02e2 02       		.byte	0x2
 1386 02e3 23       		.byte	0x23
 1387 02e4 00       		.uleb128 0
 1388 02e5 0B       		.uleb128 0xb
 1389 02e6 9A010000 		.4byte	.LASF45
 1390 02ea 06       		.byte	0x6
 1391 02eb 6B       		.byte	0x6b
 1392 02ec 45000000 		.4byte	0x45
 1393 02f0 02       		.byte	0x2
 1394 02f1 23       		.byte	0x23
 1395 02f2 04       		.uleb128 0x4
 1396 02f3 00       		.byte	0
 1397 02f4 0F       		.uleb128 0xf
 1398 02f5 04       		.byte	0x4
 1399 02f6 30000000 		.4byte	0x30
 1400 02fa 12       		.uleb128 0x12
 1401 02fb 80020000 		.4byte	.LASF46
 1402 02ff F0       		.byte	0xf0
 1403 0300 06       		.byte	0x6
 1404 0301 7B01     		.2byte	0x17b
 1405 0303 74040000 		.4byte	0x474
 1406 0307 13       		.uleb128 0x13
 1407 0308 77040000 		.4byte	.LASF47
 1408 030c 06       		.byte	0x6
 1409 030d 7F01     		.2byte	0x17f
 1410 030f 45000000 		.4byte	0x45
 1411 0313 02       		.byte	0x2
 1412 0314 23       		.byte	0x23
 1413 0315 00       		.uleb128 0
 1414 0316 13       		.uleb128 0x13
 1415 0317 EA020000 		.4byte	.LASF48
 1416 031b 06       		.byte	0x6
 1417 031c 8401     		.2byte	0x184
 1418 031e E3060000 		.4byte	0x6e3
 1419 0322 02       		.byte	0x2
 1420 0323 23       		.byte	0x23
 1421 0324 04       		.uleb128 0x4
 1422 0325 13       		.uleb128 0x13
 1423 0326 0E070000 		.4byte	.LASF49
 1424 032a 06       		.byte	0x6
 1425 032b 8401     		.2byte	0x184
 1426 032d E3060000 		.4byte	0x6e3
 1427 0331 02       		.byte	0x2
ARM GAS  /tmp/ccHZkoRj.s 			page 57


 1428 0332 23       		.byte	0x23
 1429 0333 08       		.uleb128 0x8
 1430 0334 13       		.uleb128 0x13
 1431 0335 15060000 		.4byte	.LASF50
 1432 0339 06       		.byte	0x6
 1433 033a 8401     		.2byte	0x184
 1434 033c E3060000 		.4byte	0x6e3
 1435 0340 02       		.byte	0x2
 1436 0341 23       		.byte	0x23
 1437 0342 0C       		.uleb128 0xc
 1438 0343 13       		.uleb128 0x13
 1439 0344 1C090000 		.4byte	.LASF51
 1440 0348 06       		.byte	0x6
 1441 0349 8601     		.2byte	0x186
 1442 034b 45000000 		.4byte	0x45
 1443 034f 02       		.byte	0x2
 1444 0350 23       		.byte	0x23
 1445 0351 10       		.uleb128 0x10
 1446 0352 13       		.uleb128 0x13
 1447 0353 03050000 		.4byte	.LASF52
 1448 0357 06       		.byte	0x6
 1449 0358 8801     		.2byte	0x188
 1450 035a F3050000 		.4byte	0x5f3
 1451 035e 02       		.byte	0x2
 1452 035f 23       		.byte	0x23
 1453 0360 14       		.uleb128 0x14
 1454 0361 13       		.uleb128 0x13
 1455 0362 3B040000 		.4byte	.LASF53
 1456 0366 06       		.byte	0x6
 1457 0367 8A01     		.2byte	0x18a
 1458 0369 45000000 		.4byte	0x45
 1459 036d 02       		.byte	0x2
 1460 036e 23       		.byte	0x23
 1461 036f 18       		.uleb128 0x18
 1462 0370 13       		.uleb128 0x13
 1463 0371 10020000 		.4byte	.LASF54
 1464 0375 06       		.byte	0x6
 1465 0376 8C01     		.2byte	0x18c
 1466 0378 45000000 		.4byte	0x45
 1467 037c 02       		.byte	0x2
 1468 037d 23       		.byte	0x23
 1469 037e 1C       		.uleb128 0x1c
 1470 037f 13       		.uleb128 0x13
 1471 0380 7C050000 		.4byte	.LASF55
 1472 0384 06       		.byte	0x6
 1473 0385 8D01     		.2byte	0x18d
 1474 0387 25060000 		.4byte	0x625
 1475 038b 02       		.byte	0x2
 1476 038c 23       		.byte	0x23
 1477 038d 20       		.uleb128 0x20
 1478 038e 14       		.uleb128 0x14
 1479 038f 5F6D7000 		.ascii	"_mp\000"
 1480 0393 06       		.byte	0x6
 1481 0394 8F01     		.2byte	0x18f
 1482 0396 56080000 		.4byte	0x856
 1483 039a 02       		.byte	0x2
 1484 039b 23       		.byte	0x23
ARM GAS  /tmp/ccHZkoRj.s 			page 58


 1485 039c 24       		.uleb128 0x24
 1486 039d 13       		.uleb128 0x13
 1487 039e DB040000 		.4byte	.LASF56
 1488 03a2 06       		.byte	0x6
 1489 03a3 9101     		.2byte	0x191
 1490 03a5 68080000 		.4byte	0x868
 1491 03a9 02       		.byte	0x2
 1492 03aa 23       		.byte	0x23
 1493 03ab 28       		.uleb128 0x28
 1494 03ac 13       		.uleb128 0x13
 1495 03ad 62050000 		.4byte	.LASF57
 1496 03b1 06       		.byte	0x6
 1497 03b2 9301     		.2byte	0x193
 1498 03b4 45000000 		.4byte	0x45
 1499 03b8 02       		.byte	0x2
 1500 03b9 23       		.byte	0x23
 1501 03ba 2C       		.uleb128 0x2c
 1502 03bb 13       		.uleb128 0x13
 1503 03bc 78000000 		.4byte	.LASF58
 1504 03c0 06       		.byte	0x6
 1505 03c1 9601     		.2byte	0x196
 1506 03c3 45000000 		.4byte	0x45
 1507 03c7 02       		.byte	0x2
 1508 03c8 23       		.byte	0x23
 1509 03c9 30       		.uleb128 0x30
 1510 03ca 13       		.uleb128 0x13
 1511 03cb 78030000 		.4byte	.LASF59
 1512 03cf 06       		.byte	0x6
 1513 03d0 9701     		.2byte	0x197
 1514 03d2 F3050000 		.4byte	0x5f3
 1515 03d6 02       		.byte	0x2
 1516 03d7 23       		.byte	0x23
 1517 03d8 34       		.uleb128 0x34
 1518 03d9 13       		.uleb128 0x13
 1519 03da 9F070000 		.4byte	.LASF60
 1520 03de 06       		.byte	0x6
 1521 03df 9901     		.2byte	0x199
 1522 03e1 6E080000 		.4byte	0x86e
 1523 03e5 02       		.byte	0x2
 1524 03e6 23       		.byte	0x23
 1525 03e7 38       		.uleb128 0x38
 1526 03e8 13       		.uleb128 0x13
 1527 03e9 A0010000 		.4byte	.LASF61
 1528 03ed 06       		.byte	0x6
 1529 03ee 9A01     		.2byte	0x19a
 1530 03f0 74080000 		.4byte	0x874
 1531 03f4 02       		.byte	0x2
 1532 03f5 23       		.byte	0x23
 1533 03f6 3C       		.uleb128 0x3c
 1534 03f7 13       		.uleb128 0x13
 1535 03f8 6B000000 		.4byte	.LASF62
 1536 03fc 06       		.byte	0x6
 1537 03fd 9B01     		.2byte	0x19b
 1538 03ff F3050000 		.4byte	0x5f3
 1539 0403 02       		.byte	0x2
 1540 0404 23       		.byte	0x23
 1541 0405 40       		.uleb128 0x40
ARM GAS  /tmp/ccHZkoRj.s 			page 59


 1542 0406 13       		.uleb128 0x13
 1543 0407 66030000 		.4byte	.LASF63
 1544 040b 06       		.byte	0x6
 1545 040c 9E01     		.2byte	0x19e
 1546 040e 86080000 		.4byte	0x886
 1547 0412 02       		.byte	0x2
 1548 0413 23       		.byte	0x23
 1549 0414 44       		.uleb128 0x44
 1550 0415 13       		.uleb128 0x13
 1551 0416 46060000 		.4byte	.LASF39
 1552 041a 06       		.byte	0x6
 1553 041b A101     		.2byte	0x1a1
 1554 041d A7020000 		.4byte	0x2a7
 1555 0421 02       		.byte	0x2
 1556 0422 23       		.byte	0x23
 1557 0423 48       		.uleb128 0x48
 1558 0424 13       		.uleb128 0x13
 1559 0425 FA040000 		.4byte	.LASF64
 1560 0429 06       		.byte	0x6
 1561 042a A201     		.2byte	0x1a2
 1562 042c 61020000 		.4byte	0x261
 1563 0430 02       		.byte	0x2
 1564 0431 23       		.byte	0x23
 1565 0432 4C       		.uleb128 0x4c
 1566 0433 13       		.uleb128 0x13
 1567 0434 3F050000 		.4byte	.LASF65
 1568 0438 06       		.byte	0x6
 1569 0439 A401     		.2byte	0x1a4
 1570 043b A2060000 		.4byte	0x6a2
 1571 043f 03       		.byte	0x3
 1572 0440 23       		.byte	0x23
 1573 0441 D801     		.uleb128 0xd8
 1574 0443 13       		.uleb128 0x13
 1575 0444 3C000000 		.4byte	.LASF66
 1576 0448 06       		.byte	0x6
 1577 0449 A501     		.2byte	0x1a5
 1578 044b E3060000 		.4byte	0x6e3
 1579 044f 03       		.byte	0x3
 1580 0450 23       		.byte	0x23
 1581 0451 E401     		.uleb128 0xe4
 1582 0453 13       		.uleb128 0x13
 1583 0454 69090000 		.4byte	.LASF67
 1584 0458 06       		.byte	0x6
 1585 0459 A601     		.2byte	0x1a6
 1586 045b 92080000 		.4byte	0x892
 1587 045f 03       		.byte	0x3
 1588 0460 23       		.byte	0x23
 1589 0461 E801     		.uleb128 0xe8
 1590 0463 13       		.uleb128 0x13
 1591 0464 8F040000 		.4byte	.LASF68
 1592 0468 06       		.byte	0x6
 1593 0469 A701     		.2byte	0x1a7
 1594 046b F3050000 		.4byte	0x5f3
 1595 046f 03       		.byte	0x3
 1596 0470 23       		.byte	0x23
 1597 0471 EC01     		.uleb128 0xec
 1598 0473 00       		.byte	0
ARM GAS  /tmp/ccHZkoRj.s 			page 60


 1599 0474 0F       		.uleb128 0xf
 1600 0475 04       		.byte	0x4
 1601 0476 FA020000 		.4byte	0x2fa
 1602 047a 0D       		.uleb128 0xd
 1603 047b 33040000 		.4byte	.LASF69
 1604 047f 68       		.byte	0x68
 1605 0480 06       		.byte	0x6
 1606 0481 B3       		.byte	0xb3
 1607 0482 D4050000 		.4byte	0x5d4
 1608 0486 0E       		.uleb128 0xe
 1609 0487 5F7000   		.ascii	"_p\000"
 1610 048a 06       		.byte	0x6
 1611 048b B4       		.byte	0xb4
 1612 048c F4020000 		.4byte	0x2f4
 1613 0490 02       		.byte	0x2
 1614 0491 23       		.byte	0x23
 1615 0492 00       		.uleb128 0
 1616 0493 0E       		.uleb128 0xe
 1617 0494 5F7200   		.ascii	"_r\000"
 1618 0497 06       		.byte	0x6
 1619 0498 B5       		.byte	0xb5
 1620 0499 45000000 		.4byte	0x45
 1621 049d 02       		.byte	0x2
 1622 049e 23       		.byte	0x23
 1623 049f 04       		.uleb128 0x4
 1624 04a0 0E       		.uleb128 0xe
 1625 04a1 5F7700   		.ascii	"_w\000"
 1626 04a4 06       		.byte	0x6
 1627 04a5 B6       		.byte	0xb6
 1628 04a6 45000000 		.4byte	0x45
 1629 04aa 02       		.byte	0x2
 1630 04ab 23       		.byte	0x23
 1631 04ac 08       		.uleb128 0x8
 1632 04ad 0B       		.uleb128 0xb
 1633 04ae 3F060000 		.4byte	.LASF70
 1634 04b2 06       		.byte	0x6
 1635 04b3 B7       		.byte	0xb7
 1636 04b4 37000000 		.4byte	0x37
 1637 04b8 02       		.byte	0x2
 1638 04b9 23       		.byte	0x23
 1639 04ba 0C       		.uleb128 0xc
 1640 04bb 0B       		.uleb128 0xb
 1641 04bc 31010000 		.4byte	.LASF71
 1642 04c0 06       		.byte	0x6
 1643 04c1 B8       		.byte	0xb8
 1644 04c2 37000000 		.4byte	0x37
 1645 04c6 02       		.byte	0x2
 1646 04c7 23       		.byte	0x23
 1647 04c8 0E       		.uleb128 0xe
 1648 04c9 0E       		.uleb128 0xe
 1649 04ca 5F626600 		.ascii	"_bf\000"
 1650 04ce 06       		.byte	0x6
 1651 04cf B9       		.byte	0xb9
 1652 04d0 CB020000 		.4byte	0x2cb
 1653 04d4 02       		.byte	0x2
 1654 04d5 23       		.byte	0x23
 1655 04d6 10       		.uleb128 0x10
ARM GAS  /tmp/ccHZkoRj.s 			page 61


 1656 04d7 0B       		.uleb128 0xb
 1657 04d8 13090000 		.4byte	.LASF72
 1658 04dc 06       		.byte	0x6
 1659 04dd BA       		.byte	0xba
 1660 04de 45000000 		.4byte	0x45
 1661 04e2 02       		.byte	0x2
 1662 04e3 23       		.byte	0x23
 1663 04e4 18       		.uleb128 0x18
 1664 04e5 0B       		.uleb128 0xb
 1665 04e6 D5070000 		.4byte	.LASF73
 1666 04ea 06       		.byte	0x6
 1667 04eb BD       		.byte	0xbd
 1668 04ec 74040000 		.4byte	0x474
 1669 04f0 02       		.byte	0x2
 1670 04f1 23       		.byte	0x23
 1671 04f2 1C       		.uleb128 0x1c
 1672 04f3 0B       		.uleb128 0xb
 1673 04f4 47030000 		.4byte	.LASF74
 1674 04f8 06       		.byte	0x6
 1675 04f9 C1       		.byte	0xc1
 1676 04fa F4000000 		.4byte	0xf4
 1677 04fe 02       		.byte	0x2
 1678 04ff 23       		.byte	0x23
 1679 0500 20       		.uleb128 0x20
 1680 0501 0B       		.uleb128 0xb
 1681 0502 41000000 		.4byte	.LASF75
 1682 0506 06       		.byte	0x6
 1683 0507 C3       		.byte	0xc3
 1684 0508 00060000 		.4byte	0x600
 1685 050c 02       		.byte	0x2
 1686 050d 23       		.byte	0x23
 1687 050e 24       		.uleb128 0x24
 1688 050f 0B       		.uleb128 0xb
 1689 0510 5C000000 		.4byte	.LASF76
 1690 0514 06       		.byte	0x6
 1691 0515 C5       		.byte	0xc5
 1692 0516 30060000 		.4byte	0x630
 1693 051a 02       		.byte	0x2
 1694 051b 23       		.byte	0x23
 1695 051c 28       		.uleb128 0x28
 1696 051d 0B       		.uleb128 0xb
 1697 051e 80060000 		.4byte	.LASF77
 1698 0522 06       		.byte	0x6
 1699 0523 C7       		.byte	0xc7
 1700 0524 55060000 		.4byte	0x655
 1701 0528 02       		.byte	0x2
 1702 0529 23       		.byte	0x23
 1703 052a 2C       		.uleb128 0x2c
 1704 052b 0B       		.uleb128 0xb
 1705 052c D2020000 		.4byte	.LASF78
 1706 0530 06       		.byte	0x6
 1707 0531 C8       		.byte	0xc8
 1708 0532 70060000 		.4byte	0x670
 1709 0536 02       		.byte	0x2
 1710 0537 23       		.byte	0x23
 1711 0538 30       		.uleb128 0x30
 1712 0539 0E       		.uleb128 0xe
ARM GAS  /tmp/ccHZkoRj.s 			page 62


 1713 053a 5F756200 		.ascii	"_ub\000"
 1714 053e 06       		.byte	0x6
 1715 053f CB       		.byte	0xcb
 1716 0540 CB020000 		.4byte	0x2cb
 1717 0544 02       		.byte	0x2
 1718 0545 23       		.byte	0x23
 1719 0546 34       		.uleb128 0x34
 1720 0547 0E       		.uleb128 0xe
 1721 0548 5F757000 		.ascii	"_up\000"
 1722 054c 06       		.byte	0x6
 1723 054d CC       		.byte	0xcc
 1724 054e F4020000 		.4byte	0x2f4
 1725 0552 02       		.byte	0x2
 1726 0553 23       		.byte	0x23
 1727 0554 3C       		.uleb128 0x3c
 1728 0555 0E       		.uleb128 0xe
 1729 0556 5F757200 		.ascii	"_ur\000"
 1730 055a 06       		.byte	0x6
 1731 055b CD       		.byte	0xcd
 1732 055c 45000000 		.4byte	0x45
 1733 0560 02       		.byte	0x2
 1734 0561 23       		.byte	0x23
 1735 0562 40       		.uleb128 0x40
 1736 0563 0B       		.uleb128 0xb
 1737 0564 0F060000 		.4byte	.LASF79
 1738 0568 06       		.byte	0x6
 1739 0569 D0       		.byte	0xd0
 1740 056a 76060000 		.4byte	0x676
 1741 056e 02       		.byte	0x2
 1742 056f 23       		.byte	0x23
 1743 0570 44       		.uleb128 0x44
 1744 0571 0B       		.uleb128 0xb
 1745 0572 AE000000 		.4byte	.LASF80
 1746 0576 06       		.byte	0x6
 1747 0577 D1       		.byte	0xd1
 1748 0578 86060000 		.4byte	0x686
 1749 057c 02       		.byte	0x2
 1750 057d 23       		.byte	0x23
 1751 057e 47       		.uleb128 0x47
 1752 057f 0E       		.uleb128 0xe
 1753 0580 5F6C6200 		.ascii	"_lb\000"
 1754 0584 06       		.byte	0x6
 1755 0585 D4       		.byte	0xd4
 1756 0586 CB020000 		.4byte	0x2cb
 1757 058a 02       		.byte	0x2
 1758 058b 23       		.byte	0x23
 1759 058c 48       		.uleb128 0x48
 1760 058d 0B       		.uleb128 0xb
 1761 058e 22070000 		.4byte	.LASF81
 1762 0592 06       		.byte	0x6
 1763 0593 D7       		.byte	0xd7
 1764 0594 45000000 		.4byte	0x45
 1765 0598 02       		.byte	0x2
 1766 0599 23       		.byte	0x23
 1767 059a 50       		.uleb128 0x50
 1768 059b 0B       		.uleb128 0xb
 1769 059c 70030000 		.4byte	.LASF82
ARM GAS  /tmp/ccHZkoRj.s 			page 63


 1770 05a0 06       		.byte	0x6
 1771 05a1 D8       		.byte	0xd8
 1772 05a2 45000000 		.4byte	0x45
 1773 05a6 02       		.byte	0x2
 1774 05a7 23       		.byte	0x23
 1775 05a8 54       		.uleb128 0x54
 1776 05a9 0B       		.uleb128 0xb
 1777 05aa C7000000 		.4byte	.LASF83
 1778 05ae 06       		.byte	0x6
 1779 05af DF       		.byte	0xdf
 1780 05b0 E9000000 		.4byte	0xe9
 1781 05b4 02       		.byte	0x2
 1782 05b5 23       		.byte	0x23
 1783 05b6 58       		.uleb128 0x58
 1784 05b7 0B       		.uleb128 0xb
 1785 05b8 2B060000 		.4byte	.LASF84
 1786 05bc 06       		.byte	0x6
 1787 05bd E1       		.byte	0xe1
 1788 05be DE000000 		.4byte	0xde
 1789 05c2 02       		.byte	0x2
 1790 05c3 23       		.byte	0x23
 1791 05c4 5C       		.uleb128 0x5c
 1792 05c5 0B       		.uleb128 0xb
 1793 05c6 46040000 		.4byte	.LASF85
 1794 05ca 06       		.byte	0x6
 1795 05cb E2       		.byte	0xe2
 1796 05cc 45000000 		.4byte	0x45
 1797 05d0 02       		.byte	0x2
 1798 05d1 23       		.byte	0x23
 1799 05d2 64       		.uleb128 0x64
 1800 05d3 00       		.byte	0
 1801 05d4 15       		.uleb128 0x15
 1802 05d5 01       		.byte	0x1
 1803 05d6 45000000 		.4byte	0x45
 1804 05da F3050000 		.4byte	0x5f3
 1805 05de 16       		.uleb128 0x16
 1806 05df 74040000 		.4byte	0x474
 1807 05e3 16       		.uleb128 0x16
 1808 05e4 F4000000 		.4byte	0xf4
 1809 05e8 16       		.uleb128 0x16
 1810 05e9 F3050000 		.4byte	0x5f3
 1811 05ed 16       		.uleb128 0x16
 1812 05ee 45000000 		.4byte	0x45
 1813 05f2 00       		.byte	0
 1814 05f3 0F       		.uleb128 0xf
 1815 05f4 04       		.byte	0x4
 1816 05f5 F9050000 		.4byte	0x5f9
 1817 05f9 02       		.uleb128 0x2
 1818 05fa 01       		.byte	0x1
 1819 05fb 08       		.byte	0x8
 1820 05fc BA020000 		.4byte	.LASF86
 1821 0600 0F       		.uleb128 0xf
 1822 0601 04       		.byte	0x4
 1823 0602 D4050000 		.4byte	0x5d4
 1824 0606 15       		.uleb128 0x15
 1825 0607 01       		.byte	0x1
 1826 0608 45000000 		.4byte	0x45
ARM GAS  /tmp/ccHZkoRj.s 			page 64


 1827 060c 25060000 		.4byte	0x625
 1828 0610 16       		.uleb128 0x16
 1829 0611 74040000 		.4byte	0x474
 1830 0615 16       		.uleb128 0x16
 1831 0616 F4000000 		.4byte	0xf4
 1832 061a 16       		.uleb128 0x16
 1833 061b 25060000 		.4byte	0x625
 1834 061f 16       		.uleb128 0x16
 1835 0620 45000000 		.4byte	0x45
 1836 0624 00       		.byte	0
 1837 0625 0F       		.uleb128 0xf
 1838 0626 04       		.byte	0x4
 1839 0627 2B060000 		.4byte	0x62b
 1840 062b 17       		.uleb128 0x17
 1841 062c F9050000 		.4byte	0x5f9
 1842 0630 0F       		.uleb128 0xf
 1843 0631 04       		.byte	0x4
 1844 0632 06060000 		.4byte	0x606
 1845 0636 15       		.uleb128 0x15
 1846 0637 01       		.byte	0x1
 1847 0638 73000000 		.4byte	0x73
 1848 063c 55060000 		.4byte	0x655
 1849 0640 16       		.uleb128 0x16
 1850 0641 74040000 		.4byte	0x474
 1851 0645 16       		.uleb128 0x16
 1852 0646 F4000000 		.4byte	0xf4
 1853 064a 16       		.uleb128 0x16
 1854 064b 73000000 		.4byte	0x73
 1855 064f 16       		.uleb128 0x16
 1856 0650 45000000 		.4byte	0x45
 1857 0654 00       		.byte	0
 1858 0655 0F       		.uleb128 0xf
 1859 0656 04       		.byte	0x4
 1860 0657 36060000 		.4byte	0x636
 1861 065b 15       		.uleb128 0x15
 1862 065c 01       		.byte	0x1
 1863 065d 45000000 		.4byte	0x45
 1864 0661 70060000 		.4byte	0x670
 1865 0665 16       		.uleb128 0x16
 1866 0666 74040000 		.4byte	0x474
 1867 066a 16       		.uleb128 0x16
 1868 066b F4000000 		.4byte	0xf4
 1869 066f 00       		.byte	0
 1870 0670 0F       		.uleb128 0xf
 1871 0671 04       		.byte	0x4
 1872 0672 5B060000 		.4byte	0x65b
 1873 0676 08       		.uleb128 0x8
 1874 0677 30000000 		.4byte	0x30
 1875 067b 86060000 		.4byte	0x686
 1876 067f 09       		.uleb128 0x9
 1877 0680 4C000000 		.4byte	0x4c
 1878 0684 02       		.byte	0x2
 1879 0685 00       		.byte	0
 1880 0686 08       		.uleb128 0x8
 1881 0687 30000000 		.4byte	0x30
 1882 068b 96060000 		.4byte	0x696
 1883 068f 09       		.uleb128 0x9
ARM GAS  /tmp/ccHZkoRj.s 			page 65


 1884 0690 4C000000 		.4byte	0x4c
 1885 0694 00       		.byte	0
 1886 0695 00       		.byte	0
 1887 0696 05       		.uleb128 0x5
 1888 0697 82070000 		.4byte	.LASF87
 1889 069b 06       		.byte	0x6
 1890 069c 1E01     		.2byte	0x11e
 1891 069e 7A040000 		.4byte	0x47a
 1892 06a2 12       		.uleb128 0x12
 1893 06a3 9C050000 		.4byte	.LASF88
 1894 06a7 0C       		.byte	0xc
 1895 06a8 06       		.byte	0x6
 1896 06a9 2201     		.2byte	0x122
 1897 06ab DD060000 		.4byte	0x6dd
 1898 06af 13       		.uleb128 0x13
 1899 06b0 CF070000 		.4byte	.LASF19
 1900 06b4 06       		.byte	0x6
 1901 06b5 2401     		.2byte	0x124
 1902 06b7 DD060000 		.4byte	0x6dd
 1903 06bb 02       		.byte	0x2
 1904 06bc 23       		.byte	0x23
 1905 06bd 00       		.uleb128 0
 1906 06be 13       		.uleb128 0x13
 1907 06bf 2E050000 		.4byte	.LASF89
 1908 06c3 06       		.byte	0x6
 1909 06c4 2501     		.2byte	0x125
 1910 06c6 45000000 		.4byte	0x45
 1911 06ca 02       		.byte	0x2
 1912 06cb 23       		.byte	0x23
 1913 06cc 04       		.uleb128 0x4
 1914 06cd 13       		.uleb128 0x13
 1915 06ce 96050000 		.4byte	.LASF90
 1916 06d2 06       		.byte	0x6
 1917 06d3 2601     		.2byte	0x126
 1918 06d5 E3060000 		.4byte	0x6e3
 1919 06d9 02       		.byte	0x2
 1920 06da 23       		.byte	0x23
 1921 06db 08       		.uleb128 0x8
 1922 06dc 00       		.byte	0
 1923 06dd 0F       		.uleb128 0xf
 1924 06de 04       		.byte	0x4
 1925 06df A2060000 		.4byte	0x6a2
 1926 06e3 0F       		.uleb128 0xf
 1927 06e4 04       		.byte	0x4
 1928 06e5 96060000 		.4byte	0x696
 1929 06e9 12       		.uleb128 0x12
 1930 06ea F3060000 		.4byte	.LASF91
 1931 06ee 18       		.byte	0x18
 1932 06ef 06       		.byte	0x6
 1933 06f0 3E01     		.2byte	0x13e
 1934 06f2 33070000 		.4byte	0x733
 1935 06f6 13       		.uleb128 0x13
 1936 06f7 7A060000 		.4byte	.LASF92
 1937 06fb 06       		.byte	0x6
 1938 06fc 3F01     		.2byte	0x13f
 1939 06fe 33070000 		.4byte	0x733
 1940 0702 02       		.byte	0x2
ARM GAS  /tmp/ccHZkoRj.s 			page 66


 1941 0703 23       		.byte	0x23
 1942 0704 00       		.uleb128 0
 1943 0705 13       		.uleb128 0x13
 1944 0706 DE000000 		.4byte	.LASF93
 1945 070a 06       		.byte	0x6
 1946 070b 4001     		.2byte	0x140
 1947 070d 33070000 		.4byte	0x733
 1948 0711 02       		.byte	0x2
 1949 0712 23       		.byte	0x23
 1950 0713 06       		.uleb128 0x6
 1951 0714 13       		.uleb128 0x13
 1952 0715 AB090000 		.4byte	.LASF94
 1953 0719 06       		.byte	0x6
 1954 071a 4101     		.2byte	0x141
 1955 071c 3E000000 		.4byte	0x3e
 1956 0720 02       		.byte	0x2
 1957 0721 23       		.byte	0x23
 1958 0722 0C       		.uleb128 0xc
 1959 0723 13       		.uleb128 0x13
 1960 0724 34060000 		.4byte	.LASF95
 1961 0728 06       		.byte	0x6
 1962 0729 4401     		.2byte	0x144
 1963 072b 5A000000 		.4byte	0x5a
 1964 072f 02       		.byte	0x2
 1965 0730 23       		.byte	0x23
 1966 0731 10       		.uleb128 0x10
 1967 0732 00       		.byte	0
 1968 0733 08       		.uleb128 0x8
 1969 0734 3E000000 		.4byte	0x3e
 1970 0738 43070000 		.4byte	0x743
 1971 073c 09       		.uleb128 0x9
 1972 073d 4C000000 		.4byte	0x4c
 1973 0741 02       		.byte	0x2
 1974 0742 00       		.byte	0
 1975 0743 12       		.uleb128 0x12
 1976 0744 52090000 		.4byte	.LASF96
 1977 0748 10       		.byte	0x10
 1978 0749 06       		.byte	0x6
 1979 074a 5F01     		.2byte	0x15f
 1980 074c 8D070000 		.4byte	0x78d
 1981 0750 13       		.uleb128 0x13
 1982 0751 89090000 		.4byte	.LASF97
 1983 0755 06       		.byte	0x6
 1984 0756 6201     		.2byte	0x162
 1985 0758 67010000 		.4byte	0x167
 1986 075c 02       		.byte	0x2
 1987 075d 23       		.byte	0x23
 1988 075e 00       		.uleb128 0
 1989 075f 13       		.uleb128 0x13
 1990 0760 90010000 		.4byte	.LASF98
 1991 0764 06       		.byte	0x6
 1992 0765 6301     		.2byte	0x163
 1993 0767 45000000 		.4byte	0x45
 1994 076b 02       		.byte	0x2
 1995 076c 23       		.byte	0x23
 1996 076d 04       		.uleb128 0x4
 1997 076e 13       		.uleb128 0x13
ARM GAS  /tmp/ccHZkoRj.s 			page 67


 1998 076f FF030000 		.4byte	.LASF99
 1999 0773 06       		.byte	0x6
 2000 0774 6401     		.2byte	0x164
 2001 0776 67010000 		.4byte	0x167
 2002 077a 02       		.byte	0x2
 2003 077b 23       		.byte	0x23
 2004 077c 08       		.uleb128 0x8
 2005 077d 13       		.uleb128 0x13
 2006 077e 8C050000 		.4byte	.LASF100
 2007 0782 06       		.byte	0x6
 2008 0783 6501     		.2byte	0x165
 2009 0785 8D070000 		.4byte	0x78d
 2010 0789 02       		.byte	0x2
 2011 078a 23       		.byte	0x23
 2012 078b 0C       		.uleb128 0xc
 2013 078c 00       		.byte	0
 2014 078d 0F       		.uleb128 0xf
 2015 078e 04       		.byte	0x4
 2016 078f 67010000 		.4byte	0x167
 2017 0793 12       		.uleb128 0x12
 2018 0794 F7010000 		.4byte	.LASF101
 2019 0798 50       		.byte	0x50
 2020 0799 06       		.byte	0x6
 2021 079a 6901     		.2byte	0x169
 2022 079c 46080000 		.4byte	0x846
 2023 07a0 13       		.uleb128 0x13
 2024 07a1 40070000 		.4byte	.LASF102
 2025 07a5 06       		.byte	0x6
 2026 07a6 6C01     		.2byte	0x16c
 2027 07a8 F3050000 		.4byte	0x5f3
 2028 07ac 02       		.byte	0x2
 2029 07ad 23       		.byte	0x23
 2030 07ae 00       		.uleb128 0
 2031 07af 13       		.uleb128 0x13
 2032 07b0 A3080000 		.4byte	.LASF103
 2033 07b4 06       		.byte	0x6
 2034 07b5 6D01     		.2byte	0x16d
 2035 07b7 DE000000 		.4byte	0xde
 2036 07bb 02       		.byte	0x2
 2037 07bc 23       		.byte	0x23
 2038 07bd 04       		.uleb128 0x4
 2039 07be 13       		.uleb128 0x13
 2040 07bf 1D060000 		.4byte	.LASF104
 2041 07c3 06       		.byte	0x6
 2042 07c4 6E01     		.2byte	0x16e
 2043 07c6 DE000000 		.4byte	0xde
 2044 07ca 02       		.byte	0x2
 2045 07cb 23       		.byte	0x23
 2046 07cc 0C       		.uleb128 0xc
 2047 07cd 13       		.uleb128 0x13
 2048 07ce A9060000 		.4byte	.LASF105
 2049 07d2 06       		.byte	0x6
 2050 07d3 6F01     		.2byte	0x16f
 2051 07d5 DE000000 		.4byte	0xde
 2052 07d9 02       		.byte	0x2
 2053 07da 23       		.byte	0x23
 2054 07db 14       		.uleb128 0x14
ARM GAS  /tmp/ccHZkoRj.s 			page 68


 2055 07dc 13       		.uleb128 0x13
 2056 07dd BD000000 		.4byte	.LASF106
 2057 07e1 06       		.byte	0x6
 2058 07e2 7001     		.2byte	0x170
 2059 07e4 46080000 		.4byte	0x846
 2060 07e8 02       		.byte	0x2
 2061 07e9 23       		.byte	0x23
 2062 07ea 1C       		.uleb128 0x1c
 2063 07eb 13       		.uleb128 0x13
 2064 07ec 520A0000 		.4byte	.LASF107
 2065 07f0 06       		.byte	0x6
 2066 07f1 7101     		.2byte	0x171
 2067 07f3 45000000 		.4byte	0x45
 2068 07f7 02       		.byte	0x2
 2069 07f8 23       		.byte	0x23
 2070 07f9 24       		.uleb128 0x24
 2071 07fa 13       		.uleb128 0x13
 2072 07fb 6D010000 		.4byte	.LASF108
 2073 07ff 06       		.byte	0x6
 2074 0800 7201     		.2byte	0x172
 2075 0802 DE000000 		.4byte	0xde
 2076 0806 02       		.byte	0x2
 2077 0807 23       		.byte	0x23
 2078 0808 28       		.uleb128 0x28
 2079 0809 13       		.uleb128 0x13
 2080 080a 56070000 		.4byte	.LASF109
 2081 080e 06       		.byte	0x6
 2082 080f 7301     		.2byte	0x173
 2083 0811 DE000000 		.4byte	0xde
 2084 0815 02       		.byte	0x2
 2085 0816 23       		.byte	0x23
 2086 0817 30       		.uleb128 0x30
 2087 0818 13       		.uleb128 0x13
 2088 0819 E2090000 		.4byte	.LASF110
 2089 081d 06       		.byte	0x6
 2090 081e 7401     		.2byte	0x174
 2091 0820 DE000000 		.4byte	0xde
 2092 0824 02       		.byte	0x2
 2093 0825 23       		.byte	0x23
 2094 0826 38       		.uleb128 0x38
 2095 0827 13       		.uleb128 0x13
 2096 0828 EE050000 		.4byte	.LASF111
 2097 082c 06       		.byte	0x6
 2098 082d 7501     		.2byte	0x175
 2099 082f DE000000 		.4byte	0xde
 2100 0833 02       		.byte	0x2
 2101 0834 23       		.byte	0x23
 2102 0835 40       		.uleb128 0x40
 2103 0836 13       		.uleb128 0x13
 2104 0837 9D000000 		.4byte	.LASF112
 2105 083b 06       		.byte	0x6
 2106 083c 7601     		.2byte	0x176
 2107 083e DE000000 		.4byte	0xde
 2108 0842 02       		.byte	0x2
 2109 0843 23       		.byte	0x23
 2110 0844 48       		.uleb128 0x48
 2111 0845 00       		.byte	0
ARM GAS  /tmp/ccHZkoRj.s 			page 69


 2112 0846 08       		.uleb128 0x8
 2113 0847 F9050000 		.4byte	0x5f9
 2114 084b 56080000 		.4byte	0x856
 2115 084f 09       		.uleb128 0x9
 2116 0850 4C000000 		.4byte	0x4c
 2117 0854 07       		.byte	0x7
 2118 0855 00       		.byte	0
 2119 0856 0F       		.uleb128 0xf
 2120 0857 04       		.byte	0x4
 2121 0858 43070000 		.4byte	0x743
 2122 085c 18       		.uleb128 0x18
 2123 085d 01       		.byte	0x1
 2124 085e 68080000 		.4byte	0x868
 2125 0862 16       		.uleb128 0x16
 2126 0863 74040000 		.4byte	0x474
 2127 0867 00       		.byte	0
 2128 0868 0F       		.uleb128 0xf
 2129 0869 04       		.byte	0x4
 2130 086a 5C080000 		.4byte	0x85c
 2131 086e 0F       		.uleb128 0xf
 2132 086f 04       		.byte	0x4
 2133 0870 E9060000 		.4byte	0x6e9
 2134 0874 0F       		.uleb128 0xf
 2135 0875 04       		.byte	0x4
 2136 0876 7D010000 		.4byte	0x17d
 2137 087a 18       		.uleb128 0x18
 2138 087b 01       		.byte	0x1
 2139 087c 86080000 		.4byte	0x886
 2140 0880 16       		.uleb128 0x16
 2141 0881 45000000 		.4byte	0x45
 2142 0885 00       		.byte	0
 2143 0886 0F       		.uleb128 0xf
 2144 0887 04       		.byte	0x4
 2145 0888 8C080000 		.4byte	0x88c
 2146 088c 0F       		.uleb128 0xf
 2147 088d 04       		.byte	0x4
 2148 088e 7A080000 		.4byte	0x87a
 2149 0892 0F       		.uleb128 0xf
 2150 0893 04       		.byte	0x4
 2151 0894 93070000 		.4byte	0x793
 2152 0898 04       		.uleb128 0x4
 2153 0899 2E020000 		.4byte	.LASF113
 2154 089d 07       		.byte	0x7
 2155 089e 2A       		.byte	0x2a
 2156 089f 30000000 		.4byte	0x30
 2157 08a3 04       		.uleb128 0x4
 2158 08a4 DE060000 		.4byte	.LASF114
 2159 08a8 07       		.byte	0x7
 2160 08a9 36       		.byte	0x36
 2161 08aa 3E000000 		.4byte	0x3e
 2162 08ae 04       		.uleb128 0x4
 2163 08af 80090000 		.4byte	.LASF115
 2164 08b3 07       		.byte	0x7
 2165 08b4 50       		.byte	0x50
 2166 08b5 01010000 		.4byte	0x101
 2167 08b9 19       		.uleb128 0x19
 2168 08ba AE080000 		.4byte	0x8ae
ARM GAS  /tmp/ccHZkoRj.s 			page 70


 2169 08be 1A       		.uleb128 0x1a
 2170 08bf D0010000 		.4byte	.LASF290
 2171 08c3 01       		.byte	0x1
 2172 08c4 08       		.byte	0x8
 2173 08c5 49       		.byte	0x49
 2174 08c6 BB090000 		.4byte	0x9bb
 2175 08ca 1B       		.uleb128 0x1b
 2176 08cb E2030000 		.4byte	.LASF116
 2177 08cf 72       		.sleb128 -14
 2178 08d0 1B       		.uleb128 0x1b
 2179 08d1 16040000 		.4byte	.LASF117
 2180 08d5 74       		.sleb128 -12
 2181 08d6 1B       		.uleb128 0x1b
 2182 08d7 E5040000 		.4byte	.LASF118
 2183 08db 75       		.sleb128 -11
 2184 08dc 1B       		.uleb128 0x1b
 2185 08dd 98020000 		.4byte	.LASF119
 2186 08e1 76       		.sleb128 -10
 2187 08e2 1B       		.uleb128 0x1b
 2188 08e3 56050000 		.4byte	.LASF120
 2189 08e7 7B       		.sleb128 -5
 2190 08e8 1B       		.uleb128 0x1b
 2191 08e9 5A080000 		.4byte	.LASF121
 2192 08ed 7C       		.sleb128 -4
 2193 08ee 1B       		.uleb128 0x1b
 2194 08ef D6090000 		.4byte	.LASF122
 2195 08f3 7E       		.sleb128 -2
 2196 08f4 1B       		.uleb128 0x1b
 2197 08f5 03020000 		.4byte	.LASF123
 2198 08f9 7F       		.sleb128 -1
 2199 08fa 1B       		.uleb128 0x1b
 2200 08fb 80030000 		.4byte	.LASF124
 2201 08ff 00       		.sleb128 0
 2202 0900 1B       		.uleb128 0x1b
 2203 0901 E4000000 		.4byte	.LASF125
 2204 0905 01       		.sleb128 1
 2205 0906 1B       		.uleb128 0x1b
 2206 0907 720A0000 		.4byte	.LASF126
 2207 090b 02       		.sleb128 2
 2208 090c 1B       		.uleb128 0x1b
 2209 090d C6030000 		.4byte	.LASF127
 2210 0911 03       		.sleb128 3
 2211 0912 1B       		.uleb128 0x1b
 2212 0913 B2040000 		.4byte	.LASF128
 2213 0917 04       		.sleb128 4
 2214 0918 1B       		.uleb128 0x1b
 2215 0919 54030000 		.4byte	.LASF129
 2216 091d 05       		.sleb128 5
 2217 091e 1B       		.uleb128 0x1b
 2218 091f 5D030000 		.4byte	.LASF130
 2219 0923 06       		.sleb128 6
 2220 0924 1B       		.uleb128 0x1b
 2221 0925 94070000 		.4byte	.LASF131
 2222 0929 08       		.sleb128 8
 2223 092a 1B       		.uleb128 0x1b
 2224 092b 86060000 		.4byte	.LASF132
 2225 092f 09       		.sleb128 9
ARM GAS  /tmp/ccHZkoRj.s 			page 71


 2226 0930 1B       		.uleb128 0x1b
 2227 0931 D9020000 		.4byte	.LASF133
 2228 0935 0A       		.sleb128 10
 2229 0936 1B       		.uleb128 0x1b
 2230 0937 E0080000 		.4byte	.LASF134
 2231 093b 0B       		.sleb128 11
 2232 093c 1B       		.uleb128 0x1b
 2233 093d 43080000 		.4byte	.LASF135
 2234 0941 0C       		.sleb128 12
 2235 0942 1B       		.uleb128 0x1b
 2236 0943 9A030000 		.4byte	.LASF136
 2237 0947 0D       		.sleb128 13
 2238 0948 1B       		.uleb128 0x1b
 2239 0949 E9070000 		.4byte	.LASF137
 2240 094d 0E       		.sleb128 14
 2241 094e 1B       		.uleb128 0x1b
 2242 094f 16070000 		.4byte	.LASF138
 2243 0953 0F       		.sleb128 15
 2244 0954 1B       		.uleb128 0x1b
 2245 0955 03070000 		.4byte	.LASF139
 2246 0959 12       		.sleb128 18
 2247 095a 1B       		.uleb128 0x1b
 2248 095b DD050000 		.4byte	.LASF140
 2249 095f 13       		.sleb128 19
 2250 0960 1B       		.uleb128 0x1b
 2251 0961 35050000 		.4byte	.LASF141
 2252 0965 14       		.sleb128 20
 2253 0966 1B       		.uleb128 0x1b
 2254 0967 DB070000 		.4byte	.LASF142
 2255 096b 15       		.sleb128 21
 2256 096c 1B       		.uleb128 0x1b
 2257 096d 77090000 		.4byte	.LASF143
 2258 0971 16       		.sleb128 22
 2259 0972 1B       		.uleb128 0x1b
 2260 0973 31080000 		.4byte	.LASF144
 2261 0977 17       		.sleb128 23
 2262 0978 1B       		.uleb128 0x1b
 2263 0979 91030000 		.4byte	.LASF145
 2264 097d 18       		.sleb128 24
 2265 097e 1B       		.uleb128 0x1b
 2266 097f 18000000 		.4byte	.LASF146
 2267 0983 19       		.sleb128 25
 2268 0984 1B       		.uleb128 0x1b
 2269 0985 FA090000 		.4byte	.LASF147
 2270 0989 1A       		.sleb128 26
 2271 098a 1B       		.uleb128 0x1b
 2272 098b D4050000 		.4byte	.LASF148
 2273 098f 1B       		.sleb128 27
 2274 0990 1B       		.uleb128 0x1b
 2275 0991 D5010000 		.4byte	.LASF149
 2276 0995 1C       		.sleb128 28
 2277 0996 1B       		.uleb128 0x1b
 2278 0997 4D070000 		.4byte	.LASF150
 2279 099b 1D       		.sleb128 29
 2280 099c 1B       		.uleb128 0x1b
 2281 099d D8030000 		.4byte	.LASF151
 2282 09a1 1E       		.sleb128 30
ARM GAS  /tmp/ccHZkoRj.s 			page 72


 2283 09a2 1B       		.uleb128 0x1b
 2284 09a3 0F030000 		.4byte	.LASF152
 2285 09a7 1F       		.sleb128 31
 2286 09a8 1B       		.uleb128 0x1b
 2287 09a9 56010000 		.4byte	.LASF153
 2288 09ad 20       		.sleb128 32
 2289 09ae 1B       		.uleb128 0x1b
 2290 09af 3E030000 		.4byte	.LASF154
 2291 09b3 21       		.sleb128 33
 2292 09b4 1B       		.uleb128 0x1b
 2293 09b5 CF030000 		.4byte	.LASF155
 2294 09b9 22       		.sleb128 34
 2295 09ba 00       		.byte	0
 2296 09bb 04       		.uleb128 0x4
 2297 09bc 4E040000 		.4byte	.LASF156
 2298 09c0 08       		.byte	0x8
 2299 09c1 76       		.byte	0x76
 2300 09c2 BE080000 		.4byte	0x8be
 2301 09c6 1C       		.uleb128 0x1c
 2302 09c7 040E     		.2byte	0xe04
 2303 09c9 01       		.byte	0x1
 2304 09ca 84       		.byte	0x84
 2305 09cb 900A0000 		.4byte	0xa90
 2306 09cf 0B       		.uleb128 0xb
 2307 09d0 150A0000 		.4byte	.LASF157
 2308 09d4 01       		.byte	0x1
 2309 09d5 86       		.byte	0x86
 2310 09d6 A00A0000 		.4byte	0xaa0
 2311 09da 02       		.byte	0x2
 2312 09db 23       		.byte	0x23
 2313 09dc 00       		.uleb128 0
 2314 09dd 0B       		.uleb128 0xb
 2315 09de 40020000 		.4byte	.LASF158
 2316 09e2 01       		.byte	0x1
 2317 09e3 87       		.byte	0x87
 2318 09e4 A50A0000 		.4byte	0xaa5
 2319 09e8 02       		.byte	0x2
 2320 09e9 23       		.byte	0x23
 2321 09ea 20       		.uleb128 0x20
 2322 09eb 0B       		.uleb128 0xb
 2323 09ec 6D070000 		.4byte	.LASF159
 2324 09f0 01       		.byte	0x1
 2325 09f1 88       		.byte	0x88
 2326 09f2 B50A0000 		.4byte	0xab5
 2327 09f6 03       		.byte	0x3
 2328 09f7 23       		.byte	0x23
 2329 09f8 8001     		.uleb128 0x80
 2330 09fa 0B       		.uleb128 0xb
 2331 09fb 00000000 		.4byte	.LASF160
 2332 09ff 01       		.byte	0x1
 2333 0a00 89       		.byte	0x89
 2334 0a01 A50A0000 		.4byte	0xaa5
 2335 0a05 03       		.byte	0x3
 2336 0a06 23       		.byte	0x23
 2337 0a07 A001     		.uleb128 0xa0
 2338 0a09 0B       		.uleb128 0xb
 2339 0a0a 18030000 		.4byte	.LASF161
ARM GAS  /tmp/ccHZkoRj.s 			page 73


 2340 0a0e 01       		.byte	0x1
 2341 0a0f 8A       		.byte	0x8a
 2342 0a10 BA0A0000 		.4byte	0xaba
 2343 0a14 03       		.byte	0x3
 2344 0a15 23       		.byte	0x23
 2345 0a16 8002     		.uleb128 0x100
 2346 0a18 0B       		.uleb128 0xb
 2347 0a19 8E020000 		.4byte	.LASF162
 2348 0a1d 01       		.byte	0x1
 2349 0a1e 8B       		.byte	0x8b
 2350 0a1f A50A0000 		.4byte	0xaa5
 2351 0a23 03       		.byte	0x3
 2352 0a24 23       		.byte	0x23
 2353 0a25 A002     		.uleb128 0x120
 2354 0a27 0B       		.uleb128 0xb
 2355 0a28 01010000 		.4byte	.LASF163
 2356 0a2c 01       		.byte	0x1
 2357 0a2d 8C       		.byte	0x8c
 2358 0a2e BF0A0000 		.4byte	0xabf
 2359 0a32 03       		.byte	0x3
 2360 0a33 23       		.byte	0x23
 2361 0a34 8003     		.uleb128 0x180
 2362 0a36 0B       		.uleb128 0xb
 2363 0a37 58020000 		.4byte	.LASF164
 2364 0a3b 01       		.byte	0x1
 2365 0a3c 8D       		.byte	0x8d
 2366 0a3d A50A0000 		.4byte	0xaa5
 2367 0a41 03       		.byte	0x3
 2368 0a42 23       		.byte	0x23
 2369 0a43 A003     		.uleb128 0x1a0
 2370 0a45 0B       		.uleb128 0xb
 2371 0a46 76020000 		.4byte	.LASF165
 2372 0a4a 01       		.byte	0x1
 2373 0a4b 8E       		.byte	0x8e
 2374 0a4c C40A0000 		.4byte	0xac4
 2375 0a50 03       		.byte	0x3
 2376 0a51 23       		.byte	0x23
 2377 0a52 8004     		.uleb128 0x200
 2378 0a54 0B       		.uleb128 0xb
 2379 0a55 62020000 		.4byte	.LASF166
 2380 0a59 01       		.byte	0x1
 2381 0a5a 8F       		.byte	0x8f
 2382 0a5b C90A0000 		.4byte	0xac9
 2383 0a5f 03       		.byte	0x3
 2384 0a60 23       		.byte	0x23
 2385 0a61 A004     		.uleb128 0x220
 2386 0a63 0E       		.uleb128 0xe
 2387 0a64 495000   		.ascii	"IP\000"
 2388 0a67 01       		.byte	0x1
 2389 0a68 90       		.byte	0x90
 2390 0a69 E90A0000 		.4byte	0xae9
 2391 0a6d 03       		.byte	0x3
 2392 0a6e 23       		.byte	0x23
 2393 0a6f 8006     		.uleb128 0x300
 2394 0a71 0B       		.uleb128 0xb
 2395 0a72 6C020000 		.4byte	.LASF167
 2396 0a76 01       		.byte	0x1
ARM GAS  /tmp/ccHZkoRj.s 			page 74


 2397 0a77 91       		.byte	0x91
 2398 0a78 EE0A0000 		.4byte	0xaee
 2399 0a7c 03       		.byte	0x3
 2400 0a7d 23       		.byte	0x23
 2401 0a7e F007     		.uleb128 0x3f0
 2402 0a80 0B       		.uleb128 0xb
 2403 0a81 33030000 		.4byte	.LASF168
 2404 0a85 01       		.byte	0x1
 2405 0a86 92       		.byte	0x92
 2406 0a87 B9080000 		.4byte	0x8b9
 2407 0a8b 03       		.byte	0x3
 2408 0a8c 23       		.byte	0x23
 2409 0a8d 801C     		.uleb128 0xe00
 2410 0a8f 00       		.byte	0
 2411 0a90 08       		.uleb128 0x8
 2412 0a91 AE080000 		.4byte	0x8ae
 2413 0a95 A00A0000 		.4byte	0xaa0
 2414 0a99 09       		.uleb128 0x9
 2415 0a9a 4C000000 		.4byte	0x4c
 2416 0a9e 07       		.byte	0x7
 2417 0a9f 00       		.byte	0
 2418 0aa0 19       		.uleb128 0x19
 2419 0aa1 900A0000 		.4byte	0xa90
 2420 0aa5 08       		.uleb128 0x8
 2421 0aa6 AE080000 		.4byte	0x8ae
 2422 0aaa B50A0000 		.4byte	0xab5
 2423 0aae 09       		.uleb128 0x9
 2424 0aaf 4C000000 		.4byte	0x4c
 2425 0ab3 17       		.byte	0x17
 2426 0ab4 00       		.byte	0
 2427 0ab5 19       		.uleb128 0x19
 2428 0ab6 900A0000 		.4byte	0xa90
 2429 0aba 19       		.uleb128 0x19
 2430 0abb 900A0000 		.4byte	0xa90
 2431 0abf 19       		.uleb128 0x19
 2432 0ac0 900A0000 		.4byte	0xa90
 2433 0ac4 19       		.uleb128 0x19
 2434 0ac5 900A0000 		.4byte	0xa90
 2435 0ac9 08       		.uleb128 0x8
 2436 0aca AE080000 		.4byte	0x8ae
 2437 0ace D90A0000 		.4byte	0xad9
 2438 0ad2 09       		.uleb128 0x9
 2439 0ad3 4C000000 		.4byte	0x4c
 2440 0ad7 37       		.byte	0x37
 2441 0ad8 00       		.byte	0
 2442 0ad9 08       		.uleb128 0x8
 2443 0ada 98080000 		.4byte	0x898
 2444 0ade E90A0000 		.4byte	0xae9
 2445 0ae2 09       		.uleb128 0x9
 2446 0ae3 4C000000 		.4byte	0x4c
 2447 0ae7 EF       		.byte	0xef
 2448 0ae8 00       		.byte	0
 2449 0ae9 19       		.uleb128 0x19
 2450 0aea D90A0000 		.4byte	0xad9
 2451 0aee 08       		.uleb128 0x8
 2452 0aef AE080000 		.4byte	0x8ae
 2453 0af3 FF0A0000 		.4byte	0xaff
ARM GAS  /tmp/ccHZkoRj.s 			page 75


 2454 0af7 1D       		.uleb128 0x1d
 2455 0af8 4C000000 		.4byte	0x4c
 2456 0afc 8302     		.2byte	0x283
 2457 0afe 00       		.byte	0
 2458 0aff 04       		.uleb128 0x4
 2459 0b00 47000000 		.4byte	.LASF169
 2460 0b04 01       		.byte	0x1
 2461 0b05 93       		.byte	0x93
 2462 0b06 C6090000 		.4byte	0x9c6
 2463 0b0a 19       		.uleb128 0x19
 2464 0b0b 01010000 		.4byte	0x101
 2465 0b0f 17       		.uleb128 0x17
 2466 0b10 0A0B0000 		.4byte	0xb0a
 2467 0b14 08       		.uleb128 0x8
 2468 0b15 01010000 		.4byte	0x101
 2469 0b19 240B0000 		.4byte	0xb24
 2470 0b1d 09       		.uleb128 0x9
 2471 0b1e 4C000000 		.4byte	0x4c
 2472 0b22 12       		.byte	0x12
 2473 0b23 00       		.byte	0
 2474 0b24 1C       		.uleb128 0x1c
 2475 0b25 2801     		.2byte	0x128
 2476 0b27 08       		.byte	0x8
 2477 0b28 EF       		.byte	0xef
 2478 0b29 4A0D0000 		.4byte	0xd4a
 2479 0b2d 0B       		.uleb128 0xb
 2480 0b2e FC080000 		.4byte	.LASF170
 2481 0b32 08       		.byte	0x8
 2482 0b33 F0       		.byte	0xf0
 2483 0b34 0A0B0000 		.4byte	0xb0a
 2484 0b38 02       		.byte	0x2
 2485 0b39 23       		.byte	0x23
 2486 0b3a 00       		.uleb128 0
 2487 0b3b 0B       		.uleb128 0xb
 2488 0b3c E7010000 		.4byte	.LASF171
 2489 0b40 08       		.byte	0x8
 2490 0b41 F1       		.byte	0xf1
 2491 0b42 0A0B0000 		.4byte	0xb0a
 2492 0b46 02       		.byte	0x2
 2493 0b47 23       		.byte	0x23
 2494 0b48 04       		.uleb128 0x4
 2495 0b49 0B       		.uleb128 0xb
 2496 0b4a BB070000 		.4byte	.LASF172
 2497 0b4e 08       		.byte	0x8
 2498 0b4f F2       		.byte	0xf2
 2499 0b50 0A0B0000 		.4byte	0xb0a
 2500 0b54 02       		.byte	0x2
 2501 0b55 23       		.byte	0x23
 2502 0b56 08       		.uleb128 0x8
 2503 0b57 0B       		.uleb128 0xb
 2504 0b58 C5070000 		.4byte	.LASF173
 2505 0b5c 08       		.byte	0x8
 2506 0b5d F3       		.byte	0xf3
 2507 0b5e 0A0B0000 		.4byte	0xb0a
 2508 0b62 02       		.byte	0x2
 2509 0b63 23       		.byte	0x23
 2510 0b64 0C       		.uleb128 0xc
ARM GAS  /tmp/ccHZkoRj.s 			page 76


 2511 0b65 0B       		.uleb128 0xb
 2512 0b66 030A0000 		.4byte	.LASF174
 2513 0b6a 08       		.byte	0x8
 2514 0b6b F4       		.byte	0xf4
 2515 0b6c 0A0B0000 		.4byte	0xb0a
 2516 0b70 02       		.byte	0x2
 2517 0b71 23       		.byte	0x23
 2518 0b72 10       		.uleb128 0x10
 2519 0b73 0B       		.uleb128 0xb
 2520 0b74 A2090000 		.4byte	.LASF175
 2521 0b78 08       		.byte	0x8
 2522 0b79 F5       		.byte	0xf5
 2523 0b7a 0A0B0000 		.4byte	0xb0a
 2524 0b7e 02       		.byte	0x2
 2525 0b7f 23       		.byte	0x23
 2526 0b80 14       		.uleb128 0x14
 2527 0b81 0B       		.uleb128 0xb
 2528 0b82 F6030000 		.4byte	.LASF176
 2529 0b86 08       		.byte	0x8
 2530 0b87 F6       		.byte	0xf6
 2531 0b88 0F0B0000 		.4byte	0xb0f
 2532 0b8c 02       		.byte	0x2
 2533 0b8d 23       		.byte	0x23
 2534 0b8e 18       		.uleb128 0x18
 2535 0b8f 0B       		.uleb128 0xb
 2536 0b90 F5070000 		.4byte	.LASF177
 2537 0b94 08       		.byte	0x8
 2538 0b95 F7       		.byte	0xf7
 2539 0b96 5A0D0000 		.4byte	0xd5a
 2540 0b9a 02       		.byte	0x2
 2541 0b9b 23       		.byte	0x23
 2542 0b9c 1C       		.uleb128 0x1c
 2543 0b9d 0B       		.uleb128 0xb
 2544 0b9e A0040000 		.4byte	.LASF178
 2545 0ba2 08       		.byte	0x8
 2546 0ba3 F8       		.byte	0xf8
 2547 0ba4 0F0B0000 		.4byte	0xb0f
 2548 0ba8 02       		.byte	0x2
 2549 0ba9 23       		.byte	0x23
 2550 0baa 20       		.uleb128 0x20
 2551 0bab 0B       		.uleb128 0xb
 2552 0bac 07060000 		.4byte	.LASF179
 2553 0bb0 08       		.byte	0x8
 2554 0bb1 F9       		.byte	0xf9
 2555 0bb2 0A0B0000 		.4byte	0xb0a
 2556 0bb6 02       		.byte	0x2
 2557 0bb7 23       		.byte	0x23
 2558 0bb8 24       		.uleb128 0x24
 2559 0bb9 0B       		.uleb128 0xb
 2560 0bba BF050000 		.4byte	.LASF180
 2561 0bbe 08       		.byte	0x8
 2562 0bbf FA       		.byte	0xfa
 2563 0bc0 0A0B0000 		.4byte	0xb0a
 2564 0bc4 02       		.byte	0x2
 2565 0bc5 23       		.byte	0x23
 2566 0bc6 28       		.uleb128 0x28
 2567 0bc7 0B       		.uleb128 0xb
ARM GAS  /tmp/ccHZkoRj.s 			page 77


 2568 0bc8 F4080000 		.4byte	.LASF181
 2569 0bcc 08       		.byte	0x8
 2570 0bcd FB       		.byte	0xfb
 2571 0bce 0F0B0000 		.4byte	0xb0f
 2572 0bd2 02       		.byte	0x2
 2573 0bd3 23       		.byte	0x23
 2574 0bd4 2C       		.uleb128 0x2c
 2575 0bd5 0B       		.uleb128 0xb
 2576 0bd6 90000000 		.4byte	.LASF182
 2577 0bda 08       		.byte	0x8
 2578 0bdb FC       		.byte	0xfc
 2579 0bdc 0F0B0000 		.4byte	0xb0f
 2580 0be0 02       		.byte	0x2
 2581 0be1 23       		.byte	0x23
 2582 0be2 30       		.uleb128 0x30
 2583 0be3 0B       		.uleb128 0xb
 2584 0be4 FF070000 		.4byte	.LASF183
 2585 0be8 08       		.byte	0x8
 2586 0be9 FD       		.byte	0xfd
 2587 0bea 6F0D0000 		.4byte	0xd6f
 2588 0bee 02       		.byte	0x2
 2589 0bef 23       		.byte	0x23
 2590 0bf0 34       		.uleb128 0x34
 2591 0bf1 0B       		.uleb128 0xb
 2592 0bf2 CE080000 		.4byte	.LASF184
 2593 0bf6 08       		.byte	0x8
 2594 0bf7 FE       		.byte	0xfe
 2595 0bf8 0F0B0000 		.4byte	0xb0f
 2596 0bfc 02       		.byte	0x2
 2597 0bfd 23       		.byte	0x23
 2598 0bfe 3C       		.uleb128 0x3c
 2599 0bff 0B       		.uleb128 0xb
 2600 0c00 88000000 		.4byte	.LASF185
 2601 0c04 08       		.byte	0x8
 2602 0c05 FF       		.byte	0xff
 2603 0c06 0A0B0000 		.4byte	0xb0a
 2604 0c0a 02       		.byte	0x2
 2605 0c0b 23       		.byte	0x23
 2606 0c0c 40       		.uleb128 0x40
 2607 0c0d 13       		.uleb128 0x13
 2608 0c0e 360A0000 		.4byte	.LASF186
 2609 0c12 08       		.byte	0x8
 2610 0c13 0001     		.2byte	0x100
 2611 0c15 0A0B0000 		.4byte	0xb0a
 2612 0c19 02       		.byte	0x2
 2613 0c1a 23       		.byte	0x23
 2614 0c1b 44       		.uleb128 0x44
 2615 0c1c 13       		.uleb128 0x13
 2616 0c1d 7E040000 		.4byte	.LASF187
 2617 0c21 08       		.byte	0x8
 2618 0c22 0101     		.2byte	0x101
 2619 0c24 0A0B0000 		.4byte	0xb0a
 2620 0c28 02       		.byte	0x2
 2621 0c29 23       		.byte	0x23
 2622 0c2a 48       		.uleb128 0x48
 2623 0c2b 13       		.uleb128 0x13
 2624 0c2c FB060000 		.4byte	.LASF188
ARM GAS  /tmp/ccHZkoRj.s 			page 78


 2625 0c30 08       		.byte	0x8
 2626 0c31 0201     		.2byte	0x102
 2627 0c33 0A0B0000 		.4byte	0xb0a
 2628 0c37 02       		.byte	0x2
 2629 0c38 23       		.byte	0x23
 2630 0c39 4C       		.uleb128 0x4c
 2631 0c3a 13       		.uleb128 0x13
 2632 0c3b 2B030000 		.4byte	.LASF189
 2633 0c3f 08       		.byte	0x8
 2634 0c40 0301     		.2byte	0x103
 2635 0c42 840D0000 		.4byte	0xd84
 2636 0c46 02       		.byte	0x2
 2637 0c47 23       		.byte	0x23
 2638 0c48 50       		.uleb128 0x50
 2639 0c49 13       		.uleb128 0x13
 2640 0c4a 09080000 		.4byte	.LASF190
 2641 0c4e 08       		.byte	0x8
 2642 0c4f 0401     		.2byte	0x104
 2643 0c51 8E0D0000 		.4byte	0xd8e
 2644 0c55 03       		.byte	0x3
 2645 0c56 23       		.byte	0x23
 2646 0c57 9001     		.uleb128 0x90
 2647 0c59 13       		.uleb128 0x13
 2648 0c5a 91090000 		.4byte	.LASF191
 2649 0c5e 08       		.byte	0x8
 2650 0c5f 0501     		.2byte	0x105
 2651 0c61 0A0B0000 		.4byte	0xb0a
 2652 0c65 03       		.byte	0x3
 2653 0c66 23       		.byte	0x23
 2654 0c67 9401     		.uleb128 0x94
 2655 0c69 13       		.uleb128 0x13
 2656 0c6a 13080000 		.4byte	.LASF192
 2657 0c6e 08       		.byte	0x8
 2658 0c6f 0601     		.2byte	0x106
 2659 0c71 930D0000 		.4byte	0xd93
 2660 0c75 03       		.byte	0x3
 2661 0c76 23       		.byte	0x23
 2662 0c77 9801     		.uleb128 0x98
 2663 0c79 13       		.uleb128 0x13
 2664 0c7a C3090000 		.4byte	.LASF193
 2665 0c7e 08       		.byte	0x8
 2666 0c7f 0701     		.2byte	0x107
 2667 0c81 0A0B0000 		.4byte	0xb0a
 2668 0c85 03       		.byte	0x3
 2669 0c86 23       		.byte	0x23
 2670 0c87 E401     		.uleb128 0xe4
 2671 0c89 13       		.uleb128 0x13
 2672 0c8a 28010000 		.4byte	.LASF194
 2673 0c8e 08       		.byte	0x8
 2674 0c8f 0801     		.2byte	0x108
 2675 0c91 0F0B0000 		.4byte	0xb0f
 2676 0c95 03       		.byte	0x3
 2677 0c96 23       		.byte	0x23
 2678 0c97 E801     		.uleb128 0xe8
 2679 0c99 13       		.uleb128 0x13
 2680 0c9a 1D080000 		.4byte	.LASF195
 2681 0c9e 08       		.byte	0x8
ARM GAS  /tmp/ccHZkoRj.s 			page 79


 2682 0c9f 0901     		.2byte	0x109
 2683 0ca1 A80D0000 		.4byte	0xda8
 2684 0ca5 03       		.byte	0x3
 2685 0ca6 23       		.byte	0x23
 2686 0ca7 EC01     		.uleb128 0xec
 2687 0ca9 13       		.uleb128 0x13
 2688 0caa B3070000 		.4byte	.LASF196
 2689 0cae 08       		.byte	0x8
 2690 0caf 0A01     		.2byte	0x10a
 2691 0cb1 0A0B0000 		.4byte	0xb0a
 2692 0cb5 03       		.byte	0x3
 2693 0cb6 23       		.byte	0x23
 2694 0cb7 8002     		.uleb128 0x100
 2695 0cb9 13       		.uleb128 0x13
 2696 0cba 23030000 		.4byte	.LASF197
 2697 0cbe 08       		.byte	0x8
 2698 0cbf 0B01     		.2byte	0x10b
 2699 0cc1 0A0B0000 		.4byte	0xb0a
 2700 0cc5 03       		.byte	0x3
 2701 0cc6 23       		.byte	0x23
 2702 0cc7 8402     		.uleb128 0x104
 2703 0cc9 13       		.uleb128 0x13
 2704 0cca AF010000 		.4byte	.LASF198
 2705 0cce 08       		.byte	0x8
 2706 0ccf 0C01     		.2byte	0x10c
 2707 0cd1 0A0B0000 		.4byte	0xb0a
 2708 0cd5 03       		.byte	0x3
 2709 0cd6 23       		.byte	0x23
 2710 0cd7 8802     		.uleb128 0x108
 2711 0cd9 13       		.uleb128 0x13
 2712 0cda 65070000 		.4byte	.LASF199
 2713 0cde 08       		.byte	0x8
 2714 0cdf 0D01     		.2byte	0x10d
 2715 0ce1 0A0B0000 		.4byte	0xb0a
 2716 0ce5 03       		.byte	0x3
 2717 0ce6 23       		.byte	0x23
 2718 0ce7 8C02     		.uleb128 0x10c
 2719 0ce9 13       		.uleb128 0x13
 2720 0cea F8000000 		.4byte	.LASF200
 2721 0cee 08       		.byte	0x8
 2722 0cef 0E01     		.2byte	0x10e
 2723 0cf1 0A0B0000 		.4byte	0xb0a
 2724 0cf5 03       		.byte	0x3
 2725 0cf6 23       		.byte	0x23
 2726 0cf7 9002     		.uleb128 0x110
 2727 0cf9 13       		.uleb128 0x13
 2728 0cfa A0060000 		.4byte	.LASF201
 2729 0cfe 08       		.byte	0x8
 2730 0cff 0F01     		.2byte	0x10f
 2731 0d01 0A0B0000 		.4byte	0xb0a
 2732 0d05 03       		.byte	0x3
 2733 0d06 23       		.byte	0x23
 2734 0d07 9402     		.uleb128 0x114
 2735 0d09 13       		.uleb128 0x13
 2736 0d0a 0E010000 		.4byte	.LASF202
 2737 0d0e 08       		.byte	0x8
 2738 0d0f 1001     		.2byte	0x110
ARM GAS  /tmp/ccHZkoRj.s 			page 80


 2739 0d11 0A0B0000 		.4byte	0xb0a
 2740 0d15 03       		.byte	0x3
 2741 0d16 23       		.byte	0x23
 2742 0d17 9802     		.uleb128 0x118
 2743 0d19 13       		.uleb128 0x13
 2744 0d1a B7060000 		.4byte	.LASF203
 2745 0d1e 08       		.byte	0x8
 2746 0d1f 1101     		.2byte	0x111
 2747 0d21 0A0B0000 		.4byte	0xb0a
 2748 0d25 03       		.byte	0x3
 2749 0d26 23       		.byte	0x23
 2750 0d27 9C02     		.uleb128 0x11c
 2751 0d29 13       		.uleb128 0x13
 2752 0d2a 26090000 		.4byte	.LASF204
 2753 0d2e 08       		.byte	0x8
 2754 0d2f 1201     		.2byte	0x112
 2755 0d31 0A0B0000 		.4byte	0xb0a
 2756 0d35 03       		.byte	0x3
 2757 0d36 23       		.byte	0x23
 2758 0d37 A002     		.uleb128 0x120
 2759 0d39 13       		.uleb128 0x13
 2760 0d3a BD030000 		.4byte	.LASF205
 2761 0d3e 08       		.byte	0x8
 2762 0d3f 1301     		.2byte	0x113
 2763 0d41 0F0B0000 		.4byte	0xb0f
 2764 0d45 03       		.byte	0x3
 2765 0d46 23       		.byte	0x23
 2766 0d47 A402     		.uleb128 0x124
 2767 0d49 00       		.byte	0
 2768 0d4a 08       		.uleb128 0x8
 2769 0d4b 01010000 		.4byte	0x101
 2770 0d4f 5A0D0000 		.4byte	0xd5a
 2771 0d53 09       		.uleb128 0x9
 2772 0d54 4C000000 		.4byte	0x4c
 2773 0d58 00       		.byte	0
 2774 0d59 00       		.byte	0
 2775 0d5a 19       		.uleb128 0x19
 2776 0d5b 4A0D0000 		.4byte	0xd4a
 2777 0d5f 08       		.uleb128 0x8
 2778 0d60 01010000 		.4byte	0x101
 2779 0d64 6F0D0000 		.4byte	0xd6f
 2780 0d68 09       		.uleb128 0x9
 2781 0d69 4C000000 		.4byte	0x4c
 2782 0d6d 01       		.byte	0x1
 2783 0d6e 00       		.byte	0
 2784 0d6f 19       		.uleb128 0x19
 2785 0d70 5F0D0000 		.4byte	0xd5f
 2786 0d74 08       		.uleb128 0x8
 2787 0d75 01010000 		.4byte	0x101
 2788 0d79 840D0000 		.4byte	0xd84
 2789 0d7d 09       		.uleb128 0x9
 2790 0d7e 4C000000 		.4byte	0x4c
 2791 0d82 0F       		.byte	0xf
 2792 0d83 00       		.byte	0
 2793 0d84 17       		.uleb128 0x17
 2794 0d85 890D0000 		.4byte	0xd89
 2795 0d89 19       		.uleb128 0x19
ARM GAS  /tmp/ccHZkoRj.s 			page 81


 2796 0d8a 740D0000 		.4byte	0xd74
 2797 0d8e 19       		.uleb128 0x19
 2798 0d8f 4A0D0000 		.4byte	0xd4a
 2799 0d93 19       		.uleb128 0x19
 2800 0d94 140B0000 		.4byte	0xb14
 2801 0d98 08       		.uleb128 0x8
 2802 0d99 01010000 		.4byte	0x101
 2803 0d9d A80D0000 		.4byte	0xda8
 2804 0da1 09       		.uleb128 0x9
 2805 0da2 4C000000 		.4byte	0x4c
 2806 0da6 04       		.byte	0x4
 2807 0da7 00       		.byte	0
 2808 0da8 19       		.uleb128 0x19
 2809 0da9 980D0000 		.4byte	0xd98
 2810 0dad 1E       		.uleb128 0x1e
 2811 0dae 41646300 		.ascii	"Adc\000"
 2812 0db2 08       		.byte	0x8
 2813 0db3 1401     		.2byte	0x114
 2814 0db5 240B0000 		.4byte	0xb24
 2815 0db9 08       		.uleb128 0x8
 2816 0dba 01010000 		.4byte	0x101
 2817 0dbe C90D0000 		.4byte	0xdc9
 2818 0dc2 09       		.uleb128 0x9
 2819 0dc3 4C000000 		.4byte	0x4c
 2820 0dc7 03       		.byte	0x3
 2821 0dc8 00       		.byte	0
 2822 0dc9 1F       		.uleb128 0x1f
 2823 0dca 1401     		.2byte	0x114
 2824 0dcc 08       		.byte	0x8
 2825 0dcd 450D     		.2byte	0xd45
 2826 0dcf DA0F0000 		.4byte	0xfda
 2827 0dd3 13       		.uleb128 0x13
 2828 0dd4 5F0A0000 		.4byte	.LASF206
 2829 0dd8 08       		.byte	0x8
 2830 0dd9 460D     		.2byte	0xd46
 2831 0ddb 0A0B0000 		.4byte	0xb0a
 2832 0ddf 02       		.byte	0x2
 2833 0de0 23       		.byte	0x23
 2834 0de1 00       		.uleb128 0
 2835 0de2 13       		.uleb128 0x13
 2836 0de3 0C0A0000 		.4byte	.LASF207
 2837 0de7 08       		.byte	0x8
 2838 0de8 470D     		.2byte	0xd47
 2839 0dea 0A0B0000 		.4byte	0xb0a
 2840 0dee 02       		.byte	0x2
 2841 0def 23       		.byte	0x23
 2842 0df0 04       		.uleb128 0x4
 2843 0df1 13       		.uleb128 0x13
 2844 0df2 86040000 		.4byte	.LASF208
 2845 0df6 08       		.byte	0x8
 2846 0df7 480D     		.2byte	0xd48
 2847 0df9 0F0B0000 		.4byte	0xb0f
 2848 0dfd 02       		.byte	0x2
 2849 0dfe 23       		.byte	0x23
 2850 0dff 08       		.uleb128 0x8
 2851 0e00 13       		.uleb128 0x13
 2852 0e01 F5070000 		.4byte	.LASF177
ARM GAS  /tmp/ccHZkoRj.s 			page 82


 2853 0e05 08       		.byte	0x8
 2854 0e06 490D     		.2byte	0xd49
 2855 0e08 DA0F0000 		.4byte	0xfda
 2856 0e0c 02       		.byte	0x2
 2857 0e0d 23       		.byte	0x23
 2858 0e0e 0C       		.uleb128 0xc
 2859 0e0f 13       		.uleb128 0x13
 2860 0e10 B7010000 		.4byte	.LASF209
 2861 0e14 08       		.byte	0x8
 2862 0e15 4A0D     		.2byte	0xd4a
 2863 0e17 0A0B0000 		.4byte	0xb0a
 2864 0e1b 02       		.byte	0x2
 2865 0e1c 23       		.byte	0x23
 2866 0e1d 10       		.uleb128 0x10
 2867 0e1e 13       		.uleb128 0x13
 2868 0e1f 1A0A0000 		.4byte	.LASF210
 2869 0e23 08       		.byte	0x8
 2870 0e24 4B0D     		.2byte	0xd4b
 2871 0e26 0A0B0000 		.4byte	0xb0a
 2872 0e2a 02       		.byte	0x2
 2873 0e2b 23       		.byte	0x23
 2874 0e2c 14       		.uleb128 0x14
 2875 0e2d 13       		.uleb128 0x13
 2876 0e2e 2A000000 		.4byte	.LASF211
 2877 0e32 08       		.byte	0x8
 2878 0e33 4C0D     		.2byte	0xd4c
 2879 0e35 0F0B0000 		.4byte	0xb0f
 2880 0e39 02       		.byte	0x2
 2881 0e3a 23       		.byte	0x23
 2882 0e3b 18       		.uleb128 0x18
 2883 0e3c 13       		.uleb128 0x13
 2884 0e3d FF070000 		.4byte	.LASF183
 2885 0e41 08       		.byte	0x8
 2886 0e42 4D0D     		.2byte	0xd4d
 2887 0e44 DF0F0000 		.4byte	0xfdf
 2888 0e48 02       		.byte	0x2
 2889 0e49 23       		.byte	0x23
 2890 0e4a 1C       		.uleb128 0x1c
 2891 0e4b 13       		.uleb128 0x13
 2892 0e4c DE010000 		.4byte	.LASF212
 2893 0e50 08       		.byte	0x8
 2894 0e51 4E0D     		.2byte	0xd4e
 2895 0e53 0A0B0000 		.4byte	0xb0a
 2896 0e57 02       		.byte	0x2
 2897 0e58 23       		.byte	0x23
 2898 0e59 20       		.uleb128 0x20
 2899 0e5a 13       		.uleb128 0x13
 2900 0e5b 09090000 		.4byte	.LASF213
 2901 0e5f 08       		.byte	0x8
 2902 0e60 4F0D     		.2byte	0xd4f
 2903 0e62 0F0B0000 		.4byte	0xb0f
 2904 0e66 02       		.byte	0x2
 2905 0e67 23       		.byte	0x23
 2906 0e68 24       		.uleb128 0x24
 2907 0e69 13       		.uleb128 0x13
 2908 0e6a 7B0A0000 		.4byte	.LASF214
 2909 0e6e 08       		.byte	0x8
ARM GAS  /tmp/ccHZkoRj.s 			page 83


 2910 0e6f 500D     		.2byte	0xd50
 2911 0e71 0A0B0000 		.4byte	0xb0a
 2912 0e75 02       		.byte	0x2
 2913 0e76 23       		.byte	0x23
 2914 0e77 28       		.uleb128 0x28
 2915 0e78 13       		.uleb128 0x13
 2916 0e79 51000000 		.4byte	.LASF215
 2917 0e7d 08       		.byte	0x8
 2918 0e7e 510D     		.2byte	0xd51
 2919 0e80 0A0B0000 		.4byte	0xb0a
 2920 0e84 02       		.byte	0x2
 2921 0e85 23       		.byte	0x23
 2922 0e86 2C       		.uleb128 0x2c
 2923 0e87 13       		.uleb128 0x13
 2924 0e88 F8020000 		.4byte	.LASF216
 2925 0e8c 08       		.byte	0x8
 2926 0e8d 520D     		.2byte	0xd52
 2927 0e8f 0A0B0000 		.4byte	0xb0a
 2928 0e93 02       		.byte	0x2
 2929 0e94 23       		.byte	0x23
 2930 0e95 30       		.uleb128 0x30
 2931 0e96 13       		.uleb128 0x13
 2932 0e97 09080000 		.4byte	.LASF190
 2933 0e9b 08       		.byte	0x8
 2934 0e9c 530D     		.2byte	0xd53
 2935 0e9e E40F0000 		.4byte	0xfe4
 2936 0ea2 02       		.byte	0x2
 2937 0ea3 23       		.byte	0x23
 2938 0ea4 34       		.uleb128 0x34
 2939 0ea5 13       		.uleb128 0x13
 2940 0ea6 80000000 		.4byte	.LASF217
 2941 0eaa 08       		.byte	0x8
 2942 0eab 540D     		.2byte	0xd54
 2943 0ead 0A0B0000 		.4byte	0xb0a
 2944 0eb1 02       		.byte	0x2
 2945 0eb2 23       		.byte	0x23
 2946 0eb3 38       		.uleb128 0x38
 2947 0eb4 13       		.uleb128 0x13
 2948 0eb5 13080000 		.4byte	.LASF192
 2949 0eb9 08       		.byte	0x8
 2950 0eba 550D     		.2byte	0xd55
 2951 0ebc E90F0000 		.4byte	0xfe9
 2952 0ec0 02       		.byte	0x2
 2953 0ec1 23       		.byte	0x23
 2954 0ec2 3C       		.uleb128 0x3c
 2955 0ec3 13       		.uleb128 0x13
 2956 0ec4 47050000 		.4byte	.LASF218
 2957 0ec8 08       		.byte	0x8
 2958 0ec9 560D     		.2byte	0xd56
 2959 0ecb FE0F0000 		.4byte	0xffe
 2960 0ecf 02       		.byte	0x2
 2961 0ed0 23       		.byte	0x23
 2962 0ed1 40       		.uleb128 0x40
 2963 0ed2 13       		.uleb128 0x13
 2964 0ed3 1D080000 		.4byte	.LASF195
 2965 0ed7 08       		.byte	0x8
 2966 0ed8 570D     		.2byte	0xd57
ARM GAS  /tmp/ccHZkoRj.s 			page 84


 2967 0eda 03100000 		.4byte	0x1003
 2968 0ede 02       		.byte	0x2
 2969 0edf 23       		.byte	0x23
 2970 0ee0 4C       		.uleb128 0x4c
 2971 0ee1 13       		.uleb128 0x13
 2972 0ee2 A4070000 		.4byte	.LASF219
 2973 0ee6 08       		.byte	0x8
 2974 0ee7 580D     		.2byte	0xd58
 2975 0ee9 0A0B0000 		.4byte	0xb0a
 2976 0eed 02       		.byte	0x2
 2977 0eee 23       		.byte	0x23
 2978 0eef 60       		.uleb128 0x60
 2979 0ef0 13       		.uleb128 0x13
 2980 0ef1 4E010000 		.4byte	.LASF220
 2981 0ef5 08       		.byte	0x8
 2982 0ef6 590D     		.2byte	0xd59
 2983 0ef8 0A0B0000 		.4byte	0xb0a
 2984 0efc 02       		.byte	0x2
 2985 0efd 23       		.byte	0x23
 2986 0efe 64       		.uleb128 0x64
 2987 0eff 13       		.uleb128 0x13
 2988 0f00 C7080000 		.4byte	.LASF221
 2989 0f04 08       		.byte	0x8
 2990 0f05 5A0D     		.2byte	0xd5a
 2991 0f07 0F0B0000 		.4byte	0xb0f
 2992 0f0b 02       		.byte	0x2
 2993 0f0c 23       		.byte	0x23
 2994 0f0d 68       		.uleb128 0x68
 2995 0f0e 13       		.uleb128 0x13
 2996 0f0f 58040000 		.4byte	.LASF222
 2997 0f13 08       		.byte	0x8
 2998 0f14 5B0D     		.2byte	0xd5b
 2999 0f16 0F0B0000 		.4byte	0xb0f
 3000 0f1a 02       		.byte	0x2
 3001 0f1b 23       		.byte	0x23
 3002 0f1c 6C       		.uleb128 0x6c
 3003 0f1d 13       		.uleb128 0x13
 3004 0f1e 99090000 		.4byte	.LASF223
 3005 0f22 08       		.byte	0x8
 3006 0f23 5C0D     		.2byte	0xd5c
 3007 0f25 0A0B0000 		.4byte	0xb0a
 3008 0f29 02       		.byte	0x2
 3009 0f2a 23       		.byte	0x23
 3010 0f2b 70       		.uleb128 0x70
 3011 0f2c 13       		.uleb128 0x13
 3012 0f2d 21000000 		.4byte	.LASF224
 3013 0f31 08       		.byte	0x8
 3014 0f32 5D0D     		.2byte	0xd5d
 3015 0f34 0A0B0000 		.4byte	0xb0a
 3016 0f38 02       		.byte	0x2
 3017 0f39 23       		.byte	0x23
 3018 0f3a 74       		.uleb128 0x74
 3019 0f3b 13       		.uleb128 0x13
 3020 0f3c 3A080000 		.4byte	.LASF225
 3021 0f40 08       		.byte	0x8
 3022 0f41 5E0D     		.2byte	0xd5e
 3023 0f43 0A0B0000 		.4byte	0xb0a
ARM GAS  /tmp/ccHZkoRj.s 			page 85


 3024 0f47 02       		.byte	0x2
 3025 0f48 23       		.byte	0x23
 3026 0f49 78       		.uleb128 0x78
 3027 0f4a 13       		.uleb128 0x13
 3028 0f4b 27080000 		.4byte	.LASF226
 3029 0f4f 08       		.byte	0x8
 3030 0f50 5F0D     		.2byte	0xd5f
 3031 0f52 18100000 		.4byte	0x1018
 3032 0f56 02       		.byte	0x2
 3033 0f57 23       		.byte	0x23
 3034 0f58 7C       		.uleb128 0x7c
 3035 0f59 13       		.uleb128 0x13
 3036 0f5a 60090000 		.4byte	.LASF227
 3037 0f5e 08       		.byte	0x8
 3038 0f5f 600D     		.2byte	0xd60
 3039 0f61 0A0B0000 		.4byte	0xb0a
 3040 0f65 03       		.byte	0x3
 3041 0f66 23       		.byte	0x23
 3042 0f67 E401     		.uleb128 0xe4
 3043 0f69 13       		.uleb128 0x13
 3044 0f6a 71060000 		.4byte	.LASF228
 3045 0f6e 08       		.byte	0x8
 3046 0f6f 610D     		.2byte	0xd61
 3047 0f71 0F0B0000 		.4byte	0xb0f
 3048 0f75 03       		.byte	0x3
 3049 0f76 23       		.byte	0x23
 3050 0f77 E801     		.uleb128 0xe8
 3051 0f79 13       		.uleb128 0x13
 3052 0f7a D4000000 		.4byte	.LASF229
 3053 0f7e 08       		.byte	0x8
 3054 0f7f 620D     		.2byte	0xd62
 3055 0f81 1D100000 		.4byte	0x101d
 3056 0f85 03       		.byte	0x3
 3057 0f86 23       		.byte	0x23
 3058 0f87 EC01     		.uleb128 0xec
 3059 0f89 13       		.uleb128 0x13
 3060 0f8a C1010000 		.4byte	.LASF230
 3061 0f8e 08       		.byte	0x8
 3062 0f8f 630D     		.2byte	0xd63
 3063 0f91 0A0B0000 		.4byte	0xb0a
 3064 0f95 03       		.byte	0x3
 3065 0f96 23       		.byte	0x23
 3066 0f97 8002     		.uleb128 0x100
 3067 0f99 13       		.uleb128 0x13
 3068 0f9a 240A0000 		.4byte	.LASF231
 3069 0f9e 08       		.byte	0x8
 3070 0f9f 640D     		.2byte	0xd64
 3071 0fa1 0A0B0000 		.4byte	0xb0a
 3072 0fa5 03       		.byte	0x3
 3073 0fa6 23       		.byte	0x23
 3074 0fa7 8402     		.uleb128 0x104
 3075 0fa9 13       		.uleb128 0x13
 3076 0faa 680A0000 		.4byte	.LASF232
 3077 0fae 08       		.byte	0x8
 3078 0faf 650D     		.2byte	0xd65
 3079 0fb1 0F0B0000 		.4byte	0xb0f
 3080 0fb5 03       		.byte	0x3
ARM GAS  /tmp/ccHZkoRj.s 			page 86


 3081 0fb6 23       		.byte	0x23
 3082 0fb7 8802     		.uleb128 0x108
 3083 0fb9 13       		.uleb128 0x13
 3084 0fba B3030000 		.4byte	.LASF233
 3085 0fbe 08       		.byte	0x8
 3086 0fbf 660D     		.2byte	0xd66
 3087 0fc1 22100000 		.4byte	0x1022
 3088 0fc5 03       		.byte	0x3
 3089 0fc6 23       		.byte	0x23
 3090 0fc7 8C02     		.uleb128 0x10c
 3091 0fc9 13       		.uleb128 0x13
 3092 0fca 07030000 		.4byte	.LASF234
 3093 0fce 08       		.byte	0x8
 3094 0fcf 670D     		.2byte	0xd67
 3095 0fd1 0A0B0000 		.4byte	0xb0a
 3096 0fd5 03       		.byte	0x3
 3097 0fd6 23       		.byte	0x23
 3098 0fd7 9002     		.uleb128 0x110
 3099 0fd9 00       		.byte	0
 3100 0fda 19       		.uleb128 0x19
 3101 0fdb 4A0D0000 		.4byte	0xd4a
 3102 0fdf 19       		.uleb128 0x19
 3103 0fe0 4A0D0000 		.4byte	0xd4a
 3104 0fe4 19       		.uleb128 0x19
 3105 0fe5 4A0D0000 		.4byte	0xd4a
 3106 0fe9 19       		.uleb128 0x19
 3107 0fea 4A0D0000 		.4byte	0xd4a
 3108 0fee 08       		.uleb128 0x8
 3109 0fef 01010000 		.4byte	0x101
 3110 0ff3 FE0F0000 		.4byte	0xffe
 3111 0ff7 09       		.uleb128 0x9
 3112 0ff8 4C000000 		.4byte	0x4c
 3113 0ffc 02       		.byte	0x2
 3114 0ffd 00       		.byte	0
 3115 0ffe 19       		.uleb128 0x19
 3116 0fff EE0F0000 		.4byte	0xfee
 3117 1003 19       		.uleb128 0x19
 3118 1004 980D0000 		.4byte	0xd98
 3119 1008 08       		.uleb128 0x8
 3120 1009 01010000 		.4byte	0x101
 3121 100d 18100000 		.4byte	0x1018
 3122 1011 09       		.uleb128 0x9
 3123 1012 4C000000 		.4byte	0x4c
 3124 1016 19       		.byte	0x19
 3125 1017 00       		.byte	0
 3126 1018 19       		.uleb128 0x19
 3127 1019 08100000 		.4byte	0x1008
 3128 101d 19       		.uleb128 0x19
 3129 101e 980D0000 		.4byte	0xd98
 3130 1022 19       		.uleb128 0x19
 3131 1023 4A0D0000 		.4byte	0xd4a
 3132 1027 1E       		.uleb128 0x1e
 3133 1028 506D6300 		.ascii	"Pmc\000"
 3134 102c 08       		.byte	0x8
 3135 102d 680D     		.2byte	0xd68
 3136 102f C90D0000 		.4byte	0xdc9
 3137 1033 20       		.uleb128 0x20
ARM GAS  /tmp/ccHZkoRj.s 			page 87


 3138 1034 40       		.byte	0x40
 3139 1035 08       		.byte	0x8
 3140 1036 4B15     		.2byte	0x154b
 3141 1038 00110000 		.4byte	0x1100
 3142 103c 13       		.uleb128 0x13
 3143 103d 66010000 		.4byte	.LASF235
 3144 1041 08       		.byte	0x8
 3145 1042 4C15     		.2byte	0x154c
 3146 1044 0A0B0000 		.4byte	0xb0a
 3147 1048 02       		.byte	0x2
 3148 1049 23       		.byte	0x23
 3149 104a 00       		.uleb128 0
 3150 104b 13       		.uleb128 0x13
 3151 104c F3040000 		.4byte	.LASF236
 3152 1050 08       		.byte	0x8
 3153 1051 4D15     		.2byte	0x154d
 3154 1053 0A0B0000 		.4byte	0xb0a
 3155 1057 02       		.byte	0x2
 3156 1058 23       		.byte	0x23
 3157 1059 04       		.uleb128 0x4
 3158 105a 13       		.uleb128 0x13
 3159 105b 63000000 		.4byte	.LASF237
 3160 105f 08       		.byte	0x8
 3161 1060 4E15     		.2byte	0x154e
 3162 1062 0A0B0000 		.4byte	0xb0a
 3163 1066 02       		.byte	0x2
 3164 1067 23       		.byte	0x23
 3165 1068 08       		.uleb128 0x8
 3166 1069 13       		.uleb128 0x13
 3167 106a F5070000 		.4byte	.LASF177
 3168 106e 08       		.byte	0x8
 3169 106f 4F15     		.2byte	0x154f
 3170 1071 00110000 		.4byte	0x1100
 3171 1075 02       		.byte	0x2
 3172 1076 23       		.byte	0x23
 3173 1077 0C       		.uleb128 0xc
 3174 1078 13       		.uleb128 0x13
 3175 1079 4D080000 		.4byte	.LASF238
 3176 107d 08       		.byte	0x8
 3177 107e 5015     		.2byte	0x1550
 3178 1080 0A0B0000 		.4byte	0xb0a
 3179 1084 02       		.byte	0x2
 3180 1085 23       		.byte	0x23
 3181 1086 10       		.uleb128 0x10
 3182 1087 13       		.uleb128 0x13
 3183 1088 A8020000 		.4byte	.LASF239
 3184 108c 08       		.byte	0x8
 3185 108d 5115     		.2byte	0x1551
 3186 108f 0A0B0000 		.4byte	0xb0a
 3187 1093 02       		.byte	0x2
 3188 1094 23       		.byte	0x23
 3189 1095 14       		.uleb128 0x14
 3190 1096 13       		.uleb128 0x13
 3191 1097 AE020000 		.4byte	.LASF240
 3192 109b 08       		.byte	0x8
 3193 109c 5215     		.2byte	0x1552
 3194 109e 0A0B0000 		.4byte	0xb0a
ARM GAS  /tmp/ccHZkoRj.s 			page 88


 3195 10a2 02       		.byte	0x2
 3196 10a3 23       		.byte	0x23
 3197 10a4 18       		.uleb128 0x18
 3198 10a5 13       		.uleb128 0x13
 3199 10a6 B4020000 		.4byte	.LASF241
 3200 10aa 08       		.byte	0x8
 3201 10ab 5315     		.2byte	0x1553
 3202 10ad 0A0B0000 		.4byte	0xb0a
 3203 10b1 02       		.byte	0x2
 3204 10b2 23       		.byte	0x23
 3205 10b3 1C       		.uleb128 0x1c
 3206 10b4 13       		.uleb128 0x13
 3207 10b5 01030000 		.4byte	.LASF242
 3208 10b9 08       		.byte	0x8
 3209 10ba 5415     		.2byte	0x1554
 3210 10bc 0A0B0000 		.4byte	0xb0a
 3211 10c0 02       		.byte	0x2
 3212 10c1 23       		.byte	0x23
 3213 10c2 20       		.uleb128 0x20
 3214 10c3 13       		.uleb128 0x13
 3215 10c4 2C040000 		.4byte	.LASF243
 3216 10c8 08       		.byte	0x8
 3217 10c9 5515     		.2byte	0x1555
 3218 10cb 0A0B0000 		.4byte	0xb0a
 3219 10cf 02       		.byte	0x2
 3220 10d0 23       		.byte	0x23
 3221 10d1 24       		.uleb128 0x24
 3222 10d2 13       		.uleb128 0x13
 3223 10d3 8A030000 		.4byte	.LASF244
 3224 10d7 08       		.byte	0x8
 3225 10d8 5615     		.2byte	0x1556
 3226 10da 0A0B0000 		.4byte	0xb0a
 3227 10de 02       		.byte	0x2
 3228 10df 23       		.byte	0x23
 3229 10e0 28       		.uleb128 0x28
 3230 10e1 13       		.uleb128 0x13
 3231 10e2 C0060000 		.4byte	.LASF245
 3232 10e6 08       		.byte	0x8
 3233 10e7 5715     		.2byte	0x1557
 3234 10e9 0A0B0000 		.4byte	0xb0a
 3235 10ed 02       		.byte	0x2
 3236 10ee 23       		.byte	0x23
 3237 10ef 2C       		.uleb128 0x2c
 3238 10f0 13       		.uleb128 0x13
 3239 10f1 FF070000 		.4byte	.LASF183
 3240 10f5 08       		.byte	0x8
 3241 10f6 5815     		.2byte	0x1558
 3242 10f8 05110000 		.4byte	0x1105
 3243 10fc 02       		.byte	0x2
 3244 10fd 23       		.byte	0x23
 3245 10fe 30       		.uleb128 0x30
 3246 10ff 00       		.byte	0
 3247 1100 19       		.uleb128 0x19
 3248 1101 4A0D0000 		.4byte	0xd4a
 3249 1105 19       		.uleb128 0x19
 3250 1106 B90D0000 		.4byte	0xdb9
 3251 110a 05       		.uleb128 0x5
ARM GAS  /tmp/ccHZkoRj.s 			page 89


 3252 110b 36020000 		.4byte	.LASF246
 3253 110f 08       		.byte	0x8
 3254 1110 5915     		.2byte	0x1559
 3255 1112 33100000 		.4byte	0x1033
 3256 1116 20       		.uleb128 0x20
 3257 1117 E8       		.byte	0xe8
 3258 1118 08       		.byte	0x8
 3259 1119 5B15     		.2byte	0x155b
 3260 111b BF110000 		.4byte	0x11bf
 3261 111f 13       		.uleb128 0x13
 3262 1120 1D010000 		.4byte	.LASF247
 3263 1124 08       		.byte	0x8
 3264 1125 5C15     		.2byte	0x155c
 3265 1127 BF110000 		.4byte	0x11bf
 3266 112b 02       		.byte	0x2
 3267 112c 23       		.byte	0x23
 3268 112d 00       		.uleb128 0
 3269 112e 13       		.uleb128 0x13
 3270 112f F3090000 		.4byte	.LASF248
 3271 1133 08       		.byte	0x8
 3272 1134 5D15     		.2byte	0x155d
 3273 1136 0A0B0000 		.4byte	0xb0a
 3274 113a 03       		.byte	0x3
 3275 113b 23       		.byte	0x23
 3276 113c C001     		.uleb128 0xc0
 3277 113e 13       		.uleb128 0x13
 3278 113f CB020000 		.4byte	.LASF249
 3279 1143 08       		.byte	0x8
 3280 1144 5E15     		.2byte	0x155e
 3281 1146 0A0B0000 		.4byte	0xb0a
 3282 114a 03       		.byte	0x3
 3283 114b 23       		.byte	0x23
 3284 114c C401     		.uleb128 0xc4
 3285 114e 13       		.uleb128 0x13
 3286 114f BF080000 		.4byte	.LASF250
 3287 1153 08       		.byte	0x8
 3288 1154 5F15     		.2byte	0x155f
 3289 1156 0A0B0000 		.4byte	0xb0a
 3290 115a 03       		.byte	0x3
 3291 115b 23       		.byte	0x23
 3292 115c C801     		.uleb128 0xc8
 3293 115e 13       		.uleb128 0x13
 3294 115f 9B080000 		.4byte	.LASF251
 3295 1163 08       		.byte	0x8
 3296 1164 6015     		.2byte	0x1560
 3297 1166 0A0B0000 		.4byte	0xb0a
 3298 116a 03       		.byte	0x3
 3299 116b 23       		.byte	0x23
 3300 116c CC01     		.uleb128 0xcc
 3301 116e 13       		.uleb128 0x13
 3302 116f 06010000 		.4byte	.LASF252
 3303 1173 08       		.byte	0x8
 3304 1174 6115     		.2byte	0x1561
 3305 1176 0F0B0000 		.4byte	0xb0f
 3306 117a 03       		.byte	0x3
 3307 117b 23       		.byte	0x23
 3308 117c D001     		.uleb128 0xd0
ARM GAS  /tmp/ccHZkoRj.s 			page 90


 3309 117e 13       		.uleb128 0x13
 3310 117f E2020000 		.4byte	.LASF253
 3311 1183 08       		.byte	0x8
 3312 1184 6215     		.2byte	0x1562
 3313 1186 0F0B0000 		.4byte	0xb0f
 3314 118a 03       		.byte	0x3
 3315 118b 23       		.byte	0x23
 3316 118c D401     		.uleb128 0xd4
 3317 118e 13       		.uleb128 0x13
 3318 118f CD000000 		.4byte	.LASF254
 3319 1193 08       		.byte	0x8
 3320 1194 6315     		.2byte	0x1563
 3321 1196 0A0B0000 		.4byte	0xb0a
 3322 119a 03       		.byte	0x3
 3323 119b 23       		.byte	0x23
 3324 119c D801     		.uleb128 0xd8
 3325 119e 13       		.uleb128 0x13
 3326 119f F5070000 		.4byte	.LASF177
 3327 11a3 08       		.byte	0x8
 3328 11a4 6415     		.2byte	0x1564
 3329 11a6 CF110000 		.4byte	0x11cf
 3330 11aa 03       		.byte	0x3
 3331 11ab 23       		.byte	0x23
 3332 11ac DC01     		.uleb128 0xdc
 3333 11ae 13       		.uleb128 0x13
 3334 11af 2F090000 		.4byte	.LASF255
 3335 11b3 08       		.byte	0x8
 3336 11b4 6515     		.2byte	0x1565
 3337 11b6 0A0B0000 		.4byte	0xb0a
 3338 11ba 03       		.byte	0x3
 3339 11bb 23       		.byte	0x23
 3340 11bc E401     		.uleb128 0xe4
 3341 11be 00       		.byte	0
 3342 11bf 08       		.uleb128 0x8
 3343 11c0 0A110000 		.4byte	0x110a
 3344 11c4 CF110000 		.4byte	0x11cf
 3345 11c8 09       		.uleb128 0x9
 3346 11c9 4C000000 		.4byte	0x4c
 3347 11cd 02       		.byte	0x2
 3348 11ce 00       		.byte	0
 3349 11cf 19       		.uleb128 0x19
 3350 11d0 5F0D0000 		.4byte	0xd5f
 3351 11d4 1E       		.uleb128 0x1e
 3352 11d5 546300   		.ascii	"Tc\000"
 3353 11d8 08       		.byte	0x8
 3354 11d9 6615     		.2byte	0x1566
 3355 11db 16110000 		.4byte	0x1116
 3356 11df 20       		.uleb128 0x20
 3357 11e0 0C       		.byte	0xc
 3358 11e1 08       		.byte	0x8
 3359 11e2 7C19     		.2byte	0x197c
 3360 11e4 16120000 		.4byte	0x1216
 3361 11e8 13       		.uleb128 0x13
 3362 11e9 87020000 		.4byte	.LASF256
 3363 11ed 08       		.byte	0x8
 3364 11ee 7D19     		.2byte	0x197d
 3365 11f0 0A0B0000 		.4byte	0xb0a
ARM GAS  /tmp/ccHZkoRj.s 			page 91


 3366 11f4 02       		.byte	0x2
 3367 11f5 23       		.byte	0x23
 3368 11f6 00       		.uleb128 0
 3369 11f7 13       		.uleb128 0x13
 3370 11f8 E7050000 		.4byte	.LASF257
 3371 11fc 08       		.byte	0x8
 3372 11fd 7E19     		.2byte	0x197e
 3373 11ff 0A0B0000 		.4byte	0xb0a
 3374 1203 02       		.byte	0x2
 3375 1204 23       		.byte	0x23
 3376 1205 04       		.uleb128 0x4
 3377 1206 13       		.uleb128 0x13
 3378 1207 53080000 		.4byte	.LASF258
 3379 120b 08       		.byte	0x8
 3380 120c 7F19     		.2byte	0x197f
 3381 120e 0F0B0000 		.4byte	0xb0f
 3382 1212 02       		.byte	0x2
 3383 1213 23       		.byte	0x23
 3384 1214 08       		.uleb128 0x8
 3385 1215 00       		.byte	0
 3386 1216 1E       		.uleb128 0x1e
 3387 1217 57647400 		.ascii	"Wdt\000"
 3388 121b 08       		.byte	0x8
 3389 121c 8019     		.2byte	0x1980
 3390 121e DF110000 		.4byte	0x11df
 3391 1222 04       		.uleb128 0x4
 3392 1223 A9040000 		.4byte	.LASF259
 3393 1227 09       		.byte	0x9
 3394 1228 10       		.byte	0x10
 3395 1229 A3080000 		.4byte	0x8a3
 3396 122d 21       		.uleb128 0x21
 3397 122e 01       		.byte	0x1
 3398 122f 09       		.byte	0x9
 3399 1230 12       		.byte	0x12
 3400 1231 4E120000 		.4byte	0x124e
 3401 1235 22       		.uleb128 0x22
 3402 1236 4F464600 		.ascii	"OFF\000"
 3403 123a 00       		.sleb128 0
 3404 123b 1B       		.uleb128 0x1b
 3405 123c 56060000 		.4byte	.LASF260
 3406 1240 01       		.sleb128 1
 3407 1241 1B       		.uleb128 0x1b
 3408 1242 61010000 		.4byte	.LASF261
 3409 1246 02       		.sleb128 2
 3410 1247 1B       		.uleb128 0x1b
 3411 1248 BA050000 		.4byte	.LASF262
 3412 124c 03       		.sleb128 3
 3413 124d 00       		.byte	0
 3414 124e 04       		.uleb128 0x4
 3415 124f 71050000 		.4byte	.LASF263
 3416 1253 09       		.byte	0x9
 3417 1254 12       		.byte	0x12
 3418 1255 2D120000 		.4byte	0x122d
 3419 1259 0D       		.uleb128 0xd
 3420 125a 7B020000 		.4byte	.LASF264
 3421 125e 2C       		.byte	0x2c
 3422 125f 09       		.byte	0x9
ARM GAS  /tmp/ccHZkoRj.s 			page 92


 3423 1260 15       		.byte	0x15
 3424 1261 24130000 		.4byte	0x1324
 3425 1265 0B       		.uleb128 0xb
 3426 1266 BA080000 		.4byte	.LASF265
 3427 126a 09       		.byte	0x9
 3428 126b 16       		.byte	0x16
 3429 126c 4E120000 		.4byte	0x124e
 3430 1270 02       		.byte	0x2
 3431 1271 23       		.byte	0x23
 3432 1272 00       		.uleb128 0
 3433 1273 0E       		.uleb128 0xe
 3434 1274 535000   		.ascii	"SP\000"
 3435 1277 09       		.byte	0x9
 3436 1278 17       		.byte	0x17
 3437 1279 22120000 		.4byte	0x1222
 3438 127d 02       		.byte	0x2
 3439 127e 23       		.byte	0x23
 3440 127f 02       		.uleb128 0x2
 3441 1280 0E       		.uleb128 0xe
 3442 1281 72535000 		.ascii	"rSP\000"
 3443 1285 09       		.byte	0x9
 3444 1286 18       		.byte	0x18
 3445 1287 22120000 		.4byte	0x1222
 3446 128b 02       		.byte	0x2
 3447 128c 23       		.byte	0x23
 3448 128d 04       		.uleb128 0x4
 3449 128e 0B       		.uleb128 0xb
 3450 128f F1020000 		.4byte	.LASF266
 3451 1293 09       		.byte	0x9
 3452 1294 19       		.byte	0x19
 3453 1295 45000000 		.4byte	0x45
 3454 1299 02       		.byte	0x2
 3455 129a 23       		.byte	0x23
 3456 129b 08       		.uleb128 0x8
 3457 129c 0E       		.uleb128 0xe
 3458 129d 4B7000   		.ascii	"Kp\000"
 3459 12a0 09       		.byte	0x9
 3460 12a1 1B       		.byte	0x1b
 3461 12a2 22120000 		.4byte	0x1222
 3462 12a6 02       		.byte	0x2
 3463 12a7 23       		.byte	0x23
 3464 12a8 0C       		.uleb128 0xc
 3465 12a9 0E       		.uleb128 0xe
 3466 12aa 4B6900   		.ascii	"Ki\000"
 3467 12ad 09       		.byte	0x9
 3468 12ae 1C       		.byte	0x1c
 3469 12af 22120000 		.4byte	0x1222
 3470 12b3 02       		.byte	0x2
 3471 12b4 23       		.byte	0x23
 3472 12b5 0E       		.uleb128 0xe
 3473 12b6 0E       		.uleb128 0xe
 3474 12b7 4B6400   		.ascii	"Kd\000"
 3475 12ba 09       		.byte	0x9
 3476 12bb 1D       		.byte	0x1d
 3477 12bc 22120000 		.4byte	0x1222
 3478 12c0 02       		.byte	0x2
 3479 12c1 23       		.byte	0x23
ARM GAS  /tmp/ccHZkoRj.s 			page 93


 3480 12c2 10       		.uleb128 0x10
 3481 12c3 0E       		.uleb128 0xe
 3482 12c4 5F6500   		.ascii	"_e\000"
 3483 12c7 09       		.byte	0x9
 3484 12c8 1F       		.byte	0x1f
 3485 12c9 45000000 		.4byte	0x45
 3486 12cd 02       		.byte	0x2
 3487 12ce 23       		.byte	0x23
 3488 12cf 14       		.uleb128 0x14
 3489 12d0 0E       		.uleb128 0xe
 3490 12d1 5F647800 		.ascii	"_dx\000"
 3491 12d5 09       		.byte	0x9
 3492 12d6 20       		.byte	0x20
 3493 12d7 45000000 		.4byte	0x45
 3494 12db 02       		.byte	0x2
 3495 12dc 23       		.byte	0x23
 3496 12dd 18       		.uleb128 0x18
 3497 12de 0E       		.uleb128 0xe
 3498 12df 5F646500 		.ascii	"_de\000"
 3499 12e3 09       		.byte	0x9
 3500 12e4 21       		.byte	0x21
 3501 12e5 45000000 		.4byte	0x45
 3502 12e9 02       		.byte	0x2
 3503 12ea 23       		.byte	0x23
 3504 12eb 1C       		.uleb128 0x1c
 3505 12ec 0B       		.uleb128 0xb
 3506 12ed B5050000 		.4byte	.LASF267
 3507 12f1 09       		.byte	0x9
 3508 12f2 22       		.byte	0x22
 3509 12f3 45000000 		.4byte	0x45
 3510 12f7 02       		.byte	0x2
 3511 12f8 23       		.byte	0x23
 3512 12f9 20       		.uleb128 0x20
 3513 12fa 0E       		.uleb128 0xe
 3514 12fb 5F7800   		.ascii	"_x\000"
 3515 12fe 09       		.byte	0x9
 3516 12ff 23       		.byte	0x23
 3517 1300 22120000 		.4byte	0x1222
 3518 1304 02       		.byte	0x2
 3519 1305 23       		.byte	0x23
 3520 1306 24       		.uleb128 0x24
 3521 1307 0B       		.uleb128 0xb
 3522 1308 C4020000 		.4byte	.LASF268
 3523 130c 09       		.byte	0x9
 3524 130d 25       		.byte	0x25
 3525 130e 37000000 		.4byte	0x37
 3526 1312 02       		.byte	0x2
 3527 1313 23       		.byte	0x23
 3528 1314 26       		.uleb128 0x26
 3529 1315 0B       		.uleb128 0xb
 3530 1316 45010000 		.4byte	.LASF269
 3531 131a 09       		.byte	0x9
 3532 131b 27       		.byte	0x27
 3533 131c 68130000 		.4byte	0x1368
 3534 1320 02       		.byte	0x2
 3535 1321 23       		.byte	0x23
 3536 1322 28       		.uleb128 0x28
ARM GAS  /tmp/ccHZkoRj.s 			page 94


 3537 1323 00       		.byte	0
 3538 1324 0D       		.uleb128 0xd
 3539 1325 9B040000 		.4byte	.LASF270
 3540 1329 10       		.byte	0x10
 3541 132a 09       		.byte	0x9
 3542 132b 2B       		.byte	0x2b
 3543 132c 68130000 		.4byte	0x1368
 3544 1330 0B       		.uleb128 0xb
 3545 1331 1D030000 		.4byte	.LASF271
 3546 1335 09       		.byte	0x9
 3547 1336 2C       		.byte	0x2c
 3548 1337 6E130000 		.4byte	0x136e
 3549 133b 02       		.byte	0x2
 3550 133c 23       		.byte	0x23
 3551 133d 00       		.uleb128 0
 3552 133e 0B       		.uleb128 0xb
 3553 133f C4020000 		.4byte	.LASF268
 3554 1343 09       		.byte	0x9
 3555 1344 2D       		.byte	0x2d
 3556 1345 45000000 		.4byte	0x45
 3557 1349 02       		.byte	0x2
 3558 134a 23       		.byte	0x23
 3559 134b 04       		.uleb128 0x4
 3560 134c 0E       		.uleb128 0xe
 3561 134d 6F6E00   		.ascii	"on\000"
 3562 1350 09       		.byte	0x9
 3563 1351 2E       		.byte	0x2e
 3564 1352 45000000 		.4byte	0x45
 3565 1356 02       		.byte	0x2
 3566 1357 23       		.byte	0x23
 3567 1358 08       		.uleb128 0x8
 3568 1359 0E       		.uleb128 0xe
 3569 135a 6F666600 		.ascii	"off\000"
 3570 135e 09       		.byte	0x9
 3571 135f 2F       		.byte	0x2f
 3572 1360 45000000 		.4byte	0x45
 3573 1364 02       		.byte	0x2
 3574 1365 23       		.byte	0x23
 3575 1366 0C       		.uleb128 0xc
 3576 1367 00       		.byte	0
 3577 1368 0F       		.uleb128 0xf
 3578 1369 04       		.byte	0x4
 3579 136a 24130000 		.4byte	0x1324
 3580 136e 0F       		.uleb128 0xf
 3581 136f 04       		.byte	0x4
 3582 1370 45000000 		.4byte	0x45
 3583 1374 0A       		.uleb128 0xa
 3584 1375 08       		.byte	0x8
 3585 1376 02       		.byte	0x2
 3586 1377 0C       		.byte	0xc
 3587 1378 B5130000 		.4byte	0x13b5
 3588 137c 0E       		.uleb128 0xe
 3589 137d 6D696E00 		.ascii	"min\000"
 3590 1381 02       		.byte	0x2
 3591 1382 0D       		.byte	0xd
 3592 1383 22120000 		.4byte	0x1222
 3593 1387 02       		.byte	0x2
ARM GAS  /tmp/ccHZkoRj.s 			page 95


 3594 1388 23       		.byte	0x23
 3595 1389 00       		.uleb128 0
 3596 138a 0E       		.uleb128 0xe
 3597 138b 6D617800 		.ascii	"max\000"
 3598 138f 02       		.byte	0x2
 3599 1390 0E       		.byte	0xe
 3600 1391 22120000 		.4byte	0x1222
 3601 1395 02       		.byte	0x2
 3602 1396 23       		.byte	0x23
 3603 1397 02       		.uleb128 0x2
 3604 1398 0B       		.uleb128 0xb
 3605 1399 03090000 		.4byte	.LASF272
 3606 139d 02       		.byte	0x2
 3607 139e 0F       		.byte	0xf
 3608 139f 22120000 		.4byte	0x1222
 3609 13a3 02       		.byte	0x2
 3610 13a4 23       		.byte	0x23
 3611 13a5 04       		.uleb128 0x4
 3612 13a6 0B       		.uleb128 0xb
 3613 13a7 D5040000 		.4byte	.LASF273
 3614 13ab 02       		.byte	0x2
 3615 13ac 10       		.byte	0x10
 3616 13ad 22120000 		.4byte	0x1222
 3617 13b1 02       		.byte	0x2
 3618 13b2 23       		.byte	0x23
 3619 13b3 06       		.uleb128 0x6
 3620 13b4 00       		.byte	0
 3621 13b5 23       		.uleb128 0x23
 3622 13b6 09000000 		.4byte	.LASF291
 3623 13ba 01       		.byte	0x1
 3624 13bb DE05     		.2byte	0x5de
 3625 13bd 01       		.byte	0x1
 3626 13be 00000000 		.4byte	.LFB14
 3627 13c2 36000000 		.4byte	.LFE14
 3628 13c6 00000000 		.4byte	.LLST0
 3629 13ca DE130000 		.4byte	0x13de
 3630 13ce 24       		.uleb128 0x24
 3631 13cf D0010000 		.4byte	.LASF290
 3632 13d3 01       		.byte	0x1
 3633 13d4 DE05     		.2byte	0x5de
 3634 13d6 BB090000 		.4byte	0x9bb
 3635 13da 02       		.byte	0x2
 3636 13db 91       		.byte	0x91
 3637 13dc 77       		.sleb128 -9
 3638 13dd 00       		.byte	0
 3639 13de 25       		.uleb128 0x25
 3640 13df 01       		.byte	0x1
 3641 13e0 CB010000 		.4byte	.LASF277
 3642 13e4 02       		.byte	0x2
 3643 13e5 15       		.byte	0x15
 3644 13e6 45000000 		.4byte	0x45
 3645 13ea 00000000 		.4byte	.LFB35
 3646 13ee F4040000 		.4byte	.LFE35
 3647 13f2 38000000 		.4byte	.LLST1
 3648 13f6 4E140000 		.4byte	0x144e
 3649 13fa 26       		.uleb128 0x26
 3650 13fb 60040000 		.4byte	.LASF274
ARM GAS  /tmp/ccHZkoRj.s 			page 96


 3651 13ff 02       		.byte	0x2
 3652 1400 17       		.byte	0x17
 3653 1401 F3050000 		.4byte	0x5f3
 3654 1405 02       		.byte	0x2
 3655 1406 91       		.byte	0x91
 3656 1407 6C       		.sleb128 -20
 3657 1408 27       		.uleb128 0x27
 3658 1409 6F707400 		.ascii	"opt\000"
 3659 140d 02       		.byte	0x2
 3660 140e 18       		.byte	0x18
 3661 140f 46080000 		.4byte	0x846
 3662 1413 02       		.byte	0x2
 3663 1414 91       		.byte	0x91
 3664 1415 58       		.sleb128 -40
 3665 1416 27       		.uleb128 0x27
 3666 1417 636D6400 		.ascii	"cmd\000"
 3667 141b 02       		.byte	0x2
 3668 141c 19       		.byte	0x19
 3669 141d F9050000 		.4byte	0x5f9
 3670 1421 02       		.byte	0x2
 3671 1422 91       		.byte	0x91
 3672 1423 67       		.sleb128 -25
 3673 1424 26       		.uleb128 0x26
 3674 1425 BB040000 		.4byte	.LASF275
 3675 1429 02       		.byte	0x2
 3676 142a 1B       		.byte	0x1b
 3677 142b 45000000 		.4byte	0x45
 3678 142f 02       		.byte	0x2
 3679 1430 91       		.byte	0x91
 3680 1431 60       		.sleb128 -32
 3681 1432 26       		.uleb128 0x26
 3682 1433 D0040000 		.4byte	.LASF276
 3683 1437 02       		.byte	0x2
 3684 1438 1C       		.byte	0x1c
 3685 1439 4E140000 		.4byte	0x144e
 3686 143d 02       		.byte	0x2
 3687 143e 91       		.byte	0x91
 3688 143f 4C       		.sleb128 -52
 3689 1440 27       		.uleb128 0x27
 3690 1441 696400   		.ascii	"id\000"
 3691 1444 02       		.byte	0x2
 3692 1445 1D       		.byte	0x1d
 3693 1446 4C000000 		.4byte	0x4c
 3694 144a 02       		.byte	0x2
 3695 144b 91       		.byte	0x91
 3696 144c 68       		.sleb128 -24
 3697 144d 00       		.byte	0
 3698 144e 08       		.uleb128 0x8
 3699 144f 45000000 		.4byte	0x45
 3700 1453 5E140000 		.4byte	0x145e
 3701 1457 09       		.uleb128 0x9
 3702 1458 4C000000 		.4byte	0x4c
 3703 145c 02       		.byte	0x2
 3704 145d 00       		.byte	0
 3705 145e 28       		.uleb128 0x28
 3706 145f 01       		.byte	0x1
 3707 1460 31070000 		.4byte	.LASF278
ARM GAS  /tmp/ccHZkoRj.s 			page 97


 3708 1464 02       		.byte	0x2
 3709 1465 91       		.byte	0x91
 3710 1466 01       		.byte	0x1
 3711 1467 00000000 		.4byte	.LFB36
 3712 146b 7C000000 		.4byte	.LFE36
 3713 146f 71000000 		.4byte	.LLST2
 3714 1473 92140000 		.4byte	0x1492
 3715 1477 27       		.uleb128 0x27
 3716 1478 6900     		.ascii	"i\000"
 3717 147a 02       		.byte	0x2
 3718 147b 93       		.byte	0x93
 3719 147c 98080000 		.4byte	0x898
 3720 1480 02       		.byte	0x2
 3721 1481 91       		.byte	0x91
 3722 1482 77       		.sleb128 -9
 3723 1483 26       		.uleb128 0x26
 3724 1484 EE000000 		.4byte	.LASF279
 3725 1488 02       		.byte	0x2
 3726 1489 94       		.byte	0x94
 3727 148a 92140000 		.4byte	0x1492
 3728 148e 02       		.byte	0x2
 3729 148f 91       		.byte	0x91
 3730 1490 70       		.sleb128 -16
 3731 1491 00       		.byte	0
 3732 1492 0F       		.uleb128 0xf
 3733 1493 04       		.byte	0x4
 3734 1494 59120000 		.4byte	0x1259
 3735 1498 28       		.uleb128 0x28
 3736 1499 01       		.byte	0x1
 3737 149a A4030000 		.4byte	.LASF280
 3738 149e 02       		.byte	0x2
 3739 149f 9D       		.byte	0x9d
 3740 14a0 01       		.byte	0x1
 3741 14a1 00000000 		.4byte	.LFB37
 3742 14a5 D6000000 		.4byte	.LFE37
 3743 14a9 A9000000 		.4byte	.LLST3
 3744 14ad F4140000 		.4byte	0x14f4
 3745 14b1 27       		.uleb128 0x27
 3746 14b2 6900     		.ascii	"i\000"
 3747 14b4 02       		.byte	0x2
 3748 14b5 9F       		.byte	0x9f
 3749 14b6 98080000 		.4byte	0x898
 3750 14ba 02       		.byte	0x2
 3751 14bb 91       		.byte	0x91
 3752 14bc 77       		.sleb128 -9
 3753 14bd 27       		.uleb128 0x27
 3754 14be 6D736B00 		.ascii	"msk\000"
 3755 14c2 02       		.byte	0x2
 3756 14c3 A0       		.byte	0xa0
 3757 14c4 98080000 		.4byte	0x898
 3758 14c8 02       		.byte	0x2
 3759 14c9 91       		.byte	0x91
 3760 14ca 76       		.sleb128 -10
 3761 14cb 26       		.uleb128 0x26
 3762 14cc 59090000 		.4byte	.LASF281
 3763 14d0 02       		.byte	0x2
 3764 14d1 A1       		.byte	0xa1
ARM GAS  /tmp/ccHZkoRj.s 			page 98


 3765 14d2 AE080000 		.4byte	0x8ae
 3766 14d6 02       		.byte	0x2
 3767 14d7 91       		.byte	0x91
 3768 14d8 6C       		.sleb128 -20
 3769 14d9 26       		.uleb128 0x26
 3770 14da EE000000 		.4byte	.LASF279
 3771 14de 02       		.byte	0x2
 3772 14df A2       		.byte	0xa2
 3773 14e0 92140000 		.4byte	0x1492
 3774 14e4 02       		.byte	0x2
 3775 14e5 91       		.byte	0x91
 3776 14e6 70       		.sleb128 -16
 3777 14e7 27       		.uleb128 0x27
 3778 14e8 7800     		.ascii	"x\000"
 3779 14ea 02       		.byte	0x2
 3780 14eb A3       		.byte	0xa3
 3781 14ec 22120000 		.4byte	0x1222
 3782 14f0 02       		.byte	0x2
 3783 14f1 91       		.byte	0x91
 3784 14f2 6A       		.sleb128 -22
 3785 14f3 00       		.byte	0
 3786 14f4 29       		.uleb128 0x29
 3787 14f5 E4070000 		.4byte	.LASF292
 3788 14f9 02       		.byte	0x2
 3789 14fa B9       		.byte	0xb9
 3790 14fb 00000000 		.4byte	.LFB38
 3791 14ff DA000000 		.4byte	.LFE38
 3792 1503 E1000000 		.4byte	.LLST4
 3793 1507 28150000 		.4byte	0x1528
 3794 150b 27       		.uleb128 0x27
 3795 150c 64697600 		.ascii	"div\000"
 3796 1510 02       		.byte	0x2
 3797 1511 BB       		.byte	0xbb
 3798 1512 AE080000 		.4byte	0x8ae
 3799 1516 02       		.byte	0x2
 3800 1517 91       		.byte	0x91
 3801 1518 6C       		.sleb128 -20
 3802 1519 26       		.uleb128 0x26
 3803 151a 7B070000 		.4byte	.LASF282
 3804 151e 02       		.byte	0x2
 3805 151f BC       		.byte	0xbc
 3806 1520 AE080000 		.4byte	0x8ae
 3807 1524 02       		.byte	0x2
 3808 1525 91       		.byte	0x91
 3809 1526 68       		.sleb128 -24
 3810 1527 00       		.byte	0
 3811 1528 2A       		.uleb128 0x2a
 3812 1529 84010000 		.4byte	.LASF283
 3813 152d 06       		.byte	0x6
 3814 152e 4803     		.2byte	0x348
 3815 1530 74040000 		.4byte	0x474
 3816 1534 01       		.byte	0x1
 3817 1535 01       		.byte	0x1
 3818 1536 2A       		.uleb128 0x2a
 3819 1537 A2050000 		.4byte	.LASF284
 3820 153b 01       		.byte	0x1
 3821 153c CE06     		.2byte	0x6ce
ARM GAS  /tmp/ccHZkoRj.s 			page 99


 3822 153e 44150000 		.4byte	0x1544
 3823 1542 01       		.byte	0x1
 3824 1543 01       		.byte	0x1
 3825 1544 19       		.uleb128 0x19
 3826 1545 45000000 		.4byte	0x45
 3827 1549 08       		.uleb128 0x8
 3828 154a 59120000 		.4byte	0x1259
 3829 154e 59150000 		.4byte	0x1559
 3830 1552 09       		.uleb128 0x9
 3831 1553 4C000000 		.4byte	0x4c
 3832 1557 01       		.byte	0x1
 3833 1558 00       		.byte	0
 3834 1559 26       		.uleb128 0x26
 3835 155a 38030000 		.4byte	.LASF285
 3836 155e 02       		.byte	0x2
 3837 155f 0A       		.byte	0xa
 3838 1560 49150000 		.4byte	0x1549
 3839 1564 05       		.byte	0x5
 3840 1565 03       		.byte	0x3
 3841 1566 00000000 		.4byte	loops
 3842 156a 08       		.uleb128 0x8
 3843 156b 74130000 		.4byte	0x1374
 3844 156f 7A150000 		.4byte	0x157a
 3845 1573 09       		.uleb128 0x9
 3846 1574 4C000000 		.4byte	0x4c
 3847 1578 01       		.byte	0x1
 3848 1579 00       		.byte	0
 3849 157a 26       		.uleb128 0x26
 3850 157b F3000000 		.4byte	.LASF286
 3851 157f 02       		.byte	0x2
 3852 1580 11       		.byte	0x11
 3853 1581 6A150000 		.4byte	0x156a
 3854 1585 05       		.byte	0x5
 3855 1586 03       		.byte	0x3
 3856 1587 58000000 		.4byte	conf
 3857 158b 2A       		.uleb128 0x2a
 3858 158c 84010000 		.4byte	.LASF283
 3859 1590 06       		.byte	0x6
 3860 1591 4803     		.2byte	0x348
 3861 1593 74040000 		.4byte	0x474
 3862 1597 01       		.byte	0x1
 3863 1598 01       		.byte	0x1
 3864 1599 2A       		.uleb128 0x2a
 3865 159a A2050000 		.4byte	.LASF284
 3866 159e 01       		.byte	0x1
 3867 159f CE06     		.2byte	0x6ce
 3868 15a1 44150000 		.4byte	0x1544
 3869 15a5 01       		.byte	0x1
 3870 15a6 01       		.byte	0x1
 3871 15a7 00       		.byte	0
 3872              		.section	.debug_abbrev,"",%progbits
 3873              	.Ldebug_abbrev0:
 3874 0000 01       		.uleb128 0x1
 3875 0001 11       		.uleb128 0x11
 3876 0002 01       		.byte	0x1
 3877 0003 25       		.uleb128 0x25
 3878 0004 0E       		.uleb128 0xe
ARM GAS  /tmp/ccHZkoRj.s 			page 100


 3879 0005 13       		.uleb128 0x13
 3880 0006 0B       		.uleb128 0xb
 3881 0007 03       		.uleb128 0x3
 3882 0008 0E       		.uleb128 0xe
 3883 0009 1B       		.uleb128 0x1b
 3884 000a 0E       		.uleb128 0xe
 3885 000b 11       		.uleb128 0x11
 3886 000c 01       		.uleb128 0x1
 3887 000d 52       		.uleb128 0x52
 3888 000e 01       		.uleb128 0x1
 3889 000f 55       		.uleb128 0x55
 3890 0010 06       		.uleb128 0x6
 3891 0011 10       		.uleb128 0x10
 3892 0012 06       		.uleb128 0x6
 3893 0013 00       		.byte	0
 3894 0014 00       		.byte	0
 3895 0015 02       		.uleb128 0x2
 3896 0016 24       		.uleb128 0x24
 3897 0017 00       		.byte	0
 3898 0018 0B       		.uleb128 0xb
 3899 0019 0B       		.uleb128 0xb
 3900 001a 3E       		.uleb128 0x3e
 3901 001b 0B       		.uleb128 0xb
 3902 001c 03       		.uleb128 0x3
 3903 001d 0E       		.uleb128 0xe
 3904 001e 00       		.byte	0
 3905 001f 00       		.byte	0
 3906 0020 03       		.uleb128 0x3
 3907 0021 24       		.uleb128 0x24
 3908 0022 00       		.byte	0
 3909 0023 0B       		.uleb128 0xb
 3910 0024 0B       		.uleb128 0xb
 3911 0025 3E       		.uleb128 0x3e
 3912 0026 0B       		.uleb128 0xb
 3913 0027 03       		.uleb128 0x3
 3914 0028 08       		.uleb128 0x8
 3915 0029 00       		.byte	0
 3916 002a 00       		.byte	0
 3917 002b 04       		.uleb128 0x4
 3918 002c 16       		.uleb128 0x16
 3919 002d 00       		.byte	0
 3920 002e 03       		.uleb128 0x3
 3921 002f 0E       		.uleb128 0xe
 3922 0030 3A       		.uleb128 0x3a
 3923 0031 0B       		.uleb128 0xb
 3924 0032 3B       		.uleb128 0x3b
 3925 0033 0B       		.uleb128 0xb
 3926 0034 49       		.uleb128 0x49
 3927 0035 13       		.uleb128 0x13
 3928 0036 00       		.byte	0
 3929 0037 00       		.byte	0
 3930 0038 05       		.uleb128 0x5
 3931 0039 16       		.uleb128 0x16
 3932 003a 00       		.byte	0
 3933 003b 03       		.uleb128 0x3
 3934 003c 0E       		.uleb128 0xe
 3935 003d 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccHZkoRj.s 			page 101


 3936 003e 0B       		.uleb128 0xb
 3937 003f 3B       		.uleb128 0x3b
 3938 0040 05       		.uleb128 0x5
 3939 0041 49       		.uleb128 0x49
 3940 0042 13       		.uleb128 0x13
 3941 0043 00       		.byte	0
 3942 0044 00       		.byte	0
 3943 0045 06       		.uleb128 0x6
 3944 0046 17       		.uleb128 0x17
 3945 0047 01       		.byte	0x1
 3946 0048 0B       		.uleb128 0xb
 3947 0049 0B       		.uleb128 0xb
 3948 004a 3A       		.uleb128 0x3a
 3949 004b 0B       		.uleb128 0xb
 3950 004c 3B       		.uleb128 0x3b
 3951 004d 0B       		.uleb128 0xb
 3952 004e 01       		.uleb128 0x1
 3953 004f 13       		.uleb128 0x13
 3954 0050 00       		.byte	0
 3955 0051 00       		.byte	0
 3956 0052 07       		.uleb128 0x7
 3957 0053 0D       		.uleb128 0xd
 3958 0054 00       		.byte	0
 3959 0055 03       		.uleb128 0x3
 3960 0056 0E       		.uleb128 0xe
 3961 0057 3A       		.uleb128 0x3a
 3962 0058 0B       		.uleb128 0xb
 3963 0059 3B       		.uleb128 0x3b
 3964 005a 0B       		.uleb128 0xb
 3965 005b 49       		.uleb128 0x49
 3966 005c 13       		.uleb128 0x13
 3967 005d 00       		.byte	0
 3968 005e 00       		.byte	0
 3969 005f 08       		.uleb128 0x8
 3970 0060 01       		.uleb128 0x1
 3971 0061 01       		.byte	0x1
 3972 0062 49       		.uleb128 0x49
 3973 0063 13       		.uleb128 0x13
 3974 0064 01       		.uleb128 0x1
 3975 0065 13       		.uleb128 0x13
 3976 0066 00       		.byte	0
 3977 0067 00       		.byte	0
 3978 0068 09       		.uleb128 0x9
 3979 0069 21       		.uleb128 0x21
 3980 006a 00       		.byte	0
 3981 006b 49       		.uleb128 0x49
 3982 006c 13       		.uleb128 0x13
 3983 006d 2F       		.uleb128 0x2f
 3984 006e 0B       		.uleb128 0xb
 3985 006f 00       		.byte	0
 3986 0070 00       		.byte	0
 3987 0071 0A       		.uleb128 0xa
 3988 0072 13       		.uleb128 0x13
 3989 0073 01       		.byte	0x1
 3990 0074 0B       		.uleb128 0xb
 3991 0075 0B       		.uleb128 0xb
 3992 0076 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccHZkoRj.s 			page 102


 3993 0077 0B       		.uleb128 0xb
 3994 0078 3B       		.uleb128 0x3b
 3995 0079 0B       		.uleb128 0xb
 3996 007a 01       		.uleb128 0x1
 3997 007b 13       		.uleb128 0x13
 3998 007c 00       		.byte	0
 3999 007d 00       		.byte	0
 4000 007e 0B       		.uleb128 0xb
 4001 007f 0D       		.uleb128 0xd
 4002 0080 00       		.byte	0
 4003 0081 03       		.uleb128 0x3
 4004 0082 0E       		.uleb128 0xe
 4005 0083 3A       		.uleb128 0x3a
 4006 0084 0B       		.uleb128 0xb
 4007 0085 3B       		.uleb128 0x3b
 4008 0086 0B       		.uleb128 0xb
 4009 0087 49       		.uleb128 0x49
 4010 0088 13       		.uleb128 0x13
 4011 0089 38       		.uleb128 0x38
 4012 008a 0A       		.uleb128 0xa
 4013 008b 00       		.byte	0
 4014 008c 00       		.byte	0
 4015 008d 0C       		.uleb128 0xc
 4016 008e 0F       		.uleb128 0xf
 4017 008f 00       		.byte	0
 4018 0090 0B       		.uleb128 0xb
 4019 0091 0B       		.uleb128 0xb
 4020 0092 00       		.byte	0
 4021 0093 00       		.byte	0
 4022 0094 0D       		.uleb128 0xd
 4023 0095 13       		.uleb128 0x13
 4024 0096 01       		.byte	0x1
 4025 0097 03       		.uleb128 0x3
 4026 0098 0E       		.uleb128 0xe
 4027 0099 0B       		.uleb128 0xb
 4028 009a 0B       		.uleb128 0xb
 4029 009b 3A       		.uleb128 0x3a
 4030 009c 0B       		.uleb128 0xb
 4031 009d 3B       		.uleb128 0x3b
 4032 009e 0B       		.uleb128 0xb
 4033 009f 01       		.uleb128 0x1
 4034 00a0 13       		.uleb128 0x13
 4035 00a1 00       		.byte	0
 4036 00a2 00       		.byte	0
 4037 00a3 0E       		.uleb128 0xe
 4038 00a4 0D       		.uleb128 0xd
 4039 00a5 00       		.byte	0
 4040 00a6 03       		.uleb128 0x3
 4041 00a7 08       		.uleb128 0x8
 4042 00a8 3A       		.uleb128 0x3a
 4043 00a9 0B       		.uleb128 0xb
 4044 00aa 3B       		.uleb128 0x3b
 4045 00ab 0B       		.uleb128 0xb
 4046 00ac 49       		.uleb128 0x49
 4047 00ad 13       		.uleb128 0x13
 4048 00ae 38       		.uleb128 0x38
 4049 00af 0A       		.uleb128 0xa
ARM GAS  /tmp/ccHZkoRj.s 			page 103


 4050 00b0 00       		.byte	0
 4051 00b1 00       		.byte	0
 4052 00b2 0F       		.uleb128 0xf
 4053 00b3 0F       		.uleb128 0xf
 4054 00b4 00       		.byte	0
 4055 00b5 0B       		.uleb128 0xb
 4056 00b6 0B       		.uleb128 0xb
 4057 00b7 49       		.uleb128 0x49
 4058 00b8 13       		.uleb128 0x13
 4059 00b9 00       		.byte	0
 4060 00ba 00       		.byte	0
 4061 00bb 10       		.uleb128 0x10
 4062 00bc 13       		.uleb128 0x13
 4063 00bd 01       		.byte	0x1
 4064 00be 03       		.uleb128 0x3
 4065 00bf 0E       		.uleb128 0xe
 4066 00c0 0B       		.uleb128 0xb
 4067 00c1 05       		.uleb128 0x5
 4068 00c2 3A       		.uleb128 0x3a
 4069 00c3 0B       		.uleb128 0xb
 4070 00c4 3B       		.uleb128 0x3b
 4071 00c5 0B       		.uleb128 0xb
 4072 00c6 01       		.uleb128 0x1
 4073 00c7 13       		.uleb128 0x13
 4074 00c8 00       		.byte	0
 4075 00c9 00       		.byte	0
 4076 00ca 11       		.uleb128 0x11
 4077 00cb 15       		.uleb128 0x15
 4078 00cc 00       		.byte	0
 4079 00cd 27       		.uleb128 0x27
 4080 00ce 0C       		.uleb128 0xc
 4081 00cf 00       		.byte	0
 4082 00d0 00       		.byte	0
 4083 00d1 12       		.uleb128 0x12
 4084 00d2 13       		.uleb128 0x13
 4085 00d3 01       		.byte	0x1
 4086 00d4 03       		.uleb128 0x3
 4087 00d5 0E       		.uleb128 0xe
 4088 00d6 0B       		.uleb128 0xb
 4089 00d7 0B       		.uleb128 0xb
 4090 00d8 3A       		.uleb128 0x3a
 4091 00d9 0B       		.uleb128 0xb
 4092 00da 3B       		.uleb128 0x3b
 4093 00db 05       		.uleb128 0x5
 4094 00dc 01       		.uleb128 0x1
 4095 00dd 13       		.uleb128 0x13
 4096 00de 00       		.byte	0
 4097 00df 00       		.byte	0
 4098 00e0 13       		.uleb128 0x13
 4099 00e1 0D       		.uleb128 0xd
 4100 00e2 00       		.byte	0
 4101 00e3 03       		.uleb128 0x3
 4102 00e4 0E       		.uleb128 0xe
 4103 00e5 3A       		.uleb128 0x3a
 4104 00e6 0B       		.uleb128 0xb
 4105 00e7 3B       		.uleb128 0x3b
 4106 00e8 05       		.uleb128 0x5
ARM GAS  /tmp/ccHZkoRj.s 			page 104


 4107 00e9 49       		.uleb128 0x49
 4108 00ea 13       		.uleb128 0x13
 4109 00eb 38       		.uleb128 0x38
 4110 00ec 0A       		.uleb128 0xa
 4111 00ed 00       		.byte	0
 4112 00ee 00       		.byte	0
 4113 00ef 14       		.uleb128 0x14
 4114 00f0 0D       		.uleb128 0xd
 4115 00f1 00       		.byte	0
 4116 00f2 03       		.uleb128 0x3
 4117 00f3 08       		.uleb128 0x8
 4118 00f4 3A       		.uleb128 0x3a
 4119 00f5 0B       		.uleb128 0xb
 4120 00f6 3B       		.uleb128 0x3b
 4121 00f7 05       		.uleb128 0x5
 4122 00f8 49       		.uleb128 0x49
 4123 00f9 13       		.uleb128 0x13
 4124 00fa 38       		.uleb128 0x38
 4125 00fb 0A       		.uleb128 0xa
 4126 00fc 00       		.byte	0
 4127 00fd 00       		.byte	0
 4128 00fe 15       		.uleb128 0x15
 4129 00ff 15       		.uleb128 0x15
 4130 0100 01       		.byte	0x1
 4131 0101 27       		.uleb128 0x27
 4132 0102 0C       		.uleb128 0xc
 4133 0103 49       		.uleb128 0x49
 4134 0104 13       		.uleb128 0x13
 4135 0105 01       		.uleb128 0x1
 4136 0106 13       		.uleb128 0x13
 4137 0107 00       		.byte	0
 4138 0108 00       		.byte	0
 4139 0109 16       		.uleb128 0x16
 4140 010a 05       		.uleb128 0x5
 4141 010b 00       		.byte	0
 4142 010c 49       		.uleb128 0x49
 4143 010d 13       		.uleb128 0x13
 4144 010e 00       		.byte	0
 4145 010f 00       		.byte	0
 4146 0110 17       		.uleb128 0x17
 4147 0111 26       		.uleb128 0x26
 4148 0112 00       		.byte	0
 4149 0113 49       		.uleb128 0x49
 4150 0114 13       		.uleb128 0x13
 4151 0115 00       		.byte	0
 4152 0116 00       		.byte	0
 4153 0117 18       		.uleb128 0x18
 4154 0118 15       		.uleb128 0x15
 4155 0119 01       		.byte	0x1
 4156 011a 27       		.uleb128 0x27
 4157 011b 0C       		.uleb128 0xc
 4158 011c 01       		.uleb128 0x1
 4159 011d 13       		.uleb128 0x13
 4160 011e 00       		.byte	0
 4161 011f 00       		.byte	0
 4162 0120 19       		.uleb128 0x19
 4163 0121 35       		.uleb128 0x35
ARM GAS  /tmp/ccHZkoRj.s 			page 105


 4164 0122 00       		.byte	0
 4165 0123 49       		.uleb128 0x49
 4166 0124 13       		.uleb128 0x13
 4167 0125 00       		.byte	0
 4168 0126 00       		.byte	0
 4169 0127 1A       		.uleb128 0x1a
 4170 0128 04       		.uleb128 0x4
 4171 0129 01       		.byte	0x1
 4172 012a 03       		.uleb128 0x3
 4173 012b 0E       		.uleb128 0xe
 4174 012c 0B       		.uleb128 0xb
 4175 012d 0B       		.uleb128 0xb
 4176 012e 3A       		.uleb128 0x3a
 4177 012f 0B       		.uleb128 0xb
 4178 0130 3B       		.uleb128 0x3b
 4179 0131 0B       		.uleb128 0xb
 4180 0132 01       		.uleb128 0x1
 4181 0133 13       		.uleb128 0x13
 4182 0134 00       		.byte	0
 4183 0135 00       		.byte	0
 4184 0136 1B       		.uleb128 0x1b
 4185 0137 28       		.uleb128 0x28
 4186 0138 00       		.byte	0
 4187 0139 03       		.uleb128 0x3
 4188 013a 0E       		.uleb128 0xe
 4189 013b 1C       		.uleb128 0x1c
 4190 013c 0D       		.uleb128 0xd
 4191 013d 00       		.byte	0
 4192 013e 00       		.byte	0
 4193 013f 1C       		.uleb128 0x1c
 4194 0140 13       		.uleb128 0x13
 4195 0141 01       		.byte	0x1
 4196 0142 0B       		.uleb128 0xb
 4197 0143 05       		.uleb128 0x5
 4198 0144 3A       		.uleb128 0x3a
 4199 0145 0B       		.uleb128 0xb
 4200 0146 3B       		.uleb128 0x3b
 4201 0147 0B       		.uleb128 0xb
 4202 0148 01       		.uleb128 0x1
 4203 0149 13       		.uleb128 0x13
 4204 014a 00       		.byte	0
 4205 014b 00       		.byte	0
 4206 014c 1D       		.uleb128 0x1d
 4207 014d 21       		.uleb128 0x21
 4208 014e 00       		.byte	0
 4209 014f 49       		.uleb128 0x49
 4210 0150 13       		.uleb128 0x13
 4211 0151 2F       		.uleb128 0x2f
 4212 0152 05       		.uleb128 0x5
 4213 0153 00       		.byte	0
 4214 0154 00       		.byte	0
 4215 0155 1E       		.uleb128 0x1e
 4216 0156 16       		.uleb128 0x16
 4217 0157 00       		.byte	0
 4218 0158 03       		.uleb128 0x3
 4219 0159 08       		.uleb128 0x8
 4220 015a 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccHZkoRj.s 			page 106


 4221 015b 0B       		.uleb128 0xb
 4222 015c 3B       		.uleb128 0x3b
 4223 015d 05       		.uleb128 0x5
 4224 015e 49       		.uleb128 0x49
 4225 015f 13       		.uleb128 0x13
 4226 0160 00       		.byte	0
 4227 0161 00       		.byte	0
 4228 0162 1F       		.uleb128 0x1f
 4229 0163 13       		.uleb128 0x13
 4230 0164 01       		.byte	0x1
 4231 0165 0B       		.uleb128 0xb
 4232 0166 05       		.uleb128 0x5
 4233 0167 3A       		.uleb128 0x3a
 4234 0168 0B       		.uleb128 0xb
 4235 0169 3B       		.uleb128 0x3b
 4236 016a 05       		.uleb128 0x5
 4237 016b 01       		.uleb128 0x1
 4238 016c 13       		.uleb128 0x13
 4239 016d 00       		.byte	0
 4240 016e 00       		.byte	0
 4241 016f 20       		.uleb128 0x20
 4242 0170 13       		.uleb128 0x13
 4243 0171 01       		.byte	0x1
 4244 0172 0B       		.uleb128 0xb
 4245 0173 0B       		.uleb128 0xb
 4246 0174 3A       		.uleb128 0x3a
 4247 0175 0B       		.uleb128 0xb
 4248 0176 3B       		.uleb128 0x3b
 4249 0177 05       		.uleb128 0x5
 4250 0178 01       		.uleb128 0x1
 4251 0179 13       		.uleb128 0x13
 4252 017a 00       		.byte	0
 4253 017b 00       		.byte	0
 4254 017c 21       		.uleb128 0x21
 4255 017d 04       		.uleb128 0x4
 4256 017e 01       		.byte	0x1
 4257 017f 0B       		.uleb128 0xb
 4258 0180 0B       		.uleb128 0xb
 4259 0181 3A       		.uleb128 0x3a
 4260 0182 0B       		.uleb128 0xb
 4261 0183 3B       		.uleb128 0x3b
 4262 0184 0B       		.uleb128 0xb
 4263 0185 01       		.uleb128 0x1
 4264 0186 13       		.uleb128 0x13
 4265 0187 00       		.byte	0
 4266 0188 00       		.byte	0
 4267 0189 22       		.uleb128 0x22
 4268 018a 28       		.uleb128 0x28
 4269 018b 00       		.byte	0
 4270 018c 03       		.uleb128 0x3
 4271 018d 08       		.uleb128 0x8
 4272 018e 1C       		.uleb128 0x1c
 4273 018f 0D       		.uleb128 0xd
 4274 0190 00       		.byte	0
 4275 0191 00       		.byte	0
 4276 0192 23       		.uleb128 0x23
 4277 0193 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccHZkoRj.s 			page 107


 4278 0194 01       		.byte	0x1
 4279 0195 03       		.uleb128 0x3
 4280 0196 0E       		.uleb128 0xe
 4281 0197 3A       		.uleb128 0x3a
 4282 0198 0B       		.uleb128 0xb
 4283 0199 3B       		.uleb128 0x3b
 4284 019a 05       		.uleb128 0x5
 4285 019b 27       		.uleb128 0x27
 4286 019c 0C       		.uleb128 0xc
 4287 019d 11       		.uleb128 0x11
 4288 019e 01       		.uleb128 0x1
 4289 019f 12       		.uleb128 0x12
 4290 01a0 01       		.uleb128 0x1
 4291 01a1 40       		.uleb128 0x40
 4292 01a2 06       		.uleb128 0x6
 4293 01a3 01       		.uleb128 0x1
 4294 01a4 13       		.uleb128 0x13
 4295 01a5 00       		.byte	0
 4296 01a6 00       		.byte	0
 4297 01a7 24       		.uleb128 0x24
 4298 01a8 05       		.uleb128 0x5
 4299 01a9 00       		.byte	0
 4300 01aa 03       		.uleb128 0x3
 4301 01ab 0E       		.uleb128 0xe
 4302 01ac 3A       		.uleb128 0x3a
 4303 01ad 0B       		.uleb128 0xb
 4304 01ae 3B       		.uleb128 0x3b
 4305 01af 05       		.uleb128 0x5
 4306 01b0 49       		.uleb128 0x49
 4307 01b1 13       		.uleb128 0x13
 4308 01b2 02       		.uleb128 0x2
 4309 01b3 0A       		.uleb128 0xa
 4310 01b4 00       		.byte	0
 4311 01b5 00       		.byte	0
 4312 01b6 25       		.uleb128 0x25
 4313 01b7 2E       		.uleb128 0x2e
 4314 01b8 01       		.byte	0x1
 4315 01b9 3F       		.uleb128 0x3f
 4316 01ba 0C       		.uleb128 0xc
 4317 01bb 03       		.uleb128 0x3
 4318 01bc 0E       		.uleb128 0xe
 4319 01bd 3A       		.uleb128 0x3a
 4320 01be 0B       		.uleb128 0xb
 4321 01bf 3B       		.uleb128 0x3b
 4322 01c0 0B       		.uleb128 0xb
 4323 01c1 49       		.uleb128 0x49
 4324 01c2 13       		.uleb128 0x13
 4325 01c3 11       		.uleb128 0x11
 4326 01c4 01       		.uleb128 0x1
 4327 01c5 12       		.uleb128 0x12
 4328 01c6 01       		.uleb128 0x1
 4329 01c7 40       		.uleb128 0x40
 4330 01c8 06       		.uleb128 0x6
 4331 01c9 01       		.uleb128 0x1
 4332 01ca 13       		.uleb128 0x13
 4333 01cb 00       		.byte	0
 4334 01cc 00       		.byte	0
ARM GAS  /tmp/ccHZkoRj.s 			page 108


 4335 01cd 26       		.uleb128 0x26
 4336 01ce 34       		.uleb128 0x34
 4337 01cf 00       		.byte	0
 4338 01d0 03       		.uleb128 0x3
 4339 01d1 0E       		.uleb128 0xe
 4340 01d2 3A       		.uleb128 0x3a
 4341 01d3 0B       		.uleb128 0xb
 4342 01d4 3B       		.uleb128 0x3b
 4343 01d5 0B       		.uleb128 0xb
 4344 01d6 49       		.uleb128 0x49
 4345 01d7 13       		.uleb128 0x13
 4346 01d8 02       		.uleb128 0x2
 4347 01d9 0A       		.uleb128 0xa
 4348 01da 00       		.byte	0
 4349 01db 00       		.byte	0
 4350 01dc 27       		.uleb128 0x27
 4351 01dd 34       		.uleb128 0x34
 4352 01de 00       		.byte	0
 4353 01df 03       		.uleb128 0x3
 4354 01e0 08       		.uleb128 0x8
 4355 01e1 3A       		.uleb128 0x3a
 4356 01e2 0B       		.uleb128 0xb
 4357 01e3 3B       		.uleb128 0x3b
 4358 01e4 0B       		.uleb128 0xb
 4359 01e5 49       		.uleb128 0x49
 4360 01e6 13       		.uleb128 0x13
 4361 01e7 02       		.uleb128 0x2
 4362 01e8 0A       		.uleb128 0xa
 4363 01e9 00       		.byte	0
 4364 01ea 00       		.byte	0
 4365 01eb 28       		.uleb128 0x28
 4366 01ec 2E       		.uleb128 0x2e
 4367 01ed 01       		.byte	0x1
 4368 01ee 3F       		.uleb128 0x3f
 4369 01ef 0C       		.uleb128 0xc
 4370 01f0 03       		.uleb128 0x3
 4371 01f1 0E       		.uleb128 0xe
 4372 01f2 3A       		.uleb128 0x3a
 4373 01f3 0B       		.uleb128 0xb
 4374 01f4 3B       		.uleb128 0x3b
 4375 01f5 0B       		.uleb128 0xb
 4376 01f6 27       		.uleb128 0x27
 4377 01f7 0C       		.uleb128 0xc
 4378 01f8 11       		.uleb128 0x11
 4379 01f9 01       		.uleb128 0x1
 4380 01fa 12       		.uleb128 0x12
 4381 01fb 01       		.uleb128 0x1
 4382 01fc 40       		.uleb128 0x40
 4383 01fd 06       		.uleb128 0x6
 4384 01fe 01       		.uleb128 0x1
 4385 01ff 13       		.uleb128 0x13
 4386 0200 00       		.byte	0
 4387 0201 00       		.byte	0
 4388 0202 29       		.uleb128 0x29
 4389 0203 2E       		.uleb128 0x2e
 4390 0204 01       		.byte	0x1
 4391 0205 03       		.uleb128 0x3
ARM GAS  /tmp/ccHZkoRj.s 			page 109


 4392 0206 0E       		.uleb128 0xe
 4393 0207 3A       		.uleb128 0x3a
 4394 0208 0B       		.uleb128 0xb
 4395 0209 3B       		.uleb128 0x3b
 4396 020a 0B       		.uleb128 0xb
 4397 020b 11       		.uleb128 0x11
 4398 020c 01       		.uleb128 0x1
 4399 020d 12       		.uleb128 0x12
 4400 020e 01       		.uleb128 0x1
 4401 020f 40       		.uleb128 0x40
 4402 0210 06       		.uleb128 0x6
 4403 0211 01       		.uleb128 0x1
 4404 0212 13       		.uleb128 0x13
 4405 0213 00       		.byte	0
 4406 0214 00       		.byte	0
 4407 0215 2A       		.uleb128 0x2a
 4408 0216 34       		.uleb128 0x34
 4409 0217 00       		.byte	0
 4410 0218 03       		.uleb128 0x3
 4411 0219 0E       		.uleb128 0xe
 4412 021a 3A       		.uleb128 0x3a
 4413 021b 0B       		.uleb128 0xb
 4414 021c 3B       		.uleb128 0x3b
 4415 021d 05       		.uleb128 0x5
 4416 021e 49       		.uleb128 0x49
 4417 021f 13       		.uleb128 0x13
 4418 0220 3F       		.uleb128 0x3f
 4419 0221 0C       		.uleb128 0xc
 4420 0222 3C       		.uleb128 0x3c
 4421 0223 0C       		.uleb128 0xc
 4422 0224 00       		.byte	0
 4423 0225 00       		.byte	0
 4424 0226 00       		.byte	0
 4425              		.section	.debug_loc,"",%progbits
 4426              	.Ldebug_loc0:
 4427              	.LLST0:
 4428 0000 00000000 		.4byte	.LFB14
 4429 0004 02000000 		.4byte	.LCFI0
 4430 0008 0200     		.2byte	0x2
 4431 000a 7D       		.byte	0x7d
 4432 000b 00       		.sleb128 0
 4433 000c 02000000 		.4byte	.LCFI0
 4434 0010 04000000 		.4byte	.LCFI1
 4435 0014 0200     		.2byte	0x2
 4436 0016 7D       		.byte	0x7d
 4437 0017 04       		.sleb128 4
 4438 0018 04000000 		.4byte	.LCFI1
 4439 001c 06000000 		.4byte	.LCFI2
 4440 0020 0200     		.2byte	0x2
 4441 0022 7D       		.byte	0x7d
 4442 0023 10       		.sleb128 16
 4443 0024 06000000 		.4byte	.LCFI2
 4444 0028 36000000 		.4byte	.LFE14
 4445 002c 0200     		.2byte	0x2
 4446 002e 77       		.byte	0x77
 4447 002f 10       		.sleb128 16
 4448 0030 00000000 		.4byte	0
ARM GAS  /tmp/ccHZkoRj.s 			page 110


 4449 0034 00000000 		.4byte	0
 4450              	.LLST1:
 4451 0038 00000000 		.4byte	.LFB35
 4452 003c 02000000 		.4byte	.LCFI3
 4453 0040 0200     		.2byte	0x2
 4454 0042 7D       		.byte	0x7d
 4455 0043 00       		.sleb128 0
 4456 0044 02000000 		.4byte	.LCFI3
 4457 0048 04000000 		.4byte	.LCFI4
 4458 004c 0200     		.2byte	0x2
 4459 004e 7D       		.byte	0x7d
 4460 004f 0C       		.sleb128 12
 4461 0050 04000000 		.4byte	.LCFI4
 4462 0054 06000000 		.4byte	.LCFI5
 4463 0058 0300     		.2byte	0x3
 4464 005a 7D       		.byte	0x7d
 4465 005b C000     		.sleb128 64
 4466 005d 06000000 		.4byte	.LCFI5
 4467 0061 F4040000 		.4byte	.LFE35
 4468 0065 0200     		.2byte	0x2
 4469 0067 77       		.byte	0x77
 4470 0068 38       		.sleb128 56
 4471 0069 00000000 		.4byte	0
 4472 006d 00000000 		.4byte	0
 4473              	.LLST2:
 4474 0071 00000000 		.4byte	.LFB36
 4475 0075 02000000 		.4byte	.LCFI6
 4476 0079 0200     		.2byte	0x2
 4477 007b 7D       		.byte	0x7d
 4478 007c 00       		.sleb128 0
 4479 007d 02000000 		.4byte	.LCFI6
 4480 0081 04000000 		.4byte	.LCFI7
 4481 0085 0200     		.2byte	0x2
 4482 0087 7D       		.byte	0x7d
 4483 0088 04       		.sleb128 4
 4484 0089 04000000 		.4byte	.LCFI7
 4485 008d 06000000 		.4byte	.LCFI8
 4486 0091 0200     		.2byte	0x2
 4487 0093 7D       		.byte	0x7d
 4488 0094 10       		.sleb128 16
 4489 0095 06000000 		.4byte	.LCFI8
 4490 0099 7C000000 		.4byte	.LFE36
 4491 009d 0200     		.2byte	0x2
 4492 009f 77       		.byte	0x77
 4493 00a0 10       		.sleb128 16
 4494 00a1 00000000 		.4byte	0
 4495 00a5 00000000 		.4byte	0
 4496              	.LLST3:
 4497 00a9 00000000 		.4byte	.LFB37
 4498 00ad 02000000 		.4byte	.LCFI9
 4499 00b1 0200     		.2byte	0x2
 4500 00b3 7D       		.byte	0x7d
 4501 00b4 00       		.sleb128 0
 4502 00b5 02000000 		.4byte	.LCFI9
 4503 00b9 04000000 		.4byte	.LCFI10
 4504 00bd 0200     		.2byte	0x2
 4505 00bf 7D       		.byte	0x7d
ARM GAS  /tmp/ccHZkoRj.s 			page 111


 4506 00c0 08       		.sleb128 8
 4507 00c1 04000000 		.4byte	.LCFI10
 4508 00c5 06000000 		.4byte	.LCFI11
 4509 00c9 0200     		.2byte	0x2
 4510 00cb 7D       		.byte	0x7d
 4511 00cc 18       		.sleb128 24
 4512 00cd 06000000 		.4byte	.LCFI11
 4513 00d1 D6000000 		.4byte	.LFE37
 4514 00d5 0200     		.2byte	0x2
 4515 00d7 77       		.byte	0x77
 4516 00d8 18       		.sleb128 24
 4517 00d9 00000000 		.4byte	0
 4518 00dd 00000000 		.4byte	0
 4519              	.LLST4:
 4520 00e1 00000000 		.4byte	.LFB38
 4521 00e5 02000000 		.4byte	.LCFI12
 4522 00e9 0200     		.2byte	0x2
 4523 00eb 7D       		.byte	0x7d
 4524 00ec 00       		.sleb128 0
 4525 00ed 02000000 		.4byte	.LCFI12
 4526 00f1 04000000 		.4byte	.LCFI13
 4527 00f5 0200     		.2byte	0x2
 4528 00f7 7D       		.byte	0x7d
 4529 00f8 0C       		.sleb128 12
 4530 00f9 04000000 		.4byte	.LCFI13
 4531 00fd 06000000 		.4byte	.LCFI14
 4532 0101 0200     		.2byte	0x2
 4533 0103 7D       		.byte	0x7d
 4534 0104 20       		.sleb128 32
 4535 0105 06000000 		.4byte	.LCFI14
 4536 0109 DA000000 		.4byte	.LFE38
 4537 010d 0200     		.2byte	0x2
 4538 010f 77       		.byte	0x77
 4539 0110 18       		.sleb128 24
 4540 0111 00000000 		.4byte	0
 4541 0115 00000000 		.4byte	0
 4542              		.section	.debug_aranges,"",%progbits
 4543 0000 3C000000 		.4byte	0x3c
 4544 0004 0200     		.2byte	0x2
 4545 0006 00000000 		.4byte	.Ldebug_info0
 4546 000a 04       		.byte	0x4
 4547 000b 00       		.byte	0
 4548 000c 0000     		.2byte	0
 4549 000e 0000     		.2byte	0
 4550 0010 00000000 		.4byte	.LFB14
 4551 0014 36000000 		.4byte	.LFE14-.LFB14
 4552 0018 00000000 		.4byte	.LFB35
 4553 001c F4040000 		.4byte	.LFE35-.LFB35
 4554 0020 00000000 		.4byte	.LFB36
 4555 0024 7C000000 		.4byte	.LFE36-.LFB36
 4556 0028 00000000 		.4byte	.LFB37
 4557 002c D6000000 		.4byte	.LFE37-.LFB37
 4558 0030 00000000 		.4byte	.LFB38
 4559 0034 DA000000 		.4byte	.LFE38-.LFB38
 4560 0038 00000000 		.4byte	0
 4561 003c 00000000 		.4byte	0
 4562              		.section	.debug_ranges,"",%progbits
ARM GAS  /tmp/ccHZkoRj.s 			page 112


 4563              	.Ldebug_ranges0:
 4564 0000 00000000 		.4byte	.LFB14
 4565 0004 36000000 		.4byte	.LFE14
 4566 0008 00000000 		.4byte	.LFB35
 4567 000c F4040000 		.4byte	.LFE35
 4568 0010 00000000 		.4byte	.LFB36
 4569 0014 7C000000 		.4byte	.LFE36
 4570 0018 00000000 		.4byte	.LFB37
 4571 001c D6000000 		.4byte	.LFE37
 4572 0020 00000000 		.4byte	.LFB38
 4573 0024 DA000000 		.4byte	.LFE38
 4574 0028 00000000 		.4byte	0
 4575 002c 00000000 		.4byte	0
 4576              		.section	.debug_line,"",%progbits
 4577              	.Ldebug_line0:
 4578 0000 B9020000 		.section	.debug_str,"MS",%progbits,1
 4578      02009201 
 4578      00000201 
 4578      FB0E0D00 
 4578      01010101 
 4579              	.LASF160:
 4580 0000 52534552 		.ascii	"RSERVED1\000"
 4580      56454431 
 4580      00
 4581              	.LASF291:
 4582 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 4582      5F456E61 
 4582      626C6549 
 4582      525100
 4583              	.LASF146:
 4584 0018 5443325F 		.ascii	"TC2_IRQn\000"
 4584      4952516E 
 4584      00
 4585              	.LASF224:
 4586 0021 504D435F 		.ascii	"PMC_FSPR\000"
 4586      46535052 
 4586      00
 4587              	.LASF211:
 4588 002a 504D435F 		.ascii	"PMC_PCSR0\000"
 4588      50435352 
 4588      3000
 4589              	.LASF14:
 4590 0034 5F5F7661 		.ascii	"__value\000"
 4590      6C756500 
 4591              	.LASF66:
 4592 003c 5F5F7366 		.ascii	"__sf\000"
 4592      00
 4593              	.LASF75:
 4594 0041 5F726561 		.ascii	"_read\000"
 4594      6400
 4595              	.LASF169:
 4596 0047 4E564943 		.ascii	"NVIC_Type\000"
 4596      5F547970 
 4596      6500
 4597              	.LASF215:
 4598 0051 434B4752 		.ascii	"CKGR_PLLBR\000"
 4598      5F504C4C 
ARM GAS  /tmp/ccHZkoRj.s 			page 113


 4598      425200
 4599              	.LASF76:
 4600 005c 5F777269 		.ascii	"_write\000"
 4600      746500
 4601              	.LASF237:
 4602 0063 54435F53 		.ascii	"TC_SMMR\000"
 4602      4D4D5200 
 4603              	.LASF62:
 4604 006b 5F617363 		.ascii	"_asctime_buf\000"
 4604      74696D65 
 4604      5F627566 
 4604      00
 4605              	.LASF58:
 4606 0078 5F637674 		.ascii	"_cvtlen\000"
 4606      6C656E00 
 4607              	.LASF217:
 4608 0080 504D435F 		.ascii	"PMC_USB\000"
 4608      55534200 
 4609              	.LASF185:
 4610 0088 4144435F 		.ascii	"ADC_EMR\000"
 4610      454D5200 
 4611              	.LASF182:
 4612 0090 4144435F 		.ascii	"ADC_ISR\000"
 4612      49535200 
 4613              	.LASF24:
 4614 0098 5F5F746D 		.ascii	"__tm\000"
 4614      00
 4615              	.LASF112:
 4616 009d 5F776373 		.ascii	"_wcsrtombs_state\000"
 4616      72746F6D 
 4616      62735F73 
 4616      74617465 
 4616      00
 4617              	.LASF80:
 4618 00ae 5F6E6275 		.ascii	"_nbuf\000"
 4618      6600
 4619              	.LASF25:
 4620 00b4 5F5F746D 		.ascii	"__tm_sec\000"
 4620      5F736563 
 4620      00
 4621              	.LASF106:
 4622 00bd 5F6C3634 		.ascii	"_l64a_buf\000"
 4622      615F6275 
 4622      6600
 4623              	.LASF83:
 4624 00c7 5F6C6F63 		.ascii	"_lock\000"
 4624      6B00
 4625              	.LASF254:
 4626 00cd 54435F46 		.ascii	"TC_FMR\000"
 4626      4D5200
 4627              	.LASF229:
 4628 00d4 52657365 		.ascii	"Reserved7\000"
 4628      72766564 
 4628      3700
 4629              	.LASF93:
 4630 00de 5F6D756C 		.ascii	"_mult\000"
 4630      7400
ARM GAS  /tmp/ccHZkoRj.s 			page 114


 4631              	.LASF125:
 4632 00e4 52535443 		.ascii	"RSTC_IRQn\000"
 4632      5F495251 
 4632      6E00
 4633              	.LASF279:
 4634 00ee 6C6F6F70 		.ascii	"loop\000"
 4634      00
 4635              	.LASF286:
 4636 00f3 636F6E66 		.ascii	"conf\000"
 4636      00
 4637              	.LASF200:
 4638 00f8 4144435F 		.ascii	"ADC_RNPR\000"
 4638      524E5052 
 4638      00
 4639              	.LASF163:
 4640 0101 49435052 		.ascii	"ICPR\000"
 4640      00
 4641              	.LASF252:
 4642 0106 54435F51 		.ascii	"TC_QIMR\000"
 4642      494D5200 
 4643              	.LASF202:
 4644 010e 4144435F 		.ascii	"ADC_TNPR\000"
 4644      544E5052 
 4644      00
 4645              	.LASF11:
 4646 0117 5F5F7763 		.ascii	"__wch\000"
 4646      6800
 4647              	.LASF247:
 4648 011d 54435F43 		.ascii	"TC_CHANNEL\000"
 4648      48414E4E 
 4648      454C00
 4649              	.LASF194:
 4650 0128 4144435F 		.ascii	"ADC_WPSR\000"
 4650      57505352 
 4650      00
 4651              	.LASF71:
 4652 0131 5F66696C 		.ascii	"_file\000"
 4652      6500
 4653              	.LASF34:
 4654 0137 5F6F6E5F 		.ascii	"_on_exit_args\000"
 4654      65786974 
 4654      5F617267 
 4654      7300
 4655              	.LASF269:
 4656 0145 74726973 		.ascii	"tristate\000"
 4656      74617465 
 4656      00
 4657              	.LASF220:
 4658 014e 504D435F 		.ascii	"PMC_IDR\000"
 4658      49445200 
 4659              	.LASF153:
 4660 0156 43524343 		.ascii	"CRCCU_IRQn\000"
 4660      555F4952 
 4660      516E00
 4661              	.LASF261:
 4662 0161 52414D50 		.ascii	"RAMP\000"
 4662      00
ARM GAS  /tmp/ccHZkoRj.s 			page 115


 4663              	.LASF235:
 4664 0166 54435F43 		.ascii	"TC_CCR\000"
 4664      435200
 4665              	.LASF108:
 4666 016d 5F6D6272 		.ascii	"_mbrlen_state\000"
 4666      6C656E5F 
 4666      73746174 
 4666      6500
 4667              	.LASF7:
 4668 017b 6C6F6E67 		.ascii	"long int\000"
 4668      20696E74 
 4668      00
 4669              	.LASF283:
 4670 0184 5F696D70 		.ascii	"_impure_ptr\000"
 4670      7572655F 
 4670      70747200 
 4671              	.LASF98:
 4672 0190 5F726573 		.ascii	"_result_k\000"
 4672      756C745F 
 4672      6B00
 4673              	.LASF45:
 4674 019a 5F73697A 		.ascii	"_size\000"
 4674      6500
 4675              	.LASF61:
 4676 01a0 5F6C6F63 		.ascii	"_localtime_buf\000"
 4676      616C7469 
 4676      6D655F62 
 4676      756600
 4677              	.LASF198:
 4678 01af 4144435F 		.ascii	"ADC_TPR\000"
 4678      54505200 
 4679              	.LASF209:
 4680 01b7 504D435F 		.ascii	"PMC_PCER0\000"
 4680      50434552 
 4680      3000
 4681              	.LASF230:
 4682 01c1 504D435F 		.ascii	"PMC_PCER1\000"
 4682      50434552 
 4682      3100
 4683              	.LASF277:
 4684 01cb 6D61696E 		.ascii	"main\000"
 4684      00
 4685              	.LASF290:
 4686 01d0 4952516E 		.ascii	"IRQn\000"
 4686      00
 4687              	.LASF149:
 4688 01d5 5443355F 		.ascii	"TC5_IRQn\000"
 4688      4952516E 
 4688      00
 4689              	.LASF212:
 4690 01de 434B4752 		.ascii	"CKGR_MOR\000"
 4690      5F4D4F52 
 4690      00
 4691              	.LASF171:
 4692 01e7 4144435F 		.ascii	"ADC_MR\000"
 4692      4D5200
 4693              	.LASF29:
ARM GAS  /tmp/ccHZkoRj.s 			page 116


 4694 01ee 5F5F746D 		.ascii	"__tm_mon\000"
 4694      5F6D6F6E 
 4694      00
 4695              	.LASF101:
 4696 01f7 5F6D6973 		.ascii	"_misc_reent\000"
 4696      635F7265 
 4696      656E7400 
 4697              	.LASF123:
 4698 0203 53797354 		.ascii	"SysTick_IRQn\000"
 4698      69636B5F 
 4698      4952516E 
 4698      00
 4699              	.LASF54:
 4700 0210 5F637572 		.ascii	"_current_category\000"
 4700      72656E74 
 4700      5F636174 
 4700      65676F72 
 4700      7900
 4701              	.LASF0:
 4702 0222 7369676E 		.ascii	"signed char\000"
 4702      65642063 
 4702      68617200 
 4703              	.LASF113:
 4704 022e 75696E74 		.ascii	"uint8_t\000"
 4704      385F7400 
 4705              	.LASF246:
 4706 0236 54634368 		.ascii	"TcChannel\000"
 4706      616E6E65 
 4706      6C00
 4707              	.LASF158:
 4708 0240 52455345 		.ascii	"RESERVED0\000"
 4708      52564544 
 4708      3000
 4709              	.LASF1:
 4710 024a 756E7369 		.ascii	"unsigned char\000"
 4710      676E6564 
 4710      20636861 
 4710      7200
 4711              	.LASF164:
 4712 0258 52455345 		.ascii	"RESERVED3\000"
 4712      52564544 
 4712      3300
 4713              	.LASF166:
 4714 0262 52455345 		.ascii	"RESERVED4\000"
 4714      52564544 
 4714      3400
 4715              	.LASF167:
 4716 026c 52455345 		.ascii	"RESERVED5\000"
 4716      52564544 
 4716      3500
 4717              	.LASF165:
 4718 0276 49414252 		.ascii	"IABR\000"
 4718      00
 4719              	.LASF264:
 4720 027b 6374726C 		.ascii	"ctrl\000"
 4720      00
 4721              	.LASF46:
ARM GAS  /tmp/ccHZkoRj.s 			page 117


 4722 0280 5F726565 		.ascii	"_reent\000"
 4722      6E7400
 4723              	.LASF256:
 4724 0287 5744545F 		.ascii	"WDT_CR\000"
 4724      435200
 4725              	.LASF162:
 4726 028e 52455345 		.ascii	"RESERVED2\000"
 4726      52564544 
 4726      3200
 4727              	.LASF119:
 4728 0298 55736167 		.ascii	"UsageFault_IRQn\000"
 4728      65466175 
 4728      6C745F49 
 4728      52516E00 
 4729              	.LASF239:
 4730 02a8 54435F52 		.ascii	"TC_RA\000"
 4730      4100
 4731              	.LASF240:
 4732 02ae 54435F52 		.ascii	"TC_RB\000"
 4732      4200
 4733              	.LASF241:
 4734 02b4 54435F52 		.ascii	"TC_RC\000"
 4734      4300
 4735              	.LASF86:
 4736 02ba 63686172 		.ascii	"char\000"
 4736      00
 4737              	.LASF41:
 4738 02bf 5F666E73 		.ascii	"_fns\000"
 4738      00
 4739              	.LASF268:
 4740 02c4 6F757470 		.ascii	"output\000"
 4740      757400
 4741              	.LASF249:
 4742 02cb 54435F42 		.ascii	"TC_BMR\000"
 4742      4D5200
 4743              	.LASF78:
 4744 02d2 5F636C6F 		.ascii	"_close\000"
 4744      736500
 4745              	.LASF133:
 4746 02d9 534D435F 		.ascii	"SMC_IRQn\000"
 4746      4952516E 
 4746      00
 4747              	.LASF253:
 4748 02e2 54435F51 		.ascii	"TC_QISR\000"
 4748      49535200 
 4749              	.LASF48:
 4750 02ea 5F737464 		.ascii	"_stdin\000"
 4750      696E00
 4751              	.LASF266:
 4752 02f1 72536C6F 		.ascii	"rSlope\000"
 4752      706500
 4753              	.LASF216:
 4754 02f8 504D435F 		.ascii	"PMC_MCKR\000"
 4754      4D434B52 
 4754      00
 4755              	.LASF242:
 4756 0301 54435F53 		.ascii	"TC_SR\000"
ARM GAS  /tmp/ccHZkoRj.s 			page 118


 4756      5200
 4757              	.LASF234:
 4758 0307 504D435F 		.ascii	"PMC_OCR\000"
 4758      4F435200 
 4759              	.LASF152:
 4760 030f 50574D5F 		.ascii	"PWM_IRQn\000"
 4760      4952516E 
 4760      00
 4761              	.LASF161:
 4762 0318 49535052 		.ascii	"ISPR\000"
 4762      00
 4763              	.LASF271:
 4764 031d 696E7075 		.ascii	"input\000"
 4764      7400
 4765              	.LASF197:
 4766 0323 4144435F 		.ascii	"ADC_RCR\000"
 4766      52435200 
 4767              	.LASF189:
 4768 032b 4144435F 		.ascii	"ADC_CDR\000"
 4768      43445200 
 4769              	.LASF168:
 4770 0333 53544952 		.ascii	"STIR\000"
 4770      00
 4771              	.LASF285:
 4772 0338 6C6F6F70 		.ascii	"loops\000"
 4772      7300
 4773              	.LASF154:
 4774 033e 4143435F 		.ascii	"ACC_IRQn\000"
 4774      4952516E 
 4774      00
 4775              	.LASF74:
 4776 0347 5F636F6F 		.ascii	"_cookie\000"
 4776      6B696500 
 4777              	.LASF22:
 4778 034f 5F776473 		.ascii	"_wds\000"
 4778      00
 4779              	.LASF129:
 4780 0354 504D435F 		.ascii	"PMC_IRQn\000"
 4780      4952516E 
 4780      00
 4781              	.LASF130:
 4782 035d 4546435F 		.ascii	"EFC_IRQn\000"
 4782      4952516E 
 4782      00
 4783              	.LASF63:
 4784 0366 5F736967 		.ascii	"_sig_func\000"
 4784      5F66756E 
 4784      6300
 4785              	.LASF82:
 4786 0370 5F6F6666 		.ascii	"_offset\000"
 4786      73657400 
 4787              	.LASF59:
 4788 0378 5F637674 		.ascii	"_cvtbuf\000"
 4788      62756600 
 4789              	.LASF124:
 4790 0380 53555043 		.ascii	"SUPC_IRQn\000"
 4790      5F495251 
ARM GAS  /tmp/ccHZkoRj.s 			page 119


 4790      6E00
 4791              	.LASF244:
 4792 038a 54435F49 		.ascii	"TC_IDR\000"
 4792      445200
 4793              	.LASF145:
 4794 0391 5443315F 		.ascii	"TC1_IRQn\000"
 4794      4952516E 
 4794      00
 4795              	.LASF136:
 4796 039a 50494F43 		.ascii	"PIOC_IRQn\000"
 4796      5F495251 
 4796      6E00
 4797              	.LASF280:
 4798 03a4 4144435F 		.ascii	"ADC_IrqHandler\000"
 4798      49727148 
 4798      616E646C 
 4798      657200
 4799              	.LASF233:
 4800 03b3 52657365 		.ascii	"Reserved8\000"
 4800      72766564 
 4800      3800
 4801              	.LASF205:
 4802 03bd 4144435F 		.ascii	"ADC_PTSR\000"
 4802      50545352 
 4802      00
 4803              	.LASF127:
 4804 03c6 5254545F 		.ascii	"RTT_IRQn\000"
 4804      4952516E 
 4804      00
 4805              	.LASF155:
 4806 03cf 5544505F 		.ascii	"UDP_IRQn\000"
 4806      4952516E 
 4806      00
 4807              	.LASF151:
 4808 03d8 44414343 		.ascii	"DACC_IRQn\000"
 4808      5F495251 
 4808      6E00
 4809              	.LASF116:
 4810 03e2 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 4810      61736B61 
 4810      626C6549 
 4810      6E745F49 
 4810      52516E00 
 4811              	.LASF176:
 4812 03f6 4144435F 		.ascii	"ADC_CHSR\000"
 4812      43485352 
 4812      00
 4813              	.LASF99:
 4814 03ff 5F703573 		.ascii	"_p5s\000"
 4814      00
 4815              	.LASF18:
 4816 0404 6C6F6E67 		.ascii	"long unsigned int\000"
 4816      20756E73 
 4816      69676E65 
 4816      6420696E 
 4816      7400
 4817              	.LASF117:
ARM GAS  /tmp/ccHZkoRj.s 			page 120


 4818 0416 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 4818      72794D61 
 4818      6E616765 
 4818      6D656E74 
 4818      5F495251 
 4819              	.LASF243:
 4820 042c 54435F49 		.ascii	"TC_IER\000"
 4820      455200
 4821              	.LASF69:
 4822 0433 5F5F7346 		.ascii	"__sFILE\000"
 4822      494C4500 
 4823              	.LASF53:
 4824 043b 5F5F7364 		.ascii	"__sdidinit\000"
 4824      6964696E 
 4824      697400
 4825              	.LASF85:
 4826 0446 5F666C61 		.ascii	"_flags2\000"
 4826      67733200 
 4827              	.LASF156:
 4828 044e 4952516E 		.ascii	"IRQn_Type\000"
 4828      5F547970 
 4828      6500
 4829              	.LASF222:
 4830 0458 504D435F 		.ascii	"PMC_IMR\000"
 4830      494D5200 
 4831              	.LASF274:
 4832 0460 6C696E65 		.ascii	"line\000"
 4832      00
 4833              	.LASF8:
 4834 0465 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 4834      4B5F5245 
 4834      43555253 
 4834      4956455F 
 4834      5400
 4835              	.LASF47:
 4836 0477 5F657272 		.ascii	"_errno\000"
 4836      6E6F00
 4837              	.LASF187:
 4838 047e 4144435F 		.ascii	"ADC_CGR\000"
 4838      43475200 
 4839              	.LASF208:
 4840 0486 504D435F 		.ascii	"PMC_SCSR\000"
 4840      53435352 
 4840      00
 4841              	.LASF68:
 4842 048f 5F736967 		.ascii	"_signal_buf\000"
 4842      6E616C5F 
 4842      62756600 
 4843              	.LASF270:
 4844 049b 74726970 		.ascii	"trip\000"
 4844      00
 4845              	.LASF178:
 4846 04a0 4144435F 		.ascii	"ADC_LCDR\000"
 4846      4C434452 
 4846      00
 4847              	.LASF259:
 4848 04a9 6374726C 		.ascii	"ctrlio_t\000"
ARM GAS  /tmp/ccHZkoRj.s 			page 121


 4848      696F5F74 
 4848      00
 4849              	.LASF128:
 4850 04b2 5744545F 		.ascii	"WDT_IRQn\000"
 4850      4952516E 
 4850      00
 4851              	.LASF275:
 4852 04bb 61726763 		.ascii	"argc\000"
 4852      00
 4853              	.LASF23:
 4854 04c0 5F426967 		.ascii	"_Bigint\000"
 4854      696E7400 
 4855              	.LASF20:
 4856 04c8 5F6D6178 		.ascii	"_maxwds\000"
 4856      77647300 
 4857              	.LASF276:
 4858 04d0 61726776 		.ascii	"argv\000"
 4858      00
 4859              	.LASF273:
 4860 04d5 75696E69 		.ascii	"uinit\000"
 4860      7400
 4861              	.LASF56:
 4862 04db 5F5F636C 		.ascii	"__cleanup\000"
 4862      65616E75 
 4862      7000
 4863              	.LASF118:
 4864 04e5 42757346 		.ascii	"BusFault_IRQn\000"
 4864      61756C74 
 4864      5F495251 
 4864      6E00
 4865              	.LASF236:
 4866 04f3 54435F43 		.ascii	"TC_CMR\000"
 4866      4D5200
 4867              	.LASF64:
 4868 04fa 5F617465 		.ascii	"_atexit0\000"
 4868      78697430 
 4868      00
 4869              	.LASF52:
 4870 0503 5F656D65 		.ascii	"_emergency\000"
 4870      7267656E 
 4870      637900
 4871              	.LASF5:
 4872 050e 6C6F6E67 		.ascii	"long long int\000"
 4872      206C6F6E 
 4872      6720696E 
 4872      7400
 4873              	.LASF42:
 4874 051c 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 4874      65786974 
 4874      5F617267 
 4874      735F7074 
 4874      7200
 4875              	.LASF89:
 4876 052e 5F6E696F 		.ascii	"_niobs\000"
 4876      627300
 4877              	.LASF141:
 4878 0535 54574931 		.ascii	"TWI1_IRQn\000"
ARM GAS  /tmp/ccHZkoRj.s 			page 122


 4878      5F495251 
 4878      6E00
 4879              	.LASF65:
 4880 053f 5F5F7367 		.ascii	"__sglue\000"
 4880      6C756500 
 4881              	.LASF218:
 4882 0547 504D435F 		.ascii	"PMC_PCK\000"
 4882      50434B00 
 4883              	.LASF288:
 4884 054f 6D61696E 		.ascii	"main.c\000"
 4884      2E6300
 4885              	.LASF120:
 4886 0556 53564361 		.ascii	"SVCall_IRQn\000"
 4886      6C6C5F49 
 4886      52516E00 
 4887              	.LASF57:
 4888 0562 5F67616D 		.ascii	"_gamma_signgam\000"
 4888      6D615F73 
 4888      69676E67 
 4888      616D00
 4889              	.LASF263:
 4890 0571 6374726C 		.ascii	"ctrlmode_t\000"
 4890      6D6F6465 
 4890      5F7400
 4891              	.LASF55:
 4892 057c 5F637572 		.ascii	"_current_locale\000"
 4892      72656E74 
 4892      5F6C6F63 
 4892      616C6500 
 4893              	.LASF100:
 4894 058c 5F667265 		.ascii	"_freelist\000"
 4894      656C6973 
 4894      7400
 4895              	.LASF90:
 4896 0596 5F696F62 		.ascii	"_iobs\000"
 4896      7300
 4897              	.LASF88:
 4898 059c 5F676C75 		.ascii	"_glue\000"
 4898      6500
 4899              	.LASF284:
 4900 05a2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4900      52784275 
 4900      66666572 
 4900      00
 4901              	.LASF21:
 4902 05af 5F736967 		.ascii	"_sign\000"
 4902      6E00
 4903              	.LASF267:
 4904 05b5 5F646478 		.ascii	"_ddx\000"
 4904      00
 4905              	.LASF262:
 4906 05ba 53544F50 		.ascii	"STOP\000"
 4906      00
 4907              	.LASF180:
 4908 05bf 4144435F 		.ascii	"ADC_IDR\000"
 4908      49445200 
 4909              	.LASF4:
ARM GAS  /tmp/ccHZkoRj.s 			page 123


 4910 05c7 756E7369 		.ascii	"unsigned int\000"
 4910      676E6564 
 4910      20696E74 
 4910      00
 4911              	.LASF148:
 4912 05d4 5443345F 		.ascii	"TC4_IRQn\000"
 4912      4952516E 
 4912      00
 4913              	.LASF140:
 4914 05dd 54574930 		.ascii	"TWI0_IRQn\000"
 4914      5F495251 
 4914      6E00
 4915              	.LASF257:
 4916 05e7 5744545F 		.ascii	"WDT_MR\000"
 4916      4D5200
 4917              	.LASF111:
 4918 05ee 5F776372 		.ascii	"_wcrtomb_state\000"
 4918      746F6D62 
 4918      5F737461 
 4918      746500
 4919              	.LASF28:
 4920 05fd 5F5F746D 		.ascii	"__tm_mday\000"
 4920      5F6D6461 
 4920      7900
 4921              	.LASF179:
 4922 0607 4144435F 		.ascii	"ADC_IER\000"
 4922      49455200 
 4923              	.LASF79:
 4924 060f 5F756275 		.ascii	"_ubuf\000"
 4924      6600
 4925              	.LASF50:
 4926 0615 5F737464 		.ascii	"_stderr\000"
 4926      65727200 
 4927              	.LASF104:
 4928 061d 5F776374 		.ascii	"_wctomb_state\000"
 4928      6F6D625F 
 4928      73746174 
 4928      6500
 4929              	.LASF84:
 4930 062b 5F6D6273 		.ascii	"_mbstate\000"
 4930      74617465 
 4930      00
 4931              	.LASF95:
 4932 0634 5F72616E 		.ascii	"_rand_next\000"
 4932      645F6E65 
 4932      787400
 4933              	.LASF70:
 4934 063f 5F666C61 		.ascii	"_flags\000"
 4934      677300
 4935              	.LASF39:
 4936 0646 5F617465 		.ascii	"_atexit\000"
 4936      78697400 
 4937              	.LASF13:
 4938 064e 5F5F636F 		.ascii	"__count\000"
 4938      756E7400 
 4939              	.LASF260:
 4940 0656 4E4F524D 		.ascii	"NORMAL\000"
ARM GAS  /tmp/ccHZkoRj.s 			page 124


 4940      414C00
 4941              	.LASF31:
 4942 065d 5F5F746D 		.ascii	"__tm_wday\000"
 4942      5F776461 
 4942      7900
 4943              	.LASF32:
 4944 0667 5F5F746D 		.ascii	"__tm_yday\000"
 4944      5F796461 
 4944      7900
 4945              	.LASF228:
 4946 0671 504D435F 		.ascii	"PMC_WPSR\000"
 4946      57505352 
 4946      00
 4947              	.LASF92:
 4948 067a 5F736565 		.ascii	"_seed\000"
 4948      6400
 4949              	.LASF77:
 4950 0680 5F736565 		.ascii	"_seek\000"
 4950      6B00
 4951              	.LASF132:
 4952 0686 55415254 		.ascii	"UART1_IRQn\000"
 4952      315F4952 
 4952      516E00
 4953              	.LASF9:
 4954 0691 5F66706F 		.ascii	"_fpos_t\000"
 4954      735F7400 
 4955              	.LASF12:
 4956 0699 5F5F7763 		.ascii	"__wchb\000"
 4956      686200
 4957              	.LASF201:
 4958 06a0 4144435F 		.ascii	"ADC_RNCR\000"
 4958      524E4352 
 4958      00
 4959              	.LASF105:
 4960 06a9 5F6D6274 		.ascii	"_mbtowc_state\000"
 4960      6F77635F 
 4960      73746174 
 4960      6500
 4961              	.LASF203:
 4962 06b7 4144435F 		.ascii	"ADC_TNCR\000"
 4962      544E4352 
 4962      00
 4963              	.LASF245:
 4964 06c0 54435F49 		.ascii	"TC_IMR\000"
 4964      4D5200
 4965              	.LASF6:
 4966 06c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4966      206C6F6E 
 4966      6720756E 
 4966      7369676E 
 4966      65642069 
 4967              	.LASF114:
 4968 06de 75696E74 		.ascii	"uint16_t\000"
 4968      31365F74 
 4968      00
 4969              	.LASF36:
 4970 06e7 5F64736F 		.ascii	"_dso_handle\000"
ARM GAS  /tmp/ccHZkoRj.s 			page 125


 4970      5F68616E 
 4970      646C6500 
 4971              	.LASF91:
 4972 06f3 5F72616E 		.ascii	"_rand48\000"
 4972      64343800 
 4973              	.LASF188:
 4974 06fb 4144435F 		.ascii	"ADC_COR\000"
 4974      434F5200 
 4975              	.LASF139:
 4976 0703 48534D43 		.ascii	"HSMCI_IRQn\000"
 4976      495F4952 
 4976      516E00
 4977              	.LASF49:
 4978 070e 5F737464 		.ascii	"_stdout\000"
 4978      6F757400 
 4979              	.LASF138:
 4980 0716 55534152 		.ascii	"USART1_IRQn\000"
 4980      54315F49 
 4980      52516E00 
 4981              	.LASF81:
 4982 0722 5F626C6B 		.ascii	"_blksize\000"
 4982      73697A65 
 4982      00
 4983              	.LASF44:
 4984 072b 5F626173 		.ascii	"_base\000"
 4984      6500
 4985              	.LASF278:
 4986 0731 5443315F 		.ascii	"TC1_IrqHandler\000"
 4986      49727148 
 4986      616E646C 
 4986      657200
 4987              	.LASF102:
 4988 0740 5F737472 		.ascii	"_strtok_last\000"
 4988      746F6B5F 
 4988      6C617374 
 4988      00
 4989              	.LASF150:
 4990 074d 4144435F 		.ascii	"ADC_IRQn\000"
 4990      4952516E 
 4990      00
 4991              	.LASF109:
 4992 0756 5F6D6272 		.ascii	"_mbrtowc_state\000"
 4992      746F7763 
 4992      5F737461 
 4992      746500
 4993              	.LASF199:
 4994 0765 4144435F 		.ascii	"ADC_TCR\000"
 4994      54435200 
 4995              	.LASF159:
 4996 076d 49434552 		.ascii	"ICER\000"
 4996      00
 4997              	.LASF16:
 4998 0772 5F666C6F 		.ascii	"_flock_t\000"
 4998      636B5F74 
 4998      00
 4999              	.LASF282:
 5000 077b 7463636C 		.ascii	"tcclks\000"
ARM GAS  /tmp/ccHZkoRj.s 			page 126


 5000      6B7300
 5001              	.LASF87:
 5002 0782 5F5F4649 		.ascii	"__FILE\000"
 5002      4C4500
 5003              	.LASF15:
 5004 0789 5F6D6273 		.ascii	"_mbstate_t\000"
 5004      74617465 
 5004      5F7400
 5005              	.LASF131:
 5006 0794 55415254 		.ascii	"UART0_IRQn\000"
 5006      305F4952 
 5006      516E00
 5007              	.LASF60:
 5008 079f 5F723438 		.ascii	"_r48\000"
 5008      00
 5009              	.LASF219:
 5010 07a4 504D435F 		.ascii	"PMC_IER\000"
 5010      49455200 
 5011              	.LASF10:
 5012 07ac 77696E74 		.ascii	"wint_t\000"
 5012      5F7400
 5013              	.LASF196:
 5014 07b3 4144435F 		.ascii	"ADC_RPR\000"
 5014      52505200 
 5015              	.LASF172:
 5016 07bb 4144435F 		.ascii	"ADC_SEQR1\000"
 5016      53455152 
 5016      3100
 5017              	.LASF173:
 5018 07c5 4144435F 		.ascii	"ADC_SEQR2\000"
 5018      53455152 
 5018      3200
 5019              	.LASF19:
 5020 07cf 5F6E6578 		.ascii	"_next\000"
 5020      7400
 5021              	.LASF73:
 5022 07d5 5F646174 		.ascii	"_data\000"
 5022      6100
 5023              	.LASF142:
 5024 07db 5350495F 		.ascii	"SPI_IRQn\000"
 5024      4952516E 
 5024      00
 5025              	.LASF292:
 5026 07e4 696E6974 		.ascii	"init\000"
 5026      00
 5027              	.LASF137:
 5028 07e9 55534152 		.ascii	"USART0_IRQn\000"
 5028      54305F49 
 5028      52516E00 
 5029              	.LASF177:
 5030 07f5 52657365 		.ascii	"Reserved1\000"
 5030      72766564 
 5030      3100
 5031              	.LASF183:
 5032 07ff 52657365 		.ascii	"Reserved2\000"
 5032      72766564 
 5032      3200
ARM GAS  /tmp/ccHZkoRj.s 			page 127


 5033              	.LASF190:
 5034 0809 52657365 		.ascii	"Reserved3\000"
 5034      72766564 
 5034      3300
 5035              	.LASF192:
 5036 0813 52657365 		.ascii	"Reserved4\000"
 5036      72766564 
 5036      3400
 5037              	.LASF195:
 5038 081d 52657365 		.ascii	"Reserved5\000"
 5038      72766564 
 5038      3500
 5039              	.LASF226:
 5040 0827 52657365 		.ascii	"Reserved6\000"
 5040      72766564 
 5040      3600
 5041              	.LASF144:
 5042 0831 5443305F 		.ascii	"TC0_IRQn\000"
 5042      4952516E 
 5042      00
 5043              	.LASF225:
 5044 083a 504D435F 		.ascii	"PMC_FOCR\000"
 5044      464F4352 
 5044      00
 5045              	.LASF135:
 5046 0843 50494F42 		.ascii	"PIOB_IRQn\000"
 5046      5F495251 
 5046      6E00
 5047              	.LASF238:
 5048 084d 54435F43 		.ascii	"TC_CV\000"
 5048      5600
 5049              	.LASF258:
 5050 0853 5744545F 		.ascii	"WDT_SR\000"
 5050      535200
 5051              	.LASF121:
 5052 085a 44656275 		.ascii	"DebugMonitor_IRQn\000"
 5052      674D6F6E 
 5052      69746F72 
 5052      5F495251 
 5052      6E00
 5053              	.LASF289:
 5054 086c 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 5054      652F6D6F 
 5054      2F646F63 
 5054      2F737475 
 5054      6469756D 
 5055              	.LASF251:
 5056 089b 54435F51 		.ascii	"TC_QIDR\000"
 5056      49445200 
 5057              	.LASF103:
 5058 08a3 5F6D626C 		.ascii	"_mblen_state\000"
 5058      656E5F73 
 5058      74617465 
 5058      00
 5059              	.LASF2:
 5060 08b0 73686F72 		.ascii	"short int\000"
 5060      7420696E 
ARM GAS  /tmp/ccHZkoRj.s 			page 128


 5060      7400
 5061              	.LASF265:
 5062 08ba 6D6F6465 		.ascii	"mode\000"
 5062      00
 5063              	.LASF250:
 5064 08bf 54435F51 		.ascii	"TC_QIER\000"
 5064      49455200 
 5065              	.LASF221:
 5066 08c7 504D435F 		.ascii	"PMC_SR\000"
 5066      535200
 5067              	.LASF184:
 5068 08ce 4144435F 		.ascii	"ADC_OVER\000"
 5068      4F564552 
 5068      00
 5069              	.LASF37:
 5070 08d7 5F666E74 		.ascii	"_fntypes\000"
 5070      79706573 
 5070      00
 5071              	.LASF134:
 5072 08e0 50494F41 		.ascii	"PIOA_IRQn\000"
 5072      5F495251 
 5072      6E00
 5073              	.LASF30:
 5074 08ea 5F5F746D 		.ascii	"__tm_year\000"
 5074      5F796561 
 5074      7200
 5075              	.LASF181:
 5076 08f4 4144435F 		.ascii	"ADC_IMR\000"
 5076      494D5200 
 5077              	.LASF170:
 5078 08fc 4144435F 		.ascii	"ADC_CR\000"
 5078      435200
 5079              	.LASF272:
 5080 0903 79696E69 		.ascii	"yinit\000"
 5080      7400
 5081              	.LASF213:
 5082 0909 434B4752 		.ascii	"CKGR_MCFR\000"
 5082      5F4D4346 
 5082      5200
 5083              	.LASF72:
 5084 0913 5F6C6266 		.ascii	"_lbfsize\000"
 5084      73697A65 
 5084      00
 5085              	.LASF51:
 5086 091c 5F696E63 		.ascii	"_inc\000"
 5086      00
 5087              	.LASF40:
 5088 0921 5F696E64 		.ascii	"_ind\000"
 5088      00
 5089              	.LASF204:
 5090 0926 4144435F 		.ascii	"ADC_PTCR\000"
 5090      50544352 
 5090      00
 5091              	.LASF255:
 5092 092f 54435F57 		.ascii	"TC_WPMR\000"
 5092      504D5200 
 5093              	.LASF43:
ARM GAS  /tmp/ccHZkoRj.s 			page 129


 5094 0937 5F5F7362 		.ascii	"__sbuf\000"
 5094      756600
 5095              	.LASF38:
 5096 093e 5F69735F 		.ascii	"_is_cxa\000"
 5096      63786100 
 5097              	.LASF287:
 5098 0946 474E5520 		.ascii	"GNU C 4.6.1\000"
 5098      4320342E 
 5098      362E3100 
 5099              	.LASF96:
 5100 0952 5F6D7072 		.ascii	"_mprec\000"
 5100      656300
 5101              	.LASF281:
 5102 0959 73746174 		.ascii	"status\000"
 5102      757300
 5103              	.LASF227:
 5104 0960 504D435F 		.ascii	"PMC_WPMR\000"
 5104      57504D52 
 5104      00
 5105              	.LASF67:
 5106 0969 5F6D6973 		.ascii	"_misc\000"
 5106      6300
 5107              	.LASF17:
 5108 096f 5F5F554C 		.ascii	"__ULong\000"
 5108      6F6E6700 
 5109              	.LASF143:
 5110 0977 5353435F 		.ascii	"SSC_IRQn\000"
 5110      4952516E 
 5110      00
 5111              	.LASF115:
 5112 0980 75696E74 		.ascii	"uint32_t\000"
 5112      33325F74 
 5112      00
 5113              	.LASF97:
 5114 0989 5F726573 		.ascii	"_result\000"
 5114      756C7400 
 5115              	.LASF191:
 5116 0991 4144435F 		.ascii	"ADC_ACR\000"
 5116      41435200 
 5117              	.LASF223:
 5118 0999 504D435F 		.ascii	"PMC_FSMR\000"
 5118      46534D52 
 5118      00
 5119              	.LASF175:
 5120 09a2 4144435F 		.ascii	"ADC_CHDR\000"
 5120      43484452 
 5120      00
 5121              	.LASF94:
 5122 09ab 5F616464 		.ascii	"_add\000"
 5122      00
 5123              	.LASF3:
 5124 09b0 73686F72 		.ascii	"short unsigned int\000"
 5124      7420756E 
 5124      7369676E 
 5124      65642069 
 5124      6E7400
 5125              	.LASF193:
ARM GAS  /tmp/ccHZkoRj.s 			page 130


 5126 09c3 4144435F 		.ascii	"ADC_WPMR\000"
 5126      57504D52 
 5126      00
 5127              	.LASF27:
 5128 09cc 5F5F746D 		.ascii	"__tm_hour\000"
 5128      5F686F75 
 5128      7200
 5129              	.LASF122:
 5130 09d6 50656E64 		.ascii	"PendSV_IRQn\000"
 5130      53565F49 
 5130      52516E00 
 5131              	.LASF110:
 5132 09e2 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5132      72746F77 
 5132      63735F73 
 5132      74617465 
 5132      00
 5133              	.LASF248:
 5134 09f3 54435F42 		.ascii	"TC_BCR\000"
 5134      435200
 5135              	.LASF147:
 5136 09fa 5443335F 		.ascii	"TC3_IRQn\000"
 5136      4952516E 
 5136      00
 5137              	.LASF174:
 5138 0a03 4144435F 		.ascii	"ADC_CHER\000"
 5138      43484552 
 5138      00
 5139              	.LASF207:
 5140 0a0c 504D435F 		.ascii	"PMC_SCDR\000"
 5140      53434452 
 5140      00
 5141              	.LASF157:
 5142 0a15 49534552 		.ascii	"ISER\000"
 5142      00
 5143              	.LASF210:
 5144 0a1a 504D435F 		.ascii	"PMC_PCDR0\000"
 5144      50434452 
 5144      3000
 5145              	.LASF231:
 5146 0a24 504D435F 		.ascii	"PMC_PCDR1\000"
 5146      50434452 
 5146      3100
 5147              	.LASF35:
 5148 0a2e 5F666E61 		.ascii	"_fnargs\000"
 5148      72677300 
 5149              	.LASF186:
 5150 0a36 4144435F 		.ascii	"ADC_CWR\000"
 5150      43575200 
 5151              	.LASF33:
 5152 0a3e 5F5F746D 		.ascii	"__tm_isdst\000"
 5152      5F697364 
 5152      737400
 5153              	.LASF26:
 5154 0a49 5F5F746D 		.ascii	"__tm_min\000"
 5154      5F6D696E 
 5154      00
ARM GAS  /tmp/ccHZkoRj.s 			page 131


 5155              	.LASF107:
 5156 0a52 5F676574 		.ascii	"_getdate_err\000"
 5156      64617465 
 5156      5F657272 
 5156      00
 5157              	.LASF206:
 5158 0a5f 504D435F 		.ascii	"PMC_SCER\000"
 5158      53434552 
 5158      00
 5159              	.LASF232:
 5160 0a68 504D435F 		.ascii	"PMC_PCSR1\000"
 5160      50435352 
 5160      3100
 5161              	.LASF126:
 5162 0a72 5254435F 		.ascii	"RTC_IRQn\000"
 5162      4952516E 
 5162      00
 5163              	.LASF214:
 5164 0a7b 434B4752 		.ascii	"CKGR_PLLAR\000"
 5164      5F504C4C 
 5164      415200
 5165              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/ccHZkoRj.s 			page 132


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccHZkoRj.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/ccHZkoRj.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/ccHZkoRj.s:62     .bss:00000000 $d
     /tmp/ccHZkoRj.s:63     .bss:00000000 loops
     /tmp/ccHZkoRj.s:66     .bss:00000058 conf
     /tmp/ccHZkoRj.s:69     .rodata:00000000 $d
     /tmp/ccHZkoRj.s:70     .rodata:00000000 .LC0
     /tmp/ccHZkoRj.s:73     .rodata:00000018 .LC1
     /tmp/ccHZkoRj.s:76     .rodata:00000044 .LC2
     /tmp/ccHZkoRj.s:79     .rodata:00000048 .LC3
     /tmp/ccHZkoRj.s:82     .rodata:00000050 .LC4
     /tmp/ccHZkoRj.s:85     .rodata:00000058 .LC5
     /tmp/ccHZkoRj.s:88     .rodata:00000060 .LC6
     /tmp/ccHZkoRj.s:91     .rodata:00000068 .LC7
     /tmp/ccHZkoRj.s:94     .rodata:00000070 .LC8
     /tmp/ccHZkoRj.s:97     .rodata:00000074 .LC9
     /tmp/ccHZkoRj.s:100    .rodata:00000078 .LC10
     /tmp/ccHZkoRj.s:103    .rodata:0000007c .LC11
     /tmp/ccHZkoRj.s:106    .rodata:00000088 .LC12
     /tmp/ccHZkoRj.s:109    .rodata:00000090 .LC13
     /tmp/ccHZkoRj.s:112    .rodata:00000094 .LC14
     /tmp/ccHZkoRj.s:115    .rodata:000000a0 .LC15
     /tmp/ccHZkoRj.s:118    .rodata:000000a8 .LC16
     /tmp/ccHZkoRj.s:121    .rodata:000000b0 .LC17
     /tmp/ccHZkoRj.s:124    .text.main:00000000 $t
     /tmp/ccHZkoRj.s:129    .text.main:00000000 main
     /tmp/ccHZkoRj.s:891    .text.init:00000000 init
     /tmp/ccHZkoRj.s:219    .text.main:000000b0 $d
     /tmp/ccHZkoRj.s:234    .text.main:000000e4 $t
     /tmp/ccHZkoRj.s:678    .text.TC1_IrqHandler:00000000 $t
     /tmp/ccHZkoRj.s:683    .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/ccHZkoRj.s:758    .text.ADC_IrqHandler:00000000 $t
     /tmp/ccHZkoRj.s:763    .text.ADC_IrqHandler:00000000 ADC_IrqHandler
     /tmp/ccHZkoRj.s:887    .text.init:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_impure_ptr
fiprintf
USBC_isConfigured
LED_blink
setbuf
USBC_hasData
gets
siscanf
puts
strcmp
mode
iprintf
control
TC_FindMckDivisor
TC_Configure
TimeTick_Configure
ADC_Initialize
ADC_cfgFrequency
ARM GAS  /tmp/ccHZkoRj.s 			page 133


LEDs_configure
LED_clr
USBC_Configure
