ARM GAS  /tmp/ccn6Sm5M.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/ccn6Sm5M.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccn6Sm5M.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/ccn6Sm5M.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccn6Sm5M.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccn6Sm5M.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/ccn6Sm5M.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/ccn6Sm5M.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/ccn6Sm5M.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/ccn6Sm5M.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/ccn6Sm5M.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccn6Sm5M.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/ccn6Sm5M.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/ccn6Sm5M.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/ccn6Sm5M.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccn6Sm5M.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccn6Sm5M.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/ccn6Sm5M.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/ccn6Sm5M.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/ccn6Sm5M.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccn6Sm5M.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccn6Sm5M.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccn6Sm5M.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccn6Sm5M.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/ccn6Sm5M.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/ccn6Sm5M.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/ccn6Sm5M.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/ccn6Sm5M.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.section	.text.NVIC_SetPriority,"ax",%progbits
  62              		.align	2
  63              		.thumb
  64              		.thumb_func
  65              		.type	NVIC_SetPriority, %function
  66              	NVIC_SetPriority:
  67              	.LFB20:
1506:libchip/cmsis/core_cm3.h **** 
1507:libchip/cmsis/core_cm3.h **** /**
1508:libchip/cmsis/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:libchip/cmsis/core_cm3.h ****  *
1510:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:libchip/cmsis/core_cm3.h ****  *
1512:libchip/cmsis/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:libchip/cmsis/core_cm3.h ****  */
1515:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:libchip/cmsis/core_cm3.h **** {
1517:libchip/cmsis/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:libchip/cmsis/core_cm3.h **** }
1519:libchip/cmsis/core_cm3.h **** 
1520:libchip/cmsis/core_cm3.h **** /**
1521:libchip/cmsis/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:libchip/cmsis/core_cm3.h ****  *
1523:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:libchip/cmsis/core_cm3.h ****  *
1526:libchip/cmsis/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending,
1527:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0
1528:libchip/cmsis/core_cm3.h ****  */
1529:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/ccn6Sm5M.s 			page 29


1530:libchip/cmsis/core_cm3.h **** {
1531:libchip/cmsis/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:libchip/cmsis/core_cm3.h **** }
1533:libchip/cmsis/core_cm3.h **** 
1534:libchip/cmsis/core_cm3.h **** /**
1535:libchip/cmsis/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:libchip/cmsis/core_cm3.h ****  *
1537:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:libchip/cmsis/core_cm3.h ****  *
1539:libchip/cmsis/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:libchip/cmsis/core_cm3.h ****  */
1542:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:libchip/cmsis/core_cm3.h **** {
1544:libchip/cmsis/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:libchip/cmsis/core_cm3.h **** }
1546:libchip/cmsis/core_cm3.h **** 
1547:libchip/cmsis/core_cm3.h **** /**
1548:libchip/cmsis/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:libchip/cmsis/core_cm3.h ****  *
1550:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:libchip/cmsis/core_cm3.h ****  *
1552:libchip/cmsis/core_cm3.h ****  * Clear the pending bit for the specified interrupt.
1553:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:libchip/cmsis/core_cm3.h ****  */
1555:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:libchip/cmsis/core_cm3.h **** {
1557:libchip/cmsis/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:libchip/cmsis/core_cm3.h **** }
1559:libchip/cmsis/core_cm3.h **** 
1560:libchip/cmsis/core_cm3.h **** /**
1561:libchip/cmsis/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:libchip/cmsis/core_cm3.h ****  *
1563:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:libchip/cmsis/core_cm3.h ****  *
1566:libchip/cmsis/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active,
1567:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0.
1568:libchip/cmsis/core_cm3.h ****  */
1569:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:libchip/cmsis/core_cm3.h **** {
1571:libchip/cmsis/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:libchip/cmsis/core_cm3.h **** }
1573:libchip/cmsis/core_cm3.h **** 
1574:libchip/cmsis/core_cm3.h **** /**
1575:libchip/cmsis/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:libchip/cmsis/core_cm3.h ****  *
1577:libchip/cmsis/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:libchip/cmsis/core_cm3.h ****  * @param  priority  The priority to set
1579:libchip/cmsis/core_cm3.h ****  *
1580:libchip/cmsis/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt
1581:libchip/cmsis/core_cm3.h ****  * number can be positive to specify an external (device specific)
1582:libchip/cmsis/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:libchip/cmsis/core_cm3.h ****  *
1584:libchip/cmsis/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:libchip/cmsis/core_cm3.h ****  */
1586:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
ARM GAS  /tmp/ccn6Sm5M.s 			page 30


1587:libchip/cmsis/core_cm3.h **** {
  68              		.loc 1 1587 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI5:
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 3960     		str	r1, [r7, #0]
  85 000a FB71     		strb	r3, [r7, #7]
1588:libchip/cmsis/core_cm3.h ****   if(IRQn < 0) {
  86              		.loc 1 1588 0
  87 000c 97F90730 		ldrsb	r3, [r7, #7]
  88 0010 002B     		cmp	r3, #0
  89 0012 10DA     		bge	.L3
1589:libchip/cmsis/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  90              		.loc 1 1589 0
  91 0014 4FF46D43 		mov	r3, #60672
  92 0018 CEF20003 		movt	r3, 57344
  93 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  94 001e 02F00F02 		and	r2, r2, #15
  95 0022 A2F10401 		sub	r1, r2, #4
  96 0026 3A68     		ldr	r2, [r7, #0]
  97 0028 D2B2     		uxtb	r2, r2
  98 002a 4FEA0212 		lsl	r2, r2, #4
  99 002e D2B2     		uxtb	r2, r2
 100 0030 5B18     		adds	r3, r3, r1
 101 0032 1A76     		strb	r2, [r3, #24]
 102 0034 0DE0     		b	.L2
 103              	.L3:
1590:libchip/cmsis/core_cm3.h ****   else {
1591:libchip/cmsis/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 104              		.loc 1 1591 0
 105 0036 4FF46143 		mov	r3, #57600
 106 003a CEF20003 		movt	r3, 57344
 107 003e 97F90710 		ldrsb	r1, [r7, #7]
 108 0042 3A68     		ldr	r2, [r7, #0]
 109 0044 D2B2     		uxtb	r2, r2
 110 0046 4FEA0212 		lsl	r2, r2, #4
 111 004a D2B2     		uxtb	r2, r2
 112 004c 5B18     		adds	r3, r3, r1
 113 004e 83F80023 		strb	r2, [r3, #768]
 114              	.L2:
1592:libchip/cmsis/core_cm3.h **** }
 115              		.loc 1 1592 0
 116 0052 07F10C07 		add	r7, r7, #12
 117 0056 BD46     		mov	sp, r7
 118 0058 80BC     		pop	{r7}
ARM GAS  /tmp/ccn6Sm5M.s 			page 31


 119 005a 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE20:
 122              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 123              		.global	input
 124              		.bss
 125              		.align	2
 126              		.type	input, %object
 127              		.size	input, 4
 128              	input:
 129 0000 00000000 		.space	4
 130              		.global	_state
 131              		.data
 132              		.type	_state, %object
 133              		.size	_state, 1
 134              	_state:
 135 0000 01       		.byte	1
 136              		.global	loop
 137              		.bss
 138              		.align	2
 139              		.type	loop, %object
 140              		.size	loop, 44
 141              	loop:
 142 0004 00000000 		.space	44
 142      00000000 
 142      00000000 
 142      00000000 
 142      00000000 
 143              		.global	ntrip
 144              		.data
 145 0001 000000   		.align	2
 146              		.type	ntrip, %object
 147              		.size	ntrip, 16
 148              	ntrip:
 149 0004 14000000 		.word	loop+20
 150 0008 00000000 		.word	0
 151 000c 64000000 		.word	100
 152 0010 0A000000 		.word	10
 153              		.global	rtrip
 154              		.align	2
 155              		.type	rtrip, %object
 156              		.size	rtrip, 16
 157              	rtrip:
 158 0014 14000000 		.word	loop+20
 159 0018 00000000 		.word	0
 160 001c 0C000000 		.word	12
 161 0020 00000000 		.word	0
 162              		.global	releasetime
 163              		.bss
 164              		.align	2
 165              		.type	releasetime, %object
 166              		.size	releasetime, 4
 167              	releasetime:
 168 0030 00000000 		.space	4
 169              		.comm	dxmax,4,4
 170              		.section	.text.init,"ax",%progbits
 171              		.align	2
ARM GAS  /tmp/ccn6Sm5M.s 			page 32


 172              		.thumb
 173              		.thumb_func
 174              		.type	init, %function
 175              	init:
 176              	.LFB35:
 177              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "board.h"
   3:main.c        **** #include "controller.h"
   4:main.c        **** 
   5:main.c        **** #define STOPPED  (1 << 0)
   6:main.c        **** #define RUN     (1 << 1)
   7:main.c        **** #define HOLD    (1 << 2)
   8:main.c        **** #define RELEASE (1 << 3)
   9:main.c        **** 
  10:main.c        **** #define MINv 0
  11:main.c        **** #define MAXv MAX
  12:main.c        **** 
  13:main.c        **** #define ADC0 0
  14:main.c        **** #define ADC1 1
  15:main.c        **** #define BUFFER_SIZE 2
  16:main.c        **** 
  17:main.c        **** #define PWM0 0
  18:main.c        **** #define PWM1 1
  19:main.c        **** #define PWM_FREQ   20
  20:main.c        **** #define PWM_PERIOD 100
  21:main.c        **** 
  22:main.c        **** ctrlio_t input[BUFFER_SIZE] = {0};
  23:main.c        **** uint8_t _state = STOPPED;
  24:main.c        **** 
  25:main.c        **** struct ctrl loop = CTRL_INIT;	
  26:main.c        **** struct trip ntrip = {&loop._e, 0, 100, 10};
  27:main.c        **** struct trip rtrip = {&loop._e, 0, 12, 0};
  28:main.c        **** 
  29:main.c        **** uint32_t releasetime = 0;
  30:main.c        **** uint32_t dxmax;
  31:main.c        **** 
  32:main.c        **** static void init()
  33:main.c        **** {
 178              		.loc 2 33 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 8
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 0000 90B5     		push	{r4, r7, lr}
 183              	.LCFI6:
 184              		.cfi_def_cfa_offset 12
 185              		.cfi_offset 14, -4
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 4, -12
 188 0002 89B0     		sub	sp, sp, #36
 189              	.LCFI7:
 190              		.cfi_def_cfa_offset 48
 191 0004 06AF     		add	r7, sp, #24
 192              	.LCFI8:
 193              		.cfi_def_cfa 7, 24
  34:main.c        ****     uint32_t div;
  35:main.c        ****     uint32_t tcclks;
ARM GAS  /tmp/ccn6Sm5M.s 			page 33


  36:main.c        **** 
  37:main.c        **** 	//TODO PIO Configure 
  38:main.c        **** 
  39:main.c        ****     /* Enable peripheral clocks */
  40:main.c        ****     PMC_EnablePeripheral(ID_TC1);
 194              		.loc 2 40 0
 195 0006 4FF01800 		mov	r0, #24
 196 000a FFF7FEFF 		bl	PMC_EnablePeripheral
  41:main.c        ****     PMC_EnablePeripheral(ID_ADC);
 197              		.loc 2 41 0
 198 000e 4FF01D00 		mov	r0, #29
 199 0012 FFF7FEFF 		bl	PMC_EnablePeripheral
  42:main.c        ****     PMC_EnablePeripheral(ID_PWM);
 200              		.loc 2 42 0
 201 0016 4FF01F00 		mov	r0, #31
 202 001a FFF7FEFF 		bl	PMC_EnablePeripheral
  43:main.c        **** 
  44:main.c        ****     /* Configure TC */
  45:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 203              		.loc 2 45 0
 204 001e 07F10402 		add	r2, r7, #4
 205 0022 3C46     		mov	r4, r7
 206 0024 4FF4D843 		mov	r3, #27648
 207 0028 C0F2DC23 		movt	r3, 732
 208 002c 0093     		str	r3, [sp, #0]
 209 002e 4FF00400 		mov	r0, #4
 210 0032 4FF4D841 		mov	r1, #27648
 211 0036 C0F2DC21 		movt	r1, 732
 212 003a 2346     		mov	r3, r4
 213 003c FFF7FEFF 		bl	TC_FindMckDivisor
  46:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 214              		.loc 2 46 0
 215 0040 3B68     		ldr	r3, [r7, #0]
 216 0042 43F48043 		orr	r3, r3, #16384
 217 0046 4FF48040 		mov	r0, #16384
 218 004a C4F20100 		movt	r0, 16385
 219 004e 4FF00001 		mov	r1, #0
 220 0052 1A46     		mov	r2, r3
 221 0054 FFF7FEFF 		bl	TC_Configure
  47:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
 222              		.loc 2 47 0
 223 0058 4FF48043 		mov	r3, #16384
 224 005c C4F20103 		movt	r3, 16385
 225 0060 7968     		ldr	r1, [r7, #4]
 226 0062 4FF4D852 		mov	r2, #6912
 227 0066 C0F2B702 		movt	r2, 183
 228 006a B2FBF1F2 		udiv	r2, r2, r1
 229 006e DA61     		str	r2, [r3, #28]
  48:main.c        **** 	TC_Start(TC1, 0);
 230              		.loc 2 48 0
 231 0070 4FF48040 		mov	r0, #16384
 232 0074 C4F20100 		movt	r0, 16385
 233 0078 4FF00001 		mov	r1, #0
 234 007c FFF7FEFF 		bl	TC_Start
  49:main.c        **** 
  50:main.c        ****     NVIC_EnableIRQ(TC1_IRQn);
 235              		.loc 2 50 0
ARM GAS  /tmp/ccn6Sm5M.s 			page 34


 236 0080 4FF01800 		mov	r0, #24
 237 0084 FFF7FEFF 		bl	NVIC_EnableIRQ
  51:main.c        ****     NVIC_SetPriority(TC1_IRQn, 1);
 238              		.loc 2 51 0
 239 0088 4FF01800 		mov	r0, #24
 240 008c 4FF00101 		mov	r1, #1
 241 0090 FFF7FEFF 		bl	NVIC_SetPriority
  52:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 242              		.loc 2 52 0
 243 0094 4FF48043 		mov	r3, #16384
 244 0098 C4F20103 		movt	r3, 16385
 245 009c 4FF01002 		mov	r2, #16
 246 00a0 5A62     		str	r2, [r3, #36]
  53:main.c        **** 
  54:main.c        ****     /* Initialize ADC */
  55:main.c        ****     ADC_Initialize(ADC, ID_ADC);
 247              		.loc 2 55 0
 248 00a2 4FF40040 		mov	r0, #32768
 249 00a6 C4F20300 		movt	r0, 16387
 250 00aa 4FF01D01 		mov	r1, #29
 251 00ae FFF7FEFF 		bl	ADC_Initialize
  56:main.c        ****     ADC_cfgFrequency(ADC, 15, 4 ); // startup = 15, prescal = 4, ADC clock = 6.4 MHz
 252              		.loc 2 56 0
 253 00b2 4FF40040 		mov	r0, #32768
 254 00b6 C4F20300 		movt	r0, 16387
 255 00ba 4FF00F01 		mov	r1, #15
 256 00be 4FF00402 		mov	r2, #4
 257 00c2 FFF7FEFF 		bl	ADC_cfgFrequency
  57:main.c        **** 
  58:main.c        ****     ADC_EnableChannel(ADC, ADC0);
 258              		.loc 2 58 0
 259 00c6 4FF40043 		mov	r3, #32768
 260 00ca C4F20303 		movt	r3, 16387
 261 00ce 4FF00102 		mov	r2, #1
 262 00d2 1A61     		str	r2, [r3, #16]
  59:main.c        ****     ADC_EnableChannel(ADC, ADC1);
 263              		.loc 2 59 0
 264 00d4 4FF40043 		mov	r3, #32768
 265 00d8 C4F20303 		movt	r3, 16387
 266 00dc 4FF00202 		mov	r2, #2
 267 00e0 1A61     		str	r2, [r3, #16]
  60:main.c        **** 	ADC_StartConversion(ADC);
 268              		.loc 2 60 0
 269 00e2 4FF40043 		mov	r3, #32768
 270 00e6 C4F20303 		movt	r3, 16387
 271 00ea 4FF00202 		mov	r2, #2
 272 00ee 1A60     		str	r2, [r3, #0]
  61:main.c        ****     ADC_ReadBuffer(ADC, (int16_t*) input, BUFFER_SIZE);
 273              		.loc 2 61 0
 274 00f0 4FF40040 		mov	r0, #32768
 275 00f4 C4F20300 		movt	r0, 16387
 276 00f8 40F20001 		movw	r1, #:lower16:input
 277 00fc C0F20001 		movt	r1, #:upper16:input
 278 0100 4FF00202 		mov	r2, #2
 279 0104 FFF7FEFF 		bl	ADC_ReadBuffer
  62:main.c        **** 
  63:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
ARM GAS  /tmp/ccn6Sm5M.s 			page 35


 280              		.loc 2 63 0
 281 0108 4FF01D00 		mov	r0, #29
 282 010c FFF7FEFF 		bl	NVIC_EnableIRQ
  64:main.c        **** 	NVIC_SetPriority(ADC_IRQn, 0);
 283              		.loc 2 64 0
 284 0110 4FF01D00 		mov	r0, #29
 285 0114 4FF00001 		mov	r1, #0
 286 0118 FFF7FEFF 		bl	NVIC_SetPriority
  65:main.c        ****     ADC_EnableIt(ADC,ADC_IER_RXBUFF);
 287              		.loc 2 65 0
 288 011c 4FF40043 		mov	r3, #32768
 289 0120 C4F20303 		movt	r3, 16387
 290 0124 4FF08052 		mov	r2, #268435456
 291 0128 5A62     		str	r2, [r3, #36]
  66:main.c        **** 
  67:main.c        ****     /* Configure PWMC channels */
  68:main.c        ****     PWMC_ConfigureClocks(PWM_FREQ * PWM_PERIOD, 0, BOARD_MCK);
 292              		.loc 2 68 0
 293 012a 4FF4FA60 		mov	r0, #2000
 294 012e 4FF00001 		mov	r1, #0
 295 0132 4FF4D842 		mov	r2, #27648
 296 0136 C0F2DC22 		movt	r2, 732
 297 013a FFF7FEFF 		bl	PWMC_ConfigureClocks
  69:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWM0, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 298              		.loc 2 69 0
 299 013e 4FF00103 		mov	r3, #1
 300 0142 0093     		str	r3, [sp, #0]
 301 0144 4FF00003 		mov	r3, #0
 302 0148 0193     		str	r3, [sp, #4]
 303 014a 4FF00003 		mov	r3, #0
 304 014e 0293     		str	r3, [sp, #8]
 305 0150 4FF00003 		mov	r3, #0
 306 0154 0393     		str	r3, [sp, #12]
 307 0156 4FF00003 		mov	r3, #0
 308 015a 0493     		str	r3, [sp, #16]
 309 015c 4FF00000 		mov	r0, #0
 310 0160 C4F20200 		movt	r0, 16386
 311 0164 4FF00001 		mov	r1, #0
 312 0168 4FF00B02 		mov	r2, #11
 313 016c 4FF00003 		mov	r3, #0
 314 0170 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
  70:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWM1, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 315              		.loc 2 70 0
 316 0174 4FF00103 		mov	r3, #1
 317 0178 0093     		str	r3, [sp, #0]
 318 017a 4FF00003 		mov	r3, #0
 319 017e 0193     		str	r3, [sp, #4]
 320 0180 4FF00003 		mov	r3, #0
 321 0184 0293     		str	r3, [sp, #8]
 322 0186 4FF00003 		mov	r3, #0
 323 018a 0393     		str	r3, [sp, #12]
 324 018c 4FF00003 		mov	r3, #0
 325 0190 0493     		str	r3, [sp, #16]
 326 0192 4FF00000 		mov	r0, #0
 327 0196 C4F20200 		movt	r0, 16386
 328 019a 4FF00101 		mov	r1, #1
 329 019e 4FF00B02 		mov	r2, #11
ARM GAS  /tmp/ccn6Sm5M.s 			page 36


 330 01a2 4FF00003 		mov	r3, #0
 331 01a6 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
  71:main.c        **** 
  72:main.c        ****     PWMC_SetPeriod(PWM, PWM0, PWM_PERIOD);
 332              		.loc 2 72 0
 333 01aa 4FF00000 		mov	r0, #0
 334 01ae C4F20200 		movt	r0, 16386
 335 01b2 4FF00001 		mov	r1, #0
 336 01b6 4FF06402 		mov	r2, #100
 337 01ba FFF7FEFF 		bl	PWMC_SetPeriod
  73:main.c        ****     PWMC_SetDutyCycle(PWM, PWM0, 0);
 338              		.loc 2 73 0
 339 01be 4FF00000 		mov	r0, #0
 340 01c2 C4F20200 		movt	r0, 16386
 341 01c6 4FF00001 		mov	r1, #0
 342 01ca 4FF00002 		mov	r2, #0
 343 01ce FFF7FEFF 		bl	PWMC_SetDutyCycle
  74:main.c        ****     PWMC_SetPeriod(PWM, PWM1, PWM_PERIOD);
 344              		.loc 2 74 0
 345 01d2 4FF00000 		mov	r0, #0
 346 01d6 C4F20200 		movt	r0, 16386
 347 01da 4FF00101 		mov	r1, #1
 348 01de 4FF06402 		mov	r2, #100
 349 01e2 FFF7FEFF 		bl	PWMC_SetPeriod
  75:main.c        ****     PWMC_SetDutyCycle(PWM, PWM1, 0);
 350              		.loc 2 75 0
 351 01e6 4FF00000 		mov	r0, #0
 352 01ea C4F20200 		movt	r0, 16386
 353 01ee 4FF00101 		mov	r1, #1
 354 01f2 4FF00002 		mov	r2, #0
 355 01f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
  76:main.c        **** 
  77:main.c        ****     PWMC_ConfigureSyncChannel(PWM, (1 << PWM0)|(1 << PWM1), PWM_SCM_UPDM_MODE1, 0, 0);
 356              		.loc 2 77 0
 357 01fa 4FF00003 		mov	r3, #0
 358 01fe 0093     		str	r3, [sp, #0]
 359 0200 4FF00000 		mov	r0, #0
 360 0204 C4F20200 		movt	r0, 16386
 361 0208 4FF00301 		mov	r1, #3
 362 020c 4FF48032 		mov	r2, #65536
 363 0210 4FF00003 		mov	r3, #0
 364 0214 FFF7FEFF 		bl	PWMC_ConfigureSyncChannel
  78:main.c        ****     PWMC_SetSyncChannelUpdatePeriod(PWM, PWM_SCUP_UPR(1));
 365              		.loc 2 78 0
 366 0218 4FF00000 		mov	r0, #0
 367 021c C4F20200 		movt	r0, 16386
 368 0220 4FF00101 		mov	r1, #1
 369 0224 FFF7FEFF 		bl	PWMC_SetSyncChannelUpdatePeriod
  79:main.c        **** 
  80:main.c        **** 	/* Tick Config */
  81:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 370              		.loc 2 81 0
 371 0228 4FF4D840 		mov	r0, #27648
 372 022c C0F2DC20 		movt	r0, 732
 373 0230 FFF7FEFF 		bl	TimeTick_Configure
  82:main.c        **** 
  83:main.c        **** 	/* LED PIO Config */
ARM GAS  /tmp/ccn6Sm5M.s 			page 37


  84:main.c        **** 	LEDs_configure();
 374              		.loc 2 84 0
 375 0234 FFF7FEFF 		bl	LEDs_configure
  85:main.c        **** 	LED_clr(statusled);
 376              		.loc 2 85 0
 377 0238 4FF00000 		mov	r0, #0
 378 023c FFF7FEFF 		bl	LED_clr
  86:main.c        **** 
  87:main.c        **** 	/* USB Console Config */
  88:main.c        **** 	USBC_Configure();
 379              		.loc 2 88 0
 380 0240 FFF7FEFF 		bl	USBC_Configure
  89:main.c        **** }
 381              		.loc 2 89 0
 382 0244 07F10C07 		add	r7, r7, #12
 383 0248 BD46     		mov	sp, r7
 384 024a 90BD     		pop	{r4, r7, pc}
 385              		.cfi_endproc
 386              	.LFE35:
 387              		.size	init, .-init
 388              		.section	.rodata
 389              		.align	2
 390              	.LC0:
 391 0000 2D442D20 		.ascii	"-D- set state STOPPED\012\000"
 391      73657420 
 391      73746174 
 391      65205354 
 391      4F505045 
 392 0017 00       		.align	2
 393              	.LC1:
 394 0018 2D442D20 		.ascii	"-D- set state RUN\012\000"
 394      73657420 
 394      73746174 
 394      65205255 
 394      4E0A00
 395 002b 00       		.align	2
 396              	.LC2:
 397 002c 2D442D20 		.ascii	"-D- set state HOLD\012\000"
 397      73657420 
 397      73746174 
 397      6520484F 
 397      4C440A00 
 398              		.align	2
 399              	.LC3:
 400 0040 2D442D20 		.ascii	"-D- set state RELEASE\012\000"
 400      73657420 
 400      73746174 
 400      65205245 
 400      4C454153 
 401 0057 00       		.align	2
 402              	.LC4:
 403 0058 2D442D20 		.ascii	"-D- got invalid state\012\000"
 403      676F7420 
 403      696E7661 
 403      6C696420 
 403      73746174 
 404              		.section	.text.state,"ax",%progbits
ARM GAS  /tmp/ccn6Sm5M.s 			page 38


 405              		.align	2
 406              		.global	state
 407              		.thumb
 408              		.thumb_func
 409              		.type	state, %function
 410              	state:
 411              	.LFB36:
  90:main.c        **** 
  91:main.c        **** void state(uint8_t new) 
  92:main.c        **** {
 412              		.loc 2 92 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 8
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416 0000 80B5     		push	{r7, lr}
 417              	.LCFI9:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 14, -4
 420              		.cfi_offset 7, -8
 421 0002 82B0     		sub	sp, sp, #8
 422              	.LCFI10:
 423              		.cfi_def_cfa_offset 16
 424 0004 00AF     		add	r7, sp, #0
 425              	.LCFI11:
 426              		.cfi_def_cfa_register 7
 427 0006 0346     		mov	r3, r0
 428 0008 FB71     		strb	r3, [r7, #7]
  93:main.c        **** 	switch (new) {
 429              		.loc 2 93 0
 430 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 431 000c 03F1FF33 		add	r3, r3, #-1
 432 0010 072B     		cmp	r3, #7
 433 0012 00F2AF80 		bhi	.L7
 434 0016 01A2     		adr	r2, .L12
 435 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 436              		.align	2
 437              	.L12:
 438 001c 3D000000 		.word	.L8+1
 439 0020 91000000 		.word	.L9+1
 440 0024 75010000 		.word	.L7+1
 441 0028 CF000000 		.word	.L10+1
 442 002c 75010000 		.word	.L7+1
 443 0030 75010000 		.word	.L7+1
 444 0034 75010000 		.word	.L7+1
 445 0038 21010000 		.word	.L11+1
 446              	.L8:
  94:main.c        **** 		case STOPPED:
  95:main.c        **** 			mode(STOP, &loop);
 447              		.loc 2 95 0
 448 003c 4FF00300 		mov	r0, #3
 449 0040 40F20001 		movw	r1, #:lower16:loop
 450 0044 C0F20001 		movt	r1, #:upper16:loop
 451 0048 FFF7FEFF 		bl	mode
  96:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM0, 0);
 452              		.loc 2 96 0
 453 004c 4FF00000 		mov	r0, #0
 454 0050 C4F20200 		movt	r0, 16386
ARM GAS  /tmp/ccn6Sm5M.s 			page 39


 455 0054 4FF00001 		mov	r1, #0
 456 0058 4FF00002 		mov	r2, #0
 457 005c FFF7FEFF 		bl	PWMC_SetDutyCycle
  97:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM1, 0);
 458              		.loc 2 97 0
 459 0060 4FF00000 		mov	r0, #0
 460 0064 C4F20200 		movt	r0, 16386
 461 0068 4FF00101 		mov	r1, #1
 462 006c 4FF00002 		mov	r2, #0
 463 0070 FFF7FEFF 		bl	PWMC_SetDutyCycle
  98:main.c        **** 			TRACE_DEBUG("set state STOPPED\n");
 464              		.loc 2 98 0
 465 0074 40F20003 		movw	r3, #:lower16:_impure_ptr
 466 0078 C0F20003 		movt	r3, #:upper16:_impure_ptr
 467 007c 1B68     		ldr	r3, [r3, #0]
 468 007e DB68     		ldr	r3, [r3, #12]
 469 0080 1846     		mov	r0, r3
 470 0082 40F20001 		movw	r1, #:lower16:.LC0
 471 0086 C0F20001 		movt	r1, #:upper16:.LC0
 472 008a FFF7FEFF 		bl	fiprintf
  99:main.c        **** 			break;
 473              		.loc 2 99 0
 474 008e 82E0     		b	.L13
 475              	.L9:
 100:main.c        **** 		case RUN:
 101:main.c        **** 			loop.tristate = &rtrip;
 476              		.loc 2 101 0
 477 0090 40F20003 		movw	r3, #:lower16:loop
 478 0094 C0F20003 		movt	r3, #:upper16:loop
 479 0098 40F20002 		movw	r2, #:lower16:rtrip
 480 009c C0F20002 		movt	r2, #:upper16:rtrip
 481 00a0 9A62     		str	r2, [r3, #40]
 102:main.c        **** 			mode(RAMP, &loop);
 482              		.loc 2 102 0
 483 00a2 4FF00200 		mov	r0, #2
 484 00a6 40F20001 		movw	r1, #:lower16:loop
 485 00aa C0F20001 		movt	r1, #:upper16:loop
 486 00ae FFF7FEFF 		bl	mode
 103:main.c        **** 			TRACE_DEBUG("set state RUN\n");
 487              		.loc 2 103 0
 488 00b2 40F20003 		movw	r3, #:lower16:_impure_ptr
 489 00b6 C0F20003 		movt	r3, #:upper16:_impure_ptr
 490 00ba 1B68     		ldr	r3, [r3, #0]
 491 00bc DB68     		ldr	r3, [r3, #12]
 492 00be 1846     		mov	r0, r3
 493 00c0 40F20001 		movw	r1, #:lower16:.LC1
 494 00c4 C0F20001 		movt	r1, #:upper16:.LC1
 495 00c8 FFF7FEFF 		bl	fiprintf
 104:main.c        **** 			break;
 496              		.loc 2 104 0
 497 00cc 63E0     		b	.L13
 498              	.L10:
 105:main.c        **** 		case HOLD:
 106:main.c        **** 			loop.tristate = &ntrip;
 499              		.loc 2 106 0
 500 00ce 40F20003 		movw	r3, #:lower16:loop
 501 00d2 C0F20003 		movt	r3, #:upper16:loop
ARM GAS  /tmp/ccn6Sm5M.s 			page 40


 502 00d6 40F20002 		movw	r2, #:lower16:ntrip
 503 00da C0F20002 		movt	r2, #:upper16:ntrip
 504 00de 9A62     		str	r2, [r3, #40]
 107:main.c        **** 			loop.SP = loop._x;
 505              		.loc 2 107 0
 506 00e0 40F20003 		movw	r3, #:lower16:loop
 507 00e4 C0F20003 		movt	r3, #:upper16:loop
 508 00e8 9A8C     		ldrh	r2, [r3, #36]
 509 00ea 40F20003 		movw	r3, #:lower16:loop
 510 00ee C0F20003 		movt	r3, #:upper16:loop
 511 00f2 5A80     		strh	r2, [r3, #2]	@ movhi
 108:main.c        **** 			mode(NORMAL, &loop);
 512              		.loc 2 108 0
 513 00f4 4FF00100 		mov	r0, #1
 514 00f8 40F20001 		movw	r1, #:lower16:loop
 515 00fc C0F20001 		movt	r1, #:upper16:loop
 516 0100 FFF7FEFF 		bl	mode
 109:main.c        **** 			TRACE_DEBUG("set state HOLD\n");
 517              		.loc 2 109 0
 518 0104 40F20003 		movw	r3, #:lower16:_impure_ptr
 519 0108 C0F20003 		movt	r3, #:upper16:_impure_ptr
 520 010c 1B68     		ldr	r3, [r3, #0]
 521 010e DB68     		ldr	r3, [r3, #12]
 522 0110 1846     		mov	r0, r3
 523 0112 40F20001 		movw	r1, #:lower16:.LC2
 524 0116 C0F20001 		movt	r1, #:upper16:.LC2
 525 011a FFF7FEFF 		bl	fiprintf
 110:main.c        **** 			break;
 526              		.loc 2 110 0
 527 011e 3AE0     		b	.L13
 528              	.L11:
 111:main.c        **** 		case RELEASE:
 112:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM0, 0); // down -> 0
 529              		.loc 2 112 0
 530 0120 4FF00000 		mov	r0, #0
 531 0124 C4F20200 		movt	r0, 16386
 532 0128 4FF00001 		mov	r1, #0
 533 012c 4FF00002 		mov	r2, #0
 534 0130 FFF7FEFF 		bl	PWMC_SetDutyCycle
 113:main.c        **** 			PWMC_SetDutyCycle(PWM, PWM1, 0); // up -> full
 535              		.loc 2 113 0
 536 0134 4FF00000 		mov	r0, #0
 537 0138 C4F20200 		movt	r0, 16386
 538 013c 4FF00101 		mov	r1, #1
 539 0140 4FF00002 		mov	r2, #0
 540 0144 FFF7FEFF 		bl	PWMC_SetDutyCycle
 114:main.c        **** 			mode(STOP, &loop);
 541              		.loc 2 114 0
 542 0148 4FF00300 		mov	r0, #3
 543 014c 40F20001 		movw	r1, #:lower16:loop
 544 0150 C0F20001 		movt	r1, #:upper16:loop
 545 0154 FFF7FEFF 		bl	mode
 115:main.c        **** 			TRACE_DEBUG("set state RELEASE\n");
 546              		.loc 2 115 0
 547 0158 40F20003 		movw	r3, #:lower16:_impure_ptr
 548 015c C0F20003 		movt	r3, #:upper16:_impure_ptr
 549 0160 1B68     		ldr	r3, [r3, #0]
ARM GAS  /tmp/ccn6Sm5M.s 			page 41


 550 0162 DB68     		ldr	r3, [r3, #12]
 551 0164 1846     		mov	r0, r3
 552 0166 40F20001 		movw	r1, #:lower16:.LC3
 553 016a C0F20001 		movt	r1, #:upper16:.LC3
 554 016e FFF7FEFF 		bl	fiprintf
 116:main.c        **** 			break;
 555              		.loc 2 116 0
 556 0172 10E0     		b	.L13
 557              	.L7:
 117:main.c        **** 		default:
 118:main.c        **** 			TRACE_DEBUG("got invalid state\n");
 558              		.loc 2 118 0
 559 0174 40F20003 		movw	r3, #:lower16:_impure_ptr
 560 0178 C0F20003 		movt	r3, #:upper16:_impure_ptr
 561 017c 1B68     		ldr	r3, [r3, #0]
 562 017e DB68     		ldr	r3, [r3, #12]
 563 0180 1846     		mov	r0, r3
 564 0182 40F20001 		movw	r1, #:lower16:.LC4
 565 0186 C0F20001 		movt	r1, #:upper16:.LC4
 566 018a FFF7FEFF 		bl	fiprintf
 119:main.c        **** 			state(STOPPED);
 567              		.loc 2 119 0
 568 018e 4FF00100 		mov	r0, #1
 569 0192 FFF7FEFF 		bl	state
 570              	.L13:
 120:main.c        **** 	}
 121:main.c        **** 	_state = new;
 571              		.loc 2 121 0
 572 0196 40F20003 		movw	r3, #:lower16:_state
 573 019a C0F20003 		movt	r3, #:upper16:_state
 574 019e FA79     		ldrb	r2, [r7, #7]
 575 01a0 1A70     		strb	r2, [r3, #0]
 122:main.c        **** }
 576              		.loc 2 122 0
 577 01a2 07F10807 		add	r7, r7, #8
 578 01a6 BD46     		mov	sp, r7
 579 01a8 80BD     		pop	{r7, pc}
 580              		.cfi_endproc
 581              	.LFE36:
 582              		.size	state, .-state
 583 01aa 00BF     		.section	.rodata
 584 006f 00       		.align	2
 585              	.LC5:
 586 0070 25632025 		.ascii	"%c %u %u %u\000"
 586      75202575 
 586      20257500 
 587              		.align	2
 588              	.LC6:
 589 007c 2D442D20 		.ascii	"-D- got %i arguments\000"
 589      676F7420 
 589      25692061 
 589      7267756D 
 589      656E7473 
 590 0091 000000   		.align	2
 591              	.LC7:
 592 0094 2D492D20 		.ascii	"-I- set ramp endpoint to %u\012\000"
 592      73657420 
ARM GAS  /tmp/ccn6Sm5M.s 			page 42


 592      72616D70 
 592      20656E64 
 592      706F696E 
 593 00b1 000000   		.align	2
 594              	.LC8:
 595 00b4 25750A00 		.ascii	"%u\012\000"
 596              		.align	2
 597              	.LC9:
 598 00b8 2D492D20 		.ascii	"-I- set ramp slope to %i\012\000"
 598      73657420 
 598      72616D70 
 598      20736C6F 
 598      70652074 
 599 00d2 0000     		.align	2
 600              	.LC10:
 601 00d4 25690A00 		.ascii	"%i\012\000"
 602              		.align	2
 603              	.LC11:
 604 00d8 2D492D20 		.ascii	"-I- set PID factors to %u, %u, %u\012\000"
 604      73657420 
 604      50494420 
 604      66616374 
 604      6F727320 
 605 00fb 00       		.align	2
 606              	.LC12:
 607 00fc 25752025 		.ascii	"%u %u %u\012\000"
 607      75202575 
 607      0A00
 608 0106 0000     		.align	2
 609              	.LC13:
 610 0108 2D492D20 		.ascii	"-I- set releasetime to %u\012\000"
 610      73657420 
 610      72656C65 
 610      61736574 
 610      696D6520 
 611 0123 00       		.align	2
 612              	.LC14:
 613 0124 2D492D20 		.ascii	"-I- set dxmax to %u\012\000"
 613      73657420 
 613      64786D61 
 613      7820746F 
 613      2025750A 
 614 0139 000000   		.align	2
 615              	.LC15:
 616 013c 636F6E66 		.ascii	"config\000"
 616      696700
 617 0143 00       		.align	2
 618              	.LC16:
 619 0144 72756E00 		.ascii	"run\000"
 620              		.align	2
 621              	.LC17:
 622 0148 686F6C64 		.ascii	"hold\000"
 622      00
 623 014d 000000   		.align	2
 624              	.LC18:
 625 0150 2D492D20 		.ascii	"-I- set setpoint to %u\012\000"
 625      73657420 
ARM GAS  /tmp/ccn6Sm5M.s 			page 43


 625      73657470 
 625      6F696E74 
 625      20746F20 
 626              		.align	2
 627              	.LC19:
 628 0168 72656C65 		.ascii	"release\000"
 628      61736500 
 629              		.section	.text.cli,"ax",%progbits
 630              		.align	2
 631              		.global	cli
 632              		.thumb
 633              		.thumb_func
 634              		.type	cli, %function
 635              	cli:
 636              	.LFB37:
 123:main.c        **** 
 124:main.c        **** void cli()
 125:main.c        **** {
 637              		.loc 2 125 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 56
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641 0000 90B5     		push	{r4, r7, lr}
 642              	.LCFI12:
 643              		.cfi_def_cfa_offset 12
 644              		.cfi_offset 14, -4
 645              		.cfi_offset 7, -8
 646              		.cfi_offset 4, -12
 647 0002 91B0     		sub	sp, sp, #68
 648              	.LCFI13:
 649              		.cfi_def_cfa_offset 80
 650 0004 02AF     		add	r7, sp, #8
 651              	.LCFI14:
 652              		.cfi_def_cfa 7, 72
 126:main.c        **** 	int argc;
 127:main.c        **** 	int argv[3];
 128:main.c        **** 	char line[32];
 129:main.c        **** 	char cmd = 0;
 653              		.loc 2 129 0
 654 0006 4FF00003 		mov	r3, #0
 655 000a FB71     		strb	r3, [r7, #7]
 130:main.c        **** 
 131:main.c        **** 	if (!USBC_hasData())
 656              		.loc 2 131 0
 657 000c FFF7FEFF 		bl	USBC_hasData
 658 0010 0346     		mov	r3, r0
 659 0012 002B     		cmp	r3, #0
 660 0014 00F0FB81 		beq	.L50
 661              	.L15:
 132:main.c        **** 		return;
 133:main.c        **** 
 134:main.c        **** 	gets(line);
 662              		.loc 2 134 0
 663 0018 07F10803 		add	r3, r7, #8
 664 001c 1846     		mov	r0, r3
 665 001e FFF7FEFF 		bl	gets
 135:main.c        **** 	argc = sscanf(line, "%c %u %u %u", &cmd, argv, argv+1, argv+2) - 1;
ARM GAS  /tmp/ccn6Sm5M.s 			page 44


 666              		.loc 2 135 0
 667 0022 07F10801 		add	r1, r7, #8
 668 0026 07F10702 		add	r2, r7, #7
 669 002a 07F12803 		add	r3, r7, #40
 670 002e 07F12800 		add	r0, r7, #40
 671 0032 00F10400 		add	r0, r0, #4
 672 0036 0090     		str	r0, [sp, #0]
 673 0038 07F12800 		add	r0, r7, #40
 674 003c 00F10800 		add	r0, r0, #8
 675 0040 0190     		str	r0, [sp, #4]
 676 0042 0846     		mov	r0, r1
 677 0044 40F20001 		movw	r1, #:lower16:.LC5
 678 0048 C0F20001 		movt	r1, #:upper16:.LC5
 679 004c FFF7FEFF 		bl	siscanf
 680 0050 0346     		mov	r3, r0
 681 0052 03F1FF33 		add	r3, r3, #-1
 682 0056 7B63     		str	r3, [r7, #52]
 136:main.c        **** 	TRACE_DEBUG("got %i arguments", argc);
 683              		.loc 2 136 0
 684 0058 40F20003 		movw	r3, #:lower16:_impure_ptr
 685 005c C0F20003 		movt	r3, #:upper16:_impure_ptr
 686 0060 1B68     		ldr	r3, [r3, #0]
 687 0062 DB68     		ldr	r3, [r3, #12]
 688 0064 1846     		mov	r0, r3
 689 0066 40F20001 		movw	r1, #:lower16:.LC6
 690 006a C0F20001 		movt	r1, #:upper16:.LC6
 691 006e 7A6B     		ldr	r2, [r7, #52]
 692 0070 FFF7FEFF 		bl	fiprintf
 137:main.c        **** 
 138:main.c        **** 	switch (_state) {
 693              		.loc 2 138 0
 694 0074 40F20003 		movw	r3, #:lower16:_state
 695 0078 C0F20003 		movt	r3, #:upper16:_state
 696 007c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 697 007e 03F1FF33 		add	r3, r3, #-1
 698 0082 072B     		cmp	r3, #7
 699 0084 00F2BE81 		bhi	.L17
 700 0088 01A2     		adr	r2, .L22
 701 008a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 702 008e 00BF     		.align	2
 703              	.L22:
 704 0090 B1000000 		.word	.L18+1
 705 0094 19030000 		.word	.L19+1
 706 0098 05040000 		.word	.L17+1
 707 009c 4D030000 		.word	.L20+1
 708 00a0 05040000 		.word	.L17+1
 709 00a4 05040000 		.word	.L17+1
 710 00a8 05040000 		.word	.L17+1
 711 00ac E1030000 		.word	.L21+1
 712              	.L18:
 139:main.c        **** 		case STOPPED:
 140:main.c        **** 			if (cmd == 'g') {
 713              		.loc 2 140 0
 714 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 715 00b2 672B     		cmp	r3, #103
 716 00b4 04D1     		bne	.L23
 141:main.c        **** 				state(RUN);
ARM GAS  /tmp/ccn6Sm5M.s 			page 45


 717              		.loc 2 141 0
 718 00b6 4FF00200 		mov	r0, #2
 719 00ba FFF7FEFF 		bl	state
 142:main.c        **** 			}
 143:main.c        **** 			else if (cmd == 'h') {
 144:main.c        **** 				state(HOLD);
 145:main.c        **** 			}
 146:main.c        **** 			else if (cmd == 'r') {
 147:main.c        **** 				state(RELEASE);
 148:main.c        **** 			}
 149:main.c        **** 			else if (cmd == 'e') {
 150:main.c        **** 				if (argc == 1) {
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 152:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 153:main.c        **** 				}
 154:main.c        **** 				printf("%u\n", loop.rSP);
 155:main.c        **** 			}
 156:main.c        **** 			else if (cmd == 's') {
 157:main.c        **** 				if (argc == 1) {
 158:main.c        **** 					loop.rSlope = *argv;
 159:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 160:main.c        **** 				}
 161:main.c        **** 				printf("%i\n", loop.rSlope);
 162:main.c        **** 			}
 163:main.c        **** 			else if (cmd == 'k') {
 164:main.c        **** 				if (argc == 3) {
 165:main.c        **** 					loop.Kp = argv[0];
 166:main.c        **** 					loop.Ki = argv[1];
 167:main.c        **** 					loop.Kd = argv[2];
 168:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 169:main.c        **** 				}
 170:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 171:main.c        **** 			}
 172:main.c        **** 			else if (cmd == 't') {
 173:main.c        **** 				if (argc == 1) {
 174:main.c        **** 					releasetime = *argv;
 175:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 176:main.c        **** 				}
 177:main.c        **** 				printf("%u\n", releasetime);
 178:main.c        **** 			}
 179:main.c        **** 			else if (cmd == 'd') {
 180:main.c        **** 				if (argc == 2) {
 181:main.c        **** 					dxmax = *argv;
 182:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 183:main.c        **** 				}
 184:main.c        **** 				printf("%u\n", dxmax);
 185:main.c        **** 			}
 186:main.c        **** 			else if (cmd == '?') {
 187:main.c        **** 				puts("config");
 188:main.c        **** 			}
 189:main.c        **** 
 190:main.c        **** 			break;
 720              		.loc 2 190 0
 721 00be A8E1     		b	.L51
 722              	.L23:
 143:main.c        **** 			else if (cmd == 'h') {
 723              		.loc 2 143 0
ARM GAS  /tmp/ccn6Sm5M.s 			page 46


 724 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 725 00c2 682B     		cmp	r3, #104
 726 00c4 04D1     		bne	.L25
 144:main.c        **** 				state(HOLD);
 727              		.loc 2 144 0
 728 00c6 4FF00400 		mov	r0, #4
 729 00ca FFF7FEFF 		bl	state
 730              		.loc 2 190 0
 731 00ce A0E1     		b	.L51
 732              	.L25:
 146:main.c        **** 			else if (cmd == 'r') {
 733              		.loc 2 146 0
 734 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 735 00d2 722B     		cmp	r3, #114
 736 00d4 04D1     		bne	.L26
 147:main.c        **** 				state(RELEASE);
 737              		.loc 2 147 0
 738 00d6 4FF00800 		mov	r0, #8
 739 00da FFF7FEFF 		bl	state
 740              		.loc 2 190 0
 741 00de 98E1     		b	.L51
 742              	.L26:
 149:main.c        **** 			else if (cmd == 'e') {
 743              		.loc 2 149 0
 744 00e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 745 00e2 652B     		cmp	r3, #101
 746 00e4 34D1     		bne	.L27
 150:main.c        **** 				if (argc == 1) {
 747              		.loc 2 150 0
 748 00e6 7B6B     		ldr	r3, [r7, #52]
 749 00e8 012B     		cmp	r3, #1
 750 00ea 24D1     		bne	.L28
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 751              		.loc 2 151 0
 752 00ec BB6A     		ldr	r3, [r7, #40]
 753 00ee 002B     		cmp	r3, #0
 754 00f0 07DB     		blt	.L29
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 755              		.loc 2 151 0 is_stmt 0 discriminator 1
 756 00f2 BA6A     		ldr	r2, [r7, #40]
 757 00f4 40F6FF73 		movw	r3, #4095
 758 00f8 9A42     		cmp	r2, r3
 759 00fa B8BF     		it	lt
 760 00fc 1346     		movlt	r3, r2
 761 00fe 9AB2     		uxth	r2, r3
 762 0100 01E0     		b	.L30
 763              	.L29:
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 764              		.loc 2 151 0 discriminator 2
 765 0102 4FF00002 		mov	r2, #0
 766              	.L30:
 151:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 767              		.loc 2 151 0 discriminator 3
 768 0106 40F20003 		movw	r3, #:lower16:loop
 769 010a C0F20003 		movt	r3, #:upper16:loop
 770 010e 9A80     		strh	r2, [r3, #4]	@ movhi
 152:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
ARM GAS  /tmp/ccn6Sm5M.s 			page 47


 771              		.loc 2 152 0 is_stmt 1 discriminator 3
 772 0110 40F20003 		movw	r3, #:lower16:_impure_ptr
 773 0114 C0F20003 		movt	r3, #:upper16:_impure_ptr
 774 0118 1B68     		ldr	r3, [r3, #0]
 775 011a DA68     		ldr	r2, [r3, #12]
 776 011c 40F20003 		movw	r3, #:lower16:loop
 777 0120 C0F20003 		movt	r3, #:upper16:loop
 778 0124 9B88     		ldrh	r3, [r3, #4]
 779 0126 1046     		mov	r0, r2
 780 0128 40F20001 		movw	r1, #:lower16:.LC7
 781 012c C0F20001 		movt	r1, #:upper16:.LC7
 782 0130 1A46     		mov	r2, r3
 783 0132 FFF7FEFF 		bl	fiprintf
 784              	.L28:
 154:main.c        **** 				printf("%u\n", loop.rSP);
 785              		.loc 2 154 0
 786 0136 40F20003 		movw	r3, #:lower16:loop
 787 013a C0F20003 		movt	r3, #:upper16:loop
 788 013e 9B88     		ldrh	r3, [r3, #4]
 789 0140 40F20000 		movw	r0, #:lower16:.LC8
 790 0144 C0F20000 		movt	r0, #:upper16:.LC8
 791 0148 1946     		mov	r1, r3
 792 014a FFF7FEFF 		bl	iprintf
 793              		.loc 2 190 0
 794 014e 60E1     		b	.L51
 795              	.L27:
 156:main.c        **** 			else if (cmd == 's') {
 796              		.loc 2 156 0
 797 0150 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 798 0152 732B     		cmp	r3, #115
 799 0154 28D1     		bne	.L31
 157:main.c        **** 				if (argc == 1) {
 800              		.loc 2 157 0
 801 0156 7B6B     		ldr	r3, [r7, #52]
 802 0158 012B     		cmp	r3, #1
 803 015a 18D1     		bne	.L32
 158:main.c        **** 					loop.rSlope = *argv;
 804              		.loc 2 158 0
 805 015c BA6A     		ldr	r2, [r7, #40]
 806 015e 40F20003 		movw	r3, #:lower16:loop
 807 0162 C0F20003 		movt	r3, #:upper16:loop
 808 0166 9A60     		str	r2, [r3, #8]
 159:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 809              		.loc 2 159 0
 810 0168 40F20003 		movw	r3, #:lower16:_impure_ptr
 811 016c C0F20003 		movt	r3, #:upper16:_impure_ptr
 812 0170 1B68     		ldr	r3, [r3, #0]
 813 0172 DA68     		ldr	r2, [r3, #12]
 814 0174 40F20003 		movw	r3, #:lower16:loop
 815 0178 C0F20003 		movt	r3, #:upper16:loop
 816 017c 9B68     		ldr	r3, [r3, #8]
 817 017e 1046     		mov	r0, r2
 818 0180 40F20001 		movw	r1, #:lower16:.LC9
 819 0184 C0F20001 		movt	r1, #:upper16:.LC9
 820 0188 1A46     		mov	r2, r3
 821 018a FFF7FEFF 		bl	fiprintf
 822              	.L32:
ARM GAS  /tmp/ccn6Sm5M.s 			page 48


 161:main.c        **** 				printf("%i\n", loop.rSlope);
 823              		.loc 2 161 0
 824 018e 40F20003 		movw	r3, #:lower16:loop
 825 0192 C0F20003 		movt	r3, #:upper16:loop
 826 0196 9B68     		ldr	r3, [r3, #8]
 827 0198 40F20000 		movw	r0, #:lower16:.LC10
 828 019c C0F20000 		movt	r0, #:upper16:.LC10
 829 01a0 1946     		mov	r1, r3
 830 01a2 FFF7FEFF 		bl	iprintf
 831              		.loc 2 190 0
 832 01a6 34E1     		b	.L51
 833              	.L31:
 163:main.c        **** 			else if (cmd == 'k') {
 834              		.loc 2 163 0
 835 01a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 836 01aa 6B2B     		cmp	r3, #107
 837 01ac 4FD1     		bne	.L33
 164:main.c        **** 				if (argc == 3) {
 838              		.loc 2 164 0
 839 01ae 7B6B     		ldr	r3, [r7, #52]
 840 01b0 032B     		cmp	r3, #3
 841 01b2 34D1     		bne	.L34
 165:main.c        **** 					loop.Kp = argv[0];
 842              		.loc 2 165 0
 843 01b4 BB6A     		ldr	r3, [r7, #40]
 844 01b6 9AB2     		uxth	r2, r3
 845 01b8 40F20003 		movw	r3, #:lower16:loop
 846 01bc C0F20003 		movt	r3, #:upper16:loop
 847 01c0 9A81     		strh	r2, [r3, #12]	@ movhi
 166:main.c        **** 					loop.Ki = argv[1];
 848              		.loc 2 166 0
 849 01c2 FB6A     		ldr	r3, [r7, #44]
 850 01c4 9AB2     		uxth	r2, r3
 851 01c6 40F20003 		movw	r3, #:lower16:loop
 852 01ca C0F20003 		movt	r3, #:upper16:loop
 853 01ce DA81     		strh	r2, [r3, #14]	@ movhi
 167:main.c        **** 					loop.Kd = argv[2];
 854              		.loc 2 167 0
 855 01d0 3B6B     		ldr	r3, [r7, #48]
 856 01d2 9AB2     		uxth	r2, r3
 857 01d4 40F20003 		movw	r3, #:lower16:loop
 858 01d8 C0F20003 		movt	r3, #:upper16:loop
 859 01dc 1A82     		strh	r2, [r3, #16]	@ movhi
 168:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 860              		.loc 2 168 0
 861 01de 40F20003 		movw	r3, #:lower16:_impure_ptr
 862 01e2 C0F20003 		movt	r3, #:upper16:_impure_ptr
 863 01e6 1B68     		ldr	r3, [r3, #0]
 864 01e8 D968     		ldr	r1, [r3, #12]
 865 01ea 40F20003 		movw	r3, #:lower16:loop
 866 01ee C0F20003 		movt	r3, #:upper16:loop
 867 01f2 9B89     		ldrh	r3, [r3, #12]
 868 01f4 1A46     		mov	r2, r3
 869 01f6 40F20003 		movw	r3, #:lower16:loop
 870 01fa C0F20003 		movt	r3, #:upper16:loop
 871 01fe DB89     		ldrh	r3, [r3, #14]
 872 0200 1C46     		mov	r4, r3
ARM GAS  /tmp/ccn6Sm5M.s 			page 49


 873 0202 40F20003 		movw	r3, #:lower16:loop
 874 0206 C0F20003 		movt	r3, #:upper16:loop
 875 020a 1B8A     		ldrh	r3, [r3, #16]
 876 020c 0093     		str	r3, [sp, #0]
 877 020e 0846     		mov	r0, r1
 878 0210 40F20001 		movw	r1, #:lower16:.LC11
 879 0214 C0F20001 		movt	r1, #:upper16:.LC11
 880 0218 2346     		mov	r3, r4
 881 021a FFF7FEFF 		bl	fiprintf
 882              	.L34:
 170:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 883              		.loc 2 170 0
 884 021e 40F20003 		movw	r3, #:lower16:loop
 885 0222 C0F20003 		movt	r3, #:upper16:loop
 886 0226 9B89     		ldrh	r3, [r3, #12]
 887 0228 1946     		mov	r1, r3
 888 022a 40F20003 		movw	r3, #:lower16:loop
 889 022e C0F20003 		movt	r3, #:upper16:loop
 890 0232 DB89     		ldrh	r3, [r3, #14]
 891 0234 1A46     		mov	r2, r3
 892 0236 40F20003 		movw	r3, #:lower16:loop
 893 023a C0F20003 		movt	r3, #:upper16:loop
 894 023e 1B8A     		ldrh	r3, [r3, #16]
 895 0240 40F20000 		movw	r0, #:lower16:.LC12
 896 0244 C0F20000 		movt	r0, #:upper16:.LC12
 897 0248 FFF7FEFF 		bl	iprintf
 898              		.loc 2 190 0
 899 024c E1E0     		b	.L51
 900              	.L33:
 172:main.c        **** 			else if (cmd == 't') {
 901              		.loc 2 172 0
 902 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 903 0250 742B     		cmp	r3, #116
 904 0252 29D1     		bne	.L35
 173:main.c        **** 				if (argc == 1) {
 905              		.loc 2 173 0
 906 0254 7B6B     		ldr	r3, [r7, #52]
 907 0256 012B     		cmp	r3, #1
 908 0258 19D1     		bne	.L36
 174:main.c        **** 					releasetime = *argv;
 909              		.loc 2 174 0
 910 025a BB6A     		ldr	r3, [r7, #40]
 911 025c 1A46     		mov	r2, r3
 912 025e 40F20003 		movw	r3, #:lower16:releasetime
 913 0262 C0F20003 		movt	r3, #:upper16:releasetime
 914 0266 1A60     		str	r2, [r3, #0]
 175:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 915              		.loc 2 175 0
 916 0268 40F20003 		movw	r3, #:lower16:_impure_ptr
 917 026c C0F20003 		movt	r3, #:upper16:_impure_ptr
 918 0270 1B68     		ldr	r3, [r3, #0]
 919 0272 DA68     		ldr	r2, [r3, #12]
 920 0274 40F20003 		movw	r3, #:lower16:releasetime
 921 0278 C0F20003 		movt	r3, #:upper16:releasetime
 922 027c 1B68     		ldr	r3, [r3, #0]
 923 027e 1046     		mov	r0, r2
 924 0280 40F20001 		movw	r1, #:lower16:.LC13
ARM GAS  /tmp/ccn6Sm5M.s 			page 50


 925 0284 C0F20001 		movt	r1, #:upper16:.LC13
 926 0288 1A46     		mov	r2, r3
 927 028a FFF7FEFF 		bl	fiprintf
 928              	.L36:
 177:main.c        **** 				printf("%u\n", releasetime);
 929              		.loc 2 177 0
 930 028e 40F20003 		movw	r3, #:lower16:releasetime
 931 0292 C0F20003 		movt	r3, #:upper16:releasetime
 932 0296 1B68     		ldr	r3, [r3, #0]
 933 0298 40F20000 		movw	r0, #:lower16:.LC8
 934 029c C0F20000 		movt	r0, #:upper16:.LC8
 935 02a0 1946     		mov	r1, r3
 936 02a2 FFF7FEFF 		bl	iprintf
 937              		.loc 2 190 0
 938 02a6 B4E0     		b	.L51
 939              	.L35:
 179:main.c        **** 			else if (cmd == 'd') {
 940              		.loc 2 179 0
 941 02a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 942 02aa 642B     		cmp	r3, #100
 943 02ac 29D1     		bne	.L37
 180:main.c        **** 				if (argc == 2) {
 944              		.loc 2 180 0
 945 02ae 7B6B     		ldr	r3, [r7, #52]
 946 02b0 022B     		cmp	r3, #2
 947 02b2 19D1     		bne	.L38
 181:main.c        **** 					dxmax = *argv;
 948              		.loc 2 181 0
 949 02b4 BB6A     		ldr	r3, [r7, #40]
 950 02b6 1A46     		mov	r2, r3
 951 02b8 40F20003 		movw	r3, #:lower16:dxmax
 952 02bc C0F20003 		movt	r3, #:upper16:dxmax
 953 02c0 1A60     		str	r2, [r3, #0]
 182:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 954              		.loc 2 182 0
 955 02c2 40F20003 		movw	r3, #:lower16:_impure_ptr
 956 02c6 C0F20003 		movt	r3, #:upper16:_impure_ptr
 957 02ca 1B68     		ldr	r3, [r3, #0]
 958 02cc DA68     		ldr	r2, [r3, #12]
 959 02ce 40F20003 		movw	r3, #:lower16:dxmax
 960 02d2 C0F20003 		movt	r3, #:upper16:dxmax
 961 02d6 1B68     		ldr	r3, [r3, #0]
 962 02d8 1046     		mov	r0, r2
 963 02da 40F20001 		movw	r1, #:lower16:.LC14
 964 02de C0F20001 		movt	r1, #:upper16:.LC14
 965 02e2 1A46     		mov	r2, r3
 966 02e4 FFF7FEFF 		bl	fiprintf
 967              	.L38:
 184:main.c        **** 				printf("%u\n", dxmax);
 968              		.loc 2 184 0
 969 02e8 40F20003 		movw	r3, #:lower16:dxmax
 970 02ec C0F20003 		movt	r3, #:upper16:dxmax
 971 02f0 1B68     		ldr	r3, [r3, #0]
 972 02f2 40F20000 		movw	r0, #:lower16:.LC8
 973 02f6 C0F20000 		movt	r0, #:upper16:.LC8
 974 02fa 1946     		mov	r1, r3
 975 02fc FFF7FEFF 		bl	iprintf
ARM GAS  /tmp/ccn6Sm5M.s 			page 51


 976              		.loc 2 190 0
 977 0300 87E0     		b	.L51
 978              	.L37:
 186:main.c        **** 			else if (cmd == '?') {
 979              		.loc 2 186 0
 980 0302 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 981 0304 3F2B     		cmp	r3, #63
 982 0306 40F08480 		bne	.L51
 187:main.c        **** 				puts("config");
 983              		.loc 2 187 0
 984 030a 40F20000 		movw	r0, #:lower16:.LC15
 985 030e C0F20000 		movt	r0, #:upper16:.LC15
 986 0312 FFF7FEFF 		bl	puts
 987              		.loc 2 190 0
 988 0316 7CE0     		b	.L51
 989              	.L19:
 191:main.c        **** 
 192:main.c        **** 		case RUN:
 193:main.c        **** 			if (cmd == '?')
 990              		.loc 2 193 0
 991 0318 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 992 031a 3F2B     		cmp	r3, #63
 993 031c 06D1     		bne	.L39
 194:main.c        **** 				puts("run");
 994              		.loc 2 194 0
 995 031e 40F20000 		movw	r0, #:lower16:.LC16
 996 0322 C0F20000 		movt	r0, #:upper16:.LC16
 997 0326 FFF7FEFF 		bl	puts
 195:main.c        **** 			else if (cmd == 's')
 196:main.c        **** 				state(STOPPED);
 197:main.c        **** 			else if (cmd == 'r')
 198:main.c        **** 				state(RELEASE);
 199:main.c        **** 			break;
 998              		.loc 2 199 0
 999 032a 74E0     		b	.L52
 1000              	.L39:
 195:main.c        **** 			else if (cmd == 's')
 1001              		.loc 2 195 0
 1002 032c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1003 032e 732B     		cmp	r3, #115
 1004 0330 04D1     		bne	.L41
 196:main.c        **** 				state(STOPPED);
 1005              		.loc 2 196 0
 1006 0332 4FF00100 		mov	r0, #1
 1007 0336 FFF7FEFF 		bl	state
 1008              		.loc 2 199 0
 1009 033a 6CE0     		b	.L52
 1010              	.L41:
 197:main.c        **** 			else if (cmd == 'r')
 1011              		.loc 2 197 0
 1012 033c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1013 033e 722B     		cmp	r3, #114
 1014 0340 69D1     		bne	.L52
 198:main.c        **** 				state(RELEASE);
 1015              		.loc 2 198 0
 1016 0342 4FF00800 		mov	r0, #8
 1017 0346 FFF7FEFF 		bl	state
ARM GAS  /tmp/ccn6Sm5M.s 			page 52


 1018              		.loc 2 199 0
 1019 034a 64E0     		b	.L52
 1020              	.L20:
 200:main.c        **** 
 201:main.c        **** 		case HOLD:
 202:main.c        **** 			if (cmd == '?')
 1021              		.loc 2 202 0
 1022 034c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1023 034e 3F2B     		cmp	r3, #63
 1024 0350 06D1     		bne	.L42
 203:main.c        **** 				puts("hold");
 1025              		.loc 2 203 0
 1026 0352 40F20000 		movw	r0, #:lower16:.LC17
 1027 0356 C0F20000 		movt	r0, #:upper16:.LC17
 1028 035a FFF7FEFF 		bl	puts
 204:main.c        **** 			else if (cmd == 's')
 205:main.c        **** 				state(STOPPED);
 206:main.c        **** 			else if (cmd == 'w') {
 207:main.c        **** 				if (argc == 1) {
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 209:main.c        **** 					TRACE_INFO("set setpoint to %u\n", loop.SP);
 210:main.c        **** 				}
 211:main.c        **** 				printf("%u\n", loop.SP);
 212:main.c        **** 			}
 213:main.c        **** 			break;
 1029              		.loc 2 213 0
 1030 035e 5CE0     		b	.L53
 1031              	.L42:
 204:main.c        **** 			else if (cmd == 's')
 1032              		.loc 2 204 0
 1033 0360 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1034 0362 732B     		cmp	r3, #115
 1035 0364 04D1     		bne	.L44
 205:main.c        **** 				state(STOPPED);
 1036              		.loc 2 205 0
 1037 0366 4FF00100 		mov	r0, #1
 1038 036a FFF7FEFF 		bl	state
 1039              		.loc 2 213 0
 1040 036e 54E0     		b	.L53
 1041              	.L44:
 206:main.c        **** 			else if (cmd == 'w') {
 1042              		.loc 2 206 0
 1043 0370 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1044 0372 772B     		cmp	r3, #119
 1045 0374 51D1     		bne	.L53
 207:main.c        **** 				if (argc == 1) {
 1046              		.loc 2 207 0
 1047 0376 7B6B     		ldr	r3, [r7, #52]
 1048 0378 012B     		cmp	r3, #1
 1049 037a 24D1     		bne	.L45
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1050              		.loc 2 208 0
 1051 037c BB6A     		ldr	r3, [r7, #40]
 1052 037e 002B     		cmp	r3, #0
 1053 0380 07DB     		blt	.L46
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1054              		.loc 2 208 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccn6Sm5M.s 			page 53


 1055 0382 BA6A     		ldr	r2, [r7, #40]
 1056 0384 40F6FF73 		movw	r3, #4095
 1057 0388 9A42     		cmp	r2, r3
 1058 038a B8BF     		it	lt
 1059 038c 1346     		movlt	r3, r2
 1060 038e 9AB2     		uxth	r2, r3
 1061 0390 01E0     		b	.L47
 1062              	.L46:
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1063              		.loc 2 208 0 discriminator 2
 1064 0392 4FF00002 		mov	r2, #0
 1065              	.L47:
 208:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1066              		.loc 2 208 0 discriminator 3
 1067 0396 40F20003 		movw	r3, #:lower16:loop
 1068 039a C0F20003 		movt	r3, #:upper16:loop
 1069 039e 5A80     		strh	r2, [r3, #2]	@ movhi
 209:main.c        **** 					TRACE_INFO("set setpoint to %u\n", loop.SP);
 1070              		.loc 2 209 0 is_stmt 1 discriminator 3
 1071 03a0 40F20003 		movw	r3, #:lower16:_impure_ptr
 1072 03a4 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1073 03a8 1B68     		ldr	r3, [r3, #0]
 1074 03aa DA68     		ldr	r2, [r3, #12]
 1075 03ac 40F20003 		movw	r3, #:lower16:loop
 1076 03b0 C0F20003 		movt	r3, #:upper16:loop
 1077 03b4 5B88     		ldrh	r3, [r3, #2]
 1078 03b6 1046     		mov	r0, r2
 1079 03b8 40F20001 		movw	r1, #:lower16:.LC18
 1080 03bc C0F20001 		movt	r1, #:upper16:.LC18
 1081 03c0 1A46     		mov	r2, r3
 1082 03c2 FFF7FEFF 		bl	fiprintf
 1083              	.L45:
 211:main.c        **** 				printf("%u\n", loop.SP);
 1084              		.loc 2 211 0
 1085 03c6 40F20003 		movw	r3, #:lower16:loop
 1086 03ca C0F20003 		movt	r3, #:upper16:loop
 1087 03ce 5B88     		ldrh	r3, [r3, #2]
 1088 03d0 40F20000 		movw	r0, #:lower16:.LC8
 1089 03d4 C0F20000 		movt	r0, #:upper16:.LC8
 1090 03d8 1946     		mov	r1, r3
 1091 03da FFF7FEFF 		bl	iprintf
 1092              		.loc 2 213 0
 1093 03de 1CE0     		b	.L53
 1094              	.L21:
 214:main.c        **** 
 215:main.c        **** 		case RELEASE:
 216:main.c        **** 			if (cmd == '?')
 1095              		.loc 2 216 0
 1096 03e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1097 03e2 3F2B     		cmp	r3, #63
 1098 03e4 06D1     		bne	.L48
 217:main.c        **** 				puts("release");
 1099              		.loc 2 217 0
 1100 03e6 40F20000 		movw	r0, #:lower16:.LC19
 1101 03ea C0F20000 		movt	r0, #:upper16:.LC19
 1102 03ee FFF7FEFF 		bl	puts
 218:main.c        **** 			else if (cmd == 's')
ARM GAS  /tmp/ccn6Sm5M.s 			page 54


 219:main.c        **** 				state(STOPPED);
 220:main.c        **** 			break;
 1103              		.loc 2 220 0
 1104 03f2 14E0     		b	.L54
 1105              	.L48:
 218:main.c        **** 			else if (cmd == 's')
 1106              		.loc 2 218 0
 1107 03f4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1108 03f6 732B     		cmp	r3, #115
 1109 03f8 11D1     		bne	.L54
 219:main.c        **** 				state(STOPPED);
 1110              		.loc 2 219 0
 1111 03fa 4FF00100 		mov	r0, #1
 1112 03fe FFF7FEFF 		bl	state
 1113              		.loc 2 220 0
 1114 0402 0CE0     		b	.L54
 1115              	.L17:
 221:main.c        **** 
 222:main.c        **** 		default:
 223:main.c        **** 			state(STOPPED);
 1116              		.loc 2 223 0
 1117 0404 4FF00100 		mov	r0, #1
 1118 0408 FFF7FEFF 		bl	state
 1119 040c 08E0     		b	.L14
 1120              	.L50:
 132:main.c        **** 		return;
 1121              		.loc 2 132 0
 1122 040e 00BF     		nop
 1123 0410 06E0     		b	.L14
 1124              	.L51:
 190:main.c        **** 			break;
 1125              		.loc 2 190 0
 1126 0412 00BF     		nop
 1127 0414 04E0     		b	.L14
 1128              	.L52:
 199:main.c        **** 			break;
 1129              		.loc 2 199 0
 1130 0416 00BF     		nop
 1131 0418 02E0     		b	.L14
 1132              	.L53:
 213:main.c        **** 			break;
 1133              		.loc 2 213 0
 1134 041a 00BF     		nop
 1135 041c 00E0     		b	.L14
 1136              	.L54:
 220:main.c        **** 			break;
 1137              		.loc 2 220 0
 1138 041e 00BF     		nop
 1139              	.L14:
 224:main.c        **** 	}
 225:main.c        **** }
 1140              		.loc 2 225 0
 1141 0420 07F13C07 		add	r7, r7, #60
 1142 0424 BD46     		mov	sp, r7
 1143 0426 90BD     		pop	{r4, r7, pc}
 1144              		.cfi_endproc
 1145              	.LFE37:
ARM GAS  /tmp/ccn6Sm5M.s 			page 55


 1146              		.size	cli, .-cli
 1147              		.section	.rodata
 1148              		.align	2
 1149              	.LC20:
 1150 0170 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
 1150      52756E6E 
 1150      696E6720 
 1150      61742025 
 1150      69204D48 
 1151 0187 00       		.align	2
 1152              	.LC21:
 1153 0188 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
 1153      77616974 
 1153      696E6720 
 1153      756E7469 
 1153      6C205553 
 1154 01b3 00       		.align	2
 1155              	.LC22:
 1156 01b4 2D442D20 		.ascii	"-D- releasetime elapsed\012\000"
 1156      72656C65 
 1156      61736574 
 1156      696D6520 
 1156      656C6170 
 1157 01cd 000000   		.section	.text.main,"ax",%progbits
 1158              		.align	2
 1159              		.global	main
 1160              		.thumb
 1161              		.thumb_func
 1162              		.type	main, %function
 1163              	main:
 1164              	.LFB38:
 226:main.c        **** 
 227:main.c        **** int main() 
 228:main.c        **** {
 1165              		.loc 2 228 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 8
 1168              		@ frame_needed = 1, uses_anonymous_args = 0
 1169 0000 80B5     		push	{r7, lr}
 1170              	.LCFI15:
 1171              		.cfi_def_cfa_offset 8
 1172              		.cfi_offset 14, -4
 1173              		.cfi_offset 7, -8
 1174 0002 82B0     		sub	sp, sp, #8
 1175              	.LCFI16:
 1176              		.cfi_def_cfa_offset 16
 1177 0004 00AF     		add	r7, sp, #0
 1178              	.LCFI17:
 1179              		.cfi_def_cfa_register 7
 229:main.c        **** 	uint32_t timestamp = 0;
 1180              		.loc 2 229 0
 1181 0006 4FF00003 		mov	r3, #0
 1182 000a 7B60     		str	r3, [r7, #4]
 230:main.c        **** 
 231:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 1183              		.loc 2 231 0
 1184 000c 40F20003 		movw	r3, #:lower16:_impure_ptr
ARM GAS  /tmp/ccn6Sm5M.s 			page 56


 1185 0010 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1186 0014 1B68     		ldr	r3, [r3, #0]
 1187 0016 DB68     		ldr	r3, [r3, #12]
 1188 0018 1846     		mov	r0, r3
 1189 001a 40F20001 		movw	r1, #:lower16:.LC20
 1190 001e C0F20001 		movt	r1, #:upper16:.LC20
 1191 0022 4FF03002 		mov	r2, #48
 1192 0026 FFF7FEFF 		bl	fiprintf
 232:main.c        **** 
 233:main.c        **** 	/* WDT off */
 234:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 1193              		.loc 2 234 0
 1194 002a 41F25043 		movw	r3, #5200
 1195 002e C4F20E03 		movt	r3, 16398
 1196 0032 4FF40042 		mov	r2, #32768
 1197 0036 5A60     		str	r2, [r3, #4]
 235:main.c        **** 
 236:main.c        **** 	/* configure hardware */
 237:main.c        **** 	init();
 1198              		.loc 2 237 0
 1199 0038 FFF7FEFF 		bl	init
 238:main.c        **** 
 239:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 1200              		.loc 2 239 0
 1201 003c 40F20003 		movw	r3, #:lower16:_impure_ptr
 1202 0040 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1203 0044 1B68     		ldr	r3, [r3, #0]
 1204 0046 DB68     		ldr	r3, [r3, #12]
 1205 0048 1846     		mov	r0, r3
 1206 004a 40F20001 		movw	r1, #:lower16:.LC21
 1207 004e C0F20001 		movt	r1, #:upper16:.LC21
 1208 0052 FFF7FEFF 		bl	fiprintf
 240:main.c        **** 	while (!USBC_isConfigured());
 1209              		.loc 2 240 0
 1210 0056 00BF     		nop
 1211              	.L56:
 1212              		.loc 2 240 0 is_stmt 0 discriminator 1
 1213 0058 FFF7FEFF 		bl	USBC_isConfigured
 1214 005c 0346     		mov	r3, r0
 1215 005e 002B     		cmp	r3, #0
 1216 0060 FAD0     		beq	.L56
 241:main.c        **** 
 242:main.c        **** 	loop.Kp = SCALE(3);
 1217              		.loc 2 242 0 is_stmt 1
 1218 0062 40F20003 		movw	r3, #:lower16:loop
 1219 0066 C0F20003 		movt	r3, #:upper16:loop
 1220 006a 4FF4C072 		mov	r2, #384
 1221 006e 9A81     		strh	r2, [r3, #12]	@ movhi
 243:main.c        **** 	loop.Ki = SCALE(2);
 1222              		.loc 2 243 0
 1223 0070 40F20003 		movw	r3, #:lower16:loop
 1224 0074 C0F20003 		movt	r3, #:upper16:loop
 1225 0078 4FF48072 		mov	r2, #256
 1226 007c DA81     		strh	r2, [r3, #14]	@ movhi
 244:main.c        **** 	loop.Kd = SCALE(0);
 1227              		.loc 2 244 0
 1228 007e 40F20003 		movw	r3, #:lower16:loop
ARM GAS  /tmp/ccn6Sm5M.s 			page 57


 1229 0082 C0F20003 		movt	r3, #:upper16:loop
 1230 0086 4FF00002 		mov	r2, #0
 1231 008a 1A82     		strh	r2, [r3, #16]	@ movhi
 245:main.c        **** 	loop.rSlope = 16;
 1232              		.loc 2 245 0
 1233 008c 40F20003 		movw	r3, #:lower16:loop
 1234 0090 C0F20003 		movt	r3, #:upper16:loop
 1235 0094 4FF01002 		mov	r2, #16
 1236 0098 9A60     		str	r2, [r3, #8]
 246:main.c        **** 	loop.rSP = MAXv;
 1237              		.loc 2 246 0
 1238 009a 40F20003 		movw	r3, #:lower16:loop
 1239 009e C0F20003 		movt	r3, #:upper16:loop
 1240 00a2 40F6FF72 		movw	r2, #4095
 1241 00a6 9A80     		strh	r2, [r3, #4]	@ movhi
 247:main.c        **** 	loop.tristate = &rtrip;
 1242              		.loc 2 247 0
 1243 00a8 40F20003 		movw	r3, #:lower16:loop
 1244 00ac C0F20003 		movt	r3, #:upper16:loop
 1245 00b0 40F20002 		movw	r2, #:lower16:rtrip
 1246 00b4 C0F20002 		movt	r2, #:upper16:rtrip
 1247 00b8 9A62     		str	r2, [r3, #40]
 248:main.c        **** 
 249:main.c        **** 	LED_blink(statusled, 5);
 1248              		.loc 2 249 0
 1249 00ba 4FF00000 		mov	r0, #0
 1250 00be 4FF00501 		mov	r1, #5
 1251 00c2 FFF7FEFF 		bl	LED_blink
 250:main.c        **** 
 251:main.c        **** 	setbuf(stdout, NULL);
 1252              		.loc 2 251 0
 1253 00c6 40F20003 		movw	r3, #:lower16:_impure_ptr
 1254 00ca C0F20003 		movt	r3, #:upper16:_impure_ptr
 1255 00ce 1B68     		ldr	r3, [r3, #0]
 1256 00d0 9B68     		ldr	r3, [r3, #8]
 1257 00d2 1846     		mov	r0, r3
 1258 00d4 4FF00001 		mov	r1, #0
 1259 00d8 FFF7FEFF 		bl	setbuf
 1260              	.L69:
 252:main.c        **** 
 253:main.c        **** 	while (1) {
 254:main.c        **** 		cli();
 1261              		.loc 2 254 0
 1262 00dc FFF7FEFF 		bl	cli
 255:main.c        **** 		switch (_state) {
 1263              		.loc 2 255 0
 1264 00e0 40F20003 		movw	r3, #:lower16:_state
 1265 00e4 C0F20003 		movt	r3, #:upper16:_state
 1266 00e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1267 00ea 03F1FF33 		add	r3, r3, #-1
 1268 00ee 072B     		cmp	r3, #7
 1269 00f0 00F28780 		bhi	.L57
 1270 00f4 01A1     		adr	r1, .L62
 1271 00f6 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 1272 00fa 00BF     		.align	2
 1273              	.L62:
 1274 00fc 0D020000 		.word	.L70+1
ARM GAS  /tmp/ccn6Sm5M.s 			page 58


 1275 0100 D1010000 		.word	.L59+1
 1276 0104 03020000 		.word	.L57+1
 1277 0108 1D010000 		.word	.L60+1
 1278 010c 03020000 		.word	.L57+1
 1279 0110 03020000 		.word	.L57+1
 1280 0114 03020000 		.word	.L57+1
 1281 0118 4F010000 		.word	.L61+1
 1282              	.L60:
 256:main.c        **** 			case STOPPED:
 257:main.c        **** 				break;
 258:main.c        **** 
 259:main.c        **** 			case HOLD:
 260:main.c        **** 				if (GetTickCount() % 1000)
 1283              		.loc 2 260 0
 1284 011c FFF7FEFF 		bl	GetTickCount
 1285 0120 0246     		mov	r2, r0
 1286 0122 44F6D353 		movw	r3, #19923
 1287 0126 C1F26203 		movt	r3, 4194
 1288 012a A3FB0213 		umull	r1, r3, r3, r2
 1289 012e 4FEA9313 		lsr	r3, r3, #6
 1290 0132 4FF47A71 		mov	r1, #1000
 1291 0136 01FB03F3 		mul	r3, r1, r3
 1292 013a D31A     		subs	r3, r2, r3
 1293 013c 002B     		cmp	r3, #0
 1294 013e 67D0     		beq	.L71
 261:main.c        **** 					LED_blink(statusled, 1);
 1295              		.loc 2 261 0
 1296 0140 4FF00000 		mov	r0, #0
 1297 0144 4FF00101 		mov	r1, #1
 1298 0148 FFF7FEFF 		bl	LED_blink
 262:main.c        **** 				break;
 1299              		.loc 2 262 0
 1300 014c 60E0     		b	.L71
 1301              	.L61:
 263:main.c        **** 
 264:main.c        **** 			case RELEASE:
 265:main.c        **** 				if (GetTickCount() % 1000)
 1302              		.loc 2 265 0
 1303 014e FFF7FEFF 		bl	GetTickCount
 1304 0152 0246     		mov	r2, r0
 1305 0154 44F6D353 		movw	r3, #19923
 1306 0158 C1F26203 		movt	r3, 4194
 1307 015c A3FB0213 		umull	r1, r3, r3, r2
 1308 0160 4FEA9313 		lsr	r3, r3, #6
 1309 0164 4FF47A71 		mov	r1, #1000
 1310 0168 01FB03F3 		mul	r3, r1, r3
 1311 016c D31A     		subs	r3, r2, r3
 1312 016e 002B     		cmp	r3, #0
 1313 0170 05D0     		beq	.L65
 266:main.c        **** 					LED_blink(statusled, 2);
 1314              		.loc 2 266 0
 1315 0172 4FF00000 		mov	r0, #0
 1316 0176 4FF00201 		mov	r1, #2
 1317 017a FFF7FEFF 		bl	LED_blink
 1318              	.L65:
 267:main.c        **** 
 268:main.c        **** 				if (timestamp == 0)
ARM GAS  /tmp/ccn6Sm5M.s 			page 59


 1319              		.loc 2 268 0
 1320 017e 7B68     		ldr	r3, [r7, #4]
 1321 0180 002B     		cmp	r3, #0
 1322 0182 0AD1     		bne	.L66
 269:main.c        **** 					timestamp = GetTickCount() + releasetime;
 1323              		.loc 2 269 0
 1324 0184 FFF7FEFF 		bl	GetTickCount
 1325 0188 0246     		mov	r2, r0
 1326 018a 40F20003 		movw	r3, #:lower16:releasetime
 1327 018e C0F20003 		movt	r3, #:upper16:releasetime
 1328 0192 1B68     		ldr	r3, [r3, #0]
 1329 0194 D318     		adds	r3, r2, r3
 1330 0196 7B60     		str	r3, [r7, #4]
 270:main.c        **** 				else if (GetTickCount() >= timestamp) {
 271:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
 272:main.c        **** 					timestamp = 0;
 273:main.c        **** 					state(STOPPED);
 274:main.c        **** 				}
 275:main.c        **** 				break;
 1331              		.loc 2 275 0
 1332 0198 3CE0     		b	.L72
 1333              	.L66:
 270:main.c        **** 				else if (GetTickCount() >= timestamp) {
 1334              		.loc 2 270 0
 1335 019a FFF7FEFF 		bl	GetTickCount
 1336 019e 0246     		mov	r2, r0
 1337 01a0 7B68     		ldr	r3, [r7, #4]
 1338 01a2 9A42     		cmp	r2, r3
 1339 01a4 36D3     		bcc	.L72
 271:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
 1340              		.loc 2 271 0
 1341 01a6 40F20003 		movw	r3, #:lower16:_impure_ptr
 1342 01aa C0F20003 		movt	r3, #:upper16:_impure_ptr
 1343 01ae 1B68     		ldr	r3, [r3, #0]
 1344 01b0 DB68     		ldr	r3, [r3, #12]
 1345 01b2 1846     		mov	r0, r3
 1346 01b4 40F20001 		movw	r1, #:lower16:.LC22
 1347 01b8 C0F20001 		movt	r1, #:upper16:.LC22
 1348 01bc FFF7FEFF 		bl	fiprintf
 272:main.c        **** 					timestamp = 0;
 1349              		.loc 2 272 0
 1350 01c0 4FF00003 		mov	r3, #0
 1351 01c4 7B60     		str	r3, [r7, #4]
 273:main.c        **** 					state(STOPPED);
 1352              		.loc 2 273 0
 1353 01c6 4FF00100 		mov	r0, #1
 1354 01ca FFF7FEFF 		bl	state
 1355              		.loc 2 275 0
 1356 01ce 21E0     		b	.L72
 1357              	.L59:
 276:main.c        **** 
 277:main.c        **** 			case RUN:
 278:main.c        **** 				if (GetTickCount() % 1000)
 1358              		.loc 2 278 0
 1359 01d0 FFF7FEFF 		bl	GetTickCount
 1360 01d4 0246     		mov	r2, r0
 1361 01d6 44F6D353 		movw	r3, #19923
ARM GAS  /tmp/ccn6Sm5M.s 			page 60


 1362 01da C1F26203 		movt	r3, 4194
 1363 01de A3FB0213 		umull	r1, r3, r3, r2
 1364 01e2 4FEA9313 		lsr	r3, r3, #6
 1365 01e6 4FF47A71 		mov	r1, #1000
 1366 01ea 01FB03F3 		mul	r3, r1, r3
 1367 01ee D31A     		subs	r3, r2, r3
 1368 01f0 002B     		cmp	r3, #0
 1369 01f2 11D0     		beq	.L73
 279:main.c        **** 					LED_blink(statusled, 3);
 1370              		.loc 2 279 0
 1371 01f4 4FF00000 		mov	r0, #0
 1372 01f8 4FF00301 		mov	r1, #3
 1373 01fc FFF7FEFF 		bl	LED_blink
 280:main.c        **** 				break;
 1374              		.loc 2 280 0
 1375 0200 0AE0     		b	.L73
 1376              	.L57:
 281:main.c        **** 
 282:main.c        **** 			default:
 283:main.c        **** 				state(STOPPED);
 1377              		.loc 2 283 0
 1378 0202 4FF00100 		mov	r0, #1
 1379 0206 FFF7FEFF 		bl	state
 284:main.c        **** 		}
 285:main.c        **** 	}
 1380              		.loc 2 285 0
 1381 020a 67E7     		b	.L69
 1382              	.L70:
 257:main.c        **** 				break;
 1383              		.loc 2 257 0
 1384 020c 00BF     		nop
 1385 020e 04E0     		b	.L63
 1386              	.L71:
 262:main.c        **** 				break;
 1387              		.loc 2 262 0
 1388 0210 00BF     		nop
 1389 0212 02E0     		b	.L63
 1390              	.L72:
 275:main.c        **** 				break;
 1391              		.loc 2 275 0
 1392 0214 00BF     		nop
 1393 0216 00E0     		b	.L63
 1394              	.L73:
 280:main.c        **** 				break;
 1395              		.loc 2 280 0
 1396 0218 00BF     		nop
 1397              	.L63:
 1398              		.loc 2 285 0
 1399 021a 5FE7     		b	.L69
 1400              		.cfi_endproc
 1401              	.LFE38:
 1402              		.size	main, .-main
 1403              		.section	.text.TC1_IrqHandler,"ax",%progbits
 1404              		.align	2
 1405              		.global	TC1_IrqHandler
 1406              		.thumb
 1407              		.thumb_func
ARM GAS  /tmp/ccn6Sm5M.s 			page 61


 1408              		.type	TC1_IrqHandler, %function
 1409              	TC1_IrqHandler:
 1410              	.LFB39:
 286:main.c        **** 	return 0;
 287:main.c        **** }
 288:main.c        **** 
 289:main.c        **** void TC1_IrqHandler()
 290:main.c        **** {
 1411              		.loc 2 290 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 0
 1414              		@ frame_needed = 1, uses_anonymous_args = 0
 1415 0000 80B5     		push	{r7, lr}
 1416              	.LCFI18:
 1417              		.cfi_def_cfa_offset 8
 1418              		.cfi_offset 14, -4
 1419              		.cfi_offset 7, -8
 1420 0002 00AF     		add	r7, sp, #0
 1421              	.LCFI19:
 1422              		.cfi_def_cfa_register 7
 291:main.c        **** 	ADC_StartConversion(ADC);
 1423              		.loc 2 291 0
 1424 0004 4FF40043 		mov	r3, #32768
 1425 0008 C4F20303 		movt	r3, 16387
 1426 000c 4FF00202 		mov	r2, #2
 1427 0010 1A60     		str	r2, [r3, #0]
 292:main.c        **** 	ADC_ReadBuffer(ADC, (int16_t*) input, BUFFER_SIZE);
 1428              		.loc 2 292 0
 1429 0012 4FF40040 		mov	r0, #32768
 1430 0016 C4F20300 		movt	r0, 16387
 1431 001a 40F20001 		movw	r1, #:lower16:input
 1432 001e C0F20001 		movt	r1, #:upper16:input
 1433 0022 4FF00202 		mov	r2, #2
 1434 0026 FFF7FEFF 		bl	ADC_ReadBuffer
 293:main.c        **** }
 1435              		.loc 2 293 0
 1436 002a 80BD     		pop	{r7, pc}
 1437              		.cfi_endproc
 1438              	.LFE39:
 1439              		.size	TC1_IrqHandler, .-TC1_IrqHandler
 1440              		.section	.text.ADC_IrqHandler,"ax",%progbits
 1441              		.align	2
 1442              		.global	ADC_IrqHandler
 1443              		.thumb
 1444              		.thumb_func
 1445              		.type	ADC_IrqHandler, %function
 1446              	ADC_IrqHandler:
 1447              	.LFB40:
 294:main.c        **** 
 295:main.c        **** void ADC_IrqHandler(void)
 296:main.c        **** {
 1448              		.loc 2 296 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 8
 1451              		@ frame_needed = 1, uses_anonymous_args = 0
 1452 0000 80B5     		push	{r7, lr}
 1453              	.LCFI20:
ARM GAS  /tmp/ccn6Sm5M.s 			page 62


 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 14, -4
 1456              		.cfi_offset 7, -8
 1457 0002 82B0     		sub	sp, sp, #8
 1458              	.LCFI21:
 1459              		.cfi_def_cfa_offset 16
 1460 0004 00AF     		add	r7, sp, #0
 1461              	.LCFI22:
 1462              		.cfi_def_cfa_register 7
 297:main.c        ****     uint32_t status;
 298:main.c        **** 	uint32_t duty = 0;
 1463              		.loc 2 298 0
 1464 0006 4FF00003 		mov	r3, #0
 1465 000a 7B60     		str	r3, [r7, #4]
 299:main.c        **** 
 300:main.c        ****     status = ADC_GetStatus(ADC);
 1466              		.loc 2 300 0
 1467 000c 4FF40043 		mov	r3, #32768
 1468 0010 C4F20303 		movt	r3, 16387
 1469 0014 1B6B     		ldr	r3, [r3, #48]
 1470 0016 3B60     		str	r3, [r7, #0]
 301:main.c        **** 
 302:main.c        **** 	if ((status & ADC_ISR_RXBUFF) == ADC_ISR_RXBUFF) {
 1471              		.loc 2 302 0
 1472 0018 3B68     		ldr	r3, [r7, #0]
 1473 001a 03F08053 		and	r3, r3, #268435456
 1474 001e 002B     		cmp	r3, #0
 1475 0020 00F08B80 		beq	.L75
 303:main.c        **** 		if (_state & (RUN|HOLD)) {
 1476              		.loc 2 303 0
 1477 0024 40F20003 		movw	r3, #:lower16:_state
 1478 0028 C0F20003 		movt	r3, #:upper16:_state
 1479 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1480 002e 03F00603 		and	r3, r3, #6
 1481 0032 002B     		cmp	r3, #0
 1482 0034 00F08180 		beq	.L75
 304:main.c        **** 			control(LIMIT(input[0], MINv, MAXv), &loop);
 1483              		.loc 2 304 0
 1484 0038 40F20003 		movw	r3, #:lower16:input
 1485 003c C0F20003 		movt	r3, #:upper16:input
 1486 0040 1A88     		ldrh	r2, [r3, #0]
 1487 0042 40F6FF73 		movw	r3, #4095
 1488 0046 9A42     		cmp	r2, r3
 1489 0048 38BF     		it	cc
 1490 004a 1346     		movcc	r3, r2
 1491 004c 9BB2     		uxth	r3, r3
 1492 004e 1846     		mov	r0, r3
 1493 0050 40F20001 		movw	r1, #:lower16:loop
 1494 0054 C0F20001 		movt	r1, #:upper16:loop
 1495 0058 FFF7FEFF 		bl	control
 305:main.c        **** 			duty = loop.tristate->output * ((loop.output * PWM_PERIOD) / MAX);
 1496              		.loc 2 305 0
 1497 005c 40F20003 		movw	r3, #:lower16:loop
 1498 0060 C0F20003 		movt	r3, #:upper16:loop
 1499 0064 9B6A     		ldr	r3, [r3, #40]
 1500 0066 5968     		ldr	r1, [r3, #4]
 1501 0068 40F20003 		movw	r3, #:lower16:loop
ARM GAS  /tmp/ccn6Sm5M.s 			page 63


 1502 006c C0F20003 		movt	r3, #:upper16:loop
 1503 0070 DB8C     		ldrh	r3, [r3, #38]
 1504 0072 1BB2     		sxth	r3, r3
 1505 0074 4FF06402 		mov	r2, #100
 1506 0078 02FB03F3 		mul	r3, r2, r3
 1507 007c 03F57E62 		add	r2, r3, #4064
 1508 0080 02F11F02 		add	r2, r2, #31
 1509 0084 002B     		cmp	r3, #0
 1510 0086 B8BF     		it	lt
 1511 0088 1346     		movlt	r3, r2
 1512 008a 4FEA2333 		asr	r3, r3, #12
 1513 008e 03F1FF33 		add	r3, r3, #-1
 1514 0092 03FB01F3 		mul	r3, r3, r1
 1515 0096 7B60     		str	r3, [r7, #4]
 306:main.c        **** 			if (loop.tristate->output == 1) {
 1516              		.loc 2 306 0
 1517 0098 40F20003 		movw	r3, #:lower16:loop
 1518 009c C0F20003 		movt	r3, #:upper16:loop
 1519 00a0 9B6A     		ldr	r3, [r3, #40]
 1520 00a2 5B68     		ldr	r3, [r3, #4]
 1521 00a4 012B     		cmp	r3, #1
 1522 00a6 15D1     		bne	.L77
 307:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM0, duty);
 1523              		.loc 2 307 0
 1524 00a8 7B68     		ldr	r3, [r7, #4]
 1525 00aa 9BB2     		uxth	r3, r3
 1526 00ac 4FF00000 		mov	r0, #0
 1527 00b0 C4F20200 		movt	r0, 16386
 1528 00b4 4FF00001 		mov	r1, #0
 1529 00b8 1A46     		mov	r2, r3
 1530 00ba FFF7FEFF 		bl	PWMC_SetDutyCycle
 308:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM1, 0);
 1531              		.loc 2 308 0
 1532 00be 4FF00000 		mov	r0, #0
 1533 00c2 C4F20200 		movt	r0, 16386
 1534 00c6 4FF00101 		mov	r1, #1
 1535 00ca 4FF00002 		mov	r2, #0
 1536 00ce FFF7FEFF 		bl	PWMC_SetDutyCycle
 1537 00d2 32E0     		b	.L75
 1538              	.L77:
 309:main.c        **** 			}
 310:main.c        **** 			else if (loop.tristate->output == -1) {
 1539              		.loc 2 310 0
 1540 00d4 40F20003 		movw	r3, #:lower16:loop
 1541 00d8 C0F20003 		movt	r3, #:upper16:loop
 1542 00dc 9B6A     		ldr	r3, [r3, #40]
 1543 00de 5B68     		ldr	r3, [r3, #4]
 1544 00e0 B3F1FF3F 		cmp	r3, #-1
 1545 00e4 15D1     		bne	.L78
 311:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM0, 0);
 1546              		.loc 2 311 0
 1547 00e6 4FF00000 		mov	r0, #0
 1548 00ea C4F20200 		movt	r0, 16386
 1549 00ee 4FF00001 		mov	r1, #0
 1550 00f2 4FF00002 		mov	r2, #0
 1551 00f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
 312:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM1, duty);
ARM GAS  /tmp/ccn6Sm5M.s 			page 64


 1552              		.loc 2 312 0
 1553 00fa 7B68     		ldr	r3, [r7, #4]
 1554 00fc 9BB2     		uxth	r3, r3
 1555 00fe 4FF00000 		mov	r0, #0
 1556 0102 C4F20200 		movt	r0, 16386
 1557 0106 4FF00101 		mov	r1, #1
 1558 010a 1A46     		mov	r2, r3
 1559 010c FFF7FEFF 		bl	PWMC_SetDutyCycle
 1560 0110 13E0     		b	.L75
 1561              	.L78:
 313:main.c        **** 			}
 314:main.c        **** 			else {
 315:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM0, 0);
 1562              		.loc 2 315 0
 1563 0112 4FF00000 		mov	r0, #0
 1564 0116 C4F20200 		movt	r0, 16386
 1565 011a 4FF00001 		mov	r1, #0
 1566 011e 4FF00002 		mov	r2, #0
 1567 0122 FFF7FEFF 		bl	PWMC_SetDutyCycle
 316:main.c        **** 				PWMC_SetDutyCycle(PWM, PWM1, 0);
 1568              		.loc 2 316 0
 1569 0126 4FF00000 		mov	r0, #0
 1570 012a C4F20200 		movt	r0, 16386
 1571 012e 4FF00101 		mov	r1, #1
 1572 0132 4FF00002 		mov	r2, #0
 1573 0136 FFF7FEFF 		bl	PWMC_SetDutyCycle
 1574              	.L75:
 317:main.c        **** 			}
 318:main.c        **** 		}
 319:main.c        **** 	}
 320:main.c        **** }
 1575              		.loc 2 320 0
 1576 013a 07F10807 		add	r7, r7, #8
 1577 013e BD46     		mov	sp, r7
 1578 0140 80BD     		pop	{r7, pc}
 1579              		.cfi_endproc
 1580              	.LFE40:
 1581              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 1582 0142 00BF     		.text
 1583              	.Letext0:
 1584              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1585              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1586              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 1587              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1588              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1589              		.file 8 "libchip/include/SAM3S.h"
 1590              		.file 9 "controller.h"
 1591              		.section	.debug_info,"",%progbits
 1592              	.Ldebug_info0:
 1593 0000 0C1A0000 		.4byte	0x1a0c
 1594 0004 0200     		.2byte	0x2
 1595 0006 00000000 		.4byte	.Ldebug_abbrev0
 1596 000a 04       		.byte	0x4
 1597 000b 01       		.uleb128 0x1
 1598 000c FF0A0000 		.4byte	.LASF339
 1599 0010 01       		.byte	0x1
 1600 0011 66060000 		.4byte	.LASF340
ARM GAS  /tmp/ccn6Sm5M.s 			page 65


 1601 0015 DD090000 		.4byte	.LASF341
 1602 0019 00000000 		.4byte	0
 1603 001d 00000000 		.4byte	0
 1604 0021 00000000 		.4byte	.Ldebug_ranges0+0
 1605 0025 00000000 		.4byte	.Ldebug_line0
 1606 0029 02       		.uleb128 0x2
 1607 002a 01       		.byte	0x1
 1608 002b 06       		.byte	0x6
 1609 002c 52020000 		.4byte	.LASF0
 1610 0030 02       		.uleb128 0x2
 1611 0031 01       		.byte	0x1
 1612 0032 08       		.byte	0x8
 1613 0033 94020000 		.4byte	.LASF1
 1614 0037 02       		.uleb128 0x2
 1615 0038 02       		.byte	0x2
 1616 0039 05       		.byte	0x5
 1617 003a 420A0000 		.4byte	.LASF2
 1618 003e 02       		.uleb128 0x2
 1619 003f 02       		.byte	0x2
 1620 0040 07       		.byte	0x7
 1621 0041 840B0000 		.4byte	.LASF3
 1622 0045 03       		.uleb128 0x3
 1623 0046 04       		.byte	0x4
 1624 0047 05       		.byte	0x5
 1625 0048 696E7400 		.ascii	"int\000"
 1626 004c 02       		.uleb128 0x2
 1627 004d 04       		.byte	0x4
 1628 004e 07       		.byte	0x7
 1629 004f F9060000 		.4byte	.LASF4
 1630 0053 02       		.uleb128 0x2
 1631 0054 08       		.byte	0x8
 1632 0055 05       		.byte	0x5
 1633 0056 F3050000 		.4byte	.LASF5
 1634 005a 02       		.uleb128 0x2
 1635 005b 08       		.byte	0x8
 1636 005c 07       		.byte	0x7
 1637 005d 19080000 		.4byte	.LASF6
 1638 0061 04       		.uleb128 0x4
 1639 0062 49050000 		.4byte	.LASF8
 1640 0066 03       		.byte	0x3
 1641 0067 07       		.byte	0x7
 1642 0068 45000000 		.4byte	0x45
 1643 006c 02       		.uleb128 0x2
 1644 006d 04       		.byte	0x4
 1645 006e 05       		.byte	0x5
 1646 006f AA010000 		.4byte	.LASF7
 1647 0073 04       		.uleb128 0x4
 1648 0074 D3070000 		.4byte	.LASF9
 1649 0078 04       		.byte	0x4
 1650 0079 2C       		.byte	0x2c
 1651 007a 6C000000 		.4byte	0x6c
 1652 007e 05       		.uleb128 0x5
 1653 007f 19090000 		.4byte	.LASF10
 1654 0083 05       		.byte	0x5
 1655 0084 6101     		.2byte	0x161
 1656 0086 4C000000 		.4byte	0x4c
 1657 008a 06       		.uleb128 0x6
ARM GAS  /tmp/ccn6Sm5M.s 			page 66


 1658 008b 04       		.byte	0x4
 1659 008c 04       		.byte	0x4
 1660 008d 46       		.byte	0x46
 1661 008e A9000000 		.4byte	0xa9
 1662 0092 07       		.uleb128 0x7
 1663 0093 3C010000 		.4byte	.LASF11
 1664 0097 04       		.byte	0x4
 1665 0098 48       		.byte	0x48
 1666 0099 7E000000 		.4byte	0x7e
 1667 009d 07       		.uleb128 0x7
 1668 009e DB070000 		.4byte	.LASF12
 1669 00a2 04       		.byte	0x4
 1670 00a3 49       		.byte	0x49
 1671 00a4 A9000000 		.4byte	0xa9
 1672 00a8 00       		.byte	0
 1673 00a9 08       		.uleb128 0x8
 1674 00aa 30000000 		.4byte	0x30
 1675 00ae B9000000 		.4byte	0xb9
 1676 00b2 09       		.uleb128 0x9
 1677 00b3 4C000000 		.4byte	0x4c
 1678 00b7 03       		.byte	0x3
 1679 00b8 00       		.byte	0
 1680 00b9 0A       		.uleb128 0xa
 1681 00ba 08       		.byte	0x8
 1682 00bb 04       		.byte	0x4
 1683 00bc 43       		.byte	0x43
 1684 00bd DE000000 		.4byte	0xde
 1685 00c1 0B       		.uleb128 0xb
 1686 00c2 93070000 		.4byte	.LASF13
 1687 00c6 04       		.byte	0x4
 1688 00c7 45       		.byte	0x45
 1689 00c8 45000000 		.4byte	0x45
 1690 00cc 02       		.byte	0x2
 1691 00cd 23       		.byte	0x23
 1692 00ce 00       		.uleb128 0
 1693 00cf 0B       		.uleb128 0xb
 1694 00d0 2A000000 		.4byte	.LASF14
 1695 00d4 04       		.byte	0x4
 1696 00d5 4A       		.byte	0x4a
 1697 00d6 8A000000 		.4byte	0x8a
 1698 00da 02       		.byte	0x2
 1699 00db 23       		.byte	0x23
 1700 00dc 04       		.uleb128 0x4
 1701 00dd 00       		.byte	0
 1702 00de 04       		.uleb128 0x4
 1703 00df F6080000 		.4byte	.LASF15
 1704 00e3 04       		.byte	0x4
 1705 00e4 4B       		.byte	0x4b
 1706 00e5 B9000000 		.4byte	0xb9
 1707 00e9 04       		.uleb128 0x4
 1708 00ea DF080000 		.4byte	.LASF16
 1709 00ee 04       		.byte	0x4
 1710 00ef 4F       		.byte	0x4f
 1711 00f0 61000000 		.4byte	0x61
 1712 00f4 0C       		.uleb128 0xc
 1713 00f5 04       		.byte	0x4
 1714 00f6 04       		.uleb128 0x4
ARM GAS  /tmp/ccn6Sm5M.s 			page 67


 1715 00f7 1F0B0000 		.4byte	.LASF17
 1716 00fb 06       		.byte	0x6
 1717 00fc 15       		.byte	0x15
 1718 00fd 01010000 		.4byte	0x101
 1719 0101 02       		.uleb128 0x2
 1720 0102 04       		.byte	0x4
 1721 0103 07       		.byte	0x7
 1722 0104 D2040000 		.4byte	.LASF18
 1723 0108 0D       		.uleb128 0xd
 1724 0109 A2050000 		.4byte	.LASF23
 1725 010d 18       		.byte	0x18
 1726 010e 06       		.byte	0x6
 1727 010f 2C       		.byte	0x2c
 1728 0110 67010000 		.4byte	0x167
 1729 0114 0B       		.uleb128 0xb
 1730 0115 39090000 		.4byte	.LASF19
 1731 0119 06       		.byte	0x6
 1732 011a 2E       		.byte	0x2e
 1733 011b 67010000 		.4byte	0x167
 1734 011f 02       		.byte	0x2
 1735 0120 23       		.byte	0x23
 1736 0121 00       		.uleb128 0
 1737 0122 0E       		.uleb128 0xe
 1738 0123 5F6B00   		.ascii	"_k\000"
 1739 0126 06       		.byte	0x6
 1740 0127 2F       		.byte	0x2f
 1741 0128 45000000 		.4byte	0x45
 1742 012c 02       		.byte	0x2
 1743 012d 23       		.byte	0x23
 1744 012e 04       		.uleb128 0x4
 1745 012f 0B       		.uleb128 0xb
 1746 0130 B3050000 		.4byte	.LASF20
 1747 0134 06       		.byte	0x6
 1748 0135 2F       		.byte	0x2f
 1749 0136 45000000 		.4byte	0x45
 1750 013a 02       		.byte	0x2
 1751 013b 23       		.byte	0x23
 1752 013c 08       		.uleb128 0x8
 1753 013d 0B       		.uleb128 0xb
 1754 013e D8060000 		.4byte	.LASF21
 1755 0142 06       		.byte	0x6
 1756 0143 2F       		.byte	0x2f
 1757 0144 45000000 		.4byte	0x45
 1758 0148 02       		.byte	0x2
 1759 0149 23       		.byte	0x23
 1760 014a 0C       		.uleb128 0xc
 1761 014b 0B       		.uleb128 0xb
 1762 014c 17040000 		.4byte	.LASF22
 1763 0150 06       		.byte	0x6
 1764 0151 2F       		.byte	0x2f
 1765 0152 45000000 		.4byte	0x45
 1766 0156 02       		.byte	0x2
 1767 0157 23       		.byte	0x23
 1768 0158 10       		.uleb128 0x10
 1769 0159 0E       		.uleb128 0xe
 1770 015a 5F7800   		.ascii	"_x\000"
 1771 015d 06       		.byte	0x6
ARM GAS  /tmp/ccn6Sm5M.s 			page 68


 1772 015e 30       		.byte	0x30
 1773 015f 6D010000 		.4byte	0x16d
 1774 0163 02       		.byte	0x2
 1775 0164 23       		.byte	0x23
 1776 0165 14       		.uleb128 0x14
 1777 0166 00       		.byte	0
 1778 0167 0F       		.uleb128 0xf
 1779 0168 04       		.byte	0x4
 1780 0169 08010000 		.4byte	0x108
 1781 016d 08       		.uleb128 0x8
 1782 016e F6000000 		.4byte	0xf6
 1783 0172 7D010000 		.4byte	0x17d
 1784 0176 09       		.uleb128 0x9
 1785 0177 4C000000 		.4byte	0x4c
 1786 017b 00       		.byte	0
 1787 017c 00       		.byte	0
 1788 017d 0D       		.uleb128 0xd
 1789 017e 91000000 		.4byte	.LASF24
 1790 0182 24       		.byte	0x24
 1791 0183 06       		.byte	0x6
 1792 0184 34       		.byte	0x34
 1793 0185 08020000 		.4byte	0x208
 1794 0189 0B       		.uleb128 0xb
 1795 018a AD000000 		.4byte	.LASF25
 1796 018e 06       		.byte	0x6
 1797 018f 36       		.byte	0x36
 1798 0190 45000000 		.4byte	0x45
 1799 0194 02       		.byte	0x2
 1800 0195 23       		.byte	0x23
 1801 0196 00       		.uleb128 0
 1802 0197 0B       		.uleb128 0xb
 1803 0198 0A0C0000 		.4byte	.LASF26
 1804 019c 06       		.byte	0x6
 1805 019d 37       		.byte	0x37
 1806 019e 45000000 		.4byte	0x45
 1807 01a2 02       		.byte	0x2
 1808 01a3 23       		.byte	0x23
 1809 01a4 04       		.uleb128 0x4
 1810 01a5 0B       		.uleb128 0xb
 1811 01a6 A00B0000 		.4byte	.LASF27
 1812 01aa 06       		.byte	0x6
 1813 01ab 38       		.byte	0x38
 1814 01ac 45000000 		.4byte	0x45
 1815 01b0 02       		.byte	0x2
 1816 01b1 23       		.byte	0x23
 1817 01b2 08       		.uleb128 0x8
 1818 01b3 0B       		.uleb128 0xb
 1819 01b4 2F070000 		.4byte	.LASF28
 1820 01b8 06       		.byte	0x6
 1821 01b9 39       		.byte	0x39
 1822 01ba 45000000 		.4byte	0x45
 1823 01be 02       		.byte	0x2
 1824 01bf 23       		.byte	0x23
 1825 01c0 0C       		.uleb128 0xc
 1826 01c1 0B       		.uleb128 0xb
 1827 01c2 08020000 		.4byte	.LASF29
 1828 01c6 06       		.byte	0x6
ARM GAS  /tmp/ccn6Sm5M.s 			page 69


 1829 01c7 3A       		.byte	0x3a
 1830 01c8 45000000 		.4byte	0x45
 1831 01cc 02       		.byte	0x2
 1832 01cd 23       		.byte	0x23
 1833 01ce 10       		.uleb128 0x10
 1834 01cf 0B       		.uleb128 0xb
 1835 01d0 920A0000 		.4byte	.LASF30
 1836 01d4 06       		.byte	0x6
 1837 01d5 3B       		.byte	0x3b
 1838 01d6 45000000 		.4byte	0x45
 1839 01da 02       		.byte	0x2
 1840 01db 23       		.byte	0x23
 1841 01dc 14       		.uleb128 0x14
 1842 01dd 0B       		.uleb128 0xb
 1843 01de A2070000 		.4byte	.LASF31
 1844 01e2 06       		.byte	0x6
 1845 01e3 3C       		.byte	0x3c
 1846 01e4 45000000 		.4byte	0x45
 1847 01e8 02       		.byte	0x2
 1848 01e9 23       		.byte	0x23
 1849 01ea 18       		.uleb128 0x18
 1850 01eb 0B       		.uleb128 0xb
 1851 01ec AC070000 		.4byte	.LASF32
 1852 01f0 06       		.byte	0x6
 1853 01f1 3D       		.byte	0x3d
 1854 01f2 45000000 		.4byte	0x45
 1855 01f6 02       		.byte	0x2
 1856 01f7 23       		.byte	0x23
 1857 01f8 1C       		.uleb128 0x1c
 1858 01f9 0B       		.uleb128 0xb
 1859 01fa F50B0000 		.4byte	.LASF33
 1860 01fe 06       		.byte	0x6
 1861 01ff 3E       		.byte	0x3e
 1862 0200 45000000 		.4byte	0x45
 1863 0204 02       		.byte	0x2
 1864 0205 23       		.byte	0x23
 1865 0206 20       		.uleb128 0x20
 1866 0207 00       		.byte	0
 1867 0208 10       		.uleb128 0x10
 1868 0209 5C010000 		.4byte	.LASF34
 1869 020d 0801     		.2byte	0x108
 1870 020f 06       		.byte	0x6
 1871 0210 47       		.byte	0x47
 1872 0211 51020000 		.4byte	0x251
 1873 0215 0B       		.uleb128 0xb
 1874 0216 E50B0000 		.4byte	.LASF35
 1875 021a 06       		.byte	0x6
 1876 021b 48       		.byte	0x48
 1877 021c 51020000 		.4byte	0x251
 1878 0220 02       		.byte	0x2
 1879 0221 23       		.byte	0x23
 1880 0222 00       		.uleb128 0
 1881 0223 0B       		.uleb128 0xb
 1882 0224 41080000 		.4byte	.LASF36
 1883 0228 06       		.byte	0x6
 1884 0229 49       		.byte	0x49
 1885 022a 51020000 		.4byte	0x251
ARM GAS  /tmp/ccn6Sm5M.s 			page 70


 1886 022e 03       		.byte	0x3
 1887 022f 23       		.byte	0x23
 1888 0230 8001     		.uleb128 0x80
 1889 0232 0B       		.uleb128 0xb
 1890 0233 780A0000 		.4byte	.LASF37
 1891 0237 06       		.byte	0x6
 1892 0238 4B       		.byte	0x4b
 1893 0239 F6000000 		.4byte	0xf6
 1894 023d 03       		.byte	0x3
 1895 023e 23       		.byte	0x23
 1896 023f 8002     		.uleb128 0x100
 1897 0241 0B       		.uleb128 0xb
 1898 0242 EB0A0000 		.4byte	.LASF38
 1899 0246 06       		.byte	0x6
 1900 0247 4E       		.byte	0x4e
 1901 0248 F6000000 		.4byte	0xf6
 1902 024c 03       		.byte	0x3
 1903 024d 23       		.byte	0x23
 1904 024e 8402     		.uleb128 0x104
 1905 0250 00       		.byte	0
 1906 0251 08       		.uleb128 0x8
 1907 0252 F4000000 		.4byte	0xf4
 1908 0256 61020000 		.4byte	0x261
 1909 025a 09       		.uleb128 0x9
 1910 025b 4C000000 		.4byte	0x4c
 1911 025f 1F       		.byte	0x1f
 1912 0260 00       		.byte	0
 1913 0261 0D       		.uleb128 0xd
 1914 0262 8B070000 		.4byte	.LASF39
 1915 0266 8C       		.byte	0x8c
 1916 0267 06       		.byte	0x6
 1917 0268 52       		.byte	0x52
 1918 0269 A7020000 		.4byte	0x2a7
 1919 026d 0B       		.uleb128 0xb
 1920 026e 39090000 		.4byte	.LASF19
 1921 0272 06       		.byte	0x6
 1922 0273 53       		.byte	0x53
 1923 0274 A7020000 		.4byte	0x2a7
 1924 0278 02       		.byte	0x2
 1925 0279 23       		.byte	0x23
 1926 027a 00       		.uleb128 0
 1927 027b 0B       		.uleb128 0xb
 1928 027c B90A0000 		.4byte	.LASF40
 1929 0280 06       		.byte	0x6
 1930 0281 54       		.byte	0x54
 1931 0282 45000000 		.4byte	0x45
 1932 0286 02       		.byte	0x2
 1933 0287 23       		.byte	0x23
 1934 0288 04       		.uleb128 0x4
 1935 0289 0B       		.uleb128 0xb
 1936 028a 2E030000 		.4byte	.LASF41
 1937 028e 06       		.byte	0x6
 1938 028f 55       		.byte	0x55
 1939 0290 AD020000 		.4byte	0x2ad
 1940 0294 02       		.byte	0x2
 1941 0295 23       		.byte	0x23
 1942 0296 08       		.uleb128 0x8
ARM GAS  /tmp/ccn6Sm5M.s 			page 71


 1943 0297 0B       		.uleb128 0xb
 1944 0298 09060000 		.4byte	.LASF42
 1945 029c 06       		.byte	0x6
 1946 029d 56       		.byte	0x56
 1947 029e C5020000 		.4byte	0x2c5
 1948 02a2 03       		.byte	0x3
 1949 02a3 23       		.byte	0x23
 1950 02a4 8801     		.uleb128 0x88
 1951 02a6 00       		.byte	0
 1952 02a7 0F       		.uleb128 0xf
 1953 02a8 04       		.byte	0x4
 1954 02a9 61020000 		.4byte	0x261
 1955 02ad 08       		.uleb128 0x8
 1956 02ae BF020000 		.4byte	0x2bf
 1957 02b2 BD020000 		.4byte	0x2bd
 1958 02b6 09       		.uleb128 0x9
 1959 02b7 4C000000 		.4byte	0x4c
 1960 02bb 1F       		.byte	0x1f
 1961 02bc 00       		.byte	0
 1962 02bd 11       		.uleb128 0x11
 1963 02be 01       		.byte	0x1
 1964 02bf 0F       		.uleb128 0xf
 1965 02c0 04       		.byte	0x4
 1966 02c1 BD020000 		.4byte	0x2bd
 1967 02c5 0F       		.uleb128 0xf
 1968 02c6 04       		.byte	0x4
 1969 02c7 08020000 		.4byte	0x208
 1970 02cb 0D       		.uleb128 0xd
 1971 02cc E40A0000 		.4byte	.LASF43
 1972 02d0 08       		.byte	0x8
 1973 02d1 06       		.byte	0x6
 1974 02d2 69       		.byte	0x69
 1975 02d3 F4020000 		.4byte	0x2f4
 1976 02d7 0B       		.uleb128 0xb
 1977 02d8 8E080000 		.4byte	.LASF44
 1978 02dc 06       		.byte	0x6
 1979 02dd 6A       		.byte	0x6a
 1980 02de F4020000 		.4byte	0x2f4
 1981 02e2 02       		.byte	0x2
 1982 02e3 23       		.byte	0x23
 1983 02e4 00       		.uleb128 0
 1984 02e5 0B       		.uleb128 0xb
 1985 02e6 D2010000 		.4byte	.LASF45
 1986 02ea 06       		.byte	0x6
 1987 02eb 6B       		.byte	0x6b
 1988 02ec 45000000 		.4byte	0x45
 1989 02f0 02       		.byte	0x2
 1990 02f1 23       		.byte	0x23
 1991 02f2 04       		.uleb128 0x4
 1992 02f3 00       		.byte	0
 1993 02f4 0F       		.uleb128 0xf
 1994 02f5 04       		.byte	0x4
 1995 02f6 30000000 		.4byte	0x30
 1996 02fa 12       		.uleb128 0x12
 1997 02fb E7020000 		.4byte	.LASF46
 1998 02ff F0       		.byte	0xf0
 1999 0300 06       		.byte	0x6
ARM GAS  /tmp/ccn6Sm5M.s 			page 72


 2000 0301 7B01     		.2byte	0x17b
 2001 0303 74040000 		.4byte	0x474
 2002 0307 13       		.uleb128 0x13
 2003 0308 5B050000 		.4byte	.LASF47
 2004 030c 06       		.byte	0x6
 2005 030d 7F01     		.2byte	0x17f
 2006 030f 45000000 		.4byte	0x45
 2007 0313 02       		.byte	0x2
 2008 0314 23       		.byte	0x23
 2009 0315 00       		.uleb128 0
 2010 0316 13       		.uleb128 0x13
 2011 0317 82030000 		.4byte	.LASF48
 2012 031b 06       		.byte	0x6
 2013 031c 8401     		.2byte	0x184
 2014 031e E3060000 		.4byte	0x6e3
 2015 0322 02       		.byte	0x2
 2016 0323 23       		.byte	0x23
 2017 0324 04       		.uleb128 0x4
 2018 0325 13       		.uleb128 0x13
 2019 0326 71080000 		.4byte	.LASF49
 2020 032a 06       		.byte	0x6
 2021 032b 8401     		.2byte	0x184
 2022 032d E3060000 		.4byte	0x6e3
 2023 0331 02       		.byte	0x2
 2024 0332 23       		.byte	0x23
 2025 0333 08       		.uleb128 0x8
 2026 0334 13       		.uleb128 0x13
 2027 0335 52070000 		.4byte	.LASF50
 2028 0339 06       		.byte	0x6
 2029 033a 8401     		.2byte	0x184
 2030 033c E3060000 		.4byte	0x6e3
 2031 0340 02       		.byte	0x2
 2032 0341 23       		.byte	0x23
 2033 0342 0C       		.uleb128 0xc
 2034 0343 13       		.uleb128 0x13
 2035 0344 B40A0000 		.4byte	.LASF51
 2036 0348 06       		.byte	0x6
 2037 0349 8601     		.2byte	0x186
 2038 034b 45000000 		.4byte	0x45
 2039 034f 02       		.byte	0x2
 2040 0350 23       		.byte	0x23
 2041 0351 10       		.uleb128 0x10
 2042 0352 13       		.uleb128 0x13
 2043 0353 E8050000 		.4byte	.LASF52
 2044 0357 06       		.byte	0x6
 2045 0358 8801     		.2byte	0x188
 2046 035a F3050000 		.4byte	0x5f3
 2047 035e 02       		.byte	0x2
 2048 035f 23       		.byte	0x23
 2049 0360 14       		.uleb128 0x14
 2050 0361 13       		.uleb128 0x13
 2051 0362 1E050000 		.4byte	.LASF53
 2052 0366 06       		.byte	0x6
 2053 0367 8A01     		.2byte	0x18a
 2054 0369 45000000 		.4byte	0x45
 2055 036d 02       		.byte	0x2
 2056 036e 23       		.byte	0x23
ARM GAS  /tmp/ccn6Sm5M.s 			page 73


 2057 036f 18       		.uleb128 0x18
 2058 0370 13       		.uleb128 0x13
 2059 0371 3B020000 		.4byte	.LASF54
 2060 0375 06       		.byte	0x6
 2061 0376 8C01     		.2byte	0x18c
 2062 0378 45000000 		.4byte	0x45
 2063 037c 02       		.byte	0x2
 2064 037d 23       		.byte	0x23
 2065 037e 1C       		.uleb128 0x1c
 2066 037f 13       		.uleb128 0x13
 2067 0380 A5060000 		.4byte	.LASF55
 2068 0384 06       		.byte	0x6
 2069 0385 8D01     		.2byte	0x18d
 2070 0387 25060000 		.4byte	0x625
 2071 038b 02       		.byte	0x2
 2072 038c 23       		.byte	0x23
 2073 038d 20       		.uleb128 0x20
 2074 038e 14       		.uleb128 0x14
 2075 038f 5F6D7000 		.ascii	"_mp\000"
 2076 0393 06       		.byte	0x6
 2077 0394 8F01     		.2byte	0x18f
 2078 0396 56080000 		.4byte	0x856
 2079 039a 02       		.byte	0x2
 2080 039b 23       		.byte	0x23
 2081 039c 24       		.uleb128 0x24
 2082 039d 13       		.uleb128 0x13
 2083 039e C0050000 		.4byte	.LASF56
 2084 03a2 06       		.byte	0x6
 2085 03a3 9101     		.2byte	0x191
 2086 03a5 68080000 		.4byte	0x868
 2087 03a9 02       		.byte	0x2
 2088 03aa 23       		.byte	0x23
 2089 03ab 28       		.uleb128 0x28
 2090 03ac 13       		.uleb128 0x13
 2091 03ad 79060000 		.4byte	.LASF57
 2092 03b1 06       		.byte	0x6
 2093 03b2 9301     		.2byte	0x193
 2094 03b4 45000000 		.4byte	0x45
 2095 03b8 02       		.byte	0x2
 2096 03b9 23       		.byte	0x23
 2097 03ba 2C       		.uleb128 0x2c
 2098 03bb 13       		.uleb128 0x13
 2099 03bc 69000000 		.4byte	.LASF58
 2100 03c0 06       		.byte	0x6
 2101 03c1 9601     		.2byte	0x196
 2102 03c3 45000000 		.4byte	0x45
 2103 03c7 02       		.byte	0x2
 2104 03c8 23       		.byte	0x23
 2105 03c9 30       		.uleb128 0x30
 2106 03ca 13       		.uleb128 0x13
 2107 03cb 40040000 		.4byte	.LASF59
 2108 03cf 06       		.byte	0x6
 2109 03d0 9701     		.2byte	0x197
 2110 03d2 F3050000 		.4byte	0x5f3
 2111 03d6 02       		.byte	0x2
 2112 03d7 23       		.byte	0x23
 2113 03d8 34       		.uleb128 0x34
ARM GAS  /tmp/ccn6Sm5M.s 			page 74


 2114 03d9 13       		.uleb128 0x13
 2115 03da 0C090000 		.4byte	.LASF60
 2116 03de 06       		.byte	0x6
 2117 03df 9901     		.2byte	0x199
 2118 03e1 6E080000 		.4byte	0x86e
 2119 03e5 02       		.byte	0x2
 2120 03e6 23       		.byte	0x23
 2121 03e7 38       		.uleb128 0x38
 2122 03e8 13       		.uleb128 0x13
 2123 03e9 DE010000 		.4byte	.LASF61
 2124 03ed 06       		.byte	0x6
 2125 03ee 9A01     		.2byte	0x19a
 2126 03f0 74080000 		.4byte	0x874
 2127 03f4 02       		.byte	0x2
 2128 03f5 23       		.byte	0x23
 2129 03f6 3C       		.uleb128 0x3c
 2130 03f7 13       		.uleb128 0x13
 2131 03f8 5C000000 		.4byte	.LASF62
 2132 03fc 06       		.byte	0x6
 2133 03fd 9B01     		.2byte	0x19b
 2134 03ff F3050000 		.4byte	0x5f3
 2135 0403 02       		.byte	0x2
 2136 0404 23       		.byte	0x23
 2137 0405 40       		.uleb128 0x40
 2138 0406 13       		.uleb128 0x13
 2139 0407 2E040000 		.4byte	.LASF63
 2140 040b 06       		.byte	0x6
 2141 040c 9E01     		.2byte	0x19e
 2142 040e 86080000 		.4byte	0x886
 2143 0412 02       		.byte	0x2
 2144 0413 23       		.byte	0x23
 2145 0414 44       		.uleb128 0x44
 2146 0415 13       		.uleb128 0x13
 2147 0416 8B070000 		.4byte	.LASF39
 2148 041a 06       		.byte	0x6
 2149 041b A101     		.2byte	0x1a1
 2150 041d A7020000 		.4byte	0x2a7
 2151 0421 02       		.byte	0x2
 2152 0422 23       		.byte	0x23
 2153 0423 48       		.uleb128 0x48
 2154 0424 13       		.uleb128 0x13
 2155 0425 DF050000 		.4byte	.LASF64
 2156 0429 06       		.byte	0x6
 2157 042a A201     		.2byte	0x1a2
 2158 042c 61020000 		.4byte	0x261
 2159 0430 02       		.byte	0x2
 2160 0431 23       		.byte	0x23
 2161 0432 4C       		.uleb128 0x4c
 2162 0433 13       		.uleb128 0x13
 2163 0434 4A060000 		.4byte	.LASF65
 2164 0438 06       		.byte	0x6
 2165 0439 A401     		.2byte	0x1a4
 2166 043b A2060000 		.4byte	0x6a2
 2167 043f 03       		.byte	0x3
 2168 0440 23       		.byte	0x23
 2169 0441 D801     		.uleb128 0xd8
 2170 0443 13       		.uleb128 0x13
ARM GAS  /tmp/ccn6Sm5M.s 			page 75


 2171 0444 32000000 		.4byte	.LASF66
 2172 0448 06       		.byte	0x6
 2173 0449 A501     		.2byte	0x1a5
 2174 044b E3060000 		.4byte	0x6e3
 2175 044f 03       		.byte	0x3
 2176 0450 23       		.byte	0x23
 2177 0451 E401     		.uleb128 0xe4
 2178 0453 13       		.uleb128 0x13
 2179 0454 190B0000 		.4byte	.LASF67
 2180 0458 06       		.byte	0x6
 2181 0459 A601     		.2byte	0x1a6
 2182 045b 92080000 		.4byte	0x892
 2183 045f 03       		.byte	0x3
 2184 0460 23       		.byte	0x23
 2185 0461 E801     		.uleb128 0xe8
 2186 0463 13       		.uleb128 0x13
 2187 0464 6A050000 		.4byte	.LASF68
 2188 0468 06       		.byte	0x6
 2189 0469 A701     		.2byte	0x1a7
 2190 046b F3050000 		.4byte	0x5f3
 2191 046f 03       		.byte	0x3
 2192 0470 23       		.byte	0x23
 2193 0471 EC01     		.uleb128 0xec
 2194 0473 00       		.byte	0
 2195 0474 0F       		.uleb128 0xf
 2196 0475 04       		.byte	0x4
 2197 0476 FA020000 		.4byte	0x2fa
 2198 047a 0D       		.uleb128 0xd
 2199 047b 16050000 		.4byte	.LASF69
 2200 047f 68       		.byte	0x68
 2201 0480 06       		.byte	0x6
 2202 0481 B3       		.byte	0xb3
 2203 0482 D4050000 		.4byte	0x5d4
 2204 0486 0E       		.uleb128 0xe
 2205 0487 5F7000   		.ascii	"_p\000"
 2206 048a 06       		.byte	0x6
 2207 048b B4       		.byte	0xb4
 2208 048c F4020000 		.4byte	0x2f4
 2209 0490 02       		.byte	0x2
 2210 0491 23       		.byte	0x23
 2211 0492 00       		.uleb128 0
 2212 0493 0E       		.uleb128 0xe
 2213 0494 5F7200   		.ascii	"_r\000"
 2214 0497 06       		.byte	0x6
 2215 0498 B5       		.byte	0xb5
 2216 0499 45000000 		.4byte	0x45
 2217 049d 02       		.byte	0x2
 2218 049e 23       		.byte	0x23
 2219 049f 04       		.uleb128 0x4
 2220 04a0 0E       		.uleb128 0xe
 2221 04a1 5F7700   		.ascii	"_w\000"
 2222 04a4 06       		.byte	0x6
 2223 04a5 B6       		.byte	0xb6
 2224 04a6 45000000 		.4byte	0x45
 2225 04aa 02       		.byte	0x2
 2226 04ab 23       		.byte	0x23
 2227 04ac 08       		.uleb128 0x8
ARM GAS  /tmp/ccn6Sm5M.s 			page 76


 2228 04ad 0B       		.uleb128 0xb
 2229 04ae 7C070000 		.4byte	.LASF70
 2230 04b2 06       		.byte	0x6
 2231 04b3 B7       		.byte	0xb7
 2232 04b4 37000000 		.4byte	0x37
 2233 04b8 02       		.byte	0x2
 2234 04b9 23       		.byte	0x23
 2235 04ba 0C       		.uleb128 0xc
 2236 04bb 0B       		.uleb128 0xb
 2237 04bc 56010000 		.4byte	.LASF71
 2238 04c0 06       		.byte	0x6
 2239 04c1 B8       		.byte	0xb8
 2240 04c2 37000000 		.4byte	0x37
 2241 04c6 02       		.byte	0x2
 2242 04c7 23       		.byte	0x23
 2243 04c8 0E       		.uleb128 0xe
 2244 04c9 0E       		.uleb128 0xe
 2245 04ca 5F626600 		.ascii	"_bf\000"
 2246 04ce 06       		.byte	0x6
 2247 04cf B9       		.byte	0xb9
 2248 04d0 CB020000 		.4byte	0x2cb
 2249 04d4 02       		.byte	0x2
 2250 04d5 23       		.byte	0x23
 2251 04d6 10       		.uleb128 0x10
 2252 04d7 0B       		.uleb128 0xb
 2253 04d8 AB0A0000 		.4byte	.LASF72
 2254 04dc 06       		.byte	0x6
 2255 04dd BA       		.byte	0xba
 2256 04de 45000000 		.4byte	0x45
 2257 04e2 02       		.byte	0x2
 2258 04e3 23       		.byte	0x23
 2259 04e4 18       		.uleb128 0x18
 2260 04e5 0B       		.uleb128 0xb
 2261 04e6 3F090000 		.4byte	.LASF73
 2262 04ea 06       		.byte	0x6
 2263 04eb BD       		.byte	0xbd
 2264 04ec 74040000 		.4byte	0x474
 2265 04f0 02       		.byte	0x2
 2266 04f1 23       		.byte	0x23
 2267 04f2 1C       		.uleb128 0x1c
 2268 04f3 0B       		.uleb128 0xb
 2269 04f4 0F040000 		.4byte	.LASF74
 2270 04f8 06       		.byte	0x6
 2271 04f9 C1       		.byte	0xc1
 2272 04fa F4000000 		.4byte	0xf4
 2273 04fe 02       		.byte	0x2
 2274 04ff 23       		.byte	0x23
 2275 0500 20       		.uleb128 0x20
 2276 0501 0B       		.uleb128 0xb
 2277 0502 3C000000 		.4byte	.LASF75
 2278 0506 06       		.byte	0x6
 2279 0507 C3       		.byte	0xc3
 2280 0508 00060000 		.4byte	0x600
 2281 050c 02       		.byte	0x2
 2282 050d 23       		.byte	0x23
 2283 050e 24       		.uleb128 0x24
 2284 050f 0B       		.uleb128 0xb
ARM GAS  /tmp/ccn6Sm5M.s 			page 77


 2285 0510 55000000 		.4byte	.LASF76
 2286 0514 06       		.byte	0x6
 2287 0515 C5       		.byte	0xc5
 2288 0516 30060000 		.4byte	0x630
 2289 051a 02       		.byte	0x2
 2290 051b 23       		.byte	0x23
 2291 051c 28       		.uleb128 0x28
 2292 051d 0B       		.uleb128 0xb
 2293 051e BC070000 		.4byte	.LASF77
 2294 0522 06       		.byte	0x6
 2295 0523 C7       		.byte	0xc7
 2296 0524 55060000 		.4byte	0x655
 2297 0528 02       		.byte	0x2
 2298 0529 23       		.byte	0x23
 2299 052a 2C       		.uleb128 0x2c
 2300 052b 0B       		.uleb128 0xb
 2301 052c 4A030000 		.4byte	.LASF78
 2302 0530 06       		.byte	0x6
 2303 0531 C8       		.byte	0xc8
 2304 0532 70060000 		.4byte	0x670
 2305 0536 02       		.byte	0x2
 2306 0537 23       		.byte	0x23
 2307 0538 30       		.uleb128 0x30
 2308 0539 0E       		.uleb128 0xe
 2309 053a 5F756200 		.ascii	"_ub\000"
 2310 053e 06       		.byte	0x6
 2311 053f CB       		.byte	0xcb
 2312 0540 CB020000 		.4byte	0x2cb
 2313 0544 02       		.byte	0x2
 2314 0545 23       		.byte	0x23
 2315 0546 34       		.uleb128 0x34
 2316 0547 0E       		.uleb128 0xe
 2317 0548 5F757000 		.ascii	"_up\000"
 2318 054c 06       		.byte	0x6
 2319 054d CC       		.byte	0xcc
 2320 054e F4020000 		.4byte	0x2f4
 2321 0552 02       		.byte	0x2
 2322 0553 23       		.byte	0x23
 2323 0554 3C       		.uleb128 0x3c
 2324 0555 0E       		.uleb128 0xe
 2325 0556 5F757200 		.ascii	"_ur\000"
 2326 055a 06       		.byte	0x6
 2327 055b CD       		.byte	0xcd
 2328 055c 45000000 		.4byte	0x45
 2329 0560 02       		.byte	0x2
 2330 0561 23       		.byte	0x23
 2331 0562 40       		.uleb128 0x40
 2332 0563 0B       		.uleb128 0xb
 2333 0564 41070000 		.4byte	.LASF79
 2334 0568 06       		.byte	0x6
 2335 0569 D0       		.byte	0xd0
 2336 056a 76060000 		.4byte	0x676
 2337 056e 02       		.byte	0x2
 2338 056f 23       		.byte	0x23
 2339 0570 44       		.uleb128 0x44
 2340 0571 0B       		.uleb128 0xb
 2341 0572 A7000000 		.4byte	.LASF80
ARM GAS  /tmp/ccn6Sm5M.s 			page 78


 2342 0576 06       		.byte	0x6
 2343 0577 D1       		.byte	0xd1
 2344 0578 86060000 		.4byte	0x686
 2345 057c 02       		.byte	0x2
 2346 057d 23       		.byte	0x23
 2347 057e 47       		.uleb128 0x47
 2348 057f 0E       		.uleb128 0xe
 2349 0580 5F6C6200 		.ascii	"_lb\000"
 2350 0584 06       		.byte	0x6
 2351 0585 D4       		.byte	0xd4
 2352 0586 CB020000 		.4byte	0x2cb
 2353 058a 02       		.byte	0x2
 2354 058b 23       		.byte	0x23
 2355 058c 48       		.uleb128 0x48
 2356 058d 0B       		.uleb128 0xb
 2357 058e 85080000 		.4byte	.LASF81
 2358 0592 06       		.byte	0x6
 2359 0593 D7       		.byte	0xd7
 2360 0594 45000000 		.4byte	0x45
 2361 0598 02       		.byte	0x2
 2362 0599 23       		.byte	0x23
 2363 059a 50       		.uleb128 0x50
 2364 059b 0B       		.uleb128 0xb
 2365 059c 38040000 		.4byte	.LASF82
 2366 05a0 06       		.byte	0x6
 2367 05a1 D8       		.byte	0xd8
 2368 05a2 45000000 		.4byte	0x45
 2369 05a6 02       		.byte	0x2
 2370 05a7 23       		.byte	0x23
 2371 05a8 54       		.uleb128 0x54
 2372 05a9 0B       		.uleb128 0xb
 2373 05aa D3000000 		.4byte	.LASF83
 2374 05ae 06       		.byte	0x6
 2375 05af DF       		.byte	0xdf
 2376 05b0 E9000000 		.4byte	0xe9
 2377 05b4 02       		.byte	0x2
 2378 05b5 23       		.byte	0x23
 2379 05b6 58       		.uleb128 0x58
 2380 05b7 0B       		.uleb128 0xb
 2381 05b8 68070000 		.4byte	.LASF84
 2382 05bc 06       		.byte	0x6
 2383 05bd E1       		.byte	0xe1
 2384 05be DE000000 		.4byte	0xde
 2385 05c2 02       		.byte	0x2
 2386 05c3 23       		.byte	0x23
 2387 05c4 5C       		.uleb128 0x5c
 2388 05c5 0B       		.uleb128 0xb
 2389 05c6 29050000 		.4byte	.LASF85
 2390 05ca 06       		.byte	0x6
 2391 05cb E2       		.byte	0xe2
 2392 05cc 45000000 		.4byte	0x45
 2393 05d0 02       		.byte	0x2
 2394 05d1 23       		.byte	0x23
 2395 05d2 64       		.uleb128 0x64
 2396 05d3 00       		.byte	0
 2397 05d4 15       		.uleb128 0x15
 2398 05d5 01       		.byte	0x1
ARM GAS  /tmp/ccn6Sm5M.s 			page 79


 2399 05d6 45000000 		.4byte	0x45
 2400 05da F3050000 		.4byte	0x5f3
 2401 05de 16       		.uleb128 0x16
 2402 05df 74040000 		.4byte	0x474
 2403 05e3 16       		.uleb128 0x16
 2404 05e4 F4000000 		.4byte	0xf4
 2405 05e8 16       		.uleb128 0x16
 2406 05e9 F3050000 		.4byte	0x5f3
 2407 05ed 16       		.uleb128 0x16
 2408 05ee 45000000 		.4byte	0x45
 2409 05f2 00       		.byte	0
 2410 05f3 0F       		.uleb128 0xf
 2411 05f4 04       		.byte	0x4
 2412 05f5 F9050000 		.4byte	0x5f9
 2413 05f9 02       		.uleb128 0x2
 2414 05fa 01       		.byte	0x1
 2415 05fb 08       		.byte	0x8
 2416 05fc 29030000 		.4byte	.LASF86
 2417 0600 0F       		.uleb128 0xf
 2418 0601 04       		.byte	0x4
 2419 0602 D4050000 		.4byte	0x5d4
 2420 0606 15       		.uleb128 0x15
 2421 0607 01       		.byte	0x1
 2422 0608 45000000 		.4byte	0x45
 2423 060c 25060000 		.4byte	0x625
 2424 0610 16       		.uleb128 0x16
 2425 0611 74040000 		.4byte	0x474
 2426 0615 16       		.uleb128 0x16
 2427 0616 F4000000 		.4byte	0xf4
 2428 061a 16       		.uleb128 0x16
 2429 061b 25060000 		.4byte	0x625
 2430 061f 16       		.uleb128 0x16
 2431 0620 45000000 		.4byte	0x45
 2432 0624 00       		.byte	0
 2433 0625 0F       		.uleb128 0xf
 2434 0626 04       		.byte	0x4
 2435 0627 2B060000 		.4byte	0x62b
 2436 062b 17       		.uleb128 0x17
 2437 062c F9050000 		.4byte	0x5f9
 2438 0630 0F       		.uleb128 0xf
 2439 0631 04       		.byte	0x4
 2440 0632 06060000 		.4byte	0x606
 2441 0636 15       		.uleb128 0x15
 2442 0637 01       		.byte	0x1
 2443 0638 73000000 		.4byte	0x73
 2444 063c 55060000 		.4byte	0x655
 2445 0640 16       		.uleb128 0x16
 2446 0641 74040000 		.4byte	0x474
 2447 0645 16       		.uleb128 0x16
 2448 0646 F4000000 		.4byte	0xf4
 2449 064a 16       		.uleb128 0x16
 2450 064b 73000000 		.4byte	0x73
 2451 064f 16       		.uleb128 0x16
 2452 0650 45000000 		.4byte	0x45
 2453 0654 00       		.byte	0
 2454 0655 0F       		.uleb128 0xf
 2455 0656 04       		.byte	0x4
ARM GAS  /tmp/ccn6Sm5M.s 			page 80


 2456 0657 36060000 		.4byte	0x636
 2457 065b 15       		.uleb128 0x15
 2458 065c 01       		.byte	0x1
 2459 065d 45000000 		.4byte	0x45
 2460 0661 70060000 		.4byte	0x670
 2461 0665 16       		.uleb128 0x16
 2462 0666 74040000 		.4byte	0x474
 2463 066a 16       		.uleb128 0x16
 2464 066b F4000000 		.4byte	0xf4
 2465 066f 00       		.byte	0
 2466 0670 0F       		.uleb128 0xf
 2467 0671 04       		.byte	0x4
 2468 0672 5B060000 		.4byte	0x65b
 2469 0676 08       		.uleb128 0x8
 2470 0677 30000000 		.4byte	0x30
 2471 067b 86060000 		.4byte	0x686
 2472 067f 09       		.uleb128 0x9
 2473 0680 4C000000 		.4byte	0x4c
 2474 0684 02       		.byte	0x2
 2475 0685 00       		.byte	0
 2476 0686 08       		.uleb128 0x8
 2477 0687 30000000 		.4byte	0x30
 2478 068b 96060000 		.4byte	0x696
 2479 068f 09       		.uleb128 0x9
 2480 0690 4C000000 		.4byte	0x4c
 2481 0694 00       		.byte	0
 2482 0695 00       		.byte	0
 2483 0696 05       		.uleb128 0x5
 2484 0697 EF080000 		.4byte	.LASF87
 2485 069b 06       		.byte	0x6
 2486 069c 1E01     		.2byte	0x11e
 2487 069e 7A040000 		.4byte	0x47a
 2488 06a2 12       		.uleb128 0x12
 2489 06a3 C5060000 		.4byte	.LASF88
 2490 06a7 0C       		.byte	0xc
 2491 06a8 06       		.byte	0x6
 2492 06a9 2201     		.2byte	0x122
 2493 06ab DD060000 		.4byte	0x6dd
 2494 06af 13       		.uleb128 0x13
 2495 06b0 39090000 		.4byte	.LASF19
 2496 06b4 06       		.byte	0x6
 2497 06b5 2401     		.2byte	0x124
 2498 06b7 DD060000 		.4byte	0x6dd
 2499 06bb 02       		.byte	0x2
 2500 06bc 23       		.byte	0x23
 2501 06bd 00       		.uleb128 0
 2502 06be 13       		.uleb128 0x13
 2503 06bf 39060000 		.4byte	.LASF89
 2504 06c3 06       		.byte	0x6
 2505 06c4 2501     		.2byte	0x125
 2506 06c6 45000000 		.4byte	0x45
 2507 06ca 02       		.byte	0x2
 2508 06cb 23       		.byte	0x23
 2509 06cc 04       		.uleb128 0x4
 2510 06cd 13       		.uleb128 0x13
 2511 06ce BF060000 		.4byte	.LASF90
 2512 06d2 06       		.byte	0x6
ARM GAS  /tmp/ccn6Sm5M.s 			page 81


 2513 06d3 2601     		.2byte	0x126
 2514 06d5 E3060000 		.4byte	0x6e3
 2515 06d9 02       		.byte	0x2
 2516 06da 23       		.byte	0x23
 2517 06db 08       		.uleb128 0x8
 2518 06dc 00       		.byte	0
 2519 06dd 0F       		.uleb128 0xf
 2520 06de 04       		.byte	0x4
 2521 06df A2060000 		.4byte	0x6a2
 2522 06e3 0F       		.uleb128 0xf
 2523 06e4 04       		.byte	0x4
 2524 06e5 96060000 		.4byte	0x696
 2525 06e9 12       		.uleb128 0x12
 2526 06ea 56080000 		.4byte	.LASF91
 2527 06ee 18       		.byte	0x18
 2528 06ef 06       		.byte	0x6
 2529 06f0 3E01     		.2byte	0x13e
 2530 06f2 33070000 		.4byte	0x733
 2531 06f6 13       		.uleb128 0x13
 2532 06f7 B6070000 		.4byte	.LASF92
 2533 06fb 06       		.byte	0x6
 2534 06fc 3F01     		.2byte	0x13f
 2535 06fe 33070000 		.4byte	0x733
 2536 0702 02       		.byte	0x2
 2537 0703 23       		.byte	0x23
 2538 0704 00       		.uleb128 0
 2539 0705 13       		.uleb128 0x13
 2540 0706 FC000000 		.4byte	.LASF93
 2541 070a 06       		.byte	0x6
 2542 070b 4001     		.2byte	0x140
 2543 070d 33070000 		.4byte	0x733
 2544 0711 02       		.byte	0x2
 2545 0712 23       		.byte	0x23
 2546 0713 06       		.uleb128 0x6
 2547 0714 13       		.uleb128 0x13
 2548 0715 7F0B0000 		.4byte	.LASF94
 2549 0719 06       		.byte	0x6
 2550 071a 4101     		.2byte	0x141
 2551 071c 3E000000 		.4byte	0x3e
 2552 0720 02       		.byte	0x2
 2553 0721 23       		.byte	0x23
 2554 0722 0C       		.uleb128 0xc
 2555 0723 13       		.uleb128 0x13
 2556 0724 71070000 		.4byte	.LASF95
 2557 0728 06       		.byte	0x6
 2558 0729 4401     		.2byte	0x144
 2559 072b 5A000000 		.4byte	0x5a
 2560 072f 02       		.byte	0x2
 2561 0730 23       		.byte	0x23
 2562 0731 10       		.uleb128 0x10
 2563 0732 00       		.byte	0
 2564 0733 08       		.uleb128 0x8
 2565 0734 3E000000 		.4byte	0x3e
 2566 0738 43070000 		.4byte	0x743
 2567 073c 09       		.uleb128 0x9
 2568 073d 4C000000 		.4byte	0x4c
 2569 0741 02       		.byte	0x2
ARM GAS  /tmp/ccn6Sm5M.s 			page 82


 2570 0742 00       		.byte	0
 2571 0743 12       		.uleb128 0x12
 2572 0744 0B0B0000 		.4byte	.LASF96
 2573 0748 10       		.byte	0x10
 2574 0749 06       		.byte	0x6
 2575 074a 5F01     		.2byte	0x15f
 2576 074c 8D070000 		.4byte	0x78d
 2577 0750 13       		.uleb128 0x13
 2578 0751 560B0000 		.4byte	.LASF97
 2579 0755 06       		.byte	0x6
 2580 0756 6201     		.2byte	0x162
 2581 0758 67010000 		.4byte	0x167
 2582 075c 02       		.byte	0x2
 2583 075d 23       		.byte	0x23
 2584 075e 00       		.uleb128 0
 2585 075f 13       		.uleb128 0x13
 2586 0760 BF010000 		.4byte	.LASF98
 2587 0764 06       		.byte	0x6
 2588 0765 6301     		.2byte	0x163
 2589 0767 45000000 		.4byte	0x45
 2590 076b 02       		.byte	0x2
 2591 076c 23       		.byte	0x23
 2592 076d 04       		.uleb128 0x4
 2593 076e 13       		.uleb128 0x13
 2594 076f CD040000 		.4byte	.LASF99
 2595 0773 06       		.byte	0x6
 2596 0774 6401     		.2byte	0x164
 2597 0776 67010000 		.4byte	0x167
 2598 077a 02       		.byte	0x2
 2599 077b 23       		.byte	0x23
 2600 077c 08       		.uleb128 0x8
 2601 077d 13       		.uleb128 0x13
 2602 077e B5060000 		.4byte	.LASF100
 2603 0782 06       		.byte	0x6
 2604 0783 6501     		.2byte	0x165
 2605 0785 8D070000 		.4byte	0x78d
 2606 0789 02       		.byte	0x2
 2607 078a 23       		.byte	0x23
 2608 078b 0C       		.uleb128 0xc
 2609 078c 00       		.byte	0
 2610 078d 0F       		.uleb128 0xf
 2611 078e 04       		.byte	0x4
 2612 078f 67010000 		.4byte	0x167
 2613 0793 12       		.uleb128 0x12
 2614 0794 22020000 		.4byte	.LASF101
 2615 0798 50       		.byte	0x50
 2616 0799 06       		.byte	0x6
 2617 079a 6901     		.2byte	0x169
 2618 079c 46080000 		.4byte	0x846
 2619 07a0 13       		.uleb128 0x13
 2620 07a1 A3080000 		.4byte	.LASF102
 2621 07a5 06       		.byte	0x6
 2622 07a6 6C01     		.2byte	0x16c
 2623 07a8 F3050000 		.4byte	0x5f3
 2624 07ac 02       		.byte	0x2
 2625 07ad 23       		.byte	0x23
 2626 07ae 00       		.uleb128 0
ARM GAS  /tmp/ccn6Sm5M.s 			page 83


 2627 07af 13       		.uleb128 0x13
 2628 07b0 350A0000 		.4byte	.LASF103
 2629 07b4 06       		.byte	0x6
 2630 07b5 6D01     		.2byte	0x16d
 2631 07b7 DE000000 		.4byte	0xde
 2632 07bb 02       		.byte	0x2
 2633 07bc 23       		.byte	0x23
 2634 07bd 04       		.uleb128 0x4
 2635 07be 13       		.uleb128 0x13
 2636 07bf 5A070000 		.4byte	.LASF104
 2637 07c3 06       		.byte	0x6
 2638 07c4 6E01     		.2byte	0x16e
 2639 07c6 DE000000 		.4byte	0xde
 2640 07ca 02       		.byte	0x2
 2641 07cb 23       		.byte	0x23
 2642 07cc 0C       		.uleb128 0xc
 2643 07cd 13       		.uleb128 0x13
 2644 07ce FB070000 		.4byte	.LASF105
 2645 07d2 06       		.byte	0x6
 2646 07d3 6F01     		.2byte	0x16f
 2647 07d5 DE000000 		.4byte	0xde
 2648 07d9 02       		.byte	0x2
 2649 07da 23       		.byte	0x23
 2650 07db 14       		.uleb128 0x14
 2651 07dc 13       		.uleb128 0x13
 2652 07dd B6000000 		.4byte	.LASF106
 2653 07e1 06       		.byte	0x6
 2654 07e2 7001     		.2byte	0x170
 2655 07e4 46080000 		.4byte	0x846
 2656 07e8 02       		.byte	0x2
 2657 07e9 23       		.byte	0x23
 2658 07ea 1C       		.uleb128 0x1c
 2659 07eb 13       		.uleb128 0x13
 2660 07ec 1C0C0000 		.4byte	.LASF107
 2661 07f0 06       		.byte	0x6
 2662 07f1 7101     		.2byte	0x171
 2663 07f3 45000000 		.4byte	0x45
 2664 07f7 02       		.byte	0x2
 2665 07f8 23       		.byte	0x23
 2666 07f9 24       		.uleb128 0x24
 2667 07fa 13       		.uleb128 0x13
 2668 07fb 9C010000 		.4byte	.LASF108
 2669 07ff 06       		.byte	0x6
 2670 0800 7201     		.2byte	0x172
 2671 0802 DE000000 		.4byte	0xde
 2672 0806 02       		.byte	0x2
 2673 0807 23       		.byte	0x23
 2674 0808 28       		.uleb128 0x28
 2675 0809 13       		.uleb128 0x13
 2676 080a B9080000 		.4byte	.LASF109
 2677 080e 06       		.byte	0x6
 2678 080f 7301     		.2byte	0x173
 2679 0811 DE000000 		.4byte	0xde
 2680 0815 02       		.byte	0x2
 2681 0816 23       		.byte	0x23
 2682 0817 30       		.uleb128 0x30
 2683 0818 13       		.uleb128 0x13
ARM GAS  /tmp/ccn6Sm5M.s 			page 84


 2684 0819 B60B0000 		.4byte	.LASF110
 2685 081d 06       		.byte	0x6
 2686 081e 7401     		.2byte	0x174
 2687 0820 DE000000 		.4byte	0xde
 2688 0824 02       		.byte	0x2
 2689 0825 23       		.byte	0x23
 2690 0826 38       		.uleb128 0x38
 2691 0827 13       		.uleb128 0x13
 2692 0828 20070000 		.4byte	.LASF111
 2693 082c 06       		.byte	0x6
 2694 082d 7501     		.2byte	0x175
 2695 082f DE000000 		.4byte	0xde
 2696 0833 02       		.byte	0x2
 2697 0834 23       		.byte	0x23
 2698 0835 40       		.uleb128 0x40
 2699 0836 13       		.uleb128 0x13
 2700 0837 96000000 		.4byte	.LASF112
 2701 083b 06       		.byte	0x6
 2702 083c 7601     		.2byte	0x176
 2703 083e DE000000 		.4byte	0xde
 2704 0842 02       		.byte	0x2
 2705 0843 23       		.byte	0x23
 2706 0844 48       		.uleb128 0x48
 2707 0845 00       		.byte	0
 2708 0846 08       		.uleb128 0x8
 2709 0847 F9050000 		.4byte	0x5f9
 2710 084b 56080000 		.4byte	0x856
 2711 084f 09       		.uleb128 0x9
 2712 0850 4C000000 		.4byte	0x4c
 2713 0854 07       		.byte	0x7
 2714 0855 00       		.byte	0
 2715 0856 0F       		.uleb128 0xf
 2716 0857 04       		.byte	0x4
 2717 0858 43070000 		.4byte	0x743
 2718 085c 18       		.uleb128 0x18
 2719 085d 01       		.byte	0x1
 2720 085e 68080000 		.4byte	0x868
 2721 0862 16       		.uleb128 0x16
 2722 0863 74040000 		.4byte	0x474
 2723 0867 00       		.byte	0
 2724 0868 0F       		.uleb128 0xf
 2725 0869 04       		.byte	0x4
 2726 086a 5C080000 		.4byte	0x85c
 2727 086e 0F       		.uleb128 0xf
 2728 086f 04       		.byte	0x4
 2729 0870 E9060000 		.4byte	0x6e9
 2730 0874 0F       		.uleb128 0xf
 2731 0875 04       		.byte	0x4
 2732 0876 7D010000 		.4byte	0x17d
 2733 087a 18       		.uleb128 0x18
 2734 087b 01       		.byte	0x1
 2735 087c 86080000 		.4byte	0x886
 2736 0880 16       		.uleb128 0x16
 2737 0881 45000000 		.4byte	0x45
 2738 0885 00       		.byte	0
 2739 0886 0F       		.uleb128 0xf
 2740 0887 04       		.byte	0x4
ARM GAS  /tmp/ccn6Sm5M.s 			page 85


 2741 0888 8C080000 		.4byte	0x88c
 2742 088c 0F       		.uleb128 0xf
 2743 088d 04       		.byte	0x4
 2744 088e 7A080000 		.4byte	0x87a
 2745 0892 0F       		.uleb128 0xf
 2746 0893 04       		.byte	0x4
 2747 0894 93070000 		.4byte	0x793
 2748 0898 04       		.uleb128 0x4
 2749 0899 5E020000 		.4byte	.LASF113
 2750 089d 07       		.byte	0x7
 2751 089e 2A       		.byte	0x2a
 2752 089f 30000000 		.4byte	0x30
 2753 08a3 04       		.uleb128 0x4
 2754 08a4 5A0A0000 		.4byte	.LASF114
 2755 08a8 07       		.byte	0x7
 2756 08a9 35       		.byte	0x35
 2757 08aa 37000000 		.4byte	0x37
 2758 08ae 04       		.uleb128 0x4
 2759 08af 38080000 		.4byte	.LASF115
 2760 08b3 07       		.byte	0x7
 2761 08b4 36       		.byte	0x36
 2762 08b5 3E000000 		.4byte	0x3e
 2763 08b9 04       		.uleb128 0x4
 2764 08ba 430B0000 		.4byte	.LASF116
 2765 08be 07       		.byte	0x7
 2766 08bf 50       		.byte	0x50
 2767 08c0 01010000 		.4byte	0x101
 2768 08c4 17       		.uleb128 0x17
 2769 08c5 C9080000 		.4byte	0x8c9
 2770 08c9 19       		.uleb128 0x19
 2771 08ca B9080000 		.4byte	0x8b9
 2772 08ce 19       		.uleb128 0x19
 2773 08cf B9080000 		.4byte	0x8b9
 2774 08d3 1A       		.uleb128 0x1a
 2775 08d4 FA010000 		.4byte	.LASF319
 2776 08d8 01       		.byte	0x1
 2777 08d9 08       		.byte	0x8
 2778 08da 49       		.byte	0x49
 2779 08db D0090000 		.4byte	0x9d0
 2780 08df 1B       		.uleb128 0x1b
 2781 08e0 A0040000 		.4byte	.LASF117
 2782 08e4 72       		.sleb128 -14
 2783 08e5 1B       		.uleb128 0x1b
 2784 08e6 F9040000 		.4byte	.LASF118
 2785 08ea 74       		.sleb128 -12
 2786 08eb 1B       		.uleb128 0x1b
 2787 08ec CA050000 		.4byte	.LASF119
 2788 08f0 75       		.sleb128 -11
 2789 08f1 1B       		.uleb128 0x1b
 2790 08f2 07030000 		.4byte	.LASF120
 2791 08f6 76       		.sleb128 -10
 2792 08f7 1B       		.uleb128 0x1b
 2793 08f8 6D060000 		.4byte	.LASF121
 2794 08fc 7B       		.sleb128 -5
 2795 08fd 1B       		.uleb128 0x1b
 2796 08fe CB090000 		.4byte	.LASF122
 2797 0902 7C       		.sleb128 -4
ARM GAS  /tmp/ccn6Sm5M.s 			page 86


 2798 0903 1B       		.uleb128 0x1b
 2799 0904 AA0B0000 		.4byte	.LASF123
 2800 0908 7E       		.sleb128 -2
 2801 0909 1B       		.uleb128 0x1b
 2802 090a 2E020000 		.4byte	.LASF124
 2803 090e 7F       		.sleb128 -1
 2804 090f 1B       		.uleb128 0x1b
 2805 0910 48040000 		.4byte	.LASF125
 2806 0914 00       		.sleb128 0
 2807 0915 1B       		.uleb128 0x1b
 2808 0916 0A010000 		.4byte	.LASF126
 2809 091a 01       		.sleb128 1
 2810 091b 1B       		.uleb128 0x1b
 2811 091c 290C0000 		.4byte	.LASF127
 2812 0920 02       		.sleb128 2
 2813 0921 1B       		.uleb128 0x1b
 2814 0922 84040000 		.4byte	.LASF128
 2815 0926 03       		.sleb128 3
 2816 0927 1B       		.uleb128 0x1b
 2817 0928 94050000 		.4byte	.LASF129
 2818 092c 04       		.sleb128 4
 2819 092d 1B       		.uleb128 0x1b
 2820 092e 1C040000 		.4byte	.LASF130
 2821 0932 05       		.sleb128 5
 2822 0933 1B       		.uleb128 0x1b
 2823 0934 25040000 		.4byte	.LASF131
 2824 0938 06       		.sleb128 6
 2825 0939 1B       		.uleb128 0x1b
 2826 093a 01090000 		.4byte	.LASF132
 2827 093e 08       		.sleb128 8
 2828 093f 1B       		.uleb128 0x1b
 2829 0940 C2070000 		.4byte	.LASF133
 2830 0944 09       		.sleb128 9
 2831 0945 1B       		.uleb128 0x1b
 2832 0946 56030000 		.4byte	.LASF134
 2833 094a 0A       		.sleb128 10
 2834 094b 1B       		.uleb128 0x1b
 2835 094c 810A0000 		.4byte	.LASF135
 2836 0950 0B       		.sleb128 11
 2837 0951 1B       		.uleb128 0x1b
 2838 0952 AD090000 		.4byte	.LASF136
 2839 0956 0C       		.sleb128 12
 2840 0957 1B       		.uleb128 0x1b
 2841 0958 62040000 		.4byte	.LASF137
 2842 095c 0D       		.sleb128 13
 2843 095d 1B       		.uleb128 0x1b
 2844 095e 5A090000 		.4byte	.LASF138
 2845 0962 0E       		.sleb128 14
 2846 0963 1B       		.uleb128 0x1b
 2847 0964 79080000 		.4byte	.LASF139
 2848 0968 0F       		.sleb128 15
 2849 0969 1B       		.uleb128 0x1b
 2850 096a 66080000 		.4byte	.LASF140
 2851 096e 12       		.sleb128 18
 2852 096f 1B       		.uleb128 0x1b
 2853 0970 0F070000 		.4byte	.LASF141
 2854 0974 13       		.sleb128 19
ARM GAS  /tmp/ccn6Sm5M.s 			page 87


 2855 0975 1B       		.uleb128 0x1b
 2856 0976 40060000 		.4byte	.LASF142
 2857 097a 14       		.sleb128 20
 2858 097b 1B       		.uleb128 0x1b
 2859 097c 4C090000 		.4byte	.LASF143
 2860 0980 15       		.sleb128 21
 2861 0981 1B       		.uleb128 0x1b
 2862 0982 300B0000 		.4byte	.LASF144
 2863 0986 16       		.sleb128 22
 2864 0987 1B       		.uleb128 0x1b
 2865 0988 9D090000 		.4byte	.LASF145
 2866 098c 17       		.sleb128 23
 2867 098d 1B       		.uleb128 0x1b
 2868 098e 59040000 		.4byte	.LASF146
 2869 0992 18       		.sleb128 24
 2870 0993 1B       		.uleb128 0x1b
 2871 0994 18000000 		.4byte	.LASF147
 2872 0998 19       		.sleb128 25
 2873 0999 1B       		.uleb128 0x1b
 2874 099a CE0B0000 		.4byte	.LASF148
 2875 099e 1A       		.sleb128 26
 2876 099f 1B       		.uleb128 0x1b
 2877 09a0 06070000 		.4byte	.LASF149
 2878 09a4 1B       		.sleb128 27
 2879 09a5 1B       		.uleb128 0x1b
 2880 09a6 FF010000 		.4byte	.LASF150
 2881 09aa 1C       		.sleb128 28
 2882 09ab 1B       		.uleb128 0x1b
 2883 09ac B0080000 		.4byte	.LASF151
 2884 09b0 1D       		.sleb128 29
 2885 09b1 1B       		.uleb128 0x1b
 2886 09b2 96040000 		.4byte	.LASF152
 2887 09b6 1E       		.sleb128 30
 2888 09b7 1B       		.uleb128 0x1b
 2889 09b8 C8030000 		.4byte	.LASF153
 2890 09bc 1F       		.sleb128 31
 2891 09bd 1B       		.uleb128 0x1b
 2892 09be 85010000 		.4byte	.LASF154
 2893 09c2 20       		.sleb128 32
 2894 09c3 1B       		.uleb128 0x1b
 2895 09c4 06040000 		.4byte	.LASF155
 2896 09c8 21       		.sleb128 33
 2897 09c9 1B       		.uleb128 0x1b
 2898 09ca 8D040000 		.4byte	.LASF156
 2899 09ce 22       		.sleb128 34
 2900 09cf 00       		.byte	0
 2901 09d0 04       		.uleb128 0x4
 2902 09d1 3A050000 		.4byte	.LASF157
 2903 09d5 08       		.byte	0x8
 2904 09d6 76       		.byte	0x76
 2905 09d7 D3080000 		.4byte	0x8d3
 2906 09db 1C       		.uleb128 0x1c
 2907 09dc 040E     		.2byte	0xe04
 2908 09de 01       		.byte	0x1
 2909 09df 84       		.byte	0x84
 2910 09e0 A50A0000 		.4byte	0xaa5
 2911 09e4 0B       		.uleb128 0xb
ARM GAS  /tmp/ccn6Sm5M.s 			page 88


 2912 09e5 E00B0000 		.4byte	.LASF158
 2913 09e9 01       		.byte	0x1
 2914 09ea 86       		.byte	0x86
 2915 09eb B50A0000 		.4byte	0xab5
 2916 09ef 02       		.byte	0x2
 2917 09f0 23       		.byte	0x23
 2918 09f1 00       		.uleb128 0
 2919 09f2 0B       		.uleb128 0xb
 2920 09f3 8A020000 		.4byte	.LASF159
 2921 09f7 01       		.byte	0x1
 2922 09f8 87       		.byte	0x87
 2923 09f9 BA0A0000 		.4byte	0xaba
 2924 09fd 02       		.byte	0x2
 2925 09fe 23       		.byte	0x23
 2926 09ff 20       		.uleb128 0x20
 2927 0a00 0B       		.uleb128 0xb
 2928 0a01 DA080000 		.4byte	.LASF160
 2929 0a05 01       		.byte	0x1
 2930 0a06 88       		.byte	0x88
 2931 0a07 CA0A0000 		.4byte	0xaca
 2932 0a0b 03       		.byte	0x3
 2933 0a0c 23       		.byte	0x23
 2934 0a0d 8001     		.uleb128 0x80
 2935 0a0f 0B       		.uleb128 0xb
 2936 0a10 00000000 		.4byte	.LASF161
 2937 0a14 01       		.byte	0x1
 2938 0a15 89       		.byte	0x89
 2939 0a16 BA0A0000 		.4byte	0xaba
 2940 0a1a 03       		.byte	0x3
 2941 0a1b 23       		.byte	0x23
 2942 0a1c A001     		.uleb128 0xa0
 2943 0a1e 0B       		.uleb128 0xb
 2944 0a1f D1030000 		.4byte	.LASF162
 2945 0a23 01       		.byte	0x1
 2946 0a24 8A       		.byte	0x8a
 2947 0a25 CF0A0000 		.4byte	0xacf
 2948 0a29 03       		.byte	0x3
 2949 0a2a 23       		.byte	0x23
 2950 0a2b 8002     		.uleb128 0x100
 2951 0a2d 0B       		.uleb128 0xb
 2952 0a2e FD020000 		.4byte	.LASF163
 2953 0a32 01       		.byte	0x1
 2954 0a33 8B       		.byte	0x8b
 2955 0a34 BA0A0000 		.4byte	0xaba
 2956 0a38 03       		.byte	0x3
 2957 0a39 23       		.byte	0x23
 2958 0a3a A002     		.uleb128 0x120
 2959 0a3c 0B       		.uleb128 0xb
 2960 0a3d 1D010000 		.4byte	.LASF164
 2961 0a41 01       		.byte	0x1
 2962 0a42 8C       		.byte	0x8c
 2963 0a43 D40A0000 		.4byte	0xad4
 2964 0a47 03       		.byte	0x3
 2965 0a48 23       		.byte	0x23
 2966 0a49 8003     		.uleb128 0x180
 2967 0a4b 0B       		.uleb128 0xb
 2968 0a4c A2020000 		.4byte	.LASF165
ARM GAS  /tmp/ccn6Sm5M.s 			page 89


 2969 0a50 01       		.byte	0x1
 2970 0a51 8D       		.byte	0x8d
 2971 0a52 BA0A0000 		.4byte	0xaba
 2972 0a56 03       		.byte	0x3
 2973 0a57 23       		.byte	0x23
 2974 0a58 A003     		.uleb128 0x1a0
 2975 0a5a 0B       		.uleb128 0xb
 2976 0a5b D0020000 		.4byte	.LASF166
 2977 0a5f 01       		.byte	0x1
 2978 0a60 8E       		.byte	0x8e
 2979 0a61 D90A0000 		.4byte	0xad9
 2980 0a65 03       		.byte	0x3
 2981 0a66 23       		.byte	0x23
 2982 0a67 8004     		.uleb128 0x200
 2983 0a69 0B       		.uleb128 0xb
 2984 0a6a AC020000 		.4byte	.LASF167
 2985 0a6e 01       		.byte	0x1
 2986 0a6f 8F       		.byte	0x8f
 2987 0a70 DE0A0000 		.4byte	0xade
 2988 0a74 03       		.byte	0x3
 2989 0a75 23       		.byte	0x23
 2990 0a76 A004     		.uleb128 0x220
 2991 0a78 0E       		.uleb128 0xe
 2992 0a79 495000   		.ascii	"IP\000"
 2993 0a7c 01       		.byte	0x1
 2994 0a7d 90       		.byte	0x90
 2995 0a7e FE0A0000 		.4byte	0xafe
 2996 0a82 03       		.byte	0x3
 2997 0a83 23       		.byte	0x23
 2998 0a84 8006     		.uleb128 0x300
 2999 0a86 0B       		.uleb128 0xb
 3000 0a87 B6020000 		.4byte	.LASF168
 3001 0a8b 01       		.byte	0x1
 3002 0a8c 91       		.byte	0x91
 3003 0a8d 030B0000 		.4byte	0xb03
 3004 0a91 03       		.byte	0x3
 3005 0a92 23       		.byte	0x23
 3006 0a93 F007     		.uleb128 0x3f0
 3007 0a95 0B       		.uleb128 0xb
 3008 0a96 01040000 		.4byte	.LASF169
 3009 0a9a 01       		.byte	0x1
 3010 0a9b 92       		.byte	0x92
 3011 0a9c CE080000 		.4byte	0x8ce
 3012 0aa0 03       		.byte	0x3
 3013 0aa1 23       		.byte	0x23
 3014 0aa2 801C     		.uleb128 0xe00
 3015 0aa4 00       		.byte	0
 3016 0aa5 08       		.uleb128 0x8
 3017 0aa6 B9080000 		.4byte	0x8b9
 3018 0aaa B50A0000 		.4byte	0xab5
 3019 0aae 09       		.uleb128 0x9
 3020 0aaf 4C000000 		.4byte	0x4c
 3021 0ab3 07       		.byte	0x7
 3022 0ab4 00       		.byte	0
 3023 0ab5 19       		.uleb128 0x19
 3024 0ab6 A50A0000 		.4byte	0xaa5
 3025 0aba 08       		.uleb128 0x8
ARM GAS  /tmp/ccn6Sm5M.s 			page 90


 3026 0abb B9080000 		.4byte	0x8b9
 3027 0abf CA0A0000 		.4byte	0xaca
 3028 0ac3 09       		.uleb128 0x9
 3029 0ac4 4C000000 		.4byte	0x4c
 3030 0ac8 17       		.byte	0x17
 3031 0ac9 00       		.byte	0
 3032 0aca 19       		.uleb128 0x19
 3033 0acb A50A0000 		.4byte	0xaa5
 3034 0acf 19       		.uleb128 0x19
 3035 0ad0 A50A0000 		.4byte	0xaa5
 3036 0ad4 19       		.uleb128 0x19
 3037 0ad5 A50A0000 		.4byte	0xaa5
 3038 0ad9 19       		.uleb128 0x19
 3039 0ada A50A0000 		.4byte	0xaa5
 3040 0ade 08       		.uleb128 0x8
 3041 0adf B9080000 		.4byte	0x8b9
 3042 0ae3 EE0A0000 		.4byte	0xaee
 3043 0ae7 09       		.uleb128 0x9
 3044 0ae8 4C000000 		.4byte	0x4c
 3045 0aec 37       		.byte	0x37
 3046 0aed 00       		.byte	0
 3047 0aee 08       		.uleb128 0x8
 3048 0aef 98080000 		.4byte	0x898
 3049 0af3 FE0A0000 		.4byte	0xafe
 3050 0af7 09       		.uleb128 0x9
 3051 0af8 4C000000 		.4byte	0x4c
 3052 0afc EF       		.byte	0xef
 3053 0afd 00       		.byte	0
 3054 0afe 19       		.uleb128 0x19
 3055 0aff EE0A0000 		.4byte	0xaee
 3056 0b03 08       		.uleb128 0x8
 3057 0b04 B9080000 		.4byte	0x8b9
 3058 0b08 140B0000 		.4byte	0xb14
 3059 0b0c 1D       		.uleb128 0x1d
 3060 0b0d 4C000000 		.4byte	0x4c
 3061 0b11 8302     		.2byte	0x283
 3062 0b13 00       		.byte	0
 3063 0b14 04       		.uleb128 0x4
 3064 0b15 42000000 		.4byte	.LASF170
 3065 0b19 01       		.byte	0x1
 3066 0b1a 93       		.byte	0x93
 3067 0b1b DB090000 		.4byte	0x9db
 3068 0b1f 0A       		.uleb128 0xa
 3069 0b20 74       		.byte	0x74
 3070 0b21 01       		.byte	0x1
 3071 0b22 9B       		.byte	0x9b
 3072 0b23 320C0000 		.4byte	0xc32
 3073 0b27 0B       		.uleb128 0xb
 3074 0b28 D8010000 		.4byte	.LASF171
 3075 0b2c 01       		.byte	0x1
 3076 0b2d 9D       		.byte	0x9d
 3077 0b2e C4080000 		.4byte	0x8c4
 3078 0b32 02       		.byte	0x2
 3079 0b33 23       		.byte	0x23
 3080 0b34 00       		.uleb128 0
 3081 0b35 0B       		.uleb128 0xb
 3082 0b36 4D020000 		.4byte	.LASF172
ARM GAS  /tmp/ccn6Sm5M.s 			page 91


 3083 0b3a 01       		.byte	0x1
 3084 0b3b 9E       		.byte	0x9e
 3085 0b3c CE080000 		.4byte	0x8ce
 3086 0b40 02       		.byte	0x2
 3087 0b41 23       		.byte	0x23
 3088 0b42 04       		.uleb128 0x4
 3089 0b43 0B       		.uleb128 0xb
 3090 0b44 C0000000 		.4byte	.LASF173
 3091 0b48 01       		.byte	0x1
 3092 0b49 9F       		.byte	0x9f
 3093 0b4a CE080000 		.4byte	0x8ce
 3094 0b4e 02       		.byte	0x2
 3095 0b4f 23       		.byte	0x23
 3096 0b50 08       		.uleb128 0x8
 3097 0b51 0B       		.uleb128 0xb
 3098 0b52 6A010000 		.4byte	.LASF174
 3099 0b56 01       		.byte	0x1
 3100 0b57 A0       		.byte	0xa0
 3101 0b58 CE080000 		.4byte	0x8ce
 3102 0b5c 02       		.byte	0x2
 3103 0b5d 23       		.byte	0x23
 3104 0b5e 0C       		.uleb128 0xc
 3105 0b5f 0E       		.uleb128 0xe
 3106 0b60 53435200 		.ascii	"SCR\000"
 3107 0b64 01       		.byte	0x1
 3108 0b65 A1       		.byte	0xa1
 3109 0b66 CE080000 		.4byte	0x8ce
 3110 0b6a 02       		.byte	0x2
 3111 0b6b 23       		.byte	0x23
 3112 0b6c 10       		.uleb128 0x10
 3113 0b6d 0E       		.uleb128 0xe
 3114 0b6e 43435200 		.ascii	"CCR\000"
 3115 0b72 01       		.byte	0x1
 3116 0b73 A2       		.byte	0xa2
 3117 0b74 CE080000 		.4byte	0x8ce
 3118 0b78 02       		.byte	0x2
 3119 0b79 23       		.byte	0x23
 3120 0b7a 14       		.uleb128 0x14
 3121 0b7b 0E       		.uleb128 0xe
 3122 0b7c 53485000 		.ascii	"SHP\000"
 3123 0b80 01       		.byte	0x1
 3124 0b81 A3       		.byte	0xa3
 3125 0b82 420C0000 		.4byte	0xc42
 3126 0b86 02       		.byte	0x2
 3127 0b87 23       		.byte	0x23
 3128 0b88 18       		.uleb128 0x18
 3129 0b89 0B       		.uleb128 0xb
 3130 0b8a F3030000 		.4byte	.LASF175
 3131 0b8e 01       		.byte	0x1
 3132 0b8f A4       		.byte	0xa4
 3133 0b90 CE080000 		.4byte	0x8ce
 3134 0b94 02       		.byte	0x2
 3135 0b95 23       		.byte	0x23
 3136 0b96 24       		.uleb128 0x24
 3137 0b97 0B       		.uleb128 0xb
 3138 0b98 7A090000 		.4byte	.LASF176
 3139 0b9c 01       		.byte	0x1
ARM GAS  /tmp/ccn6Sm5M.s 			page 92


 3140 0b9d A5       		.byte	0xa5
 3141 0b9e CE080000 		.4byte	0x8ce
 3142 0ba2 02       		.byte	0x2
 3143 0ba3 23       		.byte	0x23
 3144 0ba4 28       		.uleb128 0x28
 3145 0ba5 0B       		.uleb128 0xb
 3146 0ba6 96030000 		.4byte	.LASF177
 3147 0baa 01       		.byte	0x1
 3148 0bab A6       		.byte	0xa6
 3149 0bac CE080000 		.4byte	0x8ce
 3150 0bb0 02       		.byte	0x2
 3151 0bb1 23       		.byte	0x23
 3152 0bb2 2C       		.uleb128 0x2c
 3153 0bb3 0B       		.uleb128 0xb
 3154 0bb4 51030000 		.4byte	.LASF178
 3155 0bb8 01       		.byte	0x1
 3156 0bb9 A7       		.byte	0xa7
 3157 0bba CE080000 		.4byte	0x8ce
 3158 0bbe 02       		.byte	0x2
 3159 0bbf 23       		.byte	0x23
 3160 0bc0 30       		.uleb128 0x30
 3161 0bc1 0B       		.uleb128 0xb
 3162 0bc2 2F0A0000 		.4byte	.LASF179
 3163 0bc6 01       		.byte	0x1
 3164 0bc7 A8       		.byte	0xa8
 3165 0bc8 CE080000 		.4byte	0x8ce
 3166 0bcc 02       		.byte	0x2
 3167 0bcd 23       		.byte	0x23
 3168 0bce 34       		.uleb128 0x34
 3169 0bcf 0B       		.uleb128 0xb
 3170 0bd0 F6070000 		.4byte	.LASF180
 3171 0bd4 01       		.byte	0x1
 3172 0bd5 A9       		.byte	0xa9
 3173 0bd6 CE080000 		.4byte	0x8ce
 3174 0bda 02       		.byte	0x2
 3175 0bdb 23       		.byte	0x23
 3176 0bdc 38       		.uleb128 0x38
 3177 0bdd 0B       		.uleb128 0xb
 3178 0bde 20090000 		.4byte	.LASF181
 3179 0be2 01       		.byte	0x1
 3180 0be3 AA       		.byte	0xaa
 3181 0be4 CE080000 		.4byte	0x8ce
 3182 0be8 02       		.byte	0x2
 3183 0be9 23       		.byte	0x23
 3184 0bea 3C       		.uleb128 0x3c
 3185 0beb 0E       		.uleb128 0xe
 3186 0bec 50465200 		.ascii	"PFR\000"
 3187 0bf0 01       		.byte	0x1
 3188 0bf1 AB       		.byte	0xab
 3189 0bf2 570C0000 		.4byte	0xc57
 3190 0bf6 02       		.byte	0x2
 3191 0bf7 23       		.byte	0x23
 3192 0bf8 40       		.uleb128 0x40
 3193 0bf9 0E       		.uleb128 0xe
 3194 0bfa 44465200 		.ascii	"DFR\000"
 3195 0bfe 01       		.byte	0x1
 3196 0bff AC       		.byte	0xac
ARM GAS  /tmp/ccn6Sm5M.s 			page 93


 3197 0c00 C4080000 		.4byte	0x8c4
 3198 0c04 02       		.byte	0x2
 3199 0c05 23       		.byte	0x23
 3200 0c06 48       		.uleb128 0x48
 3201 0c07 0E       		.uleb128 0xe
 3202 0c08 41445200 		.ascii	"ADR\000"
 3203 0c0c 01       		.byte	0x1
 3204 0c0d AD       		.byte	0xad
 3205 0c0e C4080000 		.4byte	0x8c4
 3206 0c12 02       		.byte	0x2
 3207 0c13 23       		.byte	0x23
 3208 0c14 4C       		.uleb128 0x4c
 3209 0c15 0B       		.uleb128 0xb
 3210 0c16 240A0000 		.4byte	.LASF182
 3211 0c1a 01       		.byte	0x1
 3212 0c1b AE       		.byte	0xae
 3213 0c1c 710C0000 		.4byte	0xc71
 3214 0c20 02       		.byte	0x2
 3215 0c21 23       		.byte	0x23
 3216 0c22 50       		.uleb128 0x50
 3217 0c23 0B       		.uleb128 0xb
 3218 0c24 6A0A0000 		.4byte	.LASF183
 3219 0c28 01       		.byte	0x1
 3220 0c29 AF       		.byte	0xaf
 3221 0c2a 8B0C0000 		.4byte	0xc8b
 3222 0c2e 02       		.byte	0x2
 3223 0c2f 23       		.byte	0x23
 3224 0c30 60       		.uleb128 0x60
 3225 0c31 00       		.byte	0
 3226 0c32 08       		.uleb128 0x8
 3227 0c33 98080000 		.4byte	0x898
 3228 0c37 420C0000 		.4byte	0xc42
 3229 0c3b 09       		.uleb128 0x9
 3230 0c3c 4C000000 		.4byte	0x4c
 3231 0c40 0B       		.byte	0xb
 3232 0c41 00       		.byte	0
 3233 0c42 19       		.uleb128 0x19
 3234 0c43 320C0000 		.4byte	0xc32
 3235 0c47 08       		.uleb128 0x8
 3236 0c48 B9080000 		.4byte	0x8b9
 3237 0c4c 570C0000 		.4byte	0xc57
 3238 0c50 09       		.uleb128 0x9
 3239 0c51 4C000000 		.4byte	0x4c
 3240 0c55 01       		.byte	0x1
 3241 0c56 00       		.byte	0
 3242 0c57 17       		.uleb128 0x17
 3243 0c58 5C0C0000 		.4byte	0xc5c
 3244 0c5c 19       		.uleb128 0x19
 3245 0c5d 470C0000 		.4byte	0xc47
 3246 0c61 08       		.uleb128 0x8
 3247 0c62 B9080000 		.4byte	0x8b9
 3248 0c66 710C0000 		.4byte	0xc71
 3249 0c6a 09       		.uleb128 0x9
 3250 0c6b 4C000000 		.4byte	0x4c
 3251 0c6f 03       		.byte	0x3
 3252 0c70 00       		.byte	0
 3253 0c71 17       		.uleb128 0x17
ARM GAS  /tmp/ccn6Sm5M.s 			page 94


 3254 0c72 760C0000 		.4byte	0xc76
 3255 0c76 19       		.uleb128 0x19
 3256 0c77 610C0000 		.4byte	0xc61
 3257 0c7b 08       		.uleb128 0x8
 3258 0c7c B9080000 		.4byte	0x8b9
 3259 0c80 8B0C0000 		.4byte	0xc8b
 3260 0c84 09       		.uleb128 0x9
 3261 0c85 4C000000 		.4byte	0x4c
 3262 0c89 04       		.byte	0x4
 3263 0c8a 00       		.byte	0
 3264 0c8b 17       		.uleb128 0x17
 3265 0c8c 900C0000 		.4byte	0xc90
 3266 0c90 19       		.uleb128 0x19
 3267 0c91 7B0C0000 		.4byte	0xc7b
 3268 0c95 04       		.uleb128 0x4
 3269 0c96 3A030000 		.4byte	.LASF184
 3270 0c9a 01       		.byte	0x1
 3271 0c9b B0       		.byte	0xb0
 3272 0c9c 1F0B0000 		.4byte	0xb1f
 3273 0ca0 19       		.uleb128 0x19
 3274 0ca1 01010000 		.4byte	0x101
 3275 0ca5 17       		.uleb128 0x17
 3276 0ca6 A00C0000 		.4byte	0xca0
 3277 0caa 08       		.uleb128 0x8
 3278 0cab 01010000 		.4byte	0x101
 3279 0caf BA0C0000 		.4byte	0xcba
 3280 0cb3 09       		.uleb128 0x9
 3281 0cb4 4C000000 		.4byte	0x4c
 3282 0cb8 12       		.byte	0x12
 3283 0cb9 00       		.byte	0
 3284 0cba 1C       		.uleb128 0x1c
 3285 0cbb 2801     		.2byte	0x128
 3286 0cbd 08       		.byte	0x8
 3287 0cbe EF       		.byte	0xef
 3288 0cbf E00E0000 		.4byte	0xee0
 3289 0cc3 0B       		.uleb128 0xb
 3290 0cc4 A40A0000 		.4byte	.LASF185
 3291 0cc8 08       		.byte	0x8
 3292 0cc9 F0       		.byte	0xf0
 3293 0cca A00C0000 		.4byte	0xca0
 3294 0cce 02       		.byte	0x2
 3295 0ccf 23       		.byte	0x23
 3296 0cd0 00       		.uleb128 0
 3297 0cd1 0B       		.uleb128 0xb
 3298 0cd2 7B050000 		.4byte	.LASF186
 3299 0cd6 08       		.byte	0x8
 3300 0cd7 F1       		.byte	0xf1
 3301 0cd8 A00C0000 		.4byte	0xca0
 3302 0cdc 02       		.byte	0x2
 3303 0cdd 23       		.byte	0x23
 3304 0cde 04       		.uleb128 0x4
 3305 0cdf 0B       		.uleb128 0xb
 3306 0ce0 25090000 		.4byte	.LASF187
 3307 0ce4 08       		.byte	0x8
 3308 0ce5 F2       		.byte	0xf2
 3309 0ce6 A00C0000 		.4byte	0xca0
 3310 0cea 02       		.byte	0x2
ARM GAS  /tmp/ccn6Sm5M.s 			page 95


 3311 0ceb 23       		.byte	0x23
 3312 0cec 08       		.uleb128 0x8
 3313 0ced 0B       		.uleb128 0xb
 3314 0cee 2F090000 		.4byte	.LASF188
 3315 0cf2 08       		.byte	0x8
 3316 0cf3 F3       		.byte	0xf3
 3317 0cf4 A00C0000 		.4byte	0xca0
 3318 0cf8 02       		.byte	0x2
 3319 0cf9 23       		.byte	0x23
 3320 0cfa 0C       		.uleb128 0xc
 3321 0cfb 0B       		.uleb128 0xb
 3322 0cfc D70B0000 		.4byte	.LASF189
 3323 0d00 08       		.byte	0x8
 3324 0d01 F4       		.byte	0xf4
 3325 0d02 A00C0000 		.4byte	0xca0
 3326 0d06 02       		.byte	0x2
 3327 0d07 23       		.byte	0x23
 3328 0d08 10       		.uleb128 0x10
 3329 0d09 0B       		.uleb128 0xb
 3330 0d0a 6E0B0000 		.4byte	.LASF190
 3331 0d0e 08       		.byte	0x8
 3332 0d0f F5       		.byte	0xf5
 3333 0d10 A00C0000 		.4byte	0xca0
 3334 0d14 02       		.byte	0x2
 3335 0d15 23       		.byte	0x23
 3336 0d16 14       		.uleb128 0x14
 3337 0d17 0B       		.uleb128 0xb
 3338 0d18 C4040000 		.4byte	.LASF191
 3339 0d1c 08       		.byte	0x8
 3340 0d1d F6       		.byte	0xf6
 3341 0d1e A50C0000 		.4byte	0xca5
 3342 0d22 02       		.byte	0x2
 3343 0d23 23       		.byte	0x23
 3344 0d24 18       		.uleb128 0x18
 3345 0d25 0B       		.uleb128 0xb
 3346 0d26 66090000 		.4byte	.LASF192
 3347 0d2a 08       		.byte	0x8
 3348 0d2b F7       		.byte	0xf7
 3349 0d2c F00E0000 		.4byte	0xef0
 3350 0d30 02       		.byte	0x2
 3351 0d31 23       		.byte	0x23
 3352 0d32 1C       		.uleb128 0x1c
 3353 0d33 0B       		.uleb128 0xb
 3354 0d34 82050000 		.4byte	.LASF193
 3355 0d38 08       		.byte	0x8
 3356 0d39 F8       		.byte	0xf8
 3357 0d3a A50C0000 		.4byte	0xca5
 3358 0d3e 02       		.byte	0x2
 3359 0d3f 23       		.byte	0x23
 3360 0d40 20       		.uleb128 0x20
 3361 0d41 0B       		.uleb128 0xb
 3362 0d42 39070000 		.4byte	.LASF194
 3363 0d46 08       		.byte	0x8
 3364 0d47 F9       		.byte	0xf9
 3365 0d48 A00C0000 		.4byte	0xca0
 3366 0d4c 02       		.byte	0x2
 3367 0d4d 23       		.byte	0x23
ARM GAS  /tmp/ccn6Sm5M.s 			page 96


 3368 0d4e 24       		.uleb128 0x24
 3369 0d4f 0B       		.uleb128 0xb
 3370 0d50 E8060000 		.4byte	.LASF195
 3371 0d54 08       		.byte	0x8
 3372 0d55 FA       		.byte	0xfa
 3373 0d56 A00C0000 		.4byte	0xca0
 3374 0d5a 02       		.byte	0x2
 3375 0d5b 23       		.byte	0x23
 3376 0d5c 28       		.uleb128 0x28
 3377 0d5d 0B       		.uleb128 0xb
 3378 0d5e 9C0A0000 		.4byte	.LASF196
 3379 0d62 08       		.byte	0x8
 3380 0d63 FB       		.byte	0xfb
 3381 0d64 A50C0000 		.4byte	0xca5
 3382 0d68 02       		.byte	0x2
 3383 0d69 23       		.byte	0x23
 3384 0d6a 2C       		.uleb128 0x2c
 3385 0d6b 0B       		.uleb128 0xb
 3386 0d6c 82000000 		.4byte	.LASF197
 3387 0d70 08       		.byte	0x8
 3388 0d71 FC       		.byte	0xfc
 3389 0d72 A50C0000 		.4byte	0xca5
 3390 0d76 02       		.byte	0x2
 3391 0d77 23       		.byte	0x23
 3392 0d78 30       		.uleb128 0x30
 3393 0d79 0B       		.uleb128 0xb
 3394 0d7a 70090000 		.4byte	.LASF198
 3395 0d7e 08       		.byte	0x8
 3396 0d7f FD       		.byte	0xfd
 3397 0d80 050F0000 		.4byte	0xf05
 3398 0d84 02       		.byte	0x2
 3399 0d85 23       		.byte	0x23
 3400 0d86 34       		.uleb128 0x34
 3401 0d87 0B       		.uleb128 0xb
 3402 0d88 6F0A0000 		.4byte	.LASF199
 3403 0d8c 08       		.byte	0x8
 3404 0d8d FE       		.byte	0xfe
 3405 0d8e A50C0000 		.4byte	0xca5
 3406 0d92 02       		.byte	0x2
 3407 0d93 23       		.byte	0x23
 3408 0d94 3C       		.uleb128 0x3c
 3409 0d95 0B       		.uleb128 0xb
 3410 0d96 7A000000 		.4byte	.LASF200
 3411 0d9a 08       		.byte	0x8
 3412 0d9b FF       		.byte	0xff
 3413 0d9c A00C0000 		.4byte	0xca0
 3414 0da0 02       		.byte	0x2
 3415 0da1 23       		.byte	0x23
 3416 0da2 40       		.uleb128 0x40
 3417 0da3 13       		.uleb128 0x13
 3418 0da4 ED0B0000 		.4byte	.LASF201
 3419 0da8 08       		.byte	0x8
 3420 0da9 0001     		.2byte	0x100
 3421 0dab A00C0000 		.4byte	0xca0
 3422 0daf 02       		.byte	0x2
 3423 0db0 23       		.byte	0x23
 3424 0db1 44       		.uleb128 0x44
ARM GAS  /tmp/ccn6Sm5M.s 			page 97


 3425 0db2 13       		.uleb128 0x13
 3426 0db3 62050000 		.4byte	.LASF202
 3427 0db7 08       		.byte	0x8
 3428 0db8 0101     		.2byte	0x101
 3429 0dba A00C0000 		.4byte	0xca0
 3430 0dbe 02       		.byte	0x2
 3431 0dbf 23       		.byte	0x23
 3432 0dc0 48       		.uleb128 0x48
 3433 0dc1 13       		.uleb128 0x13
 3434 0dc2 5E080000 		.4byte	.LASF203
 3435 0dc6 08       		.byte	0x8
 3436 0dc7 0201     		.2byte	0x102
 3437 0dc9 A00C0000 		.4byte	0xca0
 3438 0dcd 02       		.byte	0x2
 3439 0dce 23       		.byte	0x23
 3440 0dcf 4C       		.uleb128 0x4c
 3441 0dd0 13       		.uleb128 0x13
 3442 0dd1 F9030000 		.4byte	.LASF204
 3443 0dd5 08       		.byte	0x8
 3444 0dd6 0301     		.2byte	0x103
 3445 0dd8 1A0F0000 		.4byte	0xf1a
 3446 0ddc 02       		.byte	0x2
 3447 0ddd 23       		.byte	0x23
 3448 0dde 50       		.uleb128 0x50
 3449 0ddf 13       		.uleb128 0x13
 3450 0de0 E8000000 		.4byte	.LASF205
 3451 0de4 08       		.byte	0x8
 3452 0de5 0401     		.2byte	0x104
 3453 0de7 240F0000 		.4byte	0xf24
 3454 0deb 03       		.byte	0x3
 3455 0dec 23       		.byte	0x23
 3456 0ded 9001     		.uleb128 0x90
 3457 0def 13       		.uleb128 0x13
 3458 0df0 5E0B0000 		.4byte	.LASF206
 3459 0df4 08       		.byte	0x8
 3460 0df5 0501     		.2byte	0x105
 3461 0df7 A00C0000 		.4byte	0xca0
 3462 0dfb 03       		.byte	0x3
 3463 0dfc 23       		.byte	0x23
 3464 0dfd 9401     		.uleb128 0x94
 3465 0dff 13       		.uleb128 0x13
 3466 0e00 7F090000 		.4byte	.LASF207
 3467 0e04 08       		.byte	0x8
 3468 0e05 0601     		.2byte	0x106
 3469 0e07 290F0000 		.4byte	0xf29
 3470 0e0b 03       		.byte	0x3
 3471 0e0c 23       		.byte	0x23
 3472 0e0d 9801     		.uleb128 0x98
 3473 0e0f 13       		.uleb128 0x13
 3474 0e10 970B0000 		.4byte	.LASF208
 3475 0e14 08       		.byte	0x8
 3476 0e15 0701     		.2byte	0x107
 3477 0e17 A00C0000 		.4byte	0xca0
 3478 0e1b 03       		.byte	0x3
 3479 0e1c 23       		.byte	0x23
 3480 0e1d E401     		.uleb128 0xe4
 3481 0e1f 13       		.uleb128 0x13
ARM GAS  /tmp/ccn6Sm5M.s 			page 98


 3482 0e20 4D010000 		.4byte	.LASF209
 3483 0e24 08       		.byte	0x8
 3484 0e25 0801     		.2byte	0x108
 3485 0e27 A50C0000 		.4byte	0xca5
 3486 0e2b 03       		.byte	0x3
 3487 0e2c 23       		.byte	0x23
 3488 0e2d E801     		.uleb128 0xe8
 3489 0e2f 13       		.uleb128 0x13
 3490 0e30 89090000 		.4byte	.LASF210
 3491 0e34 08       		.byte	0x8
 3492 0e35 0901     		.2byte	0x109
 3493 0e37 3E0F0000 		.4byte	0xf3e
 3494 0e3b 03       		.byte	0x3
 3495 0e3c 23       		.byte	0x23
 3496 0e3d EC01     		.uleb128 0xec
 3497 0e3f 13       		.uleb128 0x13
 3498 0e40 02010000 		.4byte	.LASF211
 3499 0e44 08       		.byte	0x8
 3500 0e45 0A01     		.2byte	0x10a
 3501 0e47 A00C0000 		.4byte	0xca0
 3502 0e4b 03       		.byte	0x3
 3503 0e4c 23       		.byte	0x23
 3504 0e4d 8002     		.uleb128 0x100
 3505 0e4f 13       		.uleb128 0x13
 3506 0e50 E4030000 		.4byte	.LASF212
 3507 0e54 08       		.byte	0x8
 3508 0e55 0B01     		.2byte	0x10b
 3509 0e57 A00C0000 		.4byte	0xca0
 3510 0e5b 03       		.byte	0x3
 3511 0e5c 23       		.byte	0x23
 3512 0e5d 8402     		.uleb128 0x104
 3513 0e5f 13       		.uleb128 0x13
 3514 0e60 ED010000 		.4byte	.LASF213
 3515 0e64 08       		.byte	0x8
 3516 0e65 0C01     		.2byte	0x10c
 3517 0e67 A00C0000 		.4byte	0xca0
 3518 0e6b 03       		.byte	0x3
 3519 0e6c 23       		.byte	0x23
 3520 0e6d 8802     		.uleb128 0x108
 3521 0e6f 13       		.uleb128 0x13
 3522 0e70 D2080000 		.4byte	.LASF214
 3523 0e74 08       		.byte	0x8
 3524 0e75 0D01     		.2byte	0x10d
 3525 0e77 A00C0000 		.4byte	0xca0
 3526 0e7b 03       		.byte	0x3
 3527 0e7c 23       		.byte	0x23
 3528 0e7d 8C02     		.uleb128 0x10c
 3529 0e7f 13       		.uleb128 0x13
 3530 0e80 14010000 		.4byte	.LASF215
 3531 0e84 08       		.byte	0x8
 3532 0e85 0E01     		.2byte	0x10e
 3533 0e87 A00C0000 		.4byte	0xca0
 3534 0e8b 03       		.byte	0x3
 3535 0e8c 23       		.byte	0x23
 3536 0e8d 9002     		.uleb128 0x110
 3537 0e8f 13       		.uleb128 0x13
 3538 0e90 E2070000 		.4byte	.LASF216
ARM GAS  /tmp/ccn6Sm5M.s 			page 99


 3539 0e94 08       		.byte	0x8
 3540 0e95 0F01     		.2byte	0x10f
 3541 0e97 A00C0000 		.4byte	0xca0
 3542 0e9b 03       		.byte	0x3
 3543 0e9c 23       		.byte	0x23
 3544 0e9d 9402     		.uleb128 0x114
 3545 0e9f 13       		.uleb128 0x13
 3546 0ea0 2A010000 		.4byte	.LASF217
 3547 0ea4 08       		.byte	0x8
 3548 0ea5 1001     		.2byte	0x110
 3549 0ea7 A00C0000 		.4byte	0xca0
 3550 0eab 03       		.byte	0x3
 3551 0eac 23       		.byte	0x23
 3552 0ead 9802     		.uleb128 0x118
 3553 0eaf 13       		.uleb128 0x13
 3554 0eb0 09080000 		.4byte	.LASF218
 3555 0eb4 08       		.byte	0x8
 3556 0eb5 1101     		.2byte	0x111
 3557 0eb7 A00C0000 		.4byte	0xca0
 3558 0ebb 03       		.byte	0x3
 3559 0ebc 23       		.byte	0x23
 3560 0ebd 9C02     		.uleb128 0x11c
 3561 0ebf 13       		.uleb128 0x13
 3562 0ec0 BE0A0000 		.4byte	.LASF219
 3563 0ec4 08       		.byte	0x8
 3564 0ec5 1201     		.2byte	0x112
 3565 0ec7 A00C0000 		.4byte	0xca0
 3566 0ecb 03       		.byte	0x3
 3567 0ecc 23       		.byte	0x23
 3568 0ecd A002     		.uleb128 0x120
 3569 0ecf 13       		.uleb128 0x13
 3570 0ed0 7B040000 		.4byte	.LASF220
 3571 0ed4 08       		.byte	0x8
 3572 0ed5 1301     		.2byte	0x113
 3573 0ed7 A50C0000 		.4byte	0xca5
 3574 0edb 03       		.byte	0x3
 3575 0edc 23       		.byte	0x23
 3576 0edd A402     		.uleb128 0x124
 3577 0edf 00       		.byte	0
 3578 0ee0 08       		.uleb128 0x8
 3579 0ee1 01010000 		.4byte	0x101
 3580 0ee5 F00E0000 		.4byte	0xef0
 3581 0ee9 09       		.uleb128 0x9
 3582 0eea 4C000000 		.4byte	0x4c
 3583 0eee 00       		.byte	0
 3584 0eef 00       		.byte	0
 3585 0ef0 19       		.uleb128 0x19
 3586 0ef1 E00E0000 		.4byte	0xee0
 3587 0ef5 08       		.uleb128 0x8
 3588 0ef6 01010000 		.4byte	0x101
 3589 0efa 050F0000 		.4byte	0xf05
 3590 0efe 09       		.uleb128 0x9
 3591 0eff 4C000000 		.4byte	0x4c
 3592 0f03 01       		.byte	0x1
 3593 0f04 00       		.byte	0
 3594 0f05 19       		.uleb128 0x19
 3595 0f06 F50E0000 		.4byte	0xef5
ARM GAS  /tmp/ccn6Sm5M.s 			page 100


 3596 0f0a 08       		.uleb128 0x8
 3597 0f0b 01010000 		.4byte	0x101
 3598 0f0f 1A0F0000 		.4byte	0xf1a
 3599 0f13 09       		.uleb128 0x9
 3600 0f14 4C000000 		.4byte	0x4c
 3601 0f18 0F       		.byte	0xf
 3602 0f19 00       		.byte	0
 3603 0f1a 17       		.uleb128 0x17
 3604 0f1b 1F0F0000 		.4byte	0xf1f
 3605 0f1f 19       		.uleb128 0x19
 3606 0f20 0A0F0000 		.4byte	0xf0a
 3607 0f24 19       		.uleb128 0x19
 3608 0f25 E00E0000 		.4byte	0xee0
 3609 0f29 19       		.uleb128 0x19
 3610 0f2a AA0C0000 		.4byte	0xcaa
 3611 0f2e 08       		.uleb128 0x8
 3612 0f2f 01010000 		.4byte	0x101
 3613 0f33 3E0F0000 		.4byte	0xf3e
 3614 0f37 09       		.uleb128 0x9
 3615 0f38 4C000000 		.4byte	0x4c
 3616 0f3c 04       		.byte	0x4
 3617 0f3d 00       		.byte	0
 3618 0f3e 19       		.uleb128 0x19
 3619 0f3f 2E0F0000 		.4byte	0xf2e
 3620 0f43 1E       		.uleb128 0x1e
 3621 0f44 41646300 		.ascii	"Adc\000"
 3622 0f48 08       		.byte	0x8
 3623 0f49 1401     		.2byte	0x114
 3624 0f4b BA0C0000 		.4byte	0xcba
 3625 0f4f 08       		.uleb128 0x8
 3626 0f50 01010000 		.4byte	0x101
 3627 0f54 5F0F0000 		.4byte	0xf5f
 3628 0f58 09       		.uleb128 0x9
 3629 0f59 4C000000 		.4byte	0x4c
 3630 0f5d 03       		.byte	0x3
 3631 0f5e 00       		.byte	0
 3632 0f5f 08       		.uleb128 0x8
 3633 0f60 01010000 		.4byte	0x101
 3634 0f64 6F0F0000 		.4byte	0xf6f
 3635 0f68 09       		.uleb128 0x9
 3636 0f69 4C000000 		.4byte	0x4c
 3637 0f6d 0B       		.byte	0xb
 3638 0f6e 00       		.byte	0
 3639 0f6f 08       		.uleb128 0x8
 3640 0f70 01010000 		.4byte	0x101
 3641 0f74 7F0F0000 		.4byte	0xf7f
 3642 0f78 09       		.uleb128 0x9
 3643 0f79 4C000000 		.4byte	0x4c
 3644 0f7d 0A       		.byte	0xa
 3645 0f7e 00       		.byte	0
 3646 0f7f 08       		.uleb128 0x8
 3647 0f80 01010000 		.4byte	0x101
 3648 0f84 8F0F0000 		.4byte	0xf8f
 3649 0f88 09       		.uleb128 0x9
 3650 0f89 4C000000 		.4byte	0x4c
 3651 0f8d 02       		.byte	0x2
 3652 0f8e 00       		.byte	0
ARM GAS  /tmp/ccn6Sm5M.s 			page 101


 3653 0f8f 1F       		.uleb128 0x1f
 3654 0f90 20       		.byte	0x20
 3655 0f91 08       		.byte	0x8
 3656 0f92 050F     		.2byte	0xf05
 3657 0f94 11100000 		.4byte	0x1011
 3658 0f98 13       		.uleb128 0x13
 3659 0f99 1C0A0000 		.4byte	.LASF221
 3660 0f9d 08       		.byte	0x8
 3661 0f9e 060F     		.2byte	0xf06
 3662 0fa0 A00C0000 		.4byte	0xca0
 3663 0fa4 02       		.byte	0x2
 3664 0fa5 23       		.byte	0x23
 3665 0fa6 00       		.uleb128 0
 3666 0fa7 13       		.uleb128 0x13
 3667 0fa8 F0060000 		.4byte	.LASF222
 3668 0fac 08       		.byte	0x8
 3669 0fad 070F     		.2byte	0xf07
 3670 0faf A00C0000 		.4byte	0xca0
 3671 0fb3 02       		.byte	0x2
 3672 0fb4 23       		.byte	0x23
 3673 0fb5 04       		.uleb128 0x4
 3674 0fb6 13       		.uleb128 0x13
 3675 0fb7 2D060000 		.4byte	.LASF223
 3676 0fbb 08       		.byte	0x8
 3677 0fbc 080F     		.2byte	0xf08
 3678 0fbe A00C0000 		.4byte	0xca0
 3679 0fc2 02       		.byte	0x2
 3680 0fc3 23       		.byte	0x23
 3681 0fc4 08       		.uleb128 0x8
 3682 0fc5 13       		.uleb128 0x13
 3683 0fc6 270B0000 		.4byte	.LASF224
 3684 0fca 08       		.byte	0x8
 3685 0fcb 090F     		.2byte	0xf09
 3686 0fcd A00C0000 		.4byte	0xca0
 3687 0fd1 02       		.byte	0x2
 3688 0fd2 23       		.byte	0x23
 3689 0fd3 0C       		.uleb128 0xc
 3690 0fd4 13       		.uleb128 0x13
 3691 0fd5 F30A0000 		.4byte	.LASF225
 3692 0fd9 08       		.byte	0x8
 3693 0fda 0A0F     		.2byte	0xf0a
 3694 0fdc A00C0000 		.4byte	0xca0
 3695 0fe0 02       		.byte	0x2
 3696 0fe1 23       		.byte	0x23
 3697 0fe2 10       		.uleb128 0x10
 3698 0fe3 13       		.uleb128 0x13
 3699 0fe4 C9010000 		.4byte	.LASF226
 3700 0fe8 08       		.byte	0x8
 3701 0fe9 0B0F     		.2byte	0xf0b
 3702 0feb A00C0000 		.4byte	0xca0
 3703 0fef 02       		.byte	0x2
 3704 0ff0 23       		.byte	0x23
 3705 0ff1 14       		.uleb128 0x14
 3706 0ff2 13       		.uleb128 0x13
 3707 0ff3 8B0A0000 		.4byte	.LASF227
 3708 0ff7 08       		.byte	0x8
 3709 0ff8 0C0F     		.2byte	0xf0c
ARM GAS  /tmp/ccn6Sm5M.s 			page 102


 3710 0ffa A00C0000 		.4byte	0xca0
 3711 0ffe 02       		.byte	0x2
 3712 0fff 23       		.byte	0x23
 3713 1000 18       		.uleb128 0x18
 3714 1001 13       		.uleb128 0x13
 3715 1002 000C0000 		.4byte	.LASF228
 3716 1006 08       		.byte	0x8
 3717 1007 0D0F     		.2byte	0xf0d
 3718 1009 A00C0000 		.4byte	0xca0
 3719 100d 02       		.byte	0x2
 3720 100e 23       		.byte	0x23
 3721 100f 1C       		.uleb128 0x1c
 3722 1010 00       		.byte	0
 3723 1011 05       		.uleb128 0x5
 3724 1012 78030000 		.4byte	.LASF229
 3725 1016 08       		.byte	0x8
 3726 1017 0E0F     		.2byte	0xf0e
 3727 1019 8F0F0000 		.4byte	0xf8f
 3728 101d 1F       		.uleb128 0x1f
 3729 101e 10       		.byte	0x10
 3730 101f 08       		.byte	0x8
 3731 1020 100F     		.2byte	0xf10
 3732 1022 63100000 		.4byte	0x1063
 3733 1026 13       		.uleb128 0x13
 3734 1027 4C0B0000 		.4byte	.LASF230
 3735 102b 08       		.byte	0x8
 3736 102c 110F     		.2byte	0xf11
 3737 102e A00C0000 		.4byte	0xca0
 3738 1032 02       		.byte	0x2
 3739 1033 23       		.byte	0x23
 3740 1034 00       		.uleb128 0
 3741 1035 13       		.uleb128 0x13
 3742 1036 EC040000 		.4byte	.LASF231
 3743 103a 08       		.byte	0x8
 3744 103b 120F     		.2byte	0xf12
 3745 103d A00C0000 		.4byte	0xca0
 3746 1041 02       		.byte	0x2
 3747 1042 23       		.byte	0x23
 3748 1043 04       		.uleb128 0x4
 3749 1044 13       		.uleb128 0x13
 3750 1045 390B0000 		.4byte	.LASF232
 3751 1049 08       		.byte	0x8
 3752 104a 130F     		.2byte	0xf13
 3753 104c A00C0000 		.4byte	0xca0
 3754 1050 02       		.byte	0x2
 3755 1051 23       		.byte	0x23
 3756 1052 08       		.uleb128 0x8
 3757 1053 13       		.uleb128 0x13
 3758 1054 D70A0000 		.4byte	.LASF233
 3759 1058 08       		.byte	0x8
 3760 1059 140F     		.2byte	0xf14
 3761 105b A00C0000 		.4byte	0xca0
 3762 105f 02       		.byte	0x2
 3763 1060 23       		.byte	0x23
 3764 1061 0C       		.uleb128 0xc
 3765 1062 00       		.byte	0
 3766 1063 05       		.uleb128 0x5
ARM GAS  /tmp/ccn6Sm5M.s 			page 103


 3767 1064 45090000 		.4byte	.LASF234
 3768 1068 08       		.byte	0x8
 3769 1069 150F     		.2byte	0xf15
 3770 106b 1D100000 		.4byte	0x101d
 3771 106f 20       		.uleb128 0x20
 3772 1070 8002     		.2byte	0x280
 3773 1072 08       		.byte	0x8
 3774 1073 170F     		.2byte	0xf17
 3775 1075 7C130000 		.4byte	0x137c
 3776 1079 13       		.uleb128 0x13
 3777 107a 11090000 		.4byte	.LASF235
 3778 107e 08       		.byte	0x8
 3779 107f 180F     		.2byte	0xf18
 3780 1081 A00C0000 		.4byte	0xca0
 3781 1085 02       		.byte	0x2
 3782 1086 23       		.byte	0x23
 3783 1087 00       		.uleb128 0
 3784 1088 13       		.uleb128 0x13
 3785 1089 C8020000 		.4byte	.LASF236
 3786 108d 08       		.byte	0x8
 3787 108e 190F     		.2byte	0xf19
 3788 1090 A00C0000 		.4byte	0xca0
 3789 1094 02       		.byte	0x2
 3790 1095 23       		.byte	0x23
 3791 1096 04       		.uleb128 0x4
 3792 1097 13       		.uleb128 0x13
 3793 1098 CF0A0000 		.4byte	.LASF237
 3794 109c 08       		.byte	0x8
 3795 109d 1A0F     		.2byte	0xf1a
 3796 109f A00C0000 		.4byte	0xca0
 3797 10a3 02       		.byte	0x2
 3798 10a4 23       		.byte	0x23
 3799 10a5 08       		.uleb128 0x8
 3800 10a6 13       		.uleb128 0x13
 3801 10a7 EC030000 		.4byte	.LASF238
 3802 10ab 08       		.byte	0x8
 3803 10ac 1B0F     		.2byte	0xf1b
 3804 10ae A50C0000 		.4byte	0xca5
 3805 10b2 02       		.byte	0x2
 3806 10b3 23       		.byte	0x23
 3807 10b4 0C       		.uleb128 0xc
 3808 10b5 13       		.uleb128 0x13
 3809 10b6 4C000000 		.4byte	.LASF239
 3810 10ba 08       		.byte	0x8
 3811 10bb 1C0F     		.2byte	0xf1c
 3812 10bd A00C0000 		.4byte	0xca0
 3813 10c1 02       		.byte	0x2
 3814 10c2 23       		.byte	0x23
 3815 10c3 10       		.uleb128 0x10
 3816 10c4 13       		.uleb128 0x13
 3817 10c5 1B060000 		.4byte	.LASF240
 3818 10c9 08       		.byte	0x8
 3819 10ca 1D0F     		.2byte	0xf1d
 3820 10cc A00C0000 		.4byte	0xca0
 3821 10d0 02       		.byte	0x2
 3822 10d1 23       		.byte	0x23
 3823 10d2 14       		.uleb128 0x14
ARM GAS  /tmp/ccn6Sm5M.s 			page 104


 3824 10d3 13       		.uleb128 0x13
 3825 10d4 B6030000 		.4byte	.LASF241
 3826 10d8 08       		.byte	0x8
 3827 10d9 1E0F     		.2byte	0xf1e
 3828 10db A50C0000 		.4byte	0xca5
 3829 10df 02       		.byte	0x2
 3830 10e0 23       		.byte	0x23
 3831 10e1 18       		.uleb128 0x18
 3832 10e2 13       		.uleb128 0x13
 3833 10e3 93060000 		.4byte	.LASF242
 3834 10e7 08       		.byte	0x8
 3835 10e8 1F0F     		.2byte	0xf1f
 3836 10ea A50C0000 		.4byte	0xca5
 3837 10ee 02       		.byte	0x2
 3838 10ef 23       		.byte	0x23
 3839 10f0 1C       		.uleb128 0x1c
 3840 10f1 13       		.uleb128 0x13
 3841 10f2 30080000 		.4byte	.LASF243
 3842 10f6 08       		.byte	0x8
 3843 10f7 200F     		.2byte	0xf20
 3844 10f9 A00C0000 		.4byte	0xca0
 3845 10fd 02       		.byte	0x2
 3846 10fe 23       		.byte	0x23
 3847 10ff 20       		.uleb128 0x20
 3848 1100 13       		.uleb128 0x13
 3849 1101 66090000 		.4byte	.LASF192
 3850 1105 08       		.byte	0x8
 3851 1106 210F     		.2byte	0xf21
 3852 1108 7C130000 		.4byte	0x137c
 3853 110c 02       		.byte	0x2
 3854 110d 23       		.byte	0x23
 3855 110e 24       		.uleb128 0x24
 3856 110f 13       		.uleb128 0x13
 3857 1110 130C0000 		.4byte	.LASF244
 3858 1114 08       		.byte	0x8
 3859 1115 220F     		.2byte	0xf22
 3860 1117 A00C0000 		.4byte	0xca0
 3861 111b 02       		.byte	0x2
 3862 111c 23       		.byte	0x23
 3863 111d 28       		.uleb128 0x28
 3864 111e 13       		.uleb128 0x13
 3865 111f AA050000 		.4byte	.LASF245
 3866 1123 08       		.byte	0x8
 3867 1124 230F     		.2byte	0xf23
 3868 1126 A00C0000 		.4byte	0xca0
 3869 112a 02       		.byte	0x2
 3870 112b 23       		.byte	0x23
 3871 112c 2C       		.uleb128 0x2c
 3872 112d 13       		.uleb128 0x13
 3873 112e 9B030000 		.4byte	.LASF246
 3874 1132 08       		.byte	0x8
 3875 1133 240F     		.2byte	0xf24
 3876 1135 A00C0000 		.4byte	0xca0
 3877 1139 02       		.byte	0x2
 3878 113a 23       		.byte	0x23
 3879 113b 30       		.uleb128 0x30
 3880 113c 13       		.uleb128 0x13
ARM GAS  /tmp/ccn6Sm5M.s 			page 105


 3881 113d 4D080000 		.4byte	.LASF247
 3882 1141 08       		.byte	0x8
 3883 1142 250F     		.2byte	0xf25
 3884 1144 A00C0000 		.4byte	0xca0
 3885 1148 02       		.byte	0x2
 3886 1149 23       		.byte	0x23
 3887 114a 34       		.uleb128 0x34
 3888 114b 13       		.uleb128 0x13
 3889 114c 24060000 		.4byte	.LASF248
 3890 1150 08       		.byte	0x8
 3891 1151 260F     		.2byte	0xf26
 3892 1153 A00C0000 		.4byte	0xca0
 3893 1157 02       		.byte	0x2
 3894 1158 23       		.byte	0x23
 3895 1159 38       		.uleb128 0x38
 3896 115a 13       		.uleb128 0x13
 3897 115b BF030000 		.4byte	.LASF249
 3898 115f 08       		.byte	0x8
 3899 1160 270F     		.2byte	0xf27
 3900 1162 A50C0000 		.4byte	0xca5
 3901 1166 02       		.byte	0x2
 3902 1167 23       		.byte	0x23
 3903 1168 3C       		.uleb128 0x3c
 3904 1169 13       		.uleb128 0x13
 3905 116a 9C060000 		.4byte	.LASF250
 3906 116e 08       		.byte	0x8
 3907 116f 280F     		.2byte	0xf28
 3908 1171 A50C0000 		.4byte	0xca5
 3909 1175 02       		.byte	0x2
 3910 1176 23       		.byte	0x23
 3911 1177 40       		.uleb128 0x40
 3912 1178 13       		.uleb128 0x13
 3913 1179 68030000 		.4byte	.LASF251
 3914 117d 08       		.byte	0x8
 3915 117e 290F     		.2byte	0xf29
 3916 1180 A00C0000 		.4byte	0xca0
 3917 1184 02       		.byte	0x2
 3918 1185 23       		.byte	0x23
 3919 1186 44       		.uleb128 0x44
 3920 1187 13       		.uleb128 0x13
 3921 1188 66020000 		.4byte	.LASF252
 3922 118c 08       		.byte	0x8
 3923 118d 2A0F     		.2byte	0xf2a
 3924 118f A00C0000 		.4byte	0xca0
 3925 1193 02       		.byte	0x2
 3926 1194 23       		.byte	0x23
 3927 1195 48       		.uleb128 0x48
 3928 1196 13       		.uleb128 0x13
 3929 1197 E4040000 		.4byte	.LASF253
 3930 119b 08       		.byte	0x8
 3931 119c 2B0F     		.2byte	0xf2b
 3932 119e A00C0000 		.4byte	0xca0
 3933 11a2 02       		.byte	0x2
 3934 11a3 23       		.byte	0x23
 3935 11a4 4C       		.uleb128 0x4c
 3936 11a5 13       		.uleb128 0x13
 3937 11a6 BC040000 		.4byte	.LASF254
ARM GAS  /tmp/ccn6Sm5M.s 			page 106


 3938 11aa 08       		.byte	0x8
 3939 11ab 2C0F     		.2byte	0xf2c
 3940 11ad A00C0000 		.4byte	0xca0
 3941 11b1 02       		.byte	0x2
 3942 11b2 23       		.byte	0x23
 3943 11b3 50       		.uleb128 0x50
 3944 11b4 13       		.uleb128 0x13
 3945 11b5 EB070000 		.4byte	.LASF255
 3946 11b9 08       		.byte	0x8
 3947 11ba 2D0F     		.2byte	0xf2d
 3948 11bc A00C0000 		.4byte	0xca0
 3949 11c0 02       		.byte	0x2
 3950 11c1 23       		.byte	0x23
 3951 11c2 54       		.uleb128 0x54
 3952 11c3 13       		.uleb128 0x13
 3953 11c4 47070000 		.4byte	.LASF256
 3954 11c8 08       		.byte	0x8
 3955 11c9 2E0F     		.2byte	0xf2e
 3956 11cb A00C0000 		.4byte	0xca0
 3957 11cf 02       		.byte	0x2
 3958 11d0 23       		.byte	0x23
 3959 11d1 58       		.uleb128 0x58
 3960 11d2 13       		.uleb128 0x13
 3961 11d3 B4040000 		.4byte	.LASF257
 3962 11d7 08       		.byte	0x8
 3963 11d8 2F0F     		.2byte	0xf2f
 3964 11da A00C0000 		.4byte	0xca0
 3965 11de 02       		.byte	0x2
 3966 11df 23       		.byte	0x23
 3967 11e0 5C       		.uleb128 0x5c
 3968 11e1 13       		.uleb128 0x13
 3969 11e2 83070000 		.4byte	.LASF258
 3970 11e6 08       		.byte	0x8
 3971 11e7 300F     		.2byte	0xf30
 3972 11e9 A50C0000 		.4byte	0xca5
 3973 11ed 02       		.byte	0x2
 3974 11ee 23       		.byte	0x23
 3975 11ef 60       		.uleb128 0x60
 3976 11f0 13       		.uleb128 0x13
 3977 11f1 D9000000 		.4byte	.LASF259
 3978 11f5 08       		.byte	0x8
 3979 11f6 310F     		.2byte	0xf31
 3980 11f8 A00C0000 		.4byte	0xca0
 3981 11fc 02       		.byte	0x2
 3982 11fd 23       		.byte	0x23
 3983 11fe 64       		.uleb128 0x64
 3984 11ff 13       		.uleb128 0x13
 3985 1200 EE020000 		.4byte	.LASF260
 3986 1204 08       		.byte	0x8
 3987 1205 320F     		.2byte	0xf32
 3988 1207 A00C0000 		.4byte	0xca0
 3989 120b 02       		.byte	0x2
 3990 120c 23       		.byte	0x23
 3991 120d 68       		.uleb128 0x68
 3992 120e 13       		.uleb128 0x13
 3993 120f C0020000 		.4byte	.LASF261
 3994 1213 08       		.byte	0x8
ARM GAS  /tmp/ccn6Sm5M.s 			page 107


 3995 1214 330F     		.2byte	0xf33
 3996 1216 A00C0000 		.4byte	0xca0
 3997 121a 02       		.byte	0x2
 3998 121b 23       		.byte	0x23
 3999 121c 6C       		.uleb128 0x6c
 4000 121d 13       		.uleb128 0x13
 4001 121e 70090000 		.4byte	.LASF198
 4002 1222 08       		.byte	0x8
 4003 1223 340F     		.2byte	0xf34
 4004 1225 81130000 		.4byte	0x1381
 4005 1229 02       		.byte	0x2
 4006 122a 23       		.byte	0x23
 4007 122b 70       		.uleb128 0x70
 4008 122c 13       		.uleb128 0x13
 4009 122d C8080000 		.4byte	.LASF262
 4010 1231 08       		.byte	0x8
 4011 1232 350F     		.2byte	0xf35
 4012 1234 86130000 		.4byte	0x1386
 4013 1238 02       		.byte	0x2
 4014 1239 23       		.byte	0x23
 4015 123a 7C       		.uleb128 0x7c
 4016 123b 13       		.uleb128 0x13
 4017 123c E8000000 		.4byte	.LASF205
 4018 1240 08       		.byte	0x8
 4019 1241 360F     		.2byte	0xf36
 4020 1243 8B130000 		.4byte	0x138b
 4021 1247 03       		.byte	0x3
 4022 1248 23       		.byte	0x23
 4023 1249 8401     		.uleb128 0x84
 4024 124b 13       		.uleb128 0x13
 4025 124c 81020000 		.4byte	.LASF263
 4026 1250 08       		.byte	0x8
 4027 1251 370F     		.2byte	0xf37
 4028 1253 A00C0000 		.4byte	0xca0
 4029 1257 03       		.byte	0x3
 4030 1258 23       		.byte	0x23
 4031 1259 B001     		.uleb128 0xb0
 4032 125b 13       		.uleb128 0x13
 4033 125c 7F090000 		.4byte	.LASF207
 4034 1260 08       		.byte	0x8
 4035 1261 380F     		.2byte	0xf38
 4036 1263 90130000 		.4byte	0x1390
 4037 1267 03       		.byte	0x3
 4038 1268 23       		.byte	0x23
 4039 1269 B401     		.uleb128 0xb4
 4040 126b 13       		.uleb128 0x13
 4041 126c 52060000 		.4byte	.LASF264
 4042 1270 08       		.byte	0x8
 4043 1271 390F     		.2byte	0xf39
 4044 1273 A00C0000 		.4byte	0xca0
 4045 1277 03       		.byte	0x3
 4046 1278 23       		.byte	0x23
 4047 1279 E401     		.uleb128 0xe4
 4048 127b 13       		.uleb128 0x13
 4049 127c 71000000 		.4byte	.LASF265
 4050 1280 08       		.byte	0x8
 4051 1281 3A0F     		.2byte	0xf3a
ARM GAS  /tmp/ccn6Sm5M.s 			page 108


 4052 1283 A50C0000 		.4byte	0xca5
 4053 1287 03       		.byte	0x3
 4054 1288 23       		.byte	0x23
 4055 1289 E801     		.uleb128 0xe8
 4056 128b 13       		.uleb128 0x13
 4057 128c 89090000 		.4byte	.LASF210
 4058 1290 08       		.byte	0x8
 4059 1291 3B0F     		.2byte	0xf3b
 4060 1293 95130000 		.4byte	0x1395
 4061 1297 03       		.byte	0x3
 4062 1298 23       		.byte	0x23
 4063 1299 EC01     		.uleb128 0xec
 4064 129b 13       		.uleb128 0x13
 4065 129c 770B0000 		.4byte	.LASF266
 4066 12a0 08       		.byte	0x8
 4067 12a1 3C0F     		.2byte	0xf3c
 4068 12a3 A00C0000 		.4byte	0xca0
 4069 12a7 03       		.byte	0x3
 4070 12a8 23       		.byte	0x23
 4071 12a9 8002     		.uleb128 0x100
 4072 12ab 13       		.uleb128 0x13
 4073 12ac 01060000 		.4byte	.LASF267
 4074 12b0 08       		.byte	0x8
 4075 12b1 3D0F     		.2byte	0xf3d
 4076 12b3 A00C0000 		.4byte	0xca0
 4077 12b7 03       		.byte	0x3
 4078 12b8 23       		.byte	0x23
 4079 12b9 8402     		.uleb128 0x104
 4080 12bb 13       		.uleb128 0x13
 4081 12bc D6030000 		.4byte	.LASF268
 4082 12c0 08       		.byte	0x8
 4083 12c1 3E0F     		.2byte	0xf3e
 4084 12c3 A00C0000 		.4byte	0xca0
 4085 12c7 03       		.byte	0x3
 4086 12c8 23       		.byte	0x23
 4087 12c9 8802     		.uleb128 0x108
 4088 12cb 13       		.uleb128 0x13
 4089 12cc C5000000 		.4byte	.LASF269
 4090 12d0 08       		.byte	0x8
 4091 12d1 3F0F     		.2byte	0xf3f
 4092 12d3 A00C0000 		.4byte	0xca0
 4093 12d7 03       		.byte	0x3
 4094 12d8 23       		.byte	0x23
 4095 12d9 8C02     		.uleb128 0x10c
 4096 12db 13       		.uleb128 0x13
 4097 12dc 21000000 		.4byte	.LASF270
 4098 12e0 08       		.byte	0x8
 4099 12e1 400F     		.2byte	0xf40
 4100 12e3 A00C0000 		.4byte	0xca0
 4101 12e7 03       		.byte	0x3
 4102 12e8 23       		.byte	0x23
 4103 12e9 9002     		.uleb128 0x110
 4104 12eb 13       		.uleb128 0x13
 4105 12ec 33010000 		.4byte	.LASF271
 4106 12f0 08       		.byte	0x8
 4107 12f1 410F     		.2byte	0xf41
 4108 12f3 A00C0000 		.4byte	0xca0
ARM GAS  /tmp/ccn6Sm5M.s 			page 109


 4109 12f7 03       		.byte	0x3
 4110 12f8 23       		.byte	0x23
 4111 12f9 9402     		.uleb128 0x114
 4112 12fb 13       		.uleb128 0x13
 4113 12fc 5F030000 		.4byte	.LASF272
 4114 1300 08       		.byte	0x8
 4115 1301 420F     		.2byte	0xf42
 4116 1303 A00C0000 		.4byte	0xca0
 4117 1307 03       		.byte	0x3
 4118 1308 23       		.byte	0x23
 4119 1309 9802     		.uleb128 0x118
 4120 130b 13       		.uleb128 0x13
 4121 130c 31050000 		.4byte	.LASF273
 4122 1310 08       		.byte	0x8
 4123 1311 430F     		.2byte	0xf43
 4124 1313 A00C0000 		.4byte	0xca0
 4125 1317 03       		.byte	0x3
 4126 1318 23       		.byte	0x23
 4127 1319 9C02     		.uleb128 0x11c
 4128 131b 13       		.uleb128 0x13
 4129 131c BD090000 		.4byte	.LASF274
 4130 1320 08       		.byte	0x8
 4131 1321 440F     		.2byte	0xf44
 4132 1323 A00C0000 		.4byte	0xca0
 4133 1327 03       		.byte	0x3
 4134 1328 23       		.byte	0x23
 4135 1329 A002     		.uleb128 0x120
 4136 132b 13       		.uleb128 0x13
 4137 132c AD030000 		.4byte	.LASF275
 4138 1330 08       		.byte	0x8
 4139 1331 450F     		.2byte	0xf45
 4140 1333 A50C0000 		.4byte	0xca5
 4141 1337 03       		.byte	0x3
 4142 1338 23       		.byte	0x23
 4143 1339 A402     		.uleb128 0x124
 4144 133b 13       		.uleb128 0x13
 4145 133c 93090000 		.4byte	.LASF276
 4146 1340 08       		.byte	0x8
 4147 1341 460F     		.2byte	0xf46
 4148 1343 9A130000 		.4byte	0x139a
 4149 1347 03       		.byte	0x3
 4150 1348 23       		.byte	0x23
 4151 1349 A802     		.uleb128 0x128
 4152 134b 13       		.uleb128 0x13
 4153 134c 140A0000 		.4byte	.LASF277
 4154 1350 08       		.byte	0x8
 4155 1351 470F     		.2byte	0xf47
 4156 1353 9F130000 		.4byte	0x139f
 4157 1357 03       		.byte	0x3
 4158 1358 23       		.byte	0x23
 4159 1359 B002     		.uleb128 0x130
 4160 135b 13       		.uleb128 0x13
 4161 135c F2000000 		.4byte	.LASF278
 4162 1360 08       		.byte	0x8
 4163 1361 480F     		.2byte	0xf48
 4164 1363 BF130000 		.4byte	0x13bf
 4165 1367 03       		.byte	0x3
ARM GAS  /tmp/ccn6Sm5M.s 			page 110


 4166 1368 23       		.byte	0x23
 4167 1369 B003     		.uleb128 0x1b0
 4168 136b 13       		.uleb128 0x13
 4169 136c 5B060000 		.4byte	.LASF279
 4170 1370 08       		.byte	0x8
 4171 1371 490F     		.2byte	0xf49
 4172 1373 C4130000 		.4byte	0x13c4
 4173 1377 03       		.byte	0x3
 4174 1378 23       		.byte	0x23
 4175 1379 8004     		.uleb128 0x200
 4176 137b 00       		.byte	0
 4177 137c 19       		.uleb128 0x19
 4178 137d E00E0000 		.4byte	0xee0
 4179 1381 19       		.uleb128 0x19
 4180 1382 7F0F0000 		.4byte	0xf7f
 4181 1386 19       		.uleb128 0x19
 4182 1387 F50E0000 		.4byte	0xef5
 4183 138b 19       		.uleb128 0x19
 4184 138c 6F0F0000 		.4byte	0xf6f
 4185 1390 19       		.uleb128 0x19
 4186 1391 5F0F0000 		.4byte	0xf5f
 4187 1395 19       		.uleb128 0x19
 4188 1396 2E0F0000 		.4byte	0xf2e
 4189 139a 19       		.uleb128 0x19
 4190 139b F50E0000 		.4byte	0xef5
 4191 139f 08       		.uleb128 0x8
 4192 13a0 63100000 		.4byte	0x1063
 4193 13a4 AF130000 		.4byte	0x13af
 4194 13a8 09       		.uleb128 0x9
 4195 13a9 4C000000 		.4byte	0x4c
 4196 13ad 07       		.byte	0x7
 4197 13ae 00       		.byte	0
 4198 13af 08       		.uleb128 0x8
 4199 13b0 01010000 		.4byte	0x101
 4200 13b4 BF130000 		.4byte	0x13bf
 4201 13b8 09       		.uleb128 0x9
 4202 13b9 4C000000 		.4byte	0x4c
 4203 13bd 13       		.byte	0x13
 4204 13be 00       		.byte	0
 4205 13bf 19       		.uleb128 0x19
 4206 13c0 AF130000 		.4byte	0x13af
 4207 13c4 08       		.uleb128 0x8
 4208 13c5 11100000 		.4byte	0x1011
 4209 13c9 D4130000 		.4byte	0x13d4
 4210 13cd 09       		.uleb128 0x9
 4211 13ce 4C000000 		.4byte	0x4c
 4212 13d2 03       		.byte	0x3
 4213 13d3 00       		.byte	0
 4214 13d4 1E       		.uleb128 0x1e
 4215 13d5 50776D00 		.ascii	"Pwm\000"
 4216 13d9 08       		.byte	0x8
 4217 13da 4A0F     		.2byte	0xf4a
 4218 13dc 6F100000 		.4byte	0x106f
 4219 13e0 1F       		.uleb128 0x1f
 4220 13e1 40       		.byte	0x40
 4221 13e2 08       		.byte	0x8
 4222 13e3 4B15     		.2byte	0x154b
ARM GAS  /tmp/ccn6Sm5M.s 			page 111


 4223 13e5 AD140000 		.4byte	0x14ad
 4224 13e9 13       		.uleb128 0x13
 4225 13ea 95010000 		.4byte	.LASF280
 4226 13ee 08       		.byte	0x8
 4227 13ef 4C15     		.2byte	0x154c
 4228 13f1 A00C0000 		.4byte	0xca0
 4229 13f5 02       		.byte	0x2
 4230 13f6 23       		.byte	0x23
 4231 13f7 00       		.uleb128 0
 4232 13f8 13       		.uleb128 0x13
 4233 13f9 D8050000 		.4byte	.LASF281
 4234 13fd 08       		.byte	0x8
 4235 13fe 4D15     		.2byte	0x154d
 4236 1400 A00C0000 		.4byte	0xca0
 4237 1404 02       		.byte	0x2
 4238 1405 23       		.byte	0x23
 4239 1406 04       		.uleb128 0x4
 4240 1407 13       		.uleb128 0x13
 4241 1408 660B0000 		.4byte	.LASF282
 4242 140c 08       		.byte	0x8
 4243 140d 4E15     		.2byte	0x154e
 4244 140f A00C0000 		.4byte	0xca0
 4245 1413 02       		.byte	0x2
 4246 1414 23       		.byte	0x23
 4247 1415 08       		.uleb128 0x8
 4248 1416 13       		.uleb128 0x13
 4249 1417 66090000 		.4byte	.LASF192
 4250 141b 08       		.byte	0x8
 4251 141c 4F15     		.2byte	0x154f
 4252 141e AD140000 		.4byte	0x14ad
 4253 1422 02       		.byte	0x2
 4254 1423 23       		.byte	0x23
 4255 1424 0C       		.uleb128 0xc
 4256 1425 13       		.uleb128 0x13
 4257 1426 B7090000 		.4byte	.LASF283
 4258 142a 08       		.byte	0x8
 4259 142b 5015     		.2byte	0x1550
 4260 142d A00C0000 		.4byte	0xca0
 4261 1431 02       		.byte	0x2
 4262 1432 23       		.byte	0x23
 4263 1433 10       		.uleb128 0x10
 4264 1434 13       		.uleb128 0x13
 4265 1435 17030000 		.4byte	.LASF284
 4266 1439 08       		.byte	0x8
 4267 143a 5115     		.2byte	0x1551
 4268 143c A00C0000 		.4byte	0xca0
 4269 1440 02       		.byte	0x2
 4270 1441 23       		.byte	0x23
 4271 1442 14       		.uleb128 0x14
 4272 1443 13       		.uleb128 0x13
 4273 1444 1D030000 		.4byte	.LASF285
 4274 1448 08       		.byte	0x8
 4275 1449 5215     		.2byte	0x1552
 4276 144b A00C0000 		.4byte	0xca0
 4277 144f 02       		.byte	0x2
 4278 1450 23       		.byte	0x23
 4279 1451 18       		.uleb128 0x18
ARM GAS  /tmp/ccn6Sm5M.s 			page 112


 4280 1452 13       		.uleb128 0x13
 4281 1453 23030000 		.4byte	.LASF286
 4282 1457 08       		.byte	0x8
 4283 1458 5315     		.2byte	0x1553
 4284 145a A00C0000 		.4byte	0xca0
 4285 145e 02       		.byte	0x2
 4286 145f 23       		.byte	0x23
 4287 1460 1C       		.uleb128 0x1c
 4288 1461 13       		.uleb128 0x13
 4289 1462 A7030000 		.4byte	.LASF287
 4290 1466 08       		.byte	0x8
 4291 1467 5415     		.2byte	0x1554
 4292 1469 A00C0000 		.4byte	0xca0
 4293 146d 02       		.byte	0x2
 4294 146e 23       		.byte	0x23
 4295 146f 20       		.uleb128 0x20
 4296 1470 13       		.uleb128 0x13
 4297 1471 0F050000 		.4byte	.LASF288
 4298 1475 08       		.byte	0x8
 4299 1476 5515     		.2byte	0x1555
 4300 1478 A00C0000 		.4byte	0xca0
 4301 147c 02       		.byte	0x2
 4302 147d 23       		.byte	0x23
 4303 147e 24       		.uleb128 0x24
 4304 147f 13       		.uleb128 0x13
 4305 1480 52040000 		.4byte	.LASF289
 4306 1484 08       		.byte	0x8
 4307 1485 5615     		.2byte	0x1556
 4308 1487 A00C0000 		.4byte	0xca0
 4309 148b 02       		.byte	0x2
 4310 148c 23       		.byte	0x23
 4311 148d 28       		.uleb128 0x28
 4312 148e 13       		.uleb128 0x13
 4313 148f 12080000 		.4byte	.LASF290
 4314 1493 08       		.byte	0x8
 4315 1494 5715     		.2byte	0x1557
 4316 1496 A00C0000 		.4byte	0xca0
 4317 149a 02       		.byte	0x2
 4318 149b 23       		.byte	0x23
 4319 149c 2C       		.uleb128 0x2c
 4320 149d 13       		.uleb128 0x13
 4321 149e 70090000 		.4byte	.LASF198
 4322 14a2 08       		.byte	0x8
 4323 14a3 5815     		.2byte	0x1558
 4324 14a5 B2140000 		.4byte	0x14b2
 4325 14a9 02       		.byte	0x2
 4326 14aa 23       		.byte	0x23
 4327 14ab 30       		.uleb128 0x30
 4328 14ac 00       		.byte	0
 4329 14ad 19       		.uleb128 0x19
 4330 14ae E00E0000 		.4byte	0xee0
 4331 14b2 19       		.uleb128 0x19
 4332 14b3 4F0F0000 		.4byte	0xf4f
 4333 14b7 05       		.uleb128 0x5
 4334 14b8 77020000 		.4byte	.LASF291
 4335 14bc 08       		.byte	0x8
 4336 14bd 5915     		.2byte	0x1559
ARM GAS  /tmp/ccn6Sm5M.s 			page 113


 4337 14bf E0130000 		.4byte	0x13e0
 4338 14c3 1F       		.uleb128 0x1f
 4339 14c4 E8       		.byte	0xe8
 4340 14c5 08       		.byte	0x8
 4341 14c6 5B15     		.2byte	0x155b
 4342 14c8 6C150000 		.4byte	0x156c
 4343 14cc 13       		.uleb128 0x13
 4344 14cd 42010000 		.4byte	.LASF292
 4345 14d1 08       		.byte	0x8
 4346 14d2 5C15     		.2byte	0x155c
 4347 14d4 6C150000 		.4byte	0x156c
 4348 14d8 02       		.byte	0x2
 4349 14d9 23       		.byte	0x23
 4350 14da 00       		.uleb128 0
 4351 14db 13       		.uleb128 0x13
 4352 14dc C70B0000 		.4byte	.LASF293
 4353 14e0 08       		.byte	0x8
 4354 14e1 5D15     		.2byte	0x155d
 4355 14e3 A00C0000 		.4byte	0xca0
 4356 14e7 03       		.byte	0x3
 4357 14e8 23       		.byte	0x23
 4358 14e9 C001     		.uleb128 0xc0
 4359 14eb 13       		.uleb128 0x13
 4360 14ec 43030000 		.4byte	.LASF294
 4361 14f0 08       		.byte	0x8
 4362 14f1 5E15     		.2byte	0x155e
 4363 14f3 A00C0000 		.4byte	0xca0
 4364 14f7 03       		.byte	0x3
 4365 14f8 23       		.byte	0x23
 4366 14f9 C401     		.uleb128 0xc4
 4367 14fb 13       		.uleb128 0x13
 4368 14fc 620A0000 		.4byte	.LASF295
 4369 1500 08       		.byte	0x8
 4370 1501 5F15     		.2byte	0x155f
 4371 1503 A00C0000 		.4byte	0xca0
 4372 1507 03       		.byte	0x3
 4373 1508 23       		.byte	0x23
 4374 1509 C801     		.uleb128 0xc8
 4375 150b 13       		.uleb128 0x13
 4376 150c 0C0A0000 		.4byte	.LASF296
 4377 1510 08       		.byte	0x8
 4378 1511 6015     		.2byte	0x1560
 4379 1513 A00C0000 		.4byte	0xca0
 4380 1517 03       		.byte	0x3
 4381 1518 23       		.byte	0x23
 4382 1519 CC01     		.uleb128 0xcc
 4383 151b 13       		.uleb128 0x13
 4384 151c 22010000 		.4byte	.LASF297
 4385 1520 08       		.byte	0x8
 4386 1521 6115     		.2byte	0x1561
 4387 1523 A50C0000 		.4byte	0xca5
 4388 1527 03       		.byte	0x3
 4389 1528 23       		.byte	0x23
 4390 1529 D001     		.uleb128 0xd0
 4391 152b 13       		.uleb128 0x13
 4392 152c 70030000 		.4byte	.LASF298
 4393 1530 08       		.byte	0x8
ARM GAS  /tmp/ccn6Sm5M.s 			page 114


 4394 1531 6215     		.2byte	0x1562
 4395 1533 A50C0000 		.4byte	0xca5
 4396 1537 03       		.byte	0x3
 4397 1538 23       		.byte	0x23
 4398 1539 D401     		.uleb128 0xd4
 4399 153b 13       		.uleb128 0x13
 4400 153c E1000000 		.4byte	.LASF299
 4401 1540 08       		.byte	0x8
 4402 1541 6315     		.2byte	0x1563
 4403 1543 A00C0000 		.4byte	0xca0
 4404 1547 03       		.byte	0x3
 4405 1548 23       		.byte	0x23
 4406 1549 D801     		.uleb128 0xd8
 4407 154b 13       		.uleb128 0x13
 4408 154c 66090000 		.4byte	.LASF192
 4409 1550 08       		.byte	0x8
 4410 1551 6415     		.2byte	0x1564
 4411 1553 7C150000 		.4byte	0x157c
 4412 1557 03       		.byte	0x3
 4413 1558 23       		.byte	0x23
 4414 1559 DC01     		.uleb128 0xdc
 4415 155b 13       		.uleb128 0x13
 4416 155c C70A0000 		.4byte	.LASF300
 4417 1560 08       		.byte	0x8
 4418 1561 6515     		.2byte	0x1565
 4419 1563 A00C0000 		.4byte	0xca0
 4420 1567 03       		.byte	0x3
 4421 1568 23       		.byte	0x23
 4422 1569 E401     		.uleb128 0xe4
 4423 156b 00       		.byte	0
 4424 156c 08       		.uleb128 0x8
 4425 156d B7140000 		.4byte	0x14b7
 4426 1571 7C150000 		.4byte	0x157c
 4427 1575 09       		.uleb128 0x9
 4428 1576 4C000000 		.4byte	0x4c
 4429 157a 02       		.byte	0x2
 4430 157b 00       		.byte	0
 4431 157c 19       		.uleb128 0x19
 4432 157d F50E0000 		.4byte	0xef5
 4433 1581 1E       		.uleb128 0x1e
 4434 1582 546300   		.ascii	"Tc\000"
 4435 1585 08       		.byte	0x8
 4436 1586 6615     		.2byte	0x1566
 4437 1588 C3140000 		.4byte	0x14c3
 4438 158c 1F       		.uleb128 0x1f
 4439 158d 0C       		.byte	0xc
 4440 158e 08       		.byte	0x8
 4441 158f 7C19     		.2byte	0x197c
 4442 1591 C3150000 		.4byte	0x15c3
 4443 1595 13       		.uleb128 0x13
 4444 1596 F6020000 		.4byte	.LASF301
 4445 159a 08       		.byte	0x8
 4446 159b 7D19     		.2byte	0x197d
 4447 159d A00C0000 		.4byte	0xca0
 4448 15a1 02       		.byte	0x2
 4449 15a2 23       		.byte	0x23
 4450 15a3 00       		.uleb128 0
ARM GAS  /tmp/ccn6Sm5M.s 			page 115


 4451 15a4 13       		.uleb128 0x13
 4452 15a5 19070000 		.4byte	.LASF302
 4453 15a9 08       		.byte	0x8
 4454 15aa 7E19     		.2byte	0x197e
 4455 15ac A00C0000 		.4byte	0xca0
 4456 15b0 02       		.byte	0x2
 4457 15b1 23       		.byte	0x23
 4458 15b2 04       		.uleb128 0x4
 4459 15b3 13       		.uleb128 0x13
 4460 15b4 A6090000 		.4byte	.LASF303
 4461 15b8 08       		.byte	0x8
 4462 15b9 7F19     		.2byte	0x197f
 4463 15bb A50C0000 		.4byte	0xca5
 4464 15bf 02       		.byte	0x2
 4465 15c0 23       		.byte	0x23
 4466 15c1 08       		.uleb128 0x8
 4467 15c2 00       		.byte	0
 4468 15c3 1E       		.uleb128 0x1e
 4469 15c4 57647400 		.ascii	"Wdt\000"
 4470 15c8 08       		.byte	0x8
 4471 15c9 8019     		.2byte	0x1980
 4472 15cb 8C150000 		.4byte	0x158c
 4473 15cf 04       		.uleb128 0x4
 4474 15d0 8B050000 		.4byte	.LASF304
 4475 15d4 09       		.byte	0x9
 4476 15d5 10       		.byte	0x10
 4477 15d6 AE080000 		.4byte	0x8ae
 4478 15da 21       		.uleb128 0x21
 4479 15db 01       		.byte	0x1
 4480 15dc 09       		.byte	0x9
 4481 15dd 12       		.byte	0x12
 4482 15de FB150000 		.4byte	0x15fb
 4483 15e2 22       		.uleb128 0x22
 4484 15e3 4F464600 		.ascii	"OFF\000"
 4485 15e7 00       		.sleb128 0
 4486 15e8 1B       		.uleb128 0x1b
 4487 15e9 9B070000 		.4byte	.LASF305
 4488 15ed 01       		.sleb128 1
 4489 15ee 1B       		.uleb128 0x1b
 4490 15ef 90010000 		.4byte	.LASF306
 4491 15f3 02       		.sleb128 2
 4492 15f4 1B       		.uleb128 0x1b
 4493 15f5 E3060000 		.4byte	.LASF307
 4494 15f9 03       		.sleb128 3
 4495 15fa 00       		.byte	0
 4496 15fb 04       		.uleb128 0x4
 4497 15fc 88060000 		.4byte	.LASF308
 4498 1600 09       		.byte	0x9
 4499 1601 12       		.byte	0x12
 4500 1602 DA150000 		.4byte	0x15da
 4501 1606 0D       		.uleb128 0xd
 4502 1607 D5020000 		.4byte	.LASF309
 4503 160b 2C       		.byte	0x2c
 4504 160c 09       		.byte	0x9
 4505 160d 15       		.byte	0x15
 4506 160e D1160000 		.4byte	0x16d1
 4507 1612 0B       		.uleb128 0xb
ARM GAS  /tmp/ccn6Sm5M.s 			page 116


 4508 1613 4C0A0000 		.4byte	.LASF310
 4509 1617 09       		.byte	0x9
 4510 1618 16       		.byte	0x16
 4511 1619 FB150000 		.4byte	0x15fb
 4512 161d 02       		.byte	0x2
 4513 161e 23       		.byte	0x23
 4514 161f 00       		.uleb128 0
 4515 1620 0E       		.uleb128 0xe
 4516 1621 535000   		.ascii	"SP\000"
 4517 1624 09       		.byte	0x9
 4518 1625 17       		.byte	0x17
 4519 1626 CF150000 		.4byte	0x15cf
 4520 162a 02       		.byte	0x2
 4521 162b 23       		.byte	0x23
 4522 162c 02       		.uleb128 0x2
 4523 162d 0E       		.uleb128 0xe
 4524 162e 72535000 		.ascii	"rSP\000"
 4525 1632 09       		.byte	0x9
 4526 1633 18       		.byte	0x18
 4527 1634 CF150000 		.4byte	0x15cf
 4528 1638 02       		.byte	0x2
 4529 1639 23       		.byte	0x23
 4530 163a 04       		.uleb128 0x4
 4531 163b 0B       		.uleb128 0xb
 4532 163c 89030000 		.4byte	.LASF311
 4533 1640 09       		.byte	0x9
 4534 1641 19       		.byte	0x19
 4535 1642 45000000 		.4byte	0x45
 4536 1646 02       		.byte	0x2
 4537 1647 23       		.byte	0x23
 4538 1648 08       		.uleb128 0x8
 4539 1649 0E       		.uleb128 0xe
 4540 164a 4B7000   		.ascii	"Kp\000"
 4541 164d 09       		.byte	0x9
 4542 164e 1B       		.byte	0x1b
 4543 164f CF150000 		.4byte	0x15cf
 4544 1653 02       		.byte	0x2
 4545 1654 23       		.byte	0x23
 4546 1655 0C       		.uleb128 0xc
 4547 1656 0E       		.uleb128 0xe
 4548 1657 4B6900   		.ascii	"Ki\000"
 4549 165a 09       		.byte	0x9
 4550 165b 1C       		.byte	0x1c
 4551 165c CF150000 		.4byte	0x15cf
 4552 1660 02       		.byte	0x2
 4553 1661 23       		.byte	0x23
 4554 1662 0E       		.uleb128 0xe
 4555 1663 0E       		.uleb128 0xe
 4556 1664 4B6400   		.ascii	"Kd\000"
 4557 1667 09       		.byte	0x9
 4558 1668 1D       		.byte	0x1d
 4559 1669 CF150000 		.4byte	0x15cf
 4560 166d 02       		.byte	0x2
 4561 166e 23       		.byte	0x23
 4562 166f 10       		.uleb128 0x10
 4563 1670 0E       		.uleb128 0xe
 4564 1671 5F6500   		.ascii	"_e\000"
ARM GAS  /tmp/ccn6Sm5M.s 			page 117


 4565 1674 09       		.byte	0x9
 4566 1675 1F       		.byte	0x1f
 4567 1676 45000000 		.4byte	0x45
 4568 167a 02       		.byte	0x2
 4569 167b 23       		.byte	0x23
 4570 167c 14       		.uleb128 0x14
 4571 167d 0E       		.uleb128 0xe
 4572 167e 5F647800 		.ascii	"_dx\000"
 4573 1682 09       		.byte	0x9
 4574 1683 20       		.byte	0x20
 4575 1684 45000000 		.4byte	0x45
 4576 1688 02       		.byte	0x2
 4577 1689 23       		.byte	0x23
 4578 168a 18       		.uleb128 0x18
 4579 168b 0E       		.uleb128 0xe
 4580 168c 5F646500 		.ascii	"_de\000"
 4581 1690 09       		.byte	0x9
 4582 1691 21       		.byte	0x21
 4583 1692 45000000 		.4byte	0x45
 4584 1696 02       		.byte	0x2
 4585 1697 23       		.byte	0x23
 4586 1698 1C       		.uleb128 0x1c
 4587 1699 0B       		.uleb128 0xb
 4588 169a DE060000 		.4byte	.LASF312
 4589 169e 09       		.byte	0x9
 4590 169f 22       		.byte	0x22
 4591 16a0 45000000 		.4byte	0x45
 4592 16a4 02       		.byte	0x2
 4593 16a5 23       		.byte	0x23
 4594 16a6 20       		.uleb128 0x20
 4595 16a7 0E       		.uleb128 0xe
 4596 16a8 5F7800   		.ascii	"_x\000"
 4597 16ab 09       		.byte	0x9
 4598 16ac 23       		.byte	0x23
 4599 16ad CF150000 		.4byte	0x15cf
 4600 16b1 02       		.byte	0x2
 4601 16b2 23       		.byte	0x23
 4602 16b3 24       		.uleb128 0x24
 4603 16b4 0B       		.uleb128 0xb
 4604 16b5 33030000 		.4byte	.LASF313
 4605 16b9 09       		.byte	0x9
 4606 16ba 25       		.byte	0x25
 4607 16bb 37000000 		.4byte	0x37
 4608 16bf 02       		.byte	0x2
 4609 16c0 23       		.byte	0x23
 4610 16c1 26       		.uleb128 0x26
 4611 16c2 0B       		.uleb128 0xb
 4612 16c3 70010000 		.4byte	.LASF314
 4613 16c7 09       		.byte	0x9
 4614 16c8 27       		.byte	0x27
 4615 16c9 15170000 		.4byte	0x1715
 4616 16cd 02       		.byte	0x2
 4617 16ce 23       		.byte	0x23
 4618 16cf 28       		.uleb128 0x28
 4619 16d0 00       		.byte	0
 4620 16d1 0D       		.uleb128 0xd
 4621 16d2 76050000 		.4byte	.LASF315
ARM GAS  /tmp/ccn6Sm5M.s 			page 118


 4622 16d6 10       		.byte	0x10
 4623 16d7 09       		.byte	0x9
 4624 16d8 2B       		.byte	0x2b
 4625 16d9 15170000 		.4byte	0x1715
 4626 16dd 0B       		.uleb128 0xb
 4627 16de DE030000 		.4byte	.LASF316
 4628 16e2 09       		.byte	0x9
 4629 16e3 2C       		.byte	0x2c
 4630 16e4 1B170000 		.4byte	0x171b
 4631 16e8 02       		.byte	0x2
 4632 16e9 23       		.byte	0x23
 4633 16ea 00       		.uleb128 0
 4634 16eb 0B       		.uleb128 0xb
 4635 16ec 33030000 		.4byte	.LASF313
 4636 16f0 09       		.byte	0x9
 4637 16f1 2D       		.byte	0x2d
 4638 16f2 45000000 		.4byte	0x45
 4639 16f6 02       		.byte	0x2
 4640 16f7 23       		.byte	0x23
 4641 16f8 04       		.uleb128 0x4
 4642 16f9 0E       		.uleb128 0xe
 4643 16fa 6F6E00   		.ascii	"on\000"
 4644 16fd 09       		.byte	0x9
 4645 16fe 2E       		.byte	0x2e
 4646 16ff 45000000 		.4byte	0x45
 4647 1703 02       		.byte	0x2
 4648 1704 23       		.byte	0x23
 4649 1705 08       		.uleb128 0x8
 4650 1706 0E       		.uleb128 0xe
 4651 1707 6F666600 		.ascii	"off\000"
 4652 170b 09       		.byte	0x9
 4653 170c 2F       		.byte	0x2f
 4654 170d 45000000 		.4byte	0x45
 4655 1711 02       		.byte	0x2
 4656 1712 23       		.byte	0x23
 4657 1713 0C       		.uleb128 0xc
 4658 1714 00       		.byte	0
 4659 1715 0F       		.uleb128 0xf
 4660 1716 04       		.byte	0x4
 4661 1717 D1160000 		.4byte	0x16d1
 4662 171b 0F       		.uleb128 0xf
 4663 171c 04       		.byte	0x4
 4664 171d 45000000 		.4byte	0x45
 4665 1721 23       		.uleb128 0x23
 4666 1722 09000000 		.4byte	.LASF317
 4667 1726 01       		.byte	0x1
 4668 1727 DE05     		.2byte	0x5de
 4669 1729 01       		.byte	0x1
 4670 172a 00000000 		.4byte	.LFB14
 4671 172e 36000000 		.4byte	.LFE14
 4672 1732 00000000 		.4byte	.LLST0
 4673 1736 4A170000 		.4byte	0x174a
 4674 173a 24       		.uleb128 0x24
 4675 173b FA010000 		.4byte	.LASF319
 4676 173f 01       		.byte	0x1
 4677 1740 DE05     		.2byte	0x5de
 4678 1742 D0090000 		.4byte	0x9d0
ARM GAS  /tmp/ccn6Sm5M.s 			page 119


 4679 1746 02       		.byte	0x2
 4680 1747 91       		.byte	0x91
 4681 1748 77       		.sleb128 -9
 4682 1749 00       		.byte	0
 4683 174a 23       		.uleb128 0x23
 4684 174b 11020000 		.4byte	.LASF318
 4685 174f 01       		.byte	0x1
 4686 1750 3206     		.2byte	0x632
 4687 1752 01       		.byte	0x1
 4688 1753 00000000 		.4byte	.LFB20
 4689 1757 5C000000 		.4byte	.LFE20
 4690 175b 38000000 		.4byte	.LLST1
 4691 175f 82170000 		.4byte	0x1782
 4692 1763 24       		.uleb128 0x24
 4693 1764 FA010000 		.4byte	.LASF319
 4694 1768 01       		.byte	0x1
 4695 1769 3206     		.2byte	0x632
 4696 176b D0090000 		.4byte	0x9d0
 4697 176f 02       		.byte	0x2
 4698 1770 91       		.byte	0x91
 4699 1771 77       		.sleb128 -9
 4700 1772 24       		.uleb128 0x24
 4701 1773 510A0000 		.4byte	.LASF320
 4702 1777 01       		.byte	0x1
 4703 1778 3206     		.2byte	0x632
 4704 177a B9080000 		.4byte	0x8b9
 4705 177e 02       		.byte	0x2
 4706 177f 91       		.byte	0x91
 4707 1780 70       		.sleb128 -16
 4708 1781 00       		.byte	0
 4709 1782 25       		.uleb128 0x25
 4710 1783 55090000 		.4byte	.LASF342
 4711 1787 02       		.byte	0x2
 4712 1788 20       		.byte	0x20
 4713 1789 00000000 		.4byte	.LFB35
 4714 178d 4C020000 		.4byte	.LFE35
 4715 1791 70000000 		.4byte	.LLST2
 4716 1795 C0170000 		.4byte	0x17c0
 4717 1799 26       		.uleb128 0x26
 4718 179a 64697600 		.ascii	"div\000"
 4719 179e 02       		.byte	0x2
 4720 179f 22       		.byte	0x22
 4721 17a0 B9080000 		.4byte	0x8b9
 4722 17a4 02       		.byte	0x2
 4723 17a5 91       		.byte	0x91
 4724 17a6 6C       		.sleb128 -20
 4725 17a7 27       		.uleb128 0x27
 4726 17a8 E8080000 		.4byte	.LASF321
 4727 17ac 02       		.byte	0x2
 4728 17ad 23       		.byte	0x23
 4729 17ae B9080000 		.4byte	0x8b9
 4730 17b2 02       		.byte	0x2
 4731 17b3 91       		.byte	0x91
 4732 17b4 68       		.sleb128 -24
 4733 17b5 28       		.uleb128 0x28
 4734 17b6 DA020000 		.4byte	.LASF343
 4735 17ba D0170000 		.4byte	0x17d0
ARM GAS  /tmp/ccn6Sm5M.s 			page 120


 4736 17be 01       		.byte	0x1
 4737 17bf 00       		.byte	0
 4738 17c0 08       		.uleb128 0x8
 4739 17c1 F9050000 		.4byte	0x5f9
 4740 17c5 D0170000 		.4byte	0x17d0
 4741 17c9 09       		.uleb128 0x9
 4742 17ca 4C000000 		.4byte	0x4c
 4743 17ce 04       		.byte	0x4
 4744 17cf 00       		.byte	0
 4745 17d0 17       		.uleb128 0x17
 4746 17d1 C0170000 		.4byte	0x17c0
 4747 17d5 29       		.uleb128 0x29
 4748 17d6 01       		.byte	0x1
 4749 17d7 CD000000 		.4byte	.LASF325
 4750 17db 02       		.byte	0x2
 4751 17dc 5B       		.byte	0x5b
 4752 17dd 01       		.byte	0x1
 4753 17de 00000000 		.4byte	.LFB36
 4754 17e2 AA010000 		.4byte	.LFE36
 4755 17e6 A8000000 		.4byte	.LLST3
 4756 17ea FD170000 		.4byte	0x17fd
 4757 17ee 2A       		.uleb128 0x2a
 4758 17ef 6E657700 		.ascii	"new\000"
 4759 17f3 02       		.byte	0x2
 4760 17f4 5B       		.byte	0x5b
 4761 17f5 98080000 		.4byte	0x898
 4762 17f9 02       		.byte	0x2
 4763 17fa 91       		.byte	0x91
 4764 17fb 77       		.sleb128 -9
 4765 17fc 00       		.byte	0
 4766 17fd 2B       		.uleb128 0x2b
 4767 17fe 01       		.byte	0x1
 4768 17ff 636C6900 		.ascii	"cli\000"
 4769 1803 02       		.byte	0x2
 4770 1804 7C       		.byte	0x7c
 4771 1805 00000000 		.4byte	.LFB37
 4772 1809 28040000 		.4byte	.LFE37
 4773 180d E0000000 		.4byte	.LLST4
 4774 1811 4F180000 		.4byte	0x184f
 4775 1815 27       		.uleb128 0x27
 4776 1816 9D050000 		.4byte	.LASF322
 4777 181a 02       		.byte	0x2
 4778 181b 7E       		.byte	0x7e
 4779 181c 45000000 		.4byte	0x45
 4780 1820 02       		.byte	0x2
 4781 1821 91       		.byte	0x91
 4782 1822 6C       		.sleb128 -20
 4783 1823 27       		.uleb128 0x27
 4784 1824 BB050000 		.4byte	.LASF323
 4785 1828 02       		.byte	0x2
 4786 1829 7F       		.byte	0x7f
 4787 182a 4F180000 		.4byte	0x184f
 4788 182e 02       		.byte	0x2
 4789 182f 91       		.byte	0x91
 4790 1830 60       		.sleb128 -32
 4791 1831 27       		.uleb128 0x27
 4792 1832 44050000 		.4byte	.LASF324
ARM GAS  /tmp/ccn6Sm5M.s 			page 121


 4793 1836 02       		.byte	0x2
 4794 1837 80       		.byte	0x80
 4795 1838 5F180000 		.4byte	0x185f
 4796 183c 02       		.byte	0x2
 4797 183d 91       		.byte	0x91
 4798 183e 40       		.sleb128 -64
 4799 183f 26       		.uleb128 0x26
 4800 1840 636D6400 		.ascii	"cmd\000"
 4801 1844 02       		.byte	0x2
 4802 1845 81       		.byte	0x81
 4803 1846 F9050000 		.4byte	0x5f9
 4804 184a 03       		.byte	0x3
 4805 184b 91       		.byte	0x91
 4806 184c BF7F     		.sleb128 -65
 4807 184e 00       		.byte	0
 4808 184f 08       		.uleb128 0x8
 4809 1850 45000000 		.4byte	0x45
 4810 1854 5F180000 		.4byte	0x185f
 4811 1858 09       		.uleb128 0x9
 4812 1859 4C000000 		.4byte	0x4c
 4813 185d 02       		.byte	0x2
 4814 185e 00       		.byte	0
 4815 185f 08       		.uleb128 0x8
 4816 1860 F9050000 		.4byte	0x5f9
 4817 1864 6F180000 		.4byte	0x186f
 4818 1868 09       		.uleb128 0x9
 4819 1869 4C000000 		.4byte	0x4c
 4820 186d 1F       		.byte	0x1f
 4821 186e 00       		.byte	0
 4822 186f 2C       		.uleb128 0x2c
 4823 1870 01       		.byte	0x1
 4824 1871 F5010000 		.4byte	.LASF326
 4825 1875 02       		.byte	0x2
 4826 1876 E3       		.byte	0xe3
 4827 1877 45000000 		.4byte	0x45
 4828 187b 00000000 		.4byte	.LFB38
 4829 187f 1C020000 		.4byte	.LFE38
 4830 1883 1A010000 		.4byte	.LLST5
 4831 1887 9A180000 		.4byte	0x189a
 4832 188b 27       		.uleb128 0x27
 4833 188c 6D020000 		.4byte	.LASF327
 4834 1890 02       		.byte	0x2
 4835 1891 E5       		.byte	0xe5
 4836 1892 B9080000 		.4byte	0x8b9
 4837 1896 02       		.byte	0x2
 4838 1897 91       		.byte	0x91
 4839 1898 74       		.sleb128 -12
 4840 1899 00       		.byte	0
 4841 189a 2D       		.uleb128 0x2d
 4842 189b 01       		.byte	0x1
 4843 189c 94080000 		.4byte	.LASF344
 4844 18a0 02       		.byte	0x2
 4845 18a1 2101     		.2byte	0x121
 4846 18a3 01       		.byte	0x1
 4847 18a4 00000000 		.4byte	.LFB39
 4848 18a8 2C000000 		.4byte	.LFE39
 4849 18ac 52010000 		.4byte	.LLST6
ARM GAS  /tmp/ccn6Sm5M.s 			page 122


 4850 18b0 2E       		.uleb128 0x2e
 4851 18b1 01       		.byte	0x1
 4852 18b2 6C040000 		.4byte	.LASF328
 4853 18b6 02       		.byte	0x2
 4854 18b7 2701     		.2byte	0x127
 4855 18b9 01       		.byte	0x1
 4856 18ba 00000000 		.4byte	.LFB40
 4857 18be 42010000 		.4byte	.LFE40
 4858 18c2 7E010000 		.4byte	.LLST7
 4859 18c6 E9180000 		.4byte	0x18e9
 4860 18ca 2F       		.uleb128 0x2f
 4861 18cb 120B0000 		.4byte	.LASF329
 4862 18cf 02       		.byte	0x2
 4863 18d0 2901     		.2byte	0x129
 4864 18d2 B9080000 		.4byte	0x8b9
 4865 18d6 02       		.byte	0x2
 4866 18d7 91       		.byte	0x91
 4867 18d8 70       		.sleb128 -16
 4868 18d9 2F       		.uleb128 0x2f
 4869 18da 37000000 		.4byte	.LASF330
 4870 18de 02       		.byte	0x2
 4871 18df 2A01     		.2byte	0x12a
 4872 18e1 B9080000 		.4byte	0x8b9
 4873 18e5 02       		.byte	0x2
 4874 18e6 91       		.byte	0x91
 4875 18e7 74       		.sleb128 -12
 4876 18e8 00       		.byte	0
 4877 18e9 30       		.uleb128 0x30
 4878 18ea B3010000 		.4byte	.LASF331
 4879 18ee 06       		.byte	0x6
 4880 18ef 4803     		.2byte	0x348
 4881 18f1 74040000 		.4byte	0x474
 4882 18f5 01       		.byte	0x1
 4883 18f6 01       		.byte	0x1
 4884 18f7 30       		.uleb128 0x30
 4885 18f8 CB060000 		.4byte	.LASF332
 4886 18fc 01       		.byte	0x1
 4887 18fd CE06     		.2byte	0x6ce
 4888 18ff 05190000 		.4byte	0x1905
 4889 1903 01       		.byte	0x1
 4890 1904 01       		.byte	0x1
 4891 1905 19       		.uleb128 0x19
 4892 1906 45000000 		.4byte	0x45
 4893 190a 08       		.uleb128 0x8
 4894 190b CF150000 		.4byte	0x15cf
 4895 190f 1A190000 		.4byte	0x191a
 4896 1913 09       		.uleb128 0x9
 4897 1914 4C000000 		.4byte	0x4c
 4898 1918 01       		.byte	0x1
 4899 1919 00       		.byte	0
 4900 191a 31       		.uleb128 0x31
 4901 191b DE030000 		.4byte	.LASF316
 4902 191f 02       		.byte	0x2
 4903 1920 16       		.byte	0x16
 4904 1921 0A190000 		.4byte	0x190a
 4905 1925 01       		.byte	0x1
 4906 1926 01       		.byte	0x1
ARM GAS  /tmp/ccn6Sm5M.s 			page 123


 4907 1927 31       		.uleb128 0x31
 4908 1928 8A000000 		.4byte	.LASF333
 4909 192c 02       		.byte	0x2
 4910 192d 17       		.byte	0x17
 4911 192e 98080000 		.4byte	0x898
 4912 1932 01       		.byte	0x1
 4913 1933 01       		.byte	0x1
 4914 1934 31       		.uleb128 0x31
 4915 1935 C6090000 		.4byte	.LASF334
 4916 1939 02       		.byte	0x2
 4917 193a 19       		.byte	0x19
 4918 193b 06160000 		.4byte	0x1606
 4919 193f 01       		.byte	0x1
 4920 1940 01       		.byte	0x1
 4921 1941 31       		.uleb128 0x31
 4922 1942 CD070000 		.4byte	.LASF335
 4923 1946 02       		.byte	0x2
 4924 1947 1A       		.byte	0x1a
 4925 1948 D1160000 		.4byte	0x16d1
 4926 194c 01       		.byte	0x1
 4927 194d 01       		.byte	0x1
 4928 194e 31       		.uleb128 0x31
 4929 194f 90030000 		.4byte	.LASF336
 4930 1953 02       		.byte	0x2
 4931 1954 1B       		.byte	0x1b
 4932 1955 D1160000 		.4byte	0x16d1
 4933 1959 01       		.byte	0x1
 4934 195a 01       		.byte	0x1
 4935 195b 31       		.uleb128 0x31
 4936 195c 79010000 		.4byte	.LASF337
 4937 1960 02       		.byte	0x2
 4938 1961 1D       		.byte	0x1d
 4939 1962 B9080000 		.4byte	0x8b9
 4940 1966 01       		.byte	0x1
 4941 1967 01       		.byte	0x1
 4942 1968 31       		.uleb128 0x31
 4943 1969 290A0000 		.4byte	.LASF338
 4944 196d 02       		.byte	0x2
 4945 196e 1E       		.byte	0x1e
 4946 196f B9080000 		.4byte	0x8b9
 4947 1973 01       		.byte	0x1
 4948 1974 01       		.byte	0x1
 4949 1975 30       		.uleb128 0x30
 4950 1976 B3010000 		.4byte	.LASF331
 4951 197a 06       		.byte	0x6
 4952 197b 4803     		.2byte	0x348
 4953 197d 74040000 		.4byte	0x474
 4954 1981 01       		.byte	0x1
 4955 1982 01       		.byte	0x1
 4956 1983 30       		.uleb128 0x30
 4957 1984 CB060000 		.4byte	.LASF332
 4958 1988 01       		.byte	0x1
 4959 1989 CE06     		.2byte	0x6ce
 4960 198b 05190000 		.4byte	0x1905
 4961 198f 01       		.byte	0x1
 4962 1990 01       		.byte	0x1
 4963 1991 32       		.uleb128 0x32
ARM GAS  /tmp/ccn6Sm5M.s 			page 124


 4964 1992 DE030000 		.4byte	.LASF316
 4965 1996 02       		.byte	0x2
 4966 1997 16       		.byte	0x16
 4967 1998 0A190000 		.4byte	0x190a
 4968 199c 01       		.byte	0x1
 4969 199d 05       		.byte	0x5
 4970 199e 03       		.byte	0x3
 4971 199f 00000000 		.4byte	input
 4972 19a3 32       		.uleb128 0x32
 4973 19a4 8A000000 		.4byte	.LASF333
 4974 19a8 02       		.byte	0x2
 4975 19a9 17       		.byte	0x17
 4976 19aa 98080000 		.4byte	0x898
 4977 19ae 01       		.byte	0x1
 4978 19af 05       		.byte	0x5
 4979 19b0 03       		.byte	0x3
 4980 19b1 00000000 		.4byte	_state
 4981 19b5 32       		.uleb128 0x32
 4982 19b6 C6090000 		.4byte	.LASF334
 4983 19ba 02       		.byte	0x2
 4984 19bb 19       		.byte	0x19
 4985 19bc 06160000 		.4byte	0x1606
 4986 19c0 01       		.byte	0x1
 4987 19c1 05       		.byte	0x5
 4988 19c2 03       		.byte	0x3
 4989 19c3 00000000 		.4byte	loop
 4990 19c7 32       		.uleb128 0x32
 4991 19c8 CD070000 		.4byte	.LASF335
 4992 19cc 02       		.byte	0x2
 4993 19cd 1A       		.byte	0x1a
 4994 19ce D1160000 		.4byte	0x16d1
 4995 19d2 01       		.byte	0x1
 4996 19d3 05       		.byte	0x5
 4997 19d4 03       		.byte	0x3
 4998 19d5 00000000 		.4byte	ntrip
 4999 19d9 32       		.uleb128 0x32
 5000 19da 90030000 		.4byte	.LASF336
 5001 19de 02       		.byte	0x2
 5002 19df 1B       		.byte	0x1b
 5003 19e0 D1160000 		.4byte	0x16d1
 5004 19e4 01       		.byte	0x1
 5005 19e5 05       		.byte	0x5
 5006 19e6 03       		.byte	0x3
 5007 19e7 00000000 		.4byte	rtrip
 5008 19eb 32       		.uleb128 0x32
 5009 19ec 79010000 		.4byte	.LASF337
 5010 19f0 02       		.byte	0x2
 5011 19f1 1D       		.byte	0x1d
 5012 19f2 B9080000 		.4byte	0x8b9
 5013 19f6 01       		.byte	0x1
 5014 19f7 05       		.byte	0x5
 5015 19f8 03       		.byte	0x3
 5016 19f9 00000000 		.4byte	releasetime
 5017 19fd 32       		.uleb128 0x32
 5018 19fe 290A0000 		.4byte	.LASF338
 5019 1a02 02       		.byte	0x2
 5020 1a03 1E       		.byte	0x1e
ARM GAS  /tmp/ccn6Sm5M.s 			page 125


 5021 1a04 B9080000 		.4byte	0x8b9
 5022 1a08 01       		.byte	0x1
 5023 1a09 05       		.byte	0x5
 5024 1a0a 03       		.byte	0x3
 5025 1a0b 00000000 		.4byte	dxmax
 5026 1a0f 00       		.byte	0
 5027              		.section	.debug_abbrev,"",%progbits
 5028              	.Ldebug_abbrev0:
 5029 0000 01       		.uleb128 0x1
 5030 0001 11       		.uleb128 0x11
 5031 0002 01       		.byte	0x1
 5032 0003 25       		.uleb128 0x25
 5033 0004 0E       		.uleb128 0xe
 5034 0005 13       		.uleb128 0x13
 5035 0006 0B       		.uleb128 0xb
 5036 0007 03       		.uleb128 0x3
 5037 0008 0E       		.uleb128 0xe
 5038 0009 1B       		.uleb128 0x1b
 5039 000a 0E       		.uleb128 0xe
 5040 000b 11       		.uleb128 0x11
 5041 000c 01       		.uleb128 0x1
 5042 000d 52       		.uleb128 0x52
 5043 000e 01       		.uleb128 0x1
 5044 000f 55       		.uleb128 0x55
 5045 0010 06       		.uleb128 0x6
 5046 0011 10       		.uleb128 0x10
 5047 0012 06       		.uleb128 0x6
 5048 0013 00       		.byte	0
 5049 0014 00       		.byte	0
 5050 0015 02       		.uleb128 0x2
 5051 0016 24       		.uleb128 0x24
 5052 0017 00       		.byte	0
 5053 0018 0B       		.uleb128 0xb
 5054 0019 0B       		.uleb128 0xb
 5055 001a 3E       		.uleb128 0x3e
 5056 001b 0B       		.uleb128 0xb
 5057 001c 03       		.uleb128 0x3
 5058 001d 0E       		.uleb128 0xe
 5059 001e 00       		.byte	0
 5060 001f 00       		.byte	0
 5061 0020 03       		.uleb128 0x3
 5062 0021 24       		.uleb128 0x24
 5063 0022 00       		.byte	0
 5064 0023 0B       		.uleb128 0xb
 5065 0024 0B       		.uleb128 0xb
 5066 0025 3E       		.uleb128 0x3e
 5067 0026 0B       		.uleb128 0xb
 5068 0027 03       		.uleb128 0x3
 5069 0028 08       		.uleb128 0x8
 5070 0029 00       		.byte	0
 5071 002a 00       		.byte	0
 5072 002b 04       		.uleb128 0x4
 5073 002c 16       		.uleb128 0x16
 5074 002d 00       		.byte	0
 5075 002e 03       		.uleb128 0x3
 5076 002f 0E       		.uleb128 0xe
 5077 0030 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccn6Sm5M.s 			page 126


 5078 0031 0B       		.uleb128 0xb
 5079 0032 3B       		.uleb128 0x3b
 5080 0033 0B       		.uleb128 0xb
 5081 0034 49       		.uleb128 0x49
 5082 0035 13       		.uleb128 0x13
 5083 0036 00       		.byte	0
 5084 0037 00       		.byte	0
 5085 0038 05       		.uleb128 0x5
 5086 0039 16       		.uleb128 0x16
 5087 003a 00       		.byte	0
 5088 003b 03       		.uleb128 0x3
 5089 003c 0E       		.uleb128 0xe
 5090 003d 3A       		.uleb128 0x3a
 5091 003e 0B       		.uleb128 0xb
 5092 003f 3B       		.uleb128 0x3b
 5093 0040 05       		.uleb128 0x5
 5094 0041 49       		.uleb128 0x49
 5095 0042 13       		.uleb128 0x13
 5096 0043 00       		.byte	0
 5097 0044 00       		.byte	0
 5098 0045 06       		.uleb128 0x6
 5099 0046 17       		.uleb128 0x17
 5100 0047 01       		.byte	0x1
 5101 0048 0B       		.uleb128 0xb
 5102 0049 0B       		.uleb128 0xb
 5103 004a 3A       		.uleb128 0x3a
 5104 004b 0B       		.uleb128 0xb
 5105 004c 3B       		.uleb128 0x3b
 5106 004d 0B       		.uleb128 0xb
 5107 004e 01       		.uleb128 0x1
 5108 004f 13       		.uleb128 0x13
 5109 0050 00       		.byte	0
 5110 0051 00       		.byte	0
 5111 0052 07       		.uleb128 0x7
 5112 0053 0D       		.uleb128 0xd
 5113 0054 00       		.byte	0
 5114 0055 03       		.uleb128 0x3
 5115 0056 0E       		.uleb128 0xe
 5116 0057 3A       		.uleb128 0x3a
 5117 0058 0B       		.uleb128 0xb
 5118 0059 3B       		.uleb128 0x3b
 5119 005a 0B       		.uleb128 0xb
 5120 005b 49       		.uleb128 0x49
 5121 005c 13       		.uleb128 0x13
 5122 005d 00       		.byte	0
 5123 005e 00       		.byte	0
 5124 005f 08       		.uleb128 0x8
 5125 0060 01       		.uleb128 0x1
 5126 0061 01       		.byte	0x1
 5127 0062 49       		.uleb128 0x49
 5128 0063 13       		.uleb128 0x13
 5129 0064 01       		.uleb128 0x1
 5130 0065 13       		.uleb128 0x13
 5131 0066 00       		.byte	0
 5132 0067 00       		.byte	0
 5133 0068 09       		.uleb128 0x9
 5134 0069 21       		.uleb128 0x21
ARM GAS  /tmp/ccn6Sm5M.s 			page 127


 5135 006a 00       		.byte	0
 5136 006b 49       		.uleb128 0x49
 5137 006c 13       		.uleb128 0x13
 5138 006d 2F       		.uleb128 0x2f
 5139 006e 0B       		.uleb128 0xb
 5140 006f 00       		.byte	0
 5141 0070 00       		.byte	0
 5142 0071 0A       		.uleb128 0xa
 5143 0072 13       		.uleb128 0x13
 5144 0073 01       		.byte	0x1
 5145 0074 0B       		.uleb128 0xb
 5146 0075 0B       		.uleb128 0xb
 5147 0076 3A       		.uleb128 0x3a
 5148 0077 0B       		.uleb128 0xb
 5149 0078 3B       		.uleb128 0x3b
 5150 0079 0B       		.uleb128 0xb
 5151 007a 01       		.uleb128 0x1
 5152 007b 13       		.uleb128 0x13
 5153 007c 00       		.byte	0
 5154 007d 00       		.byte	0
 5155 007e 0B       		.uleb128 0xb
 5156 007f 0D       		.uleb128 0xd
 5157 0080 00       		.byte	0
 5158 0081 03       		.uleb128 0x3
 5159 0082 0E       		.uleb128 0xe
 5160 0083 3A       		.uleb128 0x3a
 5161 0084 0B       		.uleb128 0xb
 5162 0085 3B       		.uleb128 0x3b
 5163 0086 0B       		.uleb128 0xb
 5164 0087 49       		.uleb128 0x49
 5165 0088 13       		.uleb128 0x13
 5166 0089 38       		.uleb128 0x38
 5167 008a 0A       		.uleb128 0xa
 5168 008b 00       		.byte	0
 5169 008c 00       		.byte	0
 5170 008d 0C       		.uleb128 0xc
 5171 008e 0F       		.uleb128 0xf
 5172 008f 00       		.byte	0
 5173 0090 0B       		.uleb128 0xb
 5174 0091 0B       		.uleb128 0xb
 5175 0092 00       		.byte	0
 5176 0093 00       		.byte	0
 5177 0094 0D       		.uleb128 0xd
 5178 0095 13       		.uleb128 0x13
 5179 0096 01       		.byte	0x1
 5180 0097 03       		.uleb128 0x3
 5181 0098 0E       		.uleb128 0xe
 5182 0099 0B       		.uleb128 0xb
 5183 009a 0B       		.uleb128 0xb
 5184 009b 3A       		.uleb128 0x3a
 5185 009c 0B       		.uleb128 0xb
 5186 009d 3B       		.uleb128 0x3b
 5187 009e 0B       		.uleb128 0xb
 5188 009f 01       		.uleb128 0x1
 5189 00a0 13       		.uleb128 0x13
 5190 00a1 00       		.byte	0
 5191 00a2 00       		.byte	0
ARM GAS  /tmp/ccn6Sm5M.s 			page 128


 5192 00a3 0E       		.uleb128 0xe
 5193 00a4 0D       		.uleb128 0xd
 5194 00a5 00       		.byte	0
 5195 00a6 03       		.uleb128 0x3
 5196 00a7 08       		.uleb128 0x8
 5197 00a8 3A       		.uleb128 0x3a
 5198 00a9 0B       		.uleb128 0xb
 5199 00aa 3B       		.uleb128 0x3b
 5200 00ab 0B       		.uleb128 0xb
 5201 00ac 49       		.uleb128 0x49
 5202 00ad 13       		.uleb128 0x13
 5203 00ae 38       		.uleb128 0x38
 5204 00af 0A       		.uleb128 0xa
 5205 00b0 00       		.byte	0
 5206 00b1 00       		.byte	0
 5207 00b2 0F       		.uleb128 0xf
 5208 00b3 0F       		.uleb128 0xf
 5209 00b4 00       		.byte	0
 5210 00b5 0B       		.uleb128 0xb
 5211 00b6 0B       		.uleb128 0xb
 5212 00b7 49       		.uleb128 0x49
 5213 00b8 13       		.uleb128 0x13
 5214 00b9 00       		.byte	0
 5215 00ba 00       		.byte	0
 5216 00bb 10       		.uleb128 0x10
 5217 00bc 13       		.uleb128 0x13
 5218 00bd 01       		.byte	0x1
 5219 00be 03       		.uleb128 0x3
 5220 00bf 0E       		.uleb128 0xe
 5221 00c0 0B       		.uleb128 0xb
 5222 00c1 05       		.uleb128 0x5
 5223 00c2 3A       		.uleb128 0x3a
 5224 00c3 0B       		.uleb128 0xb
 5225 00c4 3B       		.uleb128 0x3b
 5226 00c5 0B       		.uleb128 0xb
 5227 00c6 01       		.uleb128 0x1
 5228 00c7 13       		.uleb128 0x13
 5229 00c8 00       		.byte	0
 5230 00c9 00       		.byte	0
 5231 00ca 11       		.uleb128 0x11
 5232 00cb 15       		.uleb128 0x15
 5233 00cc 00       		.byte	0
 5234 00cd 27       		.uleb128 0x27
 5235 00ce 0C       		.uleb128 0xc
 5236 00cf 00       		.byte	0
 5237 00d0 00       		.byte	0
 5238 00d1 12       		.uleb128 0x12
 5239 00d2 13       		.uleb128 0x13
 5240 00d3 01       		.byte	0x1
 5241 00d4 03       		.uleb128 0x3
 5242 00d5 0E       		.uleb128 0xe
 5243 00d6 0B       		.uleb128 0xb
 5244 00d7 0B       		.uleb128 0xb
 5245 00d8 3A       		.uleb128 0x3a
 5246 00d9 0B       		.uleb128 0xb
 5247 00da 3B       		.uleb128 0x3b
 5248 00db 05       		.uleb128 0x5
ARM GAS  /tmp/ccn6Sm5M.s 			page 129


 5249 00dc 01       		.uleb128 0x1
 5250 00dd 13       		.uleb128 0x13
 5251 00de 00       		.byte	0
 5252 00df 00       		.byte	0
 5253 00e0 13       		.uleb128 0x13
 5254 00e1 0D       		.uleb128 0xd
 5255 00e2 00       		.byte	0
 5256 00e3 03       		.uleb128 0x3
 5257 00e4 0E       		.uleb128 0xe
 5258 00e5 3A       		.uleb128 0x3a
 5259 00e6 0B       		.uleb128 0xb
 5260 00e7 3B       		.uleb128 0x3b
 5261 00e8 05       		.uleb128 0x5
 5262 00e9 49       		.uleb128 0x49
 5263 00ea 13       		.uleb128 0x13
 5264 00eb 38       		.uleb128 0x38
 5265 00ec 0A       		.uleb128 0xa
 5266 00ed 00       		.byte	0
 5267 00ee 00       		.byte	0
 5268 00ef 14       		.uleb128 0x14
 5269 00f0 0D       		.uleb128 0xd
 5270 00f1 00       		.byte	0
 5271 00f2 03       		.uleb128 0x3
 5272 00f3 08       		.uleb128 0x8
 5273 00f4 3A       		.uleb128 0x3a
 5274 00f5 0B       		.uleb128 0xb
 5275 00f6 3B       		.uleb128 0x3b
 5276 00f7 05       		.uleb128 0x5
 5277 00f8 49       		.uleb128 0x49
 5278 00f9 13       		.uleb128 0x13
 5279 00fa 38       		.uleb128 0x38
 5280 00fb 0A       		.uleb128 0xa
 5281 00fc 00       		.byte	0
 5282 00fd 00       		.byte	0
 5283 00fe 15       		.uleb128 0x15
 5284 00ff 15       		.uleb128 0x15
 5285 0100 01       		.byte	0x1
 5286 0101 27       		.uleb128 0x27
 5287 0102 0C       		.uleb128 0xc
 5288 0103 49       		.uleb128 0x49
 5289 0104 13       		.uleb128 0x13
 5290 0105 01       		.uleb128 0x1
 5291 0106 13       		.uleb128 0x13
 5292 0107 00       		.byte	0
 5293 0108 00       		.byte	0
 5294 0109 16       		.uleb128 0x16
 5295 010a 05       		.uleb128 0x5
 5296 010b 00       		.byte	0
 5297 010c 49       		.uleb128 0x49
 5298 010d 13       		.uleb128 0x13
 5299 010e 00       		.byte	0
 5300 010f 00       		.byte	0
 5301 0110 17       		.uleb128 0x17
 5302 0111 26       		.uleb128 0x26
 5303 0112 00       		.byte	0
 5304 0113 49       		.uleb128 0x49
 5305 0114 13       		.uleb128 0x13
ARM GAS  /tmp/ccn6Sm5M.s 			page 130


 5306 0115 00       		.byte	0
 5307 0116 00       		.byte	0
 5308 0117 18       		.uleb128 0x18
 5309 0118 15       		.uleb128 0x15
 5310 0119 01       		.byte	0x1
 5311 011a 27       		.uleb128 0x27
 5312 011b 0C       		.uleb128 0xc
 5313 011c 01       		.uleb128 0x1
 5314 011d 13       		.uleb128 0x13
 5315 011e 00       		.byte	0
 5316 011f 00       		.byte	0
 5317 0120 19       		.uleb128 0x19
 5318 0121 35       		.uleb128 0x35
 5319 0122 00       		.byte	0
 5320 0123 49       		.uleb128 0x49
 5321 0124 13       		.uleb128 0x13
 5322 0125 00       		.byte	0
 5323 0126 00       		.byte	0
 5324 0127 1A       		.uleb128 0x1a
 5325 0128 04       		.uleb128 0x4
 5326 0129 01       		.byte	0x1
 5327 012a 03       		.uleb128 0x3
 5328 012b 0E       		.uleb128 0xe
 5329 012c 0B       		.uleb128 0xb
 5330 012d 0B       		.uleb128 0xb
 5331 012e 3A       		.uleb128 0x3a
 5332 012f 0B       		.uleb128 0xb
 5333 0130 3B       		.uleb128 0x3b
 5334 0131 0B       		.uleb128 0xb
 5335 0132 01       		.uleb128 0x1
 5336 0133 13       		.uleb128 0x13
 5337 0134 00       		.byte	0
 5338 0135 00       		.byte	0
 5339 0136 1B       		.uleb128 0x1b
 5340 0137 28       		.uleb128 0x28
 5341 0138 00       		.byte	0
 5342 0139 03       		.uleb128 0x3
 5343 013a 0E       		.uleb128 0xe
 5344 013b 1C       		.uleb128 0x1c
 5345 013c 0D       		.uleb128 0xd
 5346 013d 00       		.byte	0
 5347 013e 00       		.byte	0
 5348 013f 1C       		.uleb128 0x1c
 5349 0140 13       		.uleb128 0x13
 5350 0141 01       		.byte	0x1
 5351 0142 0B       		.uleb128 0xb
 5352 0143 05       		.uleb128 0x5
 5353 0144 3A       		.uleb128 0x3a
 5354 0145 0B       		.uleb128 0xb
 5355 0146 3B       		.uleb128 0x3b
 5356 0147 0B       		.uleb128 0xb
 5357 0148 01       		.uleb128 0x1
 5358 0149 13       		.uleb128 0x13
 5359 014a 00       		.byte	0
 5360 014b 00       		.byte	0
 5361 014c 1D       		.uleb128 0x1d
 5362 014d 21       		.uleb128 0x21
ARM GAS  /tmp/ccn6Sm5M.s 			page 131


 5363 014e 00       		.byte	0
 5364 014f 49       		.uleb128 0x49
 5365 0150 13       		.uleb128 0x13
 5366 0151 2F       		.uleb128 0x2f
 5367 0152 05       		.uleb128 0x5
 5368 0153 00       		.byte	0
 5369 0154 00       		.byte	0
 5370 0155 1E       		.uleb128 0x1e
 5371 0156 16       		.uleb128 0x16
 5372 0157 00       		.byte	0
 5373 0158 03       		.uleb128 0x3
 5374 0159 08       		.uleb128 0x8
 5375 015a 3A       		.uleb128 0x3a
 5376 015b 0B       		.uleb128 0xb
 5377 015c 3B       		.uleb128 0x3b
 5378 015d 05       		.uleb128 0x5
 5379 015e 49       		.uleb128 0x49
 5380 015f 13       		.uleb128 0x13
 5381 0160 00       		.byte	0
 5382 0161 00       		.byte	0
 5383 0162 1F       		.uleb128 0x1f
 5384 0163 13       		.uleb128 0x13
 5385 0164 01       		.byte	0x1
 5386 0165 0B       		.uleb128 0xb
 5387 0166 0B       		.uleb128 0xb
 5388 0167 3A       		.uleb128 0x3a
 5389 0168 0B       		.uleb128 0xb
 5390 0169 3B       		.uleb128 0x3b
 5391 016a 05       		.uleb128 0x5
 5392 016b 01       		.uleb128 0x1
 5393 016c 13       		.uleb128 0x13
 5394 016d 00       		.byte	0
 5395 016e 00       		.byte	0
 5396 016f 20       		.uleb128 0x20
 5397 0170 13       		.uleb128 0x13
 5398 0171 01       		.byte	0x1
 5399 0172 0B       		.uleb128 0xb
 5400 0173 05       		.uleb128 0x5
 5401 0174 3A       		.uleb128 0x3a
 5402 0175 0B       		.uleb128 0xb
 5403 0176 3B       		.uleb128 0x3b
 5404 0177 05       		.uleb128 0x5
 5405 0178 01       		.uleb128 0x1
 5406 0179 13       		.uleb128 0x13
 5407 017a 00       		.byte	0
 5408 017b 00       		.byte	0
 5409 017c 21       		.uleb128 0x21
 5410 017d 04       		.uleb128 0x4
 5411 017e 01       		.byte	0x1
 5412 017f 0B       		.uleb128 0xb
 5413 0180 0B       		.uleb128 0xb
 5414 0181 3A       		.uleb128 0x3a
 5415 0182 0B       		.uleb128 0xb
 5416 0183 3B       		.uleb128 0x3b
 5417 0184 0B       		.uleb128 0xb
 5418 0185 01       		.uleb128 0x1
 5419 0186 13       		.uleb128 0x13
ARM GAS  /tmp/ccn6Sm5M.s 			page 132


 5420 0187 00       		.byte	0
 5421 0188 00       		.byte	0
 5422 0189 22       		.uleb128 0x22
 5423 018a 28       		.uleb128 0x28
 5424 018b 00       		.byte	0
 5425 018c 03       		.uleb128 0x3
 5426 018d 08       		.uleb128 0x8
 5427 018e 1C       		.uleb128 0x1c
 5428 018f 0D       		.uleb128 0xd
 5429 0190 00       		.byte	0
 5430 0191 00       		.byte	0
 5431 0192 23       		.uleb128 0x23
 5432 0193 2E       		.uleb128 0x2e
 5433 0194 01       		.byte	0x1
 5434 0195 03       		.uleb128 0x3
 5435 0196 0E       		.uleb128 0xe
 5436 0197 3A       		.uleb128 0x3a
 5437 0198 0B       		.uleb128 0xb
 5438 0199 3B       		.uleb128 0x3b
 5439 019a 05       		.uleb128 0x5
 5440 019b 27       		.uleb128 0x27
 5441 019c 0C       		.uleb128 0xc
 5442 019d 11       		.uleb128 0x11
 5443 019e 01       		.uleb128 0x1
 5444 019f 12       		.uleb128 0x12
 5445 01a0 01       		.uleb128 0x1
 5446 01a1 40       		.uleb128 0x40
 5447 01a2 06       		.uleb128 0x6
 5448 01a3 01       		.uleb128 0x1
 5449 01a4 13       		.uleb128 0x13
 5450 01a5 00       		.byte	0
 5451 01a6 00       		.byte	0
 5452 01a7 24       		.uleb128 0x24
 5453 01a8 05       		.uleb128 0x5
 5454 01a9 00       		.byte	0
 5455 01aa 03       		.uleb128 0x3
 5456 01ab 0E       		.uleb128 0xe
 5457 01ac 3A       		.uleb128 0x3a
 5458 01ad 0B       		.uleb128 0xb
 5459 01ae 3B       		.uleb128 0x3b
 5460 01af 05       		.uleb128 0x5
 5461 01b0 49       		.uleb128 0x49
 5462 01b1 13       		.uleb128 0x13
 5463 01b2 02       		.uleb128 0x2
 5464 01b3 0A       		.uleb128 0xa
 5465 01b4 00       		.byte	0
 5466 01b5 00       		.byte	0
 5467 01b6 25       		.uleb128 0x25
 5468 01b7 2E       		.uleb128 0x2e
 5469 01b8 01       		.byte	0x1
 5470 01b9 03       		.uleb128 0x3
 5471 01ba 0E       		.uleb128 0xe
 5472 01bb 3A       		.uleb128 0x3a
 5473 01bc 0B       		.uleb128 0xb
 5474 01bd 3B       		.uleb128 0x3b
 5475 01be 0B       		.uleb128 0xb
 5476 01bf 11       		.uleb128 0x11
ARM GAS  /tmp/ccn6Sm5M.s 			page 133


 5477 01c0 01       		.uleb128 0x1
 5478 01c1 12       		.uleb128 0x12
 5479 01c2 01       		.uleb128 0x1
 5480 01c3 40       		.uleb128 0x40
 5481 01c4 06       		.uleb128 0x6
 5482 01c5 01       		.uleb128 0x1
 5483 01c6 13       		.uleb128 0x13
 5484 01c7 00       		.byte	0
 5485 01c8 00       		.byte	0
 5486 01c9 26       		.uleb128 0x26
 5487 01ca 34       		.uleb128 0x34
 5488 01cb 00       		.byte	0
 5489 01cc 03       		.uleb128 0x3
 5490 01cd 08       		.uleb128 0x8
 5491 01ce 3A       		.uleb128 0x3a
 5492 01cf 0B       		.uleb128 0xb
 5493 01d0 3B       		.uleb128 0x3b
 5494 01d1 0B       		.uleb128 0xb
 5495 01d2 49       		.uleb128 0x49
 5496 01d3 13       		.uleb128 0x13
 5497 01d4 02       		.uleb128 0x2
 5498 01d5 0A       		.uleb128 0xa
 5499 01d6 00       		.byte	0
 5500 01d7 00       		.byte	0
 5501 01d8 27       		.uleb128 0x27
 5502 01d9 34       		.uleb128 0x34
 5503 01da 00       		.byte	0
 5504 01db 03       		.uleb128 0x3
 5505 01dc 0E       		.uleb128 0xe
 5506 01dd 3A       		.uleb128 0x3a
 5507 01de 0B       		.uleb128 0xb
 5508 01df 3B       		.uleb128 0x3b
 5509 01e0 0B       		.uleb128 0xb
 5510 01e1 49       		.uleb128 0x49
 5511 01e2 13       		.uleb128 0x13
 5512 01e3 02       		.uleb128 0x2
 5513 01e4 0A       		.uleb128 0xa
 5514 01e5 00       		.byte	0
 5515 01e6 00       		.byte	0
 5516 01e7 28       		.uleb128 0x28
 5517 01e8 34       		.uleb128 0x34
 5518 01e9 00       		.byte	0
 5519 01ea 03       		.uleb128 0x3
 5520 01eb 0E       		.uleb128 0xe
 5521 01ec 49       		.uleb128 0x49
 5522 01ed 13       		.uleb128 0x13
 5523 01ee 34       		.uleb128 0x34
 5524 01ef 0C       		.uleb128 0xc
 5525 01f0 00       		.byte	0
 5526 01f1 00       		.byte	0
 5527 01f2 29       		.uleb128 0x29
 5528 01f3 2E       		.uleb128 0x2e
 5529 01f4 01       		.byte	0x1
 5530 01f5 3F       		.uleb128 0x3f
 5531 01f6 0C       		.uleb128 0xc
 5532 01f7 03       		.uleb128 0x3
 5533 01f8 0E       		.uleb128 0xe
ARM GAS  /tmp/ccn6Sm5M.s 			page 134


 5534 01f9 3A       		.uleb128 0x3a
 5535 01fa 0B       		.uleb128 0xb
 5536 01fb 3B       		.uleb128 0x3b
 5537 01fc 0B       		.uleb128 0xb
 5538 01fd 27       		.uleb128 0x27
 5539 01fe 0C       		.uleb128 0xc
 5540 01ff 11       		.uleb128 0x11
 5541 0200 01       		.uleb128 0x1
 5542 0201 12       		.uleb128 0x12
 5543 0202 01       		.uleb128 0x1
 5544 0203 40       		.uleb128 0x40
 5545 0204 06       		.uleb128 0x6
 5546 0205 01       		.uleb128 0x1
 5547 0206 13       		.uleb128 0x13
 5548 0207 00       		.byte	0
 5549 0208 00       		.byte	0
 5550 0209 2A       		.uleb128 0x2a
 5551 020a 05       		.uleb128 0x5
 5552 020b 00       		.byte	0
 5553 020c 03       		.uleb128 0x3
 5554 020d 08       		.uleb128 0x8
 5555 020e 3A       		.uleb128 0x3a
 5556 020f 0B       		.uleb128 0xb
 5557 0210 3B       		.uleb128 0x3b
 5558 0211 0B       		.uleb128 0xb
 5559 0212 49       		.uleb128 0x49
 5560 0213 13       		.uleb128 0x13
 5561 0214 02       		.uleb128 0x2
 5562 0215 0A       		.uleb128 0xa
 5563 0216 00       		.byte	0
 5564 0217 00       		.byte	0
 5565 0218 2B       		.uleb128 0x2b
 5566 0219 2E       		.uleb128 0x2e
 5567 021a 01       		.byte	0x1
 5568 021b 3F       		.uleb128 0x3f
 5569 021c 0C       		.uleb128 0xc
 5570 021d 03       		.uleb128 0x3
 5571 021e 08       		.uleb128 0x8
 5572 021f 3A       		.uleb128 0x3a
 5573 0220 0B       		.uleb128 0xb
 5574 0221 3B       		.uleb128 0x3b
 5575 0222 0B       		.uleb128 0xb
 5576 0223 11       		.uleb128 0x11
 5577 0224 01       		.uleb128 0x1
 5578 0225 12       		.uleb128 0x12
 5579 0226 01       		.uleb128 0x1
 5580 0227 40       		.uleb128 0x40
 5581 0228 06       		.uleb128 0x6
 5582 0229 01       		.uleb128 0x1
 5583 022a 13       		.uleb128 0x13
 5584 022b 00       		.byte	0
 5585 022c 00       		.byte	0
 5586 022d 2C       		.uleb128 0x2c
 5587 022e 2E       		.uleb128 0x2e
 5588 022f 01       		.byte	0x1
 5589 0230 3F       		.uleb128 0x3f
 5590 0231 0C       		.uleb128 0xc
ARM GAS  /tmp/ccn6Sm5M.s 			page 135


 5591 0232 03       		.uleb128 0x3
 5592 0233 0E       		.uleb128 0xe
 5593 0234 3A       		.uleb128 0x3a
 5594 0235 0B       		.uleb128 0xb
 5595 0236 3B       		.uleb128 0x3b
 5596 0237 0B       		.uleb128 0xb
 5597 0238 49       		.uleb128 0x49
 5598 0239 13       		.uleb128 0x13
 5599 023a 11       		.uleb128 0x11
 5600 023b 01       		.uleb128 0x1
 5601 023c 12       		.uleb128 0x12
 5602 023d 01       		.uleb128 0x1
 5603 023e 40       		.uleb128 0x40
 5604 023f 06       		.uleb128 0x6
 5605 0240 01       		.uleb128 0x1
 5606 0241 13       		.uleb128 0x13
 5607 0242 00       		.byte	0
 5608 0243 00       		.byte	0
 5609 0244 2D       		.uleb128 0x2d
 5610 0245 2E       		.uleb128 0x2e
 5611 0246 00       		.byte	0
 5612 0247 3F       		.uleb128 0x3f
 5613 0248 0C       		.uleb128 0xc
 5614 0249 03       		.uleb128 0x3
 5615 024a 0E       		.uleb128 0xe
 5616 024b 3A       		.uleb128 0x3a
 5617 024c 0B       		.uleb128 0xb
 5618 024d 3B       		.uleb128 0x3b
 5619 024e 05       		.uleb128 0x5
 5620 024f 27       		.uleb128 0x27
 5621 0250 0C       		.uleb128 0xc
 5622 0251 11       		.uleb128 0x11
 5623 0252 01       		.uleb128 0x1
 5624 0253 12       		.uleb128 0x12
 5625 0254 01       		.uleb128 0x1
 5626 0255 40       		.uleb128 0x40
 5627 0256 06       		.uleb128 0x6
 5628 0257 00       		.byte	0
 5629 0258 00       		.byte	0
 5630 0259 2E       		.uleb128 0x2e
 5631 025a 2E       		.uleb128 0x2e
 5632 025b 01       		.byte	0x1
 5633 025c 3F       		.uleb128 0x3f
 5634 025d 0C       		.uleb128 0xc
 5635 025e 03       		.uleb128 0x3
 5636 025f 0E       		.uleb128 0xe
 5637 0260 3A       		.uleb128 0x3a
 5638 0261 0B       		.uleb128 0xb
 5639 0262 3B       		.uleb128 0x3b
 5640 0263 05       		.uleb128 0x5
 5641 0264 27       		.uleb128 0x27
 5642 0265 0C       		.uleb128 0xc
 5643 0266 11       		.uleb128 0x11
 5644 0267 01       		.uleb128 0x1
 5645 0268 12       		.uleb128 0x12
 5646 0269 01       		.uleb128 0x1
 5647 026a 40       		.uleb128 0x40
ARM GAS  /tmp/ccn6Sm5M.s 			page 136


 5648 026b 06       		.uleb128 0x6
 5649 026c 01       		.uleb128 0x1
 5650 026d 13       		.uleb128 0x13
 5651 026e 00       		.byte	0
 5652 026f 00       		.byte	0
 5653 0270 2F       		.uleb128 0x2f
 5654 0271 34       		.uleb128 0x34
 5655 0272 00       		.byte	0
 5656 0273 03       		.uleb128 0x3
 5657 0274 0E       		.uleb128 0xe
 5658 0275 3A       		.uleb128 0x3a
 5659 0276 0B       		.uleb128 0xb
 5660 0277 3B       		.uleb128 0x3b
 5661 0278 05       		.uleb128 0x5
 5662 0279 49       		.uleb128 0x49
 5663 027a 13       		.uleb128 0x13
 5664 027b 02       		.uleb128 0x2
 5665 027c 0A       		.uleb128 0xa
 5666 027d 00       		.byte	0
 5667 027e 00       		.byte	0
 5668 027f 30       		.uleb128 0x30
 5669 0280 34       		.uleb128 0x34
 5670 0281 00       		.byte	0
 5671 0282 03       		.uleb128 0x3
 5672 0283 0E       		.uleb128 0xe
 5673 0284 3A       		.uleb128 0x3a
 5674 0285 0B       		.uleb128 0xb
 5675 0286 3B       		.uleb128 0x3b
 5676 0287 05       		.uleb128 0x5
 5677 0288 49       		.uleb128 0x49
 5678 0289 13       		.uleb128 0x13
 5679 028a 3F       		.uleb128 0x3f
 5680 028b 0C       		.uleb128 0xc
 5681 028c 3C       		.uleb128 0x3c
 5682 028d 0C       		.uleb128 0xc
 5683 028e 00       		.byte	0
 5684 028f 00       		.byte	0
 5685 0290 31       		.uleb128 0x31
 5686 0291 34       		.uleb128 0x34
 5687 0292 00       		.byte	0
 5688 0293 03       		.uleb128 0x3
 5689 0294 0E       		.uleb128 0xe
 5690 0295 3A       		.uleb128 0x3a
 5691 0296 0B       		.uleb128 0xb
 5692 0297 3B       		.uleb128 0x3b
 5693 0298 0B       		.uleb128 0xb
 5694 0299 49       		.uleb128 0x49
 5695 029a 13       		.uleb128 0x13
 5696 029b 3F       		.uleb128 0x3f
 5697 029c 0C       		.uleb128 0xc
 5698 029d 3C       		.uleb128 0x3c
 5699 029e 0C       		.uleb128 0xc
 5700 029f 00       		.byte	0
 5701 02a0 00       		.byte	0
 5702 02a1 32       		.uleb128 0x32
 5703 02a2 34       		.uleb128 0x34
 5704 02a3 00       		.byte	0
ARM GAS  /tmp/ccn6Sm5M.s 			page 137


 5705 02a4 03       		.uleb128 0x3
 5706 02a5 0E       		.uleb128 0xe
 5707 02a6 3A       		.uleb128 0x3a
 5708 02a7 0B       		.uleb128 0xb
 5709 02a8 3B       		.uleb128 0x3b
 5710 02a9 0B       		.uleb128 0xb
 5711 02aa 49       		.uleb128 0x49
 5712 02ab 13       		.uleb128 0x13
 5713 02ac 3F       		.uleb128 0x3f
 5714 02ad 0C       		.uleb128 0xc
 5715 02ae 02       		.uleb128 0x2
 5716 02af 0A       		.uleb128 0xa
 5717 02b0 00       		.byte	0
 5718 02b1 00       		.byte	0
 5719 02b2 00       		.byte	0
 5720              		.section	.debug_loc,"",%progbits
 5721              	.Ldebug_loc0:
 5722              	.LLST0:
 5723 0000 00000000 		.4byte	.LFB14
 5724 0004 02000000 		.4byte	.LCFI0
 5725 0008 0200     		.2byte	0x2
 5726 000a 7D       		.byte	0x7d
 5727 000b 00       		.sleb128 0
 5728 000c 02000000 		.4byte	.LCFI0
 5729 0010 04000000 		.4byte	.LCFI1
 5730 0014 0200     		.2byte	0x2
 5731 0016 7D       		.byte	0x7d
 5732 0017 04       		.sleb128 4
 5733 0018 04000000 		.4byte	.LCFI1
 5734 001c 06000000 		.4byte	.LCFI2
 5735 0020 0200     		.2byte	0x2
 5736 0022 7D       		.byte	0x7d
 5737 0023 10       		.sleb128 16
 5738 0024 06000000 		.4byte	.LCFI2
 5739 0028 36000000 		.4byte	.LFE14
 5740 002c 0200     		.2byte	0x2
 5741 002e 77       		.byte	0x77
 5742 002f 10       		.sleb128 16
 5743 0030 00000000 		.4byte	0
 5744 0034 00000000 		.4byte	0
 5745              	.LLST1:
 5746 0038 00000000 		.4byte	.LFB20
 5747 003c 02000000 		.4byte	.LCFI3
 5748 0040 0200     		.2byte	0x2
 5749 0042 7D       		.byte	0x7d
 5750 0043 00       		.sleb128 0
 5751 0044 02000000 		.4byte	.LCFI3
 5752 0048 04000000 		.4byte	.LCFI4
 5753 004c 0200     		.2byte	0x2
 5754 004e 7D       		.byte	0x7d
 5755 004f 04       		.sleb128 4
 5756 0050 04000000 		.4byte	.LCFI4
 5757 0054 06000000 		.4byte	.LCFI5
 5758 0058 0200     		.2byte	0x2
 5759 005a 7D       		.byte	0x7d
 5760 005b 10       		.sleb128 16
 5761 005c 06000000 		.4byte	.LCFI5
ARM GAS  /tmp/ccn6Sm5M.s 			page 138


 5762 0060 5C000000 		.4byte	.LFE20
 5763 0064 0200     		.2byte	0x2
 5764 0066 77       		.byte	0x77
 5765 0067 10       		.sleb128 16
 5766 0068 00000000 		.4byte	0
 5767 006c 00000000 		.4byte	0
 5768              	.LLST2:
 5769 0070 00000000 		.4byte	.LFB35
 5770 0074 02000000 		.4byte	.LCFI6
 5771 0078 0200     		.2byte	0x2
 5772 007a 7D       		.byte	0x7d
 5773 007b 00       		.sleb128 0
 5774 007c 02000000 		.4byte	.LCFI6
 5775 0080 04000000 		.4byte	.LCFI7
 5776 0084 0200     		.2byte	0x2
 5777 0086 7D       		.byte	0x7d
 5778 0087 0C       		.sleb128 12
 5779 0088 04000000 		.4byte	.LCFI7
 5780 008c 06000000 		.4byte	.LCFI8
 5781 0090 0200     		.2byte	0x2
 5782 0092 7D       		.byte	0x7d
 5783 0093 30       		.sleb128 48
 5784 0094 06000000 		.4byte	.LCFI8
 5785 0098 4C020000 		.4byte	.LFE35
 5786 009c 0200     		.2byte	0x2
 5787 009e 77       		.byte	0x77
 5788 009f 18       		.sleb128 24
 5789 00a0 00000000 		.4byte	0
 5790 00a4 00000000 		.4byte	0
 5791              	.LLST3:
 5792 00a8 00000000 		.4byte	.LFB36
 5793 00ac 02000000 		.4byte	.LCFI9
 5794 00b0 0200     		.2byte	0x2
 5795 00b2 7D       		.byte	0x7d
 5796 00b3 00       		.sleb128 0
 5797 00b4 02000000 		.4byte	.LCFI9
 5798 00b8 04000000 		.4byte	.LCFI10
 5799 00bc 0200     		.2byte	0x2
 5800 00be 7D       		.byte	0x7d
 5801 00bf 08       		.sleb128 8
 5802 00c0 04000000 		.4byte	.LCFI10
 5803 00c4 06000000 		.4byte	.LCFI11
 5804 00c8 0200     		.2byte	0x2
 5805 00ca 7D       		.byte	0x7d
 5806 00cb 10       		.sleb128 16
 5807 00cc 06000000 		.4byte	.LCFI11
 5808 00d0 AA010000 		.4byte	.LFE36
 5809 00d4 0200     		.2byte	0x2
 5810 00d6 77       		.byte	0x77
 5811 00d7 10       		.sleb128 16
 5812 00d8 00000000 		.4byte	0
 5813 00dc 00000000 		.4byte	0
 5814              	.LLST4:
 5815 00e0 00000000 		.4byte	.LFB37
 5816 00e4 02000000 		.4byte	.LCFI12
 5817 00e8 0200     		.2byte	0x2
 5818 00ea 7D       		.byte	0x7d
ARM GAS  /tmp/ccn6Sm5M.s 			page 139


 5819 00eb 00       		.sleb128 0
 5820 00ec 02000000 		.4byte	.LCFI12
 5821 00f0 04000000 		.4byte	.LCFI13
 5822 00f4 0200     		.2byte	0x2
 5823 00f6 7D       		.byte	0x7d
 5824 00f7 0C       		.sleb128 12
 5825 00f8 04000000 		.4byte	.LCFI13
 5826 00fc 06000000 		.4byte	.LCFI14
 5827 0100 0300     		.2byte	0x3
 5828 0102 7D       		.byte	0x7d
 5829 0103 D000     		.sleb128 80
 5830 0105 06000000 		.4byte	.LCFI14
 5831 0109 28040000 		.4byte	.LFE37
 5832 010d 0300     		.2byte	0x3
 5833 010f 77       		.byte	0x77
 5834 0110 C800     		.sleb128 72
 5835 0112 00000000 		.4byte	0
 5836 0116 00000000 		.4byte	0
 5837              	.LLST5:
 5838 011a 00000000 		.4byte	.LFB38
 5839 011e 02000000 		.4byte	.LCFI15
 5840 0122 0200     		.2byte	0x2
 5841 0124 7D       		.byte	0x7d
 5842 0125 00       		.sleb128 0
 5843 0126 02000000 		.4byte	.LCFI15
 5844 012a 04000000 		.4byte	.LCFI16
 5845 012e 0200     		.2byte	0x2
 5846 0130 7D       		.byte	0x7d
 5847 0131 08       		.sleb128 8
 5848 0132 04000000 		.4byte	.LCFI16
 5849 0136 06000000 		.4byte	.LCFI17
 5850 013a 0200     		.2byte	0x2
 5851 013c 7D       		.byte	0x7d
 5852 013d 10       		.sleb128 16
 5853 013e 06000000 		.4byte	.LCFI17
 5854 0142 1C020000 		.4byte	.LFE38
 5855 0146 0200     		.2byte	0x2
 5856 0148 77       		.byte	0x77
 5857 0149 10       		.sleb128 16
 5858 014a 00000000 		.4byte	0
 5859 014e 00000000 		.4byte	0
 5860              	.LLST6:
 5861 0152 00000000 		.4byte	.LFB39
 5862 0156 02000000 		.4byte	.LCFI18
 5863 015a 0200     		.2byte	0x2
 5864 015c 7D       		.byte	0x7d
 5865 015d 00       		.sleb128 0
 5866 015e 02000000 		.4byte	.LCFI18
 5867 0162 04000000 		.4byte	.LCFI19
 5868 0166 0200     		.2byte	0x2
 5869 0168 7D       		.byte	0x7d
 5870 0169 08       		.sleb128 8
 5871 016a 04000000 		.4byte	.LCFI19
 5872 016e 2C000000 		.4byte	.LFE39
 5873 0172 0200     		.2byte	0x2
 5874 0174 77       		.byte	0x77
 5875 0175 08       		.sleb128 8
ARM GAS  /tmp/ccn6Sm5M.s 			page 140


 5876 0176 00000000 		.4byte	0
 5877 017a 00000000 		.4byte	0
 5878              	.LLST7:
 5879 017e 00000000 		.4byte	.LFB40
 5880 0182 02000000 		.4byte	.LCFI20
 5881 0186 0200     		.2byte	0x2
 5882 0188 7D       		.byte	0x7d
 5883 0189 00       		.sleb128 0
 5884 018a 02000000 		.4byte	.LCFI20
 5885 018e 04000000 		.4byte	.LCFI21
 5886 0192 0200     		.2byte	0x2
 5887 0194 7D       		.byte	0x7d
 5888 0195 08       		.sleb128 8
 5889 0196 04000000 		.4byte	.LCFI21
 5890 019a 06000000 		.4byte	.LCFI22
 5891 019e 0200     		.2byte	0x2
 5892 01a0 7D       		.byte	0x7d
 5893 01a1 10       		.sleb128 16
 5894 01a2 06000000 		.4byte	.LCFI22
 5895 01a6 42010000 		.4byte	.LFE40
 5896 01aa 0200     		.2byte	0x2
 5897 01ac 77       		.byte	0x77
 5898 01ad 10       		.sleb128 16
 5899 01ae 00000000 		.4byte	0
 5900 01b2 00000000 		.4byte	0
 5901              		.section	.debug_aranges,"",%progbits
 5902 0000 54000000 		.4byte	0x54
 5903 0004 0200     		.2byte	0x2
 5904 0006 00000000 		.4byte	.Ldebug_info0
 5905 000a 04       		.byte	0x4
 5906 000b 00       		.byte	0
 5907 000c 0000     		.2byte	0
 5908 000e 0000     		.2byte	0
 5909 0010 00000000 		.4byte	.LFB14
 5910 0014 36000000 		.4byte	.LFE14-.LFB14
 5911 0018 00000000 		.4byte	.LFB20
 5912 001c 5C000000 		.4byte	.LFE20-.LFB20
 5913 0020 00000000 		.4byte	.LFB35
 5914 0024 4C020000 		.4byte	.LFE35-.LFB35
 5915 0028 00000000 		.4byte	.LFB36
 5916 002c AA010000 		.4byte	.LFE36-.LFB36
 5917 0030 00000000 		.4byte	.LFB37
 5918 0034 28040000 		.4byte	.LFE37-.LFB37
 5919 0038 00000000 		.4byte	.LFB38
 5920 003c 1C020000 		.4byte	.LFE38-.LFB38
 5921 0040 00000000 		.4byte	.LFB39
 5922 0044 2C000000 		.4byte	.LFE39-.LFB39
 5923 0048 00000000 		.4byte	.LFB40
 5924 004c 42010000 		.4byte	.LFE40-.LFB40
 5925 0050 00000000 		.4byte	0
 5926 0054 00000000 		.4byte	0
 5927              		.section	.debug_ranges,"",%progbits
 5928              	.Ldebug_ranges0:
 5929 0000 00000000 		.4byte	.LFB14
 5930 0004 36000000 		.4byte	.LFE14
 5931 0008 00000000 		.4byte	.LFB20
 5932 000c 5C000000 		.4byte	.LFE20
ARM GAS  /tmp/ccn6Sm5M.s 			page 141


 5933 0010 00000000 		.4byte	.LFB35
 5934 0014 4C020000 		.4byte	.LFE35
 5935 0018 00000000 		.4byte	.LFB36
 5936 001c AA010000 		.4byte	.LFE36
 5937 0020 00000000 		.4byte	.LFB37
 5938 0024 28040000 		.4byte	.LFE37
 5939 0028 00000000 		.4byte	.LFB38
 5940 002c 1C020000 		.4byte	.LFE38
 5941 0030 00000000 		.4byte	.LFB39
 5942 0034 2C000000 		.4byte	.LFE39
 5943 0038 00000000 		.4byte	.LFB40
 5944 003c 42010000 		.4byte	.LFE40
 5945 0040 00000000 		.4byte	0
 5946 0044 00000000 		.4byte	0
 5947              		.section	.debug_line,"",%progbits
 5948              	.Ldebug_line0:
 5949 0000 64030000 		.section	.debug_str,"MS",%progbits,1
 5949      02009201 
 5949      00000201 
 5949      FB0E0D00 
 5949      01010101 
 5950              	.LASF161:
 5951 0000 52534552 		.ascii	"RSERVED1\000"
 5951      56454431 
 5951      00
 5952              	.LASF317:
 5953 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 5953      5F456E61 
 5953      626C6549 
 5953      525100
 5954              	.LASF147:
 5955 0018 5443325F 		.ascii	"TC2_IRQn\000"
 5955      4952516E 
 5955      00
 5956              	.LASF270:
 5957 0021 50574D5F 		.ascii	"PWM_RNPR\000"
 5957      524E5052 
 5957      00
 5958              	.LASF14:
 5959 002a 5F5F7661 		.ascii	"__value\000"
 5959      6C756500 
 5960              	.LASF66:
 5961 0032 5F5F7366 		.ascii	"__sf\000"
 5961      00
 5962              	.LASF330:
 5963 0037 64757479 		.ascii	"duty\000"
 5963      00
 5964              	.LASF75:
 5965 003c 5F726561 		.ascii	"_read\000"
 5965      6400
 5966              	.LASF170:
 5967 0042 4E564943 		.ascii	"NVIC_Type\000"
 5967      5F547970 
 5967      6500
 5968              	.LASF239:
 5969 004c 50574D5F 		.ascii	"PWM_IER1\000"
 5969      49455231 
ARM GAS  /tmp/ccn6Sm5M.s 			page 142


 5969      00
 5970              	.LASF76:
 5971 0055 5F777269 		.ascii	"_write\000"
 5971      746500
 5972              	.LASF62:
 5973 005c 5F617363 		.ascii	"_asctime_buf\000"
 5973      74696D65 
 5973      5F627566 
 5973      00
 5974              	.LASF58:
 5975 0069 5F637674 		.ascii	"_cvtlen\000"
 5975      6C656E00 
 5976              	.LASF265:
 5977 0071 50574D5F 		.ascii	"PWM_WPSR\000"
 5977      57505352 
 5977      00
 5978              	.LASF200:
 5979 007a 4144435F 		.ascii	"ADC_EMR\000"
 5979      454D5200 
 5980              	.LASF197:
 5981 0082 4144435F 		.ascii	"ADC_ISR\000"
 5981      49535200 
 5982              	.LASF333:
 5983 008a 5F737461 		.ascii	"_state\000"
 5983      746500
 5984              	.LASF24:
 5985 0091 5F5F746D 		.ascii	"__tm\000"
 5985      00
 5986              	.LASF112:
 5987 0096 5F776373 		.ascii	"_wcsrtombs_state\000"
 5987      72746F6D 
 5987      62735F73 
 5987      74617465 
 5987      00
 5988              	.LASF80:
 5989 00a7 5F6E6275 		.ascii	"_nbuf\000"
 5989      6600
 5990              	.LASF25:
 5991 00ad 5F5F746D 		.ascii	"__tm_sec\000"
 5991      5F736563 
 5991      00
 5992              	.LASF106:
 5993 00b6 5F6C3634 		.ascii	"_l64a_buf\000"
 5993      615F6275 
 5993      6600
 5994              	.LASF173:
 5995 00c0 56544F52 		.ascii	"VTOR\000"
 5995      00
 5996              	.LASF269:
 5997 00c5 50574D5F 		.ascii	"PWM_TCR\000"
 5997      54435200 
 5998              	.LASF325:
 5999 00cd 73746174 		.ascii	"state\000"
 5999      6500
 6000              	.LASF83:
 6001 00d3 5F6C6F63 		.ascii	"_lock\000"
 6001      6B00
ARM GAS  /tmp/ccn6Sm5M.s 			page 143


 6002              	.LASF259:
 6003 00d9 50574D5F 		.ascii	"PWM_FCR\000"
 6003      46435200 
 6004              	.LASF299:
 6005 00e1 54435F46 		.ascii	"TC_FMR\000"
 6005      4D5200
 6006              	.LASF205:
 6007 00e8 52657365 		.ascii	"Reserved3\000"
 6007      72766564 
 6007      3300
 6008              	.LASF278:
 6009 00f2 52657365 		.ascii	"Reserved7\000"
 6009      72766564 
 6009      3700
 6010              	.LASF93:
 6011 00fc 5F6D756C 		.ascii	"_mult\000"
 6011      7400
 6012              	.LASF211:
 6013 0102 4144435F 		.ascii	"ADC_RPR\000"
 6013      52505200 
 6014              	.LASF126:
 6015 010a 52535443 		.ascii	"RSTC_IRQn\000"
 6015      5F495251 
 6015      6E00
 6016              	.LASF215:
 6017 0114 4144435F 		.ascii	"ADC_RNPR\000"
 6017      524E5052 
 6017      00
 6018              	.LASF164:
 6019 011d 49435052 		.ascii	"ICPR\000"
 6019      00
 6020              	.LASF297:
 6021 0122 54435F51 		.ascii	"TC_QIMR\000"
 6021      494D5200 
 6022              	.LASF217:
 6023 012a 4144435F 		.ascii	"ADC_TNPR\000"
 6023      544E5052 
 6023      00
 6024              	.LASF271:
 6025 0133 50574D5F 		.ascii	"PWM_RNCR\000"
 6025      524E4352 
 6025      00
 6026              	.LASF11:
 6027 013c 5F5F7763 		.ascii	"__wch\000"
 6027      6800
 6028              	.LASF292:
 6029 0142 54435F43 		.ascii	"TC_CHANNEL\000"
 6029      48414E4E 
 6029      454C00
 6030              	.LASF209:
 6031 014d 4144435F 		.ascii	"ADC_WPSR\000"
 6031      57505352 
 6031      00
 6032              	.LASF71:
 6033 0156 5F66696C 		.ascii	"_file\000"
 6033      6500
 6034              	.LASF34:
ARM GAS  /tmp/ccn6Sm5M.s 			page 144


 6035 015c 5F6F6E5F 		.ascii	"_on_exit_args\000"
 6035      65786974 
 6035      5F617267 
 6035      7300
 6036              	.LASF174:
 6037 016a 41495243 		.ascii	"AIRCR\000"
 6037      5200
 6038              	.LASF314:
 6039 0170 74726973 		.ascii	"tristate\000"
 6039      74617465 
 6039      00
 6040              	.LASF337:
 6041 0179 72656C65 		.ascii	"releasetime\000"
 6041      61736574 
 6041      696D6500 
 6042              	.LASF154:
 6043 0185 43524343 		.ascii	"CRCCU_IRQn\000"
 6043      555F4952 
 6043      516E00
 6044              	.LASF306:
 6045 0190 52414D50 		.ascii	"RAMP\000"
 6045      00
 6046              	.LASF280:
 6047 0195 54435F43 		.ascii	"TC_CCR\000"
 6047      435200
 6048              	.LASF108:
 6049 019c 5F6D6272 		.ascii	"_mbrlen_state\000"
 6049      6C656E5F 
 6049      73746174 
 6049      6500
 6050              	.LASF7:
 6051 01aa 6C6F6E67 		.ascii	"long int\000"
 6051      20696E74 
 6051      00
 6052              	.LASF331:
 6053 01b3 5F696D70 		.ascii	"_impure_ptr\000"
 6053      7572655F 
 6053      70747200 
 6054              	.LASF98:
 6055 01bf 5F726573 		.ascii	"_result_k\000"
 6055      756C745F 
 6055      6B00
 6056              	.LASF226:
 6057 01c9 50574D5F 		.ascii	"PWM_CCNT\000"
 6057      43434E54 
 6057      00
 6058              	.LASF45:
 6059 01d2 5F73697A 		.ascii	"_size\000"
 6059      6500
 6060              	.LASF171:
 6061 01d8 43505549 		.ascii	"CPUID\000"
 6061      4400
 6062              	.LASF61:
 6063 01de 5F6C6F63 		.ascii	"_localtime_buf\000"
 6063      616C7469 
 6063      6D655F62 
 6063      756600
ARM GAS  /tmp/ccn6Sm5M.s 			page 145


 6064              	.LASF213:
 6065 01ed 4144435F 		.ascii	"ADC_TPR\000"
 6065      54505200 
 6066              	.LASF326:
 6067 01f5 6D61696E 		.ascii	"main\000"
 6067      00
 6068              	.LASF319:
 6069 01fa 4952516E 		.ascii	"IRQn\000"
 6069      00
 6070              	.LASF150:
 6071 01ff 5443355F 		.ascii	"TC5_IRQn\000"
 6071      4952516E 
 6071      00
 6072              	.LASF29:
 6073 0208 5F5F746D 		.ascii	"__tm_mon\000"
 6073      5F6D6F6E 
 6073      00
 6074              	.LASF318:
 6075 0211 4E564943 		.ascii	"NVIC_SetPriority\000"
 6075      5F536574 
 6075      5072696F 
 6075      72697479 
 6075      00
 6076              	.LASF101:
 6077 0222 5F6D6973 		.ascii	"_misc_reent\000"
 6077      635F7265 
 6077      656E7400 
 6078              	.LASF124:
 6079 022e 53797354 		.ascii	"SysTick_IRQn\000"
 6079      69636B5F 
 6079      4952516E 
 6079      00
 6080              	.LASF54:
 6081 023b 5F637572 		.ascii	"_current_category\000"
 6081      72656E74 
 6081      5F636174 
 6081      65676F72 
 6081      7900
 6082              	.LASF172:
 6083 024d 49435352 		.ascii	"ICSR\000"
 6083      00
 6084              	.LASF0:
 6085 0252 7369676E 		.ascii	"signed char\000"
 6085      65642063 
 6085      68617200 
 6086              	.LASF113:
 6087 025e 75696E74 		.ascii	"uint8_t\000"
 6087      385F7400 
 6088              	.LASF252:
 6089 0266 50574D5F 		.ascii	"PWM_OS\000"
 6089      4F5300
 6090              	.LASF327:
 6091 026d 74696D65 		.ascii	"timestamp\000"
 6091      7374616D 
 6091      7000
 6092              	.LASF291:
 6093 0277 54634368 		.ascii	"TcChannel\000"
ARM GAS  /tmp/ccn6Sm5M.s 			page 146


 6093      616E6E65 
 6093      6C00
 6094              	.LASF263:
 6095 0281 50574D5F 		.ascii	"PWM_SMMR\000"
 6095      534D4D52 
 6095      00
 6096              	.LASF159:
 6097 028a 52455345 		.ascii	"RESERVED0\000"
 6097      52564544 
 6097      3000
 6098              	.LASF1:
 6099 0294 756E7369 		.ascii	"unsigned char\000"
 6099      676E6564 
 6099      20636861 
 6099      7200
 6100              	.LASF165:
 6101 02a2 52455345 		.ascii	"RESERVED3\000"
 6101      52564544 
 6101      3300
 6102              	.LASF167:
 6103 02ac 52455345 		.ascii	"RESERVED4\000"
 6103      52564544 
 6103      3400
 6104              	.LASF168:
 6105 02b6 52455345 		.ascii	"RESERVED5\000"
 6105      52564544 
 6105      3500
 6106              	.LASF261:
 6107 02c0 50574D5F 		.ascii	"PWM_FPE\000"
 6107      46504500 
 6108              	.LASF236:
 6109 02c8 50574D5F 		.ascii	"PWM_ENA\000"
 6109      454E4100 
 6110              	.LASF166:
 6111 02d0 49414252 		.ascii	"IABR\000"
 6111      00
 6112              	.LASF309:
 6113 02d5 6374726C 		.ascii	"ctrl\000"
 6113      00
 6114              	.LASF343:
 6115 02da 5F5F4655 		.ascii	"__FUNCTION__\000"
 6115      4E435449 
 6115      4F4E5F5F 
 6115      00
 6116              	.LASF46:
 6117 02e7 5F726565 		.ascii	"_reent\000"
 6117      6E7400
 6118              	.LASF260:
 6119 02ee 50574D5F 		.ascii	"PWM_FPV\000"
 6119      46505600 
 6120              	.LASF301:
 6121 02f6 5744545F 		.ascii	"WDT_CR\000"
 6121      435200
 6122              	.LASF163:
 6123 02fd 52455345 		.ascii	"RESERVED2\000"
 6123      52564544 
 6123      3200
ARM GAS  /tmp/ccn6Sm5M.s 			page 147


 6124              	.LASF120:
 6125 0307 55736167 		.ascii	"UsageFault_IRQn\000"
 6125      65466175 
 6125      6C745F49 
 6125      52516E00 
 6126              	.LASF284:
 6127 0317 54435F52 		.ascii	"TC_RA\000"
 6127      4100
 6128              	.LASF285:
 6129 031d 54435F52 		.ascii	"TC_RB\000"
 6129      4200
 6130              	.LASF286:
 6131 0323 54435F52 		.ascii	"TC_RC\000"
 6131      4300
 6132              	.LASF86:
 6133 0329 63686172 		.ascii	"char\000"
 6133      00
 6134              	.LASF41:
 6135 032e 5F666E73 		.ascii	"_fns\000"
 6135      00
 6136              	.LASF313:
 6137 0333 6F757470 		.ascii	"output\000"
 6137      757400
 6138              	.LASF184:
 6139 033a 5343425F 		.ascii	"SCB_Type\000"
 6139      54797065 
 6139      00
 6140              	.LASF294:
 6141 0343 54435F42 		.ascii	"TC_BMR\000"
 6141      4D5200
 6142              	.LASF78:
 6143 034a 5F636C6F 		.ascii	"_close\000"
 6143      736500
 6144              	.LASF178:
 6145 0351 44465352 		.ascii	"DFSR\000"
 6145      00
 6146              	.LASF134:
 6147 0356 534D435F 		.ascii	"SMC_IRQn\000"
 6147      4952516E 
 6147      00
 6148              	.LASF272:
 6149 035f 50574D5F 		.ascii	"PWM_TNPR\000"
 6149      544E5052 
 6149      00
 6150              	.LASF251:
 6151 0368 50574D5F 		.ascii	"PWM_OOV\000"
 6151      4F4F5600 
 6152              	.LASF298:
 6153 0370 54435F51 		.ascii	"TC_QISR\000"
 6153      49535200 
 6154              	.LASF229:
 6155 0378 50776D43 		.ascii	"PwmCh_num\000"
 6155      685F6E75 
 6155      6D00
 6156              	.LASF48:
 6157 0382 5F737464 		.ascii	"_stdin\000"
 6157      696E00
ARM GAS  /tmp/ccn6Sm5M.s 			page 148


 6158              	.LASF311:
 6159 0389 72536C6F 		.ascii	"rSlope\000"
 6159      706500
 6160              	.LASF336:
 6161 0390 72747269 		.ascii	"rtrip\000"
 6161      7000
 6162              	.LASF177:
 6163 0396 48465352 		.ascii	"HFSR\000"
 6163      00
 6164              	.LASF246:
 6165 039b 50574D5F 		.ascii	"PWM_SCUPUPD\000"
 6165      53435550 
 6165      55504400 
 6166              	.LASF287:
 6167 03a7 54435F53 		.ascii	"TC_SR\000"
 6167      5200
 6168              	.LASF275:
 6169 03ad 50574D5F 		.ascii	"PWM_PTSR\000"
 6169      50545352 
 6169      00
 6170              	.LASF241:
 6171 03b6 50574D5F 		.ascii	"PWM_IMR1\000"
 6171      494D5231 
 6171      00
 6172              	.LASF249:
 6173 03bf 50574D5F 		.ascii	"PWM_IMR2\000"
 6173      494D5232 
 6173      00
 6174              	.LASF153:
 6175 03c8 50574D5F 		.ascii	"PWM_IRQn\000"
 6175      4952516E 
 6175      00
 6176              	.LASF162:
 6177 03d1 49535052 		.ascii	"ISPR\000"
 6177      00
 6178              	.LASF268:
 6179 03d6 50574D5F 		.ascii	"PWM_TPR\000"
 6179      54505200 
 6180              	.LASF316:
 6181 03de 696E7075 		.ascii	"input\000"
 6181      7400
 6182              	.LASF212:
 6183 03e4 4144435F 		.ascii	"ADC_RCR\000"
 6183      52435200 
 6184              	.LASF238:
 6185 03ec 50574D5F 		.ascii	"PWM_SR\000"
 6185      535200
 6186              	.LASF175:
 6187 03f3 53484353 		.ascii	"SHCSR\000"
 6187      5200
 6188              	.LASF204:
 6189 03f9 4144435F 		.ascii	"ADC_CDR\000"
 6189      43445200 
 6190              	.LASF169:
 6191 0401 53544952 		.ascii	"STIR\000"
 6191      00
 6192              	.LASF155:
ARM GAS  /tmp/ccn6Sm5M.s 			page 149


 6193 0406 4143435F 		.ascii	"ACC_IRQn\000"
 6193      4952516E 
 6193      00
 6194              	.LASF74:
 6195 040f 5F636F6F 		.ascii	"_cookie\000"
 6195      6B696500 
 6196              	.LASF22:
 6197 0417 5F776473 		.ascii	"_wds\000"
 6197      00
 6198              	.LASF130:
 6199 041c 504D435F 		.ascii	"PMC_IRQn\000"
 6199      4952516E 
 6199      00
 6200              	.LASF131:
 6201 0425 4546435F 		.ascii	"EFC_IRQn\000"
 6201      4952516E 
 6201      00
 6202              	.LASF63:
 6203 042e 5F736967 		.ascii	"_sig_func\000"
 6203      5F66756E 
 6203      6300
 6204              	.LASF82:
 6205 0438 5F6F6666 		.ascii	"_offset\000"
 6205      73657400 
 6206              	.LASF59:
 6207 0440 5F637674 		.ascii	"_cvtbuf\000"
 6207      62756600 
 6208              	.LASF125:
 6209 0448 53555043 		.ascii	"SUPC_IRQn\000"
 6209      5F495251 
 6209      6E00
 6210              	.LASF289:
 6211 0452 54435F49 		.ascii	"TC_IDR\000"
 6211      445200
 6212              	.LASF146:
 6213 0459 5443315F 		.ascii	"TC1_IRQn\000"
 6213      4952516E 
 6213      00
 6214              	.LASF137:
 6215 0462 50494F43 		.ascii	"PIOC_IRQn\000"
 6215      5F495251 
 6215      6E00
 6216              	.LASF328:
 6217 046c 4144435F 		.ascii	"ADC_IrqHandler\000"
 6217      49727148 
 6217      616E646C 
 6217      657200
 6218              	.LASF220:
 6219 047b 4144435F 		.ascii	"ADC_PTSR\000"
 6219      50545352 
 6219      00
 6220              	.LASF128:
 6221 0484 5254545F 		.ascii	"RTT_IRQn\000"
 6221      4952516E 
 6221      00
 6222              	.LASF156:
 6223 048d 5544505F 		.ascii	"UDP_IRQn\000"
ARM GAS  /tmp/ccn6Sm5M.s 			page 150


 6223      4952516E 
 6223      00
 6224              	.LASF152:
 6225 0496 44414343 		.ascii	"DACC_IRQn\000"
 6225      5F495251 
 6225      6E00
 6226              	.LASF117:
 6227 04a0 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6227      61736B61 
 6227      626C6549 
 6227      6E745F49 
 6227      52516E00 
 6228              	.LASF257:
 6229 04b4 50574D5F 		.ascii	"PWM_FMR\000"
 6229      464D5200 
 6230              	.LASF254:
 6231 04bc 50574D5F 		.ascii	"PWM_OSC\000"
 6231      4F534300 
 6232              	.LASF191:
 6233 04c4 4144435F 		.ascii	"ADC_CHSR\000"
 6233      43485352 
 6233      00
 6234              	.LASF99:
 6235 04cd 5F703573 		.ascii	"_p5s\000"
 6235      00
 6236              	.LASF18:
 6237 04d2 6C6F6E67 		.ascii	"long unsigned int\000"
 6237      20756E73 
 6237      69676E65 
 6237      6420696E 
 6237      7400
 6238              	.LASF253:
 6239 04e4 50574D5F 		.ascii	"PWM_OSS\000"
 6239      4F535300 
 6240              	.LASF231:
 6241 04ec 50574D5F 		.ascii	"PWM_CMPxVUPD\000"
 6241      434D5078 
 6241      56555044 
 6241      00
 6242              	.LASF118:
 6243 04f9 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 6243      72794D61 
 6243      6E616765 
 6243      6D656E74 
 6243      5F495251 
 6244              	.LASF288:
 6245 050f 54435F49 		.ascii	"TC_IER\000"
 6245      455200
 6246              	.LASF69:
 6247 0516 5F5F7346 		.ascii	"__sFILE\000"
 6247      494C4500 
 6248              	.LASF53:
 6249 051e 5F5F7364 		.ascii	"__sdidinit\000"
 6249      6964696E 
 6249      697400
 6250              	.LASF85:
 6251 0529 5F666C61 		.ascii	"_flags2\000"
ARM GAS  /tmp/ccn6Sm5M.s 			page 151


 6251      67733200 
 6252              	.LASF273:
 6253 0531 50574D5F 		.ascii	"PWM_TNCR\000"
 6253      544E4352 
 6253      00
 6254              	.LASF157:
 6255 053a 4952516E 		.ascii	"IRQn_Type\000"
 6255      5F547970 
 6255      6500
 6256              	.LASF324:
 6257 0544 6C696E65 		.ascii	"line\000"
 6257      00
 6258              	.LASF8:
 6259 0549 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 6259      4B5F5245 
 6259      43555253 
 6259      4956455F 
 6259      5400
 6260              	.LASF47:
 6261 055b 5F657272 		.ascii	"_errno\000"
 6261      6E6F00
 6262              	.LASF202:
 6263 0562 4144435F 		.ascii	"ADC_CGR\000"
 6263      43475200 
 6264              	.LASF68:
 6265 056a 5F736967 		.ascii	"_signal_buf\000"
 6265      6E616C5F 
 6265      62756600 
 6266              	.LASF315:
 6267 0576 74726970 		.ascii	"trip\000"
 6267      00
 6268              	.LASF186:
 6269 057b 4144435F 		.ascii	"ADC_MR\000"
 6269      4D5200
 6270              	.LASF193:
 6271 0582 4144435F 		.ascii	"ADC_LCDR\000"
 6271      4C434452 
 6271      00
 6272              	.LASF304:
 6273 058b 6374726C 		.ascii	"ctrlio_t\000"
 6273      696F5F74 
 6273      00
 6274              	.LASF129:
 6275 0594 5744545F 		.ascii	"WDT_IRQn\000"
 6275      4952516E 
 6275      00
 6276              	.LASF322:
 6277 059d 61726763 		.ascii	"argc\000"
 6277      00
 6278              	.LASF23:
 6279 05a2 5F426967 		.ascii	"_Bigint\000"
 6279      696E7400 
 6280              	.LASF245:
 6281 05aa 50574D5F 		.ascii	"PWM_SCUP\000"
 6281      53435550 
 6281      00
 6282              	.LASF20:
ARM GAS  /tmp/ccn6Sm5M.s 			page 152


 6283 05b3 5F6D6178 		.ascii	"_maxwds\000"
 6283      77647300 
 6284              	.LASF323:
 6285 05bb 61726776 		.ascii	"argv\000"
 6285      00
 6286              	.LASF56:
 6287 05c0 5F5F636C 		.ascii	"__cleanup\000"
 6287      65616E75 
 6287      7000
 6288              	.LASF119:
 6289 05ca 42757346 		.ascii	"BusFault_IRQn\000"
 6289      61756C74 
 6289      5F495251 
 6289      6E00
 6290              	.LASF281:
 6291 05d8 54435F43 		.ascii	"TC_CMR\000"
 6291      4D5200
 6292              	.LASF64:
 6293 05df 5F617465 		.ascii	"_atexit0\000"
 6293      78697430 
 6293      00
 6294              	.LASF52:
 6295 05e8 5F656D65 		.ascii	"_emergency\000"
 6295      7267656E 
 6295      637900
 6296              	.LASF5:
 6297 05f3 6C6F6E67 		.ascii	"long long int\000"
 6297      206C6F6E 
 6297      6720696E 
 6297      7400
 6298              	.LASF267:
 6299 0601 50574D5F 		.ascii	"PWM_RCR\000"
 6299      52435200 
 6300              	.LASF42:
 6301 0609 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 6301      65786974 
 6301      5F617267 
 6301      735F7074 
 6301      7200
 6302              	.LASF240:
 6303 061b 50574D5F 		.ascii	"PWM_IDR1\000"
 6303      49445231 
 6303      00
 6304              	.LASF248:
 6305 0624 50574D5F 		.ascii	"PWM_IDR2\000"
 6305      49445232 
 6305      00
 6306              	.LASF223:
 6307 062d 50574D5F 		.ascii	"PWM_CDTYUPD\000"
 6307      43445459 
 6307      55504400 
 6308              	.LASF89:
 6309 0639 5F6E696F 		.ascii	"_niobs\000"
 6309      627300
 6310              	.LASF142:
 6311 0640 54574931 		.ascii	"TWI1_IRQn\000"
 6311      5F495251 
ARM GAS  /tmp/ccn6Sm5M.s 			page 153


 6311      6E00
 6312              	.LASF65:
 6313 064a 5F5F7367 		.ascii	"__sglue\000"
 6313      6C756500 
 6314              	.LASF264:
 6315 0652 50574D5F 		.ascii	"PWM_WPCR\000"
 6315      57504352 
 6315      00
 6316              	.LASF279:
 6317 065b 50574D5F 		.ascii	"PWM_CH_NUM\000"
 6317      43485F4E 
 6317      554D00
 6318              	.LASF340:
 6319 0666 6D61696E 		.ascii	"main.c\000"
 6319      2E6300
 6320              	.LASF121:
 6321 066d 53564361 		.ascii	"SVCall_IRQn\000"
 6321      6C6C5F49 
 6321      52516E00 
 6322              	.LASF57:
 6323 0679 5F67616D 		.ascii	"_gamma_signgam\000"
 6323      6D615F73 
 6323      69676E67 
 6323      616D00
 6324              	.LASF308:
 6325 0688 6374726C 		.ascii	"ctrlmode_t\000"
 6325      6D6F6465 
 6325      5F7400
 6326              	.LASF242:
 6327 0693 50574D5F 		.ascii	"PWM_ISR1\000"
 6327      49535231 
 6327      00
 6328              	.LASF250:
 6329 069c 50574D5F 		.ascii	"PWM_ISR2\000"
 6329      49535232 
 6329      00
 6330              	.LASF55:
 6331 06a5 5F637572 		.ascii	"_current_locale\000"
 6331      72656E74 
 6331      5F6C6F63 
 6331      616C6500 
 6332              	.LASF100:
 6333 06b5 5F667265 		.ascii	"_freelist\000"
 6333      656C6973 
 6333      7400
 6334              	.LASF90:
 6335 06bf 5F696F62 		.ascii	"_iobs\000"
 6335      7300
 6336              	.LASF88:
 6337 06c5 5F676C75 		.ascii	"_glue\000"
 6337      6500
 6338              	.LASF332:
 6339 06cb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6339      52784275 
 6339      66666572 
 6339      00
 6340              	.LASF21:
ARM GAS  /tmp/ccn6Sm5M.s 			page 154


 6341 06d8 5F736967 		.ascii	"_sign\000"
 6341      6E00
 6342              	.LASF312:
 6343 06de 5F646478 		.ascii	"_ddx\000"
 6343      00
 6344              	.LASF307:
 6345 06e3 53544F50 		.ascii	"STOP\000"
 6345      00
 6346              	.LASF195:
 6347 06e8 4144435F 		.ascii	"ADC_IDR\000"
 6347      49445200 
 6348              	.LASF222:
 6349 06f0 50574D5F 		.ascii	"PWM_CDTY\000"
 6349      43445459 
 6349      00
 6350              	.LASF4:
 6351 06f9 756E7369 		.ascii	"unsigned int\000"
 6351      676E6564 
 6351      20696E74 
 6351      00
 6352              	.LASF149:
 6353 0706 5443345F 		.ascii	"TC4_IRQn\000"
 6353      4952516E 
 6353      00
 6354              	.LASF141:
 6355 070f 54574930 		.ascii	"TWI0_IRQn\000"
 6355      5F495251 
 6355      6E00
 6356              	.LASF302:
 6357 0719 5744545F 		.ascii	"WDT_MR\000"
 6357      4D5200
 6358              	.LASF111:
 6359 0720 5F776372 		.ascii	"_wcrtomb_state\000"
 6359      746F6D62 
 6359      5F737461 
 6359      746500
 6360              	.LASF28:
 6361 072f 5F5F746D 		.ascii	"__tm_mday\000"
 6361      5F6D6461 
 6361      7900
 6362              	.LASF194:
 6363 0739 4144435F 		.ascii	"ADC_IER\000"
 6363      49455200 
 6364              	.LASF79:
 6365 0741 5F756275 		.ascii	"_ubuf\000"
 6365      6600
 6366              	.LASF256:
 6367 0747 50574D5F 		.ascii	"PWM_OSCUPD\000"
 6367      4F534355 
 6367      504400
 6368              	.LASF50:
 6369 0752 5F737464 		.ascii	"_stderr\000"
 6369      65727200 
 6370              	.LASF104:
 6371 075a 5F776374 		.ascii	"_wctomb_state\000"
 6371      6F6D625F 
 6371      73746174 
ARM GAS  /tmp/ccn6Sm5M.s 			page 155


 6371      6500
 6372              	.LASF84:
 6373 0768 5F6D6273 		.ascii	"_mbstate\000"
 6373      74617465 
 6373      00
 6374              	.LASF95:
 6375 0771 5F72616E 		.ascii	"_rand_next\000"
 6375      645F6E65 
 6375      787400
 6376              	.LASF70:
 6377 077c 5F666C61 		.ascii	"_flags\000"
 6377      677300
 6378              	.LASF258:
 6379 0783 50574D5F 		.ascii	"PWM_FSR\000"
 6379      46535200 
 6380              	.LASF39:
 6381 078b 5F617465 		.ascii	"_atexit\000"
 6381      78697400 
 6382              	.LASF13:
 6383 0793 5F5F636F 		.ascii	"__count\000"
 6383      756E7400 
 6384              	.LASF305:
 6385 079b 4E4F524D 		.ascii	"NORMAL\000"
 6385      414C00
 6386              	.LASF31:
 6387 07a2 5F5F746D 		.ascii	"__tm_wday\000"
 6387      5F776461 
 6387      7900
 6388              	.LASF32:
 6389 07ac 5F5F746D 		.ascii	"__tm_yday\000"
 6389      5F796461 
 6389      7900
 6390              	.LASF92:
 6391 07b6 5F736565 		.ascii	"_seed\000"
 6391      6400
 6392              	.LASF77:
 6393 07bc 5F736565 		.ascii	"_seek\000"
 6393      6B00
 6394              	.LASF133:
 6395 07c2 55415254 		.ascii	"UART1_IRQn\000"
 6395      315F4952 
 6395      516E00
 6396              	.LASF335:
 6397 07cd 6E747269 		.ascii	"ntrip\000"
 6397      7000
 6398              	.LASF9:
 6399 07d3 5F66706F 		.ascii	"_fpos_t\000"
 6399      735F7400 
 6400              	.LASF12:
 6401 07db 5F5F7763 		.ascii	"__wchb\000"
 6401      686200
 6402              	.LASF216:
 6403 07e2 4144435F 		.ascii	"ADC_RNCR\000"
 6403      524E4352 
 6403      00
 6404              	.LASF255:
 6405 07eb 50574D5F 		.ascii	"PWM_OSSUPD\000"
ARM GAS  /tmp/ccn6Sm5M.s 			page 156


 6405      4F535355 
 6405      504400
 6406              	.LASF180:
 6407 07f6 42464152 		.ascii	"BFAR\000"
 6407      00
 6408              	.LASF105:
 6409 07fb 5F6D6274 		.ascii	"_mbtowc_state\000"
 6409      6F77635F 
 6409      73746174 
 6409      6500
 6410              	.LASF218:
 6411 0809 4144435F 		.ascii	"ADC_TNCR\000"
 6411      544E4352 
 6411      00
 6412              	.LASF290:
 6413 0812 54435F49 		.ascii	"TC_IMR\000"
 6413      4D5200
 6414              	.LASF6:
 6415 0819 6C6F6E67 		.ascii	"long long unsigned int\000"
 6415      206C6F6E 
 6415      6720756E 
 6415      7369676E 
 6415      65642069 
 6416              	.LASF243:
 6417 0830 50574D5F 		.ascii	"PWM_SCM\000"
 6417      53434D00 
 6418              	.LASF115:
 6419 0838 75696E74 		.ascii	"uint16_t\000"
 6419      31365F74 
 6419      00
 6420              	.LASF36:
 6421 0841 5F64736F 		.ascii	"_dso_handle\000"
 6421      5F68616E 
 6421      646C6500 
 6422              	.LASF247:
 6423 084d 50574D5F 		.ascii	"PWM_IER2\000"
 6423      49455232 
 6423      00
 6424              	.LASF91:
 6425 0856 5F72616E 		.ascii	"_rand48\000"
 6425      64343800 
 6426              	.LASF203:
 6427 085e 4144435F 		.ascii	"ADC_COR\000"
 6427      434F5200 
 6428              	.LASF140:
 6429 0866 48534D43 		.ascii	"HSMCI_IRQn\000"
 6429      495F4952 
 6429      516E00
 6430              	.LASF49:
 6431 0871 5F737464 		.ascii	"_stdout\000"
 6431      6F757400 
 6432              	.LASF139:
 6433 0879 55534152 		.ascii	"USART1_IRQn\000"
 6433      54315F49 
 6433      52516E00 
 6434              	.LASF81:
 6435 0885 5F626C6B 		.ascii	"_blksize\000"
ARM GAS  /tmp/ccn6Sm5M.s 			page 157


 6435      73697A65 
 6435      00
 6436              	.LASF44:
 6437 088e 5F626173 		.ascii	"_base\000"
 6437      6500
 6438              	.LASF344:
 6439 0894 5443315F 		.ascii	"TC1_IrqHandler\000"
 6439      49727148 
 6439      616E646C 
 6439      657200
 6440              	.LASF102:
 6441 08a3 5F737472 		.ascii	"_strtok_last\000"
 6441      746F6B5F 
 6441      6C617374 
 6441      00
 6442              	.LASF151:
 6443 08b0 4144435F 		.ascii	"ADC_IRQn\000"
 6443      4952516E 
 6443      00
 6444              	.LASF109:
 6445 08b9 5F6D6272 		.ascii	"_mbrtowc_state\000"
 6445      746F7763 
 6445      5F737461 
 6445      746500
 6446              	.LASF262:
 6447 08c8 50574D5F 		.ascii	"PWM_ELxMR\000"
 6447      454C784D 
 6447      5200
 6448              	.LASF214:
 6449 08d2 4144435F 		.ascii	"ADC_TCR\000"
 6449      54435200 
 6450              	.LASF160:
 6451 08da 49434552 		.ascii	"ICER\000"
 6451      00
 6452              	.LASF16:
 6453 08df 5F666C6F 		.ascii	"_flock_t\000"
 6453      636B5F74 
 6453      00
 6454              	.LASF321:
 6455 08e8 7463636C 		.ascii	"tcclks\000"
 6455      6B7300
 6456              	.LASF87:
 6457 08ef 5F5F4649 		.ascii	"__FILE\000"
 6457      4C4500
 6458              	.LASF15:
 6459 08f6 5F6D6273 		.ascii	"_mbstate_t\000"
 6459      74617465 
 6459      5F7400
 6460              	.LASF132:
 6461 0901 55415254 		.ascii	"UART0_IRQn\000"
 6461      305F4952 
 6461      516E00
 6462              	.LASF60:
 6463 090c 5F723438 		.ascii	"_r48\000"
 6463      00
 6464              	.LASF235:
 6465 0911 50574D5F 		.ascii	"PWM_CLK\000"
ARM GAS  /tmp/ccn6Sm5M.s 			page 158


 6465      434C4B00 
 6466              	.LASF10:
 6467 0919 77696E74 		.ascii	"wint_t\000"
 6467      5F7400
 6468              	.LASF181:
 6469 0920 41465352 		.ascii	"AFSR\000"
 6469      00
 6470              	.LASF187:
 6471 0925 4144435F 		.ascii	"ADC_SEQR1\000"
 6471      53455152 
 6471      3100
 6472              	.LASF188:
 6473 092f 4144435F 		.ascii	"ADC_SEQR2\000"
 6473      53455152 
 6473      3200
 6474              	.LASF19:
 6475 0939 5F6E6578 		.ascii	"_next\000"
 6475      7400
 6476              	.LASF73:
 6477 093f 5F646174 		.ascii	"_data\000"
 6477      6100
 6478              	.LASF234:
 6479 0945 50776D43 		.ascii	"PwmCmp\000"
 6479      6D7000
 6480              	.LASF143:
 6481 094c 5350495F 		.ascii	"SPI_IRQn\000"
 6481      4952516E 
 6481      00
 6482              	.LASF342:
 6483 0955 696E6974 		.ascii	"init\000"
 6483      00
 6484              	.LASF138:
 6485 095a 55534152 		.ascii	"USART0_IRQn\000"
 6485      54305F49 
 6485      52516E00 
 6486              	.LASF192:
 6487 0966 52657365 		.ascii	"Reserved1\000"
 6487      72766564 
 6487      3100
 6488              	.LASF198:
 6489 0970 52657365 		.ascii	"Reserved2\000"
 6489      72766564 
 6489      3200
 6490              	.LASF176:
 6491 097a 43465352 		.ascii	"CFSR\000"
 6491      00
 6492              	.LASF207:
 6493 097f 52657365 		.ascii	"Reserved4\000"
 6493      72766564 
 6493      3400
 6494              	.LASF210:
 6495 0989 52657365 		.ascii	"Reserved5\000"
 6495      72766564 
 6495      3500
 6496              	.LASF276:
 6497 0993 52657365 		.ascii	"Reserved6\000"
 6497      72766564 
ARM GAS  /tmp/ccn6Sm5M.s 			page 159


 6497      3600
 6498              	.LASF145:
 6499 099d 5443305F 		.ascii	"TC0_IRQn\000"
 6499      4952516E 
 6499      00
 6500              	.LASF303:
 6501 09a6 5744545F 		.ascii	"WDT_SR\000"
 6501      535200
 6502              	.LASF136:
 6503 09ad 50494F42 		.ascii	"PIOB_IRQn\000"
 6503      5F495251 
 6503      6E00
 6504              	.LASF283:
 6505 09b7 54435F43 		.ascii	"TC_CV\000"
 6505      5600
 6506              	.LASF274:
 6507 09bd 50574D5F 		.ascii	"PWM_PTCR\000"
 6507      50544352 
 6507      00
 6508              	.LASF334:
 6509 09c6 6C6F6F70 		.ascii	"loop\000"
 6509      00
 6510              	.LASF122:
 6511 09cb 44656275 		.ascii	"DebugMonitor_IRQn\000"
 6511      674D6F6E 
 6511      69746F72 
 6511      5F495251 
 6511      6E00
 6512              	.LASF341:
 6513 09dd 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 6513      652F6D6F 
 6513      2F646F63 
 6513      2F737475 
 6513      6469756D 
 6514              	.LASF296:
 6515 0a0c 54435F51 		.ascii	"TC_QIDR\000"
 6515      49445200 
 6516              	.LASF277:
 6517 0a14 50574D5F 		.ascii	"PWM_CMP\000"
 6517      434D5000 
 6518              	.LASF221:
 6519 0a1c 50574D5F 		.ascii	"PWM_CMR\000"
 6519      434D5200 
 6520              	.LASF182:
 6521 0a24 4D4D4652 		.ascii	"MMFR\000"
 6521      00
 6522              	.LASF338:
 6523 0a29 64786D61 		.ascii	"dxmax\000"
 6523      7800
 6524              	.LASF179:
 6525 0a2f 4D4D4641 		.ascii	"MMFAR\000"
 6525      5200
 6526              	.LASF103:
 6527 0a35 5F6D626C 		.ascii	"_mblen_state\000"
 6527      656E5F73 
 6527      74617465 
 6527      00
ARM GAS  /tmp/ccn6Sm5M.s 			page 160


 6528              	.LASF2:
 6529 0a42 73686F72 		.ascii	"short int\000"
 6529      7420696E 
 6529      7400
 6530              	.LASF310:
 6531 0a4c 6D6F6465 		.ascii	"mode\000"
 6531      00
 6532              	.LASF320:
 6533 0a51 7072696F 		.ascii	"priority\000"
 6533      72697479 
 6533      00
 6534              	.LASF114:
 6535 0a5a 696E7431 		.ascii	"int16_t\000"
 6535      365F7400 
 6536              	.LASF295:
 6537 0a62 54435F51 		.ascii	"TC_QIER\000"
 6537      49455200 
 6538              	.LASF183:
 6539 0a6a 49534152 		.ascii	"ISAR\000"
 6539      00
 6540              	.LASF199:
 6541 0a6f 4144435F 		.ascii	"ADC_OVER\000"
 6541      4F564552 
 6541      00
 6542              	.LASF37:
 6543 0a78 5F666E74 		.ascii	"_fntypes\000"
 6543      79706573 
 6543      00
 6544              	.LASF135:
 6545 0a81 50494F41 		.ascii	"PIOA_IRQn\000"
 6545      5F495251 
 6545      6E00
 6546              	.LASF227:
 6547 0a8b 50574D5F 		.ascii	"PWM_DT\000"
 6547      445400
 6548              	.LASF30:
 6549 0a92 5F5F746D 		.ascii	"__tm_year\000"
 6549      5F796561 
 6549      7200
 6550              	.LASF196:
 6551 0a9c 4144435F 		.ascii	"ADC_IMR\000"
 6551      494D5200 
 6552              	.LASF185:
 6553 0aa4 4144435F 		.ascii	"ADC_CR\000"
 6553      435200
 6554              	.LASF72:
 6555 0aab 5F6C6266 		.ascii	"_lbfsize\000"
 6555      73697A65 
 6555      00
 6556              	.LASF51:
 6557 0ab4 5F696E63 		.ascii	"_inc\000"
 6557      00
 6558              	.LASF40:
 6559 0ab9 5F696E64 		.ascii	"_ind\000"
 6559      00
 6560              	.LASF219:
 6561 0abe 4144435F 		.ascii	"ADC_PTCR\000"
ARM GAS  /tmp/ccn6Sm5M.s 			page 161


 6561      50544352 
 6561      00
 6562              	.LASF300:
 6563 0ac7 54435F57 		.ascii	"TC_WPMR\000"
 6563      504D5200 
 6564              	.LASF237:
 6565 0acf 50574D5F 		.ascii	"PWM_DIS\000"
 6565      44495300 
 6566              	.LASF233:
 6567 0ad7 50574D5F 		.ascii	"PWM_CMPxMUPD\000"
 6567      434D5078 
 6567      4D555044 
 6567      00
 6568              	.LASF43:
 6569 0ae4 5F5F7362 		.ascii	"__sbuf\000"
 6569      756600
 6570              	.LASF38:
 6571 0aeb 5F69735F 		.ascii	"_is_cxa\000"
 6571      63786100 
 6572              	.LASF225:
 6573 0af3 50574D5F 		.ascii	"PWM_CPRDUPD\000"
 6573      43505244 
 6573      55504400 
 6574              	.LASF339:
 6575 0aff 474E5520 		.ascii	"GNU C 4.6.1\000"
 6575      4320342E 
 6575      362E3100 
 6576              	.LASF96:
 6577 0b0b 5F6D7072 		.ascii	"_mprec\000"
 6577      656300
 6578              	.LASF329:
 6579 0b12 73746174 		.ascii	"status\000"
 6579      757300
 6580              	.LASF67:
 6581 0b19 5F6D6973 		.ascii	"_misc\000"
 6581      6300
 6582              	.LASF17:
 6583 0b1f 5F5F554C 		.ascii	"__ULong\000"
 6583      6F6E6700 
 6584              	.LASF224:
 6585 0b27 50574D5F 		.ascii	"PWM_CPRD\000"
 6585      43505244 
 6585      00
 6586              	.LASF144:
 6587 0b30 5353435F 		.ascii	"SSC_IRQn\000"
 6587      4952516E 
 6587      00
 6588              	.LASF232:
 6589 0b39 50574D5F 		.ascii	"PWM_CMPxM\000"
 6589      434D5078 
 6589      4D00
 6590              	.LASF116:
 6591 0b43 75696E74 		.ascii	"uint32_t\000"
 6591      33325F74 
 6591      00
 6592              	.LASF230:
 6593 0b4c 50574D5F 		.ascii	"PWM_CMPxV\000"
ARM GAS  /tmp/ccn6Sm5M.s 			page 162


 6593      434D5078 
 6593      5600
 6594              	.LASF97:
 6595 0b56 5F726573 		.ascii	"_result\000"
 6595      756C7400 
 6596              	.LASF206:
 6597 0b5e 4144435F 		.ascii	"ADC_ACR\000"
 6597      41435200 
 6598              	.LASF282:
 6599 0b66 54435F53 		.ascii	"TC_SMMR\000"
 6599      4D4D5200 
 6600              	.LASF190:
 6601 0b6e 4144435F 		.ascii	"ADC_CHDR\000"
 6601      43484452 
 6601      00
 6602              	.LASF266:
 6603 0b77 50574D5F 		.ascii	"PWM_RPR\000"
 6603      52505200 
 6604              	.LASF94:
 6605 0b7f 5F616464 		.ascii	"_add\000"
 6605      00
 6606              	.LASF3:
 6607 0b84 73686F72 		.ascii	"short unsigned int\000"
 6607      7420756E 
 6607      7369676E 
 6607      65642069 
 6607      6E7400
 6608              	.LASF208:
 6609 0b97 4144435F 		.ascii	"ADC_WPMR\000"
 6609      57504D52 
 6609      00
 6610              	.LASF27:
 6611 0ba0 5F5F746D 		.ascii	"__tm_hour\000"
 6611      5F686F75 
 6611      7200
 6612              	.LASF123:
 6613 0baa 50656E64 		.ascii	"PendSV_IRQn\000"
 6613      53565F49 
 6613      52516E00 
 6614              	.LASF110:
 6615 0bb6 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 6615      72746F77 
 6615      63735F73 
 6615      74617465 
 6615      00
 6616              	.LASF293:
 6617 0bc7 54435F42 		.ascii	"TC_BCR\000"
 6617      435200
 6618              	.LASF148:
 6619 0bce 5443335F 		.ascii	"TC3_IRQn\000"
 6619      4952516E 
 6619      00
 6620              	.LASF189:
 6621 0bd7 4144435F 		.ascii	"ADC_CHER\000"
 6621      43484552 
 6621      00
 6622              	.LASF158:
ARM GAS  /tmp/ccn6Sm5M.s 			page 163


 6623 0be0 49534552 		.ascii	"ISER\000"
 6623      00
 6624              	.LASF35:
 6625 0be5 5F666E61 		.ascii	"_fnargs\000"
 6625      72677300 
 6626              	.LASF201:
 6627 0bed 4144435F 		.ascii	"ADC_CWR\000"
 6627      43575200 
 6628              	.LASF33:
 6629 0bf5 5F5F746D 		.ascii	"__tm_isdst\000"
 6629      5F697364 
 6629      737400
 6630              	.LASF228:
 6631 0c00 50574D5F 		.ascii	"PWM_DTUPD\000"
 6631      44545550 
 6631      4400
 6632              	.LASF26:
 6633 0c0a 5F5F746D 		.ascii	"__tm_min\000"
 6633      5F6D696E 
 6633      00
 6634              	.LASF244:
 6635 0c13 50574D5F 		.ascii	"PWM_SCUC\000"
 6635      53435543 
 6635      00
 6636              	.LASF107:
 6637 0c1c 5F676574 		.ascii	"_getdate_err\000"
 6637      64617465 
 6637      5F657272 
 6637      00
 6638              	.LASF127:
 6639 0c29 5254435F 		.ascii	"RTC_IRQn\000"
 6639      4952516E 
 6639      00
 6640              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/ccn6Sm5M.s 			page 164


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccn6Sm5M.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/ccn6Sm5M.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/ccn6Sm5M.s:62     .text.NVIC_SetPriority:00000000 $t
     /tmp/ccn6Sm5M.s:66     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
     /tmp/ccn6Sm5M.s:128    .bss:00000000 input
     /tmp/ccn6Sm5M.s:125    .bss:00000000 $d
     /tmp/ccn6Sm5M.s:134    .data:00000000 _state
     /tmp/ccn6Sm5M.s:141    .bss:00000004 loop
     /tmp/ccn6Sm5M.s:148    .data:00000004 ntrip
     /tmp/ccn6Sm5M.s:145    .data:00000001 $d
     /tmp/ccn6Sm5M.s:157    .data:00000014 rtrip
     /tmp/ccn6Sm5M.s:167    .bss:00000030 releasetime
                            *COM*:00000004 dxmax
     /tmp/ccn6Sm5M.s:171    .text.init:00000000 $t
     /tmp/ccn6Sm5M.s:175    .text.init:00000000 init
     /tmp/ccn6Sm5M.s:389    .rodata:00000000 $d
     /tmp/ccn6Sm5M.s:390    .rodata:00000000 .LC0
     /tmp/ccn6Sm5M.s:393    .rodata:00000018 .LC1
     /tmp/ccn6Sm5M.s:396    .rodata:0000002c .LC2
     /tmp/ccn6Sm5M.s:399    .rodata:00000040 .LC3
     /tmp/ccn6Sm5M.s:402    .rodata:00000058 .LC4
     /tmp/ccn6Sm5M.s:405    .text.state:00000000 $t
     /tmp/ccn6Sm5M.s:410    .text.state:00000000 state
     /tmp/ccn6Sm5M.s:438    .text.state:0000001c $d
     /tmp/ccn6Sm5M.s:448    .text.state:0000003c $t
     /tmp/ccn6Sm5M.s:585    .rodata:00000070 .LC5
     /tmp/ccn6Sm5M.s:588    .rodata:0000007c .LC6
     /tmp/ccn6Sm5M.s:591    .rodata:00000094 .LC7
     /tmp/ccn6Sm5M.s:594    .rodata:000000b4 .LC8
     /tmp/ccn6Sm5M.s:597    .rodata:000000b8 .LC9
     /tmp/ccn6Sm5M.s:600    .rodata:000000d4 .LC10
     /tmp/ccn6Sm5M.s:603    .rodata:000000d8 .LC11
     /tmp/ccn6Sm5M.s:606    .rodata:000000fc .LC12
     /tmp/ccn6Sm5M.s:609    .rodata:00000108 .LC13
     /tmp/ccn6Sm5M.s:612    .rodata:00000124 .LC14
     /tmp/ccn6Sm5M.s:615    .rodata:0000013c .LC15
     /tmp/ccn6Sm5M.s:618    .rodata:00000144 .LC16
     /tmp/ccn6Sm5M.s:621    .rodata:00000148 .LC17
     /tmp/ccn6Sm5M.s:624    .rodata:00000150 .LC18
     /tmp/ccn6Sm5M.s:627    .rodata:00000168 .LC19
     /tmp/ccn6Sm5M.s:630    .text.cli:00000000 $t
     /tmp/ccn6Sm5M.s:635    .text.cli:00000000 cli
     /tmp/ccn6Sm5M.s:704    .text.cli:00000090 $d
     /tmp/ccn6Sm5M.s:714    .text.cli:000000b0 $t
     /tmp/ccn6Sm5M.s:1149   .rodata:00000170 .LC20
     /tmp/ccn6Sm5M.s:1152   .rodata:00000188 .LC21
     /tmp/ccn6Sm5M.s:1155   .rodata:000001b4 .LC22
     /tmp/ccn6Sm5M.s:1158   .text.main:00000000 $t
     /tmp/ccn6Sm5M.s:1163   .text.main:00000000 main
     /tmp/ccn6Sm5M.s:1274   .text.main:000000fc $d
     /tmp/ccn6Sm5M.s:1284   .text.main:0000011c $t
     /tmp/ccn6Sm5M.s:1404   .text.TC1_IrqHandler:00000000 $t
     /tmp/ccn6Sm5M.s:1409   .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/ccn6Sm5M.s:1441   .text.ADC_IrqHandler:00000000 $t
     /tmp/ccn6Sm5M.s:1446   .text.ADC_IrqHandler:00000000 ADC_IrqHandler
ARM GAS  /tmp/ccn6Sm5M.s 			page 165


                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PMC_EnablePeripheral
TC_FindMckDivisor
TC_Configure
TC_Start
ADC_Initialize
ADC_cfgFrequency
ADC_ReadBuffer
PWMC_ConfigureClocks
PWMC_ConfigureChannelExt
PWMC_SetPeriod
PWMC_SetDutyCycle
PWMC_ConfigureSyncChannel
PWMC_SetSyncChannelUpdatePeriod
TimeTick_Configure
LEDs_configure
LED_clr
USBC_Configure
mode
_impure_ptr
fiprintf
USBC_hasData
gets
siscanf
iprintf
puts
USBC_isConfigured
LED_blink
setbuf
GetTickCount
control
