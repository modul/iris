ARM GAS  /tmp/cchL5NBj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	NVIC_EnableIRQ, %function
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "libchip/cmsis/core_cm3.h"
   1:libchip/cmsis/core_cm3.h **** /**************************************************************************//**
   2:libchip/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:libchip/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:libchip/cmsis/core_cm3.h ****  * @version  V1.30
   5:libchip/cmsis/core_cm3.h ****  * @date     30. October 2009
   6:libchip/cmsis/core_cm3.h ****  *
   7:libchip/cmsis/core_cm3.h ****  * @note
   8:libchip/cmsis/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:libchip/cmsis/core_cm3.h ****  *
  10:libchip/cmsis/core_cm3.h ****  * @par
  11:libchip/cmsis/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:libchip/cmsis/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:libchip/cmsis/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:libchip/cmsis/core_cm3.h ****  *
  15:libchip/cmsis/core_cm3.h ****  * @par
  16:libchip/cmsis/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libchip/cmsis/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libchip/cmsis/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libchip/cmsis/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libchip/cmsis/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libchip/cmsis/core_cm3.h ****  *
  22:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
  23:libchip/cmsis/core_cm3.h **** 
  24:libchip/cmsis/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:libchip/cmsis/core_cm3.h **** #define __CM3_CORE_H__
  26:libchip/cmsis/core_cm3.h **** 
  27:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:libchip/cmsis/core_cm3.h ****  *
  29:libchip/cmsis/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:libchip/cmsis/core_cm3.h ****  *   - Error 10: \n
  31:libchip/cmsis/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:libchip/cmsis/core_cm3.h ****  *     Error 10: Expecting ';'
ARM GAS  /tmp/cchL5NBj.s 			page 2


  33:libchip/cmsis/core_cm3.h ****  * .
  34:libchip/cmsis/core_cm3.h ****  *   - Error 530: \n
  35:libchip/cmsis/core_cm3.h ****  *     return(__regBasePri); \n
  36:libchip/cmsis/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:libchip/cmsis/core_cm3.h ****  * .
  38:libchip/cmsis/core_cm3.h ****  *   - Error 550: \n
  39:libchip/cmsis/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:libchip/cmsis/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:libchip/cmsis/core_cm3.h ****  * .
  42:libchip/cmsis/core_cm3.h ****  *   - Error 754: \n
  43:libchip/cmsis/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:libchip/cmsis/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:libchip/cmsis/core_cm3.h ****  * .
  46:libchip/cmsis/core_cm3.h ****  *   - Error 750: \n
  47:libchip/cmsis/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:libchip/cmsis/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:libchip/cmsis/core_cm3.h ****  * .
  50:libchip/cmsis/core_cm3.h ****  *   - Error 528: \n
  51:libchip/cmsis/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:libchip/cmsis/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:libchip/cmsis/core_cm3.h ****  * .
  54:libchip/cmsis/core_cm3.h ****  *   - Error 751: \n
  55:libchip/cmsis/core_cm3.h ****  *     } InterruptType_Type; \n
  56:libchip/cmsis/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:libchip/cmsis/core_cm3.h ****  * .
  58:libchip/cmsis/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:libchip/cmsis/core_cm3.h ****  *
  60:libchip/cmsis/core_cm3.h ****  */
  61:libchip/cmsis/core_cm3.h **** 
  62:libchip/cmsis/core_cm3.h **** /*lint -save */
  63:libchip/cmsis/core_cm3.h **** /*lint -e10  */
  64:libchip/cmsis/core_cm3.h **** /*lint -e530 */
  65:libchip/cmsis/core_cm3.h **** /*lint -e550 */
  66:libchip/cmsis/core_cm3.h **** /*lint -e754 */
  67:libchip/cmsis/core_cm3.h **** /*lint -e750 */
  68:libchip/cmsis/core_cm3.h **** /*lint -e528 */
  69:libchip/cmsis/core_cm3.h **** /*lint -e751 */
  70:libchip/cmsis/core_cm3.h **** 
  71:libchip/cmsis/core_cm3.h **** 
  72:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:libchip/cmsis/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:libchip/cmsis/core_cm3.h ****     - CMSIS version number
  75:libchip/cmsis/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:libchip/cmsis/core_cm3.h ****     - Cortex-M core peripheral base address
  77:libchip/cmsis/core_cm3.h ****   @{
  78:libchip/cmsis/core_cm3.h ****  */
  79:libchip/cmsis/core_cm3.h **** 
  80:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
  81:libchip/cmsis/core_cm3.h ****  extern "C" {
  82:libchip/cmsis/core_cm3.h **** #endif
  83:libchip/cmsis/core_cm3.h **** 
  84:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:libchip/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:libchip/cmsis/core_cm3.h **** 
  88:libchip/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cchL5NBj.s 			page 3


  90:libchip/cmsis/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:libchip/cmsis/core_cm3.h **** 
  92:libchip/cmsis/core_cm3.h **** #if defined (__ICCARM__)
  93:libchip/cmsis/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:libchip/cmsis/core_cm3.h **** #endif
  95:libchip/cmsis/core_cm3.h **** 
  96:libchip/cmsis/core_cm3.h **** 
  97:libchip/cmsis/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:libchip/cmsis/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:libchip/cmsis/core_cm3.h **** #endif
 100:libchip/cmsis/core_cm3.h **** 
 101:libchip/cmsis/core_cm3.h **** 
 102:libchip/cmsis/core_cm3.h **** 
 103:libchip/cmsis/core_cm3.h **** 
 104:libchip/cmsis/core_cm3.h **** /**
 105:libchip/cmsis/core_cm3.h ****  * IO definitions
 106:libchip/cmsis/core_cm3.h ****  *
 107:libchip/cmsis/core_cm3.h ****  * define access restrictions to peripheral registers
 108:libchip/cmsis/core_cm3.h ****  */
 109:libchip/cmsis/core_cm3.h **** 
 110:libchip/cmsis/core_cm3.h **** #ifdef __cplusplus
 111:libchip/cmsis/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:libchip/cmsis/core_cm3.h **** #else
 113:libchip/cmsis/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:libchip/cmsis/core_cm3.h **** #endif
 115:libchip/cmsis/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:libchip/cmsis/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:libchip/cmsis/core_cm3.h **** 
 118:libchip/cmsis/core_cm3.h **** 
 119:libchip/cmsis/core_cm3.h **** 
 120:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 121:libchip/cmsis/core_cm3.h ****  *                 Register Abstraction
 122:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 123:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:libchip/cmsis/core_cm3.h ****  @{
 125:libchip/cmsis/core_cm3.h **** */
 126:libchip/cmsis/core_cm3.h **** 
 127:libchip/cmsis/core_cm3.h **** 
 128:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:libchip/cmsis/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:libchip/cmsis/core_cm3.h ****   @{
 131:libchip/cmsis/core_cm3.h ****  */
 132:libchip/cmsis/core_cm3.h **** typedef struct
 133:libchip/cmsis/core_cm3.h **** {
 134:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[24];
 136:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:libchip/cmsis/core_cm3.h ****        uint32_t RSERVED1[24];
 138:libchip/cmsis/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[24];
 140:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[24];
 142:libchip/cmsis/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[56];
 144:libchip/cmsis/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[644];
 146:libchip/cmsis/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
ARM GAS  /tmp/cchL5NBj.s 			page 4


 147:libchip/cmsis/core_cm3.h **** }  NVIC_Type;
 148:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:libchip/cmsis/core_cm3.h **** 
 150:libchip/cmsis/core_cm3.h **** 
 151:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:libchip/cmsis/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:libchip/cmsis/core_cm3.h ****   @{
 154:libchip/cmsis/core_cm3.h ****  */
 155:libchip/cmsis/core_cm3.h **** typedef struct
 156:libchip/cmsis/core_cm3.h **** {
 157:libchip/cmsis/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:libchip/cmsis/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:libchip/cmsis/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:libchip/cmsis/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:libchip/cmsis/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:libchip/cmsis/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:libchip/cmsis/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:libchip/cmsis/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:libchip/cmsis/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:libchip/cmsis/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:libchip/cmsis/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:libchip/cmsis/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:libchip/cmsis/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:libchip/cmsis/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:libchip/cmsis/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:libchip/cmsis/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:libchip/cmsis/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:libchip/cmsis/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:libchip/cmsis/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:libchip/cmsis/core_cm3.h **** } SCB_Type;
 177:libchip/cmsis/core_cm3.h **** 
 178:libchip/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:libchip/cmsis/core_cm3.h **** 
 182:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:libchip/cmsis/core_cm3.h **** 
 185:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:libchip/cmsis/core_cm3.h **** 
 188:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:libchip/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:libchip/cmsis/core_cm3.h **** 
 191:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:libchip/cmsis/core_cm3.h **** 
 195:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:libchip/cmsis/core_cm3.h **** 
 198:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:libchip/cmsis/core_cm3.h **** 
 201:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cchL5NBj.s 			page 5


 204:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:libchip/cmsis/core_cm3.h **** 
 207:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:libchip/cmsis/core_cm3.h **** 
 210:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:libchip/cmsis/core_cm3.h **** 
 213:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:libchip/cmsis/core_cm3.h **** 
 216:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:libchip/cmsis/core_cm3.h **** 
 219:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:libchip/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:libchip/cmsis/core_cm3.h **** 
 222:libchip/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1ul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB VT
 225:libchip/cmsis/core_cm3.h **** 
 226:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:libchip/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:libchip/cmsis/core_cm3.h **** 
 229:libchip/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:libchip/cmsis/core_cm3.h **** 
 233:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:libchip/cmsis/core_cm3.h **** 
 236:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:libchip/cmsis/core_cm3.h **** 
 239:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:libchip/cmsis/core_cm3.h **** 
 242:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:libchip/cmsis/core_cm3.h **** 
 245:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:libchip/cmsis/core_cm3.h **** 
 248:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:libchip/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:libchip/cmsis/core_cm3.h **** 
 251:libchip/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 252:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:libchip/cmsis/core_cm3.h **** 
 255:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:libchip/cmsis/core_cm3.h **** 
 258:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:libchip/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cchL5NBj.s 			page 6


 261:libchip/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:libchip/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:libchip/cmsis/core_cm3.h **** 
 265:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:libchip/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:libchip/cmsis/core_cm3.h **** 
 268:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:libchip/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:libchip/cmsis/core_cm3.h **** 
 271:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:libchip/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:libchip/cmsis/core_cm3.h **** 
 274:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:libchip/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:libchip/cmsis/core_cm3.h **** 
 277:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:libchip/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:libchip/cmsis/core_cm3.h **** 
 280:libchip/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:libchip/cmsis/core_cm3.h **** 
 284:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:libchip/cmsis/core_cm3.h **** 
 287:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:libchip/cmsis/core_cm3.h **** 
 290:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:libchip/cmsis/core_cm3.h **** 
 293:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:libchip/cmsis/core_cm3.h **** 
 296:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:libchip/cmsis/core_cm3.h **** 
 299:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:libchip/cmsis/core_cm3.h **** 
 302:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:libchip/cmsis/core_cm3.h **** 
 305:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:libchip/cmsis/core_cm3.h **** 
 308:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:libchip/cmsis/core_cm3.h **** 
 311:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:libchip/cmsis/core_cm3.h **** 
 314:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:libchip/cmsis/core_cm3.h **** 
 317:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
ARM GAS  /tmp/cchL5NBj.s 			page 7


 318:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:libchip/cmsis/core_cm3.h **** 
 320:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:libchip/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:libchip/cmsis/core_cm3.h **** 
 323:libchip/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:libchip/cmsis/core_cm3.h **** 
 327:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:libchip/cmsis/core_cm3.h **** 
 330:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:libchip/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:libchip/cmsis/core_cm3.h **** 
 333:libchip/cmsis/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:libchip/cmsis/core_cm3.h **** 
 337:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:libchip/cmsis/core_cm3.h **** 
 340:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:libchip/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:libchip/cmsis/core_cm3.h **** 
 343:libchip/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:libchip/cmsis/core_cm3.h **** 
 347:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:libchip/cmsis/core_cm3.h **** 
 350:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:libchip/cmsis/core_cm3.h **** 
 353:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:libchip/cmsis/core_cm3.h **** 
 356:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:libchip/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:libchip/cmsis/core_cm3.h **** 
 360:libchip/cmsis/core_cm3.h **** 
 361:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:libchip/cmsis/core_cm3.h ****   memory mapped structure for SysTick
 363:libchip/cmsis/core_cm3.h ****   @{
 364:libchip/cmsis/core_cm3.h ****  */
 365:libchip/cmsis/core_cm3.h **** typedef struct
 366:libchip/cmsis/core_cm3.h **** {
 367:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:libchip/cmsis/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:libchip/cmsis/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:libchip/cmsis/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:libchip/cmsis/core_cm3.h **** } SysTick_Type;
 372:libchip/cmsis/core_cm3.h **** 
 373:libchip/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
ARM GAS  /tmp/cchL5NBj.s 			page 8


 375:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:libchip/cmsis/core_cm3.h **** 
 377:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:libchip/cmsis/core_cm3.h **** 
 380:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:libchip/cmsis/core_cm3.h **** 
 383:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:libchip/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:libchip/cmsis/core_cm3.h **** 
 386:libchip/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:libchip/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:libchip/cmsis/core_cm3.h **** 
 390:libchip/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 391:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:libchip/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:libchip/cmsis/core_cm3.h **** 
 394:libchip/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:libchip/cmsis/core_cm3.h **** 
 398:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:libchip/cmsis/core_cm3.h **** 
 401:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:libchip/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:libchip/cmsis/core_cm3.h **** 
 405:libchip/cmsis/core_cm3.h **** 
 406:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:libchip/cmsis/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:libchip/cmsis/core_cm3.h ****   @{
 409:libchip/cmsis/core_cm3.h ****  */
 410:libchip/cmsis/core_cm3.h **** typedef struct
 411:libchip/cmsis/core_cm3.h **** {
 412:libchip/cmsis/core_cm3.h ****   __O  union
 413:libchip/cmsis/core_cm3.h ****   {
 414:libchip/cmsis/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:libchip/cmsis/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:libchip/cmsis/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:libchip/cmsis/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0[864];
 419:libchip/cmsis/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1[15];
 421:libchip/cmsis/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED2[15];
 423:libchip/cmsis/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED3[29];
 425:libchip/cmsis/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:libchip/cmsis/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:libchip/cmsis/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED4[43];
 429:libchip/cmsis/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:libchip/cmsis/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED5[6];
ARM GAS  /tmp/cchL5NBj.s 			page 9


 432:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:libchip/cmsis/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:libchip/cmsis/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:libchip/cmsis/core_cm3.h **** } ITM_Type;
 445:libchip/cmsis/core_cm3.h **** 
 446:libchip/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:libchip/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:libchip/cmsis/core_cm3.h **** 
 450:libchip/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:libchip/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:libchip/cmsis/core_cm3.h **** 
 454:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:libchip/cmsis/core_cm3.h **** 
 457:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:libchip/cmsis/core_cm3.h **** 
 460:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:libchip/cmsis/core_cm3.h **** 
 463:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:libchip/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:libchip/cmsis/core_cm3.h **** 
 466:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:libchip/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:libchip/cmsis/core_cm3.h **** 
 469:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:libchip/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:libchip/cmsis/core_cm3.h **** 
 472:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:libchip/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:libchip/cmsis/core_cm3.h **** 
 475:libchip/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:libchip/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:libchip/cmsis/core_cm3.h **** 
 479:libchip/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:libchip/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:libchip/cmsis/core_cm3.h **** 
 483:libchip/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:libchip/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:libchip/cmsis/core_cm3.h **** 
 487:libchip/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
ARM GAS  /tmp/cchL5NBj.s 			page 10


 489:libchip/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:libchip/cmsis/core_cm3.h **** 
 491:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:libchip/cmsis/core_cm3.h **** 
 494:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:libchip/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:libchip/cmsis/core_cm3.h **** 
 498:libchip/cmsis/core_cm3.h **** 
 499:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:libchip/cmsis/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:libchip/cmsis/core_cm3.h ****   @{
 502:libchip/cmsis/core_cm3.h ****  */
 503:libchip/cmsis/core_cm3.h **** typedef struct
 504:libchip/cmsis/core_cm3.h **** {
 505:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED0;
 506:libchip/cmsis/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:libchip/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:libchip/cmsis/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:libchip/cmsis/core_cm3.h **** #else
 510:libchip/cmsis/core_cm3.h ****        uint32_t RESERVED1;
 511:libchip/cmsis/core_cm3.h **** #endif
 512:libchip/cmsis/core_cm3.h **** } InterruptType_Type;
 513:libchip/cmsis/core_cm3.h **** 
 514:libchip/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:libchip/cmsis/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:libchip/cmsis/core_cm3.h **** 
 518:libchip/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:libchip/cmsis/core_cm3.h **** 
 522:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:libchip/cmsis/core_cm3.h **** 
 525:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:libchip/cmsis/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:libchip/cmsis/core_cm3.h **** 
 529:libchip/cmsis/core_cm3.h **** 
 530:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:libchip/cmsis/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:libchip/cmsis/core_cm3.h ****   @{
 534:libchip/cmsis/core_cm3.h ****  */
 535:libchip/cmsis/core_cm3.h **** typedef struct
 536:libchip/cmsis/core_cm3.h **** {
 537:libchip/cmsis/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:libchip/cmsis/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:libchip/cmsis/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
ARM GAS  /tmp/cchL5NBj.s 			page 11


 546:libchip/cmsis/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:libchip/cmsis/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:libchip/cmsis/core_cm3.h **** } MPU_Type;
 549:libchip/cmsis/core_cm3.h **** 
 550:libchip/cmsis/core_cm3.h **** /* MPU Type Register */
 551:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:libchip/cmsis/core_cm3.h **** 
 554:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:libchip/cmsis/core_cm3.h **** 
 557:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:libchip/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:libchip/cmsis/core_cm3.h **** 
 560:libchip/cmsis/core_cm3.h **** /* MPU Control Register */
 561:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:libchip/cmsis/core_cm3.h **** 
 564:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:libchip/cmsis/core_cm3.h **** 
 567:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:libchip/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:libchip/cmsis/core_cm3.h **** 
 570:libchip/cmsis/core_cm3.h **** /* MPU Region Number Register */
 571:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:libchip/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:libchip/cmsis/core_cm3.h **** 
 574:libchip/cmsis/core_cm3.h **** /* MPU Region Base Address Register */
 575:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:libchip/cmsis/core_cm3.h **** 
 578:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:libchip/cmsis/core_cm3.h **** 
 581:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:libchip/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:libchip/cmsis/core_cm3.h **** 
 584:libchip/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:libchip/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:libchip/cmsis/core_cm3.h **** 
 588:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:libchip/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:libchip/cmsis/core_cm3.h **** 
 591:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:libchip/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:libchip/cmsis/core_cm3.h **** 
 594:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:libchip/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:libchip/cmsis/core_cm3.h **** 
 597:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:libchip/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:libchip/cmsis/core_cm3.h **** 
 600:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:libchip/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cchL5NBj.s 			page 12


 603:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:libchip/cmsis/core_cm3.h **** 
 606:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:libchip/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:libchip/cmsis/core_cm3.h **** 
 609:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:libchip/cmsis/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:libchip/cmsis/core_cm3.h **** 
 612:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:libchip/cmsis/core_cm3.h **** #endif
 614:libchip/cmsis/core_cm3.h **** 
 615:libchip/cmsis/core_cm3.h **** 
 616:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:libchip/cmsis/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:libchip/cmsis/core_cm3.h ****   @{
 619:libchip/cmsis/core_cm3.h ****  */
 620:libchip/cmsis/core_cm3.h **** typedef struct
 621:libchip/cmsis/core_cm3.h **** {
 622:libchip/cmsis/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:libchip/cmsis/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:libchip/cmsis/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:libchip/cmsis/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:libchip/cmsis/core_cm3.h **** } CoreDebug_Type;
 627:libchip/cmsis/core_cm3.h **** 
 628:libchip/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:libchip/cmsis/core_cm3.h **** 
 632:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:libchip/cmsis/core_cm3.h **** 
 635:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:libchip/cmsis/core_cm3.h **** 
 638:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:libchip/cmsis/core_cm3.h **** 
 641:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:libchip/cmsis/core_cm3.h **** 
 644:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:libchip/cmsis/core_cm3.h **** 
 647:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:libchip/cmsis/core_cm3.h **** 
 650:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:libchip/cmsis/core_cm3.h **** 
 653:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:libchip/cmsis/core_cm3.h **** 
 656:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:libchip/cmsis/core_cm3.h **** 
 659:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
ARM GAS  /tmp/cchL5NBj.s 			page 13


 660:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:libchip/cmsis/core_cm3.h **** 
 662:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:libchip/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:libchip/cmsis/core_cm3.h **** 
 665:libchip/cmsis/core_cm3.h **** /* Debug Core Register Selector Register */
 666:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:libchip/cmsis/core_cm3.h **** 
 669:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:libchip/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:libchip/cmsis/core_cm3.h **** 
 672:libchip/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:libchip/cmsis/core_cm3.h **** 
 676:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:libchip/cmsis/core_cm3.h **** 
 679:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:libchip/cmsis/core_cm3.h **** 
 682:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:libchip/cmsis/core_cm3.h **** 
 685:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:libchip/cmsis/core_cm3.h **** 
 688:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:libchip/cmsis/core_cm3.h **** 
 691:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:libchip/cmsis/core_cm3.h **** 
 694:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:libchip/cmsis/core_cm3.h **** 
 697:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:libchip/cmsis/core_cm3.h **** 
 700:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:libchip/cmsis/core_cm3.h **** 
 703:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:libchip/cmsis/core_cm3.h **** 
 706:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:libchip/cmsis/core_cm3.h **** 
 709:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:libchip/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:libchip/cmsis/core_cm3.h **** 
 713:libchip/cmsis/core_cm3.h **** 
 714:libchip/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:libchip/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:libchip/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
ARM GAS  /tmp/cchL5NBj.s 			page 14


 717:libchip/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:libchip/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:libchip/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:libchip/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:libchip/cmsis/core_cm3.h **** 
 722:libchip/cmsis/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:libchip/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:libchip/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:libchip/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:libchip/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:libchip/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:libchip/cmsis/core_cm3.h **** 
 729:libchip/cmsis/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:libchip/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:libchip/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:libchip/cmsis/core_cm3.h **** #endif
 733:libchip/cmsis/core_cm3.h **** 
 734:libchip/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:libchip/cmsis/core_cm3.h **** 
 736:libchip/cmsis/core_cm3.h **** 
 737:libchip/cmsis/core_cm3.h **** /*******************************************************************************
 738:libchip/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
 739:libchip/cmsis/core_cm3.h ****  ******************************************************************************/
 740:libchip/cmsis/core_cm3.h **** 
 741:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   )
 742:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:libchip/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:libchip/cmsis/core_cm3.h **** 
 745:libchip/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:libchip/cmsis/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:libchip/cmsis/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:libchip/cmsis/core_cm3.h **** 
 749:libchip/cmsis/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:libchip/cmsis/core_cm3.h **** 
 753:libchip/cmsis/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:libchip/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:libchip/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:libchip/cmsis/core_cm3.h **** 
 757:libchip/cmsis/core_cm3.h **** #endif
 758:libchip/cmsis/core_cm3.h **** 
 759:libchip/cmsis/core_cm3.h **** 
 760:libchip/cmsis/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:libchip/cmsis/core_cm3.h **** 
 762:libchip/cmsis/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:libchip/cmsis/core_cm3.h **** /* ARM armcc specific functions */
 764:libchip/cmsis/core_cm3.h **** 
 765:libchip/cmsis/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:libchip/cmsis/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:libchip/cmsis/core_cm3.h **** 
 768:libchip/cmsis/core_cm3.h **** #define __NOP                             __nop
 769:libchip/cmsis/core_cm3.h **** #define __WFI                             __wfi
 770:libchip/cmsis/core_cm3.h **** #define __WFE                             __wfe
 771:libchip/cmsis/core_cm3.h **** #define __SEV                             __sev
 772:libchip/cmsis/core_cm3.h **** #define __ISB()                           __isb(0)
 773:libchip/cmsis/core_cm3.h **** #define __DSB()                           __dsb(0)
ARM GAS  /tmp/cchL5NBj.s 			page 15


 774:libchip/cmsis/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:libchip/cmsis/core_cm3.h **** #define __REV                             __rev
 776:libchip/cmsis/core_cm3.h **** #define __RBIT                            __rbit
 777:libchip/cmsis/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:libchip/cmsis/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:libchip/cmsis/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:libchip/cmsis/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:libchip/cmsis/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:libchip/cmsis/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:libchip/cmsis/core_cm3.h **** 
 784:libchip/cmsis/core_cm3.h **** 
 785:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:libchip/cmsis/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:libchip/cmsis/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:libchip/cmsis/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:libchip/cmsis/core_cm3.h **** 
 790:libchip/cmsis/core_cm3.h **** 
 791:libchip/cmsis/core_cm3.h **** /**
 792:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:libchip/cmsis/core_cm3.h ****  *
 794:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
 795:libchip/cmsis/core_cm3.h ****  *
 796:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
 797:libchip/cmsis/core_cm3.h ****  */
 798:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:libchip/cmsis/core_cm3.h **** 
 800:libchip/cmsis/core_cm3.h **** /**
 801:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:libchip/cmsis/core_cm3.h ****  *
 803:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:libchip/cmsis/core_cm3.h ****  *
 805:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
 806:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:libchip/cmsis/core_cm3.h ****  */
 808:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:libchip/cmsis/core_cm3.h **** 
 810:libchip/cmsis/core_cm3.h **** /**
 811:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:libchip/cmsis/core_cm3.h ****  *
 813:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
 814:libchip/cmsis/core_cm3.h ****  *
 815:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:libchip/cmsis/core_cm3.h ****  * Cortex processor register
 817:libchip/cmsis/core_cm3.h ****  */
 818:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:libchip/cmsis/core_cm3.h **** 
 820:libchip/cmsis/core_cm3.h **** /**
 821:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:libchip/cmsis/core_cm3.h ****  *
 823:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:libchip/cmsis/core_cm3.h ****  *
 825:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
 826:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:libchip/cmsis/core_cm3.h ****  */
 828:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:libchip/cmsis/core_cm3.h **** 
 830:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cchL5NBj.s 			page 16


 831:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:libchip/cmsis/core_cm3.h ****  *
 833:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 834:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 835:libchip/cmsis/core_cm3.h ****  *
 836:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:libchip/cmsis/core_cm3.h ****  */
 838:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:libchip/cmsis/core_cm3.h **** 
 840:libchip/cmsis/core_cm3.h **** /**
 841:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:libchip/cmsis/core_cm3.h ****  *
 843:libchip/cmsis/core_cm3.h ****  * @param   value  value to reverse
 844:libchip/cmsis/core_cm3.h ****  * @return         reversed value
 845:libchip/cmsis/core_cm3.h ****  *
 846:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:libchip/cmsis/core_cm3.h ****  */
 848:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:libchip/cmsis/core_cm3.h **** 
 850:libchip/cmsis/core_cm3.h **** 
 851:libchip/cmsis/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:libchip/cmsis/core_cm3.h **** 
 853:libchip/cmsis/core_cm3.h **** /**
 854:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:libchip/cmsis/core_cm3.h ****  *
 856:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:libchip/cmsis/core_cm3.h ****  */
 858:libchip/cmsis/core_cm3.h **** extern void __CLREX(void);
 859:libchip/cmsis/core_cm3.h **** 
 860:libchip/cmsis/core_cm3.h **** /**
 861:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 862:libchip/cmsis/core_cm3.h ****  *
 863:libchip/cmsis/core_cm3.h ****  * @return BasePriority
 864:libchip/cmsis/core_cm3.h ****  *
 865:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 866:libchip/cmsis/core_cm3.h ****  */
 867:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:libchip/cmsis/core_cm3.h **** 
 869:libchip/cmsis/core_cm3.h **** /**
 870:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 871:libchip/cmsis/core_cm3.h ****  *
 872:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 873:libchip/cmsis/core_cm3.h ****  *
 874:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 875:libchip/cmsis/core_cm3.h ****  */
 876:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:libchip/cmsis/core_cm3.h **** 
 878:libchip/cmsis/core_cm3.h **** /**
 879:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:libchip/cmsis/core_cm3.h ****  *
 881:libchip/cmsis/core_cm3.h ****  * @return PriMask
 882:libchip/cmsis/core_cm3.h ****  *
 883:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:libchip/cmsis/core_cm3.h ****  */
 885:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:libchip/cmsis/core_cm3.h **** 
 887:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cchL5NBj.s 			page 17


 888:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:libchip/cmsis/core_cm3.h ****  *
 890:libchip/cmsis/core_cm3.h ****  * @param   priMask  PriMask
 891:libchip/cmsis/core_cm3.h ****  *
 892:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:libchip/cmsis/core_cm3.h ****  */
 894:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:libchip/cmsis/core_cm3.h **** 
 896:libchip/cmsis/core_cm3.h **** /**
 897:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:libchip/cmsis/core_cm3.h ****  *
 899:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 900:libchip/cmsis/core_cm3.h ****  *
 901:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 902:libchip/cmsis/core_cm3.h ****  */
 903:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:libchip/cmsis/core_cm3.h **** 
 905:libchip/cmsis/core_cm3.h **** /**
 906:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:libchip/cmsis/core_cm3.h ****  *
 908:libchip/cmsis/core_cm3.h ****  * @param  faultMask faultMask value
 909:libchip/cmsis/core_cm3.h ****  *
 910:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
 911:libchip/cmsis/core_cm3.h ****  */
 912:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:libchip/cmsis/core_cm3.h **** 
 914:libchip/cmsis/core_cm3.h **** /**
 915:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
 916:libchip/cmsis/core_cm3.h ****  *
 917:libchip/cmsis/core_cm3.h ****  * @return Control value
 918:libchip/cmsis/core_cm3.h ****  *
 919:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
 920:libchip/cmsis/core_cm3.h ****  */
 921:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:libchip/cmsis/core_cm3.h **** 
 923:libchip/cmsis/core_cm3.h **** /**
 924:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
 925:libchip/cmsis/core_cm3.h ****  *
 926:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
 927:libchip/cmsis/core_cm3.h ****  *
 928:libchip/cmsis/core_cm3.h ****  * Set the control register
 929:libchip/cmsis/core_cm3.h ****  */
 930:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:libchip/cmsis/core_cm3.h **** 
 932:libchip/cmsis/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:libchip/cmsis/core_cm3.h **** 
 934:libchip/cmsis/core_cm3.h **** /**
 935:libchip/cmsis/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:libchip/cmsis/core_cm3.h ****  *
 937:libchip/cmsis/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:libchip/cmsis/core_cm3.h ****  */
 939:libchip/cmsis/core_cm3.h **** #define __CLREX                           __clrex
 940:libchip/cmsis/core_cm3.h **** 
 941:libchip/cmsis/core_cm3.h **** /**
 942:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
 943:libchip/cmsis/core_cm3.h ****  *
 944:libchip/cmsis/core_cm3.h ****  * @return BasePriority
ARM GAS  /tmp/cchL5NBj.s 			page 18


 945:libchip/cmsis/core_cm3.h ****  *
 946:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
 947:libchip/cmsis/core_cm3.h ****  */
 948:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:libchip/cmsis/core_cm3.h **** {
 950:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:libchip/cmsis/core_cm3.h ****   return(__regBasePri);
 952:libchip/cmsis/core_cm3.h **** }
 953:libchip/cmsis/core_cm3.h **** 
 954:libchip/cmsis/core_cm3.h **** /**
 955:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
 956:libchip/cmsis/core_cm3.h ****  *
 957:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
 958:libchip/cmsis/core_cm3.h ****  *
 959:libchip/cmsis/core_cm3.h ****  * Set the base priority register
 960:libchip/cmsis/core_cm3.h ****  */
 961:libchip/cmsis/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:libchip/cmsis/core_cm3.h **** {
 963:libchip/cmsis/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:libchip/cmsis/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:libchip/cmsis/core_cm3.h **** }
 966:libchip/cmsis/core_cm3.h **** 
 967:libchip/cmsis/core_cm3.h **** /**
 968:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:libchip/cmsis/core_cm3.h ****  *
 970:libchip/cmsis/core_cm3.h ****  * @return PriMask
 971:libchip/cmsis/core_cm3.h ****  *
 972:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:libchip/cmsis/core_cm3.h ****  */
 974:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:libchip/cmsis/core_cm3.h **** {
 976:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:libchip/cmsis/core_cm3.h ****   return(__regPriMask);
 978:libchip/cmsis/core_cm3.h **** }
 979:libchip/cmsis/core_cm3.h **** 
 980:libchip/cmsis/core_cm3.h **** /**
 981:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:libchip/cmsis/core_cm3.h ****  *
 983:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
 984:libchip/cmsis/core_cm3.h ****  *
 985:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:libchip/cmsis/core_cm3.h ****  */
 987:libchip/cmsis/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:libchip/cmsis/core_cm3.h **** {
 989:libchip/cmsis/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:libchip/cmsis/core_cm3.h ****   __regPriMask = (priMask);
 991:libchip/cmsis/core_cm3.h **** }
 992:libchip/cmsis/core_cm3.h **** 
 993:libchip/cmsis/core_cm3.h **** /**
 994:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:libchip/cmsis/core_cm3.h ****  *
 996:libchip/cmsis/core_cm3.h ****  * @return FaultMask
 997:libchip/cmsis/core_cm3.h ****  *
 998:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
 999:libchip/cmsis/core_cm3.h ****  */
1000:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:libchip/cmsis/core_cm3.h **** {
ARM GAS  /tmp/cchL5NBj.s 			page 19


1002:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:libchip/cmsis/core_cm3.h ****   return(__regFaultMask);
1004:libchip/cmsis/core_cm3.h **** }
1005:libchip/cmsis/core_cm3.h **** 
1006:libchip/cmsis/core_cm3.h **** /**
1007:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:libchip/cmsis/core_cm3.h ****  *
1009:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1010:libchip/cmsis/core_cm3.h ****  *
1011:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1012:libchip/cmsis/core_cm3.h ****  */
1013:libchip/cmsis/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:libchip/cmsis/core_cm3.h **** {
1015:libchip/cmsis/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:libchip/cmsis/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:libchip/cmsis/core_cm3.h **** }
1018:libchip/cmsis/core_cm3.h **** 
1019:libchip/cmsis/core_cm3.h **** /**
1020:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1021:libchip/cmsis/core_cm3.h ****  *
1022:libchip/cmsis/core_cm3.h ****  * @return Control value
1023:libchip/cmsis/core_cm3.h ****  *
1024:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1025:libchip/cmsis/core_cm3.h ****  */
1026:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:libchip/cmsis/core_cm3.h **** {
1028:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:libchip/cmsis/core_cm3.h ****   return(__regControl);
1030:libchip/cmsis/core_cm3.h **** }
1031:libchip/cmsis/core_cm3.h **** 
1032:libchip/cmsis/core_cm3.h **** /**
1033:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1034:libchip/cmsis/core_cm3.h ****  *
1035:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1036:libchip/cmsis/core_cm3.h ****  *
1037:libchip/cmsis/core_cm3.h ****  * Set the control register
1038:libchip/cmsis/core_cm3.h ****  */
1039:libchip/cmsis/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:libchip/cmsis/core_cm3.h **** {
1041:libchip/cmsis/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:libchip/cmsis/core_cm3.h ****   __regControl = control;
1043:libchip/cmsis/core_cm3.h **** }
1044:libchip/cmsis/core_cm3.h **** 
1045:libchip/cmsis/core_cm3.h **** #endif /* __ARMCC_VERSION  */
1046:libchip/cmsis/core_cm3.h **** 
1047:libchip/cmsis/core_cm3.h **** 
1048:libchip/cmsis/core_cm3.h **** 
1049:libchip/cmsis/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:libchip/cmsis/core_cm3.h **** /* IAR iccarm specific functions */
1051:libchip/cmsis/core_cm3.h **** 
1052:libchip/cmsis/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:libchip/cmsis/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:libchip/cmsis/core_cm3.h **** 
1055:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq( void )   { __ASM ("cpsie f"); }
1056:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq( void )  { __ASM ("cpsid f"); }
1057:libchip/cmsis/core_cm3.h **** 
1058:libchip/cmsis/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
ARM GAS  /tmp/cchL5NBj.s 			page 20


1059:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFI( void )               { __ASM ("wfi"); }
1060:libchip/cmsis/core_cm3.h **** static __INLINE  void __WFE( void )               { __ASM ("wfe"); }
1061:libchip/cmsis/core_cm3.h **** static __INLINE  void __SEV( void )               { __ASM ("sev"); }
1062:libchip/cmsis/core_cm3.h **** static __INLINE  void __CLREX( void )             { __ASM ("clrex"); }
1063:libchip/cmsis/core_cm3.h **** 
1064:libchip/cmsis/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:libchip/cmsis/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:libchip/cmsis/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:libchip/cmsis/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:libchip/cmsis/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:libchip/cmsis/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:libchip/cmsis/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:libchip/cmsis/core_cm3.h **** 
1076:libchip/cmsis/core_cm3.h **** 
1077:libchip/cmsis/core_cm3.h **** /**
1078:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:libchip/cmsis/core_cm3.h ****  *
1080:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1081:libchip/cmsis/core_cm3.h ****  *
1082:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1083:libchip/cmsis/core_cm3.h ****  */
1084:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:libchip/cmsis/core_cm3.h **** 
1086:libchip/cmsis/core_cm3.h **** /**
1087:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:libchip/cmsis/core_cm3.h ****  *
1089:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:libchip/cmsis/core_cm3.h ****  *
1091:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1092:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:libchip/cmsis/core_cm3.h ****  */
1094:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:libchip/cmsis/core_cm3.h **** 
1096:libchip/cmsis/core_cm3.h **** /**
1097:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:libchip/cmsis/core_cm3.h ****  *
1099:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1100:libchip/cmsis/core_cm3.h ****  *
1101:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1103:libchip/cmsis/core_cm3.h ****  */
1104:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:libchip/cmsis/core_cm3.h **** 
1106:libchip/cmsis/core_cm3.h **** /**
1107:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:libchip/cmsis/core_cm3.h ****  *
1109:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:libchip/cmsis/core_cm3.h ****  *
1111:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1112:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:libchip/cmsis/core_cm3.h ****  */
1114:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cchL5NBj.s 			page 21


1116:libchip/cmsis/core_cm3.h **** /**
1117:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:libchip/cmsis/core_cm3.h ****  *
1119:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1120:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1121:libchip/cmsis/core_cm3.h ****  *
1122:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:libchip/cmsis/core_cm3.h ****  */
1124:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:libchip/cmsis/core_cm3.h **** 
1126:libchip/cmsis/core_cm3.h **** /**
1127:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1128:libchip/cmsis/core_cm3.h ****  *
1129:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1130:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1131:libchip/cmsis/core_cm3.h ****  *
1132:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1133:libchip/cmsis/core_cm3.h ****  */
1134:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:libchip/cmsis/core_cm3.h **** 
1136:libchip/cmsis/core_cm3.h **** /**
1137:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:libchip/cmsis/core_cm3.h ****  *
1139:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1140:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1141:libchip/cmsis/core_cm3.h ****  *
1142:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:libchip/cmsis/core_cm3.h ****  */
1144:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:libchip/cmsis/core_cm3.h **** 
1146:libchip/cmsis/core_cm3.h **** /**
1147:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:libchip/cmsis/core_cm3.h ****  *
1149:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1150:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1151:libchip/cmsis/core_cm3.h ****  *
1152:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:libchip/cmsis/core_cm3.h ****  */
1154:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:libchip/cmsis/core_cm3.h **** 
1156:libchip/cmsis/core_cm3.h **** /**
1157:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:libchip/cmsis/core_cm3.h ****  *
1159:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1160:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1161:libchip/cmsis/core_cm3.h ****  *
1162:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:libchip/cmsis/core_cm3.h ****  */
1164:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:libchip/cmsis/core_cm3.h **** 
1166:libchip/cmsis/core_cm3.h **** /**
1167:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:libchip/cmsis/core_cm3.h ****  *
1169:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1170:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1171:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1172:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/cchL5NBj.s 			page 22


1173:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:libchip/cmsis/core_cm3.h ****  */
1175:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:libchip/cmsis/core_cm3.h **** 
1177:libchip/cmsis/core_cm3.h **** /**
1178:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:libchip/cmsis/core_cm3.h ****  *
1180:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1181:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1182:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1183:libchip/cmsis/core_cm3.h ****  *
1184:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:libchip/cmsis/core_cm3.h ****  */
1186:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:libchip/cmsis/core_cm3.h **** 
1188:libchip/cmsis/core_cm3.h **** /**
1189:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:libchip/cmsis/core_cm3.h ****  *
1191:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1192:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1193:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1194:libchip/cmsis/core_cm3.h ****  *
1195:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:libchip/cmsis/core_cm3.h ****  */
1197:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:libchip/cmsis/core_cm3.h **** 
1199:libchip/cmsis/core_cm3.h **** 
1200:libchip/cmsis/core_cm3.h **** 
1201:libchip/cmsis/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:libchip/cmsis/core_cm3.h **** /* GNU gcc specific functions */
1203:libchip/cmsis/core_cm3.h **** 
1204:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_irq(void)               { __ASM volatile ("cpsie i"); }
1205:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_irq(void)              { __ASM volatile ("cpsid i"); }
1206:libchip/cmsis/core_cm3.h **** 
1207:libchip/cmsis/core_cm3.h **** static __INLINE void __enable_fault_irq(void)         { __ASM volatile ("cpsie f"); }
1208:libchip/cmsis/core_cm3.h **** static __INLINE void __disable_fault_irq(void)        { __ASM volatile ("cpsid f"); }
1209:libchip/cmsis/core_cm3.h **** 
1210:libchip/cmsis/core_cm3.h **** static __INLINE void __NOP(void)                      { __ASM volatile ("nop"); }
1211:libchip/cmsis/core_cm3.h **** static __INLINE void __WFI(void)                      { __ASM volatile ("wfi"); }
1212:libchip/cmsis/core_cm3.h **** static __INLINE void __WFE(void)                      { __ASM volatile ("wfe"); }
1213:libchip/cmsis/core_cm3.h **** static __INLINE void __SEV(void)                      { __ASM volatile ("sev"); }
1214:libchip/cmsis/core_cm3.h **** static __INLINE void __ISB(void)                      { __ASM volatile ("isb"); }
1215:libchip/cmsis/core_cm3.h **** static __INLINE void __DSB(void)                      { __ASM volatile ("dsb"); }
1216:libchip/cmsis/core_cm3.h **** static __INLINE void __DMB(void)                      { __ASM volatile ("dmb"); }
1217:libchip/cmsis/core_cm3.h **** static __INLINE void __CLREX(void)                    { __ASM volatile ("clrex"); }
1218:libchip/cmsis/core_cm3.h **** 
1219:libchip/cmsis/core_cm3.h **** 
1220:libchip/cmsis/core_cm3.h **** /**
1221:libchip/cmsis/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:libchip/cmsis/core_cm3.h ****  *
1223:libchip/cmsis/core_cm3.h ****  * @return ProcessStackPointer
1224:libchip/cmsis/core_cm3.h ****  *
1225:libchip/cmsis/core_cm3.h ****  * Return the actual process stack pointer
1226:libchip/cmsis/core_cm3.h ****  */
1227:libchip/cmsis/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:libchip/cmsis/core_cm3.h **** 
1229:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cchL5NBj.s 			page 23


1230:libchip/cmsis/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:libchip/cmsis/core_cm3.h ****  *
1232:libchip/cmsis/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:libchip/cmsis/core_cm3.h ****  *
1234:libchip/cmsis/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP
1235:libchip/cmsis/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:libchip/cmsis/core_cm3.h ****  */
1237:libchip/cmsis/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:libchip/cmsis/core_cm3.h **** 
1239:libchip/cmsis/core_cm3.h **** /**
1240:libchip/cmsis/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:libchip/cmsis/core_cm3.h ****  *
1242:libchip/cmsis/core_cm3.h ****  * @return Main Stack Pointer
1243:libchip/cmsis/core_cm3.h ****  *
1244:libchip/cmsis/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:libchip/cmsis/core_cm3.h ****  * Cortex processor register
1246:libchip/cmsis/core_cm3.h ****  */
1247:libchip/cmsis/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:libchip/cmsis/core_cm3.h **** 
1249:libchip/cmsis/core_cm3.h **** /**
1250:libchip/cmsis/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:libchip/cmsis/core_cm3.h ****  *
1252:libchip/cmsis/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:libchip/cmsis/core_cm3.h ****  *
1254:libchip/cmsis/core_cm3.h ****  * Assign the value mainStackPointer to the MSP
1255:libchip/cmsis/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:libchip/cmsis/core_cm3.h ****  */
1257:libchip/cmsis/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:libchip/cmsis/core_cm3.h **** 
1259:libchip/cmsis/core_cm3.h **** /**
1260:libchip/cmsis/core_cm3.h ****  * @brief  Return the Base Priority value
1261:libchip/cmsis/core_cm3.h ****  *
1262:libchip/cmsis/core_cm3.h ****  * @return BasePriority
1263:libchip/cmsis/core_cm3.h ****  *
1264:libchip/cmsis/core_cm3.h ****  * Return the content of the base priority register
1265:libchip/cmsis/core_cm3.h ****  */
1266:libchip/cmsis/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:libchip/cmsis/core_cm3.h **** 
1268:libchip/cmsis/core_cm3.h **** /**
1269:libchip/cmsis/core_cm3.h ****  * @brief  Set the Base Priority value
1270:libchip/cmsis/core_cm3.h ****  *
1271:libchip/cmsis/core_cm3.h ****  * @param  basePri  BasePriority
1272:libchip/cmsis/core_cm3.h ****  *
1273:libchip/cmsis/core_cm3.h ****  * Set the base priority register
1274:libchip/cmsis/core_cm3.h ****  */
1275:libchip/cmsis/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:libchip/cmsis/core_cm3.h **** 
1277:libchip/cmsis/core_cm3.h **** /**
1278:libchip/cmsis/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:libchip/cmsis/core_cm3.h ****  *
1280:libchip/cmsis/core_cm3.h ****  * @return PriMask
1281:libchip/cmsis/core_cm3.h ****  *
1282:libchip/cmsis/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:libchip/cmsis/core_cm3.h ****  */
1284:libchip/cmsis/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:libchip/cmsis/core_cm3.h **** 
1286:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cchL5NBj.s 			page 24


1287:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:libchip/cmsis/core_cm3.h ****  *
1289:libchip/cmsis/core_cm3.h ****  * @param  priMask  PriMask
1290:libchip/cmsis/core_cm3.h ****  *
1291:libchip/cmsis/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:libchip/cmsis/core_cm3.h ****  */
1293:libchip/cmsis/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:libchip/cmsis/core_cm3.h **** 
1295:libchip/cmsis/core_cm3.h **** /**
1296:libchip/cmsis/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:libchip/cmsis/core_cm3.h ****  *
1298:libchip/cmsis/core_cm3.h ****  * @return FaultMask
1299:libchip/cmsis/core_cm3.h ****  *
1300:libchip/cmsis/core_cm3.h ****  * Return the content of the fault mask register
1301:libchip/cmsis/core_cm3.h ****  */
1302:libchip/cmsis/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:libchip/cmsis/core_cm3.h **** 
1304:libchip/cmsis/core_cm3.h **** /**
1305:libchip/cmsis/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:libchip/cmsis/core_cm3.h ****  *
1307:libchip/cmsis/core_cm3.h ****  * @param  faultMask  faultMask value
1308:libchip/cmsis/core_cm3.h ****  *
1309:libchip/cmsis/core_cm3.h ****  * Set the fault mask register
1310:libchip/cmsis/core_cm3.h ****  */
1311:libchip/cmsis/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:libchip/cmsis/core_cm3.h **** 
1313:libchip/cmsis/core_cm3.h **** /**
1314:libchip/cmsis/core_cm3.h ****  * @brief  Return the Control Register value
1315:libchip/cmsis/core_cm3.h **** *
1316:libchip/cmsis/core_cm3.h **** *  @return Control value
1317:libchip/cmsis/core_cm3.h ****  *
1318:libchip/cmsis/core_cm3.h ****  * Return the content of the control register
1319:libchip/cmsis/core_cm3.h ****  */
1320:libchip/cmsis/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:libchip/cmsis/core_cm3.h **** 
1322:libchip/cmsis/core_cm3.h **** /**
1323:libchip/cmsis/core_cm3.h ****  * @brief  Set the Control Register value
1324:libchip/cmsis/core_cm3.h ****  *
1325:libchip/cmsis/core_cm3.h ****  * @param  control  Control value
1326:libchip/cmsis/core_cm3.h ****  *
1327:libchip/cmsis/core_cm3.h ****  * Set the control register
1328:libchip/cmsis/core_cm3.h ****  */
1329:libchip/cmsis/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:libchip/cmsis/core_cm3.h **** 
1331:libchip/cmsis/core_cm3.h **** /**
1332:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:libchip/cmsis/core_cm3.h ****  *
1334:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1335:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1336:libchip/cmsis/core_cm3.h ****  *
1337:libchip/cmsis/core_cm3.h ****  * Reverse byte order in integer value
1338:libchip/cmsis/core_cm3.h ****  */
1339:libchip/cmsis/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:libchip/cmsis/core_cm3.h **** 
1341:libchip/cmsis/core_cm3.h **** /**
1342:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:libchip/cmsis/core_cm3.h ****  *
ARM GAS  /tmp/cchL5NBj.s 			page 25


1344:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1345:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1346:libchip/cmsis/core_cm3.h ****  *
1347:libchip/cmsis/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:libchip/cmsis/core_cm3.h ****  */
1349:libchip/cmsis/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:libchip/cmsis/core_cm3.h **** 
1351:libchip/cmsis/core_cm3.h **** /**
1352:libchip/cmsis/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:libchip/cmsis/core_cm3.h ****  *
1354:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1355:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1356:libchip/cmsis/core_cm3.h ****  *
1357:libchip/cmsis/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:libchip/cmsis/core_cm3.h ****  */
1359:libchip/cmsis/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:libchip/cmsis/core_cm3.h **** 
1361:libchip/cmsis/core_cm3.h **** /**
1362:libchip/cmsis/core_cm3.h ****  * @brief  Reverse bit order of value
1363:libchip/cmsis/core_cm3.h ****  *
1364:libchip/cmsis/core_cm3.h ****  * @param  value  value to reverse
1365:libchip/cmsis/core_cm3.h ****  * @return        reversed value
1366:libchip/cmsis/core_cm3.h ****  *
1367:libchip/cmsis/core_cm3.h ****  * Reverse bit order of value
1368:libchip/cmsis/core_cm3.h ****  */
1369:libchip/cmsis/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:libchip/cmsis/core_cm3.h **** 
1371:libchip/cmsis/core_cm3.h **** /**
1372:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:libchip/cmsis/core_cm3.h ****  *
1374:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1375:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1376:libchip/cmsis/core_cm3.h ****  *
1377:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:libchip/cmsis/core_cm3.h ****  */
1379:libchip/cmsis/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:libchip/cmsis/core_cm3.h **** 
1381:libchip/cmsis/core_cm3.h **** /**
1382:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:libchip/cmsis/core_cm3.h ****  *
1384:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1385:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1386:libchip/cmsis/core_cm3.h ****  *
1387:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:libchip/cmsis/core_cm3.h ****  */
1389:libchip/cmsis/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:libchip/cmsis/core_cm3.h **** 
1391:libchip/cmsis/core_cm3.h **** /**
1392:libchip/cmsis/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:libchip/cmsis/core_cm3.h ****  *
1394:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1395:libchip/cmsis/core_cm3.h ****  * @return        value of (*address)
1396:libchip/cmsis/core_cm3.h ****  *
1397:libchip/cmsis/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:libchip/cmsis/core_cm3.h ****  */
1399:libchip/cmsis/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:libchip/cmsis/core_cm3.h **** 
ARM GAS  /tmp/cchL5NBj.s 			page 26


1401:libchip/cmsis/core_cm3.h **** /**
1402:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:libchip/cmsis/core_cm3.h ****  *
1404:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1405:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1406:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1407:libchip/cmsis/core_cm3.h ****  *
1408:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:libchip/cmsis/core_cm3.h ****  */
1410:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:libchip/cmsis/core_cm3.h **** 
1412:libchip/cmsis/core_cm3.h **** /**
1413:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:libchip/cmsis/core_cm3.h ****  *
1415:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1416:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1417:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1418:libchip/cmsis/core_cm3.h ****  *
1419:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:libchip/cmsis/core_cm3.h ****  */
1421:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:libchip/cmsis/core_cm3.h **** 
1423:libchip/cmsis/core_cm3.h **** /**
1424:libchip/cmsis/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:libchip/cmsis/core_cm3.h ****  *
1426:libchip/cmsis/core_cm3.h ****  * @param  value  value to store
1427:libchip/cmsis/core_cm3.h ****  * @param  *addr  address pointer
1428:libchip/cmsis/core_cm3.h ****  * @return        successful / failed
1429:libchip/cmsis/core_cm3.h ****  *
1430:libchip/cmsis/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:libchip/cmsis/core_cm3.h ****  */
1432:libchip/cmsis/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:libchip/cmsis/core_cm3.h **** 
1434:libchip/cmsis/core_cm3.h **** 
1435:libchip/cmsis/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:libchip/cmsis/core_cm3.h **** /* TASKING carm specific functions */
1437:libchip/cmsis/core_cm3.h **** 
1438:libchip/cmsis/core_cm3.h **** /*
1439:libchip/cmsis/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:libchip/cmsis/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:libchip/cmsis/core_cm3.h ****  * Including the CMSIS ones.
1442:libchip/cmsis/core_cm3.h ****  */
1443:libchip/cmsis/core_cm3.h **** 
1444:libchip/cmsis/core_cm3.h **** #endif
1445:libchip/cmsis/core_cm3.h **** 
1446:libchip/cmsis/core_cm3.h **** 
1447:libchip/cmsis/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:libchip/cmsis/core_cm3.h ****   Core  Function Interface containing:
1449:libchip/cmsis/core_cm3.h ****   - Core NVIC Functions
1450:libchip/cmsis/core_cm3.h ****   - Core SysTick Functions
1451:libchip/cmsis/core_cm3.h ****   - Core Reset Functions
1452:libchip/cmsis/core_cm3.h **** */
1453:libchip/cmsis/core_cm3.h **** /*@{*/
1454:libchip/cmsis/core_cm3.h **** 
1455:libchip/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:libchip/cmsis/core_cm3.h **** 
1457:libchip/cmsis/core_cm3.h **** /**
ARM GAS  /tmp/cchL5NBj.s 			page 27


1458:libchip/cmsis/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:libchip/cmsis/core_cm3.h ****  *
1460:libchip/cmsis/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:libchip/cmsis/core_cm3.h ****  *
1462:libchip/cmsis/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:libchip/cmsis/core_cm3.h ****  * The parameter priority_grouping is assigned to the field
1464:libchip/cmsis/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:libchip/cmsis/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:libchip/cmsis/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:libchip/cmsis/core_cm3.h ****  */
1468:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:libchip/cmsis/core_cm3.h **** {
1470:libchip/cmsis/core_cm3.h ****   uint32_t reg_value;
1471:libchip/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:libchip/cmsis/core_cm3.h **** 
1473:libchip/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:libchip/cmsis/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:libchip/cmsis/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:libchip/cmsis/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1477:libchip/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:libchip/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:libchip/cmsis/core_cm3.h **** }
1480:libchip/cmsis/core_cm3.h **** 
1481:libchip/cmsis/core_cm3.h **** /**
1482:libchip/cmsis/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:libchip/cmsis/core_cm3.h ****  *
1484:libchip/cmsis/core_cm3.h ****  * @return priority grouping field
1485:libchip/cmsis/core_cm3.h ****  *
1486:libchip/cmsis/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:libchip/cmsis/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:libchip/cmsis/core_cm3.h ****  */
1489:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:libchip/cmsis/core_cm3.h **** {
1491:libchip/cmsis/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:libchip/cmsis/core_cm3.h **** }
1493:libchip/cmsis/core_cm3.h **** 
1494:libchip/cmsis/core_cm3.h **** /**
1495:libchip/cmsis/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:libchip/cmsis/core_cm3.h ****  *
1497:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:libchip/cmsis/core_cm3.h ****  *
1499:libchip/cmsis/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:libchip/cmsis/core_cm3.h ****  */
1502:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:libchip/cmsis/core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
ARM GAS  /tmp/cchL5NBj.s 			page 28


  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:libchip/cmsis/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:libchip/cmsis/core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  60              		.size	NVIC_EnableIRQ, .-NVIC_EnableIRQ
  61 0036 00BF     		.section	.text.NVIC_SetPriority,"ax",%progbits
  62              		.align	2
  63              		.thumb
  64              		.thumb_func
  65              		.type	NVIC_SetPriority, %function
  66              	NVIC_SetPriority:
  67              	.LFB20:
1506:libchip/cmsis/core_cm3.h **** 
1507:libchip/cmsis/core_cm3.h **** /**
1508:libchip/cmsis/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:libchip/cmsis/core_cm3.h ****  *
1510:libchip/cmsis/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:libchip/cmsis/core_cm3.h ****  *
1512:libchip/cmsis/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:libchip/cmsis/core_cm3.h ****  */
1515:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:libchip/cmsis/core_cm3.h **** {
1517:libchip/cmsis/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:libchip/cmsis/core_cm3.h **** }
1519:libchip/cmsis/core_cm3.h **** 
1520:libchip/cmsis/core_cm3.h **** /**
1521:libchip/cmsis/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:libchip/cmsis/core_cm3.h ****  *
1523:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:libchip/cmsis/core_cm3.h ****  *
1526:libchip/cmsis/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending,
1527:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0
1528:libchip/cmsis/core_cm3.h ****  */
1529:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/cchL5NBj.s 			page 29


1530:libchip/cmsis/core_cm3.h **** {
1531:libchip/cmsis/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:libchip/cmsis/core_cm3.h **** }
1533:libchip/cmsis/core_cm3.h **** 
1534:libchip/cmsis/core_cm3.h **** /**
1535:libchip/cmsis/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:libchip/cmsis/core_cm3.h ****  *
1537:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:libchip/cmsis/core_cm3.h ****  *
1539:libchip/cmsis/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:libchip/cmsis/core_cm3.h ****  */
1542:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:libchip/cmsis/core_cm3.h **** {
1544:libchip/cmsis/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:libchip/cmsis/core_cm3.h **** }
1546:libchip/cmsis/core_cm3.h **** 
1547:libchip/cmsis/core_cm3.h **** /**
1548:libchip/cmsis/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:libchip/cmsis/core_cm3.h ****  *
1550:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:libchip/cmsis/core_cm3.h ****  *
1552:libchip/cmsis/core_cm3.h ****  * Clear the pending bit for the specified interrupt.
1553:libchip/cmsis/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:libchip/cmsis/core_cm3.h ****  */
1555:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:libchip/cmsis/core_cm3.h **** {
1557:libchip/cmsis/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:libchip/cmsis/core_cm3.h **** }
1559:libchip/cmsis/core_cm3.h **** 
1560:libchip/cmsis/core_cm3.h **** /**
1561:libchip/cmsis/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:libchip/cmsis/core_cm3.h ****  *
1563:libchip/cmsis/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:libchip/cmsis/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:libchip/cmsis/core_cm3.h ****  *
1566:libchip/cmsis/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active,
1567:libchip/cmsis/core_cm3.h ****  * otherwise it returns 0.
1568:libchip/cmsis/core_cm3.h ****  */
1569:libchip/cmsis/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:libchip/cmsis/core_cm3.h **** {
1571:libchip/cmsis/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:libchip/cmsis/core_cm3.h **** }
1573:libchip/cmsis/core_cm3.h **** 
1574:libchip/cmsis/core_cm3.h **** /**
1575:libchip/cmsis/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:libchip/cmsis/core_cm3.h ****  *
1577:libchip/cmsis/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:libchip/cmsis/core_cm3.h ****  * @param  priority  The priority to set
1579:libchip/cmsis/core_cm3.h ****  *
1580:libchip/cmsis/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt
1581:libchip/cmsis/core_cm3.h ****  * number can be positive to specify an external (device specific)
1582:libchip/cmsis/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:libchip/cmsis/core_cm3.h ****  *
1584:libchip/cmsis/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:libchip/cmsis/core_cm3.h ****  */
1586:libchip/cmsis/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
ARM GAS  /tmp/cchL5NBj.s 			page 30


1587:libchip/cmsis/core_cm3.h **** {
  68              		.loc 1 1587 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI5:
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 3960     		str	r1, [r7, #0]
  85 000a FB71     		strb	r3, [r7, #7]
1588:libchip/cmsis/core_cm3.h ****   if(IRQn < 0) {
  86              		.loc 1 1588 0
  87 000c 97F90730 		ldrsb	r3, [r7, #7]
  88 0010 002B     		cmp	r3, #0
  89 0012 10DA     		bge	.L3
1589:libchip/cmsis/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
  90              		.loc 1 1589 0
  91 0014 4FF46D43 		mov	r3, #60672
  92 0018 CEF20003 		movt	r3, 57344
  93 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  94 001e 02F00F02 		and	r2, r2, #15
  95 0022 A2F10401 		sub	r1, r2, #4
  96 0026 3A68     		ldr	r2, [r7, #0]
  97 0028 D2B2     		uxtb	r2, r2
  98 002a 4FEA0212 		lsl	r2, r2, #4
  99 002e D2B2     		uxtb	r2, r2
 100 0030 5B18     		adds	r3, r3, r1
 101 0032 1A76     		strb	r2, [r3, #24]
 102 0034 0DE0     		b	.L2
 103              	.L3:
1590:libchip/cmsis/core_cm3.h ****   else {
1591:libchip/cmsis/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 104              		.loc 1 1591 0
 105 0036 4FF46143 		mov	r3, #57600
 106 003a CEF20003 		movt	r3, 57344
 107 003e 97F90710 		ldrsb	r1, [r7, #7]
 108 0042 3A68     		ldr	r2, [r7, #0]
 109 0044 D2B2     		uxtb	r2, r2
 110 0046 4FEA0212 		lsl	r2, r2, #4
 111 004a D2B2     		uxtb	r2, r2
 112 004c 5B18     		adds	r3, r3, r1
 113 004e 83F80023 		strb	r2, [r3, #768]
 114              	.L2:
1592:libchip/cmsis/core_cm3.h **** }
 115              		.loc 1 1592 0
 116 0052 07F10C07 		add	r7, r7, #12
 117 0056 BD46     		mov	sp, r7
 118 0058 80BC     		pop	{r7}
ARM GAS  /tmp/cchL5NBj.s 			page 31


 119 005a 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE20:
 122              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 123              		.global	input
 124              		.bss
 125              		.align	2
 126              		.type	input, %object
 127              		.size	input, 4
 128              	input:
 129 0000 00000000 		.space	4
 130              		.global	_state
 131              		.data
 132              		.type	_state, %object
 133              		.size	_state, 1
 134              	_state:
 135 0000 01       		.byte	1
 136              		.global	loop
 137              		.bss
 138              		.align	2
 139              		.type	loop, %object
 140              		.size	loop, 44
 141              	loop:
 142 0004 00000000 		.space	44
 142      00000000 
 142      00000000 
 142      00000000 
 142      00000000 
 143              		.global	ntrip
 144              		.data
 145 0001 000000   		.align	2
 146              		.type	ntrip, %object
 147              		.size	ntrip, 16
 148              	ntrip:
 149 0004 14000000 		.word	loop+20
 150 0008 00000000 		.word	0
 151 000c 64000000 		.word	100
 152 0010 0A000000 		.word	10
 153              		.global	rtrip
 154              		.align	2
 155              		.type	rtrip, %object
 156              		.size	rtrip, 16
 157              	rtrip:
 158 0014 14000000 		.word	loop+20
 159 0018 00000000 		.word	0
 160 001c 0C000000 		.word	12
 161 0020 00000000 		.word	0
 162              		.global	releasetime
 163              		.align	2
 164              		.type	releasetime, %object
 165              		.size	releasetime, 4
 166              	releasetime:
 167 0024 E8030000 		.word	1000
 168              		.global	dxmax
 169              		.align	2
 170              		.type	dxmax, %object
 171              		.size	dxmax, 4
ARM GAS  /tmp/cchL5NBj.s 			page 32


 172              	dxmax:
 173 0028 00040000 		.word	1024
 174              		.section	.rodata
 175              		.align	2
 176              	.LC0:
 177 0000 2D492D20 		.ascii	"-I- Running at %i MHz\012\000"
 177      52756E6E 
 177      696E6720 
 177      61742025 
 177      69204D48 
 178 0017 00       		.align	2
 179              	.LC1:
 180 0018 2D442D20 		.ascii	"-D- waiting until USB is fully configured\012\000"
 180      77616974 
 180      696E6720 
 180      756E7469 
 180      6C205553 
 181 0043 00       		.align	2
 182              	.LC2:
 183 0044 2D442D20 		.ascii	"-D- releasetime elapsed\012\000"
 183      72656C65 
 183      61736574 
 183      696D6520 
 183      656C6170 
 184              		.section	.text.main,"ax",%progbits
 185              		.align	2
 186              		.global	main
 187              		.thumb
 188              		.thumb_func
 189              		.type	main, %function
 190              	main:
 191              	.LFB35:
 192              		.file 2 "main.c"
   1:main.c        **** #include <string.h>
   2:main.c        **** #include "board.h"
   3:main.c        **** #include "controller.h"
   4:main.c        **** 
   5:main.c        **** #define STOPPED  (1 << 0)
   6:main.c        **** #define RUN     (1 << 1)
   7:main.c        **** #define HOLD    (1 << 2)
   8:main.c        **** #define RELEASE (1 << 3)
   9:main.c        **** 
  10:main.c        **** #define MINv 0
  11:main.c        **** #define MAXv MAX
  12:main.c        **** 
  13:main.c        **** #define AIN0 0
  14:main.c        **** #define AIN1 1
  15:main.c        **** #define NUM_AIN 2
  16:main.c        **** 
  17:main.c        **** #define PWMOUT_up 0
  18:main.c        **** #define PWMOUT_down 1
  19:main.c        **** #define PWM_FREQ   20
  20:main.c        **** #define PWM_PERIOD 100
  21:main.c        **** 
  22:main.c        **** ctrlio_t input[NUM_AIN] = {0};
  23:main.c        **** uint8_t _state = STOPPED;
  24:main.c        **** 
ARM GAS  /tmp/cchL5NBj.s 			page 33


  25:main.c        **** struct ctrl loop = CTRL_INIT;	
  26:main.c        **** struct trip ntrip = {&loop._e, 0, 100, 10};
  27:main.c        **** struct trip rtrip = {&loop._e, 0, 12, 0};
  28:main.c        **** 
  29:main.c        **** uint32_t releasetime = 1000;
  30:main.c        **** uint32_t dxmax = 1024;
  31:main.c        **** 
  32:main.c        **** static void init();
  33:main.c        **** static void state(uint8_t new);
  34:main.c        **** static void cli();
  35:main.c        **** 
  36:main.c        **** int main() 
  37:main.c        **** {
 193              		.loc 2 37 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 8
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI6:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 14, -4
 201              		.cfi_offset 7, -8
 202 0002 82B0     		sub	sp, sp, #8
 203              	.LCFI7:
 204              		.cfi_def_cfa_offset 16
 205 0004 00AF     		add	r7, sp, #0
 206              	.LCFI8:
 207              		.cfi_def_cfa_register 7
  38:main.c        **** 	uint32_t timestamp = 0;
 208              		.loc 2 38 0
 209 0006 4FF00003 		mov	r3, #0
 210 000a 7B60     		str	r3, [r7, #4]
  39:main.c        **** 
  40:main.c        **** 	TRACE_INFO("Running at %i MHz\n", BOARD_MCK/1000000);
 211              		.loc 2 40 0
 212 000c 40F20003 		movw	r3, #:lower16:_impure_ptr
 213 0010 C0F20003 		movt	r3, #:upper16:_impure_ptr
 214 0014 1B68     		ldr	r3, [r3, #0]
 215 0016 DB68     		ldr	r3, [r3, #12]
 216 0018 1846     		mov	r0, r3
 217 001a 40F20001 		movw	r1, #:lower16:.LC0
 218 001e C0F20001 		movt	r1, #:upper16:.LC0
 219 0022 4FF03002 		mov	r2, #48
 220 0026 FFF7FEFF 		bl	fiprintf
  41:main.c        **** 
  42:main.c        **** 	/* WDT off */
  43:main.c        ****     WDT->WDT_MR = WDT_MR_WDDIS;
 221              		.loc 2 43 0
 222 002a 41F25043 		movw	r3, #5200
 223 002e C4F20E03 		movt	r3, 16398
 224 0032 4FF40042 		mov	r2, #32768
 225 0036 5A60     		str	r2, [r3, #4]
  44:main.c        **** 
  45:main.c        **** 	/* configure hardware */
  46:main.c        **** 	init();
 226              		.loc 2 46 0
 227 0038 FFF7FEFF 		bl	init
ARM GAS  /tmp/cchL5NBj.s 			page 34


  47:main.c        **** 
  48:main.c        **** 	TRACE_DEBUG("waiting until USB is fully configured\n");
 228              		.loc 2 48 0
 229 003c 40F20003 		movw	r3, #:lower16:_impure_ptr
 230 0040 C0F20003 		movt	r3, #:upper16:_impure_ptr
 231 0044 1B68     		ldr	r3, [r3, #0]
 232 0046 DB68     		ldr	r3, [r3, #12]
 233 0048 1846     		mov	r0, r3
 234 004a 40F20001 		movw	r1, #:lower16:.LC1
 235 004e C0F20001 		movt	r1, #:upper16:.LC1
 236 0052 FFF7FEFF 		bl	fiprintf
  49:main.c        **** 	while (!USBC_isConfigured());
 237              		.loc 2 49 0
 238 0056 00BF     		nop
 239              	.L6:
 240              		.loc 2 49 0 is_stmt 0 discriminator 1
 241 0058 FFF7FEFF 		bl	USBC_isConfigured
 242 005c 0346     		mov	r3, r0
 243 005e 002B     		cmp	r3, #0
 244 0060 FAD0     		beq	.L6
  50:main.c        **** 
  51:main.c        **** 	loop.Kp = SCALE(3);
 245              		.loc 2 51 0 is_stmt 1
 246 0062 40F20003 		movw	r3, #:lower16:loop
 247 0066 C0F20003 		movt	r3, #:upper16:loop
 248 006a 4FF4C072 		mov	r2, #384
 249 006e 9A81     		strh	r2, [r3, #12]	@ movhi
  52:main.c        **** 	loop.Ki = SCALE(2);
 250              		.loc 2 52 0
 251 0070 40F20003 		movw	r3, #:lower16:loop
 252 0074 C0F20003 		movt	r3, #:upper16:loop
 253 0078 4FF48072 		mov	r2, #256
 254 007c DA81     		strh	r2, [r3, #14]	@ movhi
  53:main.c        **** 	loop.Kd = SCALE(0);
 255              		.loc 2 53 0
 256 007e 40F20003 		movw	r3, #:lower16:loop
 257 0082 C0F20003 		movt	r3, #:upper16:loop
 258 0086 4FF00002 		mov	r2, #0
 259 008a 1A82     		strh	r2, [r3, #16]	@ movhi
  54:main.c        **** 	loop.rSlope = 16;
 260              		.loc 2 54 0
 261 008c 40F20003 		movw	r3, #:lower16:loop
 262 0090 C0F20003 		movt	r3, #:upper16:loop
 263 0094 4FF01002 		mov	r2, #16
 264 0098 9A60     		str	r2, [r3, #8]
  55:main.c        **** 	loop.rSP = MAXv;
 265              		.loc 2 55 0
 266 009a 40F20003 		movw	r3, #:lower16:loop
 267 009e C0F20003 		movt	r3, #:upper16:loop
 268 00a2 40F6FF72 		movw	r2, #4095
 269 00a6 9A80     		strh	r2, [r3, #4]	@ movhi
  56:main.c        **** 	loop.tristate = &rtrip;
 270              		.loc 2 56 0
 271 00a8 40F20003 		movw	r3, #:lower16:loop
 272 00ac C0F20003 		movt	r3, #:upper16:loop
 273 00b0 40F20002 		movw	r2, #:lower16:rtrip
 274 00b4 C0F20002 		movt	r2, #:upper16:rtrip
ARM GAS  /tmp/cchL5NBj.s 			page 35


 275 00b8 9A62     		str	r2, [r3, #40]
  57:main.c        **** 
  58:main.c        **** 	LED_blink(statusled, 5);
 276              		.loc 2 58 0
 277 00ba 4FF00000 		mov	r0, #0
 278 00be 4FF00501 		mov	r1, #5
 279 00c2 FFF7FEFF 		bl	LED_blink
  59:main.c        **** 
  60:main.c        **** 	setbuf(stdout, NULL);
 280              		.loc 2 60 0
 281 00c6 40F20003 		movw	r3, #:lower16:_impure_ptr
 282 00ca C0F20003 		movt	r3, #:upper16:_impure_ptr
 283 00ce 1B68     		ldr	r3, [r3, #0]
 284 00d0 9B68     		ldr	r3, [r3, #8]
 285 00d2 1846     		mov	r0, r3
 286 00d4 4FF00001 		mov	r1, #0
 287 00d8 FFF7FEFF 		bl	setbuf
 288              	.L21:
  61:main.c        **** 
  62:main.c        **** 	while (1) {
  63:main.c        **** 		cli();
 289              		.loc 2 63 0
 290 00dc FFF7FEFF 		bl	cli
  64:main.c        **** 		switch (_state) {
 291              		.loc 2 64 0
 292 00e0 40F20003 		movw	r3, #:lower16:_state
 293 00e4 C0F20003 		movt	r3, #:upper16:_state
 294 00e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 295 00ea 03F1FF33 		add	r3, r3, #-1
 296 00ee 072B     		cmp	r3, #7
 297 00f0 00F2A780 		bhi	.L7
 298 00f4 01A1     		adr	r1, .L12
 299 00f6 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 300 00fa 00BF     		.align	2
 301              	.L12:
 302 00fc 4D020000 		.word	.L22+1
 303 0100 11020000 		.word	.L9+1
 304 0104 43020000 		.word	.L7+1
 305 0108 1D010000 		.word	.L10+1
 306 010c 43020000 		.word	.L7+1
 307 0110 43020000 		.word	.L7+1
 308 0114 43020000 		.word	.L7+1
 309 0118 8F010000 		.word	.L11+1
 310              	.L10:
  65:main.c        **** 			case STOPPED:
  66:main.c        **** 				break;
  67:main.c        **** 
  68:main.c        **** 			case HOLD:
  69:main.c        **** 				if (GetTickCount() % 1000)
 311              		.loc 2 69 0
 312 011c FFF7FEFF 		bl	GetTickCount
 313 0120 0246     		mov	r2, r0
 314 0122 44F6D353 		movw	r3, #19923
 315 0126 C1F26203 		movt	r3, 4194
 316 012a A3FB0213 		umull	r1, r3, r3, r2
 317 012e 4FEA9313 		lsr	r3, r3, #6
 318 0132 4FF47A71 		mov	r1, #1000
ARM GAS  /tmp/cchL5NBj.s 			page 36


 319 0136 01FB03F3 		mul	r3, r1, r3
 320 013a D31A     		subs	r3, r2, r3
 321 013c 002B     		cmp	r3, #0
 322 013e 05D0     		beq	.L14
  70:main.c        **** 					LED_blink(statusled, 1);
 323              		.loc 2 70 0
 324 0140 4FF00000 		mov	r0, #0
 325 0144 4FF00101 		mov	r1, #1
 326 0148 FFF7FEFF 		bl	LED_blink
 327              	.L14:
  71:main.c        **** 				if (loop._dx > dxmax || loop._dx < -dxmax)
 328              		.loc 2 71 0
 329 014c 40F20003 		movw	r3, #:lower16:loop
 330 0150 C0F20003 		movt	r3, #:upper16:loop
 331 0154 9B69     		ldr	r3, [r3, #24]
 332 0156 1A46     		mov	r2, r3
 333 0158 40F20003 		movw	r3, #:lower16:dxmax
 334 015c C0F20003 		movt	r3, #:upper16:dxmax
 335 0160 1B68     		ldr	r3, [r3, #0]
 336 0162 9A42     		cmp	r2, r3
 337 0164 0ED8     		bhi	.L15
 338              		.loc 2 71 0 is_stmt 0 discriminator 1
 339 0166 40F20003 		movw	r3, #:lower16:loop
 340 016a C0F20003 		movt	r3, #:upper16:loop
 341 016e 9B69     		ldr	r3, [r3, #24]
 342 0170 1A46     		mov	r2, r3
 343 0172 40F20003 		movw	r3, #:lower16:dxmax
 344 0176 C0F20003 		movt	r3, #:upper16:dxmax
 345 017a 1B68     		ldr	r3, [r3, #0]
 346 017c C3F10003 		rsb	r3, r3, #0
 347 0180 9A42     		cmp	r2, r3
 348 0182 65D2     		bcs	.L23
 349              	.L15:
  72:main.c        **** 					state(RELEASE);
 350              		.loc 2 72 0 is_stmt 1
 351 0184 4FF00800 		mov	r0, #8
 352 0188 FFF7FEFF 		bl	state
  73:main.c        **** 				break;
 353              		.loc 2 73 0
 354 018c 60E0     		b	.L23
 355              	.L11:
  74:main.c        **** 
  75:main.c        **** 			case RELEASE:
  76:main.c        **** 				if (GetTickCount() % 1000)
 356              		.loc 2 76 0
 357 018e FFF7FEFF 		bl	GetTickCount
 358 0192 0246     		mov	r2, r0
 359 0194 44F6D353 		movw	r3, #19923
 360 0198 C1F26203 		movt	r3, 4194
 361 019c A3FB0213 		umull	r1, r3, r3, r2
 362 01a0 4FEA9313 		lsr	r3, r3, #6
 363 01a4 4FF47A71 		mov	r1, #1000
 364 01a8 01FB03F3 		mul	r3, r1, r3
 365 01ac D31A     		subs	r3, r2, r3
 366 01ae 002B     		cmp	r3, #0
 367 01b0 05D0     		beq	.L17
  77:main.c        **** 					LED_blink(statusled, 2);
ARM GAS  /tmp/cchL5NBj.s 			page 37


 368              		.loc 2 77 0
 369 01b2 4FF00000 		mov	r0, #0
 370 01b6 4FF00201 		mov	r1, #2
 371 01ba FFF7FEFF 		bl	LED_blink
 372              	.L17:
  78:main.c        **** 
  79:main.c        **** 				if (timestamp == 0)
 373              		.loc 2 79 0
 374 01be 7B68     		ldr	r3, [r7, #4]
 375 01c0 002B     		cmp	r3, #0
 376 01c2 0AD1     		bne	.L18
  80:main.c        **** 					timestamp = GetTickCount() + releasetime;
 377              		.loc 2 80 0
 378 01c4 FFF7FEFF 		bl	GetTickCount
 379 01c8 0246     		mov	r2, r0
 380 01ca 40F20003 		movw	r3, #:lower16:releasetime
 381 01ce C0F20003 		movt	r3, #:upper16:releasetime
 382 01d2 1B68     		ldr	r3, [r3, #0]
 383 01d4 D318     		adds	r3, r2, r3
 384 01d6 7B60     		str	r3, [r7, #4]
  81:main.c        **** 				else if (GetTickCount() >= timestamp) {
  82:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
  83:main.c        **** 					timestamp = 0;
  84:main.c        **** 					state(STOPPED);
  85:main.c        **** 				}
  86:main.c        **** 				break;
 385              		.loc 2 86 0
 386 01d8 3CE0     		b	.L24
 387              	.L18:
  81:main.c        **** 				else if (GetTickCount() >= timestamp) {
 388              		.loc 2 81 0
 389 01da FFF7FEFF 		bl	GetTickCount
 390 01de 0246     		mov	r2, r0
 391 01e0 7B68     		ldr	r3, [r7, #4]
 392 01e2 9A42     		cmp	r2, r3
 393 01e4 36D3     		bcc	.L24
  82:main.c        **** 					TRACE_DEBUG("releasetime elapsed\n");
 394              		.loc 2 82 0
 395 01e6 40F20003 		movw	r3, #:lower16:_impure_ptr
 396 01ea C0F20003 		movt	r3, #:upper16:_impure_ptr
 397 01ee 1B68     		ldr	r3, [r3, #0]
 398 01f0 DB68     		ldr	r3, [r3, #12]
 399 01f2 1846     		mov	r0, r3
 400 01f4 40F20001 		movw	r1, #:lower16:.LC2
 401 01f8 C0F20001 		movt	r1, #:upper16:.LC2
 402 01fc FFF7FEFF 		bl	fiprintf
  83:main.c        **** 					timestamp = 0;
 403              		.loc 2 83 0
 404 0200 4FF00003 		mov	r3, #0
 405 0204 7B60     		str	r3, [r7, #4]
  84:main.c        **** 					state(STOPPED);
 406              		.loc 2 84 0
 407 0206 4FF00100 		mov	r0, #1
 408 020a FFF7FEFF 		bl	state
 409              		.loc 2 86 0
 410 020e 21E0     		b	.L24
 411              	.L9:
ARM GAS  /tmp/cchL5NBj.s 			page 38


  87:main.c        **** 
  88:main.c        **** 			case RUN:
  89:main.c        **** 				if (GetTickCount() % 1000)
 412              		.loc 2 89 0
 413 0210 FFF7FEFF 		bl	GetTickCount
 414 0214 0246     		mov	r2, r0
 415 0216 44F6D353 		movw	r3, #19923
 416 021a C1F26203 		movt	r3, 4194
 417 021e A3FB0213 		umull	r1, r3, r3, r2
 418 0222 4FEA9313 		lsr	r3, r3, #6
 419 0226 4FF47A71 		mov	r1, #1000
 420 022a 01FB03F3 		mul	r3, r1, r3
 421 022e D31A     		subs	r3, r2, r3
 422 0230 002B     		cmp	r3, #0
 423 0232 11D0     		beq	.L25
  90:main.c        **** 					LED_blink(statusled, 3);
 424              		.loc 2 90 0
 425 0234 4FF00000 		mov	r0, #0
 426 0238 4FF00301 		mov	r1, #3
 427 023c FFF7FEFF 		bl	LED_blink
  91:main.c        **** 				break;
 428              		.loc 2 91 0
 429 0240 0AE0     		b	.L25
 430              	.L7:
  92:main.c        **** 
  93:main.c        **** 			default:
  94:main.c        **** 				state(STOPPED);
 431              		.loc 2 94 0
 432 0242 4FF00100 		mov	r0, #1
 433 0246 FFF7FEFF 		bl	state
  95:main.c        **** 		}
  96:main.c        **** 	}
 434              		.loc 2 96 0
 435 024a 47E7     		b	.L21
 436              	.L22:
  66:main.c        **** 				break;
 437              		.loc 2 66 0
 438 024c 00BF     		nop
 439 024e 04E0     		b	.L13
 440              	.L23:
  73:main.c        **** 				break;
 441              		.loc 2 73 0
 442 0250 00BF     		nop
 443 0252 02E0     		b	.L13
 444              	.L24:
  86:main.c        **** 				break;
 445              		.loc 2 86 0
 446 0254 00BF     		nop
 447 0256 00E0     		b	.L13
 448              	.L25:
  91:main.c        **** 				break;
 449              		.loc 2 91 0
 450 0258 00BF     		nop
 451              	.L13:
 452              		.loc 2 96 0
 453 025a 3FE7     		b	.L21
 454              		.cfi_endproc
ARM GAS  /tmp/cchL5NBj.s 			page 39


 455              	.LFE35:
 456              		.size	main, .-main
 457              		.section	.text.TC1_IrqHandler,"ax",%progbits
 458              		.align	2
 459              		.global	TC1_IrqHandler
 460              		.thumb
 461              		.thumb_func
 462              		.type	TC1_IrqHandler, %function
 463              	TC1_IrqHandler:
 464              	.LFB36:
  97:main.c        **** 	return 0;
  98:main.c        **** }
  99:main.c        **** 
 100:main.c        **** void TC1_IrqHandler()
 101:main.c        **** {
 465              		.loc 2 101 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469 0000 80B5     		push	{r7, lr}
 470              	.LCFI9:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 14, -4
 473              		.cfi_offset 7, -8
 474 0002 00AF     		add	r7, sp, #0
 475              	.LCFI10:
 476              		.cfi_def_cfa_register 7
 102:main.c        **** 	ADC_StartConversion(ADC);
 477              		.loc 2 102 0
 478 0004 4FF40043 		mov	r3, #32768
 479 0008 C4F20303 		movt	r3, 16387
 480 000c 4FF00202 		mov	r2, #2
 481 0010 1A60     		str	r2, [r3, #0]
 103:main.c        **** 	ADC_ReadBuffer(ADC, (int16_t*) input, NUM_AIN);
 482              		.loc 2 103 0
 483 0012 4FF40040 		mov	r0, #32768
 484 0016 C4F20300 		movt	r0, 16387
 485 001a 40F20001 		movw	r1, #:lower16:input
 486 001e C0F20001 		movt	r1, #:upper16:input
 487 0022 4FF00202 		mov	r2, #2
 488 0026 FFF7FEFF 		bl	ADC_ReadBuffer
 104:main.c        **** }
 489              		.loc 2 104 0
 490 002a 80BD     		pop	{r7, pc}
 491              		.cfi_endproc
 492              	.LFE36:
 493              		.size	TC1_IrqHandler, .-TC1_IrqHandler
 494              		.section	.text.ADC_IrqHandler,"ax",%progbits
 495              		.align	2
 496              		.global	ADC_IrqHandler
 497              		.thumb
 498              		.thumb_func
 499              		.type	ADC_IrqHandler, %function
 500              	ADC_IrqHandler:
 501              	.LFB37:
 105:main.c        **** 
 106:main.c        **** void ADC_IrqHandler(void)
ARM GAS  /tmp/cchL5NBj.s 			page 40


 107:main.c        **** {
 502              		.loc 2 107 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 8
 505              		@ frame_needed = 1, uses_anonymous_args = 0
 506 0000 80B5     		push	{r7, lr}
 507              	.LCFI11:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 14, -4
 510              		.cfi_offset 7, -8
 511 0002 82B0     		sub	sp, sp, #8
 512              	.LCFI12:
 513              		.cfi_def_cfa_offset 16
 514 0004 00AF     		add	r7, sp, #0
 515              	.LCFI13:
 516              		.cfi_def_cfa_register 7
 108:main.c        **** 	//TODO enable TAG option and check
 109:main.c        ****     uint32_t status;
 110:main.c        **** 	uint32_t duty = 0;
 517              		.loc 2 110 0
 518 0006 4FF00003 		mov	r3, #0
 519 000a 7B60     		str	r3, [r7, #4]
 111:main.c        **** 
 112:main.c        ****     status = ADC_GetStatus(ADC);
 520              		.loc 2 112 0
 521 000c 4FF40043 		mov	r3, #32768
 522 0010 C4F20303 		movt	r3, 16387
 523 0014 1B6B     		ldr	r3, [r3, #48]
 524 0016 3B60     		str	r3, [r7, #0]
 113:main.c        **** 
 114:main.c        **** 	if ((status & ADC_ISR_RXBUFF) == ADC_ISR_RXBUFF) {
 525              		.loc 2 114 0
 526 0018 3B68     		ldr	r3, [r7, #0]
 527 001a 03F08053 		and	r3, r3, #268435456
 528 001e 002B     		cmp	r3, #0
 529 0020 00F08B80 		beq	.L27
 115:main.c        **** 		if (_state & (RUN|HOLD)) {
 530              		.loc 2 115 0
 531 0024 40F20003 		movw	r3, #:lower16:_state
 532 0028 C0F20003 		movt	r3, #:upper16:_state
 533 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 534 002e 03F00603 		and	r3, r3, #6
 535 0032 002B     		cmp	r3, #0
 536 0034 00F08180 		beq	.L27
 116:main.c        **** 			control(LIMIT(input[0], MINv, MAXv), &loop);
 537              		.loc 2 116 0
 538 0038 40F20003 		movw	r3, #:lower16:input
 539 003c C0F20003 		movt	r3, #:upper16:input
 540 0040 1A88     		ldrh	r2, [r3, #0]
 541 0042 40F6FF73 		movw	r3, #4095
 542 0046 9A42     		cmp	r2, r3
 543 0048 38BF     		it	cc
 544 004a 1346     		movcc	r3, r2
 545 004c 9BB2     		uxth	r3, r3
 546 004e 1846     		mov	r0, r3
 547 0050 40F20001 		movw	r1, #:lower16:loop
 548 0054 C0F20001 		movt	r1, #:upper16:loop
ARM GAS  /tmp/cchL5NBj.s 			page 41


 549 0058 FFF7FEFF 		bl	control
 117:main.c        **** 			duty = loop.tristate->output * ((loop.output * PWM_PERIOD) / MAX);
 550              		.loc 2 117 0
 551 005c 40F20003 		movw	r3, #:lower16:loop
 552 0060 C0F20003 		movt	r3, #:upper16:loop
 553 0064 9B6A     		ldr	r3, [r3, #40]
 554 0066 5968     		ldr	r1, [r3, #4]
 555 0068 40F20003 		movw	r3, #:lower16:loop
 556 006c C0F20003 		movt	r3, #:upper16:loop
 557 0070 DB8C     		ldrh	r3, [r3, #38]
 558 0072 1BB2     		sxth	r3, r3
 559 0074 4FF06402 		mov	r2, #100
 560 0078 02FB03F3 		mul	r3, r2, r3
 561 007c 03F57E62 		add	r2, r3, #4064
 562 0080 02F11F02 		add	r2, r2, #31
 563 0084 002B     		cmp	r3, #0
 564 0086 B8BF     		it	lt
 565 0088 1346     		movlt	r3, r2
 566 008a 4FEA2333 		asr	r3, r3, #12
 567 008e 03F1FF33 		add	r3, r3, #-1
 568 0092 03FB01F3 		mul	r3, r3, r1
 569 0096 7B60     		str	r3, [r7, #4]
 118:main.c        **** 			if (loop.tristate->output == 1) {
 570              		.loc 2 118 0
 571 0098 40F20003 		movw	r3, #:lower16:loop
 572 009c C0F20003 		movt	r3, #:upper16:loop
 573 00a0 9B6A     		ldr	r3, [r3, #40]
 574 00a2 5B68     		ldr	r3, [r3, #4]
 575 00a4 012B     		cmp	r3, #1
 576 00a6 15D1     		bne	.L29
 119:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_up, duty);
 577              		.loc 2 119 0
 578 00a8 7B68     		ldr	r3, [r7, #4]
 579 00aa 9BB2     		uxth	r3, r3
 580 00ac 4FF00000 		mov	r0, #0
 581 00b0 C4F20200 		movt	r0, 16386
 582 00b4 4FF00001 		mov	r1, #0
 583 00b8 1A46     		mov	r2, r3
 584 00ba FFF7FEFF 		bl	PWMC_SetDutyCycle
 120:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 585              		.loc 2 120 0
 586 00be 4FF00000 		mov	r0, #0
 587 00c2 C4F20200 		movt	r0, 16386
 588 00c6 4FF00101 		mov	r1, #1
 589 00ca 4FF00002 		mov	r2, #0
 590 00ce FFF7FEFF 		bl	PWMC_SetDutyCycle
 591 00d2 32E0     		b	.L27
 592              	.L29:
 121:main.c        **** 			}
 122:main.c        **** 			else if (loop.tristate->output == -1) {
 593              		.loc 2 122 0
 594 00d4 40F20003 		movw	r3, #:lower16:loop
 595 00d8 C0F20003 		movt	r3, #:upper16:loop
 596 00dc 9B6A     		ldr	r3, [r3, #40]
 597 00de 5B68     		ldr	r3, [r3, #4]
 598 00e0 B3F1FF3F 		cmp	r3, #-1
 599 00e4 15D1     		bne	.L30
ARM GAS  /tmp/cchL5NBj.s 			page 42


 123:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 600              		.loc 2 123 0
 601 00e6 4FF00000 		mov	r0, #0
 602 00ea C4F20200 		movt	r0, 16386
 603 00ee 4FF00001 		mov	r1, #0
 604 00f2 4FF00002 		mov	r2, #0
 605 00f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
 124:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_down, duty);
 606              		.loc 2 124 0
 607 00fa 7B68     		ldr	r3, [r7, #4]
 608 00fc 9BB2     		uxth	r3, r3
 609 00fe 4FF00000 		mov	r0, #0
 610 0102 C4F20200 		movt	r0, 16386
 611 0106 4FF00101 		mov	r1, #1
 612 010a 1A46     		mov	r2, r3
 613 010c FFF7FEFF 		bl	PWMC_SetDutyCycle
 614 0110 13E0     		b	.L27
 615              	.L30:
 125:main.c        **** 			}
 126:main.c        **** 			else {
 127:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 616              		.loc 2 127 0
 617 0112 4FF00000 		mov	r0, #0
 618 0116 C4F20200 		movt	r0, 16386
 619 011a 4FF00001 		mov	r1, #0
 620 011e 4FF00002 		mov	r2, #0
 621 0122 FFF7FEFF 		bl	PWMC_SetDutyCycle
 128:main.c        **** 				PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 622              		.loc 2 128 0
 623 0126 4FF00000 		mov	r0, #0
 624 012a C4F20200 		movt	r0, 16386
 625 012e 4FF00101 		mov	r1, #1
 626 0132 4FF00002 		mov	r2, #0
 627 0136 FFF7FEFF 		bl	PWMC_SetDutyCycle
 628              	.L27:
 129:main.c        **** 			}
 130:main.c        **** 		}
 131:main.c        **** 	}
 132:main.c        **** }
 629              		.loc 2 132 0
 630 013a 07F10807 		add	r7, r7, #8
 631 013e BD46     		mov	sp, r7
 632 0140 80BD     		pop	{r7, pc}
 633              		.cfi_endproc
 634              	.LFE37:
 635              		.size	ADC_IrqHandler, .-ADC_IrqHandler
 636 0142 00BF     		.section	.text.init,"ax",%progbits
 637              		.align	2
 638              		.thumb
 639              		.thumb_func
 640              		.type	init, %function
 641              	init:
 642              	.LFB38:
 133:main.c        **** 
 134:main.c        **** static void init()
 135:main.c        **** {
 643              		.loc 2 135 0
ARM GAS  /tmp/cchL5NBj.s 			page 43


 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 8
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 90B5     		push	{r4, r7, lr}
 648              	.LCFI14:
 649              		.cfi_def_cfa_offset 12
 650              		.cfi_offset 14, -4
 651              		.cfi_offset 7, -8
 652              		.cfi_offset 4, -12
 653 0002 89B0     		sub	sp, sp, #36
 654              	.LCFI15:
 655              		.cfi_def_cfa_offset 48
 656 0004 06AF     		add	r7, sp, #24
 657              	.LCFI16:
 658              		.cfi_def_cfa 7, 24
 136:main.c        ****     uint32_t div;
 137:main.c        ****     uint32_t tcclks;
 138:main.c        **** 
 139:main.c        **** 	//TODO PIO Configure 
 140:main.c        **** 
 141:main.c        ****     /* Enable peripheral clocks */
 142:main.c        ****     PMC_EnablePeripheral(ID_TC1);
 659              		.loc 2 142 0
 660 0006 4FF01800 		mov	r0, #24
 661 000a FFF7FEFF 		bl	PMC_EnablePeripheral
 143:main.c        ****     PMC_EnablePeripheral(ID_ADC);
 662              		.loc 2 143 0
 663 000e 4FF01D00 		mov	r0, #29
 664 0012 FFF7FEFF 		bl	PMC_EnablePeripheral
 144:main.c        ****     PMC_EnablePeripheral(ID_PWM);
 665              		.loc 2 144 0
 666 0016 4FF01F00 		mov	r0, #31
 667 001a FFF7FEFF 		bl	PMC_EnablePeripheral
 145:main.c        **** 
 146:main.c        ****     /* Configure TC */
 147:main.c        ****     TC_FindMckDivisor(SAMPLING_FREQ, BOARD_MCK, &div, &tcclks, BOARD_MCK);
 668              		.loc 2 147 0
 669 001e 07F10402 		add	r2, r7, #4
 670 0022 3C46     		mov	r4, r7
 671 0024 4FF4D843 		mov	r3, #27648
 672 0028 C0F2DC23 		movt	r3, 732
 673 002c 0093     		str	r3, [sp, #0]
 674 002e 4FF00400 		mov	r0, #4
 675 0032 4FF4D841 		mov	r1, #27648
 676 0036 C0F2DC21 		movt	r1, 732
 677 003a 2346     		mov	r3, r4
 678 003c FFF7FEFF 		bl	TC_FindMckDivisor
 148:main.c        ****     TC_Configure(TC1, BLINK_TC, tcclks | TC_CMR_CPCTRG);
 679              		.loc 2 148 0
 680 0040 3B68     		ldr	r3, [r7, #0]
 681 0042 43F48043 		orr	r3, r3, #16384
 682 0046 4FF48040 		mov	r0, #16384
 683 004a C4F20100 		movt	r0, 16385
 684 004e 4FF00001 		mov	r1, #0
 685 0052 1A46     		mov	r2, r3
 686 0054 FFF7FEFF 		bl	TC_Configure
 149:main.c        ****     TC1->TC_CHANNEL[0].TC_RC = (BOARD_MCK/div) / SAMPLING_FREQ;
ARM GAS  /tmp/cchL5NBj.s 			page 44


 687              		.loc 2 149 0
 688 0058 4FF48043 		mov	r3, #16384
 689 005c C4F20103 		movt	r3, 16385
 690 0060 7968     		ldr	r1, [r7, #4]
 691 0062 4FF4D852 		mov	r2, #6912
 692 0066 C0F2B702 		movt	r2, 183
 693 006a B2FBF1F2 		udiv	r2, r2, r1
 694 006e DA61     		str	r2, [r3, #28]
 150:main.c        **** 	TC_Start(TC1, 0);
 695              		.loc 2 150 0
 696 0070 4FF48040 		mov	r0, #16384
 697 0074 C4F20100 		movt	r0, 16385
 698 0078 4FF00001 		mov	r1, #0
 699 007c FFF7FEFF 		bl	TC_Start
 151:main.c        **** 
 152:main.c        ****     NVIC_EnableIRQ(TC1_IRQn);
 700              		.loc 2 152 0
 701 0080 4FF01800 		mov	r0, #24
 702 0084 FFF7FEFF 		bl	NVIC_EnableIRQ
 153:main.c        ****     NVIC_SetPriority(TC1_IRQn, 1);
 703              		.loc 2 153 0
 704 0088 4FF01800 		mov	r0, #24
 705 008c 4FF00101 		mov	r1, #1
 706 0090 FFF7FEFF 		bl	NVIC_SetPriority
 154:main.c        ****     TC1->TC_CHANNEL[0].TC_IER = TC_IER_CPCS;
 707              		.loc 2 154 0
 708 0094 4FF48043 		mov	r3, #16384
 709 0098 C4F20103 		movt	r3, 16385
 710 009c 4FF01002 		mov	r2, #16
 711 00a0 5A62     		str	r2, [r3, #36]
 155:main.c        **** 
 156:main.c        ****     /* Initialize ADC */
 157:main.c        ****     ADC_Initialize(ADC, ID_ADC);
 712              		.loc 2 157 0
 713 00a2 4FF40040 		mov	r0, #32768
 714 00a6 C4F20300 		movt	r0, 16387
 715 00aa 4FF01D01 		mov	r1, #29
 716 00ae FFF7FEFF 		bl	ADC_Initialize
 158:main.c        ****     ADC_cfgFrequency(ADC, 15, 4 ); // startup = 15, prescal = 4, ADC clock = 6.4 MHz
 717              		.loc 2 158 0
 718 00b2 4FF40040 		mov	r0, #32768
 719 00b6 C4F20300 		movt	r0, 16387
 720 00ba 4FF00F01 		mov	r1, #15
 721 00be 4FF00402 		mov	r2, #4
 722 00c2 FFF7FEFF 		bl	ADC_cfgFrequency
 159:main.c        **** 
 160:main.c        ****     ADC_EnableChannel(ADC, AIN0);
 723              		.loc 2 160 0
 724 00c6 4FF40043 		mov	r3, #32768
 725 00ca C4F20303 		movt	r3, 16387
 726 00ce 4FF00102 		mov	r2, #1
 727 00d2 1A61     		str	r2, [r3, #16]
 161:main.c        ****     ADC_EnableChannel(ADC, AIN1);
 728              		.loc 2 161 0
 729 00d4 4FF40043 		mov	r3, #32768
 730 00d8 C4F20303 		movt	r3, 16387
 731 00dc 4FF00202 		mov	r2, #2
ARM GAS  /tmp/cchL5NBj.s 			page 45


 732 00e0 1A61     		str	r2, [r3, #16]
 162:main.c        **** 	ADC_StartConversion(ADC);
 733              		.loc 2 162 0
 734 00e2 4FF40043 		mov	r3, #32768
 735 00e6 C4F20303 		movt	r3, 16387
 736 00ea 4FF00202 		mov	r2, #2
 737 00ee 1A60     		str	r2, [r3, #0]
 163:main.c        ****     ADC_ReadBuffer(ADC, (int16_t*) input, NUM_AIN);
 738              		.loc 2 163 0
 739 00f0 4FF40040 		mov	r0, #32768
 740 00f4 C4F20300 		movt	r0, 16387
 741 00f8 40F20001 		movw	r1, #:lower16:input
 742 00fc C0F20001 		movt	r1, #:upper16:input
 743 0100 4FF00202 		mov	r2, #2
 744 0104 FFF7FEFF 		bl	ADC_ReadBuffer
 164:main.c        **** 
 165:main.c        ****     NVIC_EnableIRQ(ADC_IRQn);
 745              		.loc 2 165 0
 746 0108 4FF01D00 		mov	r0, #29
 747 010c FFF7FEFF 		bl	NVIC_EnableIRQ
 166:main.c        **** 	NVIC_SetPriority(ADC_IRQn, 0);
 748              		.loc 2 166 0
 749 0110 4FF01D00 		mov	r0, #29
 750 0114 4FF00001 		mov	r1, #0
 751 0118 FFF7FEFF 		bl	NVIC_SetPriority
 167:main.c        ****     ADC_EnableIt(ADC,ADC_IER_RXBUFF);
 752              		.loc 2 167 0
 753 011c 4FF40043 		mov	r3, #32768
 754 0120 C4F20303 		movt	r3, 16387
 755 0124 4FF08052 		mov	r2, #268435456
 756 0128 5A62     		str	r2, [r3, #36]
 168:main.c        **** 
 169:main.c        ****     /* Configure PWMC channels */
 170:main.c        ****     PWMC_ConfigureClocks(PWM_FREQ * PWM_PERIOD, 0, BOARD_MCK);
 757              		.loc 2 170 0
 758 012a 4FF4FA60 		mov	r0, #2000
 759 012e 4FF00001 		mov	r1, #0
 760 0132 4FF4D842 		mov	r2, #27648
 761 0136 C0F2DC22 		movt	r2, 732
 762 013a FFF7FEFF 		bl	PWMC_ConfigureClocks
 171:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWMOUT_up, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 763              		.loc 2 171 0
 764 013e 4FF00103 		mov	r3, #1
 765 0142 0093     		str	r3, [sp, #0]
 766 0144 4FF00003 		mov	r3, #0
 767 0148 0193     		str	r3, [sp, #4]
 768 014a 4FF00003 		mov	r3, #0
 769 014e 0293     		str	r3, [sp, #8]
 770 0150 4FF00003 		mov	r3, #0
 771 0154 0393     		str	r3, [sp, #12]
 772 0156 4FF00003 		mov	r3, #0
 773 015a 0493     		str	r3, [sp, #16]
 774 015c 4FF00000 		mov	r0, #0
 775 0160 C4F20200 		movt	r0, 16386
 776 0164 4FF00001 		mov	r1, #0
 777 0168 4FF00B02 		mov	r2, #11
 778 016c 4FF00003 		mov	r3, #0
ARM GAS  /tmp/cchL5NBj.s 			page 46


 779 0170 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
 172:main.c        ****     PWMC_ConfigureChannelExt(PWM, PWMOUT_down, PWM_CMR_CPRE_CKA, 0, 1, 0, 0, 0, 0);
 780              		.loc 2 172 0
 781 0174 4FF00103 		mov	r3, #1
 782 0178 0093     		str	r3, [sp, #0]
 783 017a 4FF00003 		mov	r3, #0
 784 017e 0193     		str	r3, [sp, #4]
 785 0180 4FF00003 		mov	r3, #0
 786 0184 0293     		str	r3, [sp, #8]
 787 0186 4FF00003 		mov	r3, #0
 788 018a 0393     		str	r3, [sp, #12]
 789 018c 4FF00003 		mov	r3, #0
 790 0190 0493     		str	r3, [sp, #16]
 791 0192 4FF00000 		mov	r0, #0
 792 0196 C4F20200 		movt	r0, 16386
 793 019a 4FF00101 		mov	r1, #1
 794 019e 4FF00B02 		mov	r2, #11
 795 01a2 4FF00003 		mov	r3, #0
 796 01a6 FFF7FEFF 		bl	PWMC_ConfigureChannelExt
 173:main.c        **** 
 174:main.c        ****     PWMC_SetPeriod(PWM, PWMOUT_up, PWM_PERIOD);
 797              		.loc 2 174 0
 798 01aa 4FF00000 		mov	r0, #0
 799 01ae C4F20200 		movt	r0, 16386
 800 01b2 4FF00001 		mov	r1, #0
 801 01b6 4FF06402 		mov	r2, #100
 802 01ba FFF7FEFF 		bl	PWMC_SetPeriod
 175:main.c        ****     PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 803              		.loc 2 175 0
 804 01be 4FF00000 		mov	r0, #0
 805 01c2 C4F20200 		movt	r0, 16386
 806 01c6 4FF00001 		mov	r1, #0
 807 01ca 4FF00002 		mov	r2, #0
 808 01ce FFF7FEFF 		bl	PWMC_SetDutyCycle
 176:main.c        ****     PWMC_SetPeriod(PWM, PWMOUT_down, PWM_PERIOD);
 809              		.loc 2 176 0
 810 01d2 4FF00000 		mov	r0, #0
 811 01d6 C4F20200 		movt	r0, 16386
 812 01da 4FF00101 		mov	r1, #1
 813 01de 4FF06402 		mov	r2, #100
 814 01e2 FFF7FEFF 		bl	PWMC_SetPeriod
 177:main.c        ****     PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 815              		.loc 2 177 0
 816 01e6 4FF00000 		mov	r0, #0
 817 01ea C4F20200 		movt	r0, 16386
 818 01ee 4FF00101 		mov	r1, #1
 819 01f2 4FF00002 		mov	r2, #0
 820 01f6 FFF7FEFF 		bl	PWMC_SetDutyCycle
 178:main.c        **** 
 179:main.c        ****     PWMC_ConfigureSyncChannel(PWM, (1 << PWMOUT_up)|(1 << PWMOUT_down), PWM_SCM_UPDM_MODE1, 0, 0);
 821              		.loc 2 179 0
 822 01fa 4FF00003 		mov	r3, #0
 823 01fe 0093     		str	r3, [sp, #0]
 824 0200 4FF00000 		mov	r0, #0
 825 0204 C4F20200 		movt	r0, 16386
 826 0208 4FF00301 		mov	r1, #3
 827 020c 4FF48032 		mov	r2, #65536
ARM GAS  /tmp/cchL5NBj.s 			page 47


 828 0210 4FF00003 		mov	r3, #0
 829 0214 FFF7FEFF 		bl	PWMC_ConfigureSyncChannel
 180:main.c        ****     PWMC_SetSyncChannelUpdatePeriod(PWM, PWM_SCUP_UPR(1));
 830              		.loc 2 180 0
 831 0218 4FF00000 		mov	r0, #0
 832 021c C4F20200 		movt	r0, 16386
 833 0220 4FF00101 		mov	r1, #1
 834 0224 FFF7FEFF 		bl	PWMC_SetSyncChannelUpdatePeriod
 181:main.c        **** 
 182:main.c        **** 	/* Tick Config */
 183:main.c        **** 	TimeTick_Configure(BOARD_MCK);
 835              		.loc 2 183 0
 836 0228 4FF4D840 		mov	r0, #27648
 837 022c C0F2DC20 		movt	r0, 732
 838 0230 FFF7FEFF 		bl	TimeTick_Configure
 184:main.c        **** 
 185:main.c        **** 	/* LED PIO Config */
 186:main.c        **** 	LEDs_configure();
 839              		.loc 2 186 0
 840 0234 FFF7FEFF 		bl	LEDs_configure
 187:main.c        **** 	LED_clr(statusled);
 841              		.loc 2 187 0
 842 0238 4FF00000 		mov	r0, #0
 843 023c FFF7FEFF 		bl	LED_clr
 188:main.c        **** 
 189:main.c        **** 	/* USB Console Config */
 190:main.c        **** 	USBC_Configure();
 844              		.loc 2 190 0
 845 0240 FFF7FEFF 		bl	USBC_Configure
 191:main.c        **** }
 846              		.loc 2 191 0
 847 0244 07F10C07 		add	r7, r7, #12
 848 0248 BD46     		mov	sp, r7
 849 024a 90BD     		pop	{r4, r7, pc}
 850              		.cfi_endproc
 851              	.LFE38:
 852              		.size	init, .-init
 853              		.section	.rodata
 854 005d 000000   		.align	2
 855              	.LC3:
 856 0060 2D442D20 		.ascii	"-D- set state STOPPED\012\000"
 856      73657420 
 856      73746174 
 856      65205354 
 856      4F505045 
 857 0077 00       		.align	2
 858              	.LC4:
 859 0078 2D442D20 		.ascii	"-D- set state RUN\012\000"
 859      73657420 
 859      73746174 
 859      65205255 
 859      4E0A00
 860 008b 00       		.align	2
 861              	.LC5:
 862 008c 2D442D20 		.ascii	"-D- set state HOLD\012\000"
 862      73657420 
 862      73746174 
ARM GAS  /tmp/cchL5NBj.s 			page 48


 862      6520484F 
 862      4C440A00 
 863              		.align	2
 864              	.LC6:
 865 00a0 2D442D20 		.ascii	"-D- set state RELEASE\012\000"
 865      73657420 
 865      73746174 
 865      65205245 
 865      4C454153 
 866 00b7 00       		.align	2
 867              	.LC7:
 868 00b8 2D442D20 		.ascii	"-D- got invalid state\012\000"
 868      676F7420 
 868      696E7661 
 868      6C696420 
 868      73746174 
 869              		.section	.text.state,"ax",%progbits
 870              		.align	2
 871              		.thumb
 872              		.thumb_func
 873              		.type	state, %function
 874              	state:
 875              	.LFB39:
 192:main.c        **** 
 193:main.c        **** static void state(uint8_t new) 
 194:main.c        **** {
 876              		.loc 2 194 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 8
 879              		@ frame_needed = 1, uses_anonymous_args = 0
 880 0000 80B5     		push	{r7, lr}
 881              	.LCFI17:
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 14, -4
 884              		.cfi_offset 7, -8
 885 0002 82B0     		sub	sp, sp, #8
 886              	.LCFI18:
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              	.LCFI19:
 890              		.cfi_def_cfa_register 7
 891 0006 0346     		mov	r3, r0
 892 0008 FB71     		strb	r3, [r7, #7]
 195:main.c        **** 	switch (new) {
 893              		.loc 2 195 0
 894 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 895 000c 03F1FF33 		add	r3, r3, #-1
 896 0010 072B     		cmp	r3, #7
 897 0012 00F2AF80 		bhi	.L33
 898 0016 01A2     		adr	r2, .L38
 899 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 900              		.align	2
 901              	.L38:
 902 001c 3D000000 		.word	.L34+1
 903 0020 91000000 		.word	.L35+1
 904 0024 75010000 		.word	.L33+1
 905 0028 CF000000 		.word	.L36+1
ARM GAS  /tmp/cchL5NBj.s 			page 49


 906 002c 75010000 		.word	.L33+1
 907 0030 75010000 		.word	.L33+1
 908 0034 75010000 		.word	.L33+1
 909 0038 21010000 		.word	.L37+1
 910              	.L34:
 196:main.c        **** 		case STOPPED:
 197:main.c        **** 			mode(STOP, &loop);
 911              		.loc 2 197 0
 912 003c 4FF00300 		mov	r0, #3
 913 0040 40F20001 		movw	r1, #:lower16:loop
 914 0044 C0F20001 		movt	r1, #:upper16:loop
 915 0048 FFF7FEFF 		bl	mode
 198:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_up, 0);
 916              		.loc 2 198 0
 917 004c 4FF00000 		mov	r0, #0
 918 0050 C4F20200 		movt	r0, 16386
 919 0054 4FF00001 		mov	r1, #0
 920 0058 4FF00002 		mov	r2, #0
 921 005c FFF7FEFF 		bl	PWMC_SetDutyCycle
 199:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_down, 0);
 922              		.loc 2 199 0
 923 0060 4FF00000 		mov	r0, #0
 924 0064 C4F20200 		movt	r0, 16386
 925 0068 4FF00101 		mov	r1, #1
 926 006c 4FF00002 		mov	r2, #0
 927 0070 FFF7FEFF 		bl	PWMC_SetDutyCycle
 200:main.c        **** 			TRACE_DEBUG("set state STOPPED\n");
 928              		.loc 2 200 0
 929 0074 40F20003 		movw	r3, #:lower16:_impure_ptr
 930 0078 C0F20003 		movt	r3, #:upper16:_impure_ptr
 931 007c 1B68     		ldr	r3, [r3, #0]
 932 007e DB68     		ldr	r3, [r3, #12]
 933 0080 1846     		mov	r0, r3
 934 0082 40F20001 		movw	r1, #:lower16:.LC3
 935 0086 C0F20001 		movt	r1, #:upper16:.LC3
 936 008a FFF7FEFF 		bl	fiprintf
 201:main.c        **** 			break;
 937              		.loc 2 201 0
 938 008e 82E0     		b	.L39
 939              	.L35:
 202:main.c        **** 		case RUN:
 203:main.c        **** 			loop.tristate = &rtrip;
 940              		.loc 2 203 0
 941 0090 40F20003 		movw	r3, #:lower16:loop
 942 0094 C0F20003 		movt	r3, #:upper16:loop
 943 0098 40F20002 		movw	r2, #:lower16:rtrip
 944 009c C0F20002 		movt	r2, #:upper16:rtrip
 945 00a0 9A62     		str	r2, [r3, #40]
 204:main.c        **** 			mode(RAMP, &loop);
 946              		.loc 2 204 0
 947 00a2 4FF00200 		mov	r0, #2
 948 00a6 40F20001 		movw	r1, #:lower16:loop
 949 00aa C0F20001 		movt	r1, #:upper16:loop
 950 00ae FFF7FEFF 		bl	mode
 205:main.c        **** 			TRACE_DEBUG("set state RUN\n");
 951              		.loc 2 205 0
 952 00b2 40F20003 		movw	r3, #:lower16:_impure_ptr
ARM GAS  /tmp/cchL5NBj.s 			page 50


 953 00b6 C0F20003 		movt	r3, #:upper16:_impure_ptr
 954 00ba 1B68     		ldr	r3, [r3, #0]
 955 00bc DB68     		ldr	r3, [r3, #12]
 956 00be 1846     		mov	r0, r3
 957 00c0 40F20001 		movw	r1, #:lower16:.LC4
 958 00c4 C0F20001 		movt	r1, #:upper16:.LC4
 959 00c8 FFF7FEFF 		bl	fiprintf
 206:main.c        **** 			break;
 960              		.loc 2 206 0
 961 00cc 63E0     		b	.L39
 962              	.L36:
 207:main.c        **** 		case HOLD:
 208:main.c        **** 			loop.tristate = &ntrip;
 963              		.loc 2 208 0
 964 00ce 40F20003 		movw	r3, #:lower16:loop
 965 00d2 C0F20003 		movt	r3, #:upper16:loop
 966 00d6 40F20002 		movw	r2, #:lower16:ntrip
 967 00da C0F20002 		movt	r2, #:upper16:ntrip
 968 00de 9A62     		str	r2, [r3, #40]
 209:main.c        **** 			loop.SP = loop._x;
 969              		.loc 2 209 0
 970 00e0 40F20003 		movw	r3, #:lower16:loop
 971 00e4 C0F20003 		movt	r3, #:upper16:loop
 972 00e8 9A8C     		ldrh	r2, [r3, #36]
 973 00ea 40F20003 		movw	r3, #:lower16:loop
 974 00ee C0F20003 		movt	r3, #:upper16:loop
 975 00f2 5A80     		strh	r2, [r3, #2]	@ movhi
 210:main.c        **** 			mode(NORMAL, &loop);
 976              		.loc 2 210 0
 977 00f4 4FF00100 		mov	r0, #1
 978 00f8 40F20001 		movw	r1, #:lower16:loop
 979 00fc C0F20001 		movt	r1, #:upper16:loop
 980 0100 FFF7FEFF 		bl	mode
 211:main.c        **** 			TRACE_DEBUG("set state HOLD\n");
 981              		.loc 2 211 0
 982 0104 40F20003 		movw	r3, #:lower16:_impure_ptr
 983 0108 C0F20003 		movt	r3, #:upper16:_impure_ptr
 984 010c 1B68     		ldr	r3, [r3, #0]
 985 010e DB68     		ldr	r3, [r3, #12]
 986 0110 1846     		mov	r0, r3
 987 0112 40F20001 		movw	r1, #:lower16:.LC5
 988 0116 C0F20001 		movt	r1, #:upper16:.LC5
 989 011a FFF7FEFF 		bl	fiprintf
 212:main.c        **** 			break;
 990              		.loc 2 212 0
 991 011e 3AE0     		b	.L39
 992              	.L37:
 213:main.c        **** 		case RELEASE:
 214:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_up, 0); // down -> 0
 993              		.loc 2 214 0
 994 0120 4FF00000 		mov	r0, #0
 995 0124 C4F20200 		movt	r0, 16386
 996 0128 4FF00001 		mov	r1, #0
 997 012c 4FF00002 		mov	r2, #0
 998 0130 FFF7FEFF 		bl	PWMC_SetDutyCycle
 215:main.c        **** 			PWMC_SetDutyCycle(PWM, PWMOUT_down, 0); // up -> full
 999              		.loc 2 215 0
ARM GAS  /tmp/cchL5NBj.s 			page 51


 1000 0134 4FF00000 		mov	r0, #0
 1001 0138 C4F20200 		movt	r0, 16386
 1002 013c 4FF00101 		mov	r1, #1
 1003 0140 4FF00002 		mov	r2, #0
 1004 0144 FFF7FEFF 		bl	PWMC_SetDutyCycle
 216:main.c        **** 			mode(STOP, &loop);
 1005              		.loc 2 216 0
 1006 0148 4FF00300 		mov	r0, #3
 1007 014c 40F20001 		movw	r1, #:lower16:loop
 1008 0150 C0F20001 		movt	r1, #:upper16:loop
 1009 0154 FFF7FEFF 		bl	mode
 217:main.c        **** 			TRACE_DEBUG("set state RELEASE\n");
 1010              		.loc 2 217 0
 1011 0158 40F20003 		movw	r3, #:lower16:_impure_ptr
 1012 015c C0F20003 		movt	r3, #:upper16:_impure_ptr
 1013 0160 1B68     		ldr	r3, [r3, #0]
 1014 0162 DB68     		ldr	r3, [r3, #12]
 1015 0164 1846     		mov	r0, r3
 1016 0166 40F20001 		movw	r1, #:lower16:.LC6
 1017 016a C0F20001 		movt	r1, #:upper16:.LC6
 1018 016e FFF7FEFF 		bl	fiprintf
 218:main.c        **** 			break;
 1019              		.loc 2 218 0
 1020 0172 10E0     		b	.L39
 1021              	.L33:
 219:main.c        **** 		default:
 220:main.c        **** 			TRACE_DEBUG("got invalid state\n");
 1022              		.loc 2 220 0
 1023 0174 40F20003 		movw	r3, #:lower16:_impure_ptr
 1024 0178 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1025 017c 1B68     		ldr	r3, [r3, #0]
 1026 017e DB68     		ldr	r3, [r3, #12]
 1027 0180 1846     		mov	r0, r3
 1028 0182 40F20001 		movw	r1, #:lower16:.LC7
 1029 0186 C0F20001 		movt	r1, #:upper16:.LC7
 1030 018a FFF7FEFF 		bl	fiprintf
 221:main.c        **** 			state(STOPPED);
 1031              		.loc 2 221 0
 1032 018e 4FF00100 		mov	r0, #1
 1033 0192 FFF735FF 		bl	state
 1034              	.L39:
 222:main.c        **** 	}
 223:main.c        **** 	_state = new;
 1035              		.loc 2 223 0
 1036 0196 40F20003 		movw	r3, #:lower16:_state
 1037 019a C0F20003 		movt	r3, #:upper16:_state
 1038 019e FA79     		ldrb	r2, [r7, #7]
 1039 01a0 1A70     		strb	r2, [r3, #0]
 224:main.c        **** }
 1040              		.loc 2 224 0
 1041 01a2 07F10807 		add	r7, r7, #8
 1042 01a6 BD46     		mov	sp, r7
 1043 01a8 80BD     		pop	{r7, pc}
 1044              		.cfi_endproc
 1045              	.LFE39:
 1046              		.size	state, .-state
 1047 01aa 00BF     		.section	.rodata
ARM GAS  /tmp/cchL5NBj.s 			page 52


 1048 00cf 00       		.align	2
 1049              	.LC8:
 1050 00d0 25632025 		.ascii	"%c %u %u %u\000"
 1050      75202575 
 1050      20257500 
 1051              		.align	2
 1052              	.LC9:
 1053 00dc 2D442D20 		.ascii	"-D- got %i arguments\000"
 1053      676F7420 
 1053      25692061 
 1053      7267756D 
 1053      656E7473 
 1054 00f1 000000   		.align	2
 1055              	.LC10:
 1056 00f4 2D492D20 		.ascii	"-I- set ramp endpoint to %u\012\000"
 1056      73657420 
 1056      72616D70 
 1056      20656E64 
 1056      706F696E 
 1057 0111 000000   		.align	2
 1058              	.LC11:
 1059 0114 25750A00 		.ascii	"%u\012\000"
 1060              		.align	2
 1061              	.LC12:
 1062 0118 2D492D20 		.ascii	"-I- set ramp slope to %i\012\000"
 1062      73657420 
 1062      72616D70 
 1062      20736C6F 
 1062      70652074 
 1063 0132 0000     		.align	2
 1064              	.LC13:
 1065 0134 25690A00 		.ascii	"%i\012\000"
 1066              		.align	2
 1067              	.LC14:
 1068 0138 2D492D20 		.ascii	"-I- set PID factors to %u, %u, %u\012\000"
 1068      73657420 
 1068      50494420 
 1068      66616374 
 1068      6F727320 
 1069 015b 00       		.align	2
 1070              	.LC15:
 1071 015c 25752025 		.ascii	"%u %u %u\012\000"
 1071      75202575 
 1071      0A00
 1072 0166 0000     		.align	2
 1073              	.LC16:
 1074 0168 2D492D20 		.ascii	"-I- set releasetime to %u\012\000"
 1074      73657420 
 1074      72656C65 
 1074      61736574 
 1074      696D6520 
 1075 0183 00       		.align	2
 1076              	.LC17:
 1077 0184 2D492D20 		.ascii	"-I- set dxmax to %u\012\000"
 1077      73657420 
 1077      64786D61 
 1077      7820746F 
ARM GAS  /tmp/cchL5NBj.s 			page 53


 1077      2025750A 
 1078 0199 000000   		.align	2
 1079              	.LC18:
 1080 019c 73746F70 		.ascii	"stopped\000"
 1080      70656400 
 1081              		.align	2
 1082              	.LC19:
 1083 01a4 72756E00 		.ascii	"run\000"
 1084              		.align	2
 1085              	.LC20:
 1086 01a8 686F6C64 		.ascii	"hold\000"
 1086      00
 1087 01ad 000000   		.align	2
 1088              	.LC21:
 1089 01b0 2D492D20 		.ascii	"-I- set setpoint to %u\012\000"
 1089      73657420 
 1089      73657470 
 1089      6F696E74 
 1089      20746F20 
 1090              		.align	2
 1091              	.LC22:
 1092 01c8 72656C65 		.ascii	"release\000"
 1092      61736500 
 1093              		.section	.text.cli,"ax",%progbits
 1094              		.align	2
 1095              		.thumb
 1096              		.thumb_func
 1097              		.type	cli, %function
 1098              	cli:
 1099              	.LFB40:
 225:main.c        **** 
 226:main.c        **** static void cli()
 227:main.c        **** {
 1100              		.loc 2 227 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 56
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104 0000 90B5     		push	{r4, r7, lr}
 1105              	.LCFI20:
 1106              		.cfi_def_cfa_offset 12
 1107              		.cfi_offset 14, -4
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 4, -12
 1110 0002 91B0     		sub	sp, sp, #68
 1111              	.LCFI21:
 1112              		.cfi_def_cfa_offset 80
 1113 0004 02AF     		add	r7, sp, #8
 1114              	.LCFI22:
 1115              		.cfi_def_cfa 7, 72
 228:main.c        **** 	int argc;
 229:main.c        **** 	int argv[3];
 230:main.c        **** 	char line[32];
 231:main.c        **** 	char cmd = 0;
 1116              		.loc 2 231 0
 1117 0006 4FF00003 		mov	r3, #0
 1118 000a FB71     		strb	r3, [r7, #7]
 232:main.c        **** 
ARM GAS  /tmp/cchL5NBj.s 			page 54


 233:main.c        **** 	if (!USBC_hasData())
 1119              		.loc 2 233 0
 1120 000c FFF7FEFF 		bl	USBC_hasData
 1121 0010 0346     		mov	r3, r0
 1122 0012 002B     		cmp	r3, #0
 1123 0014 00F0FB81 		beq	.L76
 1124              	.L41:
 234:main.c        **** 		return;
 235:main.c        **** 
 236:main.c        **** 	gets(line);
 1125              		.loc 2 236 0
 1126 0018 07F10803 		add	r3, r7, #8
 1127 001c 1846     		mov	r0, r3
 1128 001e FFF7FEFF 		bl	gets
 237:main.c        **** 	argc = sscanf(line, "%c %u %u %u", &cmd, argv, argv+1, argv+2) - 1;
 1129              		.loc 2 237 0
 1130 0022 07F10801 		add	r1, r7, #8
 1131 0026 07F10702 		add	r2, r7, #7
 1132 002a 07F12803 		add	r3, r7, #40
 1133 002e 07F12800 		add	r0, r7, #40
 1134 0032 00F10400 		add	r0, r0, #4
 1135 0036 0090     		str	r0, [sp, #0]
 1136 0038 07F12800 		add	r0, r7, #40
 1137 003c 00F10800 		add	r0, r0, #8
 1138 0040 0190     		str	r0, [sp, #4]
 1139 0042 0846     		mov	r0, r1
 1140 0044 40F20001 		movw	r1, #:lower16:.LC8
 1141 0048 C0F20001 		movt	r1, #:upper16:.LC8
 1142 004c FFF7FEFF 		bl	siscanf
 1143 0050 0346     		mov	r3, r0
 1144 0052 03F1FF33 		add	r3, r3, #-1
 1145 0056 7B63     		str	r3, [r7, #52]
 238:main.c        **** 	TRACE_DEBUG("got %i arguments", argc);
 1146              		.loc 2 238 0
 1147 0058 40F20003 		movw	r3, #:lower16:_impure_ptr
 1148 005c C0F20003 		movt	r3, #:upper16:_impure_ptr
 1149 0060 1B68     		ldr	r3, [r3, #0]
 1150 0062 DB68     		ldr	r3, [r3, #12]
 1151 0064 1846     		mov	r0, r3
 1152 0066 40F20001 		movw	r1, #:lower16:.LC9
 1153 006a C0F20001 		movt	r1, #:upper16:.LC9
 1154 006e 7A6B     		ldr	r2, [r7, #52]
 1155 0070 FFF7FEFF 		bl	fiprintf
 239:main.c        **** 
 240:main.c        **** 	switch (_state) {
 1156              		.loc 2 240 0
 1157 0074 40F20003 		movw	r3, #:lower16:_state
 1158 0078 C0F20003 		movt	r3, #:upper16:_state
 1159 007c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1160 007e 03F1FF33 		add	r3, r3, #-1
 1161 0082 072B     		cmp	r3, #7
 1162 0084 00F2BE81 		bhi	.L43
 1163 0088 01A2     		adr	r2, .L48
 1164 008a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1165 008e 00BF     		.align	2
 1166              	.L48:
 1167 0090 B1000000 		.word	.L44+1
ARM GAS  /tmp/cchL5NBj.s 			page 55


 1168 0094 19030000 		.word	.L45+1
 1169 0098 05040000 		.word	.L43+1
 1170 009c 4D030000 		.word	.L46+1
 1171 00a0 05040000 		.word	.L43+1
 1172 00a4 05040000 		.word	.L43+1
 1173 00a8 05040000 		.word	.L43+1
 1174 00ac E1030000 		.word	.L47+1
 1175              	.L44:
 241:main.c        **** 		case STOPPED:
 242:main.c        **** 			if (cmd == 'g') {
 1176              		.loc 2 242 0
 1177 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1178 00b2 672B     		cmp	r3, #103
 1179 00b4 04D1     		bne	.L49
 243:main.c        **** 				state(RUN);
 1180              		.loc 2 243 0
 1181 00b6 4FF00200 		mov	r0, #2
 1182 00ba FFF7FEFF 		bl	state
 244:main.c        **** 			}
 245:main.c        **** 			else if (cmd == 'h') {
 246:main.c        **** 				state(HOLD);
 247:main.c        **** 			}
 248:main.c        **** 			else if (cmd == 'r') {
 249:main.c        **** 				state(RELEASE);
 250:main.c        **** 			}
 251:main.c        **** 			else if (cmd == 'e') {
 252:main.c        **** 				if (argc == 1) {
 253:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 254:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 255:main.c        **** 				}
 256:main.c        **** 				printf("%u\n", loop.rSP);
 257:main.c        **** 			}
 258:main.c        **** 			else if (cmd == 's') {
 259:main.c        **** 				if (argc == 1) {
 260:main.c        **** 					loop.rSlope = *argv;
 261:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 262:main.c        **** 				}
 263:main.c        **** 				printf("%i\n", loop.rSlope);
 264:main.c        **** 			}
 265:main.c        **** 			else if (cmd == 'k') {
 266:main.c        **** 				if (argc == 3) {
 267:main.c        **** 					loop.Kp = argv[0];
 268:main.c        **** 					loop.Ki = argv[1];
 269:main.c        **** 					loop.Kd = argv[2];
 270:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 271:main.c        **** 				}
 272:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 273:main.c        **** 			}
 274:main.c        **** 			else if (cmd == 't') {
 275:main.c        **** 				if (argc == 1) {
 276:main.c        **** 					releasetime = *argv;
 277:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 278:main.c        **** 				}
 279:main.c        **** 				printf("%u\n", releasetime);
 280:main.c        **** 			}
 281:main.c        **** 			else if (cmd == 'd') {
 282:main.c        **** 				if (argc == 2) {
ARM GAS  /tmp/cchL5NBj.s 			page 56


 283:main.c        **** 					dxmax = *argv;
 284:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 285:main.c        **** 				}
 286:main.c        **** 				printf("%u\n", dxmax);
 287:main.c        **** 			}
 288:main.c        **** 			else if (cmd == '?') {
 289:main.c        **** 				puts("stopped");
 290:main.c        **** 			}
 291:main.c        **** 
 292:main.c        **** 			break;
 1183              		.loc 2 292 0
 1184 00be A8E1     		b	.L77
 1185              	.L49:
 245:main.c        **** 			else if (cmd == 'h') {
 1186              		.loc 2 245 0
 1187 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1188 00c2 682B     		cmp	r3, #104
 1189 00c4 04D1     		bne	.L51
 246:main.c        **** 				state(HOLD);
 1190              		.loc 2 246 0
 1191 00c6 4FF00400 		mov	r0, #4
 1192 00ca FFF7FEFF 		bl	state
 1193              		.loc 2 292 0
 1194 00ce A0E1     		b	.L77
 1195              	.L51:
 248:main.c        **** 			else if (cmd == 'r') {
 1196              		.loc 2 248 0
 1197 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1198 00d2 722B     		cmp	r3, #114
 1199 00d4 04D1     		bne	.L52
 249:main.c        **** 				state(RELEASE);
 1200              		.loc 2 249 0
 1201 00d6 4FF00800 		mov	r0, #8
 1202 00da FFF7FEFF 		bl	state
 1203              		.loc 2 292 0
 1204 00de 98E1     		b	.L77
 1205              	.L52:
 251:main.c        **** 			else if (cmd == 'e') {
 1206              		.loc 2 251 0
 1207 00e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1208 00e2 652B     		cmp	r3, #101
 1209 00e4 34D1     		bne	.L53
 252:main.c        **** 				if (argc == 1) {
 1210              		.loc 2 252 0
 1211 00e6 7B6B     		ldr	r3, [r7, #52]
 1212 00e8 012B     		cmp	r3, #1
 1213 00ea 24D1     		bne	.L54
 253:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1214              		.loc 2 253 0
 1215 00ec BB6A     		ldr	r3, [r7, #40]
 1216 00ee 002B     		cmp	r3, #0
 1217 00f0 07DB     		blt	.L55
 253:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1218              		.loc 2 253 0 is_stmt 0 discriminator 1
 1219 00f2 BA6A     		ldr	r2, [r7, #40]
 1220 00f4 40F6FF73 		movw	r3, #4095
 1221 00f8 9A42     		cmp	r2, r3
ARM GAS  /tmp/cchL5NBj.s 			page 57


 1222 00fa B8BF     		it	lt
 1223 00fc 1346     		movlt	r3, r2
 1224 00fe 9AB2     		uxth	r2, r3
 1225 0100 01E0     		b	.L56
 1226              	.L55:
 253:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1227              		.loc 2 253 0 discriminator 2
 1228 0102 4FF00002 		mov	r2, #0
 1229              	.L56:
 253:main.c        **** 					loop.rSP = LIMIT(*argv, MINv, MAXv);
 1230              		.loc 2 253 0 discriminator 3
 1231 0106 40F20003 		movw	r3, #:lower16:loop
 1232 010a C0F20003 		movt	r3, #:upper16:loop
 1233 010e 9A80     		strh	r2, [r3, #4]	@ movhi
 254:main.c        **** 					TRACE_INFO("set ramp endpoint to %u\n", loop.rSP);
 1234              		.loc 2 254 0 is_stmt 1 discriminator 3
 1235 0110 40F20003 		movw	r3, #:lower16:_impure_ptr
 1236 0114 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1237 0118 1B68     		ldr	r3, [r3, #0]
 1238 011a DA68     		ldr	r2, [r3, #12]
 1239 011c 40F20003 		movw	r3, #:lower16:loop
 1240 0120 C0F20003 		movt	r3, #:upper16:loop
 1241 0124 9B88     		ldrh	r3, [r3, #4]
 1242 0126 1046     		mov	r0, r2
 1243 0128 40F20001 		movw	r1, #:lower16:.LC10
 1244 012c C0F20001 		movt	r1, #:upper16:.LC10
 1245 0130 1A46     		mov	r2, r3
 1246 0132 FFF7FEFF 		bl	fiprintf
 1247              	.L54:
 256:main.c        **** 				printf("%u\n", loop.rSP);
 1248              		.loc 2 256 0
 1249 0136 40F20003 		movw	r3, #:lower16:loop
 1250 013a C0F20003 		movt	r3, #:upper16:loop
 1251 013e 9B88     		ldrh	r3, [r3, #4]
 1252 0140 40F20000 		movw	r0, #:lower16:.LC11
 1253 0144 C0F20000 		movt	r0, #:upper16:.LC11
 1254 0148 1946     		mov	r1, r3
 1255 014a FFF7FEFF 		bl	iprintf
 1256              		.loc 2 292 0
 1257 014e 60E1     		b	.L77
 1258              	.L53:
 258:main.c        **** 			else if (cmd == 's') {
 1259              		.loc 2 258 0
 1260 0150 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1261 0152 732B     		cmp	r3, #115
 1262 0154 28D1     		bne	.L57
 259:main.c        **** 				if (argc == 1) {
 1263              		.loc 2 259 0
 1264 0156 7B6B     		ldr	r3, [r7, #52]
 1265 0158 012B     		cmp	r3, #1
 1266 015a 18D1     		bne	.L58
 260:main.c        **** 					loop.rSlope = *argv;
 1267              		.loc 2 260 0
 1268 015c BA6A     		ldr	r2, [r7, #40]
 1269 015e 40F20003 		movw	r3, #:lower16:loop
 1270 0162 C0F20003 		movt	r3, #:upper16:loop
 1271 0166 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/cchL5NBj.s 			page 58


 261:main.c        **** 					TRACE_INFO("set ramp slope to %i\n", loop.rSlope);
 1272              		.loc 2 261 0
 1273 0168 40F20003 		movw	r3, #:lower16:_impure_ptr
 1274 016c C0F20003 		movt	r3, #:upper16:_impure_ptr
 1275 0170 1B68     		ldr	r3, [r3, #0]
 1276 0172 DA68     		ldr	r2, [r3, #12]
 1277 0174 40F20003 		movw	r3, #:lower16:loop
 1278 0178 C0F20003 		movt	r3, #:upper16:loop
 1279 017c 9B68     		ldr	r3, [r3, #8]
 1280 017e 1046     		mov	r0, r2
 1281 0180 40F20001 		movw	r1, #:lower16:.LC12
 1282 0184 C0F20001 		movt	r1, #:upper16:.LC12
 1283 0188 1A46     		mov	r2, r3
 1284 018a FFF7FEFF 		bl	fiprintf
 1285              	.L58:
 263:main.c        **** 				printf("%i\n", loop.rSlope);
 1286              		.loc 2 263 0
 1287 018e 40F20003 		movw	r3, #:lower16:loop
 1288 0192 C0F20003 		movt	r3, #:upper16:loop
 1289 0196 9B68     		ldr	r3, [r3, #8]
 1290 0198 40F20000 		movw	r0, #:lower16:.LC13
 1291 019c C0F20000 		movt	r0, #:upper16:.LC13
 1292 01a0 1946     		mov	r1, r3
 1293 01a2 FFF7FEFF 		bl	iprintf
 1294              		.loc 2 292 0
 1295 01a6 34E1     		b	.L77
 1296              	.L57:
 265:main.c        **** 			else if (cmd == 'k') {
 1297              		.loc 2 265 0
 1298 01a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1299 01aa 6B2B     		cmp	r3, #107
 1300 01ac 4FD1     		bne	.L59
 266:main.c        **** 				if (argc == 3) {
 1301              		.loc 2 266 0
 1302 01ae 7B6B     		ldr	r3, [r7, #52]
 1303 01b0 032B     		cmp	r3, #3
 1304 01b2 34D1     		bne	.L60
 267:main.c        **** 					loop.Kp = argv[0];
 1305              		.loc 2 267 0
 1306 01b4 BB6A     		ldr	r3, [r7, #40]
 1307 01b6 9AB2     		uxth	r2, r3
 1308 01b8 40F20003 		movw	r3, #:lower16:loop
 1309 01bc C0F20003 		movt	r3, #:upper16:loop
 1310 01c0 9A81     		strh	r2, [r3, #12]	@ movhi
 268:main.c        **** 					loop.Ki = argv[1];
 1311              		.loc 2 268 0
 1312 01c2 FB6A     		ldr	r3, [r7, #44]
 1313 01c4 9AB2     		uxth	r2, r3
 1314 01c6 40F20003 		movw	r3, #:lower16:loop
 1315 01ca C0F20003 		movt	r3, #:upper16:loop
 1316 01ce DA81     		strh	r2, [r3, #14]	@ movhi
 269:main.c        **** 					loop.Kd = argv[2];
 1317              		.loc 2 269 0
 1318 01d0 3B6B     		ldr	r3, [r7, #48]
 1319 01d2 9AB2     		uxth	r2, r3
 1320 01d4 40F20003 		movw	r3, #:lower16:loop
 1321 01d8 C0F20003 		movt	r3, #:upper16:loop
ARM GAS  /tmp/cchL5NBj.s 			page 59


 1322 01dc 1A82     		strh	r2, [r3, #16]	@ movhi
 270:main.c        **** 					TRACE_INFO("set PID factors to %u, %u, %u\n", loop.Kp, loop.Ki, loop.Kd);
 1323              		.loc 2 270 0
 1324 01de 40F20003 		movw	r3, #:lower16:_impure_ptr
 1325 01e2 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1326 01e6 1B68     		ldr	r3, [r3, #0]
 1327 01e8 D968     		ldr	r1, [r3, #12]
 1328 01ea 40F20003 		movw	r3, #:lower16:loop
 1329 01ee C0F20003 		movt	r3, #:upper16:loop
 1330 01f2 9B89     		ldrh	r3, [r3, #12]
 1331 01f4 1A46     		mov	r2, r3
 1332 01f6 40F20003 		movw	r3, #:lower16:loop
 1333 01fa C0F20003 		movt	r3, #:upper16:loop
 1334 01fe DB89     		ldrh	r3, [r3, #14]
 1335 0200 1C46     		mov	r4, r3
 1336 0202 40F20003 		movw	r3, #:lower16:loop
 1337 0206 C0F20003 		movt	r3, #:upper16:loop
 1338 020a 1B8A     		ldrh	r3, [r3, #16]
 1339 020c 0093     		str	r3, [sp, #0]
 1340 020e 0846     		mov	r0, r1
 1341 0210 40F20001 		movw	r1, #:lower16:.LC14
 1342 0214 C0F20001 		movt	r1, #:upper16:.LC14
 1343 0218 2346     		mov	r3, r4
 1344 021a FFF7FEFF 		bl	fiprintf
 1345              	.L60:
 272:main.c        **** 				printf("%u %u %u\n", loop.Kp, loop.Ki, loop.Kd);
 1346              		.loc 2 272 0
 1347 021e 40F20003 		movw	r3, #:lower16:loop
 1348 0222 C0F20003 		movt	r3, #:upper16:loop
 1349 0226 9B89     		ldrh	r3, [r3, #12]
 1350 0228 1946     		mov	r1, r3
 1351 022a 40F20003 		movw	r3, #:lower16:loop
 1352 022e C0F20003 		movt	r3, #:upper16:loop
 1353 0232 DB89     		ldrh	r3, [r3, #14]
 1354 0234 1A46     		mov	r2, r3
 1355 0236 40F20003 		movw	r3, #:lower16:loop
 1356 023a C0F20003 		movt	r3, #:upper16:loop
 1357 023e 1B8A     		ldrh	r3, [r3, #16]
 1358 0240 40F20000 		movw	r0, #:lower16:.LC15
 1359 0244 C0F20000 		movt	r0, #:upper16:.LC15
 1360 0248 FFF7FEFF 		bl	iprintf
 1361              		.loc 2 292 0
 1362 024c E1E0     		b	.L77
 1363              	.L59:
 274:main.c        **** 			else if (cmd == 't') {
 1364              		.loc 2 274 0
 1365 024e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1366 0250 742B     		cmp	r3, #116
 1367 0252 29D1     		bne	.L61
 275:main.c        **** 				if (argc == 1) {
 1368              		.loc 2 275 0
 1369 0254 7B6B     		ldr	r3, [r7, #52]
 1370 0256 012B     		cmp	r3, #1
 1371 0258 19D1     		bne	.L62
 276:main.c        **** 					releasetime = *argv;
 1372              		.loc 2 276 0
 1373 025a BB6A     		ldr	r3, [r7, #40]
ARM GAS  /tmp/cchL5NBj.s 			page 60


 1374 025c 1A46     		mov	r2, r3
 1375 025e 40F20003 		movw	r3, #:lower16:releasetime
 1376 0262 C0F20003 		movt	r3, #:upper16:releasetime
 1377 0266 1A60     		str	r2, [r3, #0]
 277:main.c        **** 					TRACE_INFO("set releasetime to %u\n", releasetime);
 1378              		.loc 2 277 0
 1379 0268 40F20003 		movw	r3, #:lower16:_impure_ptr
 1380 026c C0F20003 		movt	r3, #:upper16:_impure_ptr
 1381 0270 1B68     		ldr	r3, [r3, #0]
 1382 0272 DA68     		ldr	r2, [r3, #12]
 1383 0274 40F20003 		movw	r3, #:lower16:releasetime
 1384 0278 C0F20003 		movt	r3, #:upper16:releasetime
 1385 027c 1B68     		ldr	r3, [r3, #0]
 1386 027e 1046     		mov	r0, r2
 1387 0280 40F20001 		movw	r1, #:lower16:.LC16
 1388 0284 C0F20001 		movt	r1, #:upper16:.LC16
 1389 0288 1A46     		mov	r2, r3
 1390 028a FFF7FEFF 		bl	fiprintf
 1391              	.L62:
 279:main.c        **** 				printf("%u\n", releasetime);
 1392              		.loc 2 279 0
 1393 028e 40F20003 		movw	r3, #:lower16:releasetime
 1394 0292 C0F20003 		movt	r3, #:upper16:releasetime
 1395 0296 1B68     		ldr	r3, [r3, #0]
 1396 0298 40F20000 		movw	r0, #:lower16:.LC11
 1397 029c C0F20000 		movt	r0, #:upper16:.LC11
 1398 02a0 1946     		mov	r1, r3
 1399 02a2 FFF7FEFF 		bl	iprintf
 1400              		.loc 2 292 0
 1401 02a6 B4E0     		b	.L77
 1402              	.L61:
 281:main.c        **** 			else if (cmd == 'd') {
 1403              		.loc 2 281 0
 1404 02a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1405 02aa 642B     		cmp	r3, #100
 1406 02ac 29D1     		bne	.L63
 282:main.c        **** 				if (argc == 2) {
 1407              		.loc 2 282 0
 1408 02ae 7B6B     		ldr	r3, [r7, #52]
 1409 02b0 022B     		cmp	r3, #2
 1410 02b2 19D1     		bne	.L64
 283:main.c        **** 					dxmax = *argv;
 1411              		.loc 2 283 0
 1412 02b4 BB6A     		ldr	r3, [r7, #40]
 1413 02b6 1A46     		mov	r2, r3
 1414 02b8 40F20003 		movw	r3, #:lower16:dxmax
 1415 02bc C0F20003 		movt	r3, #:upper16:dxmax
 1416 02c0 1A60     		str	r2, [r3, #0]
 284:main.c        **** 					TRACE_INFO("set dxmax to %u\n", dxmax);
 1417              		.loc 2 284 0
 1418 02c2 40F20003 		movw	r3, #:lower16:_impure_ptr
 1419 02c6 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1420 02ca 1B68     		ldr	r3, [r3, #0]
 1421 02cc DA68     		ldr	r2, [r3, #12]
 1422 02ce 40F20003 		movw	r3, #:lower16:dxmax
 1423 02d2 C0F20003 		movt	r3, #:upper16:dxmax
 1424 02d6 1B68     		ldr	r3, [r3, #0]
ARM GAS  /tmp/cchL5NBj.s 			page 61


 1425 02d8 1046     		mov	r0, r2
 1426 02da 40F20001 		movw	r1, #:lower16:.LC17
 1427 02de C0F20001 		movt	r1, #:upper16:.LC17
 1428 02e2 1A46     		mov	r2, r3
 1429 02e4 FFF7FEFF 		bl	fiprintf
 1430              	.L64:
 286:main.c        **** 				printf("%u\n", dxmax);
 1431              		.loc 2 286 0
 1432 02e8 40F20003 		movw	r3, #:lower16:dxmax
 1433 02ec C0F20003 		movt	r3, #:upper16:dxmax
 1434 02f0 1B68     		ldr	r3, [r3, #0]
 1435 02f2 40F20000 		movw	r0, #:lower16:.LC11
 1436 02f6 C0F20000 		movt	r0, #:upper16:.LC11
 1437 02fa 1946     		mov	r1, r3
 1438 02fc FFF7FEFF 		bl	iprintf
 1439              		.loc 2 292 0
 1440 0300 87E0     		b	.L77
 1441              	.L63:
 288:main.c        **** 			else if (cmd == '?') {
 1442              		.loc 2 288 0
 1443 0302 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1444 0304 3F2B     		cmp	r3, #63
 1445 0306 40F08480 		bne	.L77
 289:main.c        **** 				puts("stopped");
 1446              		.loc 2 289 0
 1447 030a 40F20000 		movw	r0, #:lower16:.LC18
 1448 030e C0F20000 		movt	r0, #:upper16:.LC18
 1449 0312 FFF7FEFF 		bl	puts
 1450              		.loc 2 292 0
 1451 0316 7CE0     		b	.L77
 1452              	.L45:
 293:main.c        **** 
 294:main.c        **** 		case RUN:
 295:main.c        **** 			if (cmd == '?')
 1453              		.loc 2 295 0
 1454 0318 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1455 031a 3F2B     		cmp	r3, #63
 1456 031c 06D1     		bne	.L65
 296:main.c        **** 				puts("run");
 1457              		.loc 2 296 0
 1458 031e 40F20000 		movw	r0, #:lower16:.LC19
 1459 0322 C0F20000 		movt	r0, #:upper16:.LC19
 1460 0326 FFF7FEFF 		bl	puts
 297:main.c        **** 			else if (cmd == 's')
 298:main.c        **** 				state(STOPPED);
 299:main.c        **** 			else if (cmd == 'r')
 300:main.c        **** 				state(RELEASE);
 301:main.c        **** 			break;
 1461              		.loc 2 301 0
 1462 032a 74E0     		b	.L78
 1463              	.L65:
 297:main.c        **** 			else if (cmd == 's')
 1464              		.loc 2 297 0
 1465 032c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1466 032e 732B     		cmp	r3, #115
 1467 0330 04D1     		bne	.L67
 298:main.c        **** 				state(STOPPED);
ARM GAS  /tmp/cchL5NBj.s 			page 62


 1468              		.loc 2 298 0
 1469 0332 4FF00100 		mov	r0, #1
 1470 0336 FFF7FEFF 		bl	state
 1471              		.loc 2 301 0
 1472 033a 6CE0     		b	.L78
 1473              	.L67:
 299:main.c        **** 			else if (cmd == 'r')
 1474              		.loc 2 299 0
 1475 033c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1476 033e 722B     		cmp	r3, #114
 1477 0340 69D1     		bne	.L78
 300:main.c        **** 				state(RELEASE);
 1478              		.loc 2 300 0
 1479 0342 4FF00800 		mov	r0, #8
 1480 0346 FFF7FEFF 		bl	state
 1481              		.loc 2 301 0
 1482 034a 64E0     		b	.L78
 1483              	.L46:
 302:main.c        **** 
 303:main.c        **** 		case HOLD:
 304:main.c        **** 			if (cmd == '?')
 1484              		.loc 2 304 0
 1485 034c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1486 034e 3F2B     		cmp	r3, #63
 1487 0350 06D1     		bne	.L68
 305:main.c        **** 				puts("hold");
 1488              		.loc 2 305 0
 1489 0352 40F20000 		movw	r0, #:lower16:.LC20
 1490 0356 C0F20000 		movt	r0, #:upper16:.LC20
 1491 035a FFF7FEFF 		bl	puts
 306:main.c        **** 			else if (cmd == 's')
 307:main.c        **** 				state(STOPPED);
 308:main.c        **** 			else if (cmd == 'w') {
 309:main.c        **** 				if (argc == 1) {
 310:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 311:main.c        **** 					TRACE_INFO("set setpoint to %u\n", loop.SP);
 312:main.c        **** 				}
 313:main.c        **** 				printf("%u\n", loop.SP);
 314:main.c        **** 			}
 315:main.c        **** 			break;
 1492              		.loc 2 315 0
 1493 035e 5CE0     		b	.L79
 1494              	.L68:
 306:main.c        **** 			else if (cmd == 's')
 1495              		.loc 2 306 0
 1496 0360 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1497 0362 732B     		cmp	r3, #115
 1498 0364 04D1     		bne	.L70
 307:main.c        **** 				state(STOPPED);
 1499              		.loc 2 307 0
 1500 0366 4FF00100 		mov	r0, #1
 1501 036a FFF7FEFF 		bl	state
 1502              		.loc 2 315 0
 1503 036e 54E0     		b	.L79
 1504              	.L70:
 308:main.c        **** 			else if (cmd == 'w') {
 1505              		.loc 2 308 0
ARM GAS  /tmp/cchL5NBj.s 			page 63


 1506 0370 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1507 0372 772B     		cmp	r3, #119
 1508 0374 51D1     		bne	.L79
 309:main.c        **** 				if (argc == 1) {
 1509              		.loc 2 309 0
 1510 0376 7B6B     		ldr	r3, [r7, #52]
 1511 0378 012B     		cmp	r3, #1
 1512 037a 24D1     		bne	.L71
 310:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1513              		.loc 2 310 0
 1514 037c BB6A     		ldr	r3, [r7, #40]
 1515 037e 002B     		cmp	r3, #0
 1516 0380 07DB     		blt	.L72
 310:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1517              		.loc 2 310 0 is_stmt 0 discriminator 1
 1518 0382 BA6A     		ldr	r2, [r7, #40]
 1519 0384 40F6FF73 		movw	r3, #4095
 1520 0388 9A42     		cmp	r2, r3
 1521 038a B8BF     		it	lt
 1522 038c 1346     		movlt	r3, r2
 1523 038e 9AB2     		uxth	r2, r3
 1524 0390 01E0     		b	.L73
 1525              	.L72:
 310:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1526              		.loc 2 310 0 discriminator 2
 1527 0392 4FF00002 		mov	r2, #0
 1528              	.L73:
 310:main.c        **** 					loop.SP = LIMIT(*argv, MINv, MAXv);
 1529              		.loc 2 310 0 discriminator 3
 1530 0396 40F20003 		movw	r3, #:lower16:loop
 1531 039a C0F20003 		movt	r3, #:upper16:loop
 1532 039e 5A80     		strh	r2, [r3, #2]	@ movhi
 311:main.c        **** 					TRACE_INFO("set setpoint to %u\n", loop.SP);
 1533              		.loc 2 311 0 is_stmt 1 discriminator 3
 1534 03a0 40F20003 		movw	r3, #:lower16:_impure_ptr
 1535 03a4 C0F20003 		movt	r3, #:upper16:_impure_ptr
 1536 03a8 1B68     		ldr	r3, [r3, #0]
 1537 03aa DA68     		ldr	r2, [r3, #12]
 1538 03ac 40F20003 		movw	r3, #:lower16:loop
 1539 03b0 C0F20003 		movt	r3, #:upper16:loop
 1540 03b4 5B88     		ldrh	r3, [r3, #2]
 1541 03b6 1046     		mov	r0, r2
 1542 03b8 40F20001 		movw	r1, #:lower16:.LC21
 1543 03bc C0F20001 		movt	r1, #:upper16:.LC21
 1544 03c0 1A46     		mov	r2, r3
 1545 03c2 FFF7FEFF 		bl	fiprintf
 1546              	.L71:
 313:main.c        **** 				printf("%u\n", loop.SP);
 1547              		.loc 2 313 0
 1548 03c6 40F20003 		movw	r3, #:lower16:loop
 1549 03ca C0F20003 		movt	r3, #:upper16:loop
 1550 03ce 5B88     		ldrh	r3, [r3, #2]
 1551 03d0 40F20000 		movw	r0, #:lower16:.LC11
 1552 03d4 C0F20000 		movt	r0, #:upper16:.LC11
 1553 03d8 1946     		mov	r1, r3
 1554 03da FFF7FEFF 		bl	iprintf
 1555              		.loc 2 315 0
ARM GAS  /tmp/cchL5NBj.s 			page 64


 1556 03de 1CE0     		b	.L79
 1557              	.L47:
 316:main.c        **** 
 317:main.c        **** 		case RELEASE:
 318:main.c        **** 			if (cmd == '?')
 1558              		.loc 2 318 0
 1559 03e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1560 03e2 3F2B     		cmp	r3, #63
 1561 03e4 06D1     		bne	.L74
 319:main.c        **** 				puts("release");
 1562              		.loc 2 319 0
 1563 03e6 40F20000 		movw	r0, #:lower16:.LC22
 1564 03ea C0F20000 		movt	r0, #:upper16:.LC22
 1565 03ee FFF7FEFF 		bl	puts
 320:main.c        **** 			else if (cmd == 's')
 321:main.c        **** 				state(STOPPED);
 322:main.c        **** 			break;
 1566              		.loc 2 322 0
 1567 03f2 14E0     		b	.L80
 1568              	.L74:
 320:main.c        **** 			else if (cmd == 's')
 1569              		.loc 2 320 0
 1570 03f4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1571 03f6 732B     		cmp	r3, #115
 1572 03f8 11D1     		bne	.L80
 321:main.c        **** 				state(STOPPED);
 1573              		.loc 2 321 0
 1574 03fa 4FF00100 		mov	r0, #1
 1575 03fe FFF7FEFF 		bl	state
 1576              		.loc 2 322 0
 1577 0402 0CE0     		b	.L80
 1578              	.L43:
 323:main.c        **** 
 324:main.c        **** 		default:
 325:main.c        **** 			state(STOPPED);
 1579              		.loc 2 325 0
 1580 0404 4FF00100 		mov	r0, #1
 1581 0408 FFF7FEFF 		bl	state
 1582 040c 08E0     		b	.L40
 1583              	.L76:
 234:main.c        **** 		return;
 1584              		.loc 2 234 0
 1585 040e 00BF     		nop
 1586 0410 06E0     		b	.L40
 1587              	.L77:
 292:main.c        **** 			break;
 1588              		.loc 2 292 0
 1589 0412 00BF     		nop
 1590 0414 04E0     		b	.L40
 1591              	.L78:
 301:main.c        **** 			break;
 1592              		.loc 2 301 0
 1593 0416 00BF     		nop
 1594 0418 02E0     		b	.L40
 1595              	.L79:
 315:main.c        **** 			break;
 1596              		.loc 2 315 0
ARM GAS  /tmp/cchL5NBj.s 			page 65


 1597 041a 00BF     		nop
 1598 041c 00E0     		b	.L40
 1599              	.L80:
 322:main.c        **** 			break;
 1600              		.loc 2 322 0
 1601 041e 00BF     		nop
 1602              	.L40:
 326:main.c        **** 	}
 327:main.c        **** }
 1603              		.loc 2 327 0
 1604 0420 07F13C07 		add	r7, r7, #60
 1605 0424 BD46     		mov	sp, r7
 1606 0426 90BD     		pop	{r4, r7, pc}
 1607              		.cfi_endproc
 1608              	.LFE40:
 1609              		.size	cli, .-cli
 1610              		.text
 1611              	.Letext0:
 1612              		.file 3 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1613              		.file 4 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1614              		.file 5 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/include/stddef.h"
 1615              		.file 6 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1616              		.file 7 "/usr/local/Sourcery/bin/../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/
 1617              		.file 8 "libchip/include/SAM3S.h"
 1618              		.file 9 "controller.h"
 1619              		.section	.debug_info,"",%progbits
 1620              	.Ldebug_info0:
 1621 0000 061A0000 		.4byte	0x1a06
 1622 0004 0200     		.2byte	0x2
 1623 0006 00000000 		.4byte	.Ldebug_abbrev0
 1624 000a 04       		.byte	0x4
 1625 000b 01       		.uleb128 0x1
 1626 000c FF0A0000 		.4byte	.LASF340
 1627 0010 01       		.byte	0x1
 1628 0011 66060000 		.4byte	.LASF341
 1629 0015 DD090000 		.4byte	.LASF342
 1630 0019 00000000 		.4byte	0
 1631 001d 00000000 		.4byte	0
 1632 0021 00000000 		.4byte	.Ldebug_ranges0+0
 1633 0025 00000000 		.4byte	.Ldebug_line0
 1634 0029 02       		.uleb128 0x2
 1635 002a 01       		.byte	0x1
 1636 002b 06       		.byte	0x6
 1637 002c 52020000 		.4byte	.LASF0
 1638 0030 02       		.uleb128 0x2
 1639 0031 01       		.byte	0x1
 1640 0032 08       		.byte	0x8
 1641 0033 94020000 		.4byte	.LASF1
 1642 0037 02       		.uleb128 0x2
 1643 0038 02       		.byte	0x2
 1644 0039 05       		.byte	0x5
 1645 003a 420A0000 		.4byte	.LASF2
 1646 003e 02       		.uleb128 0x2
 1647 003f 02       		.byte	0x2
 1648 0040 07       		.byte	0x7
 1649 0041 840B0000 		.4byte	.LASF3
 1650 0045 03       		.uleb128 0x3
ARM GAS  /tmp/cchL5NBj.s 			page 66


 1651 0046 04       		.byte	0x4
 1652 0047 05       		.byte	0x5
 1653 0048 696E7400 		.ascii	"int\000"
 1654 004c 02       		.uleb128 0x2
 1655 004d 04       		.byte	0x4
 1656 004e 07       		.byte	0x7
 1657 004f F9060000 		.4byte	.LASF4
 1658 0053 02       		.uleb128 0x2
 1659 0054 08       		.byte	0x8
 1660 0055 05       		.byte	0x5
 1661 0056 F3050000 		.4byte	.LASF5
 1662 005a 02       		.uleb128 0x2
 1663 005b 08       		.byte	0x8
 1664 005c 07       		.byte	0x7
 1665 005d 19080000 		.4byte	.LASF6
 1666 0061 04       		.uleb128 0x4
 1667 0062 49050000 		.4byte	.LASF8
 1668 0066 03       		.byte	0x3
 1669 0067 07       		.byte	0x7
 1670 0068 45000000 		.4byte	0x45
 1671 006c 02       		.uleb128 0x2
 1672 006d 04       		.byte	0x4
 1673 006e 05       		.byte	0x5
 1674 006f AA010000 		.4byte	.LASF7
 1675 0073 04       		.uleb128 0x4
 1676 0074 D3070000 		.4byte	.LASF9
 1677 0078 04       		.byte	0x4
 1678 0079 2C       		.byte	0x2c
 1679 007a 6C000000 		.4byte	0x6c
 1680 007e 05       		.uleb128 0x5
 1681 007f 19090000 		.4byte	.LASF10
 1682 0083 05       		.byte	0x5
 1683 0084 6101     		.2byte	0x161
 1684 0086 4C000000 		.4byte	0x4c
 1685 008a 06       		.uleb128 0x6
 1686 008b 04       		.byte	0x4
 1687 008c 04       		.byte	0x4
 1688 008d 46       		.byte	0x46
 1689 008e A9000000 		.4byte	0xa9
 1690 0092 07       		.uleb128 0x7
 1691 0093 3C010000 		.4byte	.LASF11
 1692 0097 04       		.byte	0x4
 1693 0098 48       		.byte	0x48
 1694 0099 7E000000 		.4byte	0x7e
 1695 009d 07       		.uleb128 0x7
 1696 009e DB070000 		.4byte	.LASF12
 1697 00a2 04       		.byte	0x4
 1698 00a3 49       		.byte	0x49
 1699 00a4 A9000000 		.4byte	0xa9
 1700 00a8 00       		.byte	0
 1701 00a9 08       		.uleb128 0x8
 1702 00aa 30000000 		.4byte	0x30
 1703 00ae B9000000 		.4byte	0xb9
 1704 00b2 09       		.uleb128 0x9
 1705 00b3 4C000000 		.4byte	0x4c
 1706 00b7 03       		.byte	0x3
 1707 00b8 00       		.byte	0
ARM GAS  /tmp/cchL5NBj.s 			page 67


 1708 00b9 0A       		.uleb128 0xa
 1709 00ba 08       		.byte	0x8
 1710 00bb 04       		.byte	0x4
 1711 00bc 43       		.byte	0x43
 1712 00bd DE000000 		.4byte	0xde
 1713 00c1 0B       		.uleb128 0xb
 1714 00c2 93070000 		.4byte	.LASF13
 1715 00c6 04       		.byte	0x4
 1716 00c7 45       		.byte	0x45
 1717 00c8 45000000 		.4byte	0x45
 1718 00cc 02       		.byte	0x2
 1719 00cd 23       		.byte	0x23
 1720 00ce 00       		.uleb128 0
 1721 00cf 0B       		.uleb128 0xb
 1722 00d0 2A000000 		.4byte	.LASF14
 1723 00d4 04       		.byte	0x4
 1724 00d5 4A       		.byte	0x4a
 1725 00d6 8A000000 		.4byte	0x8a
 1726 00da 02       		.byte	0x2
 1727 00db 23       		.byte	0x23
 1728 00dc 04       		.uleb128 0x4
 1729 00dd 00       		.byte	0
 1730 00de 04       		.uleb128 0x4
 1731 00df F6080000 		.4byte	.LASF15
 1732 00e3 04       		.byte	0x4
 1733 00e4 4B       		.byte	0x4b
 1734 00e5 B9000000 		.4byte	0xb9
 1735 00e9 04       		.uleb128 0x4
 1736 00ea DF080000 		.4byte	.LASF16
 1737 00ee 04       		.byte	0x4
 1738 00ef 4F       		.byte	0x4f
 1739 00f0 61000000 		.4byte	0x61
 1740 00f4 0C       		.uleb128 0xc
 1741 00f5 04       		.byte	0x4
 1742 00f6 04       		.uleb128 0x4
 1743 00f7 1F0B0000 		.4byte	.LASF17
 1744 00fb 06       		.byte	0x6
 1745 00fc 15       		.byte	0x15
 1746 00fd 01010000 		.4byte	0x101
 1747 0101 02       		.uleb128 0x2
 1748 0102 04       		.byte	0x4
 1749 0103 07       		.byte	0x7
 1750 0104 D2040000 		.4byte	.LASF18
 1751 0108 0D       		.uleb128 0xd
 1752 0109 A2050000 		.4byte	.LASF23
 1753 010d 18       		.byte	0x18
 1754 010e 06       		.byte	0x6
 1755 010f 2C       		.byte	0x2c
 1756 0110 67010000 		.4byte	0x167
 1757 0114 0B       		.uleb128 0xb
 1758 0115 39090000 		.4byte	.LASF19
 1759 0119 06       		.byte	0x6
 1760 011a 2E       		.byte	0x2e
 1761 011b 67010000 		.4byte	0x167
 1762 011f 02       		.byte	0x2
 1763 0120 23       		.byte	0x23
 1764 0121 00       		.uleb128 0
ARM GAS  /tmp/cchL5NBj.s 			page 68


 1765 0122 0E       		.uleb128 0xe
 1766 0123 5F6B00   		.ascii	"_k\000"
 1767 0126 06       		.byte	0x6
 1768 0127 2F       		.byte	0x2f
 1769 0128 45000000 		.4byte	0x45
 1770 012c 02       		.byte	0x2
 1771 012d 23       		.byte	0x23
 1772 012e 04       		.uleb128 0x4
 1773 012f 0B       		.uleb128 0xb
 1774 0130 B3050000 		.4byte	.LASF20
 1775 0134 06       		.byte	0x6
 1776 0135 2F       		.byte	0x2f
 1777 0136 45000000 		.4byte	0x45
 1778 013a 02       		.byte	0x2
 1779 013b 23       		.byte	0x23
 1780 013c 08       		.uleb128 0x8
 1781 013d 0B       		.uleb128 0xb
 1782 013e D8060000 		.4byte	.LASF21
 1783 0142 06       		.byte	0x6
 1784 0143 2F       		.byte	0x2f
 1785 0144 45000000 		.4byte	0x45
 1786 0148 02       		.byte	0x2
 1787 0149 23       		.byte	0x23
 1788 014a 0C       		.uleb128 0xc
 1789 014b 0B       		.uleb128 0xb
 1790 014c 17040000 		.4byte	.LASF22
 1791 0150 06       		.byte	0x6
 1792 0151 2F       		.byte	0x2f
 1793 0152 45000000 		.4byte	0x45
 1794 0156 02       		.byte	0x2
 1795 0157 23       		.byte	0x23
 1796 0158 10       		.uleb128 0x10
 1797 0159 0E       		.uleb128 0xe
 1798 015a 5F7800   		.ascii	"_x\000"
 1799 015d 06       		.byte	0x6
 1800 015e 30       		.byte	0x30
 1801 015f 6D010000 		.4byte	0x16d
 1802 0163 02       		.byte	0x2
 1803 0164 23       		.byte	0x23
 1804 0165 14       		.uleb128 0x14
 1805 0166 00       		.byte	0
 1806 0167 0F       		.uleb128 0xf
 1807 0168 04       		.byte	0x4
 1808 0169 08010000 		.4byte	0x108
 1809 016d 08       		.uleb128 0x8
 1810 016e F6000000 		.4byte	0xf6
 1811 0172 7D010000 		.4byte	0x17d
 1812 0176 09       		.uleb128 0x9
 1813 0177 4C000000 		.4byte	0x4c
 1814 017b 00       		.byte	0
 1815 017c 00       		.byte	0
 1816 017d 0D       		.uleb128 0xd
 1817 017e 91000000 		.4byte	.LASF24
 1818 0182 24       		.byte	0x24
 1819 0183 06       		.byte	0x6
 1820 0184 34       		.byte	0x34
 1821 0185 08020000 		.4byte	0x208
ARM GAS  /tmp/cchL5NBj.s 			page 69


 1822 0189 0B       		.uleb128 0xb
 1823 018a AD000000 		.4byte	.LASF25
 1824 018e 06       		.byte	0x6
 1825 018f 36       		.byte	0x36
 1826 0190 45000000 		.4byte	0x45
 1827 0194 02       		.byte	0x2
 1828 0195 23       		.byte	0x23
 1829 0196 00       		.uleb128 0
 1830 0197 0B       		.uleb128 0xb
 1831 0198 0A0C0000 		.4byte	.LASF26
 1832 019c 06       		.byte	0x6
 1833 019d 37       		.byte	0x37
 1834 019e 45000000 		.4byte	0x45
 1835 01a2 02       		.byte	0x2
 1836 01a3 23       		.byte	0x23
 1837 01a4 04       		.uleb128 0x4
 1838 01a5 0B       		.uleb128 0xb
 1839 01a6 A00B0000 		.4byte	.LASF27
 1840 01aa 06       		.byte	0x6
 1841 01ab 38       		.byte	0x38
 1842 01ac 45000000 		.4byte	0x45
 1843 01b0 02       		.byte	0x2
 1844 01b1 23       		.byte	0x23
 1845 01b2 08       		.uleb128 0x8
 1846 01b3 0B       		.uleb128 0xb
 1847 01b4 2F070000 		.4byte	.LASF28
 1848 01b8 06       		.byte	0x6
 1849 01b9 39       		.byte	0x39
 1850 01ba 45000000 		.4byte	0x45
 1851 01be 02       		.byte	0x2
 1852 01bf 23       		.byte	0x23
 1853 01c0 0C       		.uleb128 0xc
 1854 01c1 0B       		.uleb128 0xb
 1855 01c2 08020000 		.4byte	.LASF29
 1856 01c6 06       		.byte	0x6
 1857 01c7 3A       		.byte	0x3a
 1858 01c8 45000000 		.4byte	0x45
 1859 01cc 02       		.byte	0x2
 1860 01cd 23       		.byte	0x23
 1861 01ce 10       		.uleb128 0x10
 1862 01cf 0B       		.uleb128 0xb
 1863 01d0 920A0000 		.4byte	.LASF30
 1864 01d4 06       		.byte	0x6
 1865 01d5 3B       		.byte	0x3b
 1866 01d6 45000000 		.4byte	0x45
 1867 01da 02       		.byte	0x2
 1868 01db 23       		.byte	0x23
 1869 01dc 14       		.uleb128 0x14
 1870 01dd 0B       		.uleb128 0xb
 1871 01de A2070000 		.4byte	.LASF31
 1872 01e2 06       		.byte	0x6
 1873 01e3 3C       		.byte	0x3c
 1874 01e4 45000000 		.4byte	0x45
 1875 01e8 02       		.byte	0x2
 1876 01e9 23       		.byte	0x23
 1877 01ea 18       		.uleb128 0x18
 1878 01eb 0B       		.uleb128 0xb
ARM GAS  /tmp/cchL5NBj.s 			page 70


 1879 01ec AC070000 		.4byte	.LASF32
 1880 01f0 06       		.byte	0x6
 1881 01f1 3D       		.byte	0x3d
 1882 01f2 45000000 		.4byte	0x45
 1883 01f6 02       		.byte	0x2
 1884 01f7 23       		.byte	0x23
 1885 01f8 1C       		.uleb128 0x1c
 1886 01f9 0B       		.uleb128 0xb
 1887 01fa F50B0000 		.4byte	.LASF33
 1888 01fe 06       		.byte	0x6
 1889 01ff 3E       		.byte	0x3e
 1890 0200 45000000 		.4byte	0x45
 1891 0204 02       		.byte	0x2
 1892 0205 23       		.byte	0x23
 1893 0206 20       		.uleb128 0x20
 1894 0207 00       		.byte	0
 1895 0208 10       		.uleb128 0x10
 1896 0209 5C010000 		.4byte	.LASF34
 1897 020d 0801     		.2byte	0x108
 1898 020f 06       		.byte	0x6
 1899 0210 47       		.byte	0x47
 1900 0211 51020000 		.4byte	0x251
 1901 0215 0B       		.uleb128 0xb
 1902 0216 E50B0000 		.4byte	.LASF35
 1903 021a 06       		.byte	0x6
 1904 021b 48       		.byte	0x48
 1905 021c 51020000 		.4byte	0x251
 1906 0220 02       		.byte	0x2
 1907 0221 23       		.byte	0x23
 1908 0222 00       		.uleb128 0
 1909 0223 0B       		.uleb128 0xb
 1910 0224 41080000 		.4byte	.LASF36
 1911 0228 06       		.byte	0x6
 1912 0229 49       		.byte	0x49
 1913 022a 51020000 		.4byte	0x251
 1914 022e 03       		.byte	0x3
 1915 022f 23       		.byte	0x23
 1916 0230 8001     		.uleb128 0x80
 1917 0232 0B       		.uleb128 0xb
 1918 0233 780A0000 		.4byte	.LASF37
 1919 0237 06       		.byte	0x6
 1920 0238 4B       		.byte	0x4b
 1921 0239 F6000000 		.4byte	0xf6
 1922 023d 03       		.byte	0x3
 1923 023e 23       		.byte	0x23
 1924 023f 8002     		.uleb128 0x100
 1925 0241 0B       		.uleb128 0xb
 1926 0242 EB0A0000 		.4byte	.LASF38
 1927 0246 06       		.byte	0x6
 1928 0247 4E       		.byte	0x4e
 1929 0248 F6000000 		.4byte	0xf6
 1930 024c 03       		.byte	0x3
 1931 024d 23       		.byte	0x23
 1932 024e 8402     		.uleb128 0x104
 1933 0250 00       		.byte	0
 1934 0251 08       		.uleb128 0x8
 1935 0252 F4000000 		.4byte	0xf4
ARM GAS  /tmp/cchL5NBj.s 			page 71


 1936 0256 61020000 		.4byte	0x261
 1937 025a 09       		.uleb128 0x9
 1938 025b 4C000000 		.4byte	0x4c
 1939 025f 1F       		.byte	0x1f
 1940 0260 00       		.byte	0
 1941 0261 0D       		.uleb128 0xd
 1942 0262 8B070000 		.4byte	.LASF39
 1943 0266 8C       		.byte	0x8c
 1944 0267 06       		.byte	0x6
 1945 0268 52       		.byte	0x52
 1946 0269 A7020000 		.4byte	0x2a7
 1947 026d 0B       		.uleb128 0xb
 1948 026e 39090000 		.4byte	.LASF19
 1949 0272 06       		.byte	0x6
 1950 0273 53       		.byte	0x53
 1951 0274 A7020000 		.4byte	0x2a7
 1952 0278 02       		.byte	0x2
 1953 0279 23       		.byte	0x23
 1954 027a 00       		.uleb128 0
 1955 027b 0B       		.uleb128 0xb
 1956 027c B90A0000 		.4byte	.LASF40
 1957 0280 06       		.byte	0x6
 1958 0281 54       		.byte	0x54
 1959 0282 45000000 		.4byte	0x45
 1960 0286 02       		.byte	0x2
 1961 0287 23       		.byte	0x23
 1962 0288 04       		.uleb128 0x4
 1963 0289 0B       		.uleb128 0xb
 1964 028a 2E030000 		.4byte	.LASF41
 1965 028e 06       		.byte	0x6
 1966 028f 55       		.byte	0x55
 1967 0290 AD020000 		.4byte	0x2ad
 1968 0294 02       		.byte	0x2
 1969 0295 23       		.byte	0x23
 1970 0296 08       		.uleb128 0x8
 1971 0297 0B       		.uleb128 0xb
 1972 0298 09060000 		.4byte	.LASF42
 1973 029c 06       		.byte	0x6
 1974 029d 56       		.byte	0x56
 1975 029e C5020000 		.4byte	0x2c5
 1976 02a2 03       		.byte	0x3
 1977 02a3 23       		.byte	0x23
 1978 02a4 8801     		.uleb128 0x88
 1979 02a6 00       		.byte	0
 1980 02a7 0F       		.uleb128 0xf
 1981 02a8 04       		.byte	0x4
 1982 02a9 61020000 		.4byte	0x261
 1983 02ad 08       		.uleb128 0x8
 1984 02ae BF020000 		.4byte	0x2bf
 1985 02b2 BD020000 		.4byte	0x2bd
 1986 02b6 09       		.uleb128 0x9
 1987 02b7 4C000000 		.4byte	0x4c
 1988 02bb 1F       		.byte	0x1f
 1989 02bc 00       		.byte	0
 1990 02bd 11       		.uleb128 0x11
 1991 02be 01       		.byte	0x1
 1992 02bf 0F       		.uleb128 0xf
ARM GAS  /tmp/cchL5NBj.s 			page 72


 1993 02c0 04       		.byte	0x4
 1994 02c1 BD020000 		.4byte	0x2bd
 1995 02c5 0F       		.uleb128 0xf
 1996 02c6 04       		.byte	0x4
 1997 02c7 08020000 		.4byte	0x208
 1998 02cb 0D       		.uleb128 0xd
 1999 02cc E40A0000 		.4byte	.LASF43
 2000 02d0 08       		.byte	0x8
 2001 02d1 06       		.byte	0x6
 2002 02d2 69       		.byte	0x69
 2003 02d3 F4020000 		.4byte	0x2f4
 2004 02d7 0B       		.uleb128 0xb
 2005 02d8 8E080000 		.4byte	.LASF44
 2006 02dc 06       		.byte	0x6
 2007 02dd 6A       		.byte	0x6a
 2008 02de F4020000 		.4byte	0x2f4
 2009 02e2 02       		.byte	0x2
 2010 02e3 23       		.byte	0x23
 2011 02e4 00       		.uleb128 0
 2012 02e5 0B       		.uleb128 0xb
 2013 02e6 D2010000 		.4byte	.LASF45
 2014 02ea 06       		.byte	0x6
 2015 02eb 6B       		.byte	0x6b
 2016 02ec 45000000 		.4byte	0x45
 2017 02f0 02       		.byte	0x2
 2018 02f1 23       		.byte	0x23
 2019 02f2 04       		.uleb128 0x4
 2020 02f3 00       		.byte	0
 2021 02f4 0F       		.uleb128 0xf
 2022 02f5 04       		.byte	0x4
 2023 02f6 30000000 		.4byte	0x30
 2024 02fa 12       		.uleb128 0x12
 2025 02fb E7020000 		.4byte	.LASF46
 2026 02ff F0       		.byte	0xf0
 2027 0300 06       		.byte	0x6
 2028 0301 7B01     		.2byte	0x17b
 2029 0303 74040000 		.4byte	0x474
 2030 0307 13       		.uleb128 0x13
 2031 0308 5B050000 		.4byte	.LASF47
 2032 030c 06       		.byte	0x6
 2033 030d 7F01     		.2byte	0x17f
 2034 030f 45000000 		.4byte	0x45
 2035 0313 02       		.byte	0x2
 2036 0314 23       		.byte	0x23
 2037 0315 00       		.uleb128 0
 2038 0316 13       		.uleb128 0x13
 2039 0317 82030000 		.4byte	.LASF48
 2040 031b 06       		.byte	0x6
 2041 031c 8401     		.2byte	0x184
 2042 031e E3060000 		.4byte	0x6e3
 2043 0322 02       		.byte	0x2
 2044 0323 23       		.byte	0x23
 2045 0324 04       		.uleb128 0x4
 2046 0325 13       		.uleb128 0x13
 2047 0326 71080000 		.4byte	.LASF49
 2048 032a 06       		.byte	0x6
 2049 032b 8401     		.2byte	0x184
ARM GAS  /tmp/cchL5NBj.s 			page 73


 2050 032d E3060000 		.4byte	0x6e3
 2051 0331 02       		.byte	0x2
 2052 0332 23       		.byte	0x23
 2053 0333 08       		.uleb128 0x8
 2054 0334 13       		.uleb128 0x13
 2055 0335 52070000 		.4byte	.LASF50
 2056 0339 06       		.byte	0x6
 2057 033a 8401     		.2byte	0x184
 2058 033c E3060000 		.4byte	0x6e3
 2059 0340 02       		.byte	0x2
 2060 0341 23       		.byte	0x23
 2061 0342 0C       		.uleb128 0xc
 2062 0343 13       		.uleb128 0x13
 2063 0344 B40A0000 		.4byte	.LASF51
 2064 0348 06       		.byte	0x6
 2065 0349 8601     		.2byte	0x186
 2066 034b 45000000 		.4byte	0x45
 2067 034f 02       		.byte	0x2
 2068 0350 23       		.byte	0x23
 2069 0351 10       		.uleb128 0x10
 2070 0352 13       		.uleb128 0x13
 2071 0353 E8050000 		.4byte	.LASF52
 2072 0357 06       		.byte	0x6
 2073 0358 8801     		.2byte	0x188
 2074 035a F3050000 		.4byte	0x5f3
 2075 035e 02       		.byte	0x2
 2076 035f 23       		.byte	0x23
 2077 0360 14       		.uleb128 0x14
 2078 0361 13       		.uleb128 0x13
 2079 0362 1E050000 		.4byte	.LASF53
 2080 0366 06       		.byte	0x6
 2081 0367 8A01     		.2byte	0x18a
 2082 0369 45000000 		.4byte	0x45
 2083 036d 02       		.byte	0x2
 2084 036e 23       		.byte	0x23
 2085 036f 18       		.uleb128 0x18
 2086 0370 13       		.uleb128 0x13
 2087 0371 3B020000 		.4byte	.LASF54
 2088 0375 06       		.byte	0x6
 2089 0376 8C01     		.2byte	0x18c
 2090 0378 45000000 		.4byte	0x45
 2091 037c 02       		.byte	0x2
 2092 037d 23       		.byte	0x23
 2093 037e 1C       		.uleb128 0x1c
 2094 037f 13       		.uleb128 0x13
 2095 0380 A5060000 		.4byte	.LASF55
 2096 0384 06       		.byte	0x6
 2097 0385 8D01     		.2byte	0x18d
 2098 0387 25060000 		.4byte	0x625
 2099 038b 02       		.byte	0x2
 2100 038c 23       		.byte	0x23
 2101 038d 20       		.uleb128 0x20
 2102 038e 14       		.uleb128 0x14
 2103 038f 5F6D7000 		.ascii	"_mp\000"
 2104 0393 06       		.byte	0x6
 2105 0394 8F01     		.2byte	0x18f
 2106 0396 56080000 		.4byte	0x856
ARM GAS  /tmp/cchL5NBj.s 			page 74


 2107 039a 02       		.byte	0x2
 2108 039b 23       		.byte	0x23
 2109 039c 24       		.uleb128 0x24
 2110 039d 13       		.uleb128 0x13
 2111 039e C0050000 		.4byte	.LASF56
 2112 03a2 06       		.byte	0x6
 2113 03a3 9101     		.2byte	0x191
 2114 03a5 68080000 		.4byte	0x868
 2115 03a9 02       		.byte	0x2
 2116 03aa 23       		.byte	0x23
 2117 03ab 28       		.uleb128 0x28
 2118 03ac 13       		.uleb128 0x13
 2119 03ad 79060000 		.4byte	.LASF57
 2120 03b1 06       		.byte	0x6
 2121 03b2 9301     		.2byte	0x193
 2122 03b4 45000000 		.4byte	0x45
 2123 03b8 02       		.byte	0x2
 2124 03b9 23       		.byte	0x23
 2125 03ba 2C       		.uleb128 0x2c
 2126 03bb 13       		.uleb128 0x13
 2127 03bc 69000000 		.4byte	.LASF58
 2128 03c0 06       		.byte	0x6
 2129 03c1 9601     		.2byte	0x196
 2130 03c3 45000000 		.4byte	0x45
 2131 03c7 02       		.byte	0x2
 2132 03c8 23       		.byte	0x23
 2133 03c9 30       		.uleb128 0x30
 2134 03ca 13       		.uleb128 0x13
 2135 03cb 40040000 		.4byte	.LASF59
 2136 03cf 06       		.byte	0x6
 2137 03d0 9701     		.2byte	0x197
 2138 03d2 F3050000 		.4byte	0x5f3
 2139 03d6 02       		.byte	0x2
 2140 03d7 23       		.byte	0x23
 2141 03d8 34       		.uleb128 0x34
 2142 03d9 13       		.uleb128 0x13
 2143 03da 0C090000 		.4byte	.LASF60
 2144 03de 06       		.byte	0x6
 2145 03df 9901     		.2byte	0x199
 2146 03e1 6E080000 		.4byte	0x86e
 2147 03e5 02       		.byte	0x2
 2148 03e6 23       		.byte	0x23
 2149 03e7 38       		.uleb128 0x38
 2150 03e8 13       		.uleb128 0x13
 2151 03e9 DE010000 		.4byte	.LASF61
 2152 03ed 06       		.byte	0x6
 2153 03ee 9A01     		.2byte	0x19a
 2154 03f0 74080000 		.4byte	0x874
 2155 03f4 02       		.byte	0x2
 2156 03f5 23       		.byte	0x23
 2157 03f6 3C       		.uleb128 0x3c
 2158 03f7 13       		.uleb128 0x13
 2159 03f8 5C000000 		.4byte	.LASF62
 2160 03fc 06       		.byte	0x6
 2161 03fd 9B01     		.2byte	0x19b
 2162 03ff F3050000 		.4byte	0x5f3
 2163 0403 02       		.byte	0x2
ARM GAS  /tmp/cchL5NBj.s 			page 75


 2164 0404 23       		.byte	0x23
 2165 0405 40       		.uleb128 0x40
 2166 0406 13       		.uleb128 0x13
 2167 0407 2E040000 		.4byte	.LASF63
 2168 040b 06       		.byte	0x6
 2169 040c 9E01     		.2byte	0x19e
 2170 040e 86080000 		.4byte	0x886
 2171 0412 02       		.byte	0x2
 2172 0413 23       		.byte	0x23
 2173 0414 44       		.uleb128 0x44
 2174 0415 13       		.uleb128 0x13
 2175 0416 8B070000 		.4byte	.LASF39
 2176 041a 06       		.byte	0x6
 2177 041b A101     		.2byte	0x1a1
 2178 041d A7020000 		.4byte	0x2a7
 2179 0421 02       		.byte	0x2
 2180 0422 23       		.byte	0x23
 2181 0423 48       		.uleb128 0x48
 2182 0424 13       		.uleb128 0x13
 2183 0425 DF050000 		.4byte	.LASF64
 2184 0429 06       		.byte	0x6
 2185 042a A201     		.2byte	0x1a2
 2186 042c 61020000 		.4byte	0x261
 2187 0430 02       		.byte	0x2
 2188 0431 23       		.byte	0x23
 2189 0432 4C       		.uleb128 0x4c
 2190 0433 13       		.uleb128 0x13
 2191 0434 4A060000 		.4byte	.LASF65
 2192 0438 06       		.byte	0x6
 2193 0439 A401     		.2byte	0x1a4
 2194 043b A2060000 		.4byte	0x6a2
 2195 043f 03       		.byte	0x3
 2196 0440 23       		.byte	0x23
 2197 0441 D801     		.uleb128 0xd8
 2198 0443 13       		.uleb128 0x13
 2199 0444 32000000 		.4byte	.LASF66
 2200 0448 06       		.byte	0x6
 2201 0449 A501     		.2byte	0x1a5
 2202 044b E3060000 		.4byte	0x6e3
 2203 044f 03       		.byte	0x3
 2204 0450 23       		.byte	0x23
 2205 0451 E401     		.uleb128 0xe4
 2206 0453 13       		.uleb128 0x13
 2207 0454 190B0000 		.4byte	.LASF67
 2208 0458 06       		.byte	0x6
 2209 0459 A601     		.2byte	0x1a6
 2210 045b 92080000 		.4byte	0x892
 2211 045f 03       		.byte	0x3
 2212 0460 23       		.byte	0x23
 2213 0461 E801     		.uleb128 0xe8
 2214 0463 13       		.uleb128 0x13
 2215 0464 6A050000 		.4byte	.LASF68
 2216 0468 06       		.byte	0x6
 2217 0469 A701     		.2byte	0x1a7
 2218 046b F3050000 		.4byte	0x5f3
 2219 046f 03       		.byte	0x3
 2220 0470 23       		.byte	0x23
ARM GAS  /tmp/cchL5NBj.s 			page 76


 2221 0471 EC01     		.uleb128 0xec
 2222 0473 00       		.byte	0
 2223 0474 0F       		.uleb128 0xf
 2224 0475 04       		.byte	0x4
 2225 0476 FA020000 		.4byte	0x2fa
 2226 047a 0D       		.uleb128 0xd
 2227 047b 16050000 		.4byte	.LASF69
 2228 047f 68       		.byte	0x68
 2229 0480 06       		.byte	0x6
 2230 0481 B3       		.byte	0xb3
 2231 0482 D4050000 		.4byte	0x5d4
 2232 0486 0E       		.uleb128 0xe
 2233 0487 5F7000   		.ascii	"_p\000"
 2234 048a 06       		.byte	0x6
 2235 048b B4       		.byte	0xb4
 2236 048c F4020000 		.4byte	0x2f4
 2237 0490 02       		.byte	0x2
 2238 0491 23       		.byte	0x23
 2239 0492 00       		.uleb128 0
 2240 0493 0E       		.uleb128 0xe
 2241 0494 5F7200   		.ascii	"_r\000"
 2242 0497 06       		.byte	0x6
 2243 0498 B5       		.byte	0xb5
 2244 0499 45000000 		.4byte	0x45
 2245 049d 02       		.byte	0x2
 2246 049e 23       		.byte	0x23
 2247 049f 04       		.uleb128 0x4
 2248 04a0 0E       		.uleb128 0xe
 2249 04a1 5F7700   		.ascii	"_w\000"
 2250 04a4 06       		.byte	0x6
 2251 04a5 B6       		.byte	0xb6
 2252 04a6 45000000 		.4byte	0x45
 2253 04aa 02       		.byte	0x2
 2254 04ab 23       		.byte	0x23
 2255 04ac 08       		.uleb128 0x8
 2256 04ad 0B       		.uleb128 0xb
 2257 04ae 7C070000 		.4byte	.LASF70
 2258 04b2 06       		.byte	0x6
 2259 04b3 B7       		.byte	0xb7
 2260 04b4 37000000 		.4byte	0x37
 2261 04b8 02       		.byte	0x2
 2262 04b9 23       		.byte	0x23
 2263 04ba 0C       		.uleb128 0xc
 2264 04bb 0B       		.uleb128 0xb
 2265 04bc 56010000 		.4byte	.LASF71
 2266 04c0 06       		.byte	0x6
 2267 04c1 B8       		.byte	0xb8
 2268 04c2 37000000 		.4byte	0x37
 2269 04c6 02       		.byte	0x2
 2270 04c7 23       		.byte	0x23
 2271 04c8 0E       		.uleb128 0xe
 2272 04c9 0E       		.uleb128 0xe
 2273 04ca 5F626600 		.ascii	"_bf\000"
 2274 04ce 06       		.byte	0x6
 2275 04cf B9       		.byte	0xb9
 2276 04d0 CB020000 		.4byte	0x2cb
 2277 04d4 02       		.byte	0x2
ARM GAS  /tmp/cchL5NBj.s 			page 77


 2278 04d5 23       		.byte	0x23
 2279 04d6 10       		.uleb128 0x10
 2280 04d7 0B       		.uleb128 0xb
 2281 04d8 AB0A0000 		.4byte	.LASF72
 2282 04dc 06       		.byte	0x6
 2283 04dd BA       		.byte	0xba
 2284 04de 45000000 		.4byte	0x45
 2285 04e2 02       		.byte	0x2
 2286 04e3 23       		.byte	0x23
 2287 04e4 18       		.uleb128 0x18
 2288 04e5 0B       		.uleb128 0xb
 2289 04e6 3F090000 		.4byte	.LASF73
 2290 04ea 06       		.byte	0x6
 2291 04eb BD       		.byte	0xbd
 2292 04ec 74040000 		.4byte	0x474
 2293 04f0 02       		.byte	0x2
 2294 04f1 23       		.byte	0x23
 2295 04f2 1C       		.uleb128 0x1c
 2296 04f3 0B       		.uleb128 0xb
 2297 04f4 0F040000 		.4byte	.LASF74
 2298 04f8 06       		.byte	0x6
 2299 04f9 C1       		.byte	0xc1
 2300 04fa F4000000 		.4byte	0xf4
 2301 04fe 02       		.byte	0x2
 2302 04ff 23       		.byte	0x23
 2303 0500 20       		.uleb128 0x20
 2304 0501 0B       		.uleb128 0xb
 2305 0502 3C000000 		.4byte	.LASF75
 2306 0506 06       		.byte	0x6
 2307 0507 C3       		.byte	0xc3
 2308 0508 00060000 		.4byte	0x600
 2309 050c 02       		.byte	0x2
 2310 050d 23       		.byte	0x23
 2311 050e 24       		.uleb128 0x24
 2312 050f 0B       		.uleb128 0xb
 2313 0510 55000000 		.4byte	.LASF76
 2314 0514 06       		.byte	0x6
 2315 0515 C5       		.byte	0xc5
 2316 0516 30060000 		.4byte	0x630
 2317 051a 02       		.byte	0x2
 2318 051b 23       		.byte	0x23
 2319 051c 28       		.uleb128 0x28
 2320 051d 0B       		.uleb128 0xb
 2321 051e BC070000 		.4byte	.LASF77
 2322 0522 06       		.byte	0x6
 2323 0523 C7       		.byte	0xc7
 2324 0524 55060000 		.4byte	0x655
 2325 0528 02       		.byte	0x2
 2326 0529 23       		.byte	0x23
 2327 052a 2C       		.uleb128 0x2c
 2328 052b 0B       		.uleb128 0xb
 2329 052c 4A030000 		.4byte	.LASF78
 2330 0530 06       		.byte	0x6
 2331 0531 C8       		.byte	0xc8
 2332 0532 70060000 		.4byte	0x670
 2333 0536 02       		.byte	0x2
 2334 0537 23       		.byte	0x23
ARM GAS  /tmp/cchL5NBj.s 			page 78


 2335 0538 30       		.uleb128 0x30
 2336 0539 0E       		.uleb128 0xe
 2337 053a 5F756200 		.ascii	"_ub\000"
 2338 053e 06       		.byte	0x6
 2339 053f CB       		.byte	0xcb
 2340 0540 CB020000 		.4byte	0x2cb
 2341 0544 02       		.byte	0x2
 2342 0545 23       		.byte	0x23
 2343 0546 34       		.uleb128 0x34
 2344 0547 0E       		.uleb128 0xe
 2345 0548 5F757000 		.ascii	"_up\000"
 2346 054c 06       		.byte	0x6
 2347 054d CC       		.byte	0xcc
 2348 054e F4020000 		.4byte	0x2f4
 2349 0552 02       		.byte	0x2
 2350 0553 23       		.byte	0x23
 2351 0554 3C       		.uleb128 0x3c
 2352 0555 0E       		.uleb128 0xe
 2353 0556 5F757200 		.ascii	"_ur\000"
 2354 055a 06       		.byte	0x6
 2355 055b CD       		.byte	0xcd
 2356 055c 45000000 		.4byte	0x45
 2357 0560 02       		.byte	0x2
 2358 0561 23       		.byte	0x23
 2359 0562 40       		.uleb128 0x40
 2360 0563 0B       		.uleb128 0xb
 2361 0564 41070000 		.4byte	.LASF79
 2362 0568 06       		.byte	0x6
 2363 0569 D0       		.byte	0xd0
 2364 056a 76060000 		.4byte	0x676
 2365 056e 02       		.byte	0x2
 2366 056f 23       		.byte	0x23
 2367 0570 44       		.uleb128 0x44
 2368 0571 0B       		.uleb128 0xb
 2369 0572 A7000000 		.4byte	.LASF80
 2370 0576 06       		.byte	0x6
 2371 0577 D1       		.byte	0xd1
 2372 0578 86060000 		.4byte	0x686
 2373 057c 02       		.byte	0x2
 2374 057d 23       		.byte	0x23
 2375 057e 47       		.uleb128 0x47
 2376 057f 0E       		.uleb128 0xe
 2377 0580 5F6C6200 		.ascii	"_lb\000"
 2378 0584 06       		.byte	0x6
 2379 0585 D4       		.byte	0xd4
 2380 0586 CB020000 		.4byte	0x2cb
 2381 058a 02       		.byte	0x2
 2382 058b 23       		.byte	0x23
 2383 058c 48       		.uleb128 0x48
 2384 058d 0B       		.uleb128 0xb
 2385 058e 85080000 		.4byte	.LASF81
 2386 0592 06       		.byte	0x6
 2387 0593 D7       		.byte	0xd7
 2388 0594 45000000 		.4byte	0x45
 2389 0598 02       		.byte	0x2
 2390 0599 23       		.byte	0x23
 2391 059a 50       		.uleb128 0x50
ARM GAS  /tmp/cchL5NBj.s 			page 79


 2392 059b 0B       		.uleb128 0xb
 2393 059c 38040000 		.4byte	.LASF82
 2394 05a0 06       		.byte	0x6
 2395 05a1 D8       		.byte	0xd8
 2396 05a2 45000000 		.4byte	0x45
 2397 05a6 02       		.byte	0x2
 2398 05a7 23       		.byte	0x23
 2399 05a8 54       		.uleb128 0x54
 2400 05a9 0B       		.uleb128 0xb
 2401 05aa D3000000 		.4byte	.LASF83
 2402 05ae 06       		.byte	0x6
 2403 05af DF       		.byte	0xdf
 2404 05b0 E9000000 		.4byte	0xe9
 2405 05b4 02       		.byte	0x2
 2406 05b5 23       		.byte	0x23
 2407 05b6 58       		.uleb128 0x58
 2408 05b7 0B       		.uleb128 0xb
 2409 05b8 68070000 		.4byte	.LASF84
 2410 05bc 06       		.byte	0x6
 2411 05bd E1       		.byte	0xe1
 2412 05be DE000000 		.4byte	0xde
 2413 05c2 02       		.byte	0x2
 2414 05c3 23       		.byte	0x23
 2415 05c4 5C       		.uleb128 0x5c
 2416 05c5 0B       		.uleb128 0xb
 2417 05c6 29050000 		.4byte	.LASF85
 2418 05ca 06       		.byte	0x6
 2419 05cb E2       		.byte	0xe2
 2420 05cc 45000000 		.4byte	0x45
 2421 05d0 02       		.byte	0x2
 2422 05d1 23       		.byte	0x23
 2423 05d2 64       		.uleb128 0x64
 2424 05d3 00       		.byte	0
 2425 05d4 15       		.uleb128 0x15
 2426 05d5 01       		.byte	0x1
 2427 05d6 45000000 		.4byte	0x45
 2428 05da F3050000 		.4byte	0x5f3
 2429 05de 16       		.uleb128 0x16
 2430 05df 74040000 		.4byte	0x474
 2431 05e3 16       		.uleb128 0x16
 2432 05e4 F4000000 		.4byte	0xf4
 2433 05e8 16       		.uleb128 0x16
 2434 05e9 F3050000 		.4byte	0x5f3
 2435 05ed 16       		.uleb128 0x16
 2436 05ee 45000000 		.4byte	0x45
 2437 05f2 00       		.byte	0
 2438 05f3 0F       		.uleb128 0xf
 2439 05f4 04       		.byte	0x4
 2440 05f5 F9050000 		.4byte	0x5f9
 2441 05f9 02       		.uleb128 0x2
 2442 05fa 01       		.byte	0x1
 2443 05fb 08       		.byte	0x8
 2444 05fc 29030000 		.4byte	.LASF86
 2445 0600 0F       		.uleb128 0xf
 2446 0601 04       		.byte	0x4
 2447 0602 D4050000 		.4byte	0x5d4
 2448 0606 15       		.uleb128 0x15
ARM GAS  /tmp/cchL5NBj.s 			page 80


 2449 0607 01       		.byte	0x1
 2450 0608 45000000 		.4byte	0x45
 2451 060c 25060000 		.4byte	0x625
 2452 0610 16       		.uleb128 0x16
 2453 0611 74040000 		.4byte	0x474
 2454 0615 16       		.uleb128 0x16
 2455 0616 F4000000 		.4byte	0xf4
 2456 061a 16       		.uleb128 0x16
 2457 061b 25060000 		.4byte	0x625
 2458 061f 16       		.uleb128 0x16
 2459 0620 45000000 		.4byte	0x45
 2460 0624 00       		.byte	0
 2461 0625 0F       		.uleb128 0xf
 2462 0626 04       		.byte	0x4
 2463 0627 2B060000 		.4byte	0x62b
 2464 062b 17       		.uleb128 0x17
 2465 062c F9050000 		.4byte	0x5f9
 2466 0630 0F       		.uleb128 0xf
 2467 0631 04       		.byte	0x4
 2468 0632 06060000 		.4byte	0x606
 2469 0636 15       		.uleb128 0x15
 2470 0637 01       		.byte	0x1
 2471 0638 73000000 		.4byte	0x73
 2472 063c 55060000 		.4byte	0x655
 2473 0640 16       		.uleb128 0x16
 2474 0641 74040000 		.4byte	0x474
 2475 0645 16       		.uleb128 0x16
 2476 0646 F4000000 		.4byte	0xf4
 2477 064a 16       		.uleb128 0x16
 2478 064b 73000000 		.4byte	0x73
 2479 064f 16       		.uleb128 0x16
 2480 0650 45000000 		.4byte	0x45
 2481 0654 00       		.byte	0
 2482 0655 0F       		.uleb128 0xf
 2483 0656 04       		.byte	0x4
 2484 0657 36060000 		.4byte	0x636
 2485 065b 15       		.uleb128 0x15
 2486 065c 01       		.byte	0x1
 2487 065d 45000000 		.4byte	0x45
 2488 0661 70060000 		.4byte	0x670
 2489 0665 16       		.uleb128 0x16
 2490 0666 74040000 		.4byte	0x474
 2491 066a 16       		.uleb128 0x16
 2492 066b F4000000 		.4byte	0xf4
 2493 066f 00       		.byte	0
 2494 0670 0F       		.uleb128 0xf
 2495 0671 04       		.byte	0x4
 2496 0672 5B060000 		.4byte	0x65b
 2497 0676 08       		.uleb128 0x8
 2498 0677 30000000 		.4byte	0x30
 2499 067b 86060000 		.4byte	0x686
 2500 067f 09       		.uleb128 0x9
 2501 0680 4C000000 		.4byte	0x4c
 2502 0684 02       		.byte	0x2
 2503 0685 00       		.byte	0
 2504 0686 08       		.uleb128 0x8
 2505 0687 30000000 		.4byte	0x30
ARM GAS  /tmp/cchL5NBj.s 			page 81


 2506 068b 96060000 		.4byte	0x696
 2507 068f 09       		.uleb128 0x9
 2508 0690 4C000000 		.4byte	0x4c
 2509 0694 00       		.byte	0
 2510 0695 00       		.byte	0
 2511 0696 05       		.uleb128 0x5
 2512 0697 EF080000 		.4byte	.LASF87
 2513 069b 06       		.byte	0x6
 2514 069c 1E01     		.2byte	0x11e
 2515 069e 7A040000 		.4byte	0x47a
 2516 06a2 12       		.uleb128 0x12
 2517 06a3 C5060000 		.4byte	.LASF88
 2518 06a7 0C       		.byte	0xc
 2519 06a8 06       		.byte	0x6
 2520 06a9 2201     		.2byte	0x122
 2521 06ab DD060000 		.4byte	0x6dd
 2522 06af 13       		.uleb128 0x13
 2523 06b0 39090000 		.4byte	.LASF19
 2524 06b4 06       		.byte	0x6
 2525 06b5 2401     		.2byte	0x124
 2526 06b7 DD060000 		.4byte	0x6dd
 2527 06bb 02       		.byte	0x2
 2528 06bc 23       		.byte	0x23
 2529 06bd 00       		.uleb128 0
 2530 06be 13       		.uleb128 0x13
 2531 06bf 39060000 		.4byte	.LASF89
 2532 06c3 06       		.byte	0x6
 2533 06c4 2501     		.2byte	0x125
 2534 06c6 45000000 		.4byte	0x45
 2535 06ca 02       		.byte	0x2
 2536 06cb 23       		.byte	0x23
 2537 06cc 04       		.uleb128 0x4
 2538 06cd 13       		.uleb128 0x13
 2539 06ce BF060000 		.4byte	.LASF90
 2540 06d2 06       		.byte	0x6
 2541 06d3 2601     		.2byte	0x126
 2542 06d5 E3060000 		.4byte	0x6e3
 2543 06d9 02       		.byte	0x2
 2544 06da 23       		.byte	0x23
 2545 06db 08       		.uleb128 0x8
 2546 06dc 00       		.byte	0
 2547 06dd 0F       		.uleb128 0xf
 2548 06de 04       		.byte	0x4
 2549 06df A2060000 		.4byte	0x6a2
 2550 06e3 0F       		.uleb128 0xf
 2551 06e4 04       		.byte	0x4
 2552 06e5 96060000 		.4byte	0x696
 2553 06e9 12       		.uleb128 0x12
 2554 06ea 56080000 		.4byte	.LASF91
 2555 06ee 18       		.byte	0x18
 2556 06ef 06       		.byte	0x6
 2557 06f0 3E01     		.2byte	0x13e
 2558 06f2 33070000 		.4byte	0x733
 2559 06f6 13       		.uleb128 0x13
 2560 06f7 B6070000 		.4byte	.LASF92
 2561 06fb 06       		.byte	0x6
 2562 06fc 3F01     		.2byte	0x13f
ARM GAS  /tmp/cchL5NBj.s 			page 82


 2563 06fe 33070000 		.4byte	0x733
 2564 0702 02       		.byte	0x2
 2565 0703 23       		.byte	0x23
 2566 0704 00       		.uleb128 0
 2567 0705 13       		.uleb128 0x13
 2568 0706 FC000000 		.4byte	.LASF93
 2569 070a 06       		.byte	0x6
 2570 070b 4001     		.2byte	0x140
 2571 070d 33070000 		.4byte	0x733
 2572 0711 02       		.byte	0x2
 2573 0712 23       		.byte	0x23
 2574 0713 06       		.uleb128 0x6
 2575 0714 13       		.uleb128 0x13
 2576 0715 7F0B0000 		.4byte	.LASF94
 2577 0719 06       		.byte	0x6
 2578 071a 4101     		.2byte	0x141
 2579 071c 3E000000 		.4byte	0x3e
 2580 0720 02       		.byte	0x2
 2581 0721 23       		.byte	0x23
 2582 0722 0C       		.uleb128 0xc
 2583 0723 13       		.uleb128 0x13
 2584 0724 71070000 		.4byte	.LASF95
 2585 0728 06       		.byte	0x6
 2586 0729 4401     		.2byte	0x144
 2587 072b 5A000000 		.4byte	0x5a
 2588 072f 02       		.byte	0x2
 2589 0730 23       		.byte	0x23
 2590 0731 10       		.uleb128 0x10
 2591 0732 00       		.byte	0
 2592 0733 08       		.uleb128 0x8
 2593 0734 3E000000 		.4byte	0x3e
 2594 0738 43070000 		.4byte	0x743
 2595 073c 09       		.uleb128 0x9
 2596 073d 4C000000 		.4byte	0x4c
 2597 0741 02       		.byte	0x2
 2598 0742 00       		.byte	0
 2599 0743 12       		.uleb128 0x12
 2600 0744 0B0B0000 		.4byte	.LASF96
 2601 0748 10       		.byte	0x10
 2602 0749 06       		.byte	0x6
 2603 074a 5F01     		.2byte	0x15f
 2604 074c 8D070000 		.4byte	0x78d
 2605 0750 13       		.uleb128 0x13
 2606 0751 560B0000 		.4byte	.LASF97
 2607 0755 06       		.byte	0x6
 2608 0756 6201     		.2byte	0x162
 2609 0758 67010000 		.4byte	0x167
 2610 075c 02       		.byte	0x2
 2611 075d 23       		.byte	0x23
 2612 075e 00       		.uleb128 0
 2613 075f 13       		.uleb128 0x13
 2614 0760 BF010000 		.4byte	.LASF98
 2615 0764 06       		.byte	0x6
 2616 0765 6301     		.2byte	0x163
 2617 0767 45000000 		.4byte	0x45
 2618 076b 02       		.byte	0x2
 2619 076c 23       		.byte	0x23
ARM GAS  /tmp/cchL5NBj.s 			page 83


 2620 076d 04       		.uleb128 0x4
 2621 076e 13       		.uleb128 0x13
 2622 076f CD040000 		.4byte	.LASF99
 2623 0773 06       		.byte	0x6
 2624 0774 6401     		.2byte	0x164
 2625 0776 67010000 		.4byte	0x167
 2626 077a 02       		.byte	0x2
 2627 077b 23       		.byte	0x23
 2628 077c 08       		.uleb128 0x8
 2629 077d 13       		.uleb128 0x13
 2630 077e B5060000 		.4byte	.LASF100
 2631 0782 06       		.byte	0x6
 2632 0783 6501     		.2byte	0x165
 2633 0785 8D070000 		.4byte	0x78d
 2634 0789 02       		.byte	0x2
 2635 078a 23       		.byte	0x23
 2636 078b 0C       		.uleb128 0xc
 2637 078c 00       		.byte	0
 2638 078d 0F       		.uleb128 0xf
 2639 078e 04       		.byte	0x4
 2640 078f 67010000 		.4byte	0x167
 2641 0793 12       		.uleb128 0x12
 2642 0794 22020000 		.4byte	.LASF101
 2643 0798 50       		.byte	0x50
 2644 0799 06       		.byte	0x6
 2645 079a 6901     		.2byte	0x169
 2646 079c 46080000 		.4byte	0x846
 2647 07a0 13       		.uleb128 0x13
 2648 07a1 A3080000 		.4byte	.LASF102
 2649 07a5 06       		.byte	0x6
 2650 07a6 6C01     		.2byte	0x16c
 2651 07a8 F3050000 		.4byte	0x5f3
 2652 07ac 02       		.byte	0x2
 2653 07ad 23       		.byte	0x23
 2654 07ae 00       		.uleb128 0
 2655 07af 13       		.uleb128 0x13
 2656 07b0 350A0000 		.4byte	.LASF103
 2657 07b4 06       		.byte	0x6
 2658 07b5 6D01     		.2byte	0x16d
 2659 07b7 DE000000 		.4byte	0xde
 2660 07bb 02       		.byte	0x2
 2661 07bc 23       		.byte	0x23
 2662 07bd 04       		.uleb128 0x4
 2663 07be 13       		.uleb128 0x13
 2664 07bf 5A070000 		.4byte	.LASF104
 2665 07c3 06       		.byte	0x6
 2666 07c4 6E01     		.2byte	0x16e
 2667 07c6 DE000000 		.4byte	0xde
 2668 07ca 02       		.byte	0x2
 2669 07cb 23       		.byte	0x23
 2670 07cc 0C       		.uleb128 0xc
 2671 07cd 13       		.uleb128 0x13
 2672 07ce FB070000 		.4byte	.LASF105
 2673 07d2 06       		.byte	0x6
 2674 07d3 6F01     		.2byte	0x16f
 2675 07d5 DE000000 		.4byte	0xde
 2676 07d9 02       		.byte	0x2
ARM GAS  /tmp/cchL5NBj.s 			page 84


 2677 07da 23       		.byte	0x23
 2678 07db 14       		.uleb128 0x14
 2679 07dc 13       		.uleb128 0x13
 2680 07dd B6000000 		.4byte	.LASF106
 2681 07e1 06       		.byte	0x6
 2682 07e2 7001     		.2byte	0x170
 2683 07e4 46080000 		.4byte	0x846
 2684 07e8 02       		.byte	0x2
 2685 07e9 23       		.byte	0x23
 2686 07ea 1C       		.uleb128 0x1c
 2687 07eb 13       		.uleb128 0x13
 2688 07ec 1C0C0000 		.4byte	.LASF107
 2689 07f0 06       		.byte	0x6
 2690 07f1 7101     		.2byte	0x171
 2691 07f3 45000000 		.4byte	0x45
 2692 07f7 02       		.byte	0x2
 2693 07f8 23       		.byte	0x23
 2694 07f9 24       		.uleb128 0x24
 2695 07fa 13       		.uleb128 0x13
 2696 07fb 9C010000 		.4byte	.LASF108
 2697 07ff 06       		.byte	0x6
 2698 0800 7201     		.2byte	0x172
 2699 0802 DE000000 		.4byte	0xde
 2700 0806 02       		.byte	0x2
 2701 0807 23       		.byte	0x23
 2702 0808 28       		.uleb128 0x28
 2703 0809 13       		.uleb128 0x13
 2704 080a B9080000 		.4byte	.LASF109
 2705 080e 06       		.byte	0x6
 2706 080f 7301     		.2byte	0x173
 2707 0811 DE000000 		.4byte	0xde
 2708 0815 02       		.byte	0x2
 2709 0816 23       		.byte	0x23
 2710 0817 30       		.uleb128 0x30
 2711 0818 13       		.uleb128 0x13
 2712 0819 B60B0000 		.4byte	.LASF110
 2713 081d 06       		.byte	0x6
 2714 081e 7401     		.2byte	0x174
 2715 0820 DE000000 		.4byte	0xde
 2716 0824 02       		.byte	0x2
 2717 0825 23       		.byte	0x23
 2718 0826 38       		.uleb128 0x38
 2719 0827 13       		.uleb128 0x13
 2720 0828 20070000 		.4byte	.LASF111
 2721 082c 06       		.byte	0x6
 2722 082d 7501     		.2byte	0x175
 2723 082f DE000000 		.4byte	0xde
 2724 0833 02       		.byte	0x2
 2725 0834 23       		.byte	0x23
 2726 0835 40       		.uleb128 0x40
 2727 0836 13       		.uleb128 0x13
 2728 0837 96000000 		.4byte	.LASF112
 2729 083b 06       		.byte	0x6
 2730 083c 7601     		.2byte	0x176
 2731 083e DE000000 		.4byte	0xde
 2732 0842 02       		.byte	0x2
 2733 0843 23       		.byte	0x23
ARM GAS  /tmp/cchL5NBj.s 			page 85


 2734 0844 48       		.uleb128 0x48
 2735 0845 00       		.byte	0
 2736 0846 08       		.uleb128 0x8
 2737 0847 F9050000 		.4byte	0x5f9
 2738 084b 56080000 		.4byte	0x856
 2739 084f 09       		.uleb128 0x9
 2740 0850 4C000000 		.4byte	0x4c
 2741 0854 07       		.byte	0x7
 2742 0855 00       		.byte	0
 2743 0856 0F       		.uleb128 0xf
 2744 0857 04       		.byte	0x4
 2745 0858 43070000 		.4byte	0x743
 2746 085c 18       		.uleb128 0x18
 2747 085d 01       		.byte	0x1
 2748 085e 68080000 		.4byte	0x868
 2749 0862 16       		.uleb128 0x16
 2750 0863 74040000 		.4byte	0x474
 2751 0867 00       		.byte	0
 2752 0868 0F       		.uleb128 0xf
 2753 0869 04       		.byte	0x4
 2754 086a 5C080000 		.4byte	0x85c
 2755 086e 0F       		.uleb128 0xf
 2756 086f 04       		.byte	0x4
 2757 0870 E9060000 		.4byte	0x6e9
 2758 0874 0F       		.uleb128 0xf
 2759 0875 04       		.byte	0x4
 2760 0876 7D010000 		.4byte	0x17d
 2761 087a 18       		.uleb128 0x18
 2762 087b 01       		.byte	0x1
 2763 087c 86080000 		.4byte	0x886
 2764 0880 16       		.uleb128 0x16
 2765 0881 45000000 		.4byte	0x45
 2766 0885 00       		.byte	0
 2767 0886 0F       		.uleb128 0xf
 2768 0887 04       		.byte	0x4
 2769 0888 8C080000 		.4byte	0x88c
 2770 088c 0F       		.uleb128 0xf
 2771 088d 04       		.byte	0x4
 2772 088e 7A080000 		.4byte	0x87a
 2773 0892 0F       		.uleb128 0xf
 2774 0893 04       		.byte	0x4
 2775 0894 93070000 		.4byte	0x793
 2776 0898 04       		.uleb128 0x4
 2777 0899 5E020000 		.4byte	.LASF113
 2778 089d 07       		.byte	0x7
 2779 089e 2A       		.byte	0x2a
 2780 089f 30000000 		.4byte	0x30
 2781 08a3 04       		.uleb128 0x4
 2782 08a4 5A0A0000 		.4byte	.LASF114
 2783 08a8 07       		.byte	0x7
 2784 08a9 35       		.byte	0x35
 2785 08aa 37000000 		.4byte	0x37
 2786 08ae 04       		.uleb128 0x4
 2787 08af 38080000 		.4byte	.LASF115
 2788 08b3 07       		.byte	0x7
 2789 08b4 36       		.byte	0x36
 2790 08b5 3E000000 		.4byte	0x3e
ARM GAS  /tmp/cchL5NBj.s 			page 86


 2791 08b9 04       		.uleb128 0x4
 2792 08ba 430B0000 		.4byte	.LASF116
 2793 08be 07       		.byte	0x7
 2794 08bf 50       		.byte	0x50
 2795 08c0 01010000 		.4byte	0x101
 2796 08c4 17       		.uleb128 0x17
 2797 08c5 C9080000 		.4byte	0x8c9
 2798 08c9 19       		.uleb128 0x19
 2799 08ca B9080000 		.4byte	0x8b9
 2800 08ce 19       		.uleb128 0x19
 2801 08cf B9080000 		.4byte	0x8b9
 2802 08d3 1A       		.uleb128 0x1a
 2803 08d4 FA010000 		.4byte	.LASF319
 2804 08d8 01       		.byte	0x1
 2805 08d9 08       		.byte	0x8
 2806 08da 49       		.byte	0x49
 2807 08db D0090000 		.4byte	0x9d0
 2808 08df 1B       		.uleb128 0x1b
 2809 08e0 A0040000 		.4byte	.LASF117
 2810 08e4 72       		.sleb128 -14
 2811 08e5 1B       		.uleb128 0x1b
 2812 08e6 F9040000 		.4byte	.LASF118
 2813 08ea 74       		.sleb128 -12
 2814 08eb 1B       		.uleb128 0x1b
 2815 08ec CA050000 		.4byte	.LASF119
 2816 08f0 75       		.sleb128 -11
 2817 08f1 1B       		.uleb128 0x1b
 2818 08f2 07030000 		.4byte	.LASF120
 2819 08f6 76       		.sleb128 -10
 2820 08f7 1B       		.uleb128 0x1b
 2821 08f8 6D060000 		.4byte	.LASF121
 2822 08fc 7B       		.sleb128 -5
 2823 08fd 1B       		.uleb128 0x1b
 2824 08fe CB090000 		.4byte	.LASF122
 2825 0902 7C       		.sleb128 -4
 2826 0903 1B       		.uleb128 0x1b
 2827 0904 AA0B0000 		.4byte	.LASF123
 2828 0908 7E       		.sleb128 -2
 2829 0909 1B       		.uleb128 0x1b
 2830 090a 2E020000 		.4byte	.LASF124
 2831 090e 7F       		.sleb128 -1
 2832 090f 1B       		.uleb128 0x1b
 2833 0910 48040000 		.4byte	.LASF125
 2834 0914 00       		.sleb128 0
 2835 0915 1B       		.uleb128 0x1b
 2836 0916 0A010000 		.4byte	.LASF126
 2837 091a 01       		.sleb128 1
 2838 091b 1B       		.uleb128 0x1b
 2839 091c 290C0000 		.4byte	.LASF127
 2840 0920 02       		.sleb128 2
 2841 0921 1B       		.uleb128 0x1b
 2842 0922 84040000 		.4byte	.LASF128
 2843 0926 03       		.sleb128 3
 2844 0927 1B       		.uleb128 0x1b
 2845 0928 94050000 		.4byte	.LASF129
 2846 092c 04       		.sleb128 4
 2847 092d 1B       		.uleb128 0x1b
ARM GAS  /tmp/cchL5NBj.s 			page 87


 2848 092e 1C040000 		.4byte	.LASF130
 2849 0932 05       		.sleb128 5
 2850 0933 1B       		.uleb128 0x1b
 2851 0934 25040000 		.4byte	.LASF131
 2852 0938 06       		.sleb128 6
 2853 0939 1B       		.uleb128 0x1b
 2854 093a 01090000 		.4byte	.LASF132
 2855 093e 08       		.sleb128 8
 2856 093f 1B       		.uleb128 0x1b
 2857 0940 C2070000 		.4byte	.LASF133
 2858 0944 09       		.sleb128 9
 2859 0945 1B       		.uleb128 0x1b
 2860 0946 56030000 		.4byte	.LASF134
 2861 094a 0A       		.sleb128 10
 2862 094b 1B       		.uleb128 0x1b
 2863 094c 810A0000 		.4byte	.LASF135
 2864 0950 0B       		.sleb128 11
 2865 0951 1B       		.uleb128 0x1b
 2866 0952 AD090000 		.4byte	.LASF136
 2867 0956 0C       		.sleb128 12
 2868 0957 1B       		.uleb128 0x1b
 2869 0958 62040000 		.4byte	.LASF137
 2870 095c 0D       		.sleb128 13
 2871 095d 1B       		.uleb128 0x1b
 2872 095e 5A090000 		.4byte	.LASF138
 2873 0962 0E       		.sleb128 14
 2874 0963 1B       		.uleb128 0x1b
 2875 0964 79080000 		.4byte	.LASF139
 2876 0968 0F       		.sleb128 15
 2877 0969 1B       		.uleb128 0x1b
 2878 096a 66080000 		.4byte	.LASF140
 2879 096e 12       		.sleb128 18
 2880 096f 1B       		.uleb128 0x1b
 2881 0970 0F070000 		.4byte	.LASF141
 2882 0974 13       		.sleb128 19
 2883 0975 1B       		.uleb128 0x1b
 2884 0976 40060000 		.4byte	.LASF142
 2885 097a 14       		.sleb128 20
 2886 097b 1B       		.uleb128 0x1b
 2887 097c 4C090000 		.4byte	.LASF143
 2888 0980 15       		.sleb128 21
 2889 0981 1B       		.uleb128 0x1b
 2890 0982 300B0000 		.4byte	.LASF144
 2891 0986 16       		.sleb128 22
 2892 0987 1B       		.uleb128 0x1b
 2893 0988 9D090000 		.4byte	.LASF145
 2894 098c 17       		.sleb128 23
 2895 098d 1B       		.uleb128 0x1b
 2896 098e 59040000 		.4byte	.LASF146
 2897 0992 18       		.sleb128 24
 2898 0993 1B       		.uleb128 0x1b
 2899 0994 18000000 		.4byte	.LASF147
 2900 0998 19       		.sleb128 25
 2901 0999 1B       		.uleb128 0x1b
 2902 099a CE0B0000 		.4byte	.LASF148
 2903 099e 1A       		.sleb128 26
 2904 099f 1B       		.uleb128 0x1b
ARM GAS  /tmp/cchL5NBj.s 			page 88


 2905 09a0 06070000 		.4byte	.LASF149
 2906 09a4 1B       		.sleb128 27
 2907 09a5 1B       		.uleb128 0x1b
 2908 09a6 FF010000 		.4byte	.LASF150
 2909 09aa 1C       		.sleb128 28
 2910 09ab 1B       		.uleb128 0x1b
 2911 09ac B0080000 		.4byte	.LASF151
 2912 09b0 1D       		.sleb128 29
 2913 09b1 1B       		.uleb128 0x1b
 2914 09b2 96040000 		.4byte	.LASF152
 2915 09b6 1E       		.sleb128 30
 2916 09b7 1B       		.uleb128 0x1b
 2917 09b8 C8030000 		.4byte	.LASF153
 2918 09bc 1F       		.sleb128 31
 2919 09bd 1B       		.uleb128 0x1b
 2920 09be 85010000 		.4byte	.LASF154
 2921 09c2 20       		.sleb128 32
 2922 09c3 1B       		.uleb128 0x1b
 2923 09c4 06040000 		.4byte	.LASF155
 2924 09c8 21       		.sleb128 33
 2925 09c9 1B       		.uleb128 0x1b
 2926 09ca 8D040000 		.4byte	.LASF156
 2927 09ce 22       		.sleb128 34
 2928 09cf 00       		.byte	0
 2929 09d0 04       		.uleb128 0x4
 2930 09d1 3A050000 		.4byte	.LASF157
 2931 09d5 08       		.byte	0x8
 2932 09d6 76       		.byte	0x76
 2933 09d7 D3080000 		.4byte	0x8d3
 2934 09db 1C       		.uleb128 0x1c
 2935 09dc 040E     		.2byte	0xe04
 2936 09de 01       		.byte	0x1
 2937 09df 84       		.byte	0x84
 2938 09e0 A50A0000 		.4byte	0xaa5
 2939 09e4 0B       		.uleb128 0xb
 2940 09e5 E00B0000 		.4byte	.LASF158
 2941 09e9 01       		.byte	0x1
 2942 09ea 86       		.byte	0x86
 2943 09eb B50A0000 		.4byte	0xab5
 2944 09ef 02       		.byte	0x2
 2945 09f0 23       		.byte	0x23
 2946 09f1 00       		.uleb128 0
 2947 09f2 0B       		.uleb128 0xb
 2948 09f3 8A020000 		.4byte	.LASF159
 2949 09f7 01       		.byte	0x1
 2950 09f8 87       		.byte	0x87
 2951 09f9 BA0A0000 		.4byte	0xaba
 2952 09fd 02       		.byte	0x2
 2953 09fe 23       		.byte	0x23
 2954 09ff 20       		.uleb128 0x20
 2955 0a00 0B       		.uleb128 0xb
 2956 0a01 DA080000 		.4byte	.LASF160
 2957 0a05 01       		.byte	0x1
 2958 0a06 88       		.byte	0x88
 2959 0a07 CA0A0000 		.4byte	0xaca
 2960 0a0b 03       		.byte	0x3
 2961 0a0c 23       		.byte	0x23
ARM GAS  /tmp/cchL5NBj.s 			page 89


 2962 0a0d 8001     		.uleb128 0x80
 2963 0a0f 0B       		.uleb128 0xb
 2964 0a10 00000000 		.4byte	.LASF161
 2965 0a14 01       		.byte	0x1
 2966 0a15 89       		.byte	0x89
 2967 0a16 BA0A0000 		.4byte	0xaba
 2968 0a1a 03       		.byte	0x3
 2969 0a1b 23       		.byte	0x23
 2970 0a1c A001     		.uleb128 0xa0
 2971 0a1e 0B       		.uleb128 0xb
 2972 0a1f D1030000 		.4byte	.LASF162
 2973 0a23 01       		.byte	0x1
 2974 0a24 8A       		.byte	0x8a
 2975 0a25 CF0A0000 		.4byte	0xacf
 2976 0a29 03       		.byte	0x3
 2977 0a2a 23       		.byte	0x23
 2978 0a2b 8002     		.uleb128 0x100
 2979 0a2d 0B       		.uleb128 0xb
 2980 0a2e FD020000 		.4byte	.LASF163
 2981 0a32 01       		.byte	0x1
 2982 0a33 8B       		.byte	0x8b
 2983 0a34 BA0A0000 		.4byte	0xaba
 2984 0a38 03       		.byte	0x3
 2985 0a39 23       		.byte	0x23
 2986 0a3a A002     		.uleb128 0x120
 2987 0a3c 0B       		.uleb128 0xb
 2988 0a3d 1D010000 		.4byte	.LASF164
 2989 0a41 01       		.byte	0x1
 2990 0a42 8C       		.byte	0x8c
 2991 0a43 D40A0000 		.4byte	0xad4
 2992 0a47 03       		.byte	0x3
 2993 0a48 23       		.byte	0x23
 2994 0a49 8003     		.uleb128 0x180
 2995 0a4b 0B       		.uleb128 0xb
 2996 0a4c A2020000 		.4byte	.LASF165
 2997 0a50 01       		.byte	0x1
 2998 0a51 8D       		.byte	0x8d
 2999 0a52 BA0A0000 		.4byte	0xaba
 3000 0a56 03       		.byte	0x3
 3001 0a57 23       		.byte	0x23
 3002 0a58 A003     		.uleb128 0x1a0
 3003 0a5a 0B       		.uleb128 0xb
 3004 0a5b D0020000 		.4byte	.LASF166
 3005 0a5f 01       		.byte	0x1
 3006 0a60 8E       		.byte	0x8e
 3007 0a61 D90A0000 		.4byte	0xad9
 3008 0a65 03       		.byte	0x3
 3009 0a66 23       		.byte	0x23
 3010 0a67 8004     		.uleb128 0x200
 3011 0a69 0B       		.uleb128 0xb
 3012 0a6a AC020000 		.4byte	.LASF167
 3013 0a6e 01       		.byte	0x1
 3014 0a6f 8F       		.byte	0x8f
 3015 0a70 DE0A0000 		.4byte	0xade
 3016 0a74 03       		.byte	0x3
 3017 0a75 23       		.byte	0x23
 3018 0a76 A004     		.uleb128 0x220
ARM GAS  /tmp/cchL5NBj.s 			page 90


 3019 0a78 0E       		.uleb128 0xe
 3020 0a79 495000   		.ascii	"IP\000"
 3021 0a7c 01       		.byte	0x1
 3022 0a7d 90       		.byte	0x90
 3023 0a7e FE0A0000 		.4byte	0xafe
 3024 0a82 03       		.byte	0x3
 3025 0a83 23       		.byte	0x23
 3026 0a84 8006     		.uleb128 0x300
 3027 0a86 0B       		.uleb128 0xb
 3028 0a87 B6020000 		.4byte	.LASF168
 3029 0a8b 01       		.byte	0x1
 3030 0a8c 91       		.byte	0x91
 3031 0a8d 030B0000 		.4byte	0xb03
 3032 0a91 03       		.byte	0x3
 3033 0a92 23       		.byte	0x23
 3034 0a93 F007     		.uleb128 0x3f0
 3035 0a95 0B       		.uleb128 0xb
 3036 0a96 01040000 		.4byte	.LASF169
 3037 0a9a 01       		.byte	0x1
 3038 0a9b 92       		.byte	0x92
 3039 0a9c CE080000 		.4byte	0x8ce
 3040 0aa0 03       		.byte	0x3
 3041 0aa1 23       		.byte	0x23
 3042 0aa2 801C     		.uleb128 0xe00
 3043 0aa4 00       		.byte	0
 3044 0aa5 08       		.uleb128 0x8
 3045 0aa6 B9080000 		.4byte	0x8b9
 3046 0aaa B50A0000 		.4byte	0xab5
 3047 0aae 09       		.uleb128 0x9
 3048 0aaf 4C000000 		.4byte	0x4c
 3049 0ab3 07       		.byte	0x7
 3050 0ab4 00       		.byte	0
 3051 0ab5 19       		.uleb128 0x19
 3052 0ab6 A50A0000 		.4byte	0xaa5
 3053 0aba 08       		.uleb128 0x8
 3054 0abb B9080000 		.4byte	0x8b9
 3055 0abf CA0A0000 		.4byte	0xaca
 3056 0ac3 09       		.uleb128 0x9
 3057 0ac4 4C000000 		.4byte	0x4c
 3058 0ac8 17       		.byte	0x17
 3059 0ac9 00       		.byte	0
 3060 0aca 19       		.uleb128 0x19
 3061 0acb A50A0000 		.4byte	0xaa5
 3062 0acf 19       		.uleb128 0x19
 3063 0ad0 A50A0000 		.4byte	0xaa5
 3064 0ad4 19       		.uleb128 0x19
 3065 0ad5 A50A0000 		.4byte	0xaa5
 3066 0ad9 19       		.uleb128 0x19
 3067 0ada A50A0000 		.4byte	0xaa5
 3068 0ade 08       		.uleb128 0x8
 3069 0adf B9080000 		.4byte	0x8b9
 3070 0ae3 EE0A0000 		.4byte	0xaee
 3071 0ae7 09       		.uleb128 0x9
 3072 0ae8 4C000000 		.4byte	0x4c
 3073 0aec 37       		.byte	0x37
 3074 0aed 00       		.byte	0
 3075 0aee 08       		.uleb128 0x8
ARM GAS  /tmp/cchL5NBj.s 			page 91


 3076 0aef 98080000 		.4byte	0x898
 3077 0af3 FE0A0000 		.4byte	0xafe
 3078 0af7 09       		.uleb128 0x9
 3079 0af8 4C000000 		.4byte	0x4c
 3080 0afc EF       		.byte	0xef
 3081 0afd 00       		.byte	0
 3082 0afe 19       		.uleb128 0x19
 3083 0aff EE0A0000 		.4byte	0xaee
 3084 0b03 08       		.uleb128 0x8
 3085 0b04 B9080000 		.4byte	0x8b9
 3086 0b08 140B0000 		.4byte	0xb14
 3087 0b0c 1D       		.uleb128 0x1d
 3088 0b0d 4C000000 		.4byte	0x4c
 3089 0b11 8302     		.2byte	0x283
 3090 0b13 00       		.byte	0
 3091 0b14 04       		.uleb128 0x4
 3092 0b15 42000000 		.4byte	.LASF170
 3093 0b19 01       		.byte	0x1
 3094 0b1a 93       		.byte	0x93
 3095 0b1b DB090000 		.4byte	0x9db
 3096 0b1f 0A       		.uleb128 0xa
 3097 0b20 74       		.byte	0x74
 3098 0b21 01       		.byte	0x1
 3099 0b22 9B       		.byte	0x9b
 3100 0b23 320C0000 		.4byte	0xc32
 3101 0b27 0B       		.uleb128 0xb
 3102 0b28 D8010000 		.4byte	.LASF171
 3103 0b2c 01       		.byte	0x1
 3104 0b2d 9D       		.byte	0x9d
 3105 0b2e C4080000 		.4byte	0x8c4
 3106 0b32 02       		.byte	0x2
 3107 0b33 23       		.byte	0x23
 3108 0b34 00       		.uleb128 0
 3109 0b35 0B       		.uleb128 0xb
 3110 0b36 4D020000 		.4byte	.LASF172
 3111 0b3a 01       		.byte	0x1
 3112 0b3b 9E       		.byte	0x9e
 3113 0b3c CE080000 		.4byte	0x8ce
 3114 0b40 02       		.byte	0x2
 3115 0b41 23       		.byte	0x23
 3116 0b42 04       		.uleb128 0x4
 3117 0b43 0B       		.uleb128 0xb
 3118 0b44 C0000000 		.4byte	.LASF173
 3119 0b48 01       		.byte	0x1
 3120 0b49 9F       		.byte	0x9f
 3121 0b4a CE080000 		.4byte	0x8ce
 3122 0b4e 02       		.byte	0x2
 3123 0b4f 23       		.byte	0x23
 3124 0b50 08       		.uleb128 0x8
 3125 0b51 0B       		.uleb128 0xb
 3126 0b52 6A010000 		.4byte	.LASF174
 3127 0b56 01       		.byte	0x1
 3128 0b57 A0       		.byte	0xa0
 3129 0b58 CE080000 		.4byte	0x8ce
 3130 0b5c 02       		.byte	0x2
 3131 0b5d 23       		.byte	0x23
 3132 0b5e 0C       		.uleb128 0xc
ARM GAS  /tmp/cchL5NBj.s 			page 92


 3133 0b5f 0E       		.uleb128 0xe
 3134 0b60 53435200 		.ascii	"SCR\000"
 3135 0b64 01       		.byte	0x1
 3136 0b65 A1       		.byte	0xa1
 3137 0b66 CE080000 		.4byte	0x8ce
 3138 0b6a 02       		.byte	0x2
 3139 0b6b 23       		.byte	0x23
 3140 0b6c 10       		.uleb128 0x10
 3141 0b6d 0E       		.uleb128 0xe
 3142 0b6e 43435200 		.ascii	"CCR\000"
 3143 0b72 01       		.byte	0x1
 3144 0b73 A2       		.byte	0xa2
 3145 0b74 CE080000 		.4byte	0x8ce
 3146 0b78 02       		.byte	0x2
 3147 0b79 23       		.byte	0x23
 3148 0b7a 14       		.uleb128 0x14
 3149 0b7b 0E       		.uleb128 0xe
 3150 0b7c 53485000 		.ascii	"SHP\000"
 3151 0b80 01       		.byte	0x1
 3152 0b81 A3       		.byte	0xa3
 3153 0b82 420C0000 		.4byte	0xc42
 3154 0b86 02       		.byte	0x2
 3155 0b87 23       		.byte	0x23
 3156 0b88 18       		.uleb128 0x18
 3157 0b89 0B       		.uleb128 0xb
 3158 0b8a F3030000 		.4byte	.LASF175
 3159 0b8e 01       		.byte	0x1
 3160 0b8f A4       		.byte	0xa4
 3161 0b90 CE080000 		.4byte	0x8ce
 3162 0b94 02       		.byte	0x2
 3163 0b95 23       		.byte	0x23
 3164 0b96 24       		.uleb128 0x24
 3165 0b97 0B       		.uleb128 0xb
 3166 0b98 7A090000 		.4byte	.LASF176
 3167 0b9c 01       		.byte	0x1
 3168 0b9d A5       		.byte	0xa5
 3169 0b9e CE080000 		.4byte	0x8ce
 3170 0ba2 02       		.byte	0x2
 3171 0ba3 23       		.byte	0x23
 3172 0ba4 28       		.uleb128 0x28
 3173 0ba5 0B       		.uleb128 0xb
 3174 0ba6 96030000 		.4byte	.LASF177
 3175 0baa 01       		.byte	0x1
 3176 0bab A6       		.byte	0xa6
 3177 0bac CE080000 		.4byte	0x8ce
 3178 0bb0 02       		.byte	0x2
 3179 0bb1 23       		.byte	0x23
 3180 0bb2 2C       		.uleb128 0x2c
 3181 0bb3 0B       		.uleb128 0xb
 3182 0bb4 51030000 		.4byte	.LASF178
 3183 0bb8 01       		.byte	0x1
 3184 0bb9 A7       		.byte	0xa7
 3185 0bba CE080000 		.4byte	0x8ce
 3186 0bbe 02       		.byte	0x2
 3187 0bbf 23       		.byte	0x23
 3188 0bc0 30       		.uleb128 0x30
 3189 0bc1 0B       		.uleb128 0xb
ARM GAS  /tmp/cchL5NBj.s 			page 93


 3190 0bc2 2F0A0000 		.4byte	.LASF179
 3191 0bc6 01       		.byte	0x1
 3192 0bc7 A8       		.byte	0xa8
 3193 0bc8 CE080000 		.4byte	0x8ce
 3194 0bcc 02       		.byte	0x2
 3195 0bcd 23       		.byte	0x23
 3196 0bce 34       		.uleb128 0x34
 3197 0bcf 0B       		.uleb128 0xb
 3198 0bd0 F6070000 		.4byte	.LASF180
 3199 0bd4 01       		.byte	0x1
 3200 0bd5 A9       		.byte	0xa9
 3201 0bd6 CE080000 		.4byte	0x8ce
 3202 0bda 02       		.byte	0x2
 3203 0bdb 23       		.byte	0x23
 3204 0bdc 38       		.uleb128 0x38
 3205 0bdd 0B       		.uleb128 0xb
 3206 0bde 20090000 		.4byte	.LASF181
 3207 0be2 01       		.byte	0x1
 3208 0be3 AA       		.byte	0xaa
 3209 0be4 CE080000 		.4byte	0x8ce
 3210 0be8 02       		.byte	0x2
 3211 0be9 23       		.byte	0x23
 3212 0bea 3C       		.uleb128 0x3c
 3213 0beb 0E       		.uleb128 0xe
 3214 0bec 50465200 		.ascii	"PFR\000"
 3215 0bf0 01       		.byte	0x1
 3216 0bf1 AB       		.byte	0xab
 3217 0bf2 570C0000 		.4byte	0xc57
 3218 0bf6 02       		.byte	0x2
 3219 0bf7 23       		.byte	0x23
 3220 0bf8 40       		.uleb128 0x40
 3221 0bf9 0E       		.uleb128 0xe
 3222 0bfa 44465200 		.ascii	"DFR\000"
 3223 0bfe 01       		.byte	0x1
 3224 0bff AC       		.byte	0xac
 3225 0c00 C4080000 		.4byte	0x8c4
 3226 0c04 02       		.byte	0x2
 3227 0c05 23       		.byte	0x23
 3228 0c06 48       		.uleb128 0x48
 3229 0c07 0E       		.uleb128 0xe
 3230 0c08 41445200 		.ascii	"ADR\000"
 3231 0c0c 01       		.byte	0x1
 3232 0c0d AD       		.byte	0xad
 3233 0c0e C4080000 		.4byte	0x8c4
 3234 0c12 02       		.byte	0x2
 3235 0c13 23       		.byte	0x23
 3236 0c14 4C       		.uleb128 0x4c
 3237 0c15 0B       		.uleb128 0xb
 3238 0c16 240A0000 		.4byte	.LASF182
 3239 0c1a 01       		.byte	0x1
 3240 0c1b AE       		.byte	0xae
 3241 0c1c 710C0000 		.4byte	0xc71
 3242 0c20 02       		.byte	0x2
 3243 0c21 23       		.byte	0x23
 3244 0c22 50       		.uleb128 0x50
 3245 0c23 0B       		.uleb128 0xb
 3246 0c24 6A0A0000 		.4byte	.LASF183
ARM GAS  /tmp/cchL5NBj.s 			page 94


 3247 0c28 01       		.byte	0x1
 3248 0c29 AF       		.byte	0xaf
 3249 0c2a 8B0C0000 		.4byte	0xc8b
 3250 0c2e 02       		.byte	0x2
 3251 0c2f 23       		.byte	0x23
 3252 0c30 60       		.uleb128 0x60
 3253 0c31 00       		.byte	0
 3254 0c32 08       		.uleb128 0x8
 3255 0c33 98080000 		.4byte	0x898
 3256 0c37 420C0000 		.4byte	0xc42
 3257 0c3b 09       		.uleb128 0x9
 3258 0c3c 4C000000 		.4byte	0x4c
 3259 0c40 0B       		.byte	0xb
 3260 0c41 00       		.byte	0
 3261 0c42 19       		.uleb128 0x19
 3262 0c43 320C0000 		.4byte	0xc32
 3263 0c47 08       		.uleb128 0x8
 3264 0c48 B9080000 		.4byte	0x8b9
 3265 0c4c 570C0000 		.4byte	0xc57
 3266 0c50 09       		.uleb128 0x9
 3267 0c51 4C000000 		.4byte	0x4c
 3268 0c55 01       		.byte	0x1
 3269 0c56 00       		.byte	0
 3270 0c57 17       		.uleb128 0x17
 3271 0c58 5C0C0000 		.4byte	0xc5c
 3272 0c5c 19       		.uleb128 0x19
 3273 0c5d 470C0000 		.4byte	0xc47
 3274 0c61 08       		.uleb128 0x8
 3275 0c62 B9080000 		.4byte	0x8b9
 3276 0c66 710C0000 		.4byte	0xc71
 3277 0c6a 09       		.uleb128 0x9
 3278 0c6b 4C000000 		.4byte	0x4c
 3279 0c6f 03       		.byte	0x3
 3280 0c70 00       		.byte	0
 3281 0c71 17       		.uleb128 0x17
 3282 0c72 760C0000 		.4byte	0xc76
 3283 0c76 19       		.uleb128 0x19
 3284 0c77 610C0000 		.4byte	0xc61
 3285 0c7b 08       		.uleb128 0x8
 3286 0c7c B9080000 		.4byte	0x8b9
 3287 0c80 8B0C0000 		.4byte	0xc8b
 3288 0c84 09       		.uleb128 0x9
 3289 0c85 4C000000 		.4byte	0x4c
 3290 0c89 04       		.byte	0x4
 3291 0c8a 00       		.byte	0
 3292 0c8b 17       		.uleb128 0x17
 3293 0c8c 900C0000 		.4byte	0xc90
 3294 0c90 19       		.uleb128 0x19
 3295 0c91 7B0C0000 		.4byte	0xc7b
 3296 0c95 04       		.uleb128 0x4
 3297 0c96 3A030000 		.4byte	.LASF184
 3298 0c9a 01       		.byte	0x1
 3299 0c9b B0       		.byte	0xb0
 3300 0c9c 1F0B0000 		.4byte	0xb1f
 3301 0ca0 19       		.uleb128 0x19
 3302 0ca1 01010000 		.4byte	0x101
 3303 0ca5 17       		.uleb128 0x17
ARM GAS  /tmp/cchL5NBj.s 			page 95


 3304 0ca6 A00C0000 		.4byte	0xca0
 3305 0caa 08       		.uleb128 0x8
 3306 0cab 01010000 		.4byte	0x101
 3307 0caf BA0C0000 		.4byte	0xcba
 3308 0cb3 09       		.uleb128 0x9
 3309 0cb4 4C000000 		.4byte	0x4c
 3310 0cb8 12       		.byte	0x12
 3311 0cb9 00       		.byte	0
 3312 0cba 1C       		.uleb128 0x1c
 3313 0cbb 2801     		.2byte	0x128
 3314 0cbd 08       		.byte	0x8
 3315 0cbe EF       		.byte	0xef
 3316 0cbf E00E0000 		.4byte	0xee0
 3317 0cc3 0B       		.uleb128 0xb
 3318 0cc4 A40A0000 		.4byte	.LASF185
 3319 0cc8 08       		.byte	0x8
 3320 0cc9 F0       		.byte	0xf0
 3321 0cca A00C0000 		.4byte	0xca0
 3322 0cce 02       		.byte	0x2
 3323 0ccf 23       		.byte	0x23
 3324 0cd0 00       		.uleb128 0
 3325 0cd1 0B       		.uleb128 0xb
 3326 0cd2 7B050000 		.4byte	.LASF186
 3327 0cd6 08       		.byte	0x8
 3328 0cd7 F1       		.byte	0xf1
 3329 0cd8 A00C0000 		.4byte	0xca0
 3330 0cdc 02       		.byte	0x2
 3331 0cdd 23       		.byte	0x23
 3332 0cde 04       		.uleb128 0x4
 3333 0cdf 0B       		.uleb128 0xb
 3334 0ce0 25090000 		.4byte	.LASF187
 3335 0ce4 08       		.byte	0x8
 3336 0ce5 F2       		.byte	0xf2
 3337 0ce6 A00C0000 		.4byte	0xca0
 3338 0cea 02       		.byte	0x2
 3339 0ceb 23       		.byte	0x23
 3340 0cec 08       		.uleb128 0x8
 3341 0ced 0B       		.uleb128 0xb
 3342 0cee 2F090000 		.4byte	.LASF188
 3343 0cf2 08       		.byte	0x8
 3344 0cf3 F3       		.byte	0xf3
 3345 0cf4 A00C0000 		.4byte	0xca0
 3346 0cf8 02       		.byte	0x2
 3347 0cf9 23       		.byte	0x23
 3348 0cfa 0C       		.uleb128 0xc
 3349 0cfb 0B       		.uleb128 0xb
 3350 0cfc D70B0000 		.4byte	.LASF189
 3351 0d00 08       		.byte	0x8
 3352 0d01 F4       		.byte	0xf4
 3353 0d02 A00C0000 		.4byte	0xca0
 3354 0d06 02       		.byte	0x2
 3355 0d07 23       		.byte	0x23
 3356 0d08 10       		.uleb128 0x10
 3357 0d09 0B       		.uleb128 0xb
 3358 0d0a 6E0B0000 		.4byte	.LASF190
 3359 0d0e 08       		.byte	0x8
 3360 0d0f F5       		.byte	0xf5
ARM GAS  /tmp/cchL5NBj.s 			page 96


 3361 0d10 A00C0000 		.4byte	0xca0
 3362 0d14 02       		.byte	0x2
 3363 0d15 23       		.byte	0x23
 3364 0d16 14       		.uleb128 0x14
 3365 0d17 0B       		.uleb128 0xb
 3366 0d18 C4040000 		.4byte	.LASF191
 3367 0d1c 08       		.byte	0x8
 3368 0d1d F6       		.byte	0xf6
 3369 0d1e A50C0000 		.4byte	0xca5
 3370 0d22 02       		.byte	0x2
 3371 0d23 23       		.byte	0x23
 3372 0d24 18       		.uleb128 0x18
 3373 0d25 0B       		.uleb128 0xb
 3374 0d26 66090000 		.4byte	.LASF192
 3375 0d2a 08       		.byte	0x8
 3376 0d2b F7       		.byte	0xf7
 3377 0d2c F00E0000 		.4byte	0xef0
 3378 0d30 02       		.byte	0x2
 3379 0d31 23       		.byte	0x23
 3380 0d32 1C       		.uleb128 0x1c
 3381 0d33 0B       		.uleb128 0xb
 3382 0d34 82050000 		.4byte	.LASF193
 3383 0d38 08       		.byte	0x8
 3384 0d39 F8       		.byte	0xf8
 3385 0d3a A50C0000 		.4byte	0xca5
 3386 0d3e 02       		.byte	0x2
 3387 0d3f 23       		.byte	0x23
 3388 0d40 20       		.uleb128 0x20
 3389 0d41 0B       		.uleb128 0xb
 3390 0d42 39070000 		.4byte	.LASF194
 3391 0d46 08       		.byte	0x8
 3392 0d47 F9       		.byte	0xf9
 3393 0d48 A00C0000 		.4byte	0xca0
 3394 0d4c 02       		.byte	0x2
 3395 0d4d 23       		.byte	0x23
 3396 0d4e 24       		.uleb128 0x24
 3397 0d4f 0B       		.uleb128 0xb
 3398 0d50 E8060000 		.4byte	.LASF195
 3399 0d54 08       		.byte	0x8
 3400 0d55 FA       		.byte	0xfa
 3401 0d56 A00C0000 		.4byte	0xca0
 3402 0d5a 02       		.byte	0x2
 3403 0d5b 23       		.byte	0x23
 3404 0d5c 28       		.uleb128 0x28
 3405 0d5d 0B       		.uleb128 0xb
 3406 0d5e 9C0A0000 		.4byte	.LASF196
 3407 0d62 08       		.byte	0x8
 3408 0d63 FB       		.byte	0xfb
 3409 0d64 A50C0000 		.4byte	0xca5
 3410 0d68 02       		.byte	0x2
 3411 0d69 23       		.byte	0x23
 3412 0d6a 2C       		.uleb128 0x2c
 3413 0d6b 0B       		.uleb128 0xb
 3414 0d6c 82000000 		.4byte	.LASF197
 3415 0d70 08       		.byte	0x8
 3416 0d71 FC       		.byte	0xfc
 3417 0d72 A50C0000 		.4byte	0xca5
ARM GAS  /tmp/cchL5NBj.s 			page 97


 3418 0d76 02       		.byte	0x2
 3419 0d77 23       		.byte	0x23
 3420 0d78 30       		.uleb128 0x30
 3421 0d79 0B       		.uleb128 0xb
 3422 0d7a 70090000 		.4byte	.LASF198
 3423 0d7e 08       		.byte	0x8
 3424 0d7f FD       		.byte	0xfd
 3425 0d80 050F0000 		.4byte	0xf05
 3426 0d84 02       		.byte	0x2
 3427 0d85 23       		.byte	0x23
 3428 0d86 34       		.uleb128 0x34
 3429 0d87 0B       		.uleb128 0xb
 3430 0d88 6F0A0000 		.4byte	.LASF199
 3431 0d8c 08       		.byte	0x8
 3432 0d8d FE       		.byte	0xfe
 3433 0d8e A50C0000 		.4byte	0xca5
 3434 0d92 02       		.byte	0x2
 3435 0d93 23       		.byte	0x23
 3436 0d94 3C       		.uleb128 0x3c
 3437 0d95 0B       		.uleb128 0xb
 3438 0d96 7A000000 		.4byte	.LASF200
 3439 0d9a 08       		.byte	0x8
 3440 0d9b FF       		.byte	0xff
 3441 0d9c A00C0000 		.4byte	0xca0
 3442 0da0 02       		.byte	0x2
 3443 0da1 23       		.byte	0x23
 3444 0da2 40       		.uleb128 0x40
 3445 0da3 13       		.uleb128 0x13
 3446 0da4 ED0B0000 		.4byte	.LASF201
 3447 0da8 08       		.byte	0x8
 3448 0da9 0001     		.2byte	0x100
 3449 0dab A00C0000 		.4byte	0xca0
 3450 0daf 02       		.byte	0x2
 3451 0db0 23       		.byte	0x23
 3452 0db1 44       		.uleb128 0x44
 3453 0db2 13       		.uleb128 0x13
 3454 0db3 62050000 		.4byte	.LASF202
 3455 0db7 08       		.byte	0x8
 3456 0db8 0101     		.2byte	0x101
 3457 0dba A00C0000 		.4byte	0xca0
 3458 0dbe 02       		.byte	0x2
 3459 0dbf 23       		.byte	0x23
 3460 0dc0 48       		.uleb128 0x48
 3461 0dc1 13       		.uleb128 0x13
 3462 0dc2 5E080000 		.4byte	.LASF203
 3463 0dc6 08       		.byte	0x8
 3464 0dc7 0201     		.2byte	0x102
 3465 0dc9 A00C0000 		.4byte	0xca0
 3466 0dcd 02       		.byte	0x2
 3467 0dce 23       		.byte	0x23
 3468 0dcf 4C       		.uleb128 0x4c
 3469 0dd0 13       		.uleb128 0x13
 3470 0dd1 F9030000 		.4byte	.LASF204
 3471 0dd5 08       		.byte	0x8
 3472 0dd6 0301     		.2byte	0x103
 3473 0dd8 1A0F0000 		.4byte	0xf1a
 3474 0ddc 02       		.byte	0x2
ARM GAS  /tmp/cchL5NBj.s 			page 98


 3475 0ddd 23       		.byte	0x23
 3476 0dde 50       		.uleb128 0x50
 3477 0ddf 13       		.uleb128 0x13
 3478 0de0 E8000000 		.4byte	.LASF205
 3479 0de4 08       		.byte	0x8
 3480 0de5 0401     		.2byte	0x104
 3481 0de7 240F0000 		.4byte	0xf24
 3482 0deb 03       		.byte	0x3
 3483 0dec 23       		.byte	0x23
 3484 0ded 9001     		.uleb128 0x90
 3485 0def 13       		.uleb128 0x13
 3486 0df0 5E0B0000 		.4byte	.LASF206
 3487 0df4 08       		.byte	0x8
 3488 0df5 0501     		.2byte	0x105
 3489 0df7 A00C0000 		.4byte	0xca0
 3490 0dfb 03       		.byte	0x3
 3491 0dfc 23       		.byte	0x23
 3492 0dfd 9401     		.uleb128 0x94
 3493 0dff 13       		.uleb128 0x13
 3494 0e00 7F090000 		.4byte	.LASF207
 3495 0e04 08       		.byte	0x8
 3496 0e05 0601     		.2byte	0x106
 3497 0e07 290F0000 		.4byte	0xf29
 3498 0e0b 03       		.byte	0x3
 3499 0e0c 23       		.byte	0x23
 3500 0e0d 9801     		.uleb128 0x98
 3501 0e0f 13       		.uleb128 0x13
 3502 0e10 970B0000 		.4byte	.LASF208
 3503 0e14 08       		.byte	0x8
 3504 0e15 0701     		.2byte	0x107
 3505 0e17 A00C0000 		.4byte	0xca0
 3506 0e1b 03       		.byte	0x3
 3507 0e1c 23       		.byte	0x23
 3508 0e1d E401     		.uleb128 0xe4
 3509 0e1f 13       		.uleb128 0x13
 3510 0e20 4D010000 		.4byte	.LASF209
 3511 0e24 08       		.byte	0x8
 3512 0e25 0801     		.2byte	0x108
 3513 0e27 A50C0000 		.4byte	0xca5
 3514 0e2b 03       		.byte	0x3
 3515 0e2c 23       		.byte	0x23
 3516 0e2d E801     		.uleb128 0xe8
 3517 0e2f 13       		.uleb128 0x13
 3518 0e30 89090000 		.4byte	.LASF210
 3519 0e34 08       		.byte	0x8
 3520 0e35 0901     		.2byte	0x109
 3521 0e37 3E0F0000 		.4byte	0xf3e
 3522 0e3b 03       		.byte	0x3
 3523 0e3c 23       		.byte	0x23
 3524 0e3d EC01     		.uleb128 0xec
 3525 0e3f 13       		.uleb128 0x13
 3526 0e40 02010000 		.4byte	.LASF211
 3527 0e44 08       		.byte	0x8
 3528 0e45 0A01     		.2byte	0x10a
 3529 0e47 A00C0000 		.4byte	0xca0
 3530 0e4b 03       		.byte	0x3
 3531 0e4c 23       		.byte	0x23
ARM GAS  /tmp/cchL5NBj.s 			page 99


 3532 0e4d 8002     		.uleb128 0x100
 3533 0e4f 13       		.uleb128 0x13
 3534 0e50 E4030000 		.4byte	.LASF212
 3535 0e54 08       		.byte	0x8
 3536 0e55 0B01     		.2byte	0x10b
 3537 0e57 A00C0000 		.4byte	0xca0
 3538 0e5b 03       		.byte	0x3
 3539 0e5c 23       		.byte	0x23
 3540 0e5d 8402     		.uleb128 0x104
 3541 0e5f 13       		.uleb128 0x13
 3542 0e60 ED010000 		.4byte	.LASF213
 3543 0e64 08       		.byte	0x8
 3544 0e65 0C01     		.2byte	0x10c
 3545 0e67 A00C0000 		.4byte	0xca0
 3546 0e6b 03       		.byte	0x3
 3547 0e6c 23       		.byte	0x23
 3548 0e6d 8802     		.uleb128 0x108
 3549 0e6f 13       		.uleb128 0x13
 3550 0e70 D2080000 		.4byte	.LASF214
 3551 0e74 08       		.byte	0x8
 3552 0e75 0D01     		.2byte	0x10d
 3553 0e77 A00C0000 		.4byte	0xca0
 3554 0e7b 03       		.byte	0x3
 3555 0e7c 23       		.byte	0x23
 3556 0e7d 8C02     		.uleb128 0x10c
 3557 0e7f 13       		.uleb128 0x13
 3558 0e80 14010000 		.4byte	.LASF215
 3559 0e84 08       		.byte	0x8
 3560 0e85 0E01     		.2byte	0x10e
 3561 0e87 A00C0000 		.4byte	0xca0
 3562 0e8b 03       		.byte	0x3
 3563 0e8c 23       		.byte	0x23
 3564 0e8d 9002     		.uleb128 0x110
 3565 0e8f 13       		.uleb128 0x13
 3566 0e90 E2070000 		.4byte	.LASF216
 3567 0e94 08       		.byte	0x8
 3568 0e95 0F01     		.2byte	0x10f
 3569 0e97 A00C0000 		.4byte	0xca0
 3570 0e9b 03       		.byte	0x3
 3571 0e9c 23       		.byte	0x23
 3572 0e9d 9402     		.uleb128 0x114
 3573 0e9f 13       		.uleb128 0x13
 3574 0ea0 2A010000 		.4byte	.LASF217
 3575 0ea4 08       		.byte	0x8
 3576 0ea5 1001     		.2byte	0x110
 3577 0ea7 A00C0000 		.4byte	0xca0
 3578 0eab 03       		.byte	0x3
 3579 0eac 23       		.byte	0x23
 3580 0ead 9802     		.uleb128 0x118
 3581 0eaf 13       		.uleb128 0x13
 3582 0eb0 09080000 		.4byte	.LASF218
 3583 0eb4 08       		.byte	0x8
 3584 0eb5 1101     		.2byte	0x111
 3585 0eb7 A00C0000 		.4byte	0xca0
 3586 0ebb 03       		.byte	0x3
 3587 0ebc 23       		.byte	0x23
 3588 0ebd 9C02     		.uleb128 0x11c
ARM GAS  /tmp/cchL5NBj.s 			page 100


 3589 0ebf 13       		.uleb128 0x13
 3590 0ec0 BE0A0000 		.4byte	.LASF219
 3591 0ec4 08       		.byte	0x8
 3592 0ec5 1201     		.2byte	0x112
 3593 0ec7 A00C0000 		.4byte	0xca0
 3594 0ecb 03       		.byte	0x3
 3595 0ecc 23       		.byte	0x23
 3596 0ecd A002     		.uleb128 0x120
 3597 0ecf 13       		.uleb128 0x13
 3598 0ed0 7B040000 		.4byte	.LASF220
 3599 0ed4 08       		.byte	0x8
 3600 0ed5 1301     		.2byte	0x113
 3601 0ed7 A50C0000 		.4byte	0xca5
 3602 0edb 03       		.byte	0x3
 3603 0edc 23       		.byte	0x23
 3604 0edd A402     		.uleb128 0x124
 3605 0edf 00       		.byte	0
 3606 0ee0 08       		.uleb128 0x8
 3607 0ee1 01010000 		.4byte	0x101
 3608 0ee5 F00E0000 		.4byte	0xef0
 3609 0ee9 09       		.uleb128 0x9
 3610 0eea 4C000000 		.4byte	0x4c
 3611 0eee 00       		.byte	0
 3612 0eef 00       		.byte	0
 3613 0ef0 19       		.uleb128 0x19
 3614 0ef1 E00E0000 		.4byte	0xee0
 3615 0ef5 08       		.uleb128 0x8
 3616 0ef6 01010000 		.4byte	0x101
 3617 0efa 050F0000 		.4byte	0xf05
 3618 0efe 09       		.uleb128 0x9
 3619 0eff 4C000000 		.4byte	0x4c
 3620 0f03 01       		.byte	0x1
 3621 0f04 00       		.byte	0
 3622 0f05 19       		.uleb128 0x19
 3623 0f06 F50E0000 		.4byte	0xef5
 3624 0f0a 08       		.uleb128 0x8
 3625 0f0b 01010000 		.4byte	0x101
 3626 0f0f 1A0F0000 		.4byte	0xf1a
 3627 0f13 09       		.uleb128 0x9
 3628 0f14 4C000000 		.4byte	0x4c
 3629 0f18 0F       		.byte	0xf
 3630 0f19 00       		.byte	0
 3631 0f1a 17       		.uleb128 0x17
 3632 0f1b 1F0F0000 		.4byte	0xf1f
 3633 0f1f 19       		.uleb128 0x19
 3634 0f20 0A0F0000 		.4byte	0xf0a
 3635 0f24 19       		.uleb128 0x19
 3636 0f25 E00E0000 		.4byte	0xee0
 3637 0f29 19       		.uleb128 0x19
 3638 0f2a AA0C0000 		.4byte	0xcaa
 3639 0f2e 08       		.uleb128 0x8
 3640 0f2f 01010000 		.4byte	0x101
 3641 0f33 3E0F0000 		.4byte	0xf3e
 3642 0f37 09       		.uleb128 0x9
 3643 0f38 4C000000 		.4byte	0x4c
 3644 0f3c 04       		.byte	0x4
 3645 0f3d 00       		.byte	0
ARM GAS  /tmp/cchL5NBj.s 			page 101


 3646 0f3e 19       		.uleb128 0x19
 3647 0f3f 2E0F0000 		.4byte	0xf2e
 3648 0f43 1E       		.uleb128 0x1e
 3649 0f44 41646300 		.ascii	"Adc\000"
 3650 0f48 08       		.byte	0x8
 3651 0f49 1401     		.2byte	0x114
 3652 0f4b BA0C0000 		.4byte	0xcba
 3653 0f4f 08       		.uleb128 0x8
 3654 0f50 01010000 		.4byte	0x101
 3655 0f54 5F0F0000 		.4byte	0xf5f
 3656 0f58 09       		.uleb128 0x9
 3657 0f59 4C000000 		.4byte	0x4c
 3658 0f5d 03       		.byte	0x3
 3659 0f5e 00       		.byte	0
 3660 0f5f 08       		.uleb128 0x8
 3661 0f60 01010000 		.4byte	0x101
 3662 0f64 6F0F0000 		.4byte	0xf6f
 3663 0f68 09       		.uleb128 0x9
 3664 0f69 4C000000 		.4byte	0x4c
 3665 0f6d 0B       		.byte	0xb
 3666 0f6e 00       		.byte	0
 3667 0f6f 08       		.uleb128 0x8
 3668 0f70 01010000 		.4byte	0x101
 3669 0f74 7F0F0000 		.4byte	0xf7f
 3670 0f78 09       		.uleb128 0x9
 3671 0f79 4C000000 		.4byte	0x4c
 3672 0f7d 0A       		.byte	0xa
 3673 0f7e 00       		.byte	0
 3674 0f7f 08       		.uleb128 0x8
 3675 0f80 01010000 		.4byte	0x101
 3676 0f84 8F0F0000 		.4byte	0xf8f
 3677 0f88 09       		.uleb128 0x9
 3678 0f89 4C000000 		.4byte	0x4c
 3679 0f8d 02       		.byte	0x2
 3680 0f8e 00       		.byte	0
 3681 0f8f 1F       		.uleb128 0x1f
 3682 0f90 20       		.byte	0x20
 3683 0f91 08       		.byte	0x8
 3684 0f92 050F     		.2byte	0xf05
 3685 0f94 11100000 		.4byte	0x1011
 3686 0f98 13       		.uleb128 0x13
 3687 0f99 1C0A0000 		.4byte	.LASF221
 3688 0f9d 08       		.byte	0x8
 3689 0f9e 060F     		.2byte	0xf06
 3690 0fa0 A00C0000 		.4byte	0xca0
 3691 0fa4 02       		.byte	0x2
 3692 0fa5 23       		.byte	0x23
 3693 0fa6 00       		.uleb128 0
 3694 0fa7 13       		.uleb128 0x13
 3695 0fa8 F0060000 		.4byte	.LASF222
 3696 0fac 08       		.byte	0x8
 3697 0fad 070F     		.2byte	0xf07
 3698 0faf A00C0000 		.4byte	0xca0
 3699 0fb3 02       		.byte	0x2
 3700 0fb4 23       		.byte	0x23
 3701 0fb5 04       		.uleb128 0x4
 3702 0fb6 13       		.uleb128 0x13
ARM GAS  /tmp/cchL5NBj.s 			page 102


 3703 0fb7 2D060000 		.4byte	.LASF223
 3704 0fbb 08       		.byte	0x8
 3705 0fbc 080F     		.2byte	0xf08
 3706 0fbe A00C0000 		.4byte	0xca0
 3707 0fc2 02       		.byte	0x2
 3708 0fc3 23       		.byte	0x23
 3709 0fc4 08       		.uleb128 0x8
 3710 0fc5 13       		.uleb128 0x13
 3711 0fc6 270B0000 		.4byte	.LASF224
 3712 0fca 08       		.byte	0x8
 3713 0fcb 090F     		.2byte	0xf09
 3714 0fcd A00C0000 		.4byte	0xca0
 3715 0fd1 02       		.byte	0x2
 3716 0fd2 23       		.byte	0x23
 3717 0fd3 0C       		.uleb128 0xc
 3718 0fd4 13       		.uleb128 0x13
 3719 0fd5 F30A0000 		.4byte	.LASF225
 3720 0fd9 08       		.byte	0x8
 3721 0fda 0A0F     		.2byte	0xf0a
 3722 0fdc A00C0000 		.4byte	0xca0
 3723 0fe0 02       		.byte	0x2
 3724 0fe1 23       		.byte	0x23
 3725 0fe2 10       		.uleb128 0x10
 3726 0fe3 13       		.uleb128 0x13
 3727 0fe4 C9010000 		.4byte	.LASF226
 3728 0fe8 08       		.byte	0x8
 3729 0fe9 0B0F     		.2byte	0xf0b
 3730 0feb A00C0000 		.4byte	0xca0
 3731 0fef 02       		.byte	0x2
 3732 0ff0 23       		.byte	0x23
 3733 0ff1 14       		.uleb128 0x14
 3734 0ff2 13       		.uleb128 0x13
 3735 0ff3 8B0A0000 		.4byte	.LASF227
 3736 0ff7 08       		.byte	0x8
 3737 0ff8 0C0F     		.2byte	0xf0c
 3738 0ffa A00C0000 		.4byte	0xca0
 3739 0ffe 02       		.byte	0x2
 3740 0fff 23       		.byte	0x23
 3741 1000 18       		.uleb128 0x18
 3742 1001 13       		.uleb128 0x13
 3743 1002 000C0000 		.4byte	.LASF228
 3744 1006 08       		.byte	0x8
 3745 1007 0D0F     		.2byte	0xf0d
 3746 1009 A00C0000 		.4byte	0xca0
 3747 100d 02       		.byte	0x2
 3748 100e 23       		.byte	0x23
 3749 100f 1C       		.uleb128 0x1c
 3750 1010 00       		.byte	0
 3751 1011 05       		.uleb128 0x5
 3752 1012 78030000 		.4byte	.LASF229
 3753 1016 08       		.byte	0x8
 3754 1017 0E0F     		.2byte	0xf0e
 3755 1019 8F0F0000 		.4byte	0xf8f
 3756 101d 1F       		.uleb128 0x1f
 3757 101e 10       		.byte	0x10
 3758 101f 08       		.byte	0x8
 3759 1020 100F     		.2byte	0xf10
ARM GAS  /tmp/cchL5NBj.s 			page 103


 3760 1022 63100000 		.4byte	0x1063
 3761 1026 13       		.uleb128 0x13
 3762 1027 4C0B0000 		.4byte	.LASF230
 3763 102b 08       		.byte	0x8
 3764 102c 110F     		.2byte	0xf11
 3765 102e A00C0000 		.4byte	0xca0
 3766 1032 02       		.byte	0x2
 3767 1033 23       		.byte	0x23
 3768 1034 00       		.uleb128 0
 3769 1035 13       		.uleb128 0x13
 3770 1036 EC040000 		.4byte	.LASF231
 3771 103a 08       		.byte	0x8
 3772 103b 120F     		.2byte	0xf12
 3773 103d A00C0000 		.4byte	0xca0
 3774 1041 02       		.byte	0x2
 3775 1042 23       		.byte	0x23
 3776 1043 04       		.uleb128 0x4
 3777 1044 13       		.uleb128 0x13
 3778 1045 390B0000 		.4byte	.LASF232
 3779 1049 08       		.byte	0x8
 3780 104a 130F     		.2byte	0xf13
 3781 104c A00C0000 		.4byte	0xca0
 3782 1050 02       		.byte	0x2
 3783 1051 23       		.byte	0x23
 3784 1052 08       		.uleb128 0x8
 3785 1053 13       		.uleb128 0x13
 3786 1054 D70A0000 		.4byte	.LASF233
 3787 1058 08       		.byte	0x8
 3788 1059 140F     		.2byte	0xf14
 3789 105b A00C0000 		.4byte	0xca0
 3790 105f 02       		.byte	0x2
 3791 1060 23       		.byte	0x23
 3792 1061 0C       		.uleb128 0xc
 3793 1062 00       		.byte	0
 3794 1063 05       		.uleb128 0x5
 3795 1064 45090000 		.4byte	.LASF234
 3796 1068 08       		.byte	0x8
 3797 1069 150F     		.2byte	0xf15
 3798 106b 1D100000 		.4byte	0x101d
 3799 106f 20       		.uleb128 0x20
 3800 1070 8002     		.2byte	0x280
 3801 1072 08       		.byte	0x8
 3802 1073 170F     		.2byte	0xf17
 3803 1075 7C130000 		.4byte	0x137c
 3804 1079 13       		.uleb128 0x13
 3805 107a 11090000 		.4byte	.LASF235
 3806 107e 08       		.byte	0x8
 3807 107f 180F     		.2byte	0xf18
 3808 1081 A00C0000 		.4byte	0xca0
 3809 1085 02       		.byte	0x2
 3810 1086 23       		.byte	0x23
 3811 1087 00       		.uleb128 0
 3812 1088 13       		.uleb128 0x13
 3813 1089 C8020000 		.4byte	.LASF236
 3814 108d 08       		.byte	0x8
 3815 108e 190F     		.2byte	0xf19
 3816 1090 A00C0000 		.4byte	0xca0
ARM GAS  /tmp/cchL5NBj.s 			page 104


 3817 1094 02       		.byte	0x2
 3818 1095 23       		.byte	0x23
 3819 1096 04       		.uleb128 0x4
 3820 1097 13       		.uleb128 0x13
 3821 1098 CF0A0000 		.4byte	.LASF237
 3822 109c 08       		.byte	0x8
 3823 109d 1A0F     		.2byte	0xf1a
 3824 109f A00C0000 		.4byte	0xca0
 3825 10a3 02       		.byte	0x2
 3826 10a4 23       		.byte	0x23
 3827 10a5 08       		.uleb128 0x8
 3828 10a6 13       		.uleb128 0x13
 3829 10a7 EC030000 		.4byte	.LASF238
 3830 10ab 08       		.byte	0x8
 3831 10ac 1B0F     		.2byte	0xf1b
 3832 10ae A50C0000 		.4byte	0xca5
 3833 10b2 02       		.byte	0x2
 3834 10b3 23       		.byte	0x23
 3835 10b4 0C       		.uleb128 0xc
 3836 10b5 13       		.uleb128 0x13
 3837 10b6 4C000000 		.4byte	.LASF239
 3838 10ba 08       		.byte	0x8
 3839 10bb 1C0F     		.2byte	0xf1c
 3840 10bd A00C0000 		.4byte	0xca0
 3841 10c1 02       		.byte	0x2
 3842 10c2 23       		.byte	0x23
 3843 10c3 10       		.uleb128 0x10
 3844 10c4 13       		.uleb128 0x13
 3845 10c5 1B060000 		.4byte	.LASF240
 3846 10c9 08       		.byte	0x8
 3847 10ca 1D0F     		.2byte	0xf1d
 3848 10cc A00C0000 		.4byte	0xca0
 3849 10d0 02       		.byte	0x2
 3850 10d1 23       		.byte	0x23
 3851 10d2 14       		.uleb128 0x14
 3852 10d3 13       		.uleb128 0x13
 3853 10d4 B6030000 		.4byte	.LASF241
 3854 10d8 08       		.byte	0x8
 3855 10d9 1E0F     		.2byte	0xf1e
 3856 10db A50C0000 		.4byte	0xca5
 3857 10df 02       		.byte	0x2
 3858 10e0 23       		.byte	0x23
 3859 10e1 18       		.uleb128 0x18
 3860 10e2 13       		.uleb128 0x13
 3861 10e3 93060000 		.4byte	.LASF242
 3862 10e7 08       		.byte	0x8
 3863 10e8 1F0F     		.2byte	0xf1f
 3864 10ea A50C0000 		.4byte	0xca5
 3865 10ee 02       		.byte	0x2
 3866 10ef 23       		.byte	0x23
 3867 10f0 1C       		.uleb128 0x1c
 3868 10f1 13       		.uleb128 0x13
 3869 10f2 30080000 		.4byte	.LASF243
 3870 10f6 08       		.byte	0x8
 3871 10f7 200F     		.2byte	0xf20
 3872 10f9 A00C0000 		.4byte	0xca0
 3873 10fd 02       		.byte	0x2
ARM GAS  /tmp/cchL5NBj.s 			page 105


 3874 10fe 23       		.byte	0x23
 3875 10ff 20       		.uleb128 0x20
 3876 1100 13       		.uleb128 0x13
 3877 1101 66090000 		.4byte	.LASF192
 3878 1105 08       		.byte	0x8
 3879 1106 210F     		.2byte	0xf21
 3880 1108 7C130000 		.4byte	0x137c
 3881 110c 02       		.byte	0x2
 3882 110d 23       		.byte	0x23
 3883 110e 24       		.uleb128 0x24
 3884 110f 13       		.uleb128 0x13
 3885 1110 130C0000 		.4byte	.LASF244
 3886 1114 08       		.byte	0x8
 3887 1115 220F     		.2byte	0xf22
 3888 1117 A00C0000 		.4byte	0xca0
 3889 111b 02       		.byte	0x2
 3890 111c 23       		.byte	0x23
 3891 111d 28       		.uleb128 0x28
 3892 111e 13       		.uleb128 0x13
 3893 111f AA050000 		.4byte	.LASF245
 3894 1123 08       		.byte	0x8
 3895 1124 230F     		.2byte	0xf23
 3896 1126 A00C0000 		.4byte	0xca0
 3897 112a 02       		.byte	0x2
 3898 112b 23       		.byte	0x23
 3899 112c 2C       		.uleb128 0x2c
 3900 112d 13       		.uleb128 0x13
 3901 112e 9B030000 		.4byte	.LASF246
 3902 1132 08       		.byte	0x8
 3903 1133 240F     		.2byte	0xf24
 3904 1135 A00C0000 		.4byte	0xca0
 3905 1139 02       		.byte	0x2
 3906 113a 23       		.byte	0x23
 3907 113b 30       		.uleb128 0x30
 3908 113c 13       		.uleb128 0x13
 3909 113d 4D080000 		.4byte	.LASF247
 3910 1141 08       		.byte	0x8
 3911 1142 250F     		.2byte	0xf25
 3912 1144 A00C0000 		.4byte	0xca0
 3913 1148 02       		.byte	0x2
 3914 1149 23       		.byte	0x23
 3915 114a 34       		.uleb128 0x34
 3916 114b 13       		.uleb128 0x13
 3917 114c 24060000 		.4byte	.LASF248
 3918 1150 08       		.byte	0x8
 3919 1151 260F     		.2byte	0xf26
 3920 1153 A00C0000 		.4byte	0xca0
 3921 1157 02       		.byte	0x2
 3922 1158 23       		.byte	0x23
 3923 1159 38       		.uleb128 0x38
 3924 115a 13       		.uleb128 0x13
 3925 115b BF030000 		.4byte	.LASF249
 3926 115f 08       		.byte	0x8
 3927 1160 270F     		.2byte	0xf27
 3928 1162 A50C0000 		.4byte	0xca5
 3929 1166 02       		.byte	0x2
 3930 1167 23       		.byte	0x23
ARM GAS  /tmp/cchL5NBj.s 			page 106


 3931 1168 3C       		.uleb128 0x3c
 3932 1169 13       		.uleb128 0x13
 3933 116a 9C060000 		.4byte	.LASF250
 3934 116e 08       		.byte	0x8
 3935 116f 280F     		.2byte	0xf28
 3936 1171 A50C0000 		.4byte	0xca5
 3937 1175 02       		.byte	0x2
 3938 1176 23       		.byte	0x23
 3939 1177 40       		.uleb128 0x40
 3940 1178 13       		.uleb128 0x13
 3941 1179 68030000 		.4byte	.LASF251
 3942 117d 08       		.byte	0x8
 3943 117e 290F     		.2byte	0xf29
 3944 1180 A00C0000 		.4byte	0xca0
 3945 1184 02       		.byte	0x2
 3946 1185 23       		.byte	0x23
 3947 1186 44       		.uleb128 0x44
 3948 1187 13       		.uleb128 0x13
 3949 1188 66020000 		.4byte	.LASF252
 3950 118c 08       		.byte	0x8
 3951 118d 2A0F     		.2byte	0xf2a
 3952 118f A00C0000 		.4byte	0xca0
 3953 1193 02       		.byte	0x2
 3954 1194 23       		.byte	0x23
 3955 1195 48       		.uleb128 0x48
 3956 1196 13       		.uleb128 0x13
 3957 1197 E4040000 		.4byte	.LASF253
 3958 119b 08       		.byte	0x8
 3959 119c 2B0F     		.2byte	0xf2b
 3960 119e A00C0000 		.4byte	0xca0
 3961 11a2 02       		.byte	0x2
 3962 11a3 23       		.byte	0x23
 3963 11a4 4C       		.uleb128 0x4c
 3964 11a5 13       		.uleb128 0x13
 3965 11a6 BC040000 		.4byte	.LASF254
 3966 11aa 08       		.byte	0x8
 3967 11ab 2C0F     		.2byte	0xf2c
 3968 11ad A00C0000 		.4byte	0xca0
 3969 11b1 02       		.byte	0x2
 3970 11b2 23       		.byte	0x23
 3971 11b3 50       		.uleb128 0x50
 3972 11b4 13       		.uleb128 0x13
 3973 11b5 EB070000 		.4byte	.LASF255
 3974 11b9 08       		.byte	0x8
 3975 11ba 2D0F     		.2byte	0xf2d
 3976 11bc A00C0000 		.4byte	0xca0
 3977 11c0 02       		.byte	0x2
 3978 11c1 23       		.byte	0x23
 3979 11c2 54       		.uleb128 0x54
 3980 11c3 13       		.uleb128 0x13
 3981 11c4 47070000 		.4byte	.LASF256
 3982 11c8 08       		.byte	0x8
 3983 11c9 2E0F     		.2byte	0xf2e
 3984 11cb A00C0000 		.4byte	0xca0
 3985 11cf 02       		.byte	0x2
 3986 11d0 23       		.byte	0x23
 3987 11d1 58       		.uleb128 0x58
ARM GAS  /tmp/cchL5NBj.s 			page 107


 3988 11d2 13       		.uleb128 0x13
 3989 11d3 B4040000 		.4byte	.LASF257
 3990 11d7 08       		.byte	0x8
 3991 11d8 2F0F     		.2byte	0xf2f
 3992 11da A00C0000 		.4byte	0xca0
 3993 11de 02       		.byte	0x2
 3994 11df 23       		.byte	0x23
 3995 11e0 5C       		.uleb128 0x5c
 3996 11e1 13       		.uleb128 0x13
 3997 11e2 83070000 		.4byte	.LASF258
 3998 11e6 08       		.byte	0x8
 3999 11e7 300F     		.2byte	0xf30
 4000 11e9 A50C0000 		.4byte	0xca5
 4001 11ed 02       		.byte	0x2
 4002 11ee 23       		.byte	0x23
 4003 11ef 60       		.uleb128 0x60
 4004 11f0 13       		.uleb128 0x13
 4005 11f1 D9000000 		.4byte	.LASF259
 4006 11f5 08       		.byte	0x8
 4007 11f6 310F     		.2byte	0xf31
 4008 11f8 A00C0000 		.4byte	0xca0
 4009 11fc 02       		.byte	0x2
 4010 11fd 23       		.byte	0x23
 4011 11fe 64       		.uleb128 0x64
 4012 11ff 13       		.uleb128 0x13
 4013 1200 EE020000 		.4byte	.LASF260
 4014 1204 08       		.byte	0x8
 4015 1205 320F     		.2byte	0xf32
 4016 1207 A00C0000 		.4byte	0xca0
 4017 120b 02       		.byte	0x2
 4018 120c 23       		.byte	0x23
 4019 120d 68       		.uleb128 0x68
 4020 120e 13       		.uleb128 0x13
 4021 120f C0020000 		.4byte	.LASF261
 4022 1213 08       		.byte	0x8
 4023 1214 330F     		.2byte	0xf33
 4024 1216 A00C0000 		.4byte	0xca0
 4025 121a 02       		.byte	0x2
 4026 121b 23       		.byte	0x23
 4027 121c 6C       		.uleb128 0x6c
 4028 121d 13       		.uleb128 0x13
 4029 121e 70090000 		.4byte	.LASF198
 4030 1222 08       		.byte	0x8
 4031 1223 340F     		.2byte	0xf34
 4032 1225 81130000 		.4byte	0x1381
 4033 1229 02       		.byte	0x2
 4034 122a 23       		.byte	0x23
 4035 122b 70       		.uleb128 0x70
 4036 122c 13       		.uleb128 0x13
 4037 122d C8080000 		.4byte	.LASF262
 4038 1231 08       		.byte	0x8
 4039 1232 350F     		.2byte	0xf35
 4040 1234 86130000 		.4byte	0x1386
 4041 1238 02       		.byte	0x2
 4042 1239 23       		.byte	0x23
 4043 123a 7C       		.uleb128 0x7c
 4044 123b 13       		.uleb128 0x13
ARM GAS  /tmp/cchL5NBj.s 			page 108


 4045 123c E8000000 		.4byte	.LASF205
 4046 1240 08       		.byte	0x8
 4047 1241 360F     		.2byte	0xf36
 4048 1243 8B130000 		.4byte	0x138b
 4049 1247 03       		.byte	0x3
 4050 1248 23       		.byte	0x23
 4051 1249 8401     		.uleb128 0x84
 4052 124b 13       		.uleb128 0x13
 4053 124c 81020000 		.4byte	.LASF263
 4054 1250 08       		.byte	0x8
 4055 1251 370F     		.2byte	0xf37
 4056 1253 A00C0000 		.4byte	0xca0
 4057 1257 03       		.byte	0x3
 4058 1258 23       		.byte	0x23
 4059 1259 B001     		.uleb128 0xb0
 4060 125b 13       		.uleb128 0x13
 4061 125c 7F090000 		.4byte	.LASF207
 4062 1260 08       		.byte	0x8
 4063 1261 380F     		.2byte	0xf38
 4064 1263 90130000 		.4byte	0x1390
 4065 1267 03       		.byte	0x3
 4066 1268 23       		.byte	0x23
 4067 1269 B401     		.uleb128 0xb4
 4068 126b 13       		.uleb128 0x13
 4069 126c 52060000 		.4byte	.LASF264
 4070 1270 08       		.byte	0x8
 4071 1271 390F     		.2byte	0xf39
 4072 1273 A00C0000 		.4byte	0xca0
 4073 1277 03       		.byte	0x3
 4074 1278 23       		.byte	0x23
 4075 1279 E401     		.uleb128 0xe4
 4076 127b 13       		.uleb128 0x13
 4077 127c 71000000 		.4byte	.LASF265
 4078 1280 08       		.byte	0x8
 4079 1281 3A0F     		.2byte	0xf3a
 4080 1283 A50C0000 		.4byte	0xca5
 4081 1287 03       		.byte	0x3
 4082 1288 23       		.byte	0x23
 4083 1289 E801     		.uleb128 0xe8
 4084 128b 13       		.uleb128 0x13
 4085 128c 89090000 		.4byte	.LASF210
 4086 1290 08       		.byte	0x8
 4087 1291 3B0F     		.2byte	0xf3b
 4088 1293 95130000 		.4byte	0x1395
 4089 1297 03       		.byte	0x3
 4090 1298 23       		.byte	0x23
 4091 1299 EC01     		.uleb128 0xec
 4092 129b 13       		.uleb128 0x13
 4093 129c 770B0000 		.4byte	.LASF266
 4094 12a0 08       		.byte	0x8
 4095 12a1 3C0F     		.2byte	0xf3c
 4096 12a3 A00C0000 		.4byte	0xca0
 4097 12a7 03       		.byte	0x3
 4098 12a8 23       		.byte	0x23
 4099 12a9 8002     		.uleb128 0x100
 4100 12ab 13       		.uleb128 0x13
 4101 12ac 01060000 		.4byte	.LASF267
ARM GAS  /tmp/cchL5NBj.s 			page 109


 4102 12b0 08       		.byte	0x8
 4103 12b1 3D0F     		.2byte	0xf3d
 4104 12b3 A00C0000 		.4byte	0xca0
 4105 12b7 03       		.byte	0x3
 4106 12b8 23       		.byte	0x23
 4107 12b9 8402     		.uleb128 0x104
 4108 12bb 13       		.uleb128 0x13
 4109 12bc D6030000 		.4byte	.LASF268
 4110 12c0 08       		.byte	0x8
 4111 12c1 3E0F     		.2byte	0xf3e
 4112 12c3 A00C0000 		.4byte	0xca0
 4113 12c7 03       		.byte	0x3
 4114 12c8 23       		.byte	0x23
 4115 12c9 8802     		.uleb128 0x108
 4116 12cb 13       		.uleb128 0x13
 4117 12cc C5000000 		.4byte	.LASF269
 4118 12d0 08       		.byte	0x8
 4119 12d1 3F0F     		.2byte	0xf3f
 4120 12d3 A00C0000 		.4byte	0xca0
 4121 12d7 03       		.byte	0x3
 4122 12d8 23       		.byte	0x23
 4123 12d9 8C02     		.uleb128 0x10c
 4124 12db 13       		.uleb128 0x13
 4125 12dc 21000000 		.4byte	.LASF270
 4126 12e0 08       		.byte	0x8
 4127 12e1 400F     		.2byte	0xf40
 4128 12e3 A00C0000 		.4byte	0xca0
 4129 12e7 03       		.byte	0x3
 4130 12e8 23       		.byte	0x23
 4131 12e9 9002     		.uleb128 0x110
 4132 12eb 13       		.uleb128 0x13
 4133 12ec 33010000 		.4byte	.LASF271
 4134 12f0 08       		.byte	0x8
 4135 12f1 410F     		.2byte	0xf41
 4136 12f3 A00C0000 		.4byte	0xca0
 4137 12f7 03       		.byte	0x3
 4138 12f8 23       		.byte	0x23
 4139 12f9 9402     		.uleb128 0x114
 4140 12fb 13       		.uleb128 0x13
 4141 12fc 5F030000 		.4byte	.LASF272
 4142 1300 08       		.byte	0x8
 4143 1301 420F     		.2byte	0xf42
 4144 1303 A00C0000 		.4byte	0xca0
 4145 1307 03       		.byte	0x3
 4146 1308 23       		.byte	0x23
 4147 1309 9802     		.uleb128 0x118
 4148 130b 13       		.uleb128 0x13
 4149 130c 31050000 		.4byte	.LASF273
 4150 1310 08       		.byte	0x8
 4151 1311 430F     		.2byte	0xf43
 4152 1313 A00C0000 		.4byte	0xca0
 4153 1317 03       		.byte	0x3
 4154 1318 23       		.byte	0x23
 4155 1319 9C02     		.uleb128 0x11c
 4156 131b 13       		.uleb128 0x13
 4157 131c BD090000 		.4byte	.LASF274
 4158 1320 08       		.byte	0x8
ARM GAS  /tmp/cchL5NBj.s 			page 110


 4159 1321 440F     		.2byte	0xf44
 4160 1323 A00C0000 		.4byte	0xca0
 4161 1327 03       		.byte	0x3
 4162 1328 23       		.byte	0x23
 4163 1329 A002     		.uleb128 0x120
 4164 132b 13       		.uleb128 0x13
 4165 132c AD030000 		.4byte	.LASF275
 4166 1330 08       		.byte	0x8
 4167 1331 450F     		.2byte	0xf45
 4168 1333 A50C0000 		.4byte	0xca5
 4169 1337 03       		.byte	0x3
 4170 1338 23       		.byte	0x23
 4171 1339 A402     		.uleb128 0x124
 4172 133b 13       		.uleb128 0x13
 4173 133c 93090000 		.4byte	.LASF276
 4174 1340 08       		.byte	0x8
 4175 1341 460F     		.2byte	0xf46
 4176 1343 9A130000 		.4byte	0x139a
 4177 1347 03       		.byte	0x3
 4178 1348 23       		.byte	0x23
 4179 1349 A802     		.uleb128 0x128
 4180 134b 13       		.uleb128 0x13
 4181 134c 140A0000 		.4byte	.LASF277
 4182 1350 08       		.byte	0x8
 4183 1351 470F     		.2byte	0xf47
 4184 1353 9F130000 		.4byte	0x139f
 4185 1357 03       		.byte	0x3
 4186 1358 23       		.byte	0x23
 4187 1359 B002     		.uleb128 0x130
 4188 135b 13       		.uleb128 0x13
 4189 135c F2000000 		.4byte	.LASF278
 4190 1360 08       		.byte	0x8
 4191 1361 480F     		.2byte	0xf48
 4192 1363 BF130000 		.4byte	0x13bf
 4193 1367 03       		.byte	0x3
 4194 1368 23       		.byte	0x23
 4195 1369 B003     		.uleb128 0x1b0
 4196 136b 13       		.uleb128 0x13
 4197 136c 5B060000 		.4byte	.LASF279
 4198 1370 08       		.byte	0x8
 4199 1371 490F     		.2byte	0xf49
 4200 1373 C4130000 		.4byte	0x13c4
 4201 1377 03       		.byte	0x3
 4202 1378 23       		.byte	0x23
 4203 1379 8004     		.uleb128 0x200
 4204 137b 00       		.byte	0
 4205 137c 19       		.uleb128 0x19
 4206 137d E00E0000 		.4byte	0xee0
 4207 1381 19       		.uleb128 0x19
 4208 1382 7F0F0000 		.4byte	0xf7f
 4209 1386 19       		.uleb128 0x19
 4210 1387 F50E0000 		.4byte	0xef5
 4211 138b 19       		.uleb128 0x19
 4212 138c 6F0F0000 		.4byte	0xf6f
 4213 1390 19       		.uleb128 0x19
 4214 1391 5F0F0000 		.4byte	0xf5f
 4215 1395 19       		.uleb128 0x19
ARM GAS  /tmp/cchL5NBj.s 			page 111


 4216 1396 2E0F0000 		.4byte	0xf2e
 4217 139a 19       		.uleb128 0x19
 4218 139b F50E0000 		.4byte	0xef5
 4219 139f 08       		.uleb128 0x8
 4220 13a0 63100000 		.4byte	0x1063
 4221 13a4 AF130000 		.4byte	0x13af
 4222 13a8 09       		.uleb128 0x9
 4223 13a9 4C000000 		.4byte	0x4c
 4224 13ad 07       		.byte	0x7
 4225 13ae 00       		.byte	0
 4226 13af 08       		.uleb128 0x8
 4227 13b0 01010000 		.4byte	0x101
 4228 13b4 BF130000 		.4byte	0x13bf
 4229 13b8 09       		.uleb128 0x9
 4230 13b9 4C000000 		.4byte	0x4c
 4231 13bd 13       		.byte	0x13
 4232 13be 00       		.byte	0
 4233 13bf 19       		.uleb128 0x19
 4234 13c0 AF130000 		.4byte	0x13af
 4235 13c4 08       		.uleb128 0x8
 4236 13c5 11100000 		.4byte	0x1011
 4237 13c9 D4130000 		.4byte	0x13d4
 4238 13cd 09       		.uleb128 0x9
 4239 13ce 4C000000 		.4byte	0x4c
 4240 13d2 03       		.byte	0x3
 4241 13d3 00       		.byte	0
 4242 13d4 1E       		.uleb128 0x1e
 4243 13d5 50776D00 		.ascii	"Pwm\000"
 4244 13d9 08       		.byte	0x8
 4245 13da 4A0F     		.2byte	0xf4a
 4246 13dc 6F100000 		.4byte	0x106f
 4247 13e0 1F       		.uleb128 0x1f
 4248 13e1 40       		.byte	0x40
 4249 13e2 08       		.byte	0x8
 4250 13e3 4B15     		.2byte	0x154b
 4251 13e5 AD140000 		.4byte	0x14ad
 4252 13e9 13       		.uleb128 0x13
 4253 13ea 95010000 		.4byte	.LASF280
 4254 13ee 08       		.byte	0x8
 4255 13ef 4C15     		.2byte	0x154c
 4256 13f1 A00C0000 		.4byte	0xca0
 4257 13f5 02       		.byte	0x2
 4258 13f6 23       		.byte	0x23
 4259 13f7 00       		.uleb128 0
 4260 13f8 13       		.uleb128 0x13
 4261 13f9 D8050000 		.4byte	.LASF281
 4262 13fd 08       		.byte	0x8
 4263 13fe 4D15     		.2byte	0x154d
 4264 1400 A00C0000 		.4byte	0xca0
 4265 1404 02       		.byte	0x2
 4266 1405 23       		.byte	0x23
 4267 1406 04       		.uleb128 0x4
 4268 1407 13       		.uleb128 0x13
 4269 1408 660B0000 		.4byte	.LASF282
 4270 140c 08       		.byte	0x8
 4271 140d 4E15     		.2byte	0x154e
 4272 140f A00C0000 		.4byte	0xca0
ARM GAS  /tmp/cchL5NBj.s 			page 112


 4273 1413 02       		.byte	0x2
 4274 1414 23       		.byte	0x23
 4275 1415 08       		.uleb128 0x8
 4276 1416 13       		.uleb128 0x13
 4277 1417 66090000 		.4byte	.LASF192
 4278 141b 08       		.byte	0x8
 4279 141c 4F15     		.2byte	0x154f
 4280 141e AD140000 		.4byte	0x14ad
 4281 1422 02       		.byte	0x2
 4282 1423 23       		.byte	0x23
 4283 1424 0C       		.uleb128 0xc
 4284 1425 13       		.uleb128 0x13
 4285 1426 B7090000 		.4byte	.LASF283
 4286 142a 08       		.byte	0x8
 4287 142b 5015     		.2byte	0x1550
 4288 142d A00C0000 		.4byte	0xca0
 4289 1431 02       		.byte	0x2
 4290 1432 23       		.byte	0x23
 4291 1433 10       		.uleb128 0x10
 4292 1434 13       		.uleb128 0x13
 4293 1435 17030000 		.4byte	.LASF284
 4294 1439 08       		.byte	0x8
 4295 143a 5115     		.2byte	0x1551
 4296 143c A00C0000 		.4byte	0xca0
 4297 1440 02       		.byte	0x2
 4298 1441 23       		.byte	0x23
 4299 1442 14       		.uleb128 0x14
 4300 1443 13       		.uleb128 0x13
 4301 1444 1D030000 		.4byte	.LASF285
 4302 1448 08       		.byte	0x8
 4303 1449 5215     		.2byte	0x1552
 4304 144b A00C0000 		.4byte	0xca0
 4305 144f 02       		.byte	0x2
 4306 1450 23       		.byte	0x23
 4307 1451 18       		.uleb128 0x18
 4308 1452 13       		.uleb128 0x13
 4309 1453 23030000 		.4byte	.LASF286
 4310 1457 08       		.byte	0x8
 4311 1458 5315     		.2byte	0x1553
 4312 145a A00C0000 		.4byte	0xca0
 4313 145e 02       		.byte	0x2
 4314 145f 23       		.byte	0x23
 4315 1460 1C       		.uleb128 0x1c
 4316 1461 13       		.uleb128 0x13
 4317 1462 A7030000 		.4byte	.LASF287
 4318 1466 08       		.byte	0x8
 4319 1467 5415     		.2byte	0x1554
 4320 1469 A00C0000 		.4byte	0xca0
 4321 146d 02       		.byte	0x2
 4322 146e 23       		.byte	0x23
 4323 146f 20       		.uleb128 0x20
 4324 1470 13       		.uleb128 0x13
 4325 1471 0F050000 		.4byte	.LASF288
 4326 1475 08       		.byte	0x8
 4327 1476 5515     		.2byte	0x1555
 4328 1478 A00C0000 		.4byte	0xca0
 4329 147c 02       		.byte	0x2
ARM GAS  /tmp/cchL5NBj.s 			page 113


 4330 147d 23       		.byte	0x23
 4331 147e 24       		.uleb128 0x24
 4332 147f 13       		.uleb128 0x13
 4333 1480 52040000 		.4byte	.LASF289
 4334 1484 08       		.byte	0x8
 4335 1485 5615     		.2byte	0x1556
 4336 1487 A00C0000 		.4byte	0xca0
 4337 148b 02       		.byte	0x2
 4338 148c 23       		.byte	0x23
 4339 148d 28       		.uleb128 0x28
 4340 148e 13       		.uleb128 0x13
 4341 148f 12080000 		.4byte	.LASF290
 4342 1493 08       		.byte	0x8
 4343 1494 5715     		.2byte	0x1557
 4344 1496 A00C0000 		.4byte	0xca0
 4345 149a 02       		.byte	0x2
 4346 149b 23       		.byte	0x23
 4347 149c 2C       		.uleb128 0x2c
 4348 149d 13       		.uleb128 0x13
 4349 149e 70090000 		.4byte	.LASF198
 4350 14a2 08       		.byte	0x8
 4351 14a3 5815     		.2byte	0x1558
 4352 14a5 B2140000 		.4byte	0x14b2
 4353 14a9 02       		.byte	0x2
 4354 14aa 23       		.byte	0x23
 4355 14ab 30       		.uleb128 0x30
 4356 14ac 00       		.byte	0
 4357 14ad 19       		.uleb128 0x19
 4358 14ae E00E0000 		.4byte	0xee0
 4359 14b2 19       		.uleb128 0x19
 4360 14b3 4F0F0000 		.4byte	0xf4f
 4361 14b7 05       		.uleb128 0x5
 4362 14b8 77020000 		.4byte	.LASF291
 4363 14bc 08       		.byte	0x8
 4364 14bd 5915     		.2byte	0x1559
 4365 14bf E0130000 		.4byte	0x13e0
 4366 14c3 1F       		.uleb128 0x1f
 4367 14c4 E8       		.byte	0xe8
 4368 14c5 08       		.byte	0x8
 4369 14c6 5B15     		.2byte	0x155b
 4370 14c8 6C150000 		.4byte	0x156c
 4371 14cc 13       		.uleb128 0x13
 4372 14cd 42010000 		.4byte	.LASF292
 4373 14d1 08       		.byte	0x8
 4374 14d2 5C15     		.2byte	0x155c
 4375 14d4 6C150000 		.4byte	0x156c
 4376 14d8 02       		.byte	0x2
 4377 14d9 23       		.byte	0x23
 4378 14da 00       		.uleb128 0
 4379 14db 13       		.uleb128 0x13
 4380 14dc C70B0000 		.4byte	.LASF293
 4381 14e0 08       		.byte	0x8
 4382 14e1 5D15     		.2byte	0x155d
 4383 14e3 A00C0000 		.4byte	0xca0
 4384 14e7 03       		.byte	0x3
 4385 14e8 23       		.byte	0x23
 4386 14e9 C001     		.uleb128 0xc0
ARM GAS  /tmp/cchL5NBj.s 			page 114


 4387 14eb 13       		.uleb128 0x13
 4388 14ec 43030000 		.4byte	.LASF294
 4389 14f0 08       		.byte	0x8
 4390 14f1 5E15     		.2byte	0x155e
 4391 14f3 A00C0000 		.4byte	0xca0
 4392 14f7 03       		.byte	0x3
 4393 14f8 23       		.byte	0x23
 4394 14f9 C401     		.uleb128 0xc4
 4395 14fb 13       		.uleb128 0x13
 4396 14fc 620A0000 		.4byte	.LASF295
 4397 1500 08       		.byte	0x8
 4398 1501 5F15     		.2byte	0x155f
 4399 1503 A00C0000 		.4byte	0xca0
 4400 1507 03       		.byte	0x3
 4401 1508 23       		.byte	0x23
 4402 1509 C801     		.uleb128 0xc8
 4403 150b 13       		.uleb128 0x13
 4404 150c 0C0A0000 		.4byte	.LASF296
 4405 1510 08       		.byte	0x8
 4406 1511 6015     		.2byte	0x1560
 4407 1513 A00C0000 		.4byte	0xca0
 4408 1517 03       		.byte	0x3
 4409 1518 23       		.byte	0x23
 4410 1519 CC01     		.uleb128 0xcc
 4411 151b 13       		.uleb128 0x13
 4412 151c 22010000 		.4byte	.LASF297
 4413 1520 08       		.byte	0x8
 4414 1521 6115     		.2byte	0x1561
 4415 1523 A50C0000 		.4byte	0xca5
 4416 1527 03       		.byte	0x3
 4417 1528 23       		.byte	0x23
 4418 1529 D001     		.uleb128 0xd0
 4419 152b 13       		.uleb128 0x13
 4420 152c 70030000 		.4byte	.LASF298
 4421 1530 08       		.byte	0x8
 4422 1531 6215     		.2byte	0x1562
 4423 1533 A50C0000 		.4byte	0xca5
 4424 1537 03       		.byte	0x3
 4425 1538 23       		.byte	0x23
 4426 1539 D401     		.uleb128 0xd4
 4427 153b 13       		.uleb128 0x13
 4428 153c E1000000 		.4byte	.LASF299
 4429 1540 08       		.byte	0x8
 4430 1541 6315     		.2byte	0x1563
 4431 1543 A00C0000 		.4byte	0xca0
 4432 1547 03       		.byte	0x3
 4433 1548 23       		.byte	0x23
 4434 1549 D801     		.uleb128 0xd8
 4435 154b 13       		.uleb128 0x13
 4436 154c 66090000 		.4byte	.LASF192
 4437 1550 08       		.byte	0x8
 4438 1551 6415     		.2byte	0x1564
 4439 1553 7C150000 		.4byte	0x157c
 4440 1557 03       		.byte	0x3
 4441 1558 23       		.byte	0x23
 4442 1559 DC01     		.uleb128 0xdc
 4443 155b 13       		.uleb128 0x13
ARM GAS  /tmp/cchL5NBj.s 			page 115


 4444 155c C70A0000 		.4byte	.LASF300
 4445 1560 08       		.byte	0x8
 4446 1561 6515     		.2byte	0x1565
 4447 1563 A00C0000 		.4byte	0xca0
 4448 1567 03       		.byte	0x3
 4449 1568 23       		.byte	0x23
 4450 1569 E401     		.uleb128 0xe4
 4451 156b 00       		.byte	0
 4452 156c 08       		.uleb128 0x8
 4453 156d B7140000 		.4byte	0x14b7
 4454 1571 7C150000 		.4byte	0x157c
 4455 1575 09       		.uleb128 0x9
 4456 1576 4C000000 		.4byte	0x4c
 4457 157a 02       		.byte	0x2
 4458 157b 00       		.byte	0
 4459 157c 19       		.uleb128 0x19
 4460 157d F50E0000 		.4byte	0xef5
 4461 1581 1E       		.uleb128 0x1e
 4462 1582 546300   		.ascii	"Tc\000"
 4463 1585 08       		.byte	0x8
 4464 1586 6615     		.2byte	0x1566
 4465 1588 C3140000 		.4byte	0x14c3
 4466 158c 1F       		.uleb128 0x1f
 4467 158d 0C       		.byte	0xc
 4468 158e 08       		.byte	0x8
 4469 158f 7C19     		.2byte	0x197c
 4470 1591 C3150000 		.4byte	0x15c3
 4471 1595 13       		.uleb128 0x13
 4472 1596 F6020000 		.4byte	.LASF301
 4473 159a 08       		.byte	0x8
 4474 159b 7D19     		.2byte	0x197d
 4475 159d A00C0000 		.4byte	0xca0
 4476 15a1 02       		.byte	0x2
 4477 15a2 23       		.byte	0x23
 4478 15a3 00       		.uleb128 0
 4479 15a4 13       		.uleb128 0x13
 4480 15a5 19070000 		.4byte	.LASF302
 4481 15a9 08       		.byte	0x8
 4482 15aa 7E19     		.2byte	0x197e
 4483 15ac A00C0000 		.4byte	0xca0
 4484 15b0 02       		.byte	0x2
 4485 15b1 23       		.byte	0x23
 4486 15b2 04       		.uleb128 0x4
 4487 15b3 13       		.uleb128 0x13
 4488 15b4 A6090000 		.4byte	.LASF303
 4489 15b8 08       		.byte	0x8
 4490 15b9 7F19     		.2byte	0x197f
 4491 15bb A50C0000 		.4byte	0xca5
 4492 15bf 02       		.byte	0x2
 4493 15c0 23       		.byte	0x23
 4494 15c1 08       		.uleb128 0x8
 4495 15c2 00       		.byte	0
 4496 15c3 1E       		.uleb128 0x1e
 4497 15c4 57647400 		.ascii	"Wdt\000"
 4498 15c8 08       		.byte	0x8
 4499 15c9 8019     		.2byte	0x1980
 4500 15cb 8C150000 		.4byte	0x158c
ARM GAS  /tmp/cchL5NBj.s 			page 116


 4501 15cf 04       		.uleb128 0x4
 4502 15d0 8B050000 		.4byte	.LASF304
 4503 15d4 09       		.byte	0x9
 4504 15d5 10       		.byte	0x10
 4505 15d6 AE080000 		.4byte	0x8ae
 4506 15da 21       		.uleb128 0x21
 4507 15db 01       		.byte	0x1
 4508 15dc 09       		.byte	0x9
 4509 15dd 12       		.byte	0x12
 4510 15de FB150000 		.4byte	0x15fb
 4511 15e2 22       		.uleb128 0x22
 4512 15e3 4F464600 		.ascii	"OFF\000"
 4513 15e7 00       		.sleb128 0
 4514 15e8 1B       		.uleb128 0x1b
 4515 15e9 9B070000 		.4byte	.LASF305
 4516 15ed 01       		.sleb128 1
 4517 15ee 1B       		.uleb128 0x1b
 4518 15ef 90010000 		.4byte	.LASF306
 4519 15f3 02       		.sleb128 2
 4520 15f4 1B       		.uleb128 0x1b
 4521 15f5 E3060000 		.4byte	.LASF307
 4522 15f9 03       		.sleb128 3
 4523 15fa 00       		.byte	0
 4524 15fb 04       		.uleb128 0x4
 4525 15fc 88060000 		.4byte	.LASF308
 4526 1600 09       		.byte	0x9
 4527 1601 12       		.byte	0x12
 4528 1602 DA150000 		.4byte	0x15da
 4529 1606 0D       		.uleb128 0xd
 4530 1607 D5020000 		.4byte	.LASF309
 4531 160b 2C       		.byte	0x2c
 4532 160c 09       		.byte	0x9
 4533 160d 15       		.byte	0x15
 4534 160e D1160000 		.4byte	0x16d1
 4535 1612 0B       		.uleb128 0xb
 4536 1613 4C0A0000 		.4byte	.LASF310
 4537 1617 09       		.byte	0x9
 4538 1618 16       		.byte	0x16
 4539 1619 FB150000 		.4byte	0x15fb
 4540 161d 02       		.byte	0x2
 4541 161e 23       		.byte	0x23
 4542 161f 00       		.uleb128 0
 4543 1620 0E       		.uleb128 0xe
 4544 1621 535000   		.ascii	"SP\000"
 4545 1624 09       		.byte	0x9
 4546 1625 17       		.byte	0x17
 4547 1626 CF150000 		.4byte	0x15cf
 4548 162a 02       		.byte	0x2
 4549 162b 23       		.byte	0x23
 4550 162c 02       		.uleb128 0x2
 4551 162d 0E       		.uleb128 0xe
 4552 162e 72535000 		.ascii	"rSP\000"
 4553 1632 09       		.byte	0x9
 4554 1633 18       		.byte	0x18
 4555 1634 CF150000 		.4byte	0x15cf
 4556 1638 02       		.byte	0x2
 4557 1639 23       		.byte	0x23
ARM GAS  /tmp/cchL5NBj.s 			page 117


 4558 163a 04       		.uleb128 0x4
 4559 163b 0B       		.uleb128 0xb
 4560 163c 89030000 		.4byte	.LASF311
 4561 1640 09       		.byte	0x9
 4562 1641 19       		.byte	0x19
 4563 1642 45000000 		.4byte	0x45
 4564 1646 02       		.byte	0x2
 4565 1647 23       		.byte	0x23
 4566 1648 08       		.uleb128 0x8
 4567 1649 0E       		.uleb128 0xe
 4568 164a 4B7000   		.ascii	"Kp\000"
 4569 164d 09       		.byte	0x9
 4570 164e 1B       		.byte	0x1b
 4571 164f CF150000 		.4byte	0x15cf
 4572 1653 02       		.byte	0x2
 4573 1654 23       		.byte	0x23
 4574 1655 0C       		.uleb128 0xc
 4575 1656 0E       		.uleb128 0xe
 4576 1657 4B6900   		.ascii	"Ki\000"
 4577 165a 09       		.byte	0x9
 4578 165b 1C       		.byte	0x1c
 4579 165c CF150000 		.4byte	0x15cf
 4580 1660 02       		.byte	0x2
 4581 1661 23       		.byte	0x23
 4582 1662 0E       		.uleb128 0xe
 4583 1663 0E       		.uleb128 0xe
 4584 1664 4B6400   		.ascii	"Kd\000"
 4585 1667 09       		.byte	0x9
 4586 1668 1D       		.byte	0x1d
 4587 1669 CF150000 		.4byte	0x15cf
 4588 166d 02       		.byte	0x2
 4589 166e 23       		.byte	0x23
 4590 166f 10       		.uleb128 0x10
 4591 1670 0E       		.uleb128 0xe
 4592 1671 5F6500   		.ascii	"_e\000"
 4593 1674 09       		.byte	0x9
 4594 1675 1F       		.byte	0x1f
 4595 1676 45000000 		.4byte	0x45
 4596 167a 02       		.byte	0x2
 4597 167b 23       		.byte	0x23
 4598 167c 14       		.uleb128 0x14
 4599 167d 0E       		.uleb128 0xe
 4600 167e 5F647800 		.ascii	"_dx\000"
 4601 1682 09       		.byte	0x9
 4602 1683 20       		.byte	0x20
 4603 1684 45000000 		.4byte	0x45
 4604 1688 02       		.byte	0x2
 4605 1689 23       		.byte	0x23
 4606 168a 18       		.uleb128 0x18
 4607 168b 0E       		.uleb128 0xe
 4608 168c 5F646500 		.ascii	"_de\000"
 4609 1690 09       		.byte	0x9
 4610 1691 21       		.byte	0x21
 4611 1692 45000000 		.4byte	0x45
 4612 1696 02       		.byte	0x2
 4613 1697 23       		.byte	0x23
 4614 1698 1C       		.uleb128 0x1c
ARM GAS  /tmp/cchL5NBj.s 			page 118


 4615 1699 0B       		.uleb128 0xb
 4616 169a DE060000 		.4byte	.LASF312
 4617 169e 09       		.byte	0x9
 4618 169f 22       		.byte	0x22
 4619 16a0 45000000 		.4byte	0x45
 4620 16a4 02       		.byte	0x2
 4621 16a5 23       		.byte	0x23
 4622 16a6 20       		.uleb128 0x20
 4623 16a7 0E       		.uleb128 0xe
 4624 16a8 5F7800   		.ascii	"_x\000"
 4625 16ab 09       		.byte	0x9
 4626 16ac 23       		.byte	0x23
 4627 16ad CF150000 		.4byte	0x15cf
 4628 16b1 02       		.byte	0x2
 4629 16b2 23       		.byte	0x23
 4630 16b3 24       		.uleb128 0x24
 4631 16b4 0B       		.uleb128 0xb
 4632 16b5 33030000 		.4byte	.LASF313
 4633 16b9 09       		.byte	0x9
 4634 16ba 25       		.byte	0x25
 4635 16bb 37000000 		.4byte	0x37
 4636 16bf 02       		.byte	0x2
 4637 16c0 23       		.byte	0x23
 4638 16c1 26       		.uleb128 0x26
 4639 16c2 0B       		.uleb128 0xb
 4640 16c3 70010000 		.4byte	.LASF314
 4641 16c7 09       		.byte	0x9
 4642 16c8 27       		.byte	0x27
 4643 16c9 15170000 		.4byte	0x1715
 4644 16cd 02       		.byte	0x2
 4645 16ce 23       		.byte	0x23
 4646 16cf 28       		.uleb128 0x28
 4647 16d0 00       		.byte	0
 4648 16d1 0D       		.uleb128 0xd
 4649 16d2 76050000 		.4byte	.LASF315
 4650 16d6 10       		.byte	0x10
 4651 16d7 09       		.byte	0x9
 4652 16d8 2B       		.byte	0x2b
 4653 16d9 15170000 		.4byte	0x1715
 4654 16dd 0B       		.uleb128 0xb
 4655 16de DE030000 		.4byte	.LASF316
 4656 16e2 09       		.byte	0x9
 4657 16e3 2C       		.byte	0x2c
 4658 16e4 1B170000 		.4byte	0x171b
 4659 16e8 02       		.byte	0x2
 4660 16e9 23       		.byte	0x23
 4661 16ea 00       		.uleb128 0
 4662 16eb 0B       		.uleb128 0xb
 4663 16ec 33030000 		.4byte	.LASF313
 4664 16f0 09       		.byte	0x9
 4665 16f1 2D       		.byte	0x2d
 4666 16f2 45000000 		.4byte	0x45
 4667 16f6 02       		.byte	0x2
 4668 16f7 23       		.byte	0x23
 4669 16f8 04       		.uleb128 0x4
 4670 16f9 0E       		.uleb128 0xe
 4671 16fa 6F6E00   		.ascii	"on\000"
ARM GAS  /tmp/cchL5NBj.s 			page 119


 4672 16fd 09       		.byte	0x9
 4673 16fe 2E       		.byte	0x2e
 4674 16ff 45000000 		.4byte	0x45
 4675 1703 02       		.byte	0x2
 4676 1704 23       		.byte	0x23
 4677 1705 08       		.uleb128 0x8
 4678 1706 0E       		.uleb128 0xe
 4679 1707 6F666600 		.ascii	"off\000"
 4680 170b 09       		.byte	0x9
 4681 170c 2F       		.byte	0x2f
 4682 170d 45000000 		.4byte	0x45
 4683 1711 02       		.byte	0x2
 4684 1712 23       		.byte	0x23
 4685 1713 0C       		.uleb128 0xc
 4686 1714 00       		.byte	0
 4687 1715 0F       		.uleb128 0xf
 4688 1716 04       		.byte	0x4
 4689 1717 D1160000 		.4byte	0x16d1
 4690 171b 0F       		.uleb128 0xf
 4691 171c 04       		.byte	0x4
 4692 171d 45000000 		.4byte	0x45
 4693 1721 23       		.uleb128 0x23
 4694 1722 09000000 		.4byte	.LASF317
 4695 1726 01       		.byte	0x1
 4696 1727 DE05     		.2byte	0x5de
 4697 1729 01       		.byte	0x1
 4698 172a 00000000 		.4byte	.LFB14
 4699 172e 36000000 		.4byte	.LFE14
 4700 1732 00000000 		.4byte	.LLST0
 4701 1736 4A170000 		.4byte	0x174a
 4702 173a 24       		.uleb128 0x24
 4703 173b FA010000 		.4byte	.LASF319
 4704 173f 01       		.byte	0x1
 4705 1740 DE05     		.2byte	0x5de
 4706 1742 D0090000 		.4byte	0x9d0
 4707 1746 02       		.byte	0x2
 4708 1747 91       		.byte	0x91
 4709 1748 77       		.sleb128 -9
 4710 1749 00       		.byte	0
 4711 174a 23       		.uleb128 0x23
 4712 174b 11020000 		.4byte	.LASF318
 4713 174f 01       		.byte	0x1
 4714 1750 3206     		.2byte	0x632
 4715 1752 01       		.byte	0x1
 4716 1753 00000000 		.4byte	.LFB20
 4717 1757 5C000000 		.4byte	.LFE20
 4718 175b 38000000 		.4byte	.LLST1
 4719 175f 82170000 		.4byte	0x1782
 4720 1763 24       		.uleb128 0x24
 4721 1764 FA010000 		.4byte	.LASF319
 4722 1768 01       		.byte	0x1
 4723 1769 3206     		.2byte	0x632
 4724 176b D0090000 		.4byte	0x9d0
 4725 176f 02       		.byte	0x2
 4726 1770 91       		.byte	0x91
 4727 1771 77       		.sleb128 -9
 4728 1772 24       		.uleb128 0x24
ARM GAS  /tmp/cchL5NBj.s 			page 120


 4729 1773 510A0000 		.4byte	.LASF320
 4730 1777 01       		.byte	0x1
 4731 1778 3206     		.2byte	0x632
 4732 177a B9080000 		.4byte	0x8b9
 4733 177e 02       		.byte	0x2
 4734 177f 91       		.byte	0x91
 4735 1780 70       		.sleb128 -16
 4736 1781 00       		.byte	0
 4737 1782 25       		.uleb128 0x25
 4738 1783 01       		.byte	0x1
 4739 1784 F5010000 		.4byte	.LASF321
 4740 1788 02       		.byte	0x2
 4741 1789 24       		.byte	0x24
 4742 178a 45000000 		.4byte	0x45
 4743 178e 00000000 		.4byte	.LFB35
 4744 1792 5C020000 		.4byte	.LFE35
 4745 1796 70000000 		.4byte	.LLST2
 4746 179a AD170000 		.4byte	0x17ad
 4747 179e 26       		.uleb128 0x26
 4748 179f 6D020000 		.4byte	.LASF323
 4749 17a3 02       		.byte	0x2
 4750 17a4 26       		.byte	0x26
 4751 17a5 B9080000 		.4byte	0x8b9
 4752 17a9 02       		.byte	0x2
 4753 17aa 91       		.byte	0x91
 4754 17ab 74       		.sleb128 -12
 4755 17ac 00       		.byte	0
 4756 17ad 27       		.uleb128 0x27
 4757 17ae 01       		.byte	0x1
 4758 17af 94080000 		.4byte	.LASF343
 4759 17b3 02       		.byte	0x2
 4760 17b4 64       		.byte	0x64
 4761 17b5 01       		.byte	0x1
 4762 17b6 00000000 		.4byte	.LFB36
 4763 17ba 2C000000 		.4byte	.LFE36
 4764 17be A8000000 		.4byte	.LLST3
 4765 17c2 28       		.uleb128 0x28
 4766 17c3 01       		.byte	0x1
 4767 17c4 6C040000 		.4byte	.LASF322
 4768 17c8 02       		.byte	0x2
 4769 17c9 6A       		.byte	0x6a
 4770 17ca 01       		.byte	0x1
 4771 17cb 00000000 		.4byte	.LFB37
 4772 17cf 42010000 		.4byte	.LFE37
 4773 17d3 D4000000 		.4byte	.LLST4
 4774 17d7 F8170000 		.4byte	0x17f8
 4775 17db 26       		.uleb128 0x26
 4776 17dc 120B0000 		.4byte	.LASF324
 4777 17e0 02       		.byte	0x2
 4778 17e1 6D       		.byte	0x6d
 4779 17e2 B9080000 		.4byte	0x8b9
 4780 17e6 02       		.byte	0x2
 4781 17e7 91       		.byte	0x91
 4782 17e8 70       		.sleb128 -16
 4783 17e9 26       		.uleb128 0x26
 4784 17ea 37000000 		.4byte	.LASF325
 4785 17ee 02       		.byte	0x2
ARM GAS  /tmp/cchL5NBj.s 			page 121


 4786 17ef 6E       		.byte	0x6e
 4787 17f0 B9080000 		.4byte	0x8b9
 4788 17f4 02       		.byte	0x2
 4789 17f5 91       		.byte	0x91
 4790 17f6 74       		.sleb128 -12
 4791 17f7 00       		.byte	0
 4792 17f8 29       		.uleb128 0x29
 4793 17f9 55090000 		.4byte	.LASF328
 4794 17fd 02       		.byte	0x2
 4795 17fe 86       		.byte	0x86
 4796 17ff 00000000 		.4byte	.LFB38
 4797 1803 4C020000 		.4byte	.LFE38
 4798 1807 0C010000 		.4byte	.LLST5
 4799 180b 36180000 		.4byte	0x1836
 4800 180f 2A       		.uleb128 0x2a
 4801 1810 64697600 		.ascii	"div\000"
 4802 1814 02       		.byte	0x2
 4803 1815 88       		.byte	0x88
 4804 1816 B9080000 		.4byte	0x8b9
 4805 181a 02       		.byte	0x2
 4806 181b 91       		.byte	0x91
 4807 181c 6C       		.sleb128 -20
 4808 181d 26       		.uleb128 0x26
 4809 181e E8080000 		.4byte	.LASF326
 4810 1822 02       		.byte	0x2
 4811 1823 89       		.byte	0x89
 4812 1824 B9080000 		.4byte	0x8b9
 4813 1828 02       		.byte	0x2
 4814 1829 91       		.byte	0x91
 4815 182a 68       		.sleb128 -24
 4816 182b 2B       		.uleb128 0x2b
 4817 182c DA020000 		.4byte	.LASF344
 4818 1830 46180000 		.4byte	0x1846
 4819 1834 01       		.byte	0x1
 4820 1835 00       		.byte	0
 4821 1836 08       		.uleb128 0x8
 4822 1837 F9050000 		.4byte	0x5f9
 4823 183b 46180000 		.4byte	0x1846
 4824 183f 09       		.uleb128 0x9
 4825 1840 4C000000 		.4byte	0x4c
 4826 1844 04       		.byte	0x4
 4827 1845 00       		.byte	0
 4828 1846 17       		.uleb128 0x17
 4829 1847 36180000 		.4byte	0x1836
 4830 184b 2C       		.uleb128 0x2c
 4831 184c CD000000 		.4byte	.LASF327
 4832 1850 02       		.byte	0x2
 4833 1851 C1       		.byte	0xc1
 4834 1852 01       		.byte	0x1
 4835 1853 00000000 		.4byte	.LFB39
 4836 1857 AA010000 		.4byte	.LFE39
 4837 185b 44010000 		.4byte	.LLST6
 4838 185f 72180000 		.4byte	0x1872
 4839 1863 2D       		.uleb128 0x2d
 4840 1864 6E657700 		.ascii	"new\000"
 4841 1868 02       		.byte	0x2
 4842 1869 C1       		.byte	0xc1
ARM GAS  /tmp/cchL5NBj.s 			page 122


 4843 186a 98080000 		.4byte	0x898
 4844 186e 02       		.byte	0x2
 4845 186f 91       		.byte	0x91
 4846 1870 77       		.sleb128 -9
 4847 1871 00       		.byte	0
 4848 1872 2E       		.uleb128 0x2e
 4849 1873 636C6900 		.ascii	"cli\000"
 4850 1877 02       		.byte	0x2
 4851 1878 E2       		.byte	0xe2
 4852 1879 00000000 		.4byte	.LFB40
 4853 187d 28040000 		.4byte	.LFE40
 4854 1881 7C010000 		.4byte	.LLST7
 4855 1885 C3180000 		.4byte	0x18c3
 4856 1889 26       		.uleb128 0x26
 4857 188a 9D050000 		.4byte	.LASF329
 4858 188e 02       		.byte	0x2
 4859 188f E4       		.byte	0xe4
 4860 1890 45000000 		.4byte	0x45
 4861 1894 02       		.byte	0x2
 4862 1895 91       		.byte	0x91
 4863 1896 6C       		.sleb128 -20
 4864 1897 26       		.uleb128 0x26
 4865 1898 BB050000 		.4byte	.LASF330
 4866 189c 02       		.byte	0x2
 4867 189d E5       		.byte	0xe5
 4868 189e C3180000 		.4byte	0x18c3
 4869 18a2 02       		.byte	0x2
 4870 18a3 91       		.byte	0x91
 4871 18a4 60       		.sleb128 -32
 4872 18a5 26       		.uleb128 0x26
 4873 18a6 44050000 		.4byte	.LASF331
 4874 18aa 02       		.byte	0x2
 4875 18ab E6       		.byte	0xe6
 4876 18ac D3180000 		.4byte	0x18d3
 4877 18b0 02       		.byte	0x2
 4878 18b1 91       		.byte	0x91
 4879 18b2 40       		.sleb128 -64
 4880 18b3 2A       		.uleb128 0x2a
 4881 18b4 636D6400 		.ascii	"cmd\000"
 4882 18b8 02       		.byte	0x2
 4883 18b9 E7       		.byte	0xe7
 4884 18ba F9050000 		.4byte	0x5f9
 4885 18be 03       		.byte	0x3
 4886 18bf 91       		.byte	0x91
 4887 18c0 BF7F     		.sleb128 -65
 4888 18c2 00       		.byte	0
 4889 18c3 08       		.uleb128 0x8
 4890 18c4 45000000 		.4byte	0x45
 4891 18c8 D3180000 		.4byte	0x18d3
 4892 18cc 09       		.uleb128 0x9
 4893 18cd 4C000000 		.4byte	0x4c
 4894 18d1 02       		.byte	0x2
 4895 18d2 00       		.byte	0
 4896 18d3 08       		.uleb128 0x8
 4897 18d4 F9050000 		.4byte	0x5f9
 4898 18d8 E3180000 		.4byte	0x18e3
 4899 18dc 09       		.uleb128 0x9
ARM GAS  /tmp/cchL5NBj.s 			page 123


 4900 18dd 4C000000 		.4byte	0x4c
 4901 18e1 1F       		.byte	0x1f
 4902 18e2 00       		.byte	0
 4903 18e3 2F       		.uleb128 0x2f
 4904 18e4 B3010000 		.4byte	.LASF332
 4905 18e8 06       		.byte	0x6
 4906 18e9 4803     		.2byte	0x348
 4907 18eb 74040000 		.4byte	0x474
 4908 18ef 01       		.byte	0x1
 4909 18f0 01       		.byte	0x1
 4910 18f1 2F       		.uleb128 0x2f
 4911 18f2 CB060000 		.4byte	.LASF333
 4912 18f6 01       		.byte	0x1
 4913 18f7 CE06     		.2byte	0x6ce
 4914 18f9 FF180000 		.4byte	0x18ff
 4915 18fd 01       		.byte	0x1
 4916 18fe 01       		.byte	0x1
 4917 18ff 19       		.uleb128 0x19
 4918 1900 45000000 		.4byte	0x45
 4919 1904 08       		.uleb128 0x8
 4920 1905 CF150000 		.4byte	0x15cf
 4921 1909 14190000 		.4byte	0x1914
 4922 190d 09       		.uleb128 0x9
 4923 190e 4C000000 		.4byte	0x4c
 4924 1912 01       		.byte	0x1
 4925 1913 00       		.byte	0
 4926 1914 30       		.uleb128 0x30
 4927 1915 DE030000 		.4byte	.LASF316
 4928 1919 02       		.byte	0x2
 4929 191a 16       		.byte	0x16
 4930 191b 04190000 		.4byte	0x1904
 4931 191f 01       		.byte	0x1
 4932 1920 01       		.byte	0x1
 4933 1921 30       		.uleb128 0x30
 4934 1922 8A000000 		.4byte	.LASF334
 4935 1926 02       		.byte	0x2
 4936 1927 17       		.byte	0x17
 4937 1928 98080000 		.4byte	0x898
 4938 192c 01       		.byte	0x1
 4939 192d 01       		.byte	0x1
 4940 192e 30       		.uleb128 0x30
 4941 192f C6090000 		.4byte	.LASF335
 4942 1933 02       		.byte	0x2
 4943 1934 19       		.byte	0x19
 4944 1935 06160000 		.4byte	0x1606
 4945 1939 01       		.byte	0x1
 4946 193a 01       		.byte	0x1
 4947 193b 30       		.uleb128 0x30
 4948 193c CD070000 		.4byte	.LASF336
 4949 1940 02       		.byte	0x2
 4950 1941 1A       		.byte	0x1a
 4951 1942 D1160000 		.4byte	0x16d1
 4952 1946 01       		.byte	0x1
 4953 1947 01       		.byte	0x1
 4954 1948 30       		.uleb128 0x30
 4955 1949 90030000 		.4byte	.LASF337
 4956 194d 02       		.byte	0x2
ARM GAS  /tmp/cchL5NBj.s 			page 124


 4957 194e 1B       		.byte	0x1b
 4958 194f D1160000 		.4byte	0x16d1
 4959 1953 01       		.byte	0x1
 4960 1954 01       		.byte	0x1
 4961 1955 30       		.uleb128 0x30
 4962 1956 79010000 		.4byte	.LASF338
 4963 195a 02       		.byte	0x2
 4964 195b 1D       		.byte	0x1d
 4965 195c B9080000 		.4byte	0x8b9
 4966 1960 01       		.byte	0x1
 4967 1961 01       		.byte	0x1
 4968 1962 30       		.uleb128 0x30
 4969 1963 290A0000 		.4byte	.LASF339
 4970 1967 02       		.byte	0x2
 4971 1968 1E       		.byte	0x1e
 4972 1969 B9080000 		.4byte	0x8b9
 4973 196d 01       		.byte	0x1
 4974 196e 01       		.byte	0x1
 4975 196f 2F       		.uleb128 0x2f
 4976 1970 B3010000 		.4byte	.LASF332
 4977 1974 06       		.byte	0x6
 4978 1975 4803     		.2byte	0x348
 4979 1977 74040000 		.4byte	0x474
 4980 197b 01       		.byte	0x1
 4981 197c 01       		.byte	0x1
 4982 197d 2F       		.uleb128 0x2f
 4983 197e CB060000 		.4byte	.LASF333
 4984 1982 01       		.byte	0x1
 4985 1983 CE06     		.2byte	0x6ce
 4986 1985 FF180000 		.4byte	0x18ff
 4987 1989 01       		.byte	0x1
 4988 198a 01       		.byte	0x1
 4989 198b 31       		.uleb128 0x31
 4990 198c DE030000 		.4byte	.LASF316
 4991 1990 02       		.byte	0x2
 4992 1991 16       		.byte	0x16
 4993 1992 04190000 		.4byte	0x1904
 4994 1996 01       		.byte	0x1
 4995 1997 05       		.byte	0x5
 4996 1998 03       		.byte	0x3
 4997 1999 00000000 		.4byte	input
 4998 199d 31       		.uleb128 0x31
 4999 199e 8A000000 		.4byte	.LASF334
 5000 19a2 02       		.byte	0x2
 5001 19a3 17       		.byte	0x17
 5002 19a4 98080000 		.4byte	0x898
 5003 19a8 01       		.byte	0x1
 5004 19a9 05       		.byte	0x5
 5005 19aa 03       		.byte	0x3
 5006 19ab 00000000 		.4byte	_state
 5007 19af 31       		.uleb128 0x31
 5008 19b0 C6090000 		.4byte	.LASF335
 5009 19b4 02       		.byte	0x2
 5010 19b5 19       		.byte	0x19
 5011 19b6 06160000 		.4byte	0x1606
 5012 19ba 01       		.byte	0x1
 5013 19bb 05       		.byte	0x5
ARM GAS  /tmp/cchL5NBj.s 			page 125


 5014 19bc 03       		.byte	0x3
 5015 19bd 00000000 		.4byte	loop
 5016 19c1 31       		.uleb128 0x31
 5017 19c2 CD070000 		.4byte	.LASF336
 5018 19c6 02       		.byte	0x2
 5019 19c7 1A       		.byte	0x1a
 5020 19c8 D1160000 		.4byte	0x16d1
 5021 19cc 01       		.byte	0x1
 5022 19cd 05       		.byte	0x5
 5023 19ce 03       		.byte	0x3
 5024 19cf 00000000 		.4byte	ntrip
 5025 19d3 31       		.uleb128 0x31
 5026 19d4 90030000 		.4byte	.LASF337
 5027 19d8 02       		.byte	0x2
 5028 19d9 1B       		.byte	0x1b
 5029 19da D1160000 		.4byte	0x16d1
 5030 19de 01       		.byte	0x1
 5031 19df 05       		.byte	0x5
 5032 19e0 03       		.byte	0x3
 5033 19e1 00000000 		.4byte	rtrip
 5034 19e5 31       		.uleb128 0x31
 5035 19e6 79010000 		.4byte	.LASF338
 5036 19ea 02       		.byte	0x2
 5037 19eb 1D       		.byte	0x1d
 5038 19ec B9080000 		.4byte	0x8b9
 5039 19f0 01       		.byte	0x1
 5040 19f1 05       		.byte	0x5
 5041 19f2 03       		.byte	0x3
 5042 19f3 00000000 		.4byte	releasetime
 5043 19f7 31       		.uleb128 0x31
 5044 19f8 290A0000 		.4byte	.LASF339
 5045 19fc 02       		.byte	0x2
 5046 19fd 1E       		.byte	0x1e
 5047 19fe B9080000 		.4byte	0x8b9
 5048 1a02 01       		.byte	0x1
 5049 1a03 05       		.byte	0x5
 5050 1a04 03       		.byte	0x3
 5051 1a05 00000000 		.4byte	dxmax
 5052 1a09 00       		.byte	0
 5053              		.section	.debug_abbrev,"",%progbits
 5054              	.Ldebug_abbrev0:
 5055 0000 01       		.uleb128 0x1
 5056 0001 11       		.uleb128 0x11
 5057 0002 01       		.byte	0x1
 5058 0003 25       		.uleb128 0x25
 5059 0004 0E       		.uleb128 0xe
 5060 0005 13       		.uleb128 0x13
 5061 0006 0B       		.uleb128 0xb
 5062 0007 03       		.uleb128 0x3
 5063 0008 0E       		.uleb128 0xe
 5064 0009 1B       		.uleb128 0x1b
 5065 000a 0E       		.uleb128 0xe
 5066 000b 11       		.uleb128 0x11
 5067 000c 01       		.uleb128 0x1
 5068 000d 52       		.uleb128 0x52
 5069 000e 01       		.uleb128 0x1
 5070 000f 55       		.uleb128 0x55
ARM GAS  /tmp/cchL5NBj.s 			page 126


 5071 0010 06       		.uleb128 0x6
 5072 0011 10       		.uleb128 0x10
 5073 0012 06       		.uleb128 0x6
 5074 0013 00       		.byte	0
 5075 0014 00       		.byte	0
 5076 0015 02       		.uleb128 0x2
 5077 0016 24       		.uleb128 0x24
 5078 0017 00       		.byte	0
 5079 0018 0B       		.uleb128 0xb
 5080 0019 0B       		.uleb128 0xb
 5081 001a 3E       		.uleb128 0x3e
 5082 001b 0B       		.uleb128 0xb
 5083 001c 03       		.uleb128 0x3
 5084 001d 0E       		.uleb128 0xe
 5085 001e 00       		.byte	0
 5086 001f 00       		.byte	0
 5087 0020 03       		.uleb128 0x3
 5088 0021 24       		.uleb128 0x24
 5089 0022 00       		.byte	0
 5090 0023 0B       		.uleb128 0xb
 5091 0024 0B       		.uleb128 0xb
 5092 0025 3E       		.uleb128 0x3e
 5093 0026 0B       		.uleb128 0xb
 5094 0027 03       		.uleb128 0x3
 5095 0028 08       		.uleb128 0x8
 5096 0029 00       		.byte	0
 5097 002a 00       		.byte	0
 5098 002b 04       		.uleb128 0x4
 5099 002c 16       		.uleb128 0x16
 5100 002d 00       		.byte	0
 5101 002e 03       		.uleb128 0x3
 5102 002f 0E       		.uleb128 0xe
 5103 0030 3A       		.uleb128 0x3a
 5104 0031 0B       		.uleb128 0xb
 5105 0032 3B       		.uleb128 0x3b
 5106 0033 0B       		.uleb128 0xb
 5107 0034 49       		.uleb128 0x49
 5108 0035 13       		.uleb128 0x13
 5109 0036 00       		.byte	0
 5110 0037 00       		.byte	0
 5111 0038 05       		.uleb128 0x5
 5112 0039 16       		.uleb128 0x16
 5113 003a 00       		.byte	0
 5114 003b 03       		.uleb128 0x3
 5115 003c 0E       		.uleb128 0xe
 5116 003d 3A       		.uleb128 0x3a
 5117 003e 0B       		.uleb128 0xb
 5118 003f 3B       		.uleb128 0x3b
 5119 0040 05       		.uleb128 0x5
 5120 0041 49       		.uleb128 0x49
 5121 0042 13       		.uleb128 0x13
 5122 0043 00       		.byte	0
 5123 0044 00       		.byte	0
 5124 0045 06       		.uleb128 0x6
 5125 0046 17       		.uleb128 0x17
 5126 0047 01       		.byte	0x1
 5127 0048 0B       		.uleb128 0xb
ARM GAS  /tmp/cchL5NBj.s 			page 127


 5128 0049 0B       		.uleb128 0xb
 5129 004a 3A       		.uleb128 0x3a
 5130 004b 0B       		.uleb128 0xb
 5131 004c 3B       		.uleb128 0x3b
 5132 004d 0B       		.uleb128 0xb
 5133 004e 01       		.uleb128 0x1
 5134 004f 13       		.uleb128 0x13
 5135 0050 00       		.byte	0
 5136 0051 00       		.byte	0
 5137 0052 07       		.uleb128 0x7
 5138 0053 0D       		.uleb128 0xd
 5139 0054 00       		.byte	0
 5140 0055 03       		.uleb128 0x3
 5141 0056 0E       		.uleb128 0xe
 5142 0057 3A       		.uleb128 0x3a
 5143 0058 0B       		.uleb128 0xb
 5144 0059 3B       		.uleb128 0x3b
 5145 005a 0B       		.uleb128 0xb
 5146 005b 49       		.uleb128 0x49
 5147 005c 13       		.uleb128 0x13
 5148 005d 00       		.byte	0
 5149 005e 00       		.byte	0
 5150 005f 08       		.uleb128 0x8
 5151 0060 01       		.uleb128 0x1
 5152 0061 01       		.byte	0x1
 5153 0062 49       		.uleb128 0x49
 5154 0063 13       		.uleb128 0x13
 5155 0064 01       		.uleb128 0x1
 5156 0065 13       		.uleb128 0x13
 5157 0066 00       		.byte	0
 5158 0067 00       		.byte	0
 5159 0068 09       		.uleb128 0x9
 5160 0069 21       		.uleb128 0x21
 5161 006a 00       		.byte	0
 5162 006b 49       		.uleb128 0x49
 5163 006c 13       		.uleb128 0x13
 5164 006d 2F       		.uleb128 0x2f
 5165 006e 0B       		.uleb128 0xb
 5166 006f 00       		.byte	0
 5167 0070 00       		.byte	0
 5168 0071 0A       		.uleb128 0xa
 5169 0072 13       		.uleb128 0x13
 5170 0073 01       		.byte	0x1
 5171 0074 0B       		.uleb128 0xb
 5172 0075 0B       		.uleb128 0xb
 5173 0076 3A       		.uleb128 0x3a
 5174 0077 0B       		.uleb128 0xb
 5175 0078 3B       		.uleb128 0x3b
 5176 0079 0B       		.uleb128 0xb
 5177 007a 01       		.uleb128 0x1
 5178 007b 13       		.uleb128 0x13
 5179 007c 00       		.byte	0
 5180 007d 00       		.byte	0
 5181 007e 0B       		.uleb128 0xb
 5182 007f 0D       		.uleb128 0xd
 5183 0080 00       		.byte	0
 5184 0081 03       		.uleb128 0x3
ARM GAS  /tmp/cchL5NBj.s 			page 128


 5185 0082 0E       		.uleb128 0xe
 5186 0083 3A       		.uleb128 0x3a
 5187 0084 0B       		.uleb128 0xb
 5188 0085 3B       		.uleb128 0x3b
 5189 0086 0B       		.uleb128 0xb
 5190 0087 49       		.uleb128 0x49
 5191 0088 13       		.uleb128 0x13
 5192 0089 38       		.uleb128 0x38
 5193 008a 0A       		.uleb128 0xa
 5194 008b 00       		.byte	0
 5195 008c 00       		.byte	0
 5196 008d 0C       		.uleb128 0xc
 5197 008e 0F       		.uleb128 0xf
 5198 008f 00       		.byte	0
 5199 0090 0B       		.uleb128 0xb
 5200 0091 0B       		.uleb128 0xb
 5201 0092 00       		.byte	0
 5202 0093 00       		.byte	0
 5203 0094 0D       		.uleb128 0xd
 5204 0095 13       		.uleb128 0x13
 5205 0096 01       		.byte	0x1
 5206 0097 03       		.uleb128 0x3
 5207 0098 0E       		.uleb128 0xe
 5208 0099 0B       		.uleb128 0xb
 5209 009a 0B       		.uleb128 0xb
 5210 009b 3A       		.uleb128 0x3a
 5211 009c 0B       		.uleb128 0xb
 5212 009d 3B       		.uleb128 0x3b
 5213 009e 0B       		.uleb128 0xb
 5214 009f 01       		.uleb128 0x1
 5215 00a0 13       		.uleb128 0x13
 5216 00a1 00       		.byte	0
 5217 00a2 00       		.byte	0
 5218 00a3 0E       		.uleb128 0xe
 5219 00a4 0D       		.uleb128 0xd
 5220 00a5 00       		.byte	0
 5221 00a6 03       		.uleb128 0x3
 5222 00a7 08       		.uleb128 0x8
 5223 00a8 3A       		.uleb128 0x3a
 5224 00a9 0B       		.uleb128 0xb
 5225 00aa 3B       		.uleb128 0x3b
 5226 00ab 0B       		.uleb128 0xb
 5227 00ac 49       		.uleb128 0x49
 5228 00ad 13       		.uleb128 0x13
 5229 00ae 38       		.uleb128 0x38
 5230 00af 0A       		.uleb128 0xa
 5231 00b0 00       		.byte	0
 5232 00b1 00       		.byte	0
 5233 00b2 0F       		.uleb128 0xf
 5234 00b3 0F       		.uleb128 0xf
 5235 00b4 00       		.byte	0
 5236 00b5 0B       		.uleb128 0xb
 5237 00b6 0B       		.uleb128 0xb
 5238 00b7 49       		.uleb128 0x49
 5239 00b8 13       		.uleb128 0x13
 5240 00b9 00       		.byte	0
 5241 00ba 00       		.byte	0
ARM GAS  /tmp/cchL5NBj.s 			page 129


 5242 00bb 10       		.uleb128 0x10
 5243 00bc 13       		.uleb128 0x13
 5244 00bd 01       		.byte	0x1
 5245 00be 03       		.uleb128 0x3
 5246 00bf 0E       		.uleb128 0xe
 5247 00c0 0B       		.uleb128 0xb
 5248 00c1 05       		.uleb128 0x5
 5249 00c2 3A       		.uleb128 0x3a
 5250 00c3 0B       		.uleb128 0xb
 5251 00c4 3B       		.uleb128 0x3b
 5252 00c5 0B       		.uleb128 0xb
 5253 00c6 01       		.uleb128 0x1
 5254 00c7 13       		.uleb128 0x13
 5255 00c8 00       		.byte	0
 5256 00c9 00       		.byte	0
 5257 00ca 11       		.uleb128 0x11
 5258 00cb 15       		.uleb128 0x15
 5259 00cc 00       		.byte	0
 5260 00cd 27       		.uleb128 0x27
 5261 00ce 0C       		.uleb128 0xc
 5262 00cf 00       		.byte	0
 5263 00d0 00       		.byte	0
 5264 00d1 12       		.uleb128 0x12
 5265 00d2 13       		.uleb128 0x13
 5266 00d3 01       		.byte	0x1
 5267 00d4 03       		.uleb128 0x3
 5268 00d5 0E       		.uleb128 0xe
 5269 00d6 0B       		.uleb128 0xb
 5270 00d7 0B       		.uleb128 0xb
 5271 00d8 3A       		.uleb128 0x3a
 5272 00d9 0B       		.uleb128 0xb
 5273 00da 3B       		.uleb128 0x3b
 5274 00db 05       		.uleb128 0x5
 5275 00dc 01       		.uleb128 0x1
 5276 00dd 13       		.uleb128 0x13
 5277 00de 00       		.byte	0
 5278 00df 00       		.byte	0
 5279 00e0 13       		.uleb128 0x13
 5280 00e1 0D       		.uleb128 0xd
 5281 00e2 00       		.byte	0
 5282 00e3 03       		.uleb128 0x3
 5283 00e4 0E       		.uleb128 0xe
 5284 00e5 3A       		.uleb128 0x3a
 5285 00e6 0B       		.uleb128 0xb
 5286 00e7 3B       		.uleb128 0x3b
 5287 00e8 05       		.uleb128 0x5
 5288 00e9 49       		.uleb128 0x49
 5289 00ea 13       		.uleb128 0x13
 5290 00eb 38       		.uleb128 0x38
 5291 00ec 0A       		.uleb128 0xa
 5292 00ed 00       		.byte	0
 5293 00ee 00       		.byte	0
 5294 00ef 14       		.uleb128 0x14
 5295 00f0 0D       		.uleb128 0xd
 5296 00f1 00       		.byte	0
 5297 00f2 03       		.uleb128 0x3
 5298 00f3 08       		.uleb128 0x8
ARM GAS  /tmp/cchL5NBj.s 			page 130


 5299 00f4 3A       		.uleb128 0x3a
 5300 00f5 0B       		.uleb128 0xb
 5301 00f6 3B       		.uleb128 0x3b
 5302 00f7 05       		.uleb128 0x5
 5303 00f8 49       		.uleb128 0x49
 5304 00f9 13       		.uleb128 0x13
 5305 00fa 38       		.uleb128 0x38
 5306 00fb 0A       		.uleb128 0xa
 5307 00fc 00       		.byte	0
 5308 00fd 00       		.byte	0
 5309 00fe 15       		.uleb128 0x15
 5310 00ff 15       		.uleb128 0x15
 5311 0100 01       		.byte	0x1
 5312 0101 27       		.uleb128 0x27
 5313 0102 0C       		.uleb128 0xc
 5314 0103 49       		.uleb128 0x49
 5315 0104 13       		.uleb128 0x13
 5316 0105 01       		.uleb128 0x1
 5317 0106 13       		.uleb128 0x13
 5318 0107 00       		.byte	0
 5319 0108 00       		.byte	0
 5320 0109 16       		.uleb128 0x16
 5321 010a 05       		.uleb128 0x5
 5322 010b 00       		.byte	0
 5323 010c 49       		.uleb128 0x49
 5324 010d 13       		.uleb128 0x13
 5325 010e 00       		.byte	0
 5326 010f 00       		.byte	0
 5327 0110 17       		.uleb128 0x17
 5328 0111 26       		.uleb128 0x26
 5329 0112 00       		.byte	0
 5330 0113 49       		.uleb128 0x49
 5331 0114 13       		.uleb128 0x13
 5332 0115 00       		.byte	0
 5333 0116 00       		.byte	0
 5334 0117 18       		.uleb128 0x18
 5335 0118 15       		.uleb128 0x15
 5336 0119 01       		.byte	0x1
 5337 011a 27       		.uleb128 0x27
 5338 011b 0C       		.uleb128 0xc
 5339 011c 01       		.uleb128 0x1
 5340 011d 13       		.uleb128 0x13
 5341 011e 00       		.byte	0
 5342 011f 00       		.byte	0
 5343 0120 19       		.uleb128 0x19
 5344 0121 35       		.uleb128 0x35
 5345 0122 00       		.byte	0
 5346 0123 49       		.uleb128 0x49
 5347 0124 13       		.uleb128 0x13
 5348 0125 00       		.byte	0
 5349 0126 00       		.byte	0
 5350 0127 1A       		.uleb128 0x1a
 5351 0128 04       		.uleb128 0x4
 5352 0129 01       		.byte	0x1
 5353 012a 03       		.uleb128 0x3
 5354 012b 0E       		.uleb128 0xe
 5355 012c 0B       		.uleb128 0xb
ARM GAS  /tmp/cchL5NBj.s 			page 131


 5356 012d 0B       		.uleb128 0xb
 5357 012e 3A       		.uleb128 0x3a
 5358 012f 0B       		.uleb128 0xb
 5359 0130 3B       		.uleb128 0x3b
 5360 0131 0B       		.uleb128 0xb
 5361 0132 01       		.uleb128 0x1
 5362 0133 13       		.uleb128 0x13
 5363 0134 00       		.byte	0
 5364 0135 00       		.byte	0
 5365 0136 1B       		.uleb128 0x1b
 5366 0137 28       		.uleb128 0x28
 5367 0138 00       		.byte	0
 5368 0139 03       		.uleb128 0x3
 5369 013a 0E       		.uleb128 0xe
 5370 013b 1C       		.uleb128 0x1c
 5371 013c 0D       		.uleb128 0xd
 5372 013d 00       		.byte	0
 5373 013e 00       		.byte	0
 5374 013f 1C       		.uleb128 0x1c
 5375 0140 13       		.uleb128 0x13
 5376 0141 01       		.byte	0x1
 5377 0142 0B       		.uleb128 0xb
 5378 0143 05       		.uleb128 0x5
 5379 0144 3A       		.uleb128 0x3a
 5380 0145 0B       		.uleb128 0xb
 5381 0146 3B       		.uleb128 0x3b
 5382 0147 0B       		.uleb128 0xb
 5383 0148 01       		.uleb128 0x1
 5384 0149 13       		.uleb128 0x13
 5385 014a 00       		.byte	0
 5386 014b 00       		.byte	0
 5387 014c 1D       		.uleb128 0x1d
 5388 014d 21       		.uleb128 0x21
 5389 014e 00       		.byte	0
 5390 014f 49       		.uleb128 0x49
 5391 0150 13       		.uleb128 0x13
 5392 0151 2F       		.uleb128 0x2f
 5393 0152 05       		.uleb128 0x5
 5394 0153 00       		.byte	0
 5395 0154 00       		.byte	0
 5396 0155 1E       		.uleb128 0x1e
 5397 0156 16       		.uleb128 0x16
 5398 0157 00       		.byte	0
 5399 0158 03       		.uleb128 0x3
 5400 0159 08       		.uleb128 0x8
 5401 015a 3A       		.uleb128 0x3a
 5402 015b 0B       		.uleb128 0xb
 5403 015c 3B       		.uleb128 0x3b
 5404 015d 05       		.uleb128 0x5
 5405 015e 49       		.uleb128 0x49
 5406 015f 13       		.uleb128 0x13
 5407 0160 00       		.byte	0
 5408 0161 00       		.byte	0
 5409 0162 1F       		.uleb128 0x1f
 5410 0163 13       		.uleb128 0x13
 5411 0164 01       		.byte	0x1
 5412 0165 0B       		.uleb128 0xb
ARM GAS  /tmp/cchL5NBj.s 			page 132


 5413 0166 0B       		.uleb128 0xb
 5414 0167 3A       		.uleb128 0x3a
 5415 0168 0B       		.uleb128 0xb
 5416 0169 3B       		.uleb128 0x3b
 5417 016a 05       		.uleb128 0x5
 5418 016b 01       		.uleb128 0x1
 5419 016c 13       		.uleb128 0x13
 5420 016d 00       		.byte	0
 5421 016e 00       		.byte	0
 5422 016f 20       		.uleb128 0x20
 5423 0170 13       		.uleb128 0x13
 5424 0171 01       		.byte	0x1
 5425 0172 0B       		.uleb128 0xb
 5426 0173 05       		.uleb128 0x5
 5427 0174 3A       		.uleb128 0x3a
 5428 0175 0B       		.uleb128 0xb
 5429 0176 3B       		.uleb128 0x3b
 5430 0177 05       		.uleb128 0x5
 5431 0178 01       		.uleb128 0x1
 5432 0179 13       		.uleb128 0x13
 5433 017a 00       		.byte	0
 5434 017b 00       		.byte	0
 5435 017c 21       		.uleb128 0x21
 5436 017d 04       		.uleb128 0x4
 5437 017e 01       		.byte	0x1
 5438 017f 0B       		.uleb128 0xb
 5439 0180 0B       		.uleb128 0xb
 5440 0181 3A       		.uleb128 0x3a
 5441 0182 0B       		.uleb128 0xb
 5442 0183 3B       		.uleb128 0x3b
 5443 0184 0B       		.uleb128 0xb
 5444 0185 01       		.uleb128 0x1
 5445 0186 13       		.uleb128 0x13
 5446 0187 00       		.byte	0
 5447 0188 00       		.byte	0
 5448 0189 22       		.uleb128 0x22
 5449 018a 28       		.uleb128 0x28
 5450 018b 00       		.byte	0
 5451 018c 03       		.uleb128 0x3
 5452 018d 08       		.uleb128 0x8
 5453 018e 1C       		.uleb128 0x1c
 5454 018f 0D       		.uleb128 0xd
 5455 0190 00       		.byte	0
 5456 0191 00       		.byte	0
 5457 0192 23       		.uleb128 0x23
 5458 0193 2E       		.uleb128 0x2e
 5459 0194 01       		.byte	0x1
 5460 0195 03       		.uleb128 0x3
 5461 0196 0E       		.uleb128 0xe
 5462 0197 3A       		.uleb128 0x3a
 5463 0198 0B       		.uleb128 0xb
 5464 0199 3B       		.uleb128 0x3b
 5465 019a 05       		.uleb128 0x5
 5466 019b 27       		.uleb128 0x27
 5467 019c 0C       		.uleb128 0xc
 5468 019d 11       		.uleb128 0x11
 5469 019e 01       		.uleb128 0x1
ARM GAS  /tmp/cchL5NBj.s 			page 133


 5470 019f 12       		.uleb128 0x12
 5471 01a0 01       		.uleb128 0x1
 5472 01a1 40       		.uleb128 0x40
 5473 01a2 06       		.uleb128 0x6
 5474 01a3 01       		.uleb128 0x1
 5475 01a4 13       		.uleb128 0x13
 5476 01a5 00       		.byte	0
 5477 01a6 00       		.byte	0
 5478 01a7 24       		.uleb128 0x24
 5479 01a8 05       		.uleb128 0x5
 5480 01a9 00       		.byte	0
 5481 01aa 03       		.uleb128 0x3
 5482 01ab 0E       		.uleb128 0xe
 5483 01ac 3A       		.uleb128 0x3a
 5484 01ad 0B       		.uleb128 0xb
 5485 01ae 3B       		.uleb128 0x3b
 5486 01af 05       		.uleb128 0x5
 5487 01b0 49       		.uleb128 0x49
 5488 01b1 13       		.uleb128 0x13
 5489 01b2 02       		.uleb128 0x2
 5490 01b3 0A       		.uleb128 0xa
 5491 01b4 00       		.byte	0
 5492 01b5 00       		.byte	0
 5493 01b6 25       		.uleb128 0x25
 5494 01b7 2E       		.uleb128 0x2e
 5495 01b8 01       		.byte	0x1
 5496 01b9 3F       		.uleb128 0x3f
 5497 01ba 0C       		.uleb128 0xc
 5498 01bb 03       		.uleb128 0x3
 5499 01bc 0E       		.uleb128 0xe
 5500 01bd 3A       		.uleb128 0x3a
 5501 01be 0B       		.uleb128 0xb
 5502 01bf 3B       		.uleb128 0x3b
 5503 01c0 0B       		.uleb128 0xb
 5504 01c1 49       		.uleb128 0x49
 5505 01c2 13       		.uleb128 0x13
 5506 01c3 11       		.uleb128 0x11
 5507 01c4 01       		.uleb128 0x1
 5508 01c5 12       		.uleb128 0x12
 5509 01c6 01       		.uleb128 0x1
 5510 01c7 40       		.uleb128 0x40
 5511 01c8 06       		.uleb128 0x6
 5512 01c9 01       		.uleb128 0x1
 5513 01ca 13       		.uleb128 0x13
 5514 01cb 00       		.byte	0
 5515 01cc 00       		.byte	0
 5516 01cd 26       		.uleb128 0x26
 5517 01ce 34       		.uleb128 0x34
 5518 01cf 00       		.byte	0
 5519 01d0 03       		.uleb128 0x3
 5520 01d1 0E       		.uleb128 0xe
 5521 01d2 3A       		.uleb128 0x3a
 5522 01d3 0B       		.uleb128 0xb
 5523 01d4 3B       		.uleb128 0x3b
 5524 01d5 0B       		.uleb128 0xb
 5525 01d6 49       		.uleb128 0x49
 5526 01d7 13       		.uleb128 0x13
ARM GAS  /tmp/cchL5NBj.s 			page 134


 5527 01d8 02       		.uleb128 0x2
 5528 01d9 0A       		.uleb128 0xa
 5529 01da 00       		.byte	0
 5530 01db 00       		.byte	0
 5531 01dc 27       		.uleb128 0x27
 5532 01dd 2E       		.uleb128 0x2e
 5533 01de 00       		.byte	0
 5534 01df 3F       		.uleb128 0x3f
 5535 01e0 0C       		.uleb128 0xc
 5536 01e1 03       		.uleb128 0x3
 5537 01e2 0E       		.uleb128 0xe
 5538 01e3 3A       		.uleb128 0x3a
 5539 01e4 0B       		.uleb128 0xb
 5540 01e5 3B       		.uleb128 0x3b
 5541 01e6 0B       		.uleb128 0xb
 5542 01e7 27       		.uleb128 0x27
 5543 01e8 0C       		.uleb128 0xc
 5544 01e9 11       		.uleb128 0x11
 5545 01ea 01       		.uleb128 0x1
 5546 01eb 12       		.uleb128 0x12
 5547 01ec 01       		.uleb128 0x1
 5548 01ed 40       		.uleb128 0x40
 5549 01ee 06       		.uleb128 0x6
 5550 01ef 00       		.byte	0
 5551 01f0 00       		.byte	0
 5552 01f1 28       		.uleb128 0x28
 5553 01f2 2E       		.uleb128 0x2e
 5554 01f3 01       		.byte	0x1
 5555 01f4 3F       		.uleb128 0x3f
 5556 01f5 0C       		.uleb128 0xc
 5557 01f6 03       		.uleb128 0x3
 5558 01f7 0E       		.uleb128 0xe
 5559 01f8 3A       		.uleb128 0x3a
 5560 01f9 0B       		.uleb128 0xb
 5561 01fa 3B       		.uleb128 0x3b
 5562 01fb 0B       		.uleb128 0xb
 5563 01fc 27       		.uleb128 0x27
 5564 01fd 0C       		.uleb128 0xc
 5565 01fe 11       		.uleb128 0x11
 5566 01ff 01       		.uleb128 0x1
 5567 0200 12       		.uleb128 0x12
 5568 0201 01       		.uleb128 0x1
 5569 0202 40       		.uleb128 0x40
 5570 0203 06       		.uleb128 0x6
 5571 0204 01       		.uleb128 0x1
 5572 0205 13       		.uleb128 0x13
 5573 0206 00       		.byte	0
 5574 0207 00       		.byte	0
 5575 0208 29       		.uleb128 0x29
 5576 0209 2E       		.uleb128 0x2e
 5577 020a 01       		.byte	0x1
 5578 020b 03       		.uleb128 0x3
 5579 020c 0E       		.uleb128 0xe
 5580 020d 3A       		.uleb128 0x3a
 5581 020e 0B       		.uleb128 0xb
 5582 020f 3B       		.uleb128 0x3b
 5583 0210 0B       		.uleb128 0xb
ARM GAS  /tmp/cchL5NBj.s 			page 135


 5584 0211 11       		.uleb128 0x11
 5585 0212 01       		.uleb128 0x1
 5586 0213 12       		.uleb128 0x12
 5587 0214 01       		.uleb128 0x1
 5588 0215 40       		.uleb128 0x40
 5589 0216 06       		.uleb128 0x6
 5590 0217 01       		.uleb128 0x1
 5591 0218 13       		.uleb128 0x13
 5592 0219 00       		.byte	0
 5593 021a 00       		.byte	0
 5594 021b 2A       		.uleb128 0x2a
 5595 021c 34       		.uleb128 0x34
 5596 021d 00       		.byte	0
 5597 021e 03       		.uleb128 0x3
 5598 021f 08       		.uleb128 0x8
 5599 0220 3A       		.uleb128 0x3a
 5600 0221 0B       		.uleb128 0xb
 5601 0222 3B       		.uleb128 0x3b
 5602 0223 0B       		.uleb128 0xb
 5603 0224 49       		.uleb128 0x49
 5604 0225 13       		.uleb128 0x13
 5605 0226 02       		.uleb128 0x2
 5606 0227 0A       		.uleb128 0xa
 5607 0228 00       		.byte	0
 5608 0229 00       		.byte	0
 5609 022a 2B       		.uleb128 0x2b
 5610 022b 34       		.uleb128 0x34
 5611 022c 00       		.byte	0
 5612 022d 03       		.uleb128 0x3
 5613 022e 0E       		.uleb128 0xe
 5614 022f 49       		.uleb128 0x49
 5615 0230 13       		.uleb128 0x13
 5616 0231 34       		.uleb128 0x34
 5617 0232 0C       		.uleb128 0xc
 5618 0233 00       		.byte	0
 5619 0234 00       		.byte	0
 5620 0235 2C       		.uleb128 0x2c
 5621 0236 2E       		.uleb128 0x2e
 5622 0237 01       		.byte	0x1
 5623 0238 03       		.uleb128 0x3
 5624 0239 0E       		.uleb128 0xe
 5625 023a 3A       		.uleb128 0x3a
 5626 023b 0B       		.uleb128 0xb
 5627 023c 3B       		.uleb128 0x3b
 5628 023d 0B       		.uleb128 0xb
 5629 023e 27       		.uleb128 0x27
 5630 023f 0C       		.uleb128 0xc
 5631 0240 11       		.uleb128 0x11
 5632 0241 01       		.uleb128 0x1
 5633 0242 12       		.uleb128 0x12
 5634 0243 01       		.uleb128 0x1
 5635 0244 40       		.uleb128 0x40
 5636 0245 06       		.uleb128 0x6
 5637 0246 01       		.uleb128 0x1
 5638 0247 13       		.uleb128 0x13
 5639 0248 00       		.byte	0
 5640 0249 00       		.byte	0
ARM GAS  /tmp/cchL5NBj.s 			page 136


 5641 024a 2D       		.uleb128 0x2d
 5642 024b 05       		.uleb128 0x5
 5643 024c 00       		.byte	0
 5644 024d 03       		.uleb128 0x3
 5645 024e 08       		.uleb128 0x8
 5646 024f 3A       		.uleb128 0x3a
 5647 0250 0B       		.uleb128 0xb
 5648 0251 3B       		.uleb128 0x3b
 5649 0252 0B       		.uleb128 0xb
 5650 0253 49       		.uleb128 0x49
 5651 0254 13       		.uleb128 0x13
 5652 0255 02       		.uleb128 0x2
 5653 0256 0A       		.uleb128 0xa
 5654 0257 00       		.byte	0
 5655 0258 00       		.byte	0
 5656 0259 2E       		.uleb128 0x2e
 5657 025a 2E       		.uleb128 0x2e
 5658 025b 01       		.byte	0x1
 5659 025c 03       		.uleb128 0x3
 5660 025d 08       		.uleb128 0x8
 5661 025e 3A       		.uleb128 0x3a
 5662 025f 0B       		.uleb128 0xb
 5663 0260 3B       		.uleb128 0x3b
 5664 0261 0B       		.uleb128 0xb
 5665 0262 11       		.uleb128 0x11
 5666 0263 01       		.uleb128 0x1
 5667 0264 12       		.uleb128 0x12
 5668 0265 01       		.uleb128 0x1
 5669 0266 40       		.uleb128 0x40
 5670 0267 06       		.uleb128 0x6
 5671 0268 01       		.uleb128 0x1
 5672 0269 13       		.uleb128 0x13
 5673 026a 00       		.byte	0
 5674 026b 00       		.byte	0
 5675 026c 2F       		.uleb128 0x2f
 5676 026d 34       		.uleb128 0x34
 5677 026e 00       		.byte	0
 5678 026f 03       		.uleb128 0x3
 5679 0270 0E       		.uleb128 0xe
 5680 0271 3A       		.uleb128 0x3a
 5681 0272 0B       		.uleb128 0xb
 5682 0273 3B       		.uleb128 0x3b
 5683 0274 05       		.uleb128 0x5
 5684 0275 49       		.uleb128 0x49
 5685 0276 13       		.uleb128 0x13
 5686 0277 3F       		.uleb128 0x3f
 5687 0278 0C       		.uleb128 0xc
 5688 0279 3C       		.uleb128 0x3c
 5689 027a 0C       		.uleb128 0xc
 5690 027b 00       		.byte	0
 5691 027c 00       		.byte	0
 5692 027d 30       		.uleb128 0x30
 5693 027e 34       		.uleb128 0x34
 5694 027f 00       		.byte	0
 5695 0280 03       		.uleb128 0x3
 5696 0281 0E       		.uleb128 0xe
 5697 0282 3A       		.uleb128 0x3a
ARM GAS  /tmp/cchL5NBj.s 			page 137


 5698 0283 0B       		.uleb128 0xb
 5699 0284 3B       		.uleb128 0x3b
 5700 0285 0B       		.uleb128 0xb
 5701 0286 49       		.uleb128 0x49
 5702 0287 13       		.uleb128 0x13
 5703 0288 3F       		.uleb128 0x3f
 5704 0289 0C       		.uleb128 0xc
 5705 028a 3C       		.uleb128 0x3c
 5706 028b 0C       		.uleb128 0xc
 5707 028c 00       		.byte	0
 5708 028d 00       		.byte	0
 5709 028e 31       		.uleb128 0x31
 5710 028f 34       		.uleb128 0x34
 5711 0290 00       		.byte	0
 5712 0291 03       		.uleb128 0x3
 5713 0292 0E       		.uleb128 0xe
 5714 0293 3A       		.uleb128 0x3a
 5715 0294 0B       		.uleb128 0xb
 5716 0295 3B       		.uleb128 0x3b
 5717 0296 0B       		.uleb128 0xb
 5718 0297 49       		.uleb128 0x49
 5719 0298 13       		.uleb128 0x13
 5720 0299 3F       		.uleb128 0x3f
 5721 029a 0C       		.uleb128 0xc
 5722 029b 02       		.uleb128 0x2
 5723 029c 0A       		.uleb128 0xa
 5724 029d 00       		.byte	0
 5725 029e 00       		.byte	0
 5726 029f 00       		.byte	0
 5727              		.section	.debug_loc,"",%progbits
 5728              	.Ldebug_loc0:
 5729              	.LLST0:
 5730 0000 00000000 		.4byte	.LFB14
 5731 0004 02000000 		.4byte	.LCFI0
 5732 0008 0200     		.2byte	0x2
 5733 000a 7D       		.byte	0x7d
 5734 000b 00       		.sleb128 0
 5735 000c 02000000 		.4byte	.LCFI0
 5736 0010 04000000 		.4byte	.LCFI1
 5737 0014 0200     		.2byte	0x2
 5738 0016 7D       		.byte	0x7d
 5739 0017 04       		.sleb128 4
 5740 0018 04000000 		.4byte	.LCFI1
 5741 001c 06000000 		.4byte	.LCFI2
 5742 0020 0200     		.2byte	0x2
 5743 0022 7D       		.byte	0x7d
 5744 0023 10       		.sleb128 16
 5745 0024 06000000 		.4byte	.LCFI2
 5746 0028 36000000 		.4byte	.LFE14
 5747 002c 0200     		.2byte	0x2
 5748 002e 77       		.byte	0x77
 5749 002f 10       		.sleb128 16
 5750 0030 00000000 		.4byte	0
 5751 0034 00000000 		.4byte	0
 5752              	.LLST1:
 5753 0038 00000000 		.4byte	.LFB20
 5754 003c 02000000 		.4byte	.LCFI3
ARM GAS  /tmp/cchL5NBj.s 			page 138


 5755 0040 0200     		.2byte	0x2
 5756 0042 7D       		.byte	0x7d
 5757 0043 00       		.sleb128 0
 5758 0044 02000000 		.4byte	.LCFI3
 5759 0048 04000000 		.4byte	.LCFI4
 5760 004c 0200     		.2byte	0x2
 5761 004e 7D       		.byte	0x7d
 5762 004f 04       		.sleb128 4
 5763 0050 04000000 		.4byte	.LCFI4
 5764 0054 06000000 		.4byte	.LCFI5
 5765 0058 0200     		.2byte	0x2
 5766 005a 7D       		.byte	0x7d
 5767 005b 10       		.sleb128 16
 5768 005c 06000000 		.4byte	.LCFI5
 5769 0060 5C000000 		.4byte	.LFE20
 5770 0064 0200     		.2byte	0x2
 5771 0066 77       		.byte	0x77
 5772 0067 10       		.sleb128 16
 5773 0068 00000000 		.4byte	0
 5774 006c 00000000 		.4byte	0
 5775              	.LLST2:
 5776 0070 00000000 		.4byte	.LFB35
 5777 0074 02000000 		.4byte	.LCFI6
 5778 0078 0200     		.2byte	0x2
 5779 007a 7D       		.byte	0x7d
 5780 007b 00       		.sleb128 0
 5781 007c 02000000 		.4byte	.LCFI6
 5782 0080 04000000 		.4byte	.LCFI7
 5783 0084 0200     		.2byte	0x2
 5784 0086 7D       		.byte	0x7d
 5785 0087 08       		.sleb128 8
 5786 0088 04000000 		.4byte	.LCFI7
 5787 008c 06000000 		.4byte	.LCFI8
 5788 0090 0200     		.2byte	0x2
 5789 0092 7D       		.byte	0x7d
 5790 0093 10       		.sleb128 16
 5791 0094 06000000 		.4byte	.LCFI8
 5792 0098 5C020000 		.4byte	.LFE35
 5793 009c 0200     		.2byte	0x2
 5794 009e 77       		.byte	0x77
 5795 009f 10       		.sleb128 16
 5796 00a0 00000000 		.4byte	0
 5797 00a4 00000000 		.4byte	0
 5798              	.LLST3:
 5799 00a8 00000000 		.4byte	.LFB36
 5800 00ac 02000000 		.4byte	.LCFI9
 5801 00b0 0200     		.2byte	0x2
 5802 00b2 7D       		.byte	0x7d
 5803 00b3 00       		.sleb128 0
 5804 00b4 02000000 		.4byte	.LCFI9
 5805 00b8 04000000 		.4byte	.LCFI10
 5806 00bc 0200     		.2byte	0x2
 5807 00be 7D       		.byte	0x7d
 5808 00bf 08       		.sleb128 8
 5809 00c0 04000000 		.4byte	.LCFI10
 5810 00c4 2C000000 		.4byte	.LFE36
 5811 00c8 0200     		.2byte	0x2
ARM GAS  /tmp/cchL5NBj.s 			page 139


 5812 00ca 77       		.byte	0x77
 5813 00cb 08       		.sleb128 8
 5814 00cc 00000000 		.4byte	0
 5815 00d0 00000000 		.4byte	0
 5816              	.LLST4:
 5817 00d4 00000000 		.4byte	.LFB37
 5818 00d8 02000000 		.4byte	.LCFI11
 5819 00dc 0200     		.2byte	0x2
 5820 00de 7D       		.byte	0x7d
 5821 00df 00       		.sleb128 0
 5822 00e0 02000000 		.4byte	.LCFI11
 5823 00e4 04000000 		.4byte	.LCFI12
 5824 00e8 0200     		.2byte	0x2
 5825 00ea 7D       		.byte	0x7d
 5826 00eb 08       		.sleb128 8
 5827 00ec 04000000 		.4byte	.LCFI12
 5828 00f0 06000000 		.4byte	.LCFI13
 5829 00f4 0200     		.2byte	0x2
 5830 00f6 7D       		.byte	0x7d
 5831 00f7 10       		.sleb128 16
 5832 00f8 06000000 		.4byte	.LCFI13
 5833 00fc 42010000 		.4byte	.LFE37
 5834 0100 0200     		.2byte	0x2
 5835 0102 77       		.byte	0x77
 5836 0103 10       		.sleb128 16
 5837 0104 00000000 		.4byte	0
 5838 0108 00000000 		.4byte	0
 5839              	.LLST5:
 5840 010c 00000000 		.4byte	.LFB38
 5841 0110 02000000 		.4byte	.LCFI14
 5842 0114 0200     		.2byte	0x2
 5843 0116 7D       		.byte	0x7d
 5844 0117 00       		.sleb128 0
 5845 0118 02000000 		.4byte	.LCFI14
 5846 011c 04000000 		.4byte	.LCFI15
 5847 0120 0200     		.2byte	0x2
 5848 0122 7D       		.byte	0x7d
 5849 0123 0C       		.sleb128 12
 5850 0124 04000000 		.4byte	.LCFI15
 5851 0128 06000000 		.4byte	.LCFI16
 5852 012c 0200     		.2byte	0x2
 5853 012e 7D       		.byte	0x7d
 5854 012f 30       		.sleb128 48
 5855 0130 06000000 		.4byte	.LCFI16
 5856 0134 4C020000 		.4byte	.LFE38
 5857 0138 0200     		.2byte	0x2
 5858 013a 77       		.byte	0x77
 5859 013b 18       		.sleb128 24
 5860 013c 00000000 		.4byte	0
 5861 0140 00000000 		.4byte	0
 5862              	.LLST6:
 5863 0144 00000000 		.4byte	.LFB39
 5864 0148 02000000 		.4byte	.LCFI17
 5865 014c 0200     		.2byte	0x2
 5866 014e 7D       		.byte	0x7d
 5867 014f 00       		.sleb128 0
 5868 0150 02000000 		.4byte	.LCFI17
ARM GAS  /tmp/cchL5NBj.s 			page 140


 5869 0154 04000000 		.4byte	.LCFI18
 5870 0158 0200     		.2byte	0x2
 5871 015a 7D       		.byte	0x7d
 5872 015b 08       		.sleb128 8
 5873 015c 04000000 		.4byte	.LCFI18
 5874 0160 06000000 		.4byte	.LCFI19
 5875 0164 0200     		.2byte	0x2
 5876 0166 7D       		.byte	0x7d
 5877 0167 10       		.sleb128 16
 5878 0168 06000000 		.4byte	.LCFI19
 5879 016c AA010000 		.4byte	.LFE39
 5880 0170 0200     		.2byte	0x2
 5881 0172 77       		.byte	0x77
 5882 0173 10       		.sleb128 16
 5883 0174 00000000 		.4byte	0
 5884 0178 00000000 		.4byte	0
 5885              	.LLST7:
 5886 017c 00000000 		.4byte	.LFB40
 5887 0180 02000000 		.4byte	.LCFI20
 5888 0184 0200     		.2byte	0x2
 5889 0186 7D       		.byte	0x7d
 5890 0187 00       		.sleb128 0
 5891 0188 02000000 		.4byte	.LCFI20
 5892 018c 04000000 		.4byte	.LCFI21
 5893 0190 0200     		.2byte	0x2
 5894 0192 7D       		.byte	0x7d
 5895 0193 0C       		.sleb128 12
 5896 0194 04000000 		.4byte	.LCFI21
 5897 0198 06000000 		.4byte	.LCFI22
 5898 019c 0300     		.2byte	0x3
 5899 019e 7D       		.byte	0x7d
 5900 019f D000     		.sleb128 80
 5901 01a1 06000000 		.4byte	.LCFI22
 5902 01a5 28040000 		.4byte	.LFE40
 5903 01a9 0300     		.2byte	0x3
 5904 01ab 77       		.byte	0x77
 5905 01ac C800     		.sleb128 72
 5906 01ae 00000000 		.4byte	0
 5907 01b2 00000000 		.4byte	0
 5908              		.section	.debug_aranges,"",%progbits
 5909 0000 54000000 		.4byte	0x54
 5910 0004 0200     		.2byte	0x2
 5911 0006 00000000 		.4byte	.Ldebug_info0
 5912 000a 04       		.byte	0x4
 5913 000b 00       		.byte	0
 5914 000c 0000     		.2byte	0
 5915 000e 0000     		.2byte	0
 5916 0010 00000000 		.4byte	.LFB14
 5917 0014 36000000 		.4byte	.LFE14-.LFB14
 5918 0018 00000000 		.4byte	.LFB20
 5919 001c 5C000000 		.4byte	.LFE20-.LFB20
 5920 0020 00000000 		.4byte	.LFB35
 5921 0024 5C020000 		.4byte	.LFE35-.LFB35
 5922 0028 00000000 		.4byte	.LFB36
 5923 002c 2C000000 		.4byte	.LFE36-.LFB36
 5924 0030 00000000 		.4byte	.LFB37
 5925 0034 42010000 		.4byte	.LFE37-.LFB37
ARM GAS  /tmp/cchL5NBj.s 			page 141


 5926 0038 00000000 		.4byte	.LFB38
 5927 003c 4C020000 		.4byte	.LFE38-.LFB38
 5928 0040 00000000 		.4byte	.LFB39
 5929 0044 AA010000 		.4byte	.LFE39-.LFB39
 5930 0048 00000000 		.4byte	.LFB40
 5931 004c 28040000 		.4byte	.LFE40-.LFB40
 5932 0050 00000000 		.4byte	0
 5933 0054 00000000 		.4byte	0
 5934              		.section	.debug_ranges,"",%progbits
 5935              	.Ldebug_ranges0:
 5936 0000 00000000 		.4byte	.LFB14
 5937 0004 36000000 		.4byte	.LFE14
 5938 0008 00000000 		.4byte	.LFB20
 5939 000c 5C000000 		.4byte	.LFE20
 5940 0010 00000000 		.4byte	.LFB35
 5941 0014 5C020000 		.4byte	.LFE35
 5942 0018 00000000 		.4byte	.LFB36
 5943 001c 2C000000 		.4byte	.LFE36
 5944 0020 00000000 		.4byte	.LFB37
 5945 0024 42010000 		.4byte	.LFE37
 5946 0028 00000000 		.4byte	.LFB38
 5947 002c 4C020000 		.4byte	.LFE38
 5948 0030 00000000 		.4byte	.LFB39
 5949 0034 AA010000 		.4byte	.LFE39
 5950 0038 00000000 		.4byte	.LFB40
 5951 003c 28040000 		.4byte	.LFE40
 5952 0040 00000000 		.4byte	0
 5953 0044 00000000 		.4byte	0
 5954              		.section	.debug_line,"",%progbits
 5955              	.Ldebug_line0:
 5956 0000 6D030000 		.section	.debug_str,"MS",%progbits,1
 5956      02009201 
 5956      00000201 
 5956      FB0E0D00 
 5956      01010101 
 5957              	.LASF161:
 5958 0000 52534552 		.ascii	"RSERVED1\000"
 5958      56454431 
 5958      00
 5959              	.LASF317:
 5960 0009 4E564943 		.ascii	"NVIC_EnableIRQ\000"
 5960      5F456E61 
 5960      626C6549 
 5960      525100
 5961              	.LASF147:
 5962 0018 5443325F 		.ascii	"TC2_IRQn\000"
 5962      4952516E 
 5962      00
 5963              	.LASF270:
 5964 0021 50574D5F 		.ascii	"PWM_RNPR\000"
 5964      524E5052 
 5964      00
 5965              	.LASF14:
 5966 002a 5F5F7661 		.ascii	"__value\000"
 5966      6C756500 
 5967              	.LASF66:
 5968 0032 5F5F7366 		.ascii	"__sf\000"
ARM GAS  /tmp/cchL5NBj.s 			page 142


 5968      00
 5969              	.LASF325:
 5970 0037 64757479 		.ascii	"duty\000"
 5970      00
 5971              	.LASF75:
 5972 003c 5F726561 		.ascii	"_read\000"
 5972      6400
 5973              	.LASF170:
 5974 0042 4E564943 		.ascii	"NVIC_Type\000"
 5974      5F547970 
 5974      6500
 5975              	.LASF239:
 5976 004c 50574D5F 		.ascii	"PWM_IER1\000"
 5976      49455231 
 5976      00
 5977              	.LASF76:
 5978 0055 5F777269 		.ascii	"_write\000"
 5978      746500
 5979              	.LASF62:
 5980 005c 5F617363 		.ascii	"_asctime_buf\000"
 5980      74696D65 
 5980      5F627566 
 5980      00
 5981              	.LASF58:
 5982 0069 5F637674 		.ascii	"_cvtlen\000"
 5982      6C656E00 
 5983              	.LASF265:
 5984 0071 50574D5F 		.ascii	"PWM_WPSR\000"
 5984      57505352 
 5984      00
 5985              	.LASF200:
 5986 007a 4144435F 		.ascii	"ADC_EMR\000"
 5986      454D5200 
 5987              	.LASF197:
 5988 0082 4144435F 		.ascii	"ADC_ISR\000"
 5988      49535200 
 5989              	.LASF334:
 5990 008a 5F737461 		.ascii	"_state\000"
 5990      746500
 5991              	.LASF24:
 5992 0091 5F5F746D 		.ascii	"__tm\000"
 5992      00
 5993              	.LASF112:
 5994 0096 5F776373 		.ascii	"_wcsrtombs_state\000"
 5994      72746F6D 
 5994      62735F73 
 5994      74617465 
 5994      00
 5995              	.LASF80:
 5996 00a7 5F6E6275 		.ascii	"_nbuf\000"
 5996      6600
 5997              	.LASF25:
 5998 00ad 5F5F746D 		.ascii	"__tm_sec\000"
 5998      5F736563 
 5998      00
 5999              	.LASF106:
 6000 00b6 5F6C3634 		.ascii	"_l64a_buf\000"
ARM GAS  /tmp/cchL5NBj.s 			page 143


 6000      615F6275 
 6000      6600
 6001              	.LASF173:
 6002 00c0 56544F52 		.ascii	"VTOR\000"
 6002      00
 6003              	.LASF269:
 6004 00c5 50574D5F 		.ascii	"PWM_TCR\000"
 6004      54435200 
 6005              	.LASF327:
 6006 00cd 73746174 		.ascii	"state\000"
 6006      6500
 6007              	.LASF83:
 6008 00d3 5F6C6F63 		.ascii	"_lock\000"
 6008      6B00
 6009              	.LASF259:
 6010 00d9 50574D5F 		.ascii	"PWM_FCR\000"
 6010      46435200 
 6011              	.LASF299:
 6012 00e1 54435F46 		.ascii	"TC_FMR\000"
 6012      4D5200
 6013              	.LASF205:
 6014 00e8 52657365 		.ascii	"Reserved3\000"
 6014      72766564 
 6014      3300
 6015              	.LASF278:
 6016 00f2 52657365 		.ascii	"Reserved7\000"
 6016      72766564 
 6016      3700
 6017              	.LASF93:
 6018 00fc 5F6D756C 		.ascii	"_mult\000"
 6018      7400
 6019              	.LASF211:
 6020 0102 4144435F 		.ascii	"ADC_RPR\000"
 6020      52505200 
 6021              	.LASF126:
 6022 010a 52535443 		.ascii	"RSTC_IRQn\000"
 6022      5F495251 
 6022      6E00
 6023              	.LASF215:
 6024 0114 4144435F 		.ascii	"ADC_RNPR\000"
 6024      524E5052 
 6024      00
 6025              	.LASF164:
 6026 011d 49435052 		.ascii	"ICPR\000"
 6026      00
 6027              	.LASF297:
 6028 0122 54435F51 		.ascii	"TC_QIMR\000"
 6028      494D5200 
 6029              	.LASF217:
 6030 012a 4144435F 		.ascii	"ADC_TNPR\000"
 6030      544E5052 
 6030      00
 6031              	.LASF271:
 6032 0133 50574D5F 		.ascii	"PWM_RNCR\000"
 6032      524E4352 
 6032      00
 6033              	.LASF11:
ARM GAS  /tmp/cchL5NBj.s 			page 144


 6034 013c 5F5F7763 		.ascii	"__wch\000"
 6034      6800
 6035              	.LASF292:
 6036 0142 54435F43 		.ascii	"TC_CHANNEL\000"
 6036      48414E4E 
 6036      454C00
 6037              	.LASF209:
 6038 014d 4144435F 		.ascii	"ADC_WPSR\000"
 6038      57505352 
 6038      00
 6039              	.LASF71:
 6040 0156 5F66696C 		.ascii	"_file\000"
 6040      6500
 6041              	.LASF34:
 6042 015c 5F6F6E5F 		.ascii	"_on_exit_args\000"
 6042      65786974 
 6042      5F617267 
 6042      7300
 6043              	.LASF174:
 6044 016a 41495243 		.ascii	"AIRCR\000"
 6044      5200
 6045              	.LASF314:
 6046 0170 74726973 		.ascii	"tristate\000"
 6046      74617465 
 6046      00
 6047              	.LASF338:
 6048 0179 72656C65 		.ascii	"releasetime\000"
 6048      61736574 
 6048      696D6500 
 6049              	.LASF154:
 6050 0185 43524343 		.ascii	"CRCCU_IRQn\000"
 6050      555F4952 
 6050      516E00
 6051              	.LASF306:
 6052 0190 52414D50 		.ascii	"RAMP\000"
 6052      00
 6053              	.LASF280:
 6054 0195 54435F43 		.ascii	"TC_CCR\000"
 6054      435200
 6055              	.LASF108:
 6056 019c 5F6D6272 		.ascii	"_mbrlen_state\000"
 6056      6C656E5F 
 6056      73746174 
 6056      6500
 6057              	.LASF7:
 6058 01aa 6C6F6E67 		.ascii	"long int\000"
 6058      20696E74 
 6058      00
 6059              	.LASF332:
 6060 01b3 5F696D70 		.ascii	"_impure_ptr\000"
 6060      7572655F 
 6060      70747200 
 6061              	.LASF98:
 6062 01bf 5F726573 		.ascii	"_result_k\000"
 6062      756C745F 
 6062      6B00
 6063              	.LASF226:
ARM GAS  /tmp/cchL5NBj.s 			page 145


 6064 01c9 50574D5F 		.ascii	"PWM_CCNT\000"
 6064      43434E54 
 6064      00
 6065              	.LASF45:
 6066 01d2 5F73697A 		.ascii	"_size\000"
 6066      6500
 6067              	.LASF171:
 6068 01d8 43505549 		.ascii	"CPUID\000"
 6068      4400
 6069              	.LASF61:
 6070 01de 5F6C6F63 		.ascii	"_localtime_buf\000"
 6070      616C7469 
 6070      6D655F62 
 6070      756600
 6071              	.LASF213:
 6072 01ed 4144435F 		.ascii	"ADC_TPR\000"
 6072      54505200 
 6073              	.LASF321:
 6074 01f5 6D61696E 		.ascii	"main\000"
 6074      00
 6075              	.LASF319:
 6076 01fa 4952516E 		.ascii	"IRQn\000"
 6076      00
 6077              	.LASF150:
 6078 01ff 5443355F 		.ascii	"TC5_IRQn\000"
 6078      4952516E 
 6078      00
 6079              	.LASF29:
 6080 0208 5F5F746D 		.ascii	"__tm_mon\000"
 6080      5F6D6F6E 
 6080      00
 6081              	.LASF318:
 6082 0211 4E564943 		.ascii	"NVIC_SetPriority\000"
 6082      5F536574 
 6082      5072696F 
 6082      72697479 
 6082      00
 6083              	.LASF101:
 6084 0222 5F6D6973 		.ascii	"_misc_reent\000"
 6084      635F7265 
 6084      656E7400 
 6085              	.LASF124:
 6086 022e 53797354 		.ascii	"SysTick_IRQn\000"
 6086      69636B5F 
 6086      4952516E 
 6086      00
 6087              	.LASF54:
 6088 023b 5F637572 		.ascii	"_current_category\000"
 6088      72656E74 
 6088      5F636174 
 6088      65676F72 
 6088      7900
 6089              	.LASF172:
 6090 024d 49435352 		.ascii	"ICSR\000"
 6090      00
 6091              	.LASF0:
 6092 0252 7369676E 		.ascii	"signed char\000"
ARM GAS  /tmp/cchL5NBj.s 			page 146


 6092      65642063 
 6092      68617200 
 6093              	.LASF113:
 6094 025e 75696E74 		.ascii	"uint8_t\000"
 6094      385F7400 
 6095              	.LASF252:
 6096 0266 50574D5F 		.ascii	"PWM_OS\000"
 6096      4F5300
 6097              	.LASF323:
 6098 026d 74696D65 		.ascii	"timestamp\000"
 6098      7374616D 
 6098      7000
 6099              	.LASF291:
 6100 0277 54634368 		.ascii	"TcChannel\000"
 6100      616E6E65 
 6100      6C00
 6101              	.LASF263:
 6102 0281 50574D5F 		.ascii	"PWM_SMMR\000"
 6102      534D4D52 
 6102      00
 6103              	.LASF159:
 6104 028a 52455345 		.ascii	"RESERVED0\000"
 6104      52564544 
 6104      3000
 6105              	.LASF1:
 6106 0294 756E7369 		.ascii	"unsigned char\000"
 6106      676E6564 
 6106      20636861 
 6106      7200
 6107              	.LASF165:
 6108 02a2 52455345 		.ascii	"RESERVED3\000"
 6108      52564544 
 6108      3300
 6109              	.LASF167:
 6110 02ac 52455345 		.ascii	"RESERVED4\000"
 6110      52564544 
 6110      3400
 6111              	.LASF168:
 6112 02b6 52455345 		.ascii	"RESERVED5\000"
 6112      52564544 
 6112      3500
 6113              	.LASF261:
 6114 02c0 50574D5F 		.ascii	"PWM_FPE\000"
 6114      46504500 
 6115              	.LASF236:
 6116 02c8 50574D5F 		.ascii	"PWM_ENA\000"
 6116      454E4100 
 6117              	.LASF166:
 6118 02d0 49414252 		.ascii	"IABR\000"
 6118      00
 6119              	.LASF309:
 6120 02d5 6374726C 		.ascii	"ctrl\000"
 6120      00
 6121              	.LASF344:
 6122 02da 5F5F4655 		.ascii	"__FUNCTION__\000"
 6122      4E435449 
 6122      4F4E5F5F 
ARM GAS  /tmp/cchL5NBj.s 			page 147


 6122      00
 6123              	.LASF46:
 6124 02e7 5F726565 		.ascii	"_reent\000"
 6124      6E7400
 6125              	.LASF260:
 6126 02ee 50574D5F 		.ascii	"PWM_FPV\000"
 6126      46505600 
 6127              	.LASF301:
 6128 02f6 5744545F 		.ascii	"WDT_CR\000"
 6128      435200
 6129              	.LASF163:
 6130 02fd 52455345 		.ascii	"RESERVED2\000"
 6130      52564544 
 6130      3200
 6131              	.LASF120:
 6132 0307 55736167 		.ascii	"UsageFault_IRQn\000"
 6132      65466175 
 6132      6C745F49 
 6132      52516E00 
 6133              	.LASF284:
 6134 0317 54435F52 		.ascii	"TC_RA\000"
 6134      4100
 6135              	.LASF285:
 6136 031d 54435F52 		.ascii	"TC_RB\000"
 6136      4200
 6137              	.LASF286:
 6138 0323 54435F52 		.ascii	"TC_RC\000"
 6138      4300
 6139              	.LASF86:
 6140 0329 63686172 		.ascii	"char\000"
 6140      00
 6141              	.LASF41:
 6142 032e 5F666E73 		.ascii	"_fns\000"
 6142      00
 6143              	.LASF313:
 6144 0333 6F757470 		.ascii	"output\000"
 6144      757400
 6145              	.LASF184:
 6146 033a 5343425F 		.ascii	"SCB_Type\000"
 6146      54797065 
 6146      00
 6147              	.LASF294:
 6148 0343 54435F42 		.ascii	"TC_BMR\000"
 6148      4D5200
 6149              	.LASF78:
 6150 034a 5F636C6F 		.ascii	"_close\000"
 6150      736500
 6151              	.LASF178:
 6152 0351 44465352 		.ascii	"DFSR\000"
 6152      00
 6153              	.LASF134:
 6154 0356 534D435F 		.ascii	"SMC_IRQn\000"
 6154      4952516E 
 6154      00
 6155              	.LASF272:
 6156 035f 50574D5F 		.ascii	"PWM_TNPR\000"
 6156      544E5052 
ARM GAS  /tmp/cchL5NBj.s 			page 148


 6156      00
 6157              	.LASF251:
 6158 0368 50574D5F 		.ascii	"PWM_OOV\000"
 6158      4F4F5600 
 6159              	.LASF298:
 6160 0370 54435F51 		.ascii	"TC_QISR\000"
 6160      49535200 
 6161              	.LASF229:
 6162 0378 50776D43 		.ascii	"PwmCh_num\000"
 6162      685F6E75 
 6162      6D00
 6163              	.LASF48:
 6164 0382 5F737464 		.ascii	"_stdin\000"
 6164      696E00
 6165              	.LASF311:
 6166 0389 72536C6F 		.ascii	"rSlope\000"
 6166      706500
 6167              	.LASF337:
 6168 0390 72747269 		.ascii	"rtrip\000"
 6168      7000
 6169              	.LASF177:
 6170 0396 48465352 		.ascii	"HFSR\000"
 6170      00
 6171              	.LASF246:
 6172 039b 50574D5F 		.ascii	"PWM_SCUPUPD\000"
 6172      53435550 
 6172      55504400 
 6173              	.LASF287:
 6174 03a7 54435F53 		.ascii	"TC_SR\000"
 6174      5200
 6175              	.LASF275:
 6176 03ad 50574D5F 		.ascii	"PWM_PTSR\000"
 6176      50545352 
 6176      00
 6177              	.LASF241:
 6178 03b6 50574D5F 		.ascii	"PWM_IMR1\000"
 6178      494D5231 
 6178      00
 6179              	.LASF249:
 6180 03bf 50574D5F 		.ascii	"PWM_IMR2\000"
 6180      494D5232 
 6180      00
 6181              	.LASF153:
 6182 03c8 50574D5F 		.ascii	"PWM_IRQn\000"
 6182      4952516E 
 6182      00
 6183              	.LASF162:
 6184 03d1 49535052 		.ascii	"ISPR\000"
 6184      00
 6185              	.LASF268:
 6186 03d6 50574D5F 		.ascii	"PWM_TPR\000"
 6186      54505200 
 6187              	.LASF316:
 6188 03de 696E7075 		.ascii	"input\000"
 6188      7400
 6189              	.LASF212:
 6190 03e4 4144435F 		.ascii	"ADC_RCR\000"
ARM GAS  /tmp/cchL5NBj.s 			page 149


 6190      52435200 
 6191              	.LASF238:
 6192 03ec 50574D5F 		.ascii	"PWM_SR\000"
 6192      535200
 6193              	.LASF175:
 6194 03f3 53484353 		.ascii	"SHCSR\000"
 6194      5200
 6195              	.LASF204:
 6196 03f9 4144435F 		.ascii	"ADC_CDR\000"
 6196      43445200 
 6197              	.LASF169:
 6198 0401 53544952 		.ascii	"STIR\000"
 6198      00
 6199              	.LASF155:
 6200 0406 4143435F 		.ascii	"ACC_IRQn\000"
 6200      4952516E 
 6200      00
 6201              	.LASF74:
 6202 040f 5F636F6F 		.ascii	"_cookie\000"
 6202      6B696500 
 6203              	.LASF22:
 6204 0417 5F776473 		.ascii	"_wds\000"
 6204      00
 6205              	.LASF130:
 6206 041c 504D435F 		.ascii	"PMC_IRQn\000"
 6206      4952516E 
 6206      00
 6207              	.LASF131:
 6208 0425 4546435F 		.ascii	"EFC_IRQn\000"
 6208      4952516E 
 6208      00
 6209              	.LASF63:
 6210 042e 5F736967 		.ascii	"_sig_func\000"
 6210      5F66756E 
 6210      6300
 6211              	.LASF82:
 6212 0438 5F6F6666 		.ascii	"_offset\000"
 6212      73657400 
 6213              	.LASF59:
 6214 0440 5F637674 		.ascii	"_cvtbuf\000"
 6214      62756600 
 6215              	.LASF125:
 6216 0448 53555043 		.ascii	"SUPC_IRQn\000"
 6216      5F495251 
 6216      6E00
 6217              	.LASF289:
 6218 0452 54435F49 		.ascii	"TC_IDR\000"
 6218      445200
 6219              	.LASF146:
 6220 0459 5443315F 		.ascii	"TC1_IRQn\000"
 6220      4952516E 
 6220      00
 6221              	.LASF137:
 6222 0462 50494F43 		.ascii	"PIOC_IRQn\000"
 6222      5F495251 
 6222      6E00
 6223              	.LASF322:
ARM GAS  /tmp/cchL5NBj.s 			page 150


 6224 046c 4144435F 		.ascii	"ADC_IrqHandler\000"
 6224      49727148 
 6224      616E646C 
 6224      657200
 6225              	.LASF220:
 6226 047b 4144435F 		.ascii	"ADC_PTSR\000"
 6226      50545352 
 6226      00
 6227              	.LASF128:
 6228 0484 5254545F 		.ascii	"RTT_IRQn\000"
 6228      4952516E 
 6228      00
 6229              	.LASF156:
 6230 048d 5544505F 		.ascii	"UDP_IRQn\000"
 6230      4952516E 
 6230      00
 6231              	.LASF152:
 6232 0496 44414343 		.ascii	"DACC_IRQn\000"
 6232      5F495251 
 6232      6E00
 6233              	.LASF117:
 6234 04a0 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6234      61736B61 
 6234      626C6549 
 6234      6E745F49 
 6234      52516E00 
 6235              	.LASF257:
 6236 04b4 50574D5F 		.ascii	"PWM_FMR\000"
 6236      464D5200 
 6237              	.LASF254:
 6238 04bc 50574D5F 		.ascii	"PWM_OSC\000"
 6238      4F534300 
 6239              	.LASF191:
 6240 04c4 4144435F 		.ascii	"ADC_CHSR\000"
 6240      43485352 
 6240      00
 6241              	.LASF99:
 6242 04cd 5F703573 		.ascii	"_p5s\000"
 6242      00
 6243              	.LASF18:
 6244 04d2 6C6F6E67 		.ascii	"long unsigned int\000"
 6244      20756E73 
 6244      69676E65 
 6244      6420696E 
 6244      7400
 6245              	.LASF253:
 6246 04e4 50574D5F 		.ascii	"PWM_OSS\000"
 6246      4F535300 
 6247              	.LASF231:
 6248 04ec 50574D5F 		.ascii	"PWM_CMPxVUPD\000"
 6248      434D5078 
 6248      56555044 
 6248      00
 6249              	.LASF118:
 6250 04f9 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 6250      72794D61 
 6250      6E616765 
ARM GAS  /tmp/cchL5NBj.s 			page 151


 6250      6D656E74 
 6250      5F495251 
 6251              	.LASF288:
 6252 050f 54435F49 		.ascii	"TC_IER\000"
 6252      455200
 6253              	.LASF69:
 6254 0516 5F5F7346 		.ascii	"__sFILE\000"
 6254      494C4500 
 6255              	.LASF53:
 6256 051e 5F5F7364 		.ascii	"__sdidinit\000"
 6256      6964696E 
 6256      697400
 6257              	.LASF85:
 6258 0529 5F666C61 		.ascii	"_flags2\000"
 6258      67733200 
 6259              	.LASF273:
 6260 0531 50574D5F 		.ascii	"PWM_TNCR\000"
 6260      544E4352 
 6260      00
 6261              	.LASF157:
 6262 053a 4952516E 		.ascii	"IRQn_Type\000"
 6262      5F547970 
 6262      6500
 6263              	.LASF331:
 6264 0544 6C696E65 		.ascii	"line\000"
 6264      00
 6265              	.LASF8:
 6266 0549 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 6266      4B5F5245 
 6266      43555253 
 6266      4956455F 
 6266      5400
 6267              	.LASF47:
 6268 055b 5F657272 		.ascii	"_errno\000"
 6268      6E6F00
 6269              	.LASF202:
 6270 0562 4144435F 		.ascii	"ADC_CGR\000"
 6270      43475200 
 6271              	.LASF68:
 6272 056a 5F736967 		.ascii	"_signal_buf\000"
 6272      6E616C5F 
 6272      62756600 
 6273              	.LASF315:
 6274 0576 74726970 		.ascii	"trip\000"
 6274      00
 6275              	.LASF186:
 6276 057b 4144435F 		.ascii	"ADC_MR\000"
 6276      4D5200
 6277              	.LASF193:
 6278 0582 4144435F 		.ascii	"ADC_LCDR\000"
 6278      4C434452 
 6278      00
 6279              	.LASF304:
 6280 058b 6374726C 		.ascii	"ctrlio_t\000"
 6280      696F5F74 
 6280      00
 6281              	.LASF129:
ARM GAS  /tmp/cchL5NBj.s 			page 152


 6282 0594 5744545F 		.ascii	"WDT_IRQn\000"
 6282      4952516E 
 6282      00
 6283              	.LASF329:
 6284 059d 61726763 		.ascii	"argc\000"
 6284      00
 6285              	.LASF23:
 6286 05a2 5F426967 		.ascii	"_Bigint\000"
 6286      696E7400 
 6287              	.LASF245:
 6288 05aa 50574D5F 		.ascii	"PWM_SCUP\000"
 6288      53435550 
 6288      00
 6289              	.LASF20:
 6290 05b3 5F6D6178 		.ascii	"_maxwds\000"
 6290      77647300 
 6291              	.LASF330:
 6292 05bb 61726776 		.ascii	"argv\000"
 6292      00
 6293              	.LASF56:
 6294 05c0 5F5F636C 		.ascii	"__cleanup\000"
 6294      65616E75 
 6294      7000
 6295              	.LASF119:
 6296 05ca 42757346 		.ascii	"BusFault_IRQn\000"
 6296      61756C74 
 6296      5F495251 
 6296      6E00
 6297              	.LASF281:
 6298 05d8 54435F43 		.ascii	"TC_CMR\000"
 6298      4D5200
 6299              	.LASF64:
 6300 05df 5F617465 		.ascii	"_atexit0\000"
 6300      78697430 
 6300      00
 6301              	.LASF52:
 6302 05e8 5F656D65 		.ascii	"_emergency\000"
 6302      7267656E 
 6302      637900
 6303              	.LASF5:
 6304 05f3 6C6F6E67 		.ascii	"long long int\000"
 6304      206C6F6E 
 6304      6720696E 
 6304      7400
 6305              	.LASF267:
 6306 0601 50574D5F 		.ascii	"PWM_RCR\000"
 6306      52435200 
 6307              	.LASF42:
 6308 0609 5F6F6E5F 		.ascii	"_on_exit_args_ptr\000"
 6308      65786974 
 6308      5F617267 
 6308      735F7074 
 6308      7200
 6309              	.LASF240:
 6310 061b 50574D5F 		.ascii	"PWM_IDR1\000"
 6310      49445231 
 6310      00
ARM GAS  /tmp/cchL5NBj.s 			page 153


 6311              	.LASF248:
 6312 0624 50574D5F 		.ascii	"PWM_IDR2\000"
 6312      49445232 
 6312      00
 6313              	.LASF223:
 6314 062d 50574D5F 		.ascii	"PWM_CDTYUPD\000"
 6314      43445459 
 6314      55504400 
 6315              	.LASF89:
 6316 0639 5F6E696F 		.ascii	"_niobs\000"
 6316      627300
 6317              	.LASF142:
 6318 0640 54574931 		.ascii	"TWI1_IRQn\000"
 6318      5F495251 
 6318      6E00
 6319              	.LASF65:
 6320 064a 5F5F7367 		.ascii	"__sglue\000"
 6320      6C756500 
 6321              	.LASF264:
 6322 0652 50574D5F 		.ascii	"PWM_WPCR\000"
 6322      57504352 
 6322      00
 6323              	.LASF279:
 6324 065b 50574D5F 		.ascii	"PWM_CH_NUM\000"
 6324      43485F4E 
 6324      554D00
 6325              	.LASF341:
 6326 0666 6D61696E 		.ascii	"main.c\000"
 6326      2E6300
 6327              	.LASF121:
 6328 066d 53564361 		.ascii	"SVCall_IRQn\000"
 6328      6C6C5F49 
 6328      52516E00 
 6329              	.LASF57:
 6330 0679 5F67616D 		.ascii	"_gamma_signgam\000"
 6330      6D615F73 
 6330      69676E67 
 6330      616D00
 6331              	.LASF308:
 6332 0688 6374726C 		.ascii	"ctrlmode_t\000"
 6332      6D6F6465 
 6332      5F7400
 6333              	.LASF242:
 6334 0693 50574D5F 		.ascii	"PWM_ISR1\000"
 6334      49535231 
 6334      00
 6335              	.LASF250:
 6336 069c 50574D5F 		.ascii	"PWM_ISR2\000"
 6336      49535232 
 6336      00
 6337              	.LASF55:
 6338 06a5 5F637572 		.ascii	"_current_locale\000"
 6338      72656E74 
 6338      5F6C6F63 
 6338      616C6500 
 6339              	.LASF100:
 6340 06b5 5F667265 		.ascii	"_freelist\000"
ARM GAS  /tmp/cchL5NBj.s 			page 154


 6340      656C6973 
 6340      7400
 6341              	.LASF90:
 6342 06bf 5F696F62 		.ascii	"_iobs\000"
 6342      7300
 6343              	.LASF88:
 6344 06c5 5F676C75 		.ascii	"_glue\000"
 6344      6500
 6345              	.LASF333:
 6346 06cb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6346      52784275 
 6346      66666572 
 6346      00
 6347              	.LASF21:
 6348 06d8 5F736967 		.ascii	"_sign\000"
 6348      6E00
 6349              	.LASF312:
 6350 06de 5F646478 		.ascii	"_ddx\000"
 6350      00
 6351              	.LASF307:
 6352 06e3 53544F50 		.ascii	"STOP\000"
 6352      00
 6353              	.LASF195:
 6354 06e8 4144435F 		.ascii	"ADC_IDR\000"
 6354      49445200 
 6355              	.LASF222:
 6356 06f0 50574D5F 		.ascii	"PWM_CDTY\000"
 6356      43445459 
 6356      00
 6357              	.LASF4:
 6358 06f9 756E7369 		.ascii	"unsigned int\000"
 6358      676E6564 
 6358      20696E74 
 6358      00
 6359              	.LASF149:
 6360 0706 5443345F 		.ascii	"TC4_IRQn\000"
 6360      4952516E 
 6360      00
 6361              	.LASF141:
 6362 070f 54574930 		.ascii	"TWI0_IRQn\000"
 6362      5F495251 
 6362      6E00
 6363              	.LASF302:
 6364 0719 5744545F 		.ascii	"WDT_MR\000"
 6364      4D5200
 6365              	.LASF111:
 6366 0720 5F776372 		.ascii	"_wcrtomb_state\000"
 6366      746F6D62 
 6366      5F737461 
 6366      746500
 6367              	.LASF28:
 6368 072f 5F5F746D 		.ascii	"__tm_mday\000"
 6368      5F6D6461 
 6368      7900
 6369              	.LASF194:
 6370 0739 4144435F 		.ascii	"ADC_IER\000"
 6370      49455200 
ARM GAS  /tmp/cchL5NBj.s 			page 155


 6371              	.LASF79:
 6372 0741 5F756275 		.ascii	"_ubuf\000"
 6372      6600
 6373              	.LASF256:
 6374 0747 50574D5F 		.ascii	"PWM_OSCUPD\000"
 6374      4F534355 
 6374      504400
 6375              	.LASF50:
 6376 0752 5F737464 		.ascii	"_stderr\000"
 6376      65727200 
 6377              	.LASF104:
 6378 075a 5F776374 		.ascii	"_wctomb_state\000"
 6378      6F6D625F 
 6378      73746174 
 6378      6500
 6379              	.LASF84:
 6380 0768 5F6D6273 		.ascii	"_mbstate\000"
 6380      74617465 
 6380      00
 6381              	.LASF95:
 6382 0771 5F72616E 		.ascii	"_rand_next\000"
 6382      645F6E65 
 6382      787400
 6383              	.LASF70:
 6384 077c 5F666C61 		.ascii	"_flags\000"
 6384      677300
 6385              	.LASF258:
 6386 0783 50574D5F 		.ascii	"PWM_FSR\000"
 6386      46535200 
 6387              	.LASF39:
 6388 078b 5F617465 		.ascii	"_atexit\000"
 6388      78697400 
 6389              	.LASF13:
 6390 0793 5F5F636F 		.ascii	"__count\000"
 6390      756E7400 
 6391              	.LASF305:
 6392 079b 4E4F524D 		.ascii	"NORMAL\000"
 6392      414C00
 6393              	.LASF31:
 6394 07a2 5F5F746D 		.ascii	"__tm_wday\000"
 6394      5F776461 
 6394      7900
 6395              	.LASF32:
 6396 07ac 5F5F746D 		.ascii	"__tm_yday\000"
 6396      5F796461 
 6396      7900
 6397              	.LASF92:
 6398 07b6 5F736565 		.ascii	"_seed\000"
 6398      6400
 6399              	.LASF77:
 6400 07bc 5F736565 		.ascii	"_seek\000"
 6400      6B00
 6401              	.LASF133:
 6402 07c2 55415254 		.ascii	"UART1_IRQn\000"
 6402      315F4952 
 6402      516E00
 6403              	.LASF336:
ARM GAS  /tmp/cchL5NBj.s 			page 156


 6404 07cd 6E747269 		.ascii	"ntrip\000"
 6404      7000
 6405              	.LASF9:
 6406 07d3 5F66706F 		.ascii	"_fpos_t\000"
 6406      735F7400 
 6407              	.LASF12:
 6408 07db 5F5F7763 		.ascii	"__wchb\000"
 6408      686200
 6409              	.LASF216:
 6410 07e2 4144435F 		.ascii	"ADC_RNCR\000"
 6410      524E4352 
 6410      00
 6411              	.LASF255:
 6412 07eb 50574D5F 		.ascii	"PWM_OSSUPD\000"
 6412      4F535355 
 6412      504400
 6413              	.LASF180:
 6414 07f6 42464152 		.ascii	"BFAR\000"
 6414      00
 6415              	.LASF105:
 6416 07fb 5F6D6274 		.ascii	"_mbtowc_state\000"
 6416      6F77635F 
 6416      73746174 
 6416      6500
 6417              	.LASF218:
 6418 0809 4144435F 		.ascii	"ADC_TNCR\000"
 6418      544E4352 
 6418      00
 6419              	.LASF290:
 6420 0812 54435F49 		.ascii	"TC_IMR\000"
 6420      4D5200
 6421              	.LASF6:
 6422 0819 6C6F6E67 		.ascii	"long long unsigned int\000"
 6422      206C6F6E 
 6422      6720756E 
 6422      7369676E 
 6422      65642069 
 6423              	.LASF243:
 6424 0830 50574D5F 		.ascii	"PWM_SCM\000"
 6424      53434D00 
 6425              	.LASF115:
 6426 0838 75696E74 		.ascii	"uint16_t\000"
 6426      31365F74 
 6426      00
 6427              	.LASF36:
 6428 0841 5F64736F 		.ascii	"_dso_handle\000"
 6428      5F68616E 
 6428      646C6500 
 6429              	.LASF247:
 6430 084d 50574D5F 		.ascii	"PWM_IER2\000"
 6430      49455232 
 6430      00
 6431              	.LASF91:
 6432 0856 5F72616E 		.ascii	"_rand48\000"
 6432      64343800 
 6433              	.LASF203:
 6434 085e 4144435F 		.ascii	"ADC_COR\000"
ARM GAS  /tmp/cchL5NBj.s 			page 157


 6434      434F5200 
 6435              	.LASF140:
 6436 0866 48534D43 		.ascii	"HSMCI_IRQn\000"
 6436      495F4952 
 6436      516E00
 6437              	.LASF49:
 6438 0871 5F737464 		.ascii	"_stdout\000"
 6438      6F757400 
 6439              	.LASF139:
 6440 0879 55534152 		.ascii	"USART1_IRQn\000"
 6440      54315F49 
 6440      52516E00 
 6441              	.LASF81:
 6442 0885 5F626C6B 		.ascii	"_blksize\000"
 6442      73697A65 
 6442      00
 6443              	.LASF44:
 6444 088e 5F626173 		.ascii	"_base\000"
 6444      6500
 6445              	.LASF343:
 6446 0894 5443315F 		.ascii	"TC1_IrqHandler\000"
 6446      49727148 
 6446      616E646C 
 6446      657200
 6447              	.LASF102:
 6448 08a3 5F737472 		.ascii	"_strtok_last\000"
 6448      746F6B5F 
 6448      6C617374 
 6448      00
 6449              	.LASF151:
 6450 08b0 4144435F 		.ascii	"ADC_IRQn\000"
 6450      4952516E 
 6450      00
 6451              	.LASF109:
 6452 08b9 5F6D6272 		.ascii	"_mbrtowc_state\000"
 6452      746F7763 
 6452      5F737461 
 6452      746500
 6453              	.LASF262:
 6454 08c8 50574D5F 		.ascii	"PWM_ELxMR\000"
 6454      454C784D 
 6454      5200
 6455              	.LASF214:
 6456 08d2 4144435F 		.ascii	"ADC_TCR\000"
 6456      54435200 
 6457              	.LASF160:
 6458 08da 49434552 		.ascii	"ICER\000"
 6458      00
 6459              	.LASF16:
 6460 08df 5F666C6F 		.ascii	"_flock_t\000"
 6460      636B5F74 
 6460      00
 6461              	.LASF326:
 6462 08e8 7463636C 		.ascii	"tcclks\000"
 6462      6B7300
 6463              	.LASF87:
 6464 08ef 5F5F4649 		.ascii	"__FILE\000"
ARM GAS  /tmp/cchL5NBj.s 			page 158


 6464      4C4500
 6465              	.LASF15:
 6466 08f6 5F6D6273 		.ascii	"_mbstate_t\000"
 6466      74617465 
 6466      5F7400
 6467              	.LASF132:
 6468 0901 55415254 		.ascii	"UART0_IRQn\000"
 6468      305F4952 
 6468      516E00
 6469              	.LASF60:
 6470 090c 5F723438 		.ascii	"_r48\000"
 6470      00
 6471              	.LASF235:
 6472 0911 50574D5F 		.ascii	"PWM_CLK\000"
 6472      434C4B00 
 6473              	.LASF10:
 6474 0919 77696E74 		.ascii	"wint_t\000"
 6474      5F7400
 6475              	.LASF181:
 6476 0920 41465352 		.ascii	"AFSR\000"
 6476      00
 6477              	.LASF187:
 6478 0925 4144435F 		.ascii	"ADC_SEQR1\000"
 6478      53455152 
 6478      3100
 6479              	.LASF188:
 6480 092f 4144435F 		.ascii	"ADC_SEQR2\000"
 6480      53455152 
 6480      3200
 6481              	.LASF19:
 6482 0939 5F6E6578 		.ascii	"_next\000"
 6482      7400
 6483              	.LASF73:
 6484 093f 5F646174 		.ascii	"_data\000"
 6484      6100
 6485              	.LASF234:
 6486 0945 50776D43 		.ascii	"PwmCmp\000"
 6486      6D7000
 6487              	.LASF143:
 6488 094c 5350495F 		.ascii	"SPI_IRQn\000"
 6488      4952516E 
 6488      00
 6489              	.LASF328:
 6490 0955 696E6974 		.ascii	"init\000"
 6490      00
 6491              	.LASF138:
 6492 095a 55534152 		.ascii	"USART0_IRQn\000"
 6492      54305F49 
 6492      52516E00 
 6493              	.LASF192:
 6494 0966 52657365 		.ascii	"Reserved1\000"
 6494      72766564 
 6494      3100
 6495              	.LASF198:
 6496 0970 52657365 		.ascii	"Reserved2\000"
 6496      72766564 
 6496      3200
ARM GAS  /tmp/cchL5NBj.s 			page 159


 6497              	.LASF176:
 6498 097a 43465352 		.ascii	"CFSR\000"
 6498      00
 6499              	.LASF207:
 6500 097f 52657365 		.ascii	"Reserved4\000"
 6500      72766564 
 6500      3400
 6501              	.LASF210:
 6502 0989 52657365 		.ascii	"Reserved5\000"
 6502      72766564 
 6502      3500
 6503              	.LASF276:
 6504 0993 52657365 		.ascii	"Reserved6\000"
 6504      72766564 
 6504      3600
 6505              	.LASF145:
 6506 099d 5443305F 		.ascii	"TC0_IRQn\000"
 6506      4952516E 
 6506      00
 6507              	.LASF303:
 6508 09a6 5744545F 		.ascii	"WDT_SR\000"
 6508      535200
 6509              	.LASF136:
 6510 09ad 50494F42 		.ascii	"PIOB_IRQn\000"
 6510      5F495251 
 6510      6E00
 6511              	.LASF283:
 6512 09b7 54435F43 		.ascii	"TC_CV\000"
 6512      5600
 6513              	.LASF274:
 6514 09bd 50574D5F 		.ascii	"PWM_PTCR\000"
 6514      50544352 
 6514      00
 6515              	.LASF335:
 6516 09c6 6C6F6F70 		.ascii	"loop\000"
 6516      00
 6517              	.LASF122:
 6518 09cb 44656275 		.ascii	"DebugMonitor_IRQn\000"
 6518      674D6F6E 
 6518      69746F72 
 6518      5F495251 
 6518      6E00
 6519              	.LASF342:
 6520 09dd 2F686F6D 		.ascii	"/home/mo/doc/studium/aktuell/Diplomarbeit/code\000"
 6520      652F6D6F 
 6520      2F646F63 
 6520      2F737475 
 6520      6469756D 
 6521              	.LASF296:
 6522 0a0c 54435F51 		.ascii	"TC_QIDR\000"
 6522      49445200 
 6523              	.LASF277:
 6524 0a14 50574D5F 		.ascii	"PWM_CMP\000"
 6524      434D5000 
 6525              	.LASF221:
 6526 0a1c 50574D5F 		.ascii	"PWM_CMR\000"
 6526      434D5200 
ARM GAS  /tmp/cchL5NBj.s 			page 160


 6527              	.LASF182:
 6528 0a24 4D4D4652 		.ascii	"MMFR\000"
 6528      00
 6529              	.LASF339:
 6530 0a29 64786D61 		.ascii	"dxmax\000"
 6530      7800
 6531              	.LASF179:
 6532 0a2f 4D4D4641 		.ascii	"MMFAR\000"
 6532      5200
 6533              	.LASF103:
 6534 0a35 5F6D626C 		.ascii	"_mblen_state\000"
 6534      656E5F73 
 6534      74617465 
 6534      00
 6535              	.LASF2:
 6536 0a42 73686F72 		.ascii	"short int\000"
 6536      7420696E 
 6536      7400
 6537              	.LASF310:
 6538 0a4c 6D6F6465 		.ascii	"mode\000"
 6538      00
 6539              	.LASF320:
 6540 0a51 7072696F 		.ascii	"priority\000"
 6540      72697479 
 6540      00
 6541              	.LASF114:
 6542 0a5a 696E7431 		.ascii	"int16_t\000"
 6542      365F7400 
 6543              	.LASF295:
 6544 0a62 54435F51 		.ascii	"TC_QIER\000"
 6544      49455200 
 6545              	.LASF183:
 6546 0a6a 49534152 		.ascii	"ISAR\000"
 6546      00
 6547              	.LASF199:
 6548 0a6f 4144435F 		.ascii	"ADC_OVER\000"
 6548      4F564552 
 6548      00
 6549              	.LASF37:
 6550 0a78 5F666E74 		.ascii	"_fntypes\000"
 6550      79706573 
 6550      00
 6551              	.LASF135:
 6552 0a81 50494F41 		.ascii	"PIOA_IRQn\000"
 6552      5F495251 
 6552      6E00
 6553              	.LASF227:
 6554 0a8b 50574D5F 		.ascii	"PWM_DT\000"
 6554      445400
 6555              	.LASF30:
 6556 0a92 5F5F746D 		.ascii	"__tm_year\000"
 6556      5F796561 
 6556      7200
 6557              	.LASF196:
 6558 0a9c 4144435F 		.ascii	"ADC_IMR\000"
 6558      494D5200 
 6559              	.LASF185:
ARM GAS  /tmp/cchL5NBj.s 			page 161


 6560 0aa4 4144435F 		.ascii	"ADC_CR\000"
 6560      435200
 6561              	.LASF72:
 6562 0aab 5F6C6266 		.ascii	"_lbfsize\000"
 6562      73697A65 
 6562      00
 6563              	.LASF51:
 6564 0ab4 5F696E63 		.ascii	"_inc\000"
 6564      00
 6565              	.LASF40:
 6566 0ab9 5F696E64 		.ascii	"_ind\000"
 6566      00
 6567              	.LASF219:
 6568 0abe 4144435F 		.ascii	"ADC_PTCR\000"
 6568      50544352 
 6568      00
 6569              	.LASF300:
 6570 0ac7 54435F57 		.ascii	"TC_WPMR\000"
 6570      504D5200 
 6571              	.LASF237:
 6572 0acf 50574D5F 		.ascii	"PWM_DIS\000"
 6572      44495300 
 6573              	.LASF233:
 6574 0ad7 50574D5F 		.ascii	"PWM_CMPxMUPD\000"
 6574      434D5078 
 6574      4D555044 
 6574      00
 6575              	.LASF43:
 6576 0ae4 5F5F7362 		.ascii	"__sbuf\000"
 6576      756600
 6577              	.LASF38:
 6578 0aeb 5F69735F 		.ascii	"_is_cxa\000"
 6578      63786100 
 6579              	.LASF225:
 6580 0af3 50574D5F 		.ascii	"PWM_CPRDUPD\000"
 6580      43505244 
 6580      55504400 
 6581              	.LASF340:
 6582 0aff 474E5520 		.ascii	"GNU C 4.6.1\000"
 6582      4320342E 
 6582      362E3100 
 6583              	.LASF96:
 6584 0b0b 5F6D7072 		.ascii	"_mprec\000"
 6584      656300
 6585              	.LASF324:
 6586 0b12 73746174 		.ascii	"status\000"
 6586      757300
 6587              	.LASF67:
 6588 0b19 5F6D6973 		.ascii	"_misc\000"
 6588      6300
 6589              	.LASF17:
 6590 0b1f 5F5F554C 		.ascii	"__ULong\000"
 6590      6F6E6700 
 6591              	.LASF224:
 6592 0b27 50574D5F 		.ascii	"PWM_CPRD\000"
 6592      43505244 
 6592      00
ARM GAS  /tmp/cchL5NBj.s 			page 162


 6593              	.LASF144:
 6594 0b30 5353435F 		.ascii	"SSC_IRQn\000"
 6594      4952516E 
 6594      00
 6595              	.LASF232:
 6596 0b39 50574D5F 		.ascii	"PWM_CMPxM\000"
 6596      434D5078 
 6596      4D00
 6597              	.LASF116:
 6598 0b43 75696E74 		.ascii	"uint32_t\000"
 6598      33325F74 
 6598      00
 6599              	.LASF230:
 6600 0b4c 50574D5F 		.ascii	"PWM_CMPxV\000"
 6600      434D5078 
 6600      5600
 6601              	.LASF97:
 6602 0b56 5F726573 		.ascii	"_result\000"
 6602      756C7400 
 6603              	.LASF206:
 6604 0b5e 4144435F 		.ascii	"ADC_ACR\000"
 6604      41435200 
 6605              	.LASF282:
 6606 0b66 54435F53 		.ascii	"TC_SMMR\000"
 6606      4D4D5200 
 6607              	.LASF190:
 6608 0b6e 4144435F 		.ascii	"ADC_CHDR\000"
 6608      43484452 
 6608      00
 6609              	.LASF266:
 6610 0b77 50574D5F 		.ascii	"PWM_RPR\000"
 6610      52505200 
 6611              	.LASF94:
 6612 0b7f 5F616464 		.ascii	"_add\000"
 6612      00
 6613              	.LASF3:
 6614 0b84 73686F72 		.ascii	"short unsigned int\000"
 6614      7420756E 
 6614      7369676E 
 6614      65642069 
 6614      6E7400
 6615              	.LASF208:
 6616 0b97 4144435F 		.ascii	"ADC_WPMR\000"
 6616      57504D52 
 6616      00
 6617              	.LASF27:
 6618 0ba0 5F5F746D 		.ascii	"__tm_hour\000"
 6618      5F686F75 
 6618      7200
 6619              	.LASF123:
 6620 0baa 50656E64 		.ascii	"PendSV_IRQn\000"
 6620      53565F49 
 6620      52516E00 
 6621              	.LASF110:
 6622 0bb6 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 6622      72746F77 
 6622      63735F73 
ARM GAS  /tmp/cchL5NBj.s 			page 163


 6622      74617465 
 6622      00
 6623              	.LASF293:
 6624 0bc7 54435F42 		.ascii	"TC_BCR\000"
 6624      435200
 6625              	.LASF148:
 6626 0bce 5443335F 		.ascii	"TC3_IRQn\000"
 6626      4952516E 
 6626      00
 6627              	.LASF189:
 6628 0bd7 4144435F 		.ascii	"ADC_CHER\000"
 6628      43484552 
 6628      00
 6629              	.LASF158:
 6630 0be0 49534552 		.ascii	"ISER\000"
 6630      00
 6631              	.LASF35:
 6632 0be5 5F666E61 		.ascii	"_fnargs\000"
 6632      72677300 
 6633              	.LASF201:
 6634 0bed 4144435F 		.ascii	"ADC_CWR\000"
 6634      43575200 
 6635              	.LASF33:
 6636 0bf5 5F5F746D 		.ascii	"__tm_isdst\000"
 6636      5F697364 
 6636      737400
 6637              	.LASF228:
 6638 0c00 50574D5F 		.ascii	"PWM_DTUPD\000"
 6638      44545550 
 6638      4400
 6639              	.LASF26:
 6640 0c0a 5F5F746D 		.ascii	"__tm_min\000"
 6640      5F6D696E 
 6640      00
 6641              	.LASF244:
 6642 0c13 50574D5F 		.ascii	"PWM_SCUC\000"
 6642      53435543 
 6642      00
 6643              	.LASF107:
 6644 0c1c 5F676574 		.ascii	"_getdate_err\000"
 6644      64617465 
 6644      5F657272 
 6644      00
 6645              	.LASF127:
 6646 0c29 5254435F 		.ascii	"RTC_IRQn\000"
 6646      4952516E 
 6646      00
 6647              		.ident	"GCC: (Sourcery CodeBench Lite 2011.09-69) 4.6.1"
ARM GAS  /tmp/cchL5NBj.s 			page 164


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cchL5NBj.s:19     .text.NVIC_EnableIRQ:00000000 $t
     /tmp/cchL5NBj.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/cchL5NBj.s:62     .text.NVIC_SetPriority:00000000 $t
     /tmp/cchL5NBj.s:66     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
     /tmp/cchL5NBj.s:128    .bss:00000000 input
     /tmp/cchL5NBj.s:125    .bss:00000000 $d
     /tmp/cchL5NBj.s:134    .data:00000000 _state
     /tmp/cchL5NBj.s:141    .bss:00000004 loop
     /tmp/cchL5NBj.s:148    .data:00000004 ntrip
     /tmp/cchL5NBj.s:145    .data:00000001 $d
     /tmp/cchL5NBj.s:157    .data:00000014 rtrip
     /tmp/cchL5NBj.s:166    .data:00000024 releasetime
     /tmp/cchL5NBj.s:172    .data:00000028 dxmax
     /tmp/cchL5NBj.s:175    .rodata:00000000 $d
     /tmp/cchL5NBj.s:176    .rodata:00000000 .LC0
     /tmp/cchL5NBj.s:179    .rodata:00000018 .LC1
     /tmp/cchL5NBj.s:182    .rodata:00000044 .LC2
     /tmp/cchL5NBj.s:185    .text.main:00000000 $t
     /tmp/cchL5NBj.s:190    .text.main:00000000 main
     /tmp/cchL5NBj.s:641    .text.init:00000000 init
     /tmp/cchL5NBj.s:1098   .text.cli:00000000 cli
     /tmp/cchL5NBj.s:302    .text.main:000000fc $d
     /tmp/cchL5NBj.s:312    .text.main:0000011c $t
     /tmp/cchL5NBj.s:874    .text.state:00000000 state
     /tmp/cchL5NBj.s:458    .text.TC1_IrqHandler:00000000 $t
     /tmp/cchL5NBj.s:463    .text.TC1_IrqHandler:00000000 TC1_IrqHandler
     /tmp/cchL5NBj.s:495    .text.ADC_IrqHandler:00000000 $t
     /tmp/cchL5NBj.s:500    .text.ADC_IrqHandler:00000000 ADC_IrqHandler
     /tmp/cchL5NBj.s:637    .text.init:00000000 $t
     /tmp/cchL5NBj.s:855    .rodata:00000060 .LC3
     /tmp/cchL5NBj.s:858    .rodata:00000078 .LC4
     /tmp/cchL5NBj.s:861    .rodata:0000008c .LC5
     /tmp/cchL5NBj.s:864    .rodata:000000a0 .LC6
     /tmp/cchL5NBj.s:867    .rodata:000000b8 .LC7
     /tmp/cchL5NBj.s:870    .text.state:00000000 $t
     /tmp/cchL5NBj.s:902    .text.state:0000001c $d
     /tmp/cchL5NBj.s:912    .text.state:0000003c $t
     /tmp/cchL5NBj.s:1049   .rodata:000000d0 .LC8
     /tmp/cchL5NBj.s:1052   .rodata:000000dc .LC9
     /tmp/cchL5NBj.s:1055   .rodata:000000f4 .LC10
     /tmp/cchL5NBj.s:1058   .rodata:00000114 .LC11
     /tmp/cchL5NBj.s:1061   .rodata:00000118 .LC12
     /tmp/cchL5NBj.s:1064   .rodata:00000134 .LC13
     /tmp/cchL5NBj.s:1067   .rodata:00000138 .LC14
     /tmp/cchL5NBj.s:1070   .rodata:0000015c .LC15
     /tmp/cchL5NBj.s:1073   .rodata:00000168 .LC16
     /tmp/cchL5NBj.s:1076   .rodata:00000184 .LC17
     /tmp/cchL5NBj.s:1079   .rodata:0000019c .LC18
     /tmp/cchL5NBj.s:1082   .rodata:000001a4 .LC19
     /tmp/cchL5NBj.s:1085   .rodata:000001a8 .LC20
     /tmp/cchL5NBj.s:1088   .rodata:000001b0 .LC21
     /tmp/cchL5NBj.s:1091   .rodata:000001c8 .LC22
     /tmp/cchL5NBj.s:1094   .text.cli:00000000 $t
     /tmp/cchL5NBj.s:1167   .text.cli:00000090 $d
     /tmp/cchL5NBj.s:1177   .text.cli:000000b0 $t
ARM GAS  /tmp/cchL5NBj.s 			page 165


                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_impure_ptr
fiprintf
USBC_isConfigured
LED_blink
setbuf
GetTickCount
ADC_ReadBuffer
control
PWMC_SetDutyCycle
PMC_EnablePeripheral
TC_FindMckDivisor
TC_Configure
TC_Start
ADC_Initialize
ADC_cfgFrequency
PWMC_ConfigureClocks
PWMC_ConfigureChannelExt
PWMC_SetPeriod
PWMC_ConfigureSyncChannel
PWMC_SetSyncChannelUpdatePeriod
TimeTick_Configure
LEDs_configure
LED_clr
USBC_Configure
mode
USBC_hasData
gets
siscanf
iprintf
puts
